begin_compilation
  name " HotSpotCompilation-208[java.util.HashMap.putVal(int, Object, Object, boolean, boolean)]"
  method "HotSpotCompilation-208[java.util.HashMap.putVal(int, Object, Object, boolean, boolean)]"
  date 1714038188973
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a1138 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: a1138  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a! java.util.HashMap
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?7 v1188 v420 ?21 ?28 ?655 v1207 v1223 ?58 ?229 v346 ?645 ?85 v1208 v419 ?112 ?648 v377 ?183 ?649 v384 ?650 ?137 ?651 ?652 v396 ?643 v1206 ?223 ?653 v306 ?254 v1209 v418 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1188 <|@
d <@d|@=== Debug Properties ===
displacement: 36
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a1138 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1138 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.HashMap$Node[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: HashMap.table
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:634) [bci: 1]
stamp: n java.util.HashMap$Node[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1188 
lastLocationAccess: - 
=== Succesors ===
next: v13 
=== Usages ===
a287 v426 v1213 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1188 lastLocationAccess: - #next: v13  <|@  <|@
f <@~|@floating>@ <|@
tid v426 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:634) [bci: 12]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a1138 
=== Succesors ===
=== Usages ===
v13 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a1138  <|@  <|@
f <@~|@floating>@ <|@
tid i15 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:634) [bci: 16]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v16 v59 i84 v113 v146 v245 v255 i552 v734 v782 ?58 ?112 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a9 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:634) [bci: 7]
rawvalue: null
stableDimension: 0
stamp: a java.lang.Object NULL
stampKind: a java.lang.Object
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v305 v377 v187 ?223 ?21 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?7 ?21 ?28 i32 v305 v45 ?58 v346 ?85 ?649 v97 ?112 v377 ?650 ?651 v384 v511 ?223 ?645 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a3 <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: a java.lang.Object
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?7 ?21 ?28 v305 v50 v369 v1252 ?58 v346 ?85 ?650 v102 v342 ?112 v377 a513 ?223 ?645 ?649 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a4 <|@
d <@d|@=== Debug Properties ===
index: 3
stamp: a java.lang.Object
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?7 ?21 ?28 v305 ?58 a397 v346 ?223 ?85 ?645 ?648 ?112 ?649 v377 ?650 ?651 ?652 ?137 a1069 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i5 <|@
d <@d|@=== Debug Properties ===
index: 4
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?7 ?21 ?28 ?58 v146 ?137 ?85 ?645 ?648 ?112 ?649 ?650 ?651 ?652 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i6 <|@
d <@d|@=== Debug Properties ===
index: 5
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?7 ?21 ?28 ?653 ?645 ?58 v245 ?648 ?85 ?183 ?229 ?112 ?649 ?650 ?651 ?652 ?137 ?643 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v13 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:634) [bci: 7]
profileData: PROFILED designatedSuccessorProbability: 0.0015880438063265454
stamp: void
=== Inputs ===
condition: v426 
=== Succesors ===
trueSuccessor: v12 
falseSuccessor: v11 
=== Usages ===
=== Predecessor ===
a1138 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v426 #trueSuccessor: v12 #falseSuccessor: v11  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 4564966382317228292
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:635) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: a20 
=== Usages ===
=== Predecessor ===
v13 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a20  <|@  <|@
tid v420 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:635) [bci: 20]
referencedType: [null]
returnStamp: a java.util.HashMap$Node[]
signature: [HotSpotType<Ljava/util/HashMap;, resolved>]
stamp: void
targetMethod: HotSpotMethod<HashMap.resize()>
=== Inputs ===
arguments: a1 
=== Succesors ===
=== Usages ===
a20 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1  <|@  <|@
tid ?645 <|@
d <@d|@=== Debug Properties ===
bci: 20
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
localsSize: 13
locksSize: 0
sourceFile: HashMap.java
sourceLine: 635
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i2 a3 a4 i5 i6 
=== Succesors ===
=== Usages ===
a20 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 a3 a4 i5 i6  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a20 <|@
d <@d|@=== Debug Properties ===
bci: 20
identity: ANY_LOCATION
inlineControl: Normal
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:635) [bci: 20]
polymorphic: false
stamp: a java.util.HashMap$Node[]
targetMethod: Direct#HashMap.resize
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v420 
stateDuring: ?645 
=== Succesors ===
next: i1139 
=== Usages ===
a26 v1212 
=== Predecessor ===
v12 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v420 stateDuring: ?645 #next: i1139  <|@  <|@
tid ?21 <|@
d <@d|@=== Debug Properties ===
bci: 23
bytecode: dup
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
localsSize: 13
locksSize: 0
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:635) [bci: 20]
sourceFile: HashMap.java
sourceLine: 635
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a9 a1 i2 a3 a4 i5 i6 
=== Succesors ===
=== Usages ===
i1139 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a9 a1 i2 a3 a4 i5 i6  <|@  <|@
f <@~|@floating>@ <|@
tid v1212 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a20 
index: - 
=== Succesors ===
=== Usages ===
i1139 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a20 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1139 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-108043|0xfffffffffffe59f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:635) [bci: 26]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?21 
guard: - 
address: v1212 
lastLocationAccess: - 
=== Succesors ===
next: v25 
=== Usages ===
i27 
=== Predecessor ===
a20 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?21 guard: - address: v1212 lastLocationAccess: - #next: v25  <|@  <|@
f <@*|@fixed>@ <|@
tid v25 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v24 
=== Predecessor ===
i1139 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607168114973028567
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v11 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:634) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1140 
=== Usages ===
=== Predecessor ===
v13 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i1140  <|@  <|@
f <@~|@floating>@ <|@
tid v1213 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a1138 
=== Succesors ===
=== Usages ===
i1140 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1138  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1140 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:634) [bci: 12]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1213 
lastLocationAccess: - 
=== Succesors ===
next: v508 
=== Usages ===
v16 i27 
=== Predecessor ===
v11 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1213 lastLocationAccess: - #next: v508  <|@  <|@
f <@~|@floating>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:634) [bci: 16]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1140 
y: i15 
=== Succesors ===
=== Usages ===
v508 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i1140 y: i15  <|@  <|@
f <@*|@fixed>@ <|@
tid v508 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:634) [bci: 16]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v16 
=== Succesors ===
trueSuccessor: v506 
falseSuccessor: v507 
=== Usages ===
=== Predecessor ===
i1140 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v16 #trueSuccessor: v506 #falseSuccessor: v507  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v506 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:634) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v505 
=== Usages ===
=== Predecessor ===
v508 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v505  <|@  <|@
tid ?7 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_0
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
localsSize: 13
locksSize: 0
sourceFile: HashMap.java
sourceLine: 634
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i2 a3 a4 i5 i6 
=== Succesors ===
=== Usages ===
v505 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 a3 a4 i5 i6  <|@  <|@
f <@*|@fixed>@ <|@
tid v505 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 0
mayConvertToGuard: true
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:634) [bci: 16]
reason: UnreachedCode
speculation: {0x0000000000000014[index: 0, len: 20, hash: 0x5bfbb57b]: UnreachedCode@5[HotSpotMethod<HashMap.putVal(int, Object, Object, boolean, boolean)>, 19]}
stamp: void
=== Inputs ===
stateBefore: ?7 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v506 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?7  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607168114973028567
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v507 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: v23 
=== Usages ===
=== Predecessor ===
v508 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v23  <|@  <|@
f <@~|@floating>@ <|@
tid a287 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:634) [bci: 1]
op: Uncompress
stamp: a java.util.HashMap$Node[]
=== Inputs ===
value: a1138 
=== Succesors ===
=== Usages ===
a26 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1138  <|@  <|@
f <@*|@fixed>@ <|@
tid v23 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v24 
=== Predecessor ===
v507 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B1" 
    successors "B6" "B121" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a26 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
stamp: a java.util.HashMap$Node[]
valueDescription: a java.lang.Object
=== Inputs ===
merge: v24 
values: a287 a20 
=== Succesors ===
=== Usages ===
?28 v1241 ?643 v1190 ?58 v346 ?85 ?651 ?112 ?649 ?650 v384 ?229 v1189 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v24 values: a287 a20  <|@  <|@
f <@~|@floating>@ <|@
tid i27 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
valueDescription: i32
=== Inputs ===
merge: v24 
values: i1140 i1139 
=== Succesors ===
=== Usages ===
?28 i31 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v24 values: i1140 i1139  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v24 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v23 v25 
=== Succesors ===
next: i1141 
=== Usages ===
a26 i27 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v23 v25 #next: i1141  <|@  <|@
f <@~|@floating>@ <|@
tid v1189 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a26 
index: - 
=== Succesors ===
=== Usages ===
i1141 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a26 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1141 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:636) [bci: 40]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1189 
lastLocationAccess: - 
=== Succesors ===
next: v1142 
=== Usages ===
v308 
=== Predecessor ===
v24 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1189 lastLocationAccess: - #next: v1142  <|@  <|@
f <@~|@floating>@ <|@
tid v1241 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: a26 
index: - 
=== Succesors ===
=== Usages ===
v1142 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a26 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1142 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140436756758528 shift: 0)
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: Klass*!(compressed base: 140436756758528 shift: 0)
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1241 
lastLocationAccess: - 
=== Succesors ===
next: v483 
=== Usages ===
v799 
=== Predecessor ===
i1141 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1241 lastLocationAccess: - #next: v483  <|@  <|@
f <@~|@floating>@ <|@
tid i30 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:636) [bci: 34]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1]
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i31 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i31 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:636) [bci: 34]
stamp: i32 [-1 - 2147483646]
=== Inputs ===
x: i27 
y: i30 
=== Succesors ===
=== Usages ===
i32 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i27 y: i30  <|@  <|@
f <@~|@floating>@ <|@
tid i32 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:636) [bci: 36]
stamp: i32
=== Inputs ===
x: i2 
y: i31 
=== Succesors ===
=== Usages ===
v1190 ?643 v308 ?229 
=== Predecessor ===
- >@ <|@
instruction <@&|@jdk.graal.compiler.nodes.calc.AndNode>@ x: i2 y: i31  <|@  <|@
f <@~|@floating>@ <|@
tid v308 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@40aab068
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i32 
y: i1141 
=== Succesors ===
=== Usages ===
v483 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i32 y: i1141  <|@  <|@
tid ?28 <|@
d <@d|@=== Debug Properties ===
bci: 29
bytecode: aload
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
localsSize: 13
locksSize: 0
sourceFile: HashMap.java
sourceLine: 636
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i2 a3 a4 i5 i6 a26 - i27 
=== Succesors ===
=== Usages ===
v662 v1183 v1185 a711 a760 v1150 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 a3 a4 i5 i6 a26 - i27  <|@  <|@
f <@~|@floating>@ <|@
tid j570 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:95) [bci: 41]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:83) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
rawvalue: 0
stableDimension: 0
stamp: i64 [0]
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v877 v1094 j661 v980 v1076 v1041 v735 v736 v945 v783 v784 v785 v998 v819 v857 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v483 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:636) [bci: 40]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v308 
=== Succesors ===
trueSuccessor: v480 
falseSuccessor: v482 
=== Usages ===
=== Predecessor ===
v1142 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v308 #trueSuccessor: v480 #falseSuccessor: v482  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B48" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v480 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:636) [bci: 40]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1143 
=== Usages ===
v323 
=== Predecessor ===
v483 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a1143  <|@  <|@
f <@~|@floating>@ <|@
tid v1190 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a26 
index: i32 
=== Succesors ===
=== Usages ===
a1143 v323 j806 j851 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a26 index: i32  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1143 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.HashMap$Node
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:636) [bci: 40]
stamp: n java.util.HashMap$Node
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1190 
lastLocationAccess: - 
=== Succesors ===
next: v1144 
=== Usages ===
a304 v325 v1192 v1193 v1253 
=== Predecessor ===
v480 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1190 lastLocationAccess: - #next: v1144  <|@  <|@
f <@~|@floating>@ <|@
tid v1223 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v1144 v1160 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1144 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140436756758528 shift: 0)
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
stamp: Klass*!(compressed base: 140436756758528 shift: 0)
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1223 
lastLocationAccess: - 
=== Succesors ===
next: v37 
=== Usages ===
v697 
=== Predecessor ===
a1143 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1223 lastLocationAccess: - #next: v37  <|@  <|@
f <@~|@floating>@ <|@
tid v697 <|@
d <@d|@=== Debug Properties ===
encoding: base: 140436756758528 shift: 0
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v1144 
=== Succesors ===
=== Usages ===
v204 v241 v1201 v1204 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v1144  <|@  <|@
f <@~|@floating>@ <|@
tid v325 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:640) [bci: 65]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a1143 
=== Succesors ===
=== Usages ===
v37 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a1143  <|@  <|@
f <@~|@floating>@ <|@
tid i29 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:636) [bci: 33]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i119 i165 i169 i566 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i901 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:227) [bci: 265] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
rawvalue: 2
stableDimension: 0
stamp: i8 [2]
stampKind: i8
value: byte[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
v902 v1019 v1115 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i865 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.cardTableAddress(HotSpotG1WriteBarrierSnippets.java:130) [bci: 16]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 232] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
rawvalue: 9
stableDimension: 0
stamp: i32 [9]
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j866 j987 j1083 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j864 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableStart(GraalHotSpotVMConfig) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.cardTableAddress(HotSpotG1WriteBarrierSnippets.java:129) [bci: 3]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 232] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
rawvalue: 140438306553856
stableDimension: 0
stamp: i64 [140438306553856]
stampKind: i64
value: long[140438306553856|0x7fba57600000]
=== Inputs ===
=== Succesors ===
=== Usages ===
j889 v1251 j1009 v1262 j1105 v1271 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j887 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:215) [bci: 193] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
rawvalue: -4194304
stableDimension: 0
stamp: i64 [-4194304]
stampKind: i64
value: long[-4194304|0xffffffffffc00000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v888 v1008 v1104 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j831 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
rawvalue: -8
stableDimension: 0
stamp: i64 [-8]
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j832 j893 j956 j1011 j1052 j1107 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i840 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
rawvalue: 0
stableDimension: 0
stamp: i8 [0]
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v841 v896 v903 v964 v1014 v1020 v1060 v1110 v1116 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a397 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
op: Compress
stamp: n java.lang.Object
=== Inputs ===
value: a4 
=== Succesors ===
=== Usages ===
v398 v516 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a4  <|@  <|@
f <@*|@fixed>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:636) [bci: 44]
profileData: PROFILED designatedSuccessorProbability: 0.8229115724385652
stamp: void
=== Inputs ===
condition: v325 
=== Succesors ===
trueSuccessor: v36 
falseSuccessor: v35 
=== Usages ===
=== Predecessor ===
v1144 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v325 #trueSuccessor: v36 #falseSuccessor: v35  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B12" "B47" 
    xhandlers
    flags 
    probability 4605587348047262798
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v36 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:637) [bci: 47]
stamp: void
=== Inputs ===
=== Succesors ===
next: v204 
=== Usages ===
=== Predecessor ===
v37 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v204  <|@  <|@
f <@~|@floating>@ <|@
tid j707 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.defaultPrototypeMarkWord(GraalHotSpotVMConfig) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:431) [bci: 9]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:271) [bci: 4]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.HashMap.newNode(HashMap.java:1909) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
rawvalue: 1
stableDimension: 0
stamp: i64 [1]
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v730 v778 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v204 <|@
d <@d|@=== Debug Properties ===
hubs: [meta{HotSpotType<Ljava/util/HashMap;, resolved>}, meta{HotSpotType<Ljava/util/LinkedHashMap;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/replacements/SnippetTemplate$LRUCache;, resolved>}]
keySuccessors: [I@491877b6
keys: [HotSpotType<Ljava/util/HashMap;, resolved>, HotSpotType<Ljava/util/LinkedHashMap;, resolved>, HotSpotType<Ljdk/graal/compiler/replacements/SnippetTemplate$LRUCache;, resolved>]
profileData: PROFILED keyProbabilities: [0.9996916924042274, 3.07562119720685E-4, 7.45476051954569E-7, 0.0]
stamp: void
=== Inputs ===
value: v697 
=== Succesors ===
successors: v194 v199 v202 
=== Usages ===
=== Predecessor ===
v36 >@ <|@
instruction <@TypeSwitch|@jdk.graal.compiler.nodes.java.TypeSwitchNode>@ value: v697 #successors: v194 v199 v202  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4605585062831744793
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v194 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: v746 
=== Usages ===
=== Predecessor ===
v204 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v746  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v746 <|@
d <@d|@=== Debug Properties ===
locations: [MarkWord, Hub:write, TlabTop, TlabEnd, PrototypeMarkWord]
nodeSourcePosition: at java.util.HashMap.newNode(HashMap.java:1909) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: void
=== Inputs ===
=== Succesors ===
next: j699 
=== Usages ===
=== Predecessor ===
v194 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j699  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j699 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getThread(HotSpotAllocationSnippets.java:472) [bci: 4]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getTLABInfo(HotSpotAllocationSnippets.java:468) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:58) [bci: 1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.HashMap.newNode(HashMap.java:1909) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j727 
=== Usages ===
v1224 v1225 
=== Predecessor ===
v746 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j727  <|@  <|@
f <@~|@floating>@ <|@
tid v1224 <|@
d <@d|@=== Debug Properties ===
displacement: 440
stamp: void*
stride: S1
=== Inputs ===
base: j699 
index: - 
=== Succesors ===
=== Usages ===
j727 v729 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j699 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j727 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:255) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabTop(HotSpotAllocationSnippets.java:482) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:59) [bci: 9]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.HashMap.newNode(HashMap.java:1909) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1224 
lastLocationAccess: - 
=== Succesors ===
next: j728 
=== Usages ===
j702 v1226 v1227 a710 v1228 v1229 v1230 v1231 
=== Predecessor ===
j699 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1224 lastLocationAccess: - #next: j728  <|@  <|@
f <@~|@floating>@ <|@
tid v1225 <|@
d <@d|@=== Debug Properties ===
displacement: 456
stamp: void*
stride: S1
=== Inputs ===
base: j699 
index: - 
=== Succesors ===
=== Usages ===
j728 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j699 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j728 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabEnd
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:259) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabEnd(HotSpotAllocationSnippets.java:477) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:60) [bci: 17]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.HashMap.newNode(HashMap.java:1909) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1225 
lastLocationAccess: - 
=== Succesors ===
next: v706 
=== Usages ===
v703 
=== Predecessor ===
j727 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1225 lastLocationAccess: - #next: v706  <|@  <|@
f <@~|@floating>@ <|@
tid j573 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:98) [bci: 86]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:83) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
rawvalue: 32
stableDimension: 0
stamp: i64 [32]
stampKind: i64
value: long[32|0x20]
=== Inputs ===
=== Succesors ===
=== Usages ===
j702 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j702 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:61) [bci: 25]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.HashMap.newNode(HashMap.java:1909) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: i64
=== Inputs ===
x: j727 
y: j573 
=== Succesors ===
=== Usages ===
v703 v729 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j727 y: j573  <|@  <|@
f <@~|@floating>@ <|@
tid v703 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:62) [bci: 63]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.HashMap.newNode(HashMap.java:1909) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@40aab068
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j728 
y: j702 
=== Succesors ===
=== Usages ===
v706 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j728 y: j702  <|@  <|@
f <@*|@fixed>@ <|@
tid v706 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:62) [bci: 69]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.HashMap.newNode(HashMap.java:1909) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
profileData: INJECTED designatedSuccessorProbability: 0.010000000000000009
stamp: void
=== Inputs ===
condition: v703 
=== Succesors ===
trueSuccessor: v705 
falseSuccessor: v704 
=== Usages ===
=== Predecessor ===
j728 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v703 #trueSuccessor: v705 #falseSuccessor: v704  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4575895921484393205
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v705 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:67) [bci: 111]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.HashMap.newNode(HashMap.java:1909) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: void
=== Inputs ===
=== Succesors ===
next: a711 
=== Usages ===
=== Predecessor ===
v706 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a711  <|@  <|@
f <@~|@floating>@ <|@
tid v698 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap.newNode(HashMap.java:1909) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
rawvalue: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a711 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a711 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{new_instance_or_null(KlassPointer)Object, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[TlabTop, TlabEnd], transition=SAFEPOINT}
descriptorName: new_instance_or_null
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.newInstanceOrNull(ForeignCallDescriptor, KlassPointer) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.callNewInstanceStub(HotSpotAllocationSnippets.java:341) [bci: 18]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:68) [bci: 124]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.HashMap.newNode(HashMap.java:1909) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: a java.lang.Object
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: ?28 
arguments: v698 
=== Succesors ===
next: v1183 
=== Usages ===
v1183 a725 
=== Predecessor ===
v705 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?28 arguments: v698 #next: v1183  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1183 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-190065|0xfffffffffffd198f]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?28 
object: a711 
=== Succesors ===
next: v715 
=== Usages ===
=== Predecessor ===
a711 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?28 object: a711 #next: v715  <|@  <|@
f <@*|@fixed>@ <|@
tid v715 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:70) [bci: 129]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.HashMap.newNode(HashMap.java:1909) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v714 
=== Predecessor ===
v1183 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4605510964398880109
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v704 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:63) [bci: 72]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.HashMap.newNode(HashMap.java:1909) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: void
=== Inputs ===
=== Succesors ===
next: v729 
=== Usages ===
=== Predecessor ===
v706 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v729  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v729 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: TlabTop
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:263) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.writeTlabTop(HotSpotAllocationSnippets.java:487) [bci: 2]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:63) [bci: 77]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.HashMap.newNode(HashMap.java:1909) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1224 
lastLocationAccess: - 
value: j702 
stateAfter: - 
=== Succesors ===
next: v720 
=== Usages ===
=== Predecessor ===
v704 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1224 lastLocationAccess: - value: j702 stateAfter: - #next: v720  <|@  <|@
f <@~|@floating>@ <|@
tid v1228 <|@
d <@d|@=== Debug Properties ===
displacement: 288
stamp: void*
stride: S1
=== Inputs ===
base: j727 
index: - 
=== Succesors ===
=== Usages ===
v720 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j727 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v720 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:330) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:64) [bci: 84]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.HashMap.newNode(HashMap.java:1909) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: void
=== Inputs ===
address: v1228 
=== Succesors ===
next: v730 
=== Usages ===
=== Predecessor ===
v729 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v1228 #next: v730  <|@  <|@
f <@~|@floating>@ <|@
tid v1226 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j727 
index: - 
=== Succesors ===
=== Usages ===
v730 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j727 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v730 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: MarkWord
location: MarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:464) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:432) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:271) [bci: 4]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.HashMap.newNode(HashMap.java:1909) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1226 
lastLocationAccess: - 
value: j707 
stateAfter: - 
=== Succesors ===
next: v733 
=== Usages ===
=== Predecessor ===
v720 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1226 lastLocationAccess: - value: j707 stateAfter: - #next: v733  <|@  <|@
f <@~|@floating>@ <|@
tid v1231 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: j727 
index: - 
=== Succesors ===
=== Usages ===
v733 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j727 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v1126 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:432) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:271) [bci: 4]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.HashMap.newNode(HashMap.java:1909) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
rawvalue: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 140436756758528 shift: 0)
stampKind: Klass*(compressed base: 140436756758528 shift: 0)
value: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v733 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v733 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Hub:write
location: Hub:write
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:432) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:271) [bci: 4]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.HashMap.newNode(HashMap.java:1909) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1231 
lastLocationAccess: - 
value: v1126 
stateAfter: - 
=== Succesors ===
next: v734 
=== Usages ===
=== Predecessor ===
v730 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1231 lastLocationAccess: - value: v1126 stateAfter: - #next: v734  <|@  <|@
f <@~|@floating>@ <|@
tid v1227 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: j727 
index: - 
=== Succesors ===
=== Usages ===
v734 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j727 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v734 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:174) [bci: 59]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:159) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:309) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:273) [bci: 27]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.HashMap.newNode(HashMap.java:1909) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1227 
lastLocationAccess: - 
value: i15 
stateAfter: - 
=== Succesors ===
next: v735 
=== Usages ===
=== Predecessor ===
v733 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1227 lastLocationAccess: - value: i15 stateAfter: - #next: v735  <|@  <|@
f <@~|@floating>@ <|@
tid v1229 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j727 
index: - 
=== Succesors ===
=== Usages ===
v735 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j727 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v735 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:233) [bci: 137]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:183) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:159) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:309) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:273) [bci: 27]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.HashMap.newNode(HashMap.java:1909) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1229 
lastLocationAccess: - 
value: j570 
stateAfter: - 
=== Succesors ===
next: v736 
=== Usages ===
=== Predecessor ===
v734 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1229 lastLocationAccess: - value: j570 stateAfter: - #next: v736  <|@  <|@
f <@~|@floating>@ <|@
tid v1230 <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S1
=== Inputs ===
base: j727 
index: - 
=== Succesors ===
=== Usages ===
v736 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j727 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v736 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:233) [bci: 137]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:183) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:159) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:309) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:273) [bci: 27]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.HashMap.newNode(HashMap.java:1909) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1230 
lastLocationAccess: - 
value: j570 
stateAfter: - 
=== Succesors ===
next: a710 
=== Usages ===
=== Predecessor ===
v735 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1230 lastLocationAccess: - value: j570 stateAfter: - #next: a710  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a710 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:275) [bci: 37]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.HashMap.newNode(HashMap.java:1909) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: a! java.lang.Object
trackedPointer: true
=== Inputs ===
input: j727 
=== Succesors ===
next: v713 
=== Usages ===
a725 
=== Predecessor ===
v736 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: j727 #next: v713  <|@  <|@
f <@*|@fixed>@ <|@
tid v713 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:70) [bci: 129]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.HashMap.newNode(HashMap.java:1909) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v714 
=== Predecessor ===
a710 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 4605585062831744793
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a725 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:70) [bci: 129]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.HashMap.newNode(HashMap.java:1909) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: a! java.lang.Object
valueDescription: a java.lang.Object
=== Inputs ===
merge: v714 
values: a710 a711 
=== Succesors ===
=== Usages ===
v1216 a517 v1214 v1215 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v714 values: a710 a711  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v714 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:70) [bci: 129]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.HashMap.newNode(HashMap.java:1909) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v713 v715 
=== Succesors ===
next: v516 
=== Usages ===
a725 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v713 v715 #next: v516  <|@  <|@
f <@~|@floating>@ <|@
tid v1216 <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a725 
index: - 
=== Succesors ===
=== Usages ===
v516 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a725 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v516 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.newNode(HashMap.java:1909) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1216 
lastLocationAccess: - 
value: a397 
stateAfter: - 
=== Succesors ===
next: v514 
=== Usages ===
=== Predecessor ===
v714 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1216 lastLocationAccess: - value: a397 stateAfter: - #next: v514  <|@  <|@
f <@~|@floating>@ <|@
tid v1215 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a725 
index: - 
=== Succesors ===
=== Usages ===
v514 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a725 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a513 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.newNode(HashMap.java:1909) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
op: Compress
stamp: n java.lang.Object
=== Inputs ===
value: a3 
=== Succesors ===
=== Usages ===
v514 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a3  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v514 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.newNode(HashMap.java:1909) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1215 
lastLocationAccess: - 
value: a513 
stateAfter: - 
=== Succesors ===
next: v511 
=== Usages ===
=== Predecessor ===
v516 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1215 lastLocationAccess: - value: a513 stateAfter: - #next: v511  <|@  <|@
f <@~|@floating>@ <|@
tid v1214 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a725 
index: - 
=== Succesors ===
=== Usages ===
v511 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a725 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v511 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.newNode(HashMap.java:1909) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1214 
lastLocationAccess: - 
value: i2 
stateAfter: - 
=== Succesors ===
next: v518 
=== Usages ===
=== Predecessor ===
v514 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1214 lastLocationAccess: - value: i2 stateAfter: - #next: v518  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v518 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: CONSTRUCTOR_FREEZE
location: INIT_LOCATION
nodeSourcePosition: at java.util.HashMap.putVal(int, Object, Object, boolean, boolean) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
next: a517 
=== Usages ===
=== Predecessor ===
v511 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a517  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a517 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(int, Object, Object, boolean, boolean) [bci: -6] Placeholder
stamp: a!# java.util.HashMap$Node
=== Inputs ===
object: a725 
=== Succesors ===
next: v195 
=== Usages ===
a190 
=== Predecessor ===
v518 >@ <|@
instruction <@FixedValueAnchor|@jdk.graal.compiler.nodes.extended.FixedValueAnchorNode>@ object: a725 #next: v195  <|@  <|@
f <@*|@fixed>@ <|@
tid v195 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v189 
=== Predecessor ===
a517 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4553315745025075769
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v199 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: v795 
=== Usages ===
=== Predecessor ===
v204 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v795  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v795 <|@
d <@d|@=== Debug Properties ===
locations: [MarkWord, Hub:write, TlabTop, TlabEnd, PrototypeMarkWord]
nodeSourcePosition: at java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: void
=== Inputs ===
=== Succesors ===
next: j749 
=== Usages ===
=== Predecessor ===
v199 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j749  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j749 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getThread(HotSpotAllocationSnippets.java:472) [bci: 4]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getTLABInfo(HotSpotAllocationSnippets.java:468) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:58) [bci: 1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j775 
=== Usages ===
v1232 v1233 
=== Predecessor ===
v795 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j775  <|@  <|@
f <@~|@floating>@ <|@
tid v1232 <|@
d <@d|@=== Debug Properties ===
displacement: 440
stamp: void*
stride: S1
=== Inputs ===
base: j749 
index: - 
=== Succesors ===
=== Usages ===
j775 v777 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j749 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j775 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:255) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabTop(HotSpotAllocationSnippets.java:482) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:59) [bci: 9]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1232 
lastLocationAccess: - 
=== Succesors ===
next: j776 
=== Usages ===
j752 v1234 v1235 a759 v1236 v1237 v1238 v1239 v1240 
=== Predecessor ===
j749 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1232 lastLocationAccess: - #next: j776  <|@  <|@
f <@~|@floating>@ <|@
tid v1233 <|@
d <@d|@=== Debug Properties ===
displacement: 456
stamp: void*
stride: S1
=== Inputs ===
base: j749 
index: - 
=== Succesors ===
=== Usages ===
j776 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j749 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j776 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabEnd
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:259) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabEnd(HotSpotAllocationSnippets.java:477) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:60) [bci: 17]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1233 
lastLocationAccess: - 
=== Succesors ===
next: v756 
=== Usages ===
v753 
=== Predecessor ===
j775 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1233 lastLocationAccess: - #next: v756  <|@  <|@
f <@~|@floating>@ <|@
tid j569 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:94) [bci: 27]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:83) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
rawvalue: 40
stableDimension: 0
stamp: i64 [40]
stampKind: i64
value: long[40|0x28]
=== Inputs ===
=== Succesors ===
=== Usages ===
j752 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j752 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:61) [bci: 25]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: i64
=== Inputs ===
x: j775 
y: j569 
=== Succesors ===
=== Usages ===
v753 v777 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j775 y: j569  <|@  <|@
f <@~|@floating>@ <|@
tid v753 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:62) [bci: 63]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@40aab068
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j776 
y: j752 
=== Succesors ===
=== Usages ===
v756 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j776 y: j752  <|@  <|@
f <@*|@fixed>@ <|@
tid v756 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:62) [bci: 69]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
profileData: INJECTED designatedSuccessorProbability: 0.010000000000000009
stamp: void
=== Inputs ===
condition: v753 
=== Succesors ===
trueSuccessor: v755 
falseSuccessor: v754 
=== Usages ===
=== Predecessor ===
j776 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v753 #trueSuccessor: v755 #falseSuccessor: v754  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4523100981620127249
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v755 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:67) [bci: 111]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: void
=== Inputs ===
=== Succesors ===
next: a760 
=== Usages ===
=== Predecessor ===
v756 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a760  <|@  <|@
f <@~|@floating>@ <|@
tid v748 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
rawvalue: meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a760 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a760 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{new_instance_or_null(KlassPointer)Object, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[TlabTop, TlabEnd], transition=SAFEPOINT}
descriptorName: new_instance_or_null
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.newInstanceOrNull(ForeignCallDescriptor, KlassPointer) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.callNewInstanceStub(HotSpotAllocationSnippets.java:341) [bci: 18]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:68) [bci: 124]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: a java.lang.Object
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: ?28 
arguments: v748 
=== Succesors ===
next: v1185 
=== Usages ===
v1185 a773 
=== Predecessor ===
v755 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?28 arguments: v748 #next: v1185  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1185 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-202609|0xfffffffffffce88f]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?28 
object: a760 
=== Succesors ===
next: v764 
=== Usages ===
=== Predecessor ===
a760 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?28 object: a760 #next: v764  <|@  <|@
f <@*|@fixed>@ <|@
tid v764 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:70) [bci: 129]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v763 
=== Predecessor ===
v1185 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4553268943811267021
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v754 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:63) [bci: 72]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: void
=== Inputs ===
=== Succesors ===
next: v777 
=== Usages ===
=== Predecessor ===
v756 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v777  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v777 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: TlabTop
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:263) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.writeTlabTop(HotSpotAllocationSnippets.java:487) [bci: 2]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:63) [bci: 77]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1232 
lastLocationAccess: - 
value: j752 
stateAfter: - 
=== Succesors ===
next: v767 
=== Usages ===
=== Predecessor ===
v754 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1232 lastLocationAccess: - value: j752 stateAfter: - #next: v767  <|@  <|@
f <@~|@floating>@ <|@
tid v1236 <|@
d <@d|@=== Debug Properties ===
displacement: 296
stamp: void*
stride: S1
=== Inputs ===
base: j775 
index: - 
=== Succesors ===
=== Usages ===
v767 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j775 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v767 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:330) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:64) [bci: 84]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: void
=== Inputs ===
address: v1236 
=== Succesors ===
next: v778 
=== Usages ===
=== Predecessor ===
v777 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v1236 #next: v778  <|@  <|@
f <@~|@floating>@ <|@
tid v1234 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j775 
index: - 
=== Succesors ===
=== Usages ===
v778 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j775 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v778 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: MarkWord
location: MarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:464) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:432) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:271) [bci: 4]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1234 
lastLocationAccess: - 
value: j707 
stateAfter: - 
=== Succesors ===
next: v781 
=== Usages ===
=== Predecessor ===
v767 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1234 lastLocationAccess: - value: j707 stateAfter: - #next: v781  <|@  <|@
f <@~|@floating>@ <|@
tid v1240 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: j775 
index: - 
=== Succesors ===
=== Usages ===
v781 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j775 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v1127 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:432) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:271) [bci: 4]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
rawvalue: meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 140436756758528 shift: 0)
stampKind: Klass*(compressed base: 140436756758528 shift: 0)
value: meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v781 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v781 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Hub:write
location: Hub:write
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:432) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:271) [bci: 4]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1240 
lastLocationAccess: - 
value: v1127 
stateAfter: - 
=== Succesors ===
next: v782 
=== Usages ===
=== Predecessor ===
v778 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1240 lastLocationAccess: - value: v1127 stateAfter: - #next: v782  <|@  <|@
f <@~|@floating>@ <|@
tid v1235 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: j775 
index: - 
=== Succesors ===
=== Usages ===
v782 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j775 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v782 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:174) [bci: 59]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:159) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:309) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:273) [bci: 27]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1235 
lastLocationAccess: - 
value: i15 
stateAfter: - 
=== Succesors ===
next: v783 
=== Usages ===
=== Predecessor ===
v781 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1235 lastLocationAccess: - value: i15 stateAfter: - #next: v783  <|@  <|@
f <@~|@floating>@ <|@
tid v1237 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j775 
index: - 
=== Succesors ===
=== Usages ===
v783 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j775 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v783 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:233) [bci: 137]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:183) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:159) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:309) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:273) [bci: 27]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1237 
lastLocationAccess: - 
value: j570 
stateAfter: - 
=== Succesors ===
next: v784 
=== Usages ===
=== Predecessor ===
v782 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1237 lastLocationAccess: - value: j570 stateAfter: - #next: v784  <|@  <|@
f <@~|@floating>@ <|@
tid v1238 <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S1
=== Inputs ===
base: j775 
index: - 
=== Succesors ===
=== Usages ===
v784 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j775 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v784 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:233) [bci: 137]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:183) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:159) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:309) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:273) [bci: 27]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1238 
lastLocationAccess: - 
value: j570 
stateAfter: - 
=== Succesors ===
next: v785 
=== Usages ===
=== Predecessor ===
v783 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1238 lastLocationAccess: - value: j570 stateAfter: - #next: v785  <|@  <|@
f <@~|@floating>@ <|@
tid v1239 <|@
d <@d|@=== Debug Properties ===
displacement: 32
stamp: void*
stride: S1
=== Inputs ===
base: j775 
index: - 
=== Succesors ===
=== Usages ===
v785 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j775 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v785 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:233) [bci: 137]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:183) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:159) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:309) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:273) [bci: 27]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1239 
lastLocationAccess: - 
value: j570 
stateAfter: - 
=== Succesors ===
next: a759 
=== Usages ===
=== Predecessor ===
v784 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1239 lastLocationAccess: - value: j570 stateAfter: - #next: a759  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a759 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:275) [bci: 37]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: a! java.lang.Object
trackedPointer: true
=== Inputs ===
input: j775 
=== Succesors ===
next: v762 
=== Usages ===
a773 
=== Predecessor ===
v785 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: j775 #next: v762  <|@  <|@
f <@*|@fixed>@ <|@
tid v762 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:70) [bci: 129]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v763 
=== Predecessor ===
a759 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4553315745025075769
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a773 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:70) [bci: 129]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: a! java.lang.Object
valueDescription: a java.lang.Object
=== Inputs ===
merge: v763 
values: a759 a760 
=== Succesors ===
=== Usages ===
a520 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v763 values: a759 a760  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v763 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:70) [bci: 129]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v762 v764 
=== Succesors ===
next: v521 
=== Usages ===
a773 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v762 v764 #next: v521  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v521 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: CONSTRUCTOR_FREEZE
location: INIT_LOCATION
nodeSourcePosition: at java.util.HashMap.putVal(int, Object, Object, boolean, boolean) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
next: a520 
=== Usages ===
=== Predecessor ===
v763 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a520  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a520 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(int, Object, Object, boolean, boolean) [bci: -6] Placeholder
stamp: a!# java.util.LinkedHashMap$Entry
=== Inputs ===
object: a773 
=== Succesors ===
next: v222 
=== Usages ===
v305 ?271 v306 a190 
=== Predecessor ===
v521 >@ <|@
instruction <@FixedValueAnchor|@jdk.graal.compiler.nodes.extended.FixedValueAnchorNode>@ object: a773 #next: v222  <|@  <|@
tid v305 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.LinkedHashMap$Entry.<init>(LinkedHashMap.java:208) [bci: 6]
at java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 9]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
referencedType: [null]
returnStamp: void
signature: [HotSpotType<Ljava/util/HashMap$Node;, resolved>, HotSpotResolvedPrimitiveType<int>, UnresolvedJavaType<Ljava/lang/Object;>, UnresolvedJavaType<Ljava/lang/Object;>, UnresolvedJavaType<Ljava/util/HashMap$Node;>]
stamp: void
targetMethod: HotSpotMethod<HashMap$Node.<init>(int, Object, Object, HashMap$Node)>
=== Inputs ===
arguments: a520 i2 a3 a4 a9 
=== Succesors ===
=== Usages ===
v222 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a520 i2 a3 a4 a9  <|@  <|@
tid ?229 <|@
d <@d|@=== Debug Properties ===
bci: 56
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
localsSize: 13
locksSize: 0
sourceFile: HashMap.java
sourceLine: 637
stackSize: 2
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a26 i32 a1 - - - - i6 
=== Succesors ===
=== Usages ===
?223 ?647 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a26 i32 a1 - - - - i6  <|@  <|@
tid a268 <|@
d <@d|@=== Debug Properties ===
fields: [HotSpotResolvedJavaFieldImpl<java.util.HashMap$Node.hash int:12>, HotSpotResolvedJavaFieldImpl<java.util.HashMap$Node.key Object:16>, HotSpotResolvedJavaFieldImpl<java.util.HashMap$Node.value Object:20>, HotSpotResolvedJavaFieldImpl<java.util.HashMap$Node.next HashMap$Node:24>, HotSpotResolvedJavaFieldImpl<java.util.LinkedHashMap$Entry.before LinkedHashMap$Entry:28>, HotSpotResolvedJavaFieldImpl<java.util.LinkedHashMap$Entry.after LinkedHashMap$Entry:32>]
hasIdentity: true
nodeSourcePosition: at java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
objectId: 1
stamp: a!# java.util.LinkedHashMap$Entry
type: HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?647 ?271 ?223 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@jdk.graal.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
tid ?223 <|@
d <@d|@=== Debug Properties ===
bci: 9
bytecode: invokespecial
code: ResolvedJavaMethodBytecode<LinkedHashMap.newNode(int, Object, Object, HashMap$Node)>
localsSize: 6
locksSize: 0
nodeSourcePosition: at java.util.LinkedHashMap$Entry.<init>(LinkedHashMap.java:208) [bci: 6]
at java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 9]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
sourceFile: LinkedHashMap.java
sourceLine: 281
stackSize: 1
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?229 
values: a268 a1 i2 a3 a4 a9 
=== Succesors ===
=== Usages ===
?646 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?229 values: a268 a1 i2 a3 a4 a9  <|@  <|@
tid ?271 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a268 
materializedValue: a520 
=== Succesors ===
=== Usages ===
?646 ?647 
=== Predecessor ===
- >@ <|@
instruction <@MaterializedObjectState|@jdk.graal.compiler.nodes.virtual.MaterializedObjectState>@ object: a268 materializedValue: a520  <|@  <|@
tid ?646 <|@
d <@d|@=== Debug Properties ===
bci: 6
bytecode: invokespecial
code: ResolvedJavaMethodBytecode<LinkedHashMap$Entry.<init>(int, Object, Object, HashMap$Node)>
localsSize: 5
locksSize: 0
sourceFile: LinkedHashMap.java
sourceLine: 208
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?223 
virtualObjectMappings: ?271 
=== Succesors ===
=== Usages ===
v222 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?223 virtualObjectMappings: ?271  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v222 <|@
d <@d|@=== Debug Properties ===
bci: 6
identity: ANY_LOCATION
inlineControl: Normal
nodeSourcePosition: at java.util.LinkedHashMap$Entry.<init>(LinkedHashMap.java:208) [bci: 6]
at java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 9]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
polymorphic: false
stamp: void
targetMethod: Direct#HashMap$Node.<init>
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v305 
stateDuring: ?646 
=== Succesors ===
next: v226 
=== Usages ===
=== Predecessor ===
a520 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v305 stateDuring: ?646 #next: v226  <|@  <|@
tid v306 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.LinkedHashMap.newNode(LinkedHashMap.java:283) [bci: 17]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
referencedType: [null]
returnStamp: void
signature: [HotSpotType<Ljava/util/LinkedHashMap;, resolved>, UnresolvedJavaType<Ljava/util/LinkedHashMap$Entry;>]
stamp: void
targetMethod: HotSpotMethod<LinkedHashMap.linkNodeAtEnd(LinkedHashMap$Entry)>
=== Inputs ===
arguments: a1 a520 
=== Succesors ===
=== Usages ===
v226 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a520  <|@  <|@
tid ?647 <|@
d <@d|@=== Debug Properties ===
bci: 17
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<LinkedHashMap.newNode(int, Object, Object, HashMap$Node)>
localsSize: 6
locksSize: 0
sourceFile: LinkedHashMap.java
sourceLine: 283
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?229 
values: - - - - - a268 
virtualObjectMappings: ?271 
=== Succesors ===
=== Usages ===
v226 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?229 values: - - - - - a268 virtualObjectMappings: ?271  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v226 <|@
d <@d|@=== Debug Properties ===
bci: 17
identity: ANY_LOCATION
inlineControl: Normal
nodeSourcePosition: at java.util.LinkedHashMap.newNode(LinkedHashMap.java:283) [bci: 17]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
polymorphic: false
stamp: void
targetMethod: Direct#LinkedHashMap.linkNodeAtEnd
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v306 
stateDuring: ?647 
=== Succesors ===
next: v200 
=== Usages ===
=== Predecessor ===
v222 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v306 stateDuring: ?647 #next: v200  <|@  <|@
f <@*|@fixed>@ <|@
tid v200 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v189 
=== Predecessor ===
v226 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B11" "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4605587348047262798
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a190 <|@
d <@d|@=== Debug Properties ===
stamp: a! java.util.HashMap$Node
valueDescription: a java.lang.Object
=== Inputs ===
merge: v189 
values: a517 a520 
=== Succesors ===
=== Usages ===
v1242 a322 ?643 a850 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v189 values: a517 a520  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v189 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v195 v200 
=== Succesors ===
next: v580 
=== Usages ===
a190 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v195 v200 #next: v580  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v580 <|@
d <@d|@=== Debug Properties ===
locations: [SecondarySuperCache]
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1145 
=== Usages ===
=== Predecessor ===
v189 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: v1145  <|@  <|@
f <@~|@floating>@ <|@
tid v799 <|@
d <@d|@=== Debug Properties ===
encoding: base: 140436756758528 shift: 0
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v1142 
=== Succesors ===
=== Usages ===
v1191 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v1142  <|@  <|@
f <@~|@floating>@ <|@
tid v1191 <|@
d <@d|@=== Debug Properties ===
displacement: 208
stamp: void*
stride: S1
=== Inputs ===
base: v799 
index: - 
=== Succesors ===
=== Usages ===
v1145 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v799 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1145 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ObjArrayKlass::_element_klass:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: Klass*!
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1191 
lastLocationAccess: - 
=== Succesors ===
next: i574 
=== Usages ===
v578 v562 v1217 v537 v544 
=== Predecessor ===
v580 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1191 lastLocationAccess: - #next: i574  <|@  <|@
f <@~|@floating>@ <|@
tid v1217 <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: v1145 
index: - 
=== Succesors ===
=== Usages ===
i574 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v1145 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i574 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: Klass::_super_check_offset:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:64) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1217 
lastLocationAccess: - 
=== Succesors ===
next: v1146 
=== Usages ===
v534 j535 
=== Predecessor ===
v1145 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1217 lastLocationAccess: - #next: v1146  <|@  <|@
f <@~|@floating>@ <|@
tid v1242 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: a190 
index: - 
=== Succesors ===
=== Usages ===
v1146 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a190 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1146 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140436756758528 shift: 0)
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:209) [bci: 46] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: Klass*!(compressed base: 140436756758528 shift: 0)
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1242 
lastLocationAccess: - 
=== Succesors ===
next: v1147 
=== Usages ===
v802 
=== Predecessor ===
i574 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1242 lastLocationAccess: - #next: v1147  <|@  <|@
f <@~|@floating>@ <|@
tid v802 <|@
d <@d|@=== Debug Properties ===
encoding: base: 140436756758528 shift: 0
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:209) [bci: 46] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v1146 
=== Succesors ===
=== Usages ===
v1218 v544 v1219 v1222 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v1146  <|@  <|@
f <@~|@floating>@ <|@
tid j535 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:68) [bci: 36]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i574 
=== Succesors ===
=== Usages ===
v1218 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i574  <|@  <|@
f <@~|@floating>@ <|@
tid v1218 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: v802 
index: j535 
=== Succesors ===
=== Usages ===
v1147 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v802 index: j535  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1147 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: PrimarySupers:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:68) [bci: 36]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: Klass*
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1218 
lastLocationAccess: - 
=== Succesors ===
next: v540 
=== Usages ===
v537 
=== Predecessor ===
v1146 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1218 lastLocationAccess: - #next: v540  <|@  <|@
f <@~|@floating>@ <|@
tid v537 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:68) [bci: 40]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1145 
y: v1147 
=== Succesors ===
=== Usages ===
v540 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: v1145 y: v1147  <|@  <|@
f <@*|@fixed>@ <|@
tid v540 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:68) [bci: 43]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
profileData: UNKNOWN designatedSuccessorProbability: 0.5
stamp: void
=== Inputs ===
condition: v537 
=== Succesors ===
trueSuccessor: v539 
falseSuccessor: v538 
=== Usages ===
=== Predecessor ===
v1147 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v537 #trueSuccessor: v539 #falseSuccessor: v538  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B27" 
    xhandlers
    flags 
    probability 4601083748419892302
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v539 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:69) [bci: 46]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v584 
=== Usages ===
=== Predecessor ===
v540 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v584  <|@  <|@
f <@*|@fixed>@ <|@
tid v584 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v638 
=== Predecessor ===
v539 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B45" 
    xhandlers
    flags 
    probability 4601083748419892302
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v538 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:78) [bci: 70]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v543 
=== Usages ===
=== Predecessor ===
v540 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v543  <|@  <|@
f <@~|@floating>@ <|@
tid i533 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.secondarySuperCacheOffset(GraalHotSpotVMConfig) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:65) [bci: 18]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
rawvalue: 32
stableDimension: 0
stamp: i32 [32]
stampKind: i32
value: int[32|0x20]
=== Inputs ===
=== Succesors ===
=== Usages ===
v534 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v534 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:65) [bci: 21]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i574 
y: i533 
=== Succesors ===
=== Usages ===
v543 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i574 y: i533  <|@  <|@
f <@*|@fixed>@ <|@
tid v543 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:78) [bci: 72]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v534 
=== Succesors ===
trueSuccessor: v542 
falseSuccessor: v541 
=== Usages ===
=== Predecessor ===
v538 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v534 #trueSuccessor: v542 #falseSuccessor: v541  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4601083748419892302
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v542 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:83) [bci: 84]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v547 
=== Usages ===
=== Predecessor ===
v543 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v547  <|@  <|@
f <@~|@floating>@ <|@
tid v544 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:88) [bci: 2]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:83) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v802 
y: v1145 
=== Succesors ===
=== Usages ===
v547 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: v802 y: v1145  <|@  <|@
f <@*|@fixed>@ <|@
tid v547 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:88) [bci: 5]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:83) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
profileData: UNKNOWN designatedSuccessorProbability: 0.5
stamp: void
=== Inputs ===
condition: v544 
=== Succesors ===
trueSuccessor: v546 
falseSuccessor: v545 
=== Usages ===
=== Predecessor ===
v542 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v544 #trueSuccessor: v546 #falseSuccessor: v545  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B27" 
    xhandlers
    flags 
    probability 4596580148792521806
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v546 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:89) [bci: 8]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:83) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v591 
=== Usages ===
=== Predecessor ===
v547 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v591  <|@  <|@
f <@*|@fixed>@ <|@
tid v591 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v638 
=== Predecessor ===
v546 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4596580148792521806
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v545 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:94) [bci: 17]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:83) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: j575 
=== Usages ===
=== Predecessor ===
v547 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j575  <|@  <|@
f <@~|@floating>@ <|@
tid v1219 <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: v802 
index: - 
=== Succesors ===
=== Usages ===
j575 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v802 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j575 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: SecondarySupers:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:94) [bci: 27]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:83) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1219 
lastLocationAccess: - 
=== Succesors ===
next: i576 
=== Usages ===
v1220 v1221 
=== Predecessor ===
v545 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1219 lastLocationAccess: - #next: i576  <|@  <|@
f <@~|@floating>@ <|@
tid v1220 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j575 
index: - 
=== Succesors ===
=== Usages ===
i576 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j575 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i576 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: MetaspaceArrayLength:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:95) [bci: 41]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:83) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1220 
lastLocationAccess: - 
=== Succesors ===
next: v550 
=== Usages ===
v553 
=== Predecessor ===
j575 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1220 lastLocationAccess: - #next: v550  <|@  <|@
f <@~|@floating>@ <|@
tid i571 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.loadSecondarySupersElement(TypeCheckSnippetUtils.java:178) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:97) [bci: 63]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:83) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
rawvalue: 3
stableDimension: 0
stamp: i32 [3]
stampKind: i32
value: int[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
i572 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i557 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.metaspaceArrayBaseOffset(GraalHotSpotVMConfig) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.loadSecondarySupersElement(TypeCheckSnippetUtils.java:178) [bci: 4]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:97) [bci: 63]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:83) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
rawvalue: 8
stableDimension: 0
stamp: i32 [8]
stampKind: i32
value: int[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i558 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v550 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:96) [bci: 49]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:83) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v551 
=== Predecessor ===
i576 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B24" 
    successors "B23" "B26" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4602807799859017905
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i552 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:96) [bci: 49]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:83) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v551 
values: i15 i566 
=== Succesors ===
=== Usages ===
v553 i566 i572 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v551 values: i15 i566  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v551 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 42
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:96) [bci: 49]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:83) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
osrLoop: false
peelings: 0
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v550 
=== Succesors ===
next: v556 
=== Usages ===
i552 v554 v563 v567 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v550 #next: v556  <|@  <|@
f <@~|@floating>@ <|@
tid v553 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:96) [bci: 53]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:83) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@4dc6bd49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i552 
y: i576 
=== Succesors ===
=== Usages ===
v556 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i552 y: i576  <|@  <|@
f <@*|@fixed>@ <|@
tid v556 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:96) [bci: 53]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:83) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v553 
=== Succesors ===
trueSuccessor: v555 
falseSuccessor: v554 
=== Usages ===
=== Predecessor ===
v551 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v553 #trueSuccessor: v555 #falseSuccessor: v554  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602807799859017905
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v555 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:97) [bci: 56]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:83) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: j577 
=== Usages ===
=== Predecessor ===
v556 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j577  <|@  <|@
f <@~|@floating>@ <|@
tid i572 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.loadSecondarySupersElement(TypeCheckSnippetUtils.java:178) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:97) [bci: 63]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:83) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: i32 [-2147483648 - 2147483640] bits:x...x000
=== Inputs ===
x: i552 
y: i571 
=== Succesors ===
=== Usages ===
i558 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i552 y: i571  <|@  <|@
f <@~|@floating>@ <|@
tid i558 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.loadSecondarySupersElement(TypeCheckSnippetUtils.java:178) [bci: 12]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:97) [bci: 63]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:83) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: i32 [-2147483648 - 2147483640] bits:x...x000
=== Inputs ===
x: i572 
y: i557 
=== Succesors ===
=== Usages ===
j559 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i572 y: i557  <|@  <|@
f <@~|@floating>@ <|@
tid j559 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.loadSecondarySupersElement(TypeCheckSnippetUtils.java:178) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:97) [bci: 63]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:83) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] bits:x...x000
=== Inputs ===
value: i558 
=== Succesors ===
=== Usages ===
v1221 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i558  <|@  <|@
f <@~|@floating>@ <|@
tid v1221 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j575 
index: j559 
=== Succesors ===
=== Usages ===
j577 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j575 index: j559  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j577 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: SecondarySupersElement:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.loadSecondarySupersElement(TypeCheckSnippetUtils.java:178) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:97) [bci: 63]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:83) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1221 
lastLocationAccess: - 
=== Succesors ===
next: v565 
=== Usages ===
v561 
=== Predecessor ===
v555 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1221 lastLocationAccess: - #next: v565  <|@  <|@
f <@~|@floating>@ <|@
tid v561 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.loadSecondarySupersElement(TypeCheckSnippetUtils.java:178) [bci: 22]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:97) [bci: 63]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:83) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: Klass*
=== Inputs ===
input: j577 
=== Succesors ===
=== Usages ===
v562 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@jdk.graal.compiler.hotspot.word.PointerCastNode>@ input: j577  <|@  <|@
f <@~|@floating>@ <|@
tid v562 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:97) [bci: 66]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:83) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v561 
y: v1145 
=== Succesors ===
=== Usages ===
v565 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: v561 y: v1145  <|@  <|@
f <@*|@fixed>@ <|@
tid v565 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:97) [bci: 72]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:83) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
profileData: INJECTED designatedSuccessorProbability: 0.4
stamp: void
=== Inputs ===
condition: v562 
=== Succesors ===
trueSuccessor: v563 
falseSuccessor: v564 
=== Usages ===
=== Predecessor ===
j577 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v562 #trueSuccessor: v563 #falseSuccessor: v564  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B22" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4599230716294395707
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v564 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:96) [bci: 98]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:83) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v567 
=== Usages ===
=== Predecessor ===
v565 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v567  <|@  <|@
f <@~|@floating>@ <|@
tid i566 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:96) [bci: 98]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:83) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: i32
=== Inputs ===
x: i552 
y: i29 
=== Succesors ===
=== Usages ===
i552 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i552 y: i29  <|@  <|@
f <@*|@fixed>@ <|@
tid v567 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:96) [bci: 49]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:83) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
loopBegin: v551 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v564 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v551  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B27" 
    xhandlers
    flags 
    probability 4596580148792521807
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v563 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:98) [bci: 75]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:83) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v551 
=== Succesors ===
next: v578 
=== Usages ===
=== Predecessor ===
v565 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v551 #next: v578  <|@  <|@
f <@~|@floating>@ <|@
tid v1222 <|@
d <@d|@=== Debug Properties ===
displacement: 32
stamp: void*
stride: S1
=== Inputs ===
base: v802 
index: - 
=== Succesors ===
=== Usages ===
v578 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v802 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v578 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: SecondarySuperCache
location: SecondarySuperCache
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:98) [bci: 86]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:83) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1222 
lastLocationAccess: - 
value: v1145 
stateAfter: - 
=== Succesors ===
next: v590 
=== Usages ===
=== Predecessor ===
v563 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1222 lastLocationAccess: - value: v1145 stateAfter: - #next: v590  <|@  <|@
f <@*|@fixed>@ <|@
tid v590 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:83) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v638 
=== Predecessor ===
v578 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v554 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:103) [bci: 104]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:83) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v551 
=== Succesors ===
next: v592 
=== Usages ===
=== Predecessor ===
v556 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v551 #next: v592  <|@  <|@
f <@*|@fixed>@ <|@
tid v592 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:83) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v641 
=== Predecessor ===
v554 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B17" "B25" "B20" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4605587348047262798
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v638 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v584 v590 v591 
=== Succesors ===
next: v847 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v584 v590 v591 #next: v847  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v847 <|@
d <@d|@=== Debug Properties ===
locations: [GC-SATB-Queue-Log, GC-SATB-Marking-Active, GC-SATB-Queue-Index, GC-SATB-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: j805 
=== Usages ===
=== Predecessor ===
v638 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j805  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j805 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:127) [bci: 10]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j806 
=== Usages ===
v1243 v1245 v1246 
=== Predecessor ===
v847 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j806  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j806 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:129) [bci: 21]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1190 
=== Succesors ===
next: i833 
=== Usages ===
v1244 
=== Predecessor ===
j805 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: v1190 #next: i833  <|@  <|@
f <@~|@floating>@ <|@
tid v1243 <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: j805 
index: - 
=== Succesors ===
=== Usages ===
i833 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j805 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i833 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Marking-Active
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:130) [bci: 35]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1243 
lastLocationAccess: - 
=== Succesors ===
next: v810 
=== Usages ===
v841 
=== Predecessor ===
j806 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1243 lastLocationAccess: - #next: v810  <|@  <|@
f <@~|@floating>@ <|@
tid v841 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i833 
y: i840 
=== Succesors ===
=== Usages ===
v810 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i833 y: i840  <|@  <|@
f <@*|@fixed>@ <|@
tid v810 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 217]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v841 
=== Succesors ===
trueSuccessor: v809 
falseSuccessor: v808 
=== Usages ===
=== Predecessor ===
i833 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v841 #trueSuccessor: v809 #falseSuccessor: v808  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" 
    xhandlers
    flags 
    probability 4604846135197064160
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v809 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v813 
=== Usages ===
=== Predecessor ===
v810 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v813  <|@  <|@
f <@*|@fixed>@ <|@
tid v813 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v814 
=== Predecessor ===
v809 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4590594123464754032
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v808 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:150) [bci: 220]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: a834 
=== Usages ===
=== Predecessor ===
v810 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a834  <|@  <|@
f <@~|@floating>@ <|@
tid v1244 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j806 
index: - 
=== Succesors ===
=== Usages ===
a834 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j806 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a834 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1244 
lastLocationAccess: - 
=== Succesors ===
next: v817 
=== Usages ===
a835 v842 
=== Predecessor ===
v808 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1244 lastLocationAccess: - #next: v817  <|@  <|@
f <@~|@floating>@ <|@
tid v842 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 296]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a834 
=== Succesors ===
=== Usages ===
v817 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a834  <|@  <|@
f <@*|@fixed>@ <|@
tid v817 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 307]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v842 
=== Succesors ===
trueSuccessor: v816 
falseSuccessor: v812 
=== Usages ===
=== Predecessor ===
a834 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v842 #trueSuccessor: v816 #falseSuccessor: v812  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    probability 4575897384022324722
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v816 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v815 
=== Usages ===
=== Predecessor ===
v817 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v815  <|@  <|@
f <@*|@fixed>@ <|@
tid v815 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v814 
=== Predecessor ===
v816 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4590001153184595122
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v812 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:163) [bci: 310]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: j836 
=== Usages ===
=== Predecessor ===
v817 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j836  <|@  <|@
f <@~|@floating>@ <|@
tid v1245 <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: j805 
index: - 
=== Succesors ===
=== Usages ===
j836 v839 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j805 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j836 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:166) [bci: 327]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1245 
lastLocationAccess: - 
=== Succesors ===
next: v822 
=== Usages ===
v819 j832 v1247 
=== Predecessor ===
v812 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1245 lastLocationAccess: - #next: v822  <|@  <|@
f <@~|@floating>@ <|@
tid v819 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 341]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j836 
y: j570 
=== Succesors ===
=== Usages ===
v822 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j836 y: j570  <|@  <|@
f <@~|@floating>@ <|@
tid a835 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a834 
=== Succesors ===
=== Usages ===
j824 v827 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a834  <|@  <|@
f <@*|@fixed>@ <|@
tid v822 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 347]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v819 
=== Succesors ===
trueSuccessor: v821 
falseSuccessor: v820 
=== Usages ===
=== Predecessor ===
j836 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v819 #trueSuccessor: v821 #falseSuccessor: v820  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4575188794187971253
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v821 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 410]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v827 
=== Usages ===
=== Predecessor ===
v822 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v827  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v827 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_pre(Object)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-SATB-Queue-Index, GC-SATB-Queue-Buffer, GC-SATB-Queue-Log], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_pre
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(ForeignCallDescriptor, Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(G1WriteBarrierSnippets.java:409) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 413]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: a835 
=== Succesors ===
next: v828 
=== Usages ===
=== Predecessor ===
v821 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: a835 #next: v828  <|@  <|@
f <@*|@fixed>@ <|@
tid v828 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v814 
=== Predecessor ===
v827 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4589467479932452103
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v820 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 350]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: j837 
=== Usages ===
=== Predecessor ===
v822 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j837  <|@  <|@
f <@~|@floating>@ <|@
tid v1246 <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: j805 
index: - 
=== Succesors ===
=== Usages ===
j837 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j805 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j837 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 359]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1246 
lastLocationAccess: - 
=== Succesors ===
next: j824 
=== Usages ===
v1247 
=== Predecessor ===
v820 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1246 lastLocationAccess: - #next: j824  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j824 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 384]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a835 
=== Succesors ===
next: v838 
=== Usages ===
v838 
=== Predecessor ===
j837 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a835 #next: v838  <|@  <|@
f <@~|@floating>@ <|@
tid v1247 <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j837 
index: j836 
=== Succesors ===
=== Usages ===
v838 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j837 index: j836  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v838 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Log
location: GC-SATB-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 390]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1247 
lastLocationAccess: - 
value: j824 
stateAfter: - 
=== Succesors ===
next: v839 
=== Usages ===
=== Predecessor ===
j824 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1247 lastLocationAccess: - value: j824 stateAfter: - #next: v839  <|@  <|@
f <@~|@floating>@ <|@
tid j832 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: i64
=== Inputs ===
x: j836 
y: j831 
=== Succesors ===
=== Usages ===
v839 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j836 y: j831  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v839 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Index
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:173) [bci: 404]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1245 
lastLocationAccess: - 
value: j832 
stateAfter: - 
=== Succesors ===
next: v826 
=== Usages ===
=== Predecessor ===
v838 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1245 lastLocationAccess: - value: j832 stateAfter: - #next: v826  <|@  <|@
f <@*|@fixed>@ <|@
tid v826 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v814 
=== Predecessor ===
v839 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" "B33" "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4605587348047262798
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v814 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v813 v815 v826 v828 
=== Succesors ===
next: v323 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v813 v815 v826 v828 #next: v323  <|@  <|@
f <@~|@floating>@ <|@
tid a322 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
op: Compress
stamp: n! java.util.HashMap$Node
=== Inputs ===
value: a190 
=== Succesors ===
=== Usages ===
v323 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a190  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v323 <|@
d <@d|@=== Debug Properties ===
barrierType: ARRAY
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: Object
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v480 
address: v1190 
lastLocationAccess: - 
value: a322 
stateAfter: - 
=== Succesors ===
next: v909 
=== Usages ===
=== Predecessor ===
v814 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v480 address: v1190 lastLocationAccess: - value: a322 stateAfter: - #next: v909  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v909 <|@
d <@d|@=== Debug Properties ===
locations: [GC-Card, GC-Card-Queue-Log, GC-Card-Queue-Index, GC-Card-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: j849 
=== Usages ===
=== Predecessor ===
v323 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j849  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j849 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:184) [bci: 1] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: a850 
=== Usages ===
v1248 v1249 
=== Predecessor ===
v909 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: a850  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a850 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.FixedValueAnchorNode.getObject(Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:185) [bci: 7] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: a! java.util.HashMap$Node
=== Inputs ===
object: a190 
=== Succesors ===
next: j851 
=== Usages ===
j852 
=== Predecessor ===
j849 >@ <|@
instruction <@FixedValueAnchor|@jdk.graal.compiler.nodes.extended.FixedValueAnchorNode>@ object: a190 #next: j851  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j851 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:192) [bci: 36] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1190 
=== Succesors ===
next: j852 
=== Usages ===
j853 j866 
=== Predecessor ===
a850 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: v1190 #next: j852  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j852 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:208) [bci: 150] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a850 
=== Succesors ===
next: v856 
=== Usages ===
j853 v857 
=== Predecessor ===
j851 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a850 #next: v856  <|@  <|@
f <@~|@floating>@ <|@
tid j853 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:212) [bci: 165] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: i64
=== Inputs ===
x: j851 
y: j852 
=== Succesors ===
=== Usages ===
v888 
=== Predecessor ===
- >@ <|@
instruction <@^|@jdk.graal.compiler.nodes.calc.XorNode>@ x: j851 y: j852  <|@  <|@
f <@~|@floating>@ <|@
tid v888 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:215) [bci: 193] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
x: j853 
y: j887 
=== Succesors ===
=== Usages ===
v856 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@jdk.graal.compiler.nodes.calc.IntegerTestNode>@ x: j853 y: j887  <|@  <|@
f <@*|@fixed>@ <|@
tid v856 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:215) [bci: 201] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v888 
=== Succesors ===
trueSuccessor: v855 
falseSuccessor: v854 
=== Usages ===
=== Predecessor ===
j852 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v888 #trueSuccessor: v855 #falseSuccessor: v854  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B88" 
    xhandlers
    flags 
    probability 4590594123464754032
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v855 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v140 
=== Usages ===
=== Predecessor ===
v856 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v140  <|@  <|@
f <@*|@fixed>@ <|@
tid v140 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:667) [bci: 259]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v141 
=== Predecessor ===
v855 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4604846135197064160
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v854 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:216) [bci: 204] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v863 
=== Usages ===
=== Predecessor ===
v856 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v863  <|@  <|@
f <@~|@floating>@ <|@
tid v857 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:218) [bci: 218] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j852 
y: j570 
=== Succesors ===
=== Usages ===
v863 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j852 y: j570  <|@  <|@
f <@*|@fixed>@ <|@
tid v863 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:218) [bci: 226] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v857 
=== Succesors ===
trueSuccessor: v862 
falseSuccessor: v858 
=== Usages ===
=== Predecessor ===
v854 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v857 #trueSuccessor: v862 #falseSuccessor: v858  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B88" 
    xhandlers
    flags 
    probability 4590001153184595122
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v862 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1132 
=== Usages ===
=== Predecessor ===
v863 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1132  <|@  <|@
f <@*|@fixed>@ <|@
tid v1132 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v141 
=== Predecessor ===
v862 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4604179043631885386
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v858 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 229] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: i894 
=== Usages ===
=== Predecessor ===
v863 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i894  <|@  <|@
f <@~|@floating>@ <|@
tid j866 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.cardTableAddress(HotSpotG1WriteBarrierSnippets.java:131) [bci: 23]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 232] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: i64 [0 - 36028797018963967] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j851 
y: i865 
=== Succesors ===
=== Usages ===
j889 v1251 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j851 y: i865  <|@  <|@
f <@~|@floating>@ <|@
tid v1251 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j866 
index: j864 
=== Succesors ===
=== Usages ===
i894 i895 v896 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j866 index: j864  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i894 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:223) [bci: 243] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1251 
lastLocationAccess: - 
=== Succesors ===
next: v870 
=== Usages ===
v902 
=== Predecessor ===
v858 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1251 lastLocationAccess: - #next: v870  <|@  <|@
f <@~|@floating>@ <|@
tid v902 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:227) [bci: 265] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i894 
y: i901 
=== Succesors ===
=== Usages ===
v870 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i894 y: i901  <|@  <|@
f <@*|@fixed>@ <|@
tid v870 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:227) [bci: 276] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v902 
=== Succesors ===
trueSuccessor: v869 
falseSuccessor: v867 
=== Usages ===
=== Predecessor ===
i894 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v902 #trueSuccessor: v869 #falseSuccessor: v867  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B88" 
    xhandlers
    flags 
    probability 4603578661223224489
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v869 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1131 
=== Usages ===
=== Predecessor ===
v870 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1131  <|@  <|@
f <@*|@fixed>@ <|@
tid v1131 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v141 
=== Predecessor ===
v869 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4589467479932452103
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v867 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:228) [bci: 279] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v871 
=== Usages ===
=== Predecessor ===
v870 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v871  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v871 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_LOAD
fence: STORE_LOAD
location: GC-Card
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.MembarNode.memoryBarrier(MembarNode$FenceKind, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:228) [bci: 285] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: i895 
=== Usages ===
=== Predecessor ===
v867 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: i895  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i895 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:229) [bci: 294] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1251 
lastLocationAccess: - 
=== Succesors ===
next: v875 
=== Usages ===
v903 
=== Predecessor ===
v871 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1251 lastLocationAccess: - #next: v875  <|@  <|@
f <@~|@floating>@ <|@
tid v903 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:230) [bci: 308] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i895 
y: i840 
=== Succesors ===
=== Usages ===
v875 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i895 y: i840  <|@  <|@
f <@*|@fixed>@ <|@
tid v875 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:230) [bci: 319] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v903 
=== Succesors ===
trueSuccessor: v874 
falseSuccessor: v872 
=== Usages ===
=== Predecessor ===
i895 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v903 #trueSuccessor: v874 #falseSuccessor: v872  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B88" 
    xhandlers
    flags 
    probability 4588806327720511347
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v874 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1130 
=== Usages ===
=== Predecessor ===
v875 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1130  <|@  <|@
f <@*|@fixed>@ <|@
tid v1130 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v141 
=== Predecessor ===
v874 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4574334916984542422
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v872 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:231) [bci: 322] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v896 
=== Usages ===
=== Predecessor ===
v875 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v896  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v896 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:232) [bci: 358] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1251 
lastLocationAccess: - 
value: i840 
stateAfter: - 
=== Succesors ===
next: j897 
=== Usages ===
=== Predecessor ===
v872 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1251 lastLocationAccess: - value: i840 stateAfter: - #next: j897  <|@  <|@
f <@~|@floating>@ <|@
tid v1248 <|@
d <@d|@=== Debug Properties ===
displacement: 72
stamp: void*
stride: S1
=== Inputs ===
base: j849 
index: - 
=== Succesors ===
=== Usages ===
j897 v900 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j849 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j897 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:237) [bci: 378] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1248 
lastLocationAccess: - 
=== Succesors ===
next: v880 
=== Usages ===
v877 j893 v1250 
=== Predecessor ===
v896 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1248 lastLocationAccess: - #next: v880  <|@  <|@
f <@~|@floating>@ <|@
tid v877 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:238) [bci: 392] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j897 
y: j570 
=== Succesors ===
=== Usages ===
v880 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j897 y: j570  <|@  <|@
f <@~|@floating>@ <|@
tid j889 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.cardTableAddress(HotSpotG1WriteBarrierSnippets.java:131) [bci: 28]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 232] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: i64 [140438306553856 - 36169235325517823] bits:00000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j866 
y: j864 
=== Succesors ===
=== Usages ===
v884 v899 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j866 y: j864  <|@  <|@
f <@*|@fixed>@ <|@
tid v880 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:238) [bci: 398] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v877 
=== Succesors ===
trueSuccessor: v879 
falseSuccessor: v878 
=== Usages ===
=== Predecessor ===
j897 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v877 #trueSuccessor: v879 #falseSuccessor: v878  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B88" 
    xhandlers
    flags 
    probability 4559287139136259037
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v879 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:247) [bci: 458] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v884 
=== Usages ===
=== Predecessor ===
v880 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v884  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v884 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_post(Word)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-Card-Queue-Index, GC-Card-Queue-Buffer, GC-Card-Queue-Log, GC-Card], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_post
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostBarrierStub(ForeignCallDescriptor, Word) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostBarrierStub(G1WriteBarrierSnippets.java:413) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:247) [bci: 461] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: j889 
=== Succesors ===
next: v1128 
=== Usages ===
=== Predecessor ===
v879 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: j889 #next: v1128  <|@  <|@
f <@*|@fixed>@ <|@
tid v1128 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v141 
=== Predecessor ===
v884 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B88" 
    xhandlers
    flags 
    probability 4573566427501456474
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v878 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:239) [bci: 401] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: j898 
=== Usages ===
=== Predecessor ===
v880 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j898  <|@  <|@
f <@~|@floating>@ <|@
tid v1249 <|@
d <@d|@=== Debug Properties ===
displacement: 88
stamp: void*
stride: S1
=== Inputs ===
base: j849 
index: - 
=== Succesors ===
=== Usages ===
j898 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j849 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j898 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:239) [bci: 410] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1249 
lastLocationAccess: - 
=== Succesors ===
next: v899 
=== Usages ===
v1250 
=== Predecessor ===
v878 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1249 lastLocationAccess: - #next: v899  <|@  <|@
f <@~|@floating>@ <|@
tid v1250 <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j898 
index: j897 
=== Succesors ===
=== Usages ===
v899 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j898 index: j897  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v899 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card-Queue-Log
location: GC-Card-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:244) [bci: 438] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1250 
lastLocationAccess: - 
value: j889 
stateAfter: - 
=== Succesors ===
next: v900 
=== Usages ===
=== Predecessor ===
j898 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1250 lastLocationAccess: - value: j889 stateAfter: - #next: v900  <|@  <|@
f <@~|@floating>@ <|@
tid j893 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:240) [bci: 424] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: i64
=== Inputs ===
x: j897 
y: j831 
=== Succesors ===
=== Usages ===
v900 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j897 y: j831  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v900 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card-Queue-Index
location: GC-Card-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:245) [bci: 452] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1248 
lastLocationAccess: - 
value: j893 
stateAfter: - 
=== Succesors ===
next: v1129 
=== Usages ===
=== Predecessor ===
v899 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1248 lastLocationAccess: - value: j893 stateAfter: - #next: v1129  <|@  <|@
f <@*|@fixed>@ <|@
tid v1129 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v141 
=== Predecessor ===
v900 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v541 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:79) [bci: 75]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v586 
=== Usages ===
=== Predecessor ===
v543 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v586  <|@  <|@
f <@*|@fixed>@ <|@
tid v586 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v641 
=== Predecessor ===
v541 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B26" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v641 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v586 v592 
=== Succesors ===
next: v485 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v586 v592 #next: v485  <|@  <|@
tid ?643 <|@
d <@d|@=== Debug Properties ===
bci: 59
bytecode: aastore
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
localsSize: 13
locksSize: 0
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
sourceFile: HashMap.java
sourceLine: 637
stackSize: 3
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a26 i32 a190 a1 - - - - i6 
=== Succesors ===
=== Usages ===
v485 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a26 i32 a190 a1 - - - - i6  <|@  <|@
f <@*|@fixed>@ <|@
tid v485 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 324
mayConvertToGuard: true
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
reason: ArrayStoreException
speculation: jdk.vm.ci.meta.SpeculationLog$NoSpeculationReason@7f1c506c
stamp: void
=== Inputs ===
stateBefore: ?643 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v641 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?643  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v202 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: v665 
=== Usages ===
=== Predecessor ===
v204 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v665  <|@  <|@
f <@~|@floating>@ <|@
tid j667 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:636) [bci: 40]
rawvalue: 5780
stableDimension: 0
stamp: i64 [5780]
stampKind: i64
value: long[5780|0x1694]
=== Inputs ===
=== Succesors ===
=== Usages ===
j661 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i666 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:636) [bci: 40]
rawvalue: -51507
stableDimension: 0
stamp: i32 [-51507]
stampKind: i32
value: int[-51507|0xffffffffffff36cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i660 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v665 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:636) [bci: 40]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v657 
=== Predecessor ===
v202 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B49" "B54" 
    xhandlers
    flags 
    probability 4595548303301553864
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v35 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:640) [bci: 63]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1148 
=== Usages ===
=== Predecessor ===
v37 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i1148  <|@  <|@
f <@~|@floating>@ <|@
tid v1192 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a1143 
=== Succesors ===
=== Usages ===
i1148 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1143  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1148 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: HashMap$Node.hash
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:640) [bci: 65]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1192 
lastLocationAccess: - 
=== Succesors ===
next: v48 
=== Usages ===
v45 
=== Predecessor ===
v35 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1192 lastLocationAccess: - #next: v48  <|@  <|@
f <@~|@floating>@ <|@
tid v45 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:640) [bci: 69]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i1148 
=== Succesors ===
=== Usages ===
v48 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i2 y: i1148  <|@  <|@
f <@~|@floating>@ <|@
tid a304 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:636) [bci: 40]
op: Uncompress
stamp: a java.util.HashMap$Node
=== Inputs ===
value: a1143 
=== Succesors ===
=== Usages ===
v346 ?650 a79 ?58 a79 a83 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1143  <|@  <|@
f <@~|@floating>@ <|@
tid v1252 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
v1150 v1155 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@*|@fixed>@ <|@
tid v48 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:640) [bci: 69]
profileData: PROFILED designatedSuccessorProbability: 0.01987559010066231
stamp: void
=== Inputs ===
condition: v45 
=== Succesors ===
trueSuccessor: v47 
falseSuccessor: v46 
=== Usages ===
=== Predecessor ===
i1148 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v45 #trueSuccessor: v47 #falseSuccessor: v46  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4570262383476918658
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v47 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:640) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1149 
=== Usages ===
=== Predecessor ===
v48 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a1149  <|@  <|@
f <@~|@floating>@ <|@
tid v1193 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a1143 
=== Succesors ===
=== Usages ===
a1149 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1143  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1149 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: HashMap$Node.key
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:640) [bci: 74]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1193 
lastLocationAccess: - 
=== Succesors ===
next: v53 
=== Usages ===
a332 
=== Predecessor ===
v47 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1193 lastLocationAccess: - #next: v53  <|@  <|@
f <@~|@floating>@ <|@
tid a332 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:640) [bci: 74]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a1149 
=== Succesors ===
=== Usages ===
v50 v342 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1149  <|@  <|@
f <@~|@floating>@ <|@
tid v50 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:640) [bci: 81]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a3 
y: a332 
=== Succesors ===
=== Usages ===
v53 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.ObjectEqualsNode>@ x: a3 y: a332  <|@  <|@
f <@*|@fixed>@ <|@
tid v53 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:640) [bci: 81]
profileData: PROFILED designatedSuccessorProbability: 0.9854570809572428
stamp: void
=== Inputs ===
condition: v50 
=== Succesors ===
trueSuccessor: v52 
falseSuccessor: v51 
=== Usages ===
=== Predecessor ===
a1149 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v50 #trueSuccessor: v52 #falseSuccessor: v51  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B86" 
    xhandlers
    flags 
    probability 4570144353713859813
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v52 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:642) [bci: 97]
stamp: void
=== Inputs ===
=== Succesors ===
next: v76 
=== Usages ===
=== Predecessor ===
v53 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v76  <|@  <|@
f <@*|@fixed>@ <|@
tid v76 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:659) [bci: 222]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v77 
=== Predecessor ===
v52 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4542678729597855531
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v51 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:640) [bci: 84]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1150 
=== Usages ===
=== Predecessor ===
v53 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1150  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1150 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140436756758528 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-85259|0xfffffffffffeb2f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:641) [bci: 91]
stamp: Klass*!(compressed base: 140436756758528 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?28 
guard: - 
address: v1252 
lastLocationAccess: - 
=== Succesors ===
next: v338 
=== Usages ===
v912 
=== Predecessor ===
v51 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?28 guard: - address: v1252 lastLocationAccess: - #next: v338  <|@  <|@
f <@~|@floating>@ <|@
tid v912 <|@
d <@d|@=== Debug Properties ===
encoding: base: 140436756758528 shift: 0
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:641) [bci: 91]
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v1150 
=== Succesors ===
=== Usages ===
v1194 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v1150  <|@  <|@
f <@~|@floating>@ <|@
tid v1194 <|@
d <@d|@=== Debug Properties ===
displacement: 464
stamp: void*
stride: S1
=== Inputs ===
base: v912 
index: - 
=== Succesors ===
=== Usages ===
v338 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v912 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v338 <|@
d <@d|@=== Debug Properties ===
accessStamp: Method*!
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:641) [bci: 91]
stamp: Method*!
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1194 
lastLocationAccess: - 
=== Succesors ===
next: j341 
=== Usages ===
v1195 v342 
=== Predecessor ===
v1150 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1194 lastLocationAccess: - #next: j341  <|@  <|@
f <@~|@floating>@ <|@
tid v1195 <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: v338 
index: - 
=== Succesors ===
=== Usages ===
j341 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v338 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j341 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:641) [bci: 91]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1195 
lastLocationAccess: - 
=== Succesors ===
next: i57 
=== Usages ===
v342 
=== Predecessor ===
v338 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1195 lastLocationAccess: - #next: i57  <|@  <|@
tid v342 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:641) [bci: 91]
referencedType: [null]
returnStamp: i32 [0 - 1] bits:0...0x
signature: [HotSpotType<Ljava/lang/Object;, resolved>, UnresolvedJavaType<Ljava/lang/Object;>]
stamp: void
targetMethod: HotSpotMethod<Object.equals(Object)>
=== Inputs ===
computedAddress: j341 
metaspaceMethod: v338 
arguments: a3 a332 
=== Succesors ===
=== Usages ===
i57 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotIndirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotIndirectCallTargetNode>@ computedAddress: j341 metaspaceMethod: v338 arguments: a3 a332  <|@  <|@
tid ?650 <|@
d <@d|@=== Debug Properties ===
bci: 91
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
localsSize: 13
locksSize: 0
sourceFile: HashMap.java
sourceLine: 641
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i2 a3 a4 i5 i6 a26 a304 
=== Succesors ===
=== Usages ===
i57 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 a3 a4 i5 i6 a26 a304  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i57 <|@
d <@d|@=== Debug Properties ===
bci: 91
identity: ANY_LOCATION
inlineControl: Normal
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:641) [bci: 91]
polymorphic: true
stamp: i32 [0 - 1] bits:0...0x
targetMethod: Indirect#Object.equals
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v342 
stateDuring: ?650 
=== Succesors ===
next: v602 
=== Usages ===
v59 
=== Predecessor ===
j341 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v342 stateDuring: ?650 #next: v602  <|@  <|@
f <@~|@floating>@ <|@
tid v59 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:641) [bci: 94]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i57 
y: i15 
=== Succesors ===
=== Usages ===
v602 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i57 y: i15  <|@  <|@
f <@*|@fixed>@ <|@
tid v602 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:641) [bci: 94]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v59 
=== Succesors ===
trueSuccessor: v600 
falseSuccessor: v601 
=== Usages ===
=== Predecessor ===
i57 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v59 #trueSuccessor: v600 #falseSuccessor: v601  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v600 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:641) [bci: 94]
stamp: void
=== Inputs ===
=== Succesors ===
next: v599 
=== Usages ===
=== Predecessor ===
v602 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v599  <|@  <|@
tid ?58 <|@
d <@d|@=== Debug Properties ===
bci: 94
bytecode: ifeq
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
localsSize: 13
locksSize: 0
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:641) [bci: 91]
sourceFile: HashMap.java
sourceLine: 641
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: i15 a1 i2 a3 a4 i5 i6 a26 a304 
=== Succesors ===
=== Usages ===
v599 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: i15 a1 i2 a3 a4 i5 i6 a26 a304  <|@  <|@
f <@*|@fixed>@ <|@
tid v599 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 0
mayConvertToGuard: true
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:641) [bci: 94]
reason: UnreachedCode
speculation: {0x0000000000000294[index: 20, len: 20, hash: 0x5bfbb5d0]: UnreachedCode@5[HotSpotMethod<HashMap.putVal(int, Object, Object, boolean, boolean)>, 104]}
stamp: void
=== Inputs ===
stateBefore: ?58 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v600 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?58  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B86" 
    xhandlers
    flags 
    probability 4542678729597855531
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v601 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:642) [bci: 97]
stamp: void
=== Inputs ===
=== Succesors ===
next: v188 
=== Usages ===
=== Predecessor ===
v602 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v188  <|@  <|@
f <@*|@fixed>@ <|@
tid v188 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:642) [bci: 97]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v77 
=== Predecessor ===
v601 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4595421491411700642
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v46 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:643) [bci: 104]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1151 
=== Usages ===
=== Predecessor ===
v48 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1151  <|@  <|@
f <@~|@floating>@ <|@
tid v1253 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a1143 
=== Succesors ===
=== Usages ===
v1151 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1143  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1151 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140436756758528 shift: 0)
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubOrNullIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 1] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:643) [bci: 106]
stamp: Klass*!(compressed base: 140436756758528 shift: 0)
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1253 
lastLocationAccess: - 
=== Succesors ===
next: v69 
=== Usages ===
v1168 
=== Predecessor ===
v46 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1253 lastLocationAccess: - #next: v69  <|@  <|@
f <@~|@floating>@ <|@
tid v1167 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 12] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:643) [bci: 106]
rawvalue: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 140436756758528 shift: 0)
stampKind: Klass*(compressed base: 140436756758528 shift: 0)
value: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1168 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1168 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 12] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:643) [bci: 106]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1151 
y: v1167 
=== Succesors ===
=== Usages ===
v69 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: v1151 y: v1167  <|@  <|@
f <@*|@fixed>@ <|@
tid v69 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:643) [bci: 109]
profileData: PROFILED designatedSuccessorProbability: 2.021089053783065E-6
stamp: void
=== Inputs ===
condition: v1168 
=== Succesors ===
trueSuccessor: v68 
falseSuccessor: v1164 
=== Usages ===
=== Predecessor ===
v1151 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1168 #trueSuccessor: v68 #falseSuccessor: v1164  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B86" 
    xhandlers
    flags 
    probability 4510226010095555986
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v68 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:644) [bci: 112]
stamp: void
=== Inputs ===
=== Succesors ===
next: a74 
=== Usages ===
=== Predecessor ===
v69 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a74  <|@  <|@
tid v346 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:644) [bci: 123]
referencedType: [null]
returnStamp: a# java.util.HashMap$TreeNode
signature: [HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>, UnresolvedJavaType<Ljava/util/HashMap;>, UnresolvedJavaType<[Ljava/util/HashMap$Node;>, HotSpotResolvedPrimitiveType<int>, UnresolvedJavaType<Ljava/lang/Object;>, UnresolvedJavaType<Ljava/lang/Object;>]
stamp: void
targetMethod: HotSpotMethod<HashMap$TreeNode.putTreeVal(HashMap, HashMap$Node[], int, Object, Object)>
=== Inputs ===
arguments: a304 a1 a26 i2 a3 a4 
=== Succesors ===
=== Usages ===
a74 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a304 a1 a26 i2 a3 a4  <|@  <|@
tid ?648 <|@
d <@d|@=== Debug Properties ===
bci: 123
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
localsSize: 13
locksSize: 0
sourceFile: HashMap.java
sourceLine: 644
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 - - a4 i5 i6 
=== Succesors ===
=== Usages ===
a74 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - a4 i5 i6  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a74 <|@
d <@d|@=== Debug Properties ===
bci: 123
identity: ANY_LOCATION
inlineControl: Normal
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:644) [bci: 123]
polymorphic: false
stamp: a# java.util.HashMap$TreeNode
targetMethod: Direct#HashMap$TreeNode.putTreeVal
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v346 
stateDuring: ?648 
=== Succesors ===
next: v78 
=== Usages ===
a79 
=== Predecessor ===
v68 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v346 stateDuring: ?648 #next: v78  <|@  <|@
f <@*|@fixed>@ <|@
tid v78 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:659) [bci: 222]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v77 
=== Predecessor ===
a74 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4595421478772878611
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1164 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:646) [bci: 131]
stamp: void
=== Inputs ===
=== Succesors ===
next: v81 
=== Usages ===
=== Predecessor ===
v69 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v81  <|@  <|@
f <@*|@fixed>@ <|@
tid v81 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v82 
=== Predecessor ===
v1164 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B62" 
    successors "B65" "B58" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4595777537596400292
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a83 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
stamp: a java.util.HashMap$Node
valueDescription: a java.lang.Object
=== Inputs ===
merge: v82 
values: a304 a353 
=== Succesors ===
=== Usages ===
?85 j974 ?651 v1196 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v82 values: a304 a353  <|@  <|@
f <@~|@floating>@ <|@
tid i84 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v82 
values: i15 i119 
=== Succesors ===
=== Usages ===
?85 v127 ?112 i119 ?651 ?649 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v82 values: i15 i119  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v82 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: true
canNeverOverflow: false
cloneFromNodeId: -1
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
osrLoop: false
peelings: 0
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v81 
=== Succesors ===
next: a1152 
=== Usages ===
a83 i84 v90 v105 v116 v120 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v81 #next: a1152  <|@  <|@
tid ?85 <|@
d <@d|@=== Debug Properties ===
bci: 134
bytecode: aload
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
localsSize: 13
locksSize: 0
sourceFile: HashMap.java
sourceLine: 647
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i2 a3 a4 i5 i6 a26 a83 - - - - i84 
=== Succesors ===
=== Usages ===
v1155 v504 a1152 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 a3 a4 i5 i6 a26 a83 - - - - i84  <|@  <|@
f <@~|@floating>@ <|@
tid v1196 <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S1
=== Inputs ===
base: a83 
index: - 
=== Succesors ===
=== Usages ===
a1152 v383 j932 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a83 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1152 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.HashMap$Node
barrierType: NONE
deoptReasonAndAction: int[-89099|0xfffffffffffea3f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: HashMap$Node.next
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:647) [bci: 136]
stamp: n java.util.HashMap$Node
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?85 
guard: - 
address: v1196 
lastLocationAccess: - 
=== Succesors ===
next: v95 
=== Usages ===
a353 v354 v1197 v1198 
=== Predecessor ===
v82 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?85 guard: - address: v1196 lastLocationAccess: - #next: v95  <|@  <|@
f <@~|@floating>@ <|@
tid a353 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:647) [bci: 136]
op: Uncompress
stamp: a java.util.HashMap$Node
=== Inputs ===
value: a1152 
=== Succesors ===
=== Usages ===
a79 a79 a79 a83 a79 ?112 ?649 ?651 ?652 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1152  <|@  <|@
f <@~|@floating>@ <|@
tid v354 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:653) [bci: 177]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a1152 
=== Succesors ===
=== Usages ===
v95 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a1152  <|@  <|@
f <@*|@fixed>@ <|@
tid v95 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:647) [bci: 142]
profileData: PROFILED designatedSuccessorProbability: 0.5880075530332061
stamp: void
=== Inputs ===
condition: v354 
=== Succesors ===
trueSuccessor: v90 
falseSuccessor: v88 
=== Usages ===
=== Predecessor ===
a1152 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v354 #trueSuccessor: v90 #falseSuccessor: v88  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4590110563079390205
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v88 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:653) [bci: 175]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1153 
=== Usages ===
=== Predecessor ===
v95 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i1153  <|@  <|@
f <@~|@floating>@ <|@
tid v1197 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a1152 
=== Succesors ===
=== Usages ===
i1153 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1152  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1153 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: HashMap$Node.hash
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:653) [bci: 177]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1197 
lastLocationAccess: - 
=== Succesors ===
next: v100 
=== Usages ===
v97 
=== Predecessor ===
v88 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1197 lastLocationAccess: - #next: v100  <|@  <|@
f <@~|@floating>@ <|@
tid v97 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:653) [bci: 181]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i1153 
=== Succesors ===
=== Usages ===
v100 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i2 y: i1153  <|@  <|@
f <@*|@fixed>@ <|@
tid v100 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:653) [bci: 181]
profileData: PROFILED designatedSuccessorProbability: 0.8692436604445373
stamp: void
=== Inputs ===
condition: v97 
=== Succesors ===
trueSuccessor: v99 
falseSuccessor: v98 
=== Usages ===
=== Predecessor ===
i1153 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v97 #trueSuccessor: v99 #falseSuccessor: v98  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B64" "B60" 
    xhandlers
    flags 
    probability 4589398445432346844
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v99 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:653) [bci: 184]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1154 
=== Usages ===
=== Predecessor ===
v100 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a1154  <|@  <|@
f <@~|@floating>@ <|@
tid v1198 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a1152 
=== Succesors ===
=== Usages ===
a1154 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1152  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1154 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: HashMap$Node.key
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:653) [bci: 186]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1198 
lastLocationAccess: - 
=== Succesors ===
next: v108 
=== Usages ===
a361 
=== Predecessor ===
v99 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1198 lastLocationAccess: - #next: v108  <|@  <|@
f <@~|@floating>@ <|@
tid a361 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:653) [bci: 186]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a1154 
=== Succesors ===
=== Usages ===
v102 v369 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1154  <|@  <|@
f <@~|@floating>@ <|@
tid v102 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:653) [bci: 193]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a3 
y: a361 
=== Succesors ===
=== Usages ===
v108 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.ObjectEqualsNode>@ x: a3 y: a361  <|@  <|@
f <@*|@fixed>@ <|@
tid v108 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:653) [bci: 193]
profileData: PROFILED designatedSuccessorProbability: 0.9998932466496128
stamp: void
=== Inputs ===
condition: v102 
=== Succesors ===
trueSuccessor: v105 
falseSuccessor: v103 
=== Usages ===
=== Predecessor ===
a1154 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v102 #trueSuccessor: v105 #falseSuccessor: v103  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B63" 
    xhandlers
    flags 
    probability 4529894057192690854
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v103 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:653) [bci: 196]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1155 
=== Usages ===
=== Predecessor ===
v108 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1155  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1155 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140436756758528 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-92683|0xfffffffffffe95f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:654) [bci: 203]
stamp: Klass*!(compressed base: 140436756758528 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?85 
guard: - 
address: v1252 
lastLocationAccess: - 
=== Succesors ===
next: v366 
=== Usages ===
v927 
=== Predecessor ===
v103 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?85 guard: - address: v1252 lastLocationAccess: - #next: v366  <|@  <|@
f <@~|@floating>@ <|@
tid v927 <|@
d <@d|@=== Debug Properties ===
encoding: base: 140436756758528 shift: 0
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:654) [bci: 203]
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v1155 
=== Succesors ===
=== Usages ===
v1199 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v1155  <|@  <|@
f <@~|@floating>@ <|@
tid v1199 <|@
d <@d|@=== Debug Properties ===
displacement: 464
stamp: void*
stride: S1
=== Inputs ===
base: v927 
index: - 
=== Succesors ===
=== Usages ===
v366 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v927 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v366 <|@
d <@d|@=== Debug Properties ===
accessStamp: Method*!
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:654) [bci: 203]
stamp: Method*!
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1199 
lastLocationAccess: - 
=== Succesors ===
next: j368 
=== Usages ===
v1200 v369 
=== Predecessor ===
v1155 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1199 lastLocationAccess: - #next: j368  <|@  <|@
f <@~|@floating>@ <|@
tid v1200 <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: v366 
index: - 
=== Succesors ===
=== Usages ===
j368 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v366 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j368 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:654) [bci: 203]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1200 
lastLocationAccess: - 
=== Succesors ===
next: i111 
=== Usages ===
v369 
=== Predecessor ===
v366 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1200 lastLocationAccess: - #next: i111  <|@  <|@
tid v369 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:654) [bci: 203]
referencedType: [null]
returnStamp: i32 [0 - 1] bits:0...0x
signature: [HotSpotType<Ljava/lang/Object;, resolved>, UnresolvedJavaType<Ljava/lang/Object;>]
stamp: void
targetMethod: HotSpotMethod<Object.equals(Object)>
=== Inputs ===
computedAddress: j368 
metaspaceMethod: v366 
arguments: a3 a361 
=== Succesors ===
=== Usages ===
i111 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotIndirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotIndirectCallTargetNode>@ computedAddress: j368 metaspaceMethod: v366 arguments: a3 a361  <|@  <|@
tid ?649 <|@
d <@d|@=== Debug Properties ===
bci: 203
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
localsSize: 13
locksSize: 0
sourceFile: HashMap.java
sourceLine: 654
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i2 a3 a4 i5 i6 a26 - - - a353 - i84 
=== Succesors ===
=== Usages ===
i111 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 a3 a4 i5 i6 a26 - - - a353 - i84  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i111 <|@
d <@d|@=== Debug Properties ===
bci: 203
identity: ANY_LOCATION
inlineControl: Normal
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:654) [bci: 203]
polymorphic: true
stamp: i32 [0 - 1] bits:0...0x
targetMethod: Indirect#Object.equals
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v369 
stateDuring: ?649 
=== Succesors ===
next: v619 
=== Usages ===
v113 
=== Predecessor ===
j368 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v369 stateDuring: ?649 #next: v619  <|@  <|@
f <@~|@floating>@ <|@
tid v113 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:654) [bci: 206]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i111 
y: i15 
=== Succesors ===
=== Usages ===
v619 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i111 y: i15  <|@  <|@
f <@*|@fixed>@ <|@
tid v619 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:654) [bci: 206]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v113 
=== Succesors ===
trueSuccessor: v618 
falseSuccessor: v116 
=== Usages ===
=== Predecessor ===
i111 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v113 #trueSuccessor: v618 #falseSuccessor: v116  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v618 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:654) [bci: 206]
stamp: void
=== Inputs ===
=== Succesors ===
next: v617 
=== Usages ===
=== Predecessor ===
v619 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v617  <|@  <|@
tid ?112 <|@
d <@d|@=== Debug Properties ===
bci: 206
bytecode: ifeq
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
localsSize: 13
locksSize: 0
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:654) [bci: 203]
sourceFile: HashMap.java
sourceLine: 654
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: i15 a1 i2 a3 a4 i5 i6 a26 - - - a353 - i84 
=== Succesors ===
=== Usages ===
v617 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: i15 a1 i2 a3 a4 i5 i6 a26 - - - a353 - i84  <|@  <|@
f <@*|@fixed>@ <|@
tid v617 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 0
mayConvertToGuard: true
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:654) [bci: 206]
reason: UnreachedCode
speculation: {0x0000000000000514[index: 40, len: 20, hash: 0x5bfbb53c]: UnreachedCode@5[HotSpotMethod<HashMap.putVal(int, Object, Object, boolean, boolean)>, 212]}
stamp: void
=== Inputs ===
stateBefore: ?112 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v618 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?112  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B57" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4576850562957400324
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v98 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:656) [bci: 212]
stamp: void
=== Inputs ===
=== Succesors ===
next: v504 
=== Usages ===
=== Predecessor ===
v100 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v504  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v504 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
stamp: void
=== Inputs ===
stateBefore: ?85 
=== Succesors ===
next: v120 
=== Usages ===
=== Predecessor ===
v98 >@ <|@
instruction <@Safepoint|@jdk.graal.compiler.nodes.SafepointNode>@ stateBefore: ?85 #next: v120  <|@  <|@
f <@~|@floating>@ <|@
tid i119 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:646) [bci: 216]
stamp: i32
=== Inputs ===
x: i84 
y: i29 
=== Succesors ===
=== Usages ===
i84 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i84 y: i29  <|@  <|@
f <@*|@fixed>@ <|@
tid v120 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: true
endIndex: 0
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
stamp: void
=== Inputs ===
loopBegin: v82 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v504 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v82  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B86" 
    xhandlers
    flags 
    probability 4529894057192690854
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v116 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:655) [bci: 209]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v82 
=== Succesors ===
next: v136 
=== Usages ===
=== Predecessor ===
v619 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v82 #next: v136  <|@  <|@
f <@*|@fixed>@ <|@
tid v136 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:659) [bci: 222]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v77 
=== Predecessor ===
v116 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B86" 
    xhandlers
    flags 
    probability 4589397940059341918
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v105 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:659) [bci: 222]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v82 
=== Succesors ===
next: v104 
=== Usages ===
=== Predecessor ===
v108 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v82 #next: v104  <|@  <|@
f <@*|@fixed>@ <|@
tid v104 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:659) [bci: 222]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v77 
=== Predecessor ===
v105 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4592437312858669387
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v90 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:648) [bci: 145]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v82 
=== Succesors ===
next: v374 
=== Usages ===
=== Predecessor ===
v95 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v82 #next: v374  <|@  <|@
f <@~|@floating>@ <|@
tid v1201 <|@
d <@d|@=== Debug Properties ===
displacement: 680
stamp: void*
stride: S1
=== Inputs ===
base: v697 
index: - 
=== Succesors ===
=== Usages ===
v374 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v697 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v374 <|@
d <@d|@=== Debug Properties ===
accessStamp: Method*!
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:648) [bci: 152]
stamp: Method*!
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1201 
lastLocationAccess: - 
=== Succesors ===
next: j376 
=== Usages ===
v1202 v377 
=== Predecessor ===
v90 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1201 lastLocationAccess: - #next: j376  <|@  <|@
f <@~|@floating>@ <|@
tid v1202 <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: v374 
index: - 
=== Succesors ===
=== Usages ===
j376 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v374 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j376 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:648) [bci: 152]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1202 
lastLocationAccess: - 
=== Succesors ===
next: a122 
=== Usages ===
v377 
=== Predecessor ===
v374 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1202 lastLocationAccess: - #next: a122  <|@  <|@
tid v377 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:648) [bci: 152]
referencedType: [null]
returnStamp: a java.util.HashMap$Node
signature: [HotSpotType<Ljava/util/HashMap;, resolved>, HotSpotResolvedPrimitiveType<int>, UnresolvedJavaType<Ljava/lang/Object;>, UnresolvedJavaType<Ljava/lang/Object;>, UnresolvedJavaType<Ljava/util/HashMap$Node;>]
stamp: void
targetMethod: HotSpotMethod<HashMap.newNode(int, Object, Object, HashMap$Node)>
=== Inputs ===
computedAddress: j376 
metaspaceMethod: v374 
arguments: a1 i2 a3 a4 a9 
=== Succesors ===
=== Usages ===
a122 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotIndirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotIndirectCallTargetNode>@ computedAddress: j376 metaspaceMethod: v374 arguments: a1 i2 a3 a4 a9  <|@  <|@
tid ?651 <|@
d <@d|@=== Debug Properties ===
bci: 152
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
localsSize: 13
locksSize: 0
sourceFile: HashMap.java
sourceLine: 648
stackSize: 1
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a83 a1 i2 - a4 i5 i6 a26 - - - a353 - i84 
=== Succesors ===
=== Usages ===
a122 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a83 a1 i2 - a4 i5 i6 a26 - - - a353 - i84  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a122 <|@
d <@d|@=== Debug Properties ===
bci: 152
identity: ANY_LOCATION
inlineControl: Normal
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:648) [bci: 152]
polymorphic: true
stamp: a java.util.HashMap$Node
targetMethod: Indirect#HashMap.newNode
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v377 
stateDuring: ?651 
=== Succesors ===
next: v970 
=== Usages ===
a973 a381 
=== Predecessor ===
j376 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v377 stateDuring: ?651 #next: v970  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v970 <|@
d <@d|@=== Debug Properties ===
locations: [GC-SATB-Queue-Log, GC-SATB-Marking-Active, GC-SATB-Queue-Index, GC-SATB-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
=== Inputs ===
=== Succesors ===
next: j931 
=== Usages ===
=== Predecessor ===
a122 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j931  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j931 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:127) [bci: 10]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j932 
=== Usages ===
v1254 v1256 v1257 
=== Predecessor ===
v970 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j932  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j932 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:129) [bci: 21]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1196 
=== Succesors ===
next: i957 
=== Usages ===
v1255 
=== Predecessor ===
j931 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: v1196 #next: i957  <|@  <|@
f <@~|@floating>@ <|@
tid v1254 <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: j931 
index: - 
=== Succesors ===
=== Usages ===
i957 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j931 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i957 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Marking-Active
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:130) [bci: 35]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1254 
lastLocationAccess: - 
=== Succesors ===
next: v936 
=== Usages ===
v964 
=== Predecessor ===
j932 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1254 lastLocationAccess: - #next: v936  <|@  <|@
f <@~|@floating>@ <|@
tid v964 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i957 
y: i840 
=== Succesors ===
=== Usages ===
v936 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i957 y: i840  <|@  <|@
f <@*|@fixed>@ <|@
tid v936 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 217]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v964 
=== Succesors ===
trueSuccessor: v935 
falseSuccessor: v934 
=== Usages ===
=== Predecessor ===
i957 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v964 #trueSuccessor: v935 #falseSuccessor: v934  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B72" 
    xhandlers
    flags 
    probability 4591660023639118941
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v935 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
=== Inputs ===
=== Succesors ===
next: v939 
=== Usages ===
=== Predecessor ===
v936 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v939  <|@  <|@
f <@*|@fixed>@ <|@
tid v939 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v940 
=== Predecessor ===
v935 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4577371935537457006
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v934 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:150) [bci: 220]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
=== Inputs ===
=== Succesors ===
next: a958 
=== Usages ===
=== Predecessor ===
v936 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a958  <|@  <|@
f <@~|@floating>@ <|@
tid v1255 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j932 
index: - 
=== Succesors ===
=== Usages ===
a958 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j932 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a958 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1255 
lastLocationAccess: - 
=== Succesors ===
next: v943 
=== Usages ===
a959 v965 
=== Predecessor ===
v934 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1255 lastLocationAccess: - #next: v943  <|@  <|@
f <@~|@floating>@ <|@
tid v965 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 296]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a958 
=== Succesors ===
=== Usages ===
v943 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a958  <|@  <|@
f <@*|@fixed>@ <|@
tid v943 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 307]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v965 
=== Succesors ===
trueSuccessor: v942 
falseSuccessor: v938 
=== Usages ===
=== Predecessor ===
a958 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v965 #trueSuccessor: v942 #falseSuccessor: v938  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B72" 
    xhandlers
    flags 
    probability 4562617473904064804
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v942 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
=== Inputs ===
=== Succesors ===
next: v941 
=== Usages ===
=== Predecessor ===
v943 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v941  <|@  <|@
f <@*|@fixed>@ <|@
tid v941 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v940 
=== Predecessor ===
v942 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" "B71" 
    xhandlers
    flags 
    probability 4576750104161816650
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v938 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:163) [bci: 310]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
=== Inputs ===
=== Succesors ===
next: j960 
=== Usages ===
=== Predecessor ===
v943 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j960  <|@  <|@
f <@~|@floating>@ <|@
tid v1256 <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: j931 
index: - 
=== Succesors ===
=== Usages ===
j960 v963 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j931 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j960 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:166) [bci: 327]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1256 
lastLocationAccess: - 
=== Succesors ===
next: v948 
=== Usages ===
v945 j956 v1258 
=== Predecessor ===
v938 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1256 lastLocationAccess: - #next: v948  <|@  <|@
f <@~|@floating>@ <|@
tid v945 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 341]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j960 
y: j570 
=== Succesors ===
=== Usages ===
v948 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j960 y: j570  <|@  <|@
f <@~|@floating>@ <|@
tid a959 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a958 
=== Succesors ===
=== Usages ===
j950 v953 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a958  <|@  <|@
f <@*|@fixed>@ <|@
tid v948 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 347]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v945 
=== Succesors ===
trueSuccessor: v947 
falseSuccessor: v946 
=== Usages ===
=== Predecessor ===
j960 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v945 #trueSuccessor: v947 #falseSuccessor: v946  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    probability 4562093595080792590
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v947 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 410]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
=== Inputs ===
=== Succesors ===
next: v953 
=== Usages ===
=== Predecessor ===
v948 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v953  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v953 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_pre(Object)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-SATB-Queue-Index, GC-SATB-Queue-Buffer, GC-SATB-Queue-Log], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_pre
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(ForeignCallDescriptor, Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(G1WriteBarrierSnippets.java:409) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 413]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: a959 
=== Succesors ===
next: v954 
=== Usages ===
=== Predecessor ===
v947 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: a959 #next: v954  <|@  <|@
f <@*|@fixed>@ <|@
tid v954 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v940 
=== Predecessor ===
v953 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    probability 4576190455923740329
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v946 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 350]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
=== Inputs ===
=== Succesors ===
next: j961 
=== Usages ===
=== Predecessor ===
v948 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j961  <|@  <|@
f <@~|@floating>@ <|@
tid v1257 <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: j931 
index: - 
=== Succesors ===
=== Usages ===
j961 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j931 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j961 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 359]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1257 
lastLocationAccess: - 
=== Succesors ===
next: j950 
=== Usages ===
v1258 
=== Predecessor ===
v946 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1257 lastLocationAccess: - #next: j950  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j950 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 384]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a959 
=== Succesors ===
next: v962 
=== Usages ===
v962 
=== Predecessor ===
j961 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a959 #next: v962  <|@  <|@
f <@~|@floating>@ <|@
tid v1258 <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j961 
index: j960 
=== Succesors ===
=== Usages ===
v962 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j961 index: j960  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v962 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Log
location: GC-SATB-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 390]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1258 
lastLocationAccess: - 
value: j950 
stateAfter: - 
=== Succesors ===
next: v963 
=== Usages ===
=== Predecessor ===
j950 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1258 lastLocationAccess: - value: j950 stateAfter: - #next: v963  <|@  <|@
f <@~|@floating>@ <|@
tid j956 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: i64
=== Inputs ===
x: j960 
y: j831 
=== Succesors ===
=== Usages ===
v963 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j960 y: j831  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v963 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Index
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:173) [bci: 404]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1256 
lastLocationAccess: - 
value: j956 
stateAfter: - 
=== Succesors ===
next: v952 
=== Usages ===
=== Predecessor ===
v962 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1256 lastLocationAccess: - value: j956 stateAfter: - #next: v952  <|@  <|@
f <@*|@fixed>@ <|@
tid v952 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v940 
=== Predecessor ===
v963 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B66" "B68" "B71" "B70" 
    successors "B73" "B74" 
    xhandlers
    flags 
    probability 4592437312858669387
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v940 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v939 v941 v952 v954 
=== Succesors ===
next: v383 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v939 v941 v952 v954 #next: v383  <|@  <|@
f <@~|@floating>@ <|@
tid a381 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
op: Compress
stamp: n java.util.HashMap$Node
=== Inputs ===
value: a122 
=== Succesors ===
=== Usages ===
v383 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a122  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v383 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: HashMap$Node.next
location: HashMap$Node.next
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1196 
lastLocationAccess: - 
value: a381 
stateAfter: - 
=== Succesors ===
next: v1026 
=== Usages ===
=== Predecessor ===
v940 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1196 lastLocationAccess: - value: a381 stateAfter: - #next: v1026  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1026 <|@
d <@d|@=== Debug Properties ===
locations: [GC-Card, GC-Card-Queue-Log, GC-Card-Queue-Index, GC-Card-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
=== Inputs ===
=== Succesors ===
next: j972 
=== Usages ===
=== Predecessor ===
v383 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j972  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j972 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:184) [bci: 1] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: a973 
=== Usages ===
v1259 v1260 
=== Predecessor ===
v1026 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: a973  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a973 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.FixedValueAnchorNode.getObject(Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:185) [bci: 7] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: a java.util.HashMap$Node
=== Inputs ===
object: a122 
=== Succesors ===
next: j974 
=== Usages ===
j975 
=== Predecessor ===
j972 >@ <|@
instruction <@FixedValueAnchor|@jdk.graal.compiler.nodes.extended.FixedValueAnchorNode>@ object: a122 #next: j974  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j974 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:197) [bci: 56] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a83 
=== Succesors ===
next: j975 
=== Usages ===
j976 j987 
=== Predecessor ===
a973 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a83 #next: j975  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j975 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:208) [bci: 150] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a973 
=== Succesors ===
next: v979 
=== Usages ===
j976 v980 
=== Predecessor ===
j974 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a973 #next: v979  <|@  <|@
f <@~|@floating>@ <|@
tid j976 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:212) [bci: 165] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: i64
=== Inputs ===
x: j974 
y: j975 
=== Succesors ===
=== Usages ===
v1008 
=== Predecessor ===
- >@ <|@
instruction <@^|@jdk.graal.compiler.nodes.calc.XorNode>@ x: j974 y: j975  <|@  <|@
f <@~|@floating>@ <|@
tid v1008 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:215) [bci: 193] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
=== Inputs ===
x: j976 
y: j887 
=== Succesors ===
=== Usages ===
v979 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@jdk.graal.compiler.nodes.calc.IntegerTestNode>@ x: j976 y: j887  <|@  <|@
f <@*|@fixed>@ <|@
tid v979 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:215) [bci: 201] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v1008 
=== Succesors ===
trueSuccessor: v978 
falseSuccessor: v977 
=== Usages ===
=== Predecessor ===
j975 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1008 #trueSuccessor: v978 #falseSuccessor: v977  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B83" 
    xhandlers
    flags 
    probability 4577371935537457006
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v978 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
=== Inputs ===
=== Succesors ===
next: v982 
=== Usages ===
=== Predecessor ===
v979 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v982  <|@  <|@
f <@*|@fixed>@ <|@
tid v982 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v983 
=== Predecessor ===
v978 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    probability 4591660023639118941
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v977 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:216) [bci: 204] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
=== Inputs ===
=== Succesors ===
next: v986 
=== Usages ===
=== Predecessor ===
v979 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v986  <|@  <|@
f <@~|@floating>@ <|@
tid v980 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:218) [bci: 218] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j975 
y: j570 
=== Succesors ===
=== Usages ===
v986 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j975 y: j570  <|@  <|@
f <@*|@fixed>@ <|@
tid v986 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:218) [bci: 226] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v980 
=== Succesors ===
trueSuccessor: v985 
falseSuccessor: v981 
=== Usages ===
=== Predecessor ===
v977 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v980 #trueSuccessor: v985 #falseSuccessor: v981  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B83" 
    xhandlers
    flags 
    probability 4576750104161816649
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v985 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
=== Inputs ===
=== Succesors ===
next: v984 
=== Usages ===
=== Predecessor ===
v986 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v984  <|@  <|@
f <@*|@fixed>@ <|@
tid v984 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v983 
=== Predecessor ===
v985 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    probability 4590960463341523540
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v981 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 229] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1012 
=== Usages ===
=== Predecessor ===
v986 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i1012  <|@  <|@
f <@~|@floating>@ <|@
tid j987 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.cardTableAddress(HotSpotG1WriteBarrierSnippets.java:131) [bci: 23]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 232] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: i64 [0 - 36028797018963967] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j974 
y: i865 
=== Succesors ===
=== Usages ===
j1009 v1262 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j974 y: i865  <|@  <|@
f <@~|@floating>@ <|@
tid v1262 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j987 
index: j864 
=== Succesors ===
=== Usages ===
i1012 i1013 v1014 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j987 index: j864  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1012 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:223) [bci: 243] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1262 
lastLocationAccess: - 
=== Succesors ===
next: v991 
=== Usages ===
v1019 
=== Predecessor ===
v981 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1262 lastLocationAccess: - #next: v991  <|@  <|@
f <@~|@floating>@ <|@
tid v1019 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:227) [bci: 265] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1012 
y: i901 
=== Succesors ===
=== Usages ===
v991 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i1012 y: i901  <|@  <|@
f <@*|@fixed>@ <|@
tid v991 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:227) [bci: 276] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v1019 
=== Succesors ===
trueSuccessor: v990 
falseSuccessor: v988 
=== Usages ===
=== Predecessor ===
i1012 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1019 #trueSuccessor: v990 #falseSuccessor: v988  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B83" 
    xhandlers
    flags 
    probability 4590330859073687679
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v990 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
=== Inputs ===
=== Succesors ===
next: v989 
=== Usages ===
=== Predecessor ===
v991 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v989  <|@  <|@
f <@*|@fixed>@ <|@
tid v989 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v983 
=== Predecessor ===
v990 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    probability 4576190455923740328
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v988 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:228) [bci: 279] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
=== Inputs ===
=== Succesors ===
next: v992 
=== Usages ===
=== Predecessor ===
v991 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v992  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v992 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_LOAD
fence: STORE_LOAD
location: GC-Card
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.MembarNode.memoryBarrier(MembarNode$FenceKind, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:228) [bci: 285] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1013 
=== Usages ===
=== Predecessor ===
v988 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: i1013  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1013 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:229) [bci: 294] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1262 
lastLocationAccess: - 
=== Succesors ===
next: v996 
=== Usages ===
v1020 
=== Predecessor ===
v992 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1262 lastLocationAccess: - #next: v996  <|@  <|@
f <@~|@floating>@ <|@
tid v1020 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:230) [bci: 308] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1013 
y: i840 
=== Succesors ===
=== Usages ===
v996 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i1013 y: i840  <|@  <|@
f <@*|@fixed>@ <|@
tid v996 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:230) [bci: 319] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v1020 
=== Succesors ===
trueSuccessor: v995 
falseSuccessor: v993 
=== Usages ===
=== Predecessor ===
i1013 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1020 #trueSuccessor: v995 #falseSuccessor: v993  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B83" 
    xhandlers
    flags 
    probability 4575686772509471639
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v995 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
=== Inputs ===
=== Succesors ===
next: v994 
=== Usages ===
=== Predecessor ===
v996 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v994  <|@  <|@
f <@*|@fixed>@ <|@
tid v994 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v983 
=== Predecessor ===
v995 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    probability 4561198157899870475
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v993 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:231) [bci: 322] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1014 
=== Usages ===
=== Predecessor ===
v996 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1014  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1014 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:232) [bci: 358] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1262 
lastLocationAccess: - 
value: i840 
stateAfter: - 
=== Succesors ===
next: j1015 
=== Usages ===
=== Predecessor ===
v993 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1262 lastLocationAccess: - value: i840 stateAfter: - #next: j1015  <|@  <|@
f <@~|@floating>@ <|@
tid v1259 <|@
d <@d|@=== Debug Properties ===
displacement: 72
stamp: void*
stride: S1
=== Inputs ===
base: j972 
index: - 
=== Succesors ===
=== Usages ===
j1015 v1018 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j972 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1015 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:237) [bci: 378] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1259 
lastLocationAccess: - 
=== Succesors ===
next: v1001 
=== Usages ===
v998 j1011 v1261 
=== Predecessor ===
v1014 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1259 lastLocationAccess: - #next: v1001  <|@  <|@
f <@~|@floating>@ <|@
tid v998 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:238) [bci: 392] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1015 
y: j570 
=== Succesors ===
=== Usages ===
v1001 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j1015 y: j570  <|@  <|@
f <@~|@floating>@ <|@
tid j1009 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.cardTableAddress(HotSpotG1WriteBarrierSnippets.java:131) [bci: 28]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 232] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: i64 [140438306553856 - 36169235325517823] bits:00000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j987 
y: j864 
=== Succesors ===
=== Usages ===
v1005 v1017 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j987 y: j864  <|@  <|@
f <@*|@fixed>@ <|@
tid v1001 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:238) [bci: 398] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v998 
=== Succesors ===
trueSuccessor: v1000 
falseSuccessor: v999 
=== Usages ===
=== Predecessor ===
j1015 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v998 #trueSuccessor: v1000 #falseSuccessor: v999  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    probability 4546075572092099182
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1000 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:247) [bci: 458] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1005 
=== Usages ===
=== Predecessor ===
v1001 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1005  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1005 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_post(Word)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-Card-Queue-Index, GC-Card-Queue-Buffer, GC-Card-Queue-Log, GC-Card], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_post
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostBarrierStub(ForeignCallDescriptor, Word) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostBarrierStub(G1WriteBarrierSnippets.java:413) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:247) [bci: 461] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: j1009 
=== Succesors ===
next: v1006 
=== Usages ===
=== Predecessor ===
v1000 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: j1009 #next: v1006  <|@  <|@
f <@*|@fixed>@ <|@
tid v1006 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v983 
=== Predecessor ===
v1005 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    probability 4560392264437040573
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v999 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:239) [bci: 401] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1016 
=== Usages ===
=== Predecessor ===
v1001 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j1016  <|@  <|@
f <@~|@floating>@ <|@
tid v1260 <|@
d <@d|@=== Debug Properties ===
displacement: 88
stamp: void*
stride: S1
=== Inputs ===
base: j972 
index: - 
=== Succesors ===
=== Usages ===
j1016 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j972 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1016 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:239) [bci: 410] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1260 
lastLocationAccess: - 
=== Succesors ===
next: v1017 
=== Usages ===
v1261 
=== Predecessor ===
v999 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1260 lastLocationAccess: - #next: v1017  <|@  <|@
f <@~|@floating>@ <|@
tid v1261 <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j1016 
index: j1015 
=== Succesors ===
=== Usages ===
v1017 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1016 index: j1015  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1017 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card-Queue-Log
location: GC-Card-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:244) [bci: 438] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1261 
lastLocationAccess: - 
value: j1009 
stateAfter: - 
=== Succesors ===
next: v1018 
=== Usages ===
=== Predecessor ===
j1016 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1261 lastLocationAccess: - value: j1009 stateAfter: - #next: v1018  <|@  <|@
f <@~|@floating>@ <|@
tid j1011 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:240) [bci: 424] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: i64
=== Inputs ===
x: j1015 
y: j831 
=== Succesors ===
=== Usages ===
v1018 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j1015 y: j831  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1018 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card-Queue-Index
location: GC-Card-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:245) [bci: 452] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1259 
lastLocationAccess: - 
value: j1011 
stateAfter: - 
=== Succesors ===
next: v1004 
=== Usages ===
=== Predecessor ===
v1017 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1259 lastLocationAccess: - value: j1011 stateAfter: - #next: v1004  <|@  <|@
f <@*|@fixed>@ <|@
tid v1004 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v983 
=== Predecessor ===
v1018 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B73" "B75" "B77" "B79" "B82" "B81" 
    successors "B84" "B85" 
    xhandlers
    flags 
    probability 4592437312858669387
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v983 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v982 v984 v989 v994 v1004 v1006 
=== Succesors ===
next: v131 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v982 v984 v989 v994 v1004 v1006 #next: v131  <|@  <|@
f <@~|@floating>@ <|@
tid i126 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:649) [bci: 160]
rawvalue: 7
stableDimension: 0
stamp: i32 [7]
stampKind: i32
value: int[7|0x7]
=== Inputs ===
=== Succesors ===
=== Usages ===
v127 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v127 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:649) [bci: 162]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@4dc6bd49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i84 
y: i126 
=== Succesors ===
=== Usages ===
v131 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i84 y: i126  <|@  <|@
f <@*|@fixed>@ <|@
tid v131 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:649) [bci: 162]
profileData: PROFILED designatedSuccessorProbability: 0.9999886211240704
stamp: void
=== Inputs ===
condition: v127 
=== Succesors ===
trueSuccessor: v130 
falseSuccessor: v128 
=== Usages ===
=== Predecessor ===
v983 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v127 #trueSuccessor: v130 #falseSuccessor: v128  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" 
    xhandlers
    flags 
    probability 4592437224411893480
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v130 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:659) [bci: 222]
stamp: void
=== Inputs ===
=== Succesors ===
next: v129 
=== Usages ===
=== Predecessor ===
v131 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v129  <|@  <|@
f <@*|@fixed>@ <|@
tid v129 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:659) [bci: 222]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v77 
=== Predecessor ===
v130 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" 
    xhandlers
    flags 
    probability 4518403274531071726
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v128 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:650) [bci: 165]
stamp: void
=== Inputs ===
=== Succesors ===
next: v133 
=== Usages ===
=== Predecessor ===
v131 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v133  <|@  <|@
tid v384 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:650) [bci: 169]
referencedType: [null]
returnStamp: void
signature: [HotSpotType<Ljava/util/HashMap;, resolved>, UnresolvedJavaType<[Ljava/util/HashMap$Node;>, HotSpotResolvedPrimitiveType<int>]
stamp: void
targetMethod: HotSpotMethod<HashMap.treeifyBin(HashMap$Node[], int)>
=== Inputs ===
arguments: a1 a26 i2 
=== Succesors ===
=== Usages ===
v133 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a26 i2  <|@  <|@
tid ?652 <|@
d <@d|@=== Debug Properties ===
bci: 169
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
localsSize: 13
locksSize: 0
sourceFile: HashMap.java
sourceLine: 650
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 - - a4 i5 i6 - - - - a353 
=== Succesors ===
=== Usages ===
v133 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - a4 i5 i6 - - - - a353  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v133 <|@
d <@d|@=== Debug Properties ===
bci: 169
identity: ANY_LOCATION
inlineControl: Normal
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:650) [bci: 169]
polymorphic: false
stamp: void
targetMethod: Direct#HashMap.treeifyBin
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v384 
stateDuring: ?652 
=== Succesors ===
next: v135 
=== Usages ===
=== Predecessor ===
v128 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v384 stateDuring: ?652 #next: v135  <|@  <|@
f <@*|@fixed>@ <|@
tid v135 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:659) [bci: 222]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v77 
=== Predecessor ===
v133 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B50" "B55" "B64" "B84" "B85" "B63" "B53" 
    successors "B87" "B100" 
    xhandlers
    flags 
    probability 4595548303301553864
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a79 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:659) [bci: 222]
stamp: a java.util.HashMap$Node
valueDescription: a java.lang.Object
=== Inputs ===
merge: v77 
values: a304 a74 a353 a353 a353 a353 a304 
=== Succesors ===
=== Usages ===
?137 v138 j1070 v396 v1203 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v77 values: a304 a74 a353 a353 a353 a353 a304  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v77 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:659) [bci: 222]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v76 v78 v104 v129 v135 v136 v188 
=== Succesors ===
next: v144 
=== Usages ===
a79 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v76 v78 v104 v129 v135 v136 v188 #next: v144  <|@  <|@
f <@~|@floating>@ <|@
tid v138 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:659) [bci: 224]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a79 
=== Succesors ===
=== Usages ===
v144 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a79  <|@  <|@
f <@*|@fixed>@ <|@
tid v144 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:659) [bci: 224]
profileData: PROFILED designatedSuccessorProbability: 0.6091185940042786
stamp: void
=== Inputs ===
condition: v138 
=== Succesors ===
trueSuccessor: v143 
falseSuccessor: v139 
=== Usages ===
=== Predecessor ===
v77 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v138 #trueSuccessor: v143 #falseSuccessor: v139  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B88" 
    xhandlers
    flags 
    probability 4592437118697206803
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v143 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:667) [bci: 259]
stamp: void
=== Inputs ===
=== Succesors ===
next: v142 
=== Usages ===
=== Predecessor ===
v144 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v142  <|@  <|@
f <@*|@fixed>@ <|@
tid v142 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:667) [bci: 259]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v141 
=== Predecessor ===
v143 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B35" "B87" "B43" "B44" "B41" "B39" "B37" 
    successors "B89" "B90" 
    xhandlers
    flags 
    probability 4606558935301518032
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v141 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:667) [bci: 259]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v140 v142 v1128 v1129 v1130 v1131 v1132 
=== Succesors ===
next: i1156 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v140 v142 v1128 v1129 v1130 v1131 v1132 #next: i1156  <|@  <|@
f <@~|@floating>@ <|@
tid v1206 <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i1156 v401 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1156 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: HashMap.modCount
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:667) [bci: 261]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1206 
lastLocationAccess: - 
=== Succesors ===
next: v401 
=== Usages ===
i165 
=== Predecessor ===
v141 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1206 lastLocationAccess: - #next: v401  <|@  <|@
f <@~|@floating>@ <|@
tid i165 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:667) [bci: 265]
stamp: i32
=== Inputs ===
x: i1156 
y: i29 
=== Succesors ===
=== Usages ===
v401 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i1156 y: i29  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v401 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: HashMap.modCount
location: HashMap.modCount
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:667) [bci: 266]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1206 
lastLocationAccess: - 
value: i165 
stateAfter: - 
=== Succesors ===
next: i1157 
=== Usages ===
=== Predecessor ===
i1156 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1206 lastLocationAccess: - value: i165 stateAfter: - #next: i1157  <|@  <|@
f <@~|@floating>@ <|@
tid v1207 <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i1157 v404 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1157 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: HashMap.size
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:668) [bci: 271]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1207 
lastLocationAccess: - 
=== Succesors ===
next: v404 
=== Usages ===
i169 
=== Predecessor ===
v401 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1207 lastLocationAccess: - #next: v404  <|@  <|@
f <@~|@floating>@ <|@
tid i169 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:668) [bci: 275]
stamp: i32
=== Inputs ===
x: i1157 
y: i29 
=== Succesors ===
=== Usages ===
v404 v173 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i1157 y: i29  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v404 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: HashMap.size
location: HashMap.size
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:668) [bci: 277]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1207 
lastLocationAccess: - 
value: i169 
stateAfter: - 
=== Succesors ===
next: i1158 
=== Usages ===
=== Predecessor ===
i1157 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1207 lastLocationAccess: - value: i169 stateAfter: - #next: i1158  <|@  <|@
f <@~|@floating>@ <|@
tid v1208 <|@
d <@d|@=== Debug Properties ===
displacement: 28
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i1158 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1158 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: HashMap.threshold
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:668) [bci: 281]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1208 
lastLocationAccess: - 
=== Succesors ===
next: v176 
=== Usages ===
v173 
=== Predecessor ===
v404 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1208 lastLocationAccess: - #next: v176  <|@  <|@
f <@~|@floating>@ <|@
tid v173 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:668) [bci: 284]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@4dc6bd49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1158 
y: i169 
=== Succesors ===
=== Usages ===
v176 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i1158 y: i169  <|@  <|@
f <@*|@fixed>@ <|@
tid v176 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:668) [bci: 284]
profileData: PROFILED designatedSuccessorProbability: 7.853038846579175E-4
stamp: void
=== Inputs ===
condition: v173 
=== Succesors ===
trueSuccessor: v175 
falseSuccessor: v174 
=== Usages ===
=== Predecessor ===
i1158 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v173 #trueSuccessor: v175 #falseSuccessor: v174  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B91" 
    xhandlers
    flags 
    probability 4559880998172045651
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v175 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:669) [bci: 287]
stamp: void
=== Inputs ===
=== Succesors ===
next: a178 
=== Usages ===
=== Predecessor ===
v176 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a178  <|@  <|@
tid v419 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:669) [bci: 288]
referencedType: [null]
returnStamp: a java.util.HashMap$Node[]
signature: [HotSpotType<Ljava/util/HashMap;, resolved>]
stamp: void
targetMethod: HotSpotMethod<HashMap.resize()>
=== Inputs ===
arguments: a1 
=== Succesors ===
=== Usages ===
a178 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1  <|@  <|@
tid ?653 <|@
d <@d|@=== Debug Properties ===
bci: 288
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
localsSize: 13
locksSize: 0
sourceFile: HashMap.java
sourceLine: 669
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 - - - - i6 
=== Succesors ===
=== Usages ===
a178 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - i6  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a178 <|@
d <@d|@=== Debug Properties ===
bci: 288
identity: ANY_LOCATION
inlineControl: Normal
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:669) [bci: 288]
polymorphic: false
stamp: a java.util.HashMap$Node[]
targetMethod: Direct#HashMap.resize
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v419 
stateDuring: ?653 
=== Succesors ===
next: v182 
=== Usages ===
=== Predecessor ===
v175 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v419 stateDuring: ?653 #next: v182  <|@  <|@
f <@*|@fixed>@ <|@
tid v182 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:670) [bci: 292]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v181 
=== Predecessor ===
a178 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B91" 
    xhandlers
    flags 
    probability 4606552351536966788
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v174 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:670) [bci: 292]
stamp: void
=== Inputs ===
=== Succesors ===
next: v180 
=== Usages ===
=== Predecessor ===
v176 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v180  <|@  <|@
f <@*|@fixed>@ <|@
tid v180 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:670) [bci: 292]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v181 
=== Predecessor ===
v174 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" "B89" 
    successors "B92" "B93" "B99" 
    xhandlers
    flags 
    probability 4606558935301518032
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v181 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:670) [bci: 292]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v180 v182 
=== Succesors ===
next: v241 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v180 v182 #next: v241  <|@  <|@
tid ?183 <|@
d <@d|@=== Debug Properties ===
bci: 292
bytecode: aload_0
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
localsSize: 13
locksSize: 0
sourceFile: HashMap.java
sourceLine: 670
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 - - - - i6 
=== Succesors ===
=== Usages ===
v1274 v1187 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - i6  <|@  <|@
f <@*|@fixed>@ <|@
tid v241 <|@
d <@d|@=== Debug Properties ===
hubs: [meta{HotSpotType<Ljava/util/HashMap;, resolved>}, meta{HotSpotType<Ljava/util/LinkedHashMap;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/replacements/SnippetTemplate$LRUCache;, resolved>}]
keySuccessors: [I@10641ff8
keys: [HotSpotType<Ljava/util/HashMap;, resolved>, HotSpotType<Ljava/util/LinkedHashMap;, resolved>, HotSpotType<Ljdk/graal/compiler/replacements/SnippetTemplate$LRUCache;, resolved>]
profileData: PROFILED keyProbabilities: [0.9996391032011914, 3.6023598855703206E-4, 6.608102515459184E-7, 0.0]
stamp: void
=== Inputs ===
value: v697 
=== Succesors ===
successors: v233 v237 v240 
=== Usages ===
=== Predecessor ===
v181 >@ <|@
instruction <@TypeSwitch|@jdk.graal.compiler.nodes.java.TypeSwitchNode>@ value: v697 #successors: v233 v237 v240  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B97" 
    xhandlers
    flags 
    probability 4606555909645339483
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v233 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: v234 
=== Usages ===
=== Predecessor ===
v241 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v234  <|@  <|@
f <@*|@fixed>@ <|@
tid v234 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v230 
=== Predecessor ===
v233 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B94" "B95" 
    xhandlers
    flags 
    probability 4554832167497868566
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v237 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: v248 
=== Usages ===
=== Predecessor ===
v241 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v248  <|@  <|@
f <@~|@floating>@ <|@
tid v245 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 1]
at java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i6 
y: i15 
=== Succesors ===
=== Usages ===
v248 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i6 y: i15  <|@  <|@
f <@*|@fixed>@ <|@
tid v248 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 1]
at java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
profileData: PROFILED designatedSuccessorProbability: 0.4891304347826087
stamp: void
=== Inputs ===
condition: v245 
=== Succesors ===
trueSuccessor: v247 
falseSuccessor: v246 
=== Usages ===
=== Predecessor ===
v237 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v245 #trueSuccessor: v247 #falseSuccessor: v246  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B97" 
    xhandlers
    flags 
    probability 4550193860395418340
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v247 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:328) [bci: 39]
at java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
stamp: void
=== Inputs ===
=== Succesors ===
next: v238 
=== Usages ===
=== Predecessor ===
v248 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v238  <|@  <|@
f <@*|@fixed>@ <|@
tid v238 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v230 
=== Predecessor ===
v247 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B96" "B98" 
    xhandlers
    flags 
    probability 4550463275345577801
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v246 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 4]
at java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1159 
=== Usages ===
=== Predecessor ===
v248 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a1159  <|@  <|@
f <@~|@floating>@ <|@
tid v1209 <|@
d <@d|@=== Debug Properties ===
displacement: 52
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a1159 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1159 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.LinkedHashMap$Entry
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: LinkedHashMap.head
memoryOrder: PLAIN
nodeSourcePosition: at java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 5]
at java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
stamp: n java.util.LinkedHashMap$Entry
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1209 
lastLocationAccess: - 
=== Succesors ===
next: v1187 
=== Usages ===
a411 v1273 
=== Predecessor ===
v246 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1209 lastLocationAccess: - #next: v1187  <|@  <|@
f <@~|@floating>@ <|@
tid v1273 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a1159 
=== Succesors ===
=== Usages ===
v1187 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1159  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1187 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: [null]
deoptSpeculation: [null]
stamp: void
=== Inputs ===
stateBefore: ?183 
object: v1273 
=== Succesors ===
next: v1160 
=== Usages ===
=== Predecessor ===
a1159 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?183 object: v1273 #next: v1160  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1160 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140436756758528 shift: 0)
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 15]
at java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
stamp: Klass*!(compressed base: 140436756758528 shift: 0)
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1223 
lastLocationAccess: - 
=== Succesors ===
next: v415 
=== Usages ===
v1125 
=== Predecessor ===
v1187 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1223 lastLocationAccess: - #next: v415  <|@  <|@
f <@~|@floating>@ <|@
tid v1125 <|@
d <@d|@=== Debug Properties ===
encoding: base: 140436756758528 shift: 0
nodeSourcePosition: at java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 15]
at java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v1160 
=== Succesors ===
=== Usages ===
v1210 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v1160  <|@  <|@
f <@~|@floating>@ <|@
tid v1210 <|@
d <@d|@=== Debug Properties ===
displacement: 872
stamp: void*
stride: S1
=== Inputs ===
base: v1125 
index: - 
=== Succesors ===
=== Usages ===
v415 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v1125 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v415 <|@
d <@d|@=== Debug Properties ===
accessStamp: Method*!
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 15]
at java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
stamp: Method*!
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1210 
lastLocationAccess: - 
=== Succesors ===
next: j417 
=== Usages ===
v1211 v418 
=== Predecessor ===
v1160 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1210 lastLocationAccess: - #next: j417  <|@  <|@
f <@~|@floating>@ <|@
tid v1211 <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: v415 
index: - 
=== Succesors ===
=== Usages ===
j417 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v415 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j417 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 15]
at java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1211 
lastLocationAccess: - 
=== Succesors ===
next: i253 
=== Usages ===
v418 
=== Predecessor ===
v415 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1211 lastLocationAccess: - #next: i253  <|@  <|@
f <@~|@floating>@ <|@
tid a411 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 5]
at java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
op: Uncompress
stamp: a java.util.LinkedHashMap$Entry
=== Inputs ===
value: a1159 
=== Succesors ===
=== Usages ===
?254 v418 ?655 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1159  <|@  <|@
tid v418 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 15]
at java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
referencedType: [null]
returnStamp: i32 [0 - 1] bits:0...0x
signature: [HotSpotType<Ljava/util/LinkedHashMap;, resolved>, UnresolvedJavaType<Ljava/util/Map$Entry;>]
stamp: void
targetMethod: HotSpotMethod<LinkedHashMap.removeEldestEntry(Map$Entry)>
=== Inputs ===
computedAddress: j417 
metaspaceMethod: v415 
arguments: a1 a411 
=== Succesors ===
=== Usages ===
i253 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotIndirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotIndirectCallTargetNode>@ computedAddress: j417 metaspaceMethod: v415 arguments: a1 a411  <|@  <|@
tid ?262 <|@
d <@d|@=== Debug Properties ===
bci: 295
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
localsSize: 13
locksSize: 0
sourceFile: HashMap.java
sourceLine: 670
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
=== Succesors ===
=== Usages ===
?254 ?655 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: -  <|@  <|@
tid ?655 <|@
d <@d|@=== Debug Properties ===
bci: 15
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<LinkedHashMap.afterNodeInsertion(boolean)>
localsSize: 4
locksSize: 0
sourceFile: LinkedHashMap.java
sourceLine: 324
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?262 
values: a1 - a411 
=== Succesors ===
=== Usages ===
i253 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?262 values: a1 - a411  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i253 <|@
d <@d|@=== Debug Properties ===
bci: 15
identity: ANY_LOCATION
inlineControl: Normal
nodeSourcePosition: at java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 15]
at java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
polymorphic: true
stamp: i32 [0 - 1] bits:0...0x
targetMethod: Indirect#LinkedHashMap.removeEldestEntry
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v418 
stateDuring: ?655 
=== Succesors ===
next: v633 
=== Usages ===
?254 v255 
=== Predecessor ===
j417 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v418 stateDuring: ?655 #next: v633  <|@  <|@
f <@~|@floating>@ <|@
tid v255 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 18]
at java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i253 
y: i15 
=== Succesors ===
=== Usages ===
v633 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i253 y: i15  <|@  <|@
f <@*|@fixed>@ <|@
tid v633 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 18]
at java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v255 
=== Succesors ===
trueSuccessor: v631 
falseSuccessor: v632 
=== Usages ===
=== Predecessor ===
i253 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v255 #trueSuccessor: v631 #falseSuccessor: v632  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B97" 
    xhandlers
    flags 
    probability 4550463275345577801
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v631 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:328) [bci: 39]
at java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
stamp: void
=== Inputs ===
=== Succesors ===
next: v263 
=== Usages ===
=== Predecessor ===
v633 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v263  <|@  <|@
f <@*|@fixed>@ <|@
tid v263 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:328) [bci: 39]
at java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v230 
=== Predecessor ===
v631 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B92" "B94" "B96" 
    successors 
    xhandlers
    flags 
    probability 4606558935301518031
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v230 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v234 v238 v263 
=== Succesors ===
next: v187 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v234 v238 v263 #next: v187  <|@  <|@
f <@*|@fixed>@ <|@
tid v187 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:671) [bci: 299]
stamp: void
=== Inputs ===
memoryMap: - 
result: a9 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v230 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: a9  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v632 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 18]
at java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
stamp: void
=== Inputs ===
=== Succesors ===
next: v630 
=== Usages ===
=== Predecessor ===
v633 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v630  <|@  <|@
tid ?254 <|@
d <@d|@=== Debug Properties ===
bci: 18
bytecode: ifeq
code: ResolvedJavaMethodBytecode<LinkedHashMap.afterNodeInsertion(boolean)>
localsSize: 4
locksSize: 0
nodeSourcePosition: at java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 15]
at java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
sourceFile: LinkedHashMap.java
sourceLine: 324
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?262 
values: i253 a1 - a411 
=== Succesors ===
=== Usages ===
v630 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?262 values: i253 a1 - a411  <|@  <|@
f <@*|@fixed>@ <|@
tid v630 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 0
mayConvertToGuard: true
nodeSourcePosition: at java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 18]
at java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
reason: UnreachedCode
speculation: {0x0000000000002814[index: 320, len: 20, hash: 0x77a90074]: UnreachedCode@5[HotSpotMethod<LinkedHashMap.afterNodeInsertion(boolean)>, 21]}
stamp: void
=== Inputs ===
stateBefore: ?254 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v632 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?254  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v240 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: v1274 
=== Usages ===
=== Predecessor ===
v241 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1274  <|@  <|@
f <@*|@fixed>@ <|@
tid v1274 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 239
mayConvertToGuard: true
reason: TypeCheckedInliningViolated
speculation: {0x0000000000002314[index: 280, len: 20, hash: 0x49e68ffd]: FallbackDeopt@8[HotSpotMethod<HashMap.putVal(int, Object, Object, boolean, boolean)>, 295, FALSE, jdk.graal.compiler.phases.common.inlining.InliningUtil$ReceiverTypeSpeculationContext, HotSpotType<Ljava/util/HashMap;, resolved>, HotSpotType<Ljava/util/LinkedHashMap;, resolved>, HotSpotType<Ljdk/graal/compiler/replacements/SnippetTemplate$LRUCache;, resolved>]}
stamp: void
=== Inputs ===
stateBefore: ?183 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v240 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?183  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B101" "B119" 
    xhandlers
    flags 
    probability 4589652288651159933
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v139 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:660) [bci: 227]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1161 
=== Usages ===
=== Predecessor ===
v144 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a1161  <|@  <|@
f <@~|@floating>@ <|@
tid v1203 <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a79 
index: - 
=== Succesors ===
=== Usages ===
a1161 v398 j1028 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a79 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1161 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: HashMap$Node.value
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:660) [bci: 229]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1203 
lastLocationAccess: - 
=== Succesors ===
next: v149 
=== Usages ===
a390 v1272 
=== Predecessor ===
v139 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1203 lastLocationAccess: - #next: v149  <|@  <|@
f <@~|@floating>@ <|@
tid v146 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:661) [bci: 236]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i5 
y: i15 
=== Succesors ===
=== Usages ===
v149 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i5 y: i15  <|@  <|@
f <@*|@fixed>@ <|@
tid v149 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:661) [bci: 236]
profileData: PROFILED designatedSuccessorProbability: 0.9999962001170364
stamp: void
=== Inputs ===
condition: v146 
=== Succesors ===
trueSuccessor: v148 
falseSuccessor: v147 
=== Usages ===
=== Predecessor ===
a1161 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v146 #trueSuccessor: v148 #falseSuccessor: v147  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B102" "B103" 
    xhandlers
    flags 
    probability 4589652269697845341
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v148 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:662) [bci: 244]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1066 
=== Usages ===
=== Predecessor ===
v149 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1066  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1066 <|@
d <@d|@=== Debug Properties ===
locations: [GC-SATB-Queue-Log, GC-SATB-Marking-Active, GC-SATB-Queue-Index, GC-SATB-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1027 
=== Usages ===
=== Predecessor ===
v148 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j1027  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1027 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:127) [bci: 10]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1028 
=== Usages ===
v1263 v1265 v1266 
=== Predecessor ===
v1066 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j1028  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1028 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:129) [bci: 21]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1203 
=== Succesors ===
next: i1053 
=== Usages ===
v1264 
=== Predecessor ===
j1027 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: v1203 #next: i1053  <|@  <|@
f <@~|@floating>@ <|@
tid v1263 <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: j1027 
index: - 
=== Succesors ===
=== Usages ===
i1053 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1027 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1053 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Marking-Active
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:130) [bci: 35]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1263 
lastLocationAccess: - 
=== Succesors ===
next: v1032 
=== Usages ===
v1060 
=== Predecessor ===
j1028 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1263 lastLocationAccess: - #next: v1032  <|@  <|@
f <@~|@floating>@ <|@
tid v1060 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1053 
y: i840 
=== Succesors ===
=== Usages ===
v1032 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i1053 y: i840  <|@  <|@
f <@*|@fixed>@ <|@
tid v1032 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 217]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v1060 
=== Succesors ===
trueSuccessor: v1031 
falseSuccessor: v1030 
=== Usages ===
=== Predecessor ===
i1053 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1060 #trueSuccessor: v1031 #falseSuccessor: v1030  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B108" 
    xhandlers
    flags 
    probability 4589138949298219176
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1031 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1035 
=== Usages ===
=== Predecessor ===
v1032 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1035  <|@  <|@
f <@*|@fixed>@ <|@
tid v1035 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1036 
=== Predecessor ===
v1031 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" "B105" 
    xhandlers
    flags 
    probability 4574630580609171603
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1030 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:150) [bci: 220]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1054 
=== Usages ===
=== Predecessor ===
v1032 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a1054  <|@  <|@
f <@~|@floating>@ <|@
tid v1264 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j1028 
index: - 
=== Succesors ===
=== Usages ===
a1054 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1028 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1054 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1264 
lastLocationAccess: - 
=== Succesors ===
next: v1039 
=== Usages ===
a1055 v1061 
=== Predecessor ===
v1030 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1264 lastLocationAccess: - #next: v1039  <|@  <|@
f <@~|@floating>@ <|@
tid v1061 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 296]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a1054 
=== Succesors ===
=== Usages ===
v1039 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a1054  <|@  <|@
f <@*|@fixed>@ <|@
tid v1039 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 307]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v1061 
=== Succesors ===
trueSuccessor: v1038 
falseSuccessor: v1034 
=== Usages ===
=== Predecessor ===
a1054 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1061 #trueSuccessor: v1038 #falseSuccessor: v1034  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B108" 
    xhandlers
    flags 
    probability 4559523670035962382
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1038 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1037 
=== Usages ===
=== Predecessor ===
v1039 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1037  <|@  <|@
f <@*|@fixed>@ <|@
tid v1037 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1036 
=== Predecessor ===
v1038 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B106" "B107" 
    xhandlers
    flags 
    probability 4573832524763622737
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1034 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:163) [bci: 310]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1056 
=== Usages ===
=== Predecessor ===
v1039 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j1056  <|@  <|@
f <@~|@floating>@ <|@
tid v1265 <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: j1027 
index: - 
=== Succesors ===
=== Usages ===
j1056 v1059 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1027 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1056 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:166) [bci: 327]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1265 
lastLocationAccess: - 
=== Succesors ===
next: v1044 
=== Usages ===
v1041 j1052 v1267 
=== Predecessor ===
v1034 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1265 lastLocationAccess: - #next: v1044  <|@  <|@
f <@~|@floating>@ <|@
tid v1041 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 341]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1056 
y: j570 
=== Succesors ===
=== Usages ===
v1044 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j1056 y: j570  <|@  <|@
f <@~|@floating>@ <|@
tid a1055 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a1054 
=== Succesors ===
=== Usages ===
j1046 v1049 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1054  <|@  <|@
f <@*|@fixed>@ <|@
tid v1044 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 347]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v1041 
=== Succesors ===
trueSuccessor: v1043 
falseSuccessor: v1042 
=== Usages ===
=== Predecessor ===
j1056 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1041 #trueSuccessor: v1043 #falseSuccessor: v1042  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B108" 
    xhandlers
    flags 
    probability 4558885225359523289
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1043 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 410]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1049 
=== Usages ===
=== Predecessor ===
v1044 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1049  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1049 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_pre(Object)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-SATB-Queue-Index, GC-SATB-Queue-Buffer, GC-SATB-Queue-Log], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_pre
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(ForeignCallDescriptor, Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(G1WriteBarrierSnippets.java:409) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 413]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: a1055 
=== Succesors ===
next: v1050 
=== Usages ===
=== Predecessor ===
v1043 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: a1055 #next: v1050  <|@  <|@
f <@*|@fixed>@ <|@
tid v1050 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1036 
=== Predecessor ===
v1049 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B108" 
    xhandlers
    flags 
    probability 4573114274502628758
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1042 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 350]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1057 
=== Usages ===
=== Predecessor ===
v1044 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j1057  <|@  <|@
f <@~|@floating>@ <|@
tid v1266 <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: j1027 
index: - 
=== Succesors ===
=== Usages ===
j1057 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1027 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1057 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 359]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1266 
lastLocationAccess: - 
=== Succesors ===
next: j1046 
=== Usages ===
v1267 
=== Predecessor ===
v1042 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1266 lastLocationAccess: - #next: j1046  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1046 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 384]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1055 
=== Succesors ===
next: v1058 
=== Usages ===
v1058 
=== Predecessor ===
j1057 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a1055 #next: v1058  <|@  <|@
f <@~|@floating>@ <|@
tid v1267 <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j1057 
index: j1056 
=== Succesors ===
=== Usages ===
v1058 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1057 index: j1056  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1058 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Log
location: GC-SATB-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 390]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1267 
lastLocationAccess: - 
value: j1046 
stateAfter: - 
=== Succesors ===
next: v1059 
=== Usages ===
=== Predecessor ===
j1046 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1267 lastLocationAccess: - value: j1046 stateAfter: - #next: v1059  <|@  <|@
f <@~|@floating>@ <|@
tid j1052 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: i64
=== Inputs ===
x: j1056 
y: j831 
=== Succesors ===
=== Usages ===
v1059 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j1056 y: j831  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1059 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Index
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:173) [bci: 404]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1265 
lastLocationAccess: - 
value: j1052 
stateAfter: - 
=== Succesors ===
next: v1048 
=== Usages ===
=== Predecessor ===
v1058 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1265 lastLocationAccess: - value: j1052 stateAfter: - #next: v1048  <|@  <|@
f <@*|@fixed>@ <|@
tid v1048 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1036 
=== Predecessor ===
v1059 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B102" "B104" "B107" "B106" 
    successors "B109" "B110" 
    xhandlers
    flags 
    probability 4589652269697845341
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1036 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1035 v1037 v1048 v1050 
=== Succesors ===
next: v398 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v1035 v1037 v1048 v1050 #next: v398  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v398 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: HashMap$Node.value
location: HashMap$Node.value
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1203 
lastLocationAccess: - 
value: a397 
stateAfter: - 
=== Succesors ===
next: v1122 
=== Usages ===
=== Predecessor ===
v1036 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1203 lastLocationAccess: - value: a397 stateAfter: - #next: v1122  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1122 <|@
d <@d|@=== Debug Properties ===
locations: [GC-Card, GC-Card-Queue-Log, GC-Card-Queue-Index, GC-Card-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1068 
=== Usages ===
=== Predecessor ===
v398 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j1068  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1068 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:184) [bci: 1] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: a1069 
=== Usages ===
v1268 v1269 
=== Predecessor ===
v1122 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: a1069  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1069 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.FixedValueAnchorNode.getObject(Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:185) [bci: 7] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: a java.lang.Object
=== Inputs ===
object: a4 
=== Succesors ===
next: j1070 
=== Usages ===
j1071 
=== Predecessor ===
j1068 >@ <|@
instruction <@FixedValueAnchor|@jdk.graal.compiler.nodes.extended.FixedValueAnchorNode>@ object: a4 #next: j1070  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1070 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:197) [bci: 56] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a79 
=== Succesors ===
next: j1071 
=== Usages ===
j1072 j1083 
=== Predecessor ===
a1069 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a79 #next: j1071  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1071 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:208) [bci: 150] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1069 
=== Succesors ===
next: v1075 
=== Usages ===
j1072 v1076 
=== Predecessor ===
j1070 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a1069 #next: v1075  <|@  <|@
f <@~|@floating>@ <|@
tid j1072 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:212) [bci: 165] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: i64
=== Inputs ===
x: j1070 
y: j1071 
=== Succesors ===
=== Usages ===
v1104 
=== Predecessor ===
- >@ <|@
instruction <@^|@jdk.graal.compiler.nodes.calc.XorNode>@ x: j1070 y: j1071  <|@  <|@
f <@~|@floating>@ <|@
tid v1104 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:215) [bci: 193] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
=== Inputs ===
x: j1072 
y: j887 
=== Succesors ===
=== Usages ===
v1075 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@jdk.graal.compiler.nodes.calc.IntegerTestNode>@ x: j1072 y: j887  <|@  <|@
f <@*|@fixed>@ <|@
tid v1075 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:215) [bci: 201] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v1104 
=== Succesors ===
trueSuccessor: v1074 
falseSuccessor: v1073 
=== Usages ===
=== Predecessor ===
j1071 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1104 #trueSuccessor: v1074 #falseSuccessor: v1073  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B120" 
    xhandlers
    flags 
    probability 4574630580609171603
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1074 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
=== Inputs ===
=== Succesors ===
next: v157 
=== Usages ===
=== Predecessor ===
v1075 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v157  <|@  <|@
f <@*|@fixed>@ <|@
tid v157 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:663) [bci: 250]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v156 
=== Predecessor ===
v1074 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" "B112" 
    xhandlers
    flags 
    probability 4589138949298219176
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1073 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:216) [bci: 204] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1082 
=== Usages ===
=== Predecessor ===
v1075 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1082  <|@  <|@
f <@~|@floating>@ <|@
tid v1076 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:218) [bci: 218] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1071 
y: j570 
=== Succesors ===
=== Usages ===
v1082 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j1071 y: j570  <|@  <|@
f <@*|@fixed>@ <|@
tid v1082 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:218) [bci: 226] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v1076 
=== Succesors ===
trueSuccessor: v1081 
falseSuccessor: v1077 
=== Usages ===
=== Predecessor ===
v1073 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1076 #trueSuccessor: v1081 #falseSuccessor: v1077  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B120" 
    xhandlers
    flags 
    probability 4573832524763622738
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1081 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1137 
=== Usages ===
=== Predecessor ===
v1082 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1137  <|@  <|@
f <@*|@fixed>@ <|@
tid v1137 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v156 
=== Predecessor ===
v1081 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B113" "B114" 
    xhandlers
    flags 
    probability 4588241136471976702
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1077 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 229] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1108 
=== Usages ===
=== Predecessor ===
v1082 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i1108  <|@  <|@
f <@~|@floating>@ <|@
tid j1083 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.cardTableAddress(HotSpotG1WriteBarrierSnippets.java:131) [bci: 23]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 232] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: i64 [0 - 36028797018963967] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j1070 
y: i865 
=== Succesors ===
=== Usages ===
j1105 v1271 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j1070 y: i865  <|@  <|@
f <@~|@floating>@ <|@
tid v1271 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j1083 
index: j864 
=== Succesors ===
=== Usages ===
i1108 i1109 v1110 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1083 index: j864  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1108 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:223) [bci: 243] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1271 
lastLocationAccess: - 
=== Succesors ===
next: v1087 
=== Usages ===
v1115 
=== Predecessor ===
v1077 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1271 lastLocationAccess: - #next: v1087  <|@  <|@
f <@~|@floating>@ <|@
tid v1115 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:227) [bci: 265] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1108 
y: i901 
=== Succesors ===
=== Usages ===
v1087 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i1108 y: i901  <|@  <|@
f <@*|@fixed>@ <|@
tid v1087 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:227) [bci: 276] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v1115 
=== Succesors ===
trueSuccessor: v1086 
falseSuccessor: v1084 
=== Usages ===
=== Predecessor ===
i1108 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1115 #trueSuccessor: v1086 #falseSuccessor: v1084  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B120" 
    xhandlers
    flags 
    probability 4587433104928358475
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1086 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1136 
=== Usages ===
=== Predecessor ===
v1087 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1136  <|@  <|@
f <@*|@fixed>@ <|@
tid v1136 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v156 
=== Predecessor ===
v1086 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B115" "B116" 
    xhandlers
    flags 
    probability 4573114274502628759
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1084 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:228) [bci: 279] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1088 
=== Usages ===
=== Predecessor ===
v1087 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1088  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1088 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_LOAD
fence: STORE_LOAD
location: GC-Card
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.MembarNode.memoryBarrier(MembarNode$FenceKind, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:228) [bci: 285] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1109 
=== Usages ===
=== Predecessor ===
v1084 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: i1109  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1109 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:229) [bci: 294] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1271 
lastLocationAccess: - 
=== Succesors ===
next: v1092 
=== Usages ===
v1116 
=== Predecessor ===
v1088 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1271 lastLocationAccess: - #next: v1092  <|@  <|@
f <@~|@floating>@ <|@
tid v1116 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:230) [bci: 308] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1109 
y: i840 
=== Succesors ===
=== Usages ===
v1092 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i1109 y: i840  <|@  <|@
f <@*|@fixed>@ <|@
tid v1092 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:230) [bci: 319] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v1116 
=== Succesors ===
trueSuccessor: v1091 
falseSuccessor: v1089 
=== Usages ===
=== Predecessor ===
i1109 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1116 #trueSuccessor: v1091 #falseSuccessor: v1089  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B120" 
    xhandlers
    flags 
    probability 4572467849267734178
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1091 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1135 
=== Usages ===
=== Predecessor ===
v1092 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1135  <|@  <|@
f <@*|@fixed>@ <|@
tid v1135 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v156 
=== Predecessor ===
v1091 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B117" "B118" 
    xhandlers
    flags 
    probability 4558310625150728107
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1089 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:231) [bci: 322] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1110 
=== Usages ===
=== Predecessor ===
v1092 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1110  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1110 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:232) [bci: 358] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1271 
lastLocationAccess: - 
value: i840 
stateAfter: - 
=== Succesors ===
next: j1111 
=== Usages ===
=== Predecessor ===
v1089 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1271 lastLocationAccess: - value: i840 stateAfter: - #next: j1111  <|@  <|@
f <@~|@floating>@ <|@
tid v1268 <|@
d <@d|@=== Debug Properties ===
displacement: 72
stamp: void*
stride: S1
=== Inputs ===
base: j1068 
index: - 
=== Succesors ===
=== Usages ===
j1111 v1114 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1068 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1111 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:237) [bci: 378] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1268 
lastLocationAccess: - 
=== Succesors ===
next: v1097 
=== Usages ===
v1094 j1107 v1270 
=== Predecessor ===
v1110 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1268 lastLocationAccess: - #next: v1097  <|@  <|@
f <@~|@floating>@ <|@
tid v1094 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:238) [bci: 392] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1111 
y: j570 
=== Succesors ===
=== Usages ===
v1097 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j1111 y: j570  <|@  <|@
f <@~|@floating>@ <|@
tid j1105 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.cardTableAddress(HotSpotG1WriteBarrierSnippets.java:131) [bci: 28]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 232] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: i64 [140438306553856 - 36169235325517823] bits:00000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j1083 
y: j864 
=== Succesors ===
=== Usages ===
v1101 v1113 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j1083 y: j864  <|@  <|@
f <@*|@fixed>@ <|@
tid v1097 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:238) [bci: 398] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v1094 
=== Succesors ===
trueSuccessor: v1096 
falseSuccessor: v1095 
=== Usages ===
=== Predecessor ===
j1111 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1094 #trueSuccessor: v1096 #falseSuccessor: v1095  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B120" 
    xhandlers
    flags 
    probability 4543399067768740112
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1096 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:247) [bci: 458] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1101 
=== Usages ===
=== Predecessor ===
v1097 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1101  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1101 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_post(Word)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-Card-Queue-Index, GC-Card-Queue-Buffer, GC-Card-Queue-Log, GC-Card], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_post
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostBarrierStub(ForeignCallDescriptor, Word) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostBarrierStub(G1WriteBarrierSnippets.java:413) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:247) [bci: 461] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: j1105 
=== Succesors ===
next: v1133 
=== Usages ===
=== Predecessor ===
v1096 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: j1105 #next: v1133  <|@  <|@
f <@*|@fixed>@ <|@
tid v1133 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v156 
=== Predecessor ===
v1101 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B120" 
    xhandlers
    flags 
    probability 4557793484962812442
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1095 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:239) [bci: 401] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1112 
=== Usages ===
=== Predecessor ===
v1097 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j1112  <|@  <|@
f <@~|@floating>@ <|@
tid v1269 <|@
d <@d|@=== Debug Properties ===
displacement: 88
stamp: void*
stride: S1
=== Inputs ===
base: j1068 
index: - 
=== Succesors ===
=== Usages ===
j1112 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1068 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1112 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:239) [bci: 410] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1269 
lastLocationAccess: - 
=== Succesors ===
next: v1113 
=== Usages ===
v1270 
=== Predecessor ===
v1095 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1269 lastLocationAccess: - #next: v1113  <|@  <|@
f <@~|@floating>@ <|@
tid v1270 <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j1112 
index: j1111 
=== Succesors ===
=== Usages ===
v1113 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1112 index: j1111  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1113 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card-Queue-Log
location: GC-Card-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:244) [bci: 438] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1270 
lastLocationAccess: - 
value: j1105 
stateAfter: - 
=== Succesors ===
next: v1114 
=== Usages ===
=== Predecessor ===
j1112 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1270 lastLocationAccess: - value: j1105 stateAfter: - #next: v1114  <|@  <|@
f <@~|@floating>@ <|@
tid j1107 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:240) [bci: 424] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: i64
=== Inputs ===
x: j1111 
y: j831 
=== Succesors ===
=== Usages ===
v1114 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j1111 y: j831  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1114 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card-Queue-Index
location: GC-Card-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:245) [bci: 452] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1268 
lastLocationAccess: - 
value: j1107 
stateAfter: - 
=== Succesors ===
next: v1134 
=== Usages ===
=== Predecessor ===
v1113 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1268 lastLocationAccess: - value: j1107 stateAfter: - #next: v1134  <|@  <|@
f <@*|@fixed>@ <|@
tid v1134 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v156 
=== Predecessor ===
v1114 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B120" 
    xhandlers
    flags 
    probability 4508568125070994604
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v147 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:661) [bci: 239]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1179 
=== Usages ===
=== Predecessor ===
v149 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1179  <|@  <|@
tid ?137 <|@
d <@d|@=== Debug Properties ===
bci: 222
bytecode: aload
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
localsSize: 13
locksSize: 0
sourceFile: HashMap.java
sourceLine: 659
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 - - a4 i5 i6 - - - - a79 
=== Succesors ===
=== Usages ===
v1179 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - a4 i5 i6 - - - - a79  <|@  <|@
f <@~|@floating>@ <|@
tid v1272 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a1161 
=== Succesors ===
=== Usages ===
v1179 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1161  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1179 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: [null]
deoptSpeculation: [null]
stamp: void
=== Inputs ===
stateBefore: ?137 
object: v1272 
=== Succesors ===
next: v155 
=== Usages ===
=== Predecessor ===
v147 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?137 object: v1272 #next: v155  <|@  <|@
f <@*|@fixed>@ <|@
tid v155 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:663) [bci: 250]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v156 
=== Predecessor ===
v1179 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B119" "B109" "B117" "B118" "B115" "B113" "B111" 
    successors 
    xhandlers
    flags 
    probability 4589652288651159933
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v156 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:663) [bci: 250]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v155 v157 v1133 v1134 v1135 v1136 v1137 
=== Succesors ===
next: v393 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v155 v157 v1133 v1134 v1135 v1136 v1137 #next: v393  <|@  <|@
f <@~|@floating>@ <|@
tid v1204 <|@
d <@d|@=== Debug Properties ===
displacement: 688
stamp: void*
stride: S1
=== Inputs ===
base: v697 
index: - 
=== Succesors ===
=== Usages ===
v393 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v697 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v393 <|@
d <@d|@=== Debug Properties ===
accessStamp: Method*!
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:663) [bci: 253]
stamp: Method*!
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1204 
lastLocationAccess: - 
=== Succesors ===
next: j395 
=== Usages ===
v1205 v396 
=== Predecessor ===
v156 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1204 lastLocationAccess: - #next: j395  <|@  <|@
f <@~|@floating>@ <|@
tid v1205 <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: v393 
index: - 
=== Succesors ===
=== Usages ===
j395 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v393 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j395 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:663) [bci: 253]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1205 
lastLocationAccess: - 
=== Succesors ===
next: v160 
=== Usages ===
v396 
=== Predecessor ===
v393 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1205 lastLocationAccess: - #next: v160  <|@  <|@
tid v396 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:663) [bci: 253]
referencedType: [null]
returnStamp: void
signature: [HotSpotType<Ljava/util/HashMap;, resolved>, UnresolvedJavaType<Ljava/util/HashMap$Node;>]
stamp: void
targetMethod: HotSpotMethod<HashMap.afterNodeAccess(HashMap$Node)>
=== Inputs ===
computedAddress: j395 
metaspaceMethod: v393 
arguments: a1 a79 
=== Succesors ===
=== Usages ===
v160 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotIndirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotIndirectCallTargetNode>@ computedAddress: j395 metaspaceMethod: v393 arguments: a1 a79  <|@  <|@
f <@~|@floating>@ <|@
tid a390 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:660) [bci: 229]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a1161 
=== Succesors ===
=== Usages ===
v162 ?654 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1161  <|@  <|@
tid ?654 <|@
d <@d|@=== Debug Properties ===
bci: 253
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
localsSize: 13
locksSize: 0
sourceFile: HashMap.java
sourceLine: 663
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: - - - - - - - - - - - - a390 
=== Succesors ===
=== Usages ===
v160 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: - - - - - - - - - - - - a390  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v160 <|@
d <@d|@=== Debug Properties ===
bci: 253
identity: ANY_LOCATION
inlineControl: Normal
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:663) [bci: 253]
polymorphic: true
stamp: void
targetMethod: Indirect#HashMap.afterNodeAccess
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v396 
stateDuring: ?654 
=== Succesors ===
next: v162 
=== Usages ===
=== Predecessor ===
j395 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v396 stateDuring: ?654 #next: v162  <|@  <|@
f <@*|@fixed>@ <|@
tid v162 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:664) [bci: 258]
stamp: void
=== Inputs ===
memoryMap: - 
result: a390 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v160 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: a390  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v482 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:636) [bci: 40]
stamp: void
=== Inputs ===
=== Succesors ===
next: v663 
=== Usages ===
=== Predecessor ===
v483 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v663  <|@  <|@
f <@~|@floating>@ <|@
tid i664 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:636) [bci: 40]
rawvalue: -75547
stableDimension: 0
stamp: i32 [-75547]
stampKind: i32
value: int[-75547|0xfffffffffffed8e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i660 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v663 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:636) [bci: 40]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v657 
=== Predecessor ===
v482 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B121" "B47" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i660 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:636) [bci: 40]
stamp: i32 [-75547 - -51507] bits:1...1xxxx1xxx011x0x101
valueDescription: i32
=== Inputs ===
merge: v657 
values: i664 i666 
=== Succesors ===
=== Usages ===
v662 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v657 values: i664 i666  <|@  <|@
f <@~|@floating>@ <|@
tid j661 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:636) [bci: 40]
stamp: i64 [0 - 5780] bits:0...0x0xx0x00x0x00
valueDescription: i64
=== Inputs ===
merge: v657 
values: j570 j667 
=== Succesors ===
=== Usages ===
v662 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v657 values: j570 j667  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v657 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:636) [bci: 40]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v663 v665 
=== Succesors ===
next: v662 
=== Usages ===
i660 j661 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v663 v665 #next: v662  <|@  <|@
f <@*|@fixed>@ <|@
tid v662 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:636) [bci: 40]
stamp: void
=== Inputs ===
stateBefore: ?28 
actionAndReason: i660 
speculation: j661 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v657 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?28 actionAndReason: i660 speculation: j661  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGeneration"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|DWORD, rdi|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@21849dd slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[_] = MOV [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v6|DWORD[_], y: v6|DWORD[_]) trueDestinationProbability: 0.0015880438063265454 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607168114973028567
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOV [v6|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v9|DWORD, y: v9|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607168114973028567
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v10|QWORD[.], v9|DWORD] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B1" 
    successors "B6" "B121" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v11|QWORD[.], v12|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = MOV [v11|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOV [v11|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = DEC v12|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = AND (x: v1|DWORD, y: v15|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v16|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B121 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B48" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v17|DWORD[_] = MOV [v11|QWORD[.] + v16|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = MOV [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = UNCOMPRESSPOINTER (input: v18|DWORD, ~baseRegister: v20|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = MOVE input: long[140438306553856|0x7fba57600000] <|@ <|@
      nr   -1  <|@ instruction v22|DWORD[_] = COMPRESSPOINTER (input: v3|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v17|DWORD[_], y: v17|DWORD[_]) trueDestinationProbability: 0.8229115724385652 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B12" "B47" 
    xhandlers
    flags 
    probability 4605587348047262798
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v19|QWORD - keyConstants: [meta{HotSpotType<Ljava/util/HashMap;, resolved>}, meta{HotSpotType<Ljava/util/LinkedHashMap;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/replacements/SnippetTemplate$LRUCache;, resolved>}] keyTargets: [B7 -> B8, B7 -> B12, B7 -> B12] defaultTarget: B7 -> B47 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4605585062831744793
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = LEA [v23|QWORD + 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v24|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4605510964398880109
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v24|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v23|QWORD + 288] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV [v23|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v23|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV [v23|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v23|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v23|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD[.] = MOVE v23|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v28|QWORD[.]] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 4605585062831744793
    begin_IR
      LIR
      nr   -1  <|@ instruction [v29|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v29|QWORD[.] + 20], y: v22|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|DWORD[_] = COMPRESSPOINTER (input: v2|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v29|QWORD[.] + 16], y: v30|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v29|QWORD[.] + 12], y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v29|QWORD[.]] destination: B11 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B11" "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4605587348047262798
    begin_IR
      LIR
      nr   -1  <|@ instruction [v38|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = UNCOMPRESSPOINTER (input: v14|DWORD, ~baseRegister: v40|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = MOV [v39|QWORD + 208] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = MOV [v41|QWORD + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = MOV [v38|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = UNCOMPRESSPOINTER (input: v43|DWORD, ~baseRegister: v45|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = MOVSXD v42|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v41|QWORD, y: [v44|QWORD + v46|QWORD * 1]) trueDestinationProbability: 0.5 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B45" 
    xhandlers
    flags 
    probability 4601083748419892302
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v42|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B45 y: 32 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4601083748419892302
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v41|QWORD, y: v44|QWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4596580148792521806
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = MOV [v44|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = MOV [v47|QWORD] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B24" 
    successors "B23" "B26" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4602807799859017905
    begin_IR
      LIR
      nr   -1  <|@ instruction [v49|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v48|DWORD, y: v49|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602807799859017905
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = SHL v49|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = LEA [v50|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = MOVSXD v51|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v53|QWORD = MOV [v47|QWORD + v52|QWORD * 1] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v41|QWORD, y: v53|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B23 -> B25 falseDestination: B23 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B22" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4599230716294395707
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v54|DWORD = INC v49|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v54|DWORD] destination: B24 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B27" 
    xhandlers
    flags 
    probability 4601083748419892302
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B17 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B27" 
    xhandlers
    flags 
    probability 4596580148792521807
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v44|QWORD + 32], y: v41|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B27" 
    xhandlers
    flags 
    probability 4596580148792521806
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B20 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B17" "B25" "B20" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4605587348047262798
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" 
    xhandlers
    flags 
    probability 4604846135197064160
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B28 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B49" "B54" 
    xhandlers
    flags 
    probability 4595548303301553864
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v70|QWORD[.] = UNCOMPRESSPOINTER (input: v17|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v17|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.01987559010066231 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4595421491411700642
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v17|DWORD[_] * 8 + 8] trueDestinationProbability: 2.021089053783065E-6 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B56 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4595421478772878611
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v70|QWORD[.], int[0|0x0]] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B62" 
    successors "B65" "B58" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4595777537596400292
    begin_IR
      LIR
      nr   -1  <|@ instruction [v80|QWORD[.], v81|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] v80|QWORD[.] - - - - v81|DWORD 
>@ <|@ instruction v82|DWORD[_] = MOV [v80|QWORD[.] + 24] size: DWORD state [bci:134] <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = UNCOMPRESSPOINTER (input: v82|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v82|DWORD[_], y: v82|DWORD[_]) trueDestinationProbability: 0.5880075530332061 condition: = trueDestination: B57 -> B65 falseDestination: B57 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4590110563079390205
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v82|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.8692436604445373 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B62 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B57" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4576850562957400324
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] v80|QWORD[.] - - - - v81|DWORD 
>@ <|@ instruction SAFEPOINT v92|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 thread: r15 state [bci:134] <|@ <|@
      nr   -1  <|@ instruction v93|DWORD = INC v81|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v83|QWORD[.], v93|DWORD] destination: B62 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4592437312858669387
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v94|QWORD = MOV [v19|QWORD + 680] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v95|QWORD = MOV [v94|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v94|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v95|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:648) [bci: 152]
stack: v80|QWORD[.] 
locals: v0|QWORD[.] v1|DWORD - v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] - - - v83|QWORD[.] - v81|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.]]) [] callTarget: HotSpotMethod<HashMap.newNode(int, Object, Object, HashMap$Node)> state [bci:152] <|@ <|@
      nr   -1  <|@ instruction v96|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B67 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B72" 
    xhandlers
    flags 
    probability 4591660023639118941
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B66 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4590594123464754032
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[.+] = LEA [v11|QWORD[.] + v16|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v56|DWORD[_] = MOV [v55|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v56|DWORD[_], y: v56|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4590001153184595122
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[.] = UNCOMPRESSPOINTER (input: v56|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v57|QWORD, y: v57|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4589467479932452103
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v59|QWORD + v57|QWORD * 1 - 8], y: v58|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = LEA [v57|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v60|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B64" "B60" 
    xhandlers
    flags 
    probability 4589398445432346844
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v84|DWORD[_] = MOV [v82|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v85|QWORD[.] = UNCOMPRESSPOINTER (input: v84|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v85|QWORD[.], y: v2|QWORD[.]) trueDestinationProbability: 0.9998932466496128 condition: = trueDestination: B59 -> B64 falseDestination: B59 -> B60 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B86" 
    xhandlers
    flags 
    probability 4589397940059341918
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v83|QWORD[.]] destination: B64 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4577371935537457006
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v97|QWORD[.+] = LEA [v80|QWORD[.] + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v98|DWORD[_] = MOV [v97|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v98|DWORD[_], y: v98|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B67 -> B68 falseDestination: B67 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" "B71" 
    xhandlers
    flags 
    probability 4576750104161816650
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v99|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v100|QWORD[.] = UNCOMPRESSPOINTER (input: v98|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v99|QWORD, y: v99|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    probability 4576190455923740329
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v101|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v101|QWORD + v99|QWORD * 1 - 8], y: v100|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v102|QWORD = LEA [v99|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v102|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    probability 4575897384022324722
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B30 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4575895921484393205
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v25|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] - v12|DWORD - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7fba62ccef80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:29] <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] - v12|DWORD - - - - 
>@ <|@ instruction NULLCHECK [v26|QWORD[.]] state [bci:29] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v26|QWORD[.]] destination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4575188794187971253
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v58|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" "B33" "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4605587348047262798
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v61|DWORD[_] = COMPRESSPOINTER (input: v38|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v11|QWORD[.] + v16|DWORD * 4 + 16], y: v61|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v62|QWORD[.+] = LEA [v11|QWORD[.] + v16|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v63|QWORD[*] = XOR (x: v62|QWORD[.+], y: v38|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v63|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4604846135197064160
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v38|QWORD[.], y: v38|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4604179043631885386
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v65|QWORD[.+] = LEA [v11|QWORD[.] + v16|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v64|QWORD[*] = SHR v65|QWORD[.+] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v64|QWORD[*] + v21|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B88" 
    xhandlers
    flags 
    probability 4603578661223224489
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B39 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B88" 
    xhandlers
    flags 
    probability 4590594123464754032
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B35 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B88" 
    xhandlers
    flags 
    probability 4590001153184595122
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B37 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4589467479932452103
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v64|QWORD[*] + v21|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B88" 
    xhandlers
    flags 
    probability 4588806327720511347
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B41 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4574334916984542422
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v64|QWORD[*] + v21|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[*] = ADD (x: v64|QWORD[*], y: v21|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v66|QWORD, y: v66|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B88" 
    xhandlers
    flags 
    probability 4573566427501456474
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v68|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v68|QWORD + v66|QWORD * 1 - 8], y: v67|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v69|QWORD = LEA [v66|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v69|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B44 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4570262383476918658
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v71|DWORD[_] = MOV [v17|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v72|QWORD[.] = UNCOMPRESSPOINTER (input: v71|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v72|QWORD[.], y: v2|QWORD[.]) trueDestinationProbability: 0.9854570809572428 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B86" 
    xhandlers
    flags 
    probability 4570144353713859813
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v70|QWORD[.]] destination: B50 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 4564966382317228292
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:635) [bci: 20]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.resize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:20] <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:635) [bci: 23]
stack: Object[null] 
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD - - - - - - - 
>@ <|@ instruction v8|DWORD = MOV [v7|QWORD[.] + 12] size: DWORD state [bci:23] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v7|QWORD[.], v8|DWORD] destination: B1 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B72" 
    xhandlers
    flags 
    probability 4562617473904064804
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B68 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    probability 4562093595080792590
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v100|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B66" "B68" "B71" "B70" 
    successors "B73" "B74" 
    xhandlers
    flags 
    probability 4592437312858669387
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v103|DWORD[_] = COMPRESSPOINTER (input: v96|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v80|QWORD[.] + 24], y: v103|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v104|QWORD[*] = XOR (x: v80|QWORD[.], y: v96|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v104|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    probability 4591660023639118941
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v96|QWORD[.], y: v96|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    probability 4590960463341523540
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v105|QWORD[*] = SHR v80|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v105|QWORD[*] + v21|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B83" 
    xhandlers
    flags 
    probability 4590330859073687679
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B77 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B83" 
    xhandlers
    flags 
    probability 4577371935537457006
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B73 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B83" 
    xhandlers
    flags 
    probability 4576750104161816649
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B75 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    probability 4576190455923740328
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v105|QWORD[*] + v21|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B83" 
    xhandlers
    flags 
    probability 4575686772509471639
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B79 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    probability 4561198157899870475
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v105|QWORD[*] + v21|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v106|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v107|QWORD[*] = ADD (x: v105|QWORD[*], y: v21|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v106|QWORD, y: v106|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    probability 4560392264437040573
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v108|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v108|QWORD + v106|QWORD * 1 - 8], y: v107|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v109|QWORD = LEA [v106|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v109|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B88" 
    xhandlers
    flags 
    probability 4559287139136259037
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v67|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B43 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4553315745025075769
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = LEA [v31|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v32|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4553268943811267021
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v32|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v31|QWORD + 296] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV [v31|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v31|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV [v31|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v31|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v31|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v31|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[.] = MOVE v31|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v36|QWORD[.]] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4553315745025075769
    begin_IR
      LIR
      nr   -1  <|@ instruction [v37|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v37|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.LinkedHashMap$Entry.<init>(LinkedHashMap.java:208) [bci: 6]
locals: - - - - - 
java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 9]
stack: v37|QWORD[.] 
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] Object[null] - 
java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stack: v11|QWORD[.] v16|DWORD 
locals: v0|QWORD[.] - - - - v5|DWORD - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.]] [] callTarget: HotSpotMethod<HashMap$Node.<init>(int, Object, Object, HashMap$Node)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:6, 9, 56] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v37|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.LinkedHashMap.newNode(LinkedHashMap.java:283) [bci: 17]
locals: - - - - - v37|QWORD[.] 
java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stack: v11|QWORD[.] v16|DWORD 
locals: v0|QWORD[.] - - - - v5|DWORD - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<LinkedHashMap.linkNodeAtEnd(LinkedHashMap$Entry)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:17, 56] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v37|QWORD[.]] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    probability 4546075572092099182
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v107|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B73" "B75" "B77" "B79" "B82" "B81" 
    successors "B84" "B85" 
    xhandlers
    flags 
    probability 4592437312858669387
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v81|DWORD trueDestinationProbability: 0.9999886211240704 condition: < trueDestination: B83 -> B84 falseDestination: B83 -> B85 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" 
    xhandlers
    flags 
    probability 4592437224411893480
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v83|QWORD[.]] destination: B84 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B50" "B55" "B64" "B84" "B85" "B63" "B53" 
    successors "B87" "B100" 
    xhandlers
    flags 
    probability 4595548303301553864
    begin_IR
      LIR
      nr   -1  <|@ instruction [v110|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v110|QWORD[.], y: v110|QWORD[.]) trueDestinationProbability: 0.6091185940042786 condition: = trueDestination: B86 -> B87 falseDestination: B86 -> B100 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B88" 
    xhandlers
    flags 
    probability 4592437118697206803
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B87 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B35" "B87" "B43" "B44" "B41" "B39" "B37" 
    successors "B89" "B90" 
    xhandlers
    flags 
    probability 4606558935301518032
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction INC [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v111|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction v112|DWORD = ADD (x: v111|DWORD, ~y: [v0|QWORD[.] + 20]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v112|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v112|DWORD, y: [v0|QWORD[.] + 28]) trueDestinationProbability: 7.853038846579175E-4 condition: > trueDestination: B88 -> B89 falseDestination: B88 -> B90 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B91" 
    xhandlers
    flags 
    probability 4606552351536966788
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B90 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" "B89" 
    successors "B92" "B93" "B99" 
    xhandlers
    flags 
    probability 4606558935301518032
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v19|QWORD - keyConstants: [meta{HotSpotType<Ljava/util/HashMap;, resolved>}, meta{HotSpotType<Ljava/util/LinkedHashMap;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/replacements/SnippetTemplate$LRUCache;, resolved>}] keyTargets: [B91 -> B92, B91 -> B93, B91 -> B93] defaultTarget: B91 -> B99 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B97" 
    xhandlers
    flags 
    probability 4606555909645339483
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B92 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B92" "B94" "B96" 
    successors 
    xhandlers
    flags 
    probability 4606558935301518031
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B101" "B119" 
    xhandlers
    flags 
    probability 4589652288651159933
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v122|DWORD[_] = MOV [v110|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v4|DWORD, y: v4|DWORD) trueDestinationProbability: 0.9999962001170364 condition: = trueDestination: B100 -> B101 falseDestination: B100 -> B119 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B102" "B103" 
    xhandlers
    flags 
    probability 4589652269697845341
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B103 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B108" 
    xhandlers
    flags 
    probability 4589138949298219176
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B102 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" "B105" 
    xhandlers
    flags 
    probability 4574630580609171603
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v123|QWORD[.+] = LEA [v110|QWORD[.] + 20] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v124|DWORD[_] = MOV [v123|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v124|DWORD[_], y: v124|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B103 -> B104 falseDestination: B103 -> B105 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B106" "B107" 
    xhandlers
    flags 
    probability 4573832524763622737
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v125|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v126|QWORD[.] = UNCOMPRESSPOINTER (input: v124|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v125|QWORD, y: v125|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B105 -> B106 falseDestination: B105 -> B107 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B108" 
    xhandlers
    flags 
    probability 4573114274502628758
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v127|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v127|QWORD + v125|QWORD * 1 - 8], y: v126|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v128|QWORD = LEA [v125|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v128|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B107 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B91" 
    xhandlers
    flags 
    probability 4559880998172045651
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:669) [bci: 288]
locals: v0|QWORD[.] - - - - v5|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.resize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:288] <|@ <|@
      nr   -1  <|@ instruction v113|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B89 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B108" 
    xhandlers
    flags 
    probability 4559523670035962382
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B104 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B108" 
    xhandlers
    flags 
    probability 4558885225359523289
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v126|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B106 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B102" "B104" "B107" "B106" 
    successors "B109" "B110" 
    xhandlers
    flags 
    probability 4589652269697845341
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v110|QWORD[.] + 20], y: v22|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v129|QWORD[*] = XOR (x: v110|QWORD[.], y: v3|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v129|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B108 -> B109 falseDestination: B108 -> B110 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" "B112" 
    xhandlers
    flags 
    probability 4589138949298219176
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v3|QWORD[.], y: v3|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B110 -> B111 falseDestination: B110 -> B112 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B113" "B114" 
    xhandlers
    flags 
    probability 4588241136471976702
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v130|QWORD[*] = SHR v110|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v130|QWORD[*] + v21|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B112 -> B113 falseDestination: B112 -> B114 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B120" 
    xhandlers
    flags 
    probability 4587433104928358475
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B113 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B120" 
    xhandlers
    flags 
    probability 4574630580609171603
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B109 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B120" 
    xhandlers
    flags 
    probability 4573832524763622738
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B111 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B115" "B116" 
    xhandlers
    flags 
    probability 4573114274502628759
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v130|QWORD[*] + v21|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B114 -> B115 falseDestination: B114 -> B116 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B120" 
    xhandlers
    flags 
    probability 4572467849267734178
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B115 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B117" "B118" 
    xhandlers
    flags 
    probability 4558310625150728107
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v130|QWORD[*] + v21|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v131|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v132|QWORD[*] = ADD (x: v130|QWORD[*], y: v21|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v131|QWORD, y: v131|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B116 -> B117 falseDestination: B116 -> B118 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B120" 
    xhandlers
    flags 
    probability 4557793484962812442
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v133|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v133|QWORD + v131|QWORD * 1 - 8], y: v132|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v134|QWORD = LEA [v131|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v134|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B118 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B94" "B95" 
    xhandlers
    flags 
    probability 4554832167497868566
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v5|DWORD, y: v5|DWORD) trueDestinationProbability: 0.4891304347826087 condition: = trueDestination: B93 -> B94 falseDestination: B93 -> B95 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B96" "B98" 
    xhandlers
    flags 
    probability 4550463275345577801
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v114|DWORD[_] = MOV [v0|QWORD[.] + 52] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:670) [bci: 292]
locals: v0|QWORD[.] - - - - v5|DWORD - - - - - - - 
>@ <|@ instruction NULLCHECK [v114|DWORD[_] * 8] state [bci:292] <|@ <|@
      nr   -1  <|@ instruction v115|DWORD = MOV [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v117|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr   -1  <|@ instruction v116|QWORD = UNCOMPRESSPOINTER (input: v115|DWORD, ~baseRegister: v117|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v118|QWORD = MOV [v116|QWORD + 872] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v119|QWORD = MOV [v118|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v120|QWORD[.] = UNCOMPRESSPOINTER (input: v114|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v120|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v118|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v119|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 15]
locals: v0|QWORD[.] - v120|QWORD[.] - 
java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
locals: - - - - - - - - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<LinkedHashMap.removeEldestEntry(Map$Entry)> state [bci:15, 295] <|@ <|@
      nr   -1  <|@ instruction v121|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v121|DWORD, y: v121|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B95 -> B96 falseDestination: B95 -> B98 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B97" 
    xhandlers
    flags 
    probability 4550463275345577801
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B96 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B97" 
    xhandlers
    flags 
    probability 4550193860395418340
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B94 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B120" 
    xhandlers
    flags 
    probability 4543399067768740112
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v132|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B117 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B119" "B109" "B117" "B118" "B115" "B113" "B111" 
    successors 
    xhandlers
    flags 
    probability 4589652288651159933
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v135|QWORD = MOV [v19|QWORD + 688] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v136|QWORD = MOV [v135|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v137|QWORD[.] = UNCOMPRESSPOINTER (input: v122|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v110|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v135|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v136|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:663) [bci: 253]
locals: - - - - - - - - - - - - v137|QWORD[.] 
>@ <|@ instruction - = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<HashMap.afterNodeAccess(HashMap$Node)> state [bci:253] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v137|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4542678729597855531
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] - v12|DWORD - - - - 
>@ <|@ instruction v73|DWORD = MOV [v2|QWORD[.] + 8] size: DWORD state [bci:29] <|@ <|@
      nr   -1  <|@ instruction v75|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr   -1  <|@ instruction v74|QWORD = UNCOMPRESSPOINTER (input: v73|DWORD, ~baseRegister: v75|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v76|QWORD = MOV [v74|QWORD + 464] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v77|QWORD = MOV [v76|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v72|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v76|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v77|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:641) [bci: 91]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] v70|QWORD[.] - - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:91] <|@ <|@
      nr   -1  <|@ instruction v78|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v78|DWORD, y: v78|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B86" 
    xhandlers
    flags 
    probability 4542678729597855531
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v70|QWORD[.]] destination: B53 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B63" 
    xhandlers
    flags 
    probability 4529894057192690854
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] v80|QWORD[.] - - - - v81|DWORD 
>@ <|@ instruction v86|DWORD = MOV [v2|QWORD[.] + 8] size: DWORD state [bci:134] <|@ <|@
      nr   -1  <|@ instruction v88|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr   -1  <|@ instruction v87|QWORD = UNCOMPRESSPOINTER (input: v86|DWORD, ~baseRegister: v88|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v89|QWORD = MOV [v87|QWORD + 464] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v90|QWORD = MOV [v89|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v85|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v89|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v90|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:654) [bci: 203]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] - - - v83|QWORD[.] - v81|DWORD 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:203] <|@ <|@
      nr   -1  <|@ instruction v91|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v91|DWORD, y: v91|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B86" 
    xhandlers
    flags 
    probability 4529894057192690854
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v83|QWORD[.]] destination: B63 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4523100981620127249
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v33|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] - v12|DWORD - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7fba62ccef80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:29] <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] - v12|DWORD - - - - 
>@ <|@ instruction NULLCHECK [v34|QWORD[.]] state [bci:29] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v34|QWORD[.]] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" 
    xhandlers
    flags 
    probability 4518403274531071726
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:650) [bci: 169]
locals: v0|QWORD[.] - - v3|QWORD[.] v4|DWORD v5|DWORD - - - - v83|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<HashMap.treeifyBin(HashMap$Node[], int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:169] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v83|QWORD[.]] destination: B85 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B86" 
    xhandlers
    flags 
    probability 4510226010095555986
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v70|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:644) [bci: 123]
locals: v0|QWORD[.] - - v3|QWORD[.] v4|DWORD v5|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|QWORD[.], rdi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap$TreeNode.putTreeVal(HashMap, HashMap$Node[], int, Object, Object)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:123] <|@ <|@
      nr   -1  <|@ instruction v79|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v79|QWORD[.]] destination: B55 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B120" 
    xhandlers
    flags 
    probability 4508568125070994604
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:659) [bci: 222]
locals: v0|QWORD[.] - - v3|QWORD[.] v4|DWORD v5|DWORD - - - - v110|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [v122|DWORD[_] * 8] state [bci:222] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B119 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-51507|0xffffffffffff36cd], long[5780|0x1694]] destination: B47 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -157971 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 1300 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:654) [bci: 206]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] - - - v83|QWORD[.] - v81|DWORD 
>@ <|@ instruction DEOPT info [bci:206] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-75547|0xfffffffffffed8e5], long[0|0x0]] destination: B121 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B121" "B47" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v138|DWORD, v139|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v138|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v139|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] - v12|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:29] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -61235 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 8980 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:670) [bci: 292]
locals: v0|QWORD[.] - - - - v5|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:292] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B26 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B26" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -82987 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stack: v11|QWORD[.] v16|DWORD v38|QWORD[.] 
locals: v0|QWORD[.] - - - - v5|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:59] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -153363 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:641) [bci: 94]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] v70|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:94] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -161299 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 10260 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 18]
stack: v121|DWORD 
locals: v0|QWORD[.] - v120|QWORD[.] - 
java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
locals: - - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:18, 295] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -129299 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:634) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #21         // table:java.util.HashMap$Node[]
     4: dup           
     5: astore        6
     7: ifnull        19
    10: aload         6
    12: arraylength   
    13: dup           
    14: istore        8
    16: ifne          29
    19: aload_0       
    20: invokevirtual #23         // resize:()java.util.HashMap$Node[]
    23: dup           
    24: astore        6
    26: arraylength   
    27: istore        8
    29: aload         6
    31: iload         8
    33: iconst_1      
    34: isub          
    35: iload_1       
    36: iand          
    37: dup           
    38: istore        9
    40: aaload        
    41: dup           
    42: astore        7
    44: ifnonnull     63
    47: aload         6
    49: iload         9
    51: aload_0       
    52: iload_1       
    53: aload_2       
    54: aload_3       
    55: aconst_null   
    56: invokevirtual #40         // newNode:(int, java.lang.Object, java.lang.Object, java.util.HashMap$Node)java.util.HashMap$Node
    59: aastore       
    60: goto          259
    63: aload         7
    65: getfield      #35         // java.util.HashMap$Node.hash:int
    68: iload_1       
    69: if_icmpne     104
    72: aload         7
    74: getfield      #36         // java.util.HashMap$Node.key:java.lang.Object
    77: dup           
    78: astore        11
    80: aload_2       
    81: if_acmpeq     97
    84: aload_2       
    85: ifnull        104
    88: aload_2       
    89: aload         11
    91: invokevirtual #37         // java.lang.Object.equals:(java.lang.Object)boolean
    94: ifeq          104
    97: aload         7
    99: astore        10
   101: goto          222
   104: aload         7
   106: instanceof    #180        // java.util.HashMap$TreeNode
   109: ifeq          131
   112: aload         7
   114: checkcast     #180        // java.util.HashMap$TreeNode
   117: aload_0       
   118: aload         6
   120: iload_1       
   121: aload_2       
   122: aload_3       
   123: invokevirtual #41         // java.util.HashMap$TreeNode.putTreeVal:(java.util.HashMap, java.util.HashMap$Node[], int, java.lang.Object, java.lang.Object)java.util.HashMap$TreeNode
   126: astore        10
   128: goto          222
   131: iconst_0      
   132: istore        12
   134: aload         7
   136: getfield      #38         // java.util.HashMap$Node.next:java.util.HashMap$Node
   139: dup           
   140: astore        10
   142: ifnonnull     175
   145: aload         7
   147: aload_0       
   148: iload_1       
   149: aload_2       
   150: aload_3       
   151: aconst_null   
   152: invokevirtual #40         // newNode:(int, java.lang.Object, java.lang.Object, java.util.HashMap$Node)java.util.HashMap$Node
   155: putfield      #38         // java.util.HashMap$Node.next:java.util.HashMap$Node
   158: iload         12
   160: bipush        7
   162: if_icmplt     222
   165: aload_0       
   166: aload         6
   168: iload_1       
   169: invokevirtual #42         // treeifyBin:(java.util.HashMap$Node[], int)void
   172: goto          222
   175: aload         10
   177: getfield      #35         // java.util.HashMap$Node.hash:int
   180: iload_1       
   181: if_icmpne     212
   184: aload         10
   186: getfield      #36         // java.util.HashMap$Node.key:java.lang.Object
   189: dup           
   190: astore        11
   192: aload_2       
   193: if_acmpeq     222
   196: aload_2       
   197: ifnull        212
   200: aload_2       
   201: aload         11
   203: invokevirtual #37         // java.lang.Object.equals:(java.lang.Object)boolean
   206: ifeq          212
   209: goto          222
   212: aload         10
   214: astore        7
   216: iinc          
   219: goto          134
   222: aload         10
   224: ifnull        259
   227: aload         10
   229: getfield      #34         // java.util.HashMap$Node.value:java.lang.Object
   232: astore        12
   234: iload         4
   236: ifeq          244
   239: aload         12
   241: ifnonnull     250
   244: aload         10
   246: aload_3       
   247: putfield      #34         // java.util.HashMap$Node.value:java.lang.Object
   250: aload_0       
   251: aload         10
   253: invokevirtual #43         // afterNodeAccess:(java.util.HashMap$Node)void
   256: aload         12
   258: areturn       
   259: aload_0       
   260: dup           
   261: getfield      #44         // modCount:int
   264: iconst_1      
   265: iadd          
   266: putfield      #44         // modCount:int
   269: aload_0       
   270: dup           
   271: getfield      #32         // size:int
   274: iconst_1      
   275: iadd          
   276: dup_x1        
   277: putfield      #32         // size:int
   280: aload_0       
   281: getfield      #17         // threshold:int
   284: if_icmple     292
   287: aload_0       
   288: invokevirtual #23         // resize:()java.util.HashMap$Node[]
   291: pop           
   292: aload_0       
   293: iload         5
   295: invokevirtual #45         // afterNodeInsertion:(boolean)void
   298: aconst_null   
   299: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a1138 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: a1138  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a! java.util.HashMap
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?7 v1188 v420 ?21 ?28 ?655 v1207 v1223 ?58 ?229 v346 ?645 ?85 v1208 v419 ?112 ?648 v377 ?183 ?649 v384 ?650 ?137 ?651 ?652 v396 ?643 v1206 ?223 ?653 v306 ?254 v1209 v418 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1188 <|@
result [v0|QWORD[.] + 36] <|@
d <@d|@=== Debug Properties ===
displacement: 36
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a1138 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1138 <|@
result v6|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.HashMap$Node[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: HashMap.table
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:634) [bci: 1]
stamp: n java.util.HashMap$Node[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1188 
lastLocationAccess: - 
=== Succesors ===
next: v13 
=== Usages ===
a287 v426 v1213 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1188 lastLocationAccess: - #next: v13  <|@  <|@
f <@~|@floating>@ <|@
tid v426 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:634) [bci: 12]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a1138 
=== Succesors ===
=== Usages ===
v13 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a1138  <|@  <|@
f <@~|@floating>@ <|@
tid i15 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:634) [bci: 16]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v16 v59 i84 v113 v146 v245 v255 i552 v734 v782 ?58 ?112 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a9 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:634) [bci: 7]
rawvalue: null
stableDimension: 0
stamp: a java.lang.Object NULL
stampKind: a java.lang.Object
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v305 v377 v187 ?223 ?21 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
result v1|DWORD <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?7 ?21 ?28 i32 v305 v45 ?58 v346 ?85 ?649 v97 ?112 v377 ?650 ?651 v384 v511 ?223 ?645 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a3 <|@
result v2|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: a java.lang.Object
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?7 ?21 ?28 v305 v50 v369 v1252 ?58 v346 ?85 ?650 v102 v342 ?112 v377 a513 ?223 ?645 ?649 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a4 <|@
result v3|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 3
stamp: a java.lang.Object
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?7 ?21 ?28 v305 ?58 a397 v346 ?223 ?85 ?645 ?648 ?112 ?649 v377 ?650 ?651 ?652 ?137 a1069 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i5 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
index: 4
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?7 ?21 ?28 ?58 v146 ?137 ?85 ?645 ?648 ?112 ?649 ?650 ?651 ?652 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i6 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
index: 5
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?7 ?21 ?28 ?653 ?645 ?58 v245 ?648 ?85 ?183 ?229 ?112 ?649 ?650 ?651 ?652 ?137 ?643 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v13 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:634) [bci: 7]
profileData: PROFILED designatedSuccessorProbability: 0.0015880438063265454
stamp: void
=== Inputs ===
condition: v426 
=== Succesors ===
trueSuccessor: v12 
falseSuccessor: v11 
=== Usages ===
=== Predecessor ===
a1138 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v426 #trueSuccessor: v12 #falseSuccessor: v11  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|DWORD, rdi|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@21849dd slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[_] = MOV [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v6|DWORD[_], y: v6|DWORD[_]) trueDestinationProbability: 0.0015880438063265454 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 4564966382317228292
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:635) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: a20 
=== Usages ===
=== Predecessor ===
v13 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a20  <|@  <|@
tid v420 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:635) [bci: 20]
referencedType: [null]
returnStamp: a java.util.HashMap$Node[]
signature: [HotSpotType<Ljava/util/HashMap;, resolved>]
stamp: void
targetMethod: HotSpotMethod<HashMap.resize()>
=== Inputs ===
arguments: a1 
=== Succesors ===
=== Usages ===
a20 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1  <|@  <|@
tid ?645 <|@
d <@d|@=== Debug Properties ===
bci: 20
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
localsSize: 13
locksSize: 0
sourceFile: HashMap.java
sourceLine: 635
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i2 a3 a4 i5 i6 
=== Succesors ===
=== Usages ===
a20 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 a3 a4 i5 i6  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a20 <|@
result v7|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 20
identity: ANY_LOCATION
inlineControl: Normal
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:635) [bci: 20]
polymorphic: false
stamp: a java.util.HashMap$Node[]
targetMethod: Direct#HashMap.resize
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v420 
stateDuring: ?645 
=== Succesors ===
next: i1139 
=== Usages ===
a26 v1212 
=== Predecessor ===
v12 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v420 stateDuring: ?645 #next: i1139  <|@  <|@
tid ?21 <|@
d <@d|@=== Debug Properties ===
bci: 23
bytecode: dup
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
localsSize: 13
locksSize: 0
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:635) [bci: 20]
sourceFile: HashMap.java
sourceLine: 635
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a9 a1 i2 a3 a4 i5 i6 
=== Succesors ===
=== Usages ===
i1139 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a9 a1 i2 a3 a4 i5 i6  <|@  <|@
f <@~|@floating>@ <|@
tid v1212 <|@
result [v7|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a20 
index: - 
=== Succesors ===
=== Usages ===
i1139 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a20 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1139 <|@
result v8|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-108043|0xfffffffffffe59f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:635) [bci: 26]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?21 
guard: - 
address: v1212 
lastLocationAccess: - 
=== Succesors ===
next: v25 
=== Usages ===
i27 
=== Predecessor ===
a20 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?21 guard: - address: v1212 lastLocationAccess: - #next: v25  <|@  <|@
f <@*|@fixed>@ <|@
tid v25 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v24 
=== Predecessor ===
i1139 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:635) [bci: 20]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.resize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:20] <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:635) [bci: 23]
stack: Object[null] 
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD - - - - - - - 
>@ <|@ instruction v8|DWORD = MOV [v7|QWORD[.] + 12] size: DWORD state [bci:23] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v7|QWORD[.], v8|DWORD] destination: B1 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607168114973028567
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v11 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:634) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1140 
=== Usages ===
=== Predecessor ===
v13 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i1140  <|@  <|@
f <@~|@floating>@ <|@
tid v1213 <|@
result [v6|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a1138 
=== Succesors ===
=== Usages ===
i1140 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1138  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1140 <|@
result v9|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:634) [bci: 12]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1213 
lastLocationAccess: - 
=== Succesors ===
next: v508 
=== Usages ===
v16 i27 
=== Predecessor ===
v11 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1213 lastLocationAccess: - #next: v508  <|@  <|@
f <@~|@floating>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:634) [bci: 16]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1140 
y: i15 
=== Succesors ===
=== Usages ===
v508 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i1140 y: i15  <|@  <|@
f <@*|@fixed>@ <|@
tid v508 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:634) [bci: 16]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v16 
=== Succesors ===
trueSuccessor: v506 
falseSuccessor: v507 
=== Usages ===
=== Predecessor ===
i1140 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v16 #trueSuccessor: v506 #falseSuccessor: v507  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOV [v6|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v9|DWORD, y: v9|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v506 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:634) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v505 
=== Usages ===
=== Predecessor ===
v508 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v505  <|@  <|@
tid ?7 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_0
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
localsSize: 13
locksSize: 0
sourceFile: HashMap.java
sourceLine: 634
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i2 a3 a4 i5 i6 
=== Succesors ===
=== Usages ===
v505 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 a3 a4 i5 i6  <|@  <|@
f <@*|@fixed>@ <|@
tid v505 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 0
mayConvertToGuard: true
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:634) [bci: 16]
reason: UnreachedCode
speculation: {0x0000000000000014[index: 0, len: 20, hash: 0x5bfbb57b]: UnreachedCode@5[HotSpotMethod<HashMap.putVal(int, Object, Object, boolean, boolean)>, 19]}
stamp: void
=== Inputs ===
stateBefore: ?7 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v506 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?7  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -129299 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:634) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607168114973028567
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v507 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: v23 
=== Usages ===
=== Predecessor ===
v508 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v23  <|@  <|@
f <@~|@floating>@ <|@
tid a287 <|@
result v10|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:634) [bci: 1]
op: Uncompress
stamp: a java.util.HashMap$Node[]
=== Inputs ===
value: a1138 
=== Succesors ===
=== Usages ===
a26 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1138  <|@  <|@
f <@*|@fixed>@ <|@
tid v23 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v24 
=== Predecessor ===
v507 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v10|QWORD[.], v9|DWORD] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B1" 
    successors "B6" "B121" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a26 <|@
result v11|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
stamp: a java.util.HashMap$Node[]
valueDescription: a java.lang.Object
=== Inputs ===
merge: v24 
values: a287 a20 
=== Succesors ===
=== Usages ===
?28 v1241 ?643 v1190 ?58 v346 ?85 ?651 ?112 ?649 ?650 v384 ?229 v1189 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v24 values: a287 a20  <|@  <|@
f <@~|@floating>@ <|@
tid i27 <|@
result v12|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
valueDescription: i32
=== Inputs ===
merge: v24 
values: i1140 i1139 
=== Succesors ===
=== Usages ===
?28 i31 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v24 values: i1140 i1139  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v24 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v23 v25 
=== Succesors ===
next: i1141 
=== Usages ===
a26 i27 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v23 v25 #next: i1141  <|@  <|@
f <@~|@floating>@ <|@
tid v1189 <|@
result [v11|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a26 
index: - 
=== Succesors ===
=== Usages ===
i1141 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a26 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1141 <|@
result v13|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:636) [bci: 40]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1189 
lastLocationAccess: - 
=== Succesors ===
next: v1142 
=== Usages ===
v308 
=== Predecessor ===
v24 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1189 lastLocationAccess: - #next: v1142  <|@  <|@
f <@~|@floating>@ <|@
tid v1241 <|@
result [v11|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: a26 
index: - 
=== Succesors ===
=== Usages ===
v1142 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a26 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1142 <|@
result v14|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140436756758528 shift: 0)
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: Klass*!(compressed base: 140436756758528 shift: 0)
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1241 
lastLocationAccess: - 
=== Succesors ===
next: v483 
=== Usages ===
v799 
=== Predecessor ===
i1141 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1241 lastLocationAccess: - #next: v483  <|@  <|@
f <@~|@floating>@ <|@
tid i30 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:636) [bci: 34]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1]
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i31 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i31 <|@
result v15|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:636) [bci: 34]
stamp: i32 [-1 - 2147483646]
=== Inputs ===
x: i27 
y: i30 
=== Succesors ===
=== Usages ===
i32 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i27 y: i30  <|@  <|@
f <@~|@floating>@ <|@
tid i32 <|@
result v16|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:636) [bci: 36]
stamp: i32
=== Inputs ===
x: i2 
y: i31 
=== Succesors ===
=== Usages ===
v1190 ?643 v308 ?229 
=== Predecessor ===
- >@ <|@
instruction <@&|@jdk.graal.compiler.nodes.calc.AndNode>@ x: i2 y: i31  <|@  <|@
f <@~|@floating>@ <|@
tid v308 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@40aab068
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i32 
y: i1141 
=== Succesors ===
=== Usages ===
v483 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i32 y: i1141  <|@  <|@
tid ?28 <|@
d <@d|@=== Debug Properties ===
bci: 29
bytecode: aload
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
localsSize: 13
locksSize: 0
sourceFile: HashMap.java
sourceLine: 636
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i2 a3 a4 i5 i6 a26 - i27 
=== Succesors ===
=== Usages ===
v662 v1183 v1185 a711 a760 v1150 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 a3 a4 i5 i6 a26 - i27  <|@  <|@
f <@~|@floating>@ <|@
tid j570 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:95) [bci: 41]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:83) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
rawvalue: 0
stableDimension: 0
stamp: i64 [0]
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v877 v1094 j661 v980 v1076 v1041 v735 v736 v945 v783 v784 v785 v998 v819 v857 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v483 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:636) [bci: 40]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v308 
=== Succesors ===
trueSuccessor: v480 
falseSuccessor: v482 
=== Usages ===
=== Predecessor ===
v1142 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v308 #trueSuccessor: v480 #falseSuccessor: v482  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v11|QWORD[.], v12|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = MOV [v11|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOV [v11|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = DEC v12|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = AND (x: v1|DWORD, y: v15|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v16|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B121 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B48" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v480 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:636) [bci: 40]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1143 
=== Usages ===
v323 
=== Predecessor ===
v483 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a1143  <|@  <|@
f <@~|@floating>@ <|@
tid v1190 <|@
result [v11|QWORD[.] + v16|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a26 
index: i32 
=== Succesors ===
=== Usages ===
a1143 v323 j806 j851 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a26 index: i32  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1143 <|@
result v17|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.HashMap$Node
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:636) [bci: 40]
stamp: n java.util.HashMap$Node
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1190 
lastLocationAccess: - 
=== Succesors ===
next: v1144 
=== Usages ===
a304 v325 v1192 v1193 v1253 
=== Predecessor ===
v480 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1190 lastLocationAccess: - #next: v1144  <|@  <|@
f <@~|@floating>@ <|@
tid v1223 <|@
result [v0|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v1144 v1160 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1144 <|@
result v18|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140436756758528 shift: 0)
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
stamp: Klass*!(compressed base: 140436756758528 shift: 0)
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1223 
lastLocationAccess: - 
=== Succesors ===
next: v37 
=== Usages ===
v697 
=== Predecessor ===
a1143 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1223 lastLocationAccess: - #next: v37  <|@  <|@
f <@~|@floating>@ <|@
tid v697 <|@
result v19|QWORD <|@
d <@d|@=== Debug Properties ===
encoding: base: 140436756758528 shift: 0
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v1144 
=== Succesors ===
=== Usages ===
v204 v241 v1201 v1204 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v1144  <|@  <|@
f <@~|@floating>@ <|@
tid v325 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:640) [bci: 65]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a1143 
=== Succesors ===
=== Usages ===
v37 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a1143  <|@  <|@
f <@~|@floating>@ <|@
tid i29 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:636) [bci: 33]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i119 i165 i169 i566 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i901 <|@
result byte[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:227) [bci: 265] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
rawvalue: 2
stableDimension: 0
stamp: i8 [2]
stampKind: i8
value: byte[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
v902 v1019 v1115 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i865 <|@
result int[9|0x9] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.cardTableAddress(HotSpotG1WriteBarrierSnippets.java:130) [bci: 16]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 232] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
rawvalue: 9
stableDimension: 0
stamp: i32 [9]
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j866 j987 j1083 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j864 <|@
result v21|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableStart(GraalHotSpotVMConfig) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.cardTableAddress(HotSpotG1WriteBarrierSnippets.java:129) [bci: 3]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 232] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
rawvalue: 140438306553856
stableDimension: 0
stamp: i64 [140438306553856]
stampKind: i64
value: long[140438306553856|0x7fba57600000]
=== Inputs ===
=== Succesors ===
=== Usages ===
j889 v1251 j1009 v1262 j1105 v1271 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j887 <|@
result long[-4194304|0xffffffffffc00000] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:215) [bci: 193] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
rawvalue: -4194304
stableDimension: 0
stamp: i64 [-4194304]
stampKind: i64
value: long[-4194304|0xffffffffffc00000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v888 v1008 v1104 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j831 <|@
result long[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
rawvalue: -8
stableDimension: 0
stamp: i64 [-8]
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j832 j893 j956 j1011 j1052 j1107 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i840 <|@
result byte[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
rawvalue: 0
stableDimension: 0
stamp: i8 [0]
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v841 v896 v903 v964 v1014 v1020 v1060 v1110 v1116 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a397 <|@
result v22|DWORD[_] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
op: Compress
stamp: n java.lang.Object
=== Inputs ===
value: a4 
=== Succesors ===
=== Usages ===
v398 v516 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a4  <|@  <|@
f <@*|@fixed>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:636) [bci: 44]
profileData: PROFILED designatedSuccessorProbability: 0.8229115724385652
stamp: void
=== Inputs ===
condition: v325 
=== Succesors ===
trueSuccessor: v36 
falseSuccessor: v35 
=== Usages ===
=== Predecessor ===
v1144 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v325 #trueSuccessor: v36 #falseSuccessor: v35  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v17|DWORD[_] = MOV [v11|QWORD[.] + v16|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = MOV [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = UNCOMPRESSPOINTER (input: v18|DWORD, ~baseRegister: v20|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = MOVE input: long[140438306553856|0x7fba57600000] <|@ <|@
      nr   -1  <|@ instruction v22|DWORD[_] = COMPRESSPOINTER (input: v3|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v17|DWORD[_], y: v17|DWORD[_]) trueDestinationProbability: 0.8229115724385652 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B12" "B47" 
    xhandlers
    flags 
    probability 4605587348047262798
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v36 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:637) [bci: 47]
stamp: void
=== Inputs ===
=== Succesors ===
next: v204 
=== Usages ===
=== Predecessor ===
v37 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v204  <|@  <|@
f <@~|@floating>@ <|@
tid j707 <|@
result long[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.defaultPrototypeMarkWord(GraalHotSpotVMConfig) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:431) [bci: 9]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:271) [bci: 4]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.HashMap.newNode(HashMap.java:1909) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
rawvalue: 1
stableDimension: 0
stamp: i64 [1]
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v730 v778 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v204 <|@
d <@d|@=== Debug Properties ===
hubs: [meta{HotSpotType<Ljava/util/HashMap;, resolved>}, meta{HotSpotType<Ljava/util/LinkedHashMap;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/replacements/SnippetTemplate$LRUCache;, resolved>}]
keySuccessors: [I@491877b6
keys: [HotSpotType<Ljava/util/HashMap;, resolved>, HotSpotType<Ljava/util/LinkedHashMap;, resolved>, HotSpotType<Ljdk/graal/compiler/replacements/SnippetTemplate$LRUCache;, resolved>]
profileData: PROFILED keyProbabilities: [0.9996916924042274, 3.07562119720685E-4, 7.45476051954569E-7, 0.0]
stamp: void
=== Inputs ===
value: v697 
=== Succesors ===
successors: v194 v199 v202 
=== Usages ===
=== Predecessor ===
v36 >@ <|@
instruction <@TypeSwitch|@jdk.graal.compiler.nodes.java.TypeSwitchNode>@ value: v697 #successors: v194 v199 v202  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v19|QWORD - keyConstants: [meta{HotSpotType<Ljava/util/HashMap;, resolved>}, meta{HotSpotType<Ljava/util/LinkedHashMap;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/replacements/SnippetTemplate$LRUCache;, resolved>}] keyTargets: [B7 -> B8, B7 -> B12, B7 -> B12] defaultTarget: B7 -> B47 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4605585062831744793
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v194 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: v746 
=== Usages ===
=== Predecessor ===
v204 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v746  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v746 <|@
d <@d|@=== Debug Properties ===
locations: [MarkWord, Hub:write, TlabTop, TlabEnd, PrototypeMarkWord]
nodeSourcePosition: at java.util.HashMap.newNode(HashMap.java:1909) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: void
=== Inputs ===
=== Succesors ===
next: j699 
=== Usages ===
=== Predecessor ===
v194 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j699  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j699 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getThread(HotSpotAllocationSnippets.java:472) [bci: 4]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getTLABInfo(HotSpotAllocationSnippets.java:468) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:58) [bci: 1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.HashMap.newNode(HashMap.java:1909) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j727 
=== Usages ===
v1224 v1225 
=== Predecessor ===
v746 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j727  <|@  <|@
f <@~|@floating>@ <|@
tid v1224 <|@
result [r15|QWORD + 440] <|@
d <@d|@=== Debug Properties ===
displacement: 440
stamp: void*
stride: S1
=== Inputs ===
base: j699 
index: - 
=== Succesors ===
=== Usages ===
j727 v729 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j699 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j727 <|@
result v23|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:255) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabTop(HotSpotAllocationSnippets.java:482) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:59) [bci: 9]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.HashMap.newNode(HashMap.java:1909) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1224 
lastLocationAccess: - 
=== Succesors ===
next: j728 
=== Usages ===
j702 v1226 v1227 a710 v1228 v1229 v1230 v1231 
=== Predecessor ===
j699 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1224 lastLocationAccess: - #next: j728  <|@  <|@
f <@~|@floating>@ <|@
tid v1225 <|@
result [r15|QWORD + 456] <|@
d <@d|@=== Debug Properties ===
displacement: 456
stamp: void*
stride: S1
=== Inputs ===
base: j699 
index: - 
=== Succesors ===
=== Usages ===
j728 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j699 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j728 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabEnd
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:259) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabEnd(HotSpotAllocationSnippets.java:477) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:60) [bci: 17]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.HashMap.newNode(HashMap.java:1909) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1225 
lastLocationAccess: - 
=== Succesors ===
next: v706 
=== Usages ===
v703 
=== Predecessor ===
j727 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1225 lastLocationAccess: - #next: v706  <|@  <|@
f <@~|@floating>@ <|@
tid j573 <|@
result long[32|0x20] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:98) [bci: 86]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:83) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
rawvalue: 32
stableDimension: 0
stamp: i64 [32]
stampKind: i64
value: long[32|0x20]
=== Inputs ===
=== Succesors ===
=== Usages ===
j702 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j702 <|@
result v24|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:61) [bci: 25]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.HashMap.newNode(HashMap.java:1909) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: i64
=== Inputs ===
x: j727 
y: j573 
=== Succesors ===
=== Usages ===
v703 v729 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j727 y: j573  <|@  <|@
f <@~|@floating>@ <|@
tid v703 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:62) [bci: 63]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.HashMap.newNode(HashMap.java:1909) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@40aab068
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j728 
y: j702 
=== Succesors ===
=== Usages ===
v706 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j728 y: j702  <|@  <|@
f <@*|@fixed>@ <|@
tid v706 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:62) [bci: 69]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.HashMap.newNode(HashMap.java:1909) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
profileData: INJECTED designatedSuccessorProbability: 0.010000000000000009
stamp: void
=== Inputs ===
condition: v703 
=== Succesors ===
trueSuccessor: v705 
falseSuccessor: v704 
=== Usages ===
=== Predecessor ===
j728 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v703 #trueSuccessor: v705 #falseSuccessor: v704  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = LEA [v23|QWORD + 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v24|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4575895921484393205
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v705 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:67) [bci: 111]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.HashMap.newNode(HashMap.java:1909) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: void
=== Inputs ===
=== Succesors ===
next: a711 
=== Usages ===
=== Predecessor ===
v706 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a711  <|@  <|@
f <@~|@floating>@ <|@
tid v698 <|@
result v25|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap.newNode(HashMap.java:1909) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
rawvalue: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a711 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a711 <|@
result v26|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{new_instance_or_null(KlassPointer)Object, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[TlabTop, TlabEnd], transition=SAFEPOINT}
descriptorName: new_instance_or_null
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.newInstanceOrNull(ForeignCallDescriptor, KlassPointer) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.callNewInstanceStub(HotSpotAllocationSnippets.java:341) [bci: 18]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:68) [bci: 124]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.HashMap.newNode(HashMap.java:1909) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: a java.lang.Object
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: ?28 
arguments: v698 
=== Succesors ===
next: v1183 
=== Usages ===
v1183 a725 
=== Predecessor ===
v705 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?28 arguments: v698 #next: v1183  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1183 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-190065|0xfffffffffffd198f]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?28 
object: a711 
=== Succesors ===
next: v715 
=== Usages ===
=== Predecessor ===
a711 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?28 object: a711 #next: v715  <|@  <|@
f <@*|@fixed>@ <|@
tid v715 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:70) [bci: 129]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.HashMap.newNode(HashMap.java:1909) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v714 
=== Predecessor ===
v1183 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v25|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] - v12|DWORD - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7fba62ccef80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:29] <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] - v12|DWORD - - - - 
>@ <|@ instruction NULLCHECK [v26|QWORD[.]] state [bci:29] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v26|QWORD[.]] destination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4605510964398880109
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v704 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:63) [bci: 72]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.HashMap.newNode(HashMap.java:1909) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: void
=== Inputs ===
=== Succesors ===
next: v729 
=== Usages ===
=== Predecessor ===
v706 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v729  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v729 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: TlabTop
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:263) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.writeTlabTop(HotSpotAllocationSnippets.java:487) [bci: 2]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:63) [bci: 77]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.HashMap.newNode(HashMap.java:1909) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1224 
lastLocationAccess: - 
value: j702 
stateAfter: - 
=== Succesors ===
next: v720 
=== Usages ===
=== Predecessor ===
v704 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1224 lastLocationAccess: - value: j702 stateAfter: - #next: v720  <|@  <|@
f <@~|@floating>@ <|@
tid v1228 <|@
result [v23|QWORD + 288] <|@
d <@d|@=== Debug Properties ===
displacement: 288
stamp: void*
stride: S1
=== Inputs ===
base: j727 
index: - 
=== Succesors ===
=== Usages ===
v720 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j727 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v720 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:330) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:64) [bci: 84]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.HashMap.newNode(HashMap.java:1909) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: void
=== Inputs ===
address: v1228 
=== Succesors ===
next: v730 
=== Usages ===
=== Predecessor ===
v729 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v1228 #next: v730  <|@  <|@
f <@~|@floating>@ <|@
tid v1226 <|@
result [v23|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j727 
index: - 
=== Succesors ===
=== Usages ===
v730 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j727 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v730 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: MarkWord
location: MarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:464) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:432) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:271) [bci: 4]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.HashMap.newNode(HashMap.java:1909) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1226 
lastLocationAccess: - 
value: j707 
stateAfter: - 
=== Succesors ===
next: v733 
=== Usages ===
=== Predecessor ===
v720 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1226 lastLocationAccess: - value: j707 stateAfter: - #next: v733  <|@  <|@
f <@~|@floating>@ <|@
tid v1231 <|@
result [v23|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: j727 
index: - 
=== Succesors ===
=== Usages ===
v733 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j727 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v1126 <|@
result meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:432) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:271) [bci: 4]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.HashMap.newNode(HashMap.java:1909) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
rawvalue: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 140436756758528 shift: 0)
stampKind: Klass*(compressed base: 140436756758528 shift: 0)
value: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v733 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v733 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Hub:write
location: Hub:write
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:432) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:271) [bci: 4]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.HashMap.newNode(HashMap.java:1909) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1231 
lastLocationAccess: - 
value: v1126 
stateAfter: - 
=== Succesors ===
next: v734 
=== Usages ===
=== Predecessor ===
v730 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1231 lastLocationAccess: - value: v1126 stateAfter: - #next: v734  <|@  <|@
f <@~|@floating>@ <|@
tid v1227 <|@
result [v23|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: j727 
index: - 
=== Succesors ===
=== Usages ===
v734 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j727 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v734 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:174) [bci: 59]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:159) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:309) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:273) [bci: 27]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.HashMap.newNode(HashMap.java:1909) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1227 
lastLocationAccess: - 
value: i15 
stateAfter: - 
=== Succesors ===
next: v735 
=== Usages ===
=== Predecessor ===
v733 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1227 lastLocationAccess: - value: i15 stateAfter: - #next: v735  <|@  <|@
f <@~|@floating>@ <|@
tid v1229 <|@
result [v23|QWORD + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j727 
index: - 
=== Succesors ===
=== Usages ===
v735 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j727 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v735 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:233) [bci: 137]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:183) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:159) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:309) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:273) [bci: 27]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.HashMap.newNode(HashMap.java:1909) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1229 
lastLocationAccess: - 
value: j570 
stateAfter: - 
=== Succesors ===
next: v736 
=== Usages ===
=== Predecessor ===
v734 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1229 lastLocationAccess: - value: j570 stateAfter: - #next: v736  <|@  <|@
f <@~|@floating>@ <|@
tid v1230 <|@
result [v23|QWORD + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S1
=== Inputs ===
base: j727 
index: - 
=== Succesors ===
=== Usages ===
v736 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j727 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v736 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:233) [bci: 137]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:183) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:159) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:309) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:273) [bci: 27]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.HashMap.newNode(HashMap.java:1909) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1230 
lastLocationAccess: - 
value: j570 
stateAfter: - 
=== Succesors ===
next: a710 
=== Usages ===
=== Predecessor ===
v735 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1230 lastLocationAccess: - value: j570 stateAfter: - #next: a710  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a710 <|@
result v28|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:275) [bci: 37]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.HashMap.newNode(HashMap.java:1909) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: a! java.lang.Object
trackedPointer: true
=== Inputs ===
input: j727 
=== Succesors ===
next: v713 
=== Usages ===
a725 
=== Predecessor ===
v736 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: j727 #next: v713  <|@  <|@
f <@*|@fixed>@ <|@
tid v713 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:70) [bci: 129]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.HashMap.newNode(HashMap.java:1909) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v714 
=== Predecessor ===
a710 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v24|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v23|QWORD + 288] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV [v23|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v23|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV [v23|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v23|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v23|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD[.] = MOVE v23|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v28|QWORD[.]] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 4605585062831744793
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a725 <|@
result v29|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:70) [bci: 129]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.HashMap.newNode(HashMap.java:1909) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: a! java.lang.Object
valueDescription: a java.lang.Object
=== Inputs ===
merge: v714 
values: a710 a711 
=== Succesors ===
=== Usages ===
v1216 a517 v1214 v1215 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v714 values: a710 a711  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v714 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:70) [bci: 129]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.HashMap.newNode(HashMap.java:1909) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v713 v715 
=== Succesors ===
next: v516 
=== Usages ===
a725 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v713 v715 #next: v516  <|@  <|@
f <@~|@floating>@ <|@
tid v1216 <|@
result [v29|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a725 
index: - 
=== Succesors ===
=== Usages ===
v516 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a725 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v516 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.newNode(HashMap.java:1909) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1216 
lastLocationAccess: - 
value: a397 
stateAfter: - 
=== Succesors ===
next: v514 
=== Usages ===
=== Predecessor ===
v714 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1216 lastLocationAccess: - value: a397 stateAfter: - #next: v514  <|@  <|@
f <@~|@floating>@ <|@
tid v1215 <|@
result [v29|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a725 
index: - 
=== Succesors ===
=== Usages ===
v514 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a725 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a513 <|@
result v30|DWORD[_] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.newNode(HashMap.java:1909) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
op: Compress
stamp: n java.lang.Object
=== Inputs ===
value: a3 
=== Succesors ===
=== Usages ===
v514 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a3  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v514 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.newNode(HashMap.java:1909) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1215 
lastLocationAccess: - 
value: a513 
stateAfter: - 
=== Succesors ===
next: v511 
=== Usages ===
=== Predecessor ===
v516 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1215 lastLocationAccess: - value: a513 stateAfter: - #next: v511  <|@  <|@
f <@~|@floating>@ <|@
tid v1214 <|@
result [v29|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a725 
index: - 
=== Succesors ===
=== Usages ===
v511 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a725 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v511 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.newNode(HashMap.java:1909) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1214 
lastLocationAccess: - 
value: i2 
stateAfter: - 
=== Succesors ===
next: v518 
=== Usages ===
=== Predecessor ===
v514 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1214 lastLocationAccess: - value: i2 stateAfter: - #next: v518  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v518 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: CONSTRUCTOR_FREEZE
location: INIT_LOCATION
nodeSourcePosition: at java.util.HashMap.putVal(int, Object, Object, boolean, boolean) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
next: a517 
=== Usages ===
=== Predecessor ===
v511 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a517  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a517 <|@
result v29|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(int, Object, Object, boolean, boolean) [bci: -6] Placeholder
stamp: a!# java.util.HashMap$Node
=== Inputs ===
object: a725 
=== Succesors ===
next: v195 
=== Usages ===
a190 
=== Predecessor ===
v518 >@ <|@
instruction <@FixedValueAnchor|@jdk.graal.compiler.nodes.extended.FixedValueAnchorNode>@ object: a725 #next: v195  <|@  <|@
f <@*|@fixed>@ <|@
tid v195 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v189 
=== Predecessor ===
a517 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v29|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v29|QWORD[.] + 20], y: v22|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|DWORD[_] = COMPRESSPOINTER (input: v2|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v29|QWORD[.] + 16], y: v30|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v29|QWORD[.] + 12], y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v29|QWORD[.]] destination: B11 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4553315745025075769
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v199 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: v795 
=== Usages ===
=== Predecessor ===
v204 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v795  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v795 <|@
d <@d|@=== Debug Properties ===
locations: [MarkWord, Hub:write, TlabTop, TlabEnd, PrototypeMarkWord]
nodeSourcePosition: at java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: void
=== Inputs ===
=== Succesors ===
next: j749 
=== Usages ===
=== Predecessor ===
v199 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j749  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j749 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getThread(HotSpotAllocationSnippets.java:472) [bci: 4]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getTLABInfo(HotSpotAllocationSnippets.java:468) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:58) [bci: 1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j775 
=== Usages ===
v1232 v1233 
=== Predecessor ===
v795 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j775  <|@  <|@
f <@~|@floating>@ <|@
tid v1232 <|@
result [r15|QWORD + 440] <|@
d <@d|@=== Debug Properties ===
displacement: 440
stamp: void*
stride: S1
=== Inputs ===
base: j749 
index: - 
=== Succesors ===
=== Usages ===
j775 v777 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j749 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j775 <|@
result v31|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:255) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabTop(HotSpotAllocationSnippets.java:482) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:59) [bci: 9]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1232 
lastLocationAccess: - 
=== Succesors ===
next: j776 
=== Usages ===
j752 v1234 v1235 a759 v1236 v1237 v1238 v1239 v1240 
=== Predecessor ===
j749 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1232 lastLocationAccess: - #next: j776  <|@  <|@
f <@~|@floating>@ <|@
tid v1233 <|@
result [r15|QWORD + 456] <|@
d <@d|@=== Debug Properties ===
displacement: 456
stamp: void*
stride: S1
=== Inputs ===
base: j749 
index: - 
=== Succesors ===
=== Usages ===
j776 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j749 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j776 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabEnd
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:259) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabEnd(HotSpotAllocationSnippets.java:477) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:60) [bci: 17]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1233 
lastLocationAccess: - 
=== Succesors ===
next: v756 
=== Usages ===
v753 
=== Predecessor ===
j775 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1233 lastLocationAccess: - #next: v756  <|@  <|@
f <@~|@floating>@ <|@
tid j569 <|@
result long[40|0x28] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:94) [bci: 27]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:83) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
rawvalue: 40
stableDimension: 0
stamp: i64 [40]
stampKind: i64
value: long[40|0x28]
=== Inputs ===
=== Succesors ===
=== Usages ===
j752 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j752 <|@
result v32|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:61) [bci: 25]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: i64
=== Inputs ===
x: j775 
y: j569 
=== Succesors ===
=== Usages ===
v753 v777 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j775 y: j569  <|@  <|@
f <@~|@floating>@ <|@
tid v753 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:62) [bci: 63]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@40aab068
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j776 
y: j752 
=== Succesors ===
=== Usages ===
v756 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j776 y: j752  <|@  <|@
f <@*|@fixed>@ <|@
tid v756 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:62) [bci: 69]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
profileData: INJECTED designatedSuccessorProbability: 0.010000000000000009
stamp: void
=== Inputs ===
condition: v753 
=== Succesors ===
trueSuccessor: v755 
falseSuccessor: v754 
=== Usages ===
=== Predecessor ===
j776 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v753 #trueSuccessor: v755 #falseSuccessor: v754  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = LEA [v31|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v32|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4523100981620127249
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v755 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:67) [bci: 111]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: void
=== Inputs ===
=== Succesors ===
next: a760 
=== Usages ===
=== Predecessor ===
v756 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a760  <|@  <|@
f <@~|@floating>@ <|@
tid v748 <|@
result v33|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
rawvalue: meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a760 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a760 <|@
result v34|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{new_instance_or_null(KlassPointer)Object, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[TlabTop, TlabEnd], transition=SAFEPOINT}
descriptorName: new_instance_or_null
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.newInstanceOrNull(ForeignCallDescriptor, KlassPointer) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.callNewInstanceStub(HotSpotAllocationSnippets.java:341) [bci: 18]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:68) [bci: 124]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: a java.lang.Object
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: ?28 
arguments: v748 
=== Succesors ===
next: v1185 
=== Usages ===
v1185 a773 
=== Predecessor ===
v755 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?28 arguments: v748 #next: v1185  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1185 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-202609|0xfffffffffffce88f]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?28 
object: a760 
=== Succesors ===
next: v764 
=== Usages ===
=== Predecessor ===
a760 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?28 object: a760 #next: v764  <|@  <|@
f <@*|@fixed>@ <|@
tid v764 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:70) [bci: 129]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v763 
=== Predecessor ===
v1185 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v33|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] - v12|DWORD - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7fba62ccef80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:29] <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] - v12|DWORD - - - - 
>@ <|@ instruction NULLCHECK [v34|QWORD[.]] state [bci:29] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v34|QWORD[.]] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4553268943811267021
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v754 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:63) [bci: 72]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: void
=== Inputs ===
=== Succesors ===
next: v777 
=== Usages ===
=== Predecessor ===
v756 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v777  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v777 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: TlabTop
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:263) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.writeTlabTop(HotSpotAllocationSnippets.java:487) [bci: 2]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:63) [bci: 77]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1232 
lastLocationAccess: - 
value: j752 
stateAfter: - 
=== Succesors ===
next: v767 
=== Usages ===
=== Predecessor ===
v754 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1232 lastLocationAccess: - value: j752 stateAfter: - #next: v767  <|@  <|@
f <@~|@floating>@ <|@
tid v1236 <|@
result [v31|QWORD + 296] <|@
d <@d|@=== Debug Properties ===
displacement: 296
stamp: void*
stride: S1
=== Inputs ===
base: j775 
index: - 
=== Succesors ===
=== Usages ===
v767 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j775 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v767 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:330) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:64) [bci: 84]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: void
=== Inputs ===
address: v1236 
=== Succesors ===
next: v778 
=== Usages ===
=== Predecessor ===
v777 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v1236 #next: v778  <|@  <|@
f <@~|@floating>@ <|@
tid v1234 <|@
result [v31|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j775 
index: - 
=== Succesors ===
=== Usages ===
v778 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j775 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v778 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: MarkWord
location: MarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:464) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:432) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:271) [bci: 4]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1234 
lastLocationAccess: - 
value: j707 
stateAfter: - 
=== Succesors ===
next: v781 
=== Usages ===
=== Predecessor ===
v767 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1234 lastLocationAccess: - value: j707 stateAfter: - #next: v781  <|@  <|@
f <@~|@floating>@ <|@
tid v1240 <|@
result [v31|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: j775 
index: - 
=== Succesors ===
=== Usages ===
v781 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j775 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v1127 <|@
result meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:432) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:271) [bci: 4]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
rawvalue: meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 140436756758528 shift: 0)
stampKind: Klass*(compressed base: 140436756758528 shift: 0)
value: meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v781 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v781 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Hub:write
location: Hub:write
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:432) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:271) [bci: 4]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1240 
lastLocationAccess: - 
value: v1127 
stateAfter: - 
=== Succesors ===
next: v782 
=== Usages ===
=== Predecessor ===
v778 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1240 lastLocationAccess: - value: v1127 stateAfter: - #next: v782  <|@  <|@
f <@~|@floating>@ <|@
tid v1235 <|@
result [v31|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: j775 
index: - 
=== Succesors ===
=== Usages ===
v782 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j775 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v782 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:174) [bci: 59]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:159) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:309) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:273) [bci: 27]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1235 
lastLocationAccess: - 
value: i15 
stateAfter: - 
=== Succesors ===
next: v783 
=== Usages ===
=== Predecessor ===
v781 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1235 lastLocationAccess: - value: i15 stateAfter: - #next: v783  <|@  <|@
f <@~|@floating>@ <|@
tid v1237 <|@
result [v31|QWORD + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j775 
index: - 
=== Succesors ===
=== Usages ===
v783 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j775 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v783 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:233) [bci: 137]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:183) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:159) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:309) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:273) [bci: 27]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1237 
lastLocationAccess: - 
value: j570 
stateAfter: - 
=== Succesors ===
next: v784 
=== Usages ===
=== Predecessor ===
v782 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1237 lastLocationAccess: - value: j570 stateAfter: - #next: v784  <|@  <|@
f <@~|@floating>@ <|@
tid v1238 <|@
result [v31|QWORD + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S1
=== Inputs ===
base: j775 
index: - 
=== Succesors ===
=== Usages ===
v784 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j775 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v784 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:233) [bci: 137]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:183) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:159) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:309) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:273) [bci: 27]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1238 
lastLocationAccess: - 
value: j570 
stateAfter: - 
=== Succesors ===
next: v785 
=== Usages ===
=== Predecessor ===
v783 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1238 lastLocationAccess: - value: j570 stateAfter: - #next: v785  <|@  <|@
f <@~|@floating>@ <|@
tid v1239 <|@
result [v31|QWORD + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
stamp: void*
stride: S1
=== Inputs ===
base: j775 
index: - 
=== Succesors ===
=== Usages ===
v785 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j775 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v785 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:233) [bci: 137]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:183) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:159) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:309) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:273) [bci: 27]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1239 
lastLocationAccess: - 
value: j570 
stateAfter: - 
=== Succesors ===
next: a759 
=== Usages ===
=== Predecessor ===
v784 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1239 lastLocationAccess: - value: j570 stateAfter: - #next: a759  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a759 <|@
result v36|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:275) [bci: 37]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: a! java.lang.Object
trackedPointer: true
=== Inputs ===
input: j775 
=== Succesors ===
next: v762 
=== Usages ===
a773 
=== Predecessor ===
v785 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: j775 #next: v762  <|@  <|@
f <@*|@fixed>@ <|@
tid v762 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:70) [bci: 129]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v763 
=== Predecessor ===
a759 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v32|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v31|QWORD + 296] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV [v31|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v31|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV [v31|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v31|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v31|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v31|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[.] = MOVE v31|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v36|QWORD[.]] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4553315745025075769
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a773 <|@
result v37|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:70) [bci: 129]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: a! java.lang.Object
valueDescription: a java.lang.Object
=== Inputs ===
merge: v763 
values: a759 a760 
=== Succesors ===
=== Usages ===
a520 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v763 values: a759 a760  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v763 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:70) [bci: 129]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v762 v764 
=== Succesors ===
next: v521 
=== Usages ===
a773 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v762 v764 #next: v521  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v521 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: CONSTRUCTOR_FREEZE
location: INIT_LOCATION
nodeSourcePosition: at java.util.HashMap.putVal(int, Object, Object, boolean, boolean) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
next: a520 
=== Usages ===
=== Predecessor ===
v763 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a520  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a520 <|@
result v37|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(int, Object, Object, boolean, boolean) [bci: -6] Placeholder
stamp: a!# java.util.LinkedHashMap$Entry
=== Inputs ===
object: a773 
=== Succesors ===
next: v222 
=== Usages ===
v305 ?271 v306 a190 
=== Predecessor ===
v521 >@ <|@
instruction <@FixedValueAnchor|@jdk.graal.compiler.nodes.extended.FixedValueAnchorNode>@ object: a773 #next: v222  <|@  <|@
tid v305 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.LinkedHashMap$Entry.<init>(LinkedHashMap.java:208) [bci: 6]
at java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 9]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
referencedType: [null]
returnStamp: void
signature: [HotSpotType<Ljava/util/HashMap$Node;, resolved>, HotSpotResolvedPrimitiveType<int>, UnresolvedJavaType<Ljava/lang/Object;>, UnresolvedJavaType<Ljava/lang/Object;>, UnresolvedJavaType<Ljava/util/HashMap$Node;>]
stamp: void
targetMethod: HotSpotMethod<HashMap$Node.<init>(int, Object, Object, HashMap$Node)>
=== Inputs ===
arguments: a520 i2 a3 a4 a9 
=== Succesors ===
=== Usages ===
v222 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a520 i2 a3 a4 a9  <|@  <|@
tid ?229 <|@
d <@d|@=== Debug Properties ===
bci: 56
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
localsSize: 13
locksSize: 0
sourceFile: HashMap.java
sourceLine: 637
stackSize: 2
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a26 i32 a1 - - - - i6 
=== Succesors ===
=== Usages ===
?223 ?647 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a26 i32 a1 - - - - i6  <|@  <|@
tid a268 <|@
d <@d|@=== Debug Properties ===
fields: [HotSpotResolvedJavaFieldImpl<java.util.HashMap$Node.hash int:12>, HotSpotResolvedJavaFieldImpl<java.util.HashMap$Node.key Object:16>, HotSpotResolvedJavaFieldImpl<java.util.HashMap$Node.value Object:20>, HotSpotResolvedJavaFieldImpl<java.util.HashMap$Node.next HashMap$Node:24>, HotSpotResolvedJavaFieldImpl<java.util.LinkedHashMap$Entry.before LinkedHashMap$Entry:28>, HotSpotResolvedJavaFieldImpl<java.util.LinkedHashMap$Entry.after LinkedHashMap$Entry:32>]
hasIdentity: true
nodeSourcePosition: at java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
objectId: 1
stamp: a!# java.util.LinkedHashMap$Entry
type: HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?647 ?271 ?223 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@jdk.graal.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
tid ?223 <|@
d <@d|@=== Debug Properties ===
bci: 9
bytecode: invokespecial
code: ResolvedJavaMethodBytecode<LinkedHashMap.newNode(int, Object, Object, HashMap$Node)>
localsSize: 6
locksSize: 0
nodeSourcePosition: at java.util.LinkedHashMap$Entry.<init>(LinkedHashMap.java:208) [bci: 6]
at java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 9]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
sourceFile: LinkedHashMap.java
sourceLine: 281
stackSize: 1
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?229 
values: a268 a1 i2 a3 a4 a9 
=== Succesors ===
=== Usages ===
?646 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?229 values: a268 a1 i2 a3 a4 a9  <|@  <|@
tid ?271 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a268 
materializedValue: a520 
=== Succesors ===
=== Usages ===
?646 ?647 
=== Predecessor ===
- >@ <|@
instruction <@MaterializedObjectState|@jdk.graal.compiler.nodes.virtual.MaterializedObjectState>@ object: a268 materializedValue: a520  <|@  <|@
tid ?646 <|@
d <@d|@=== Debug Properties ===
bci: 6
bytecode: invokespecial
code: ResolvedJavaMethodBytecode<LinkedHashMap$Entry.<init>(int, Object, Object, HashMap$Node)>
localsSize: 5
locksSize: 0
sourceFile: LinkedHashMap.java
sourceLine: 208
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?223 
virtualObjectMappings: ?271 
=== Succesors ===
=== Usages ===
v222 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?223 virtualObjectMappings: ?271  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v222 <|@
d <@d|@=== Debug Properties ===
bci: 6
identity: ANY_LOCATION
inlineControl: Normal
nodeSourcePosition: at java.util.LinkedHashMap$Entry.<init>(LinkedHashMap.java:208) [bci: 6]
at java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 9]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
polymorphic: false
stamp: void
targetMethod: Direct#HashMap$Node.<init>
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v305 
stateDuring: ?646 
=== Succesors ===
next: v226 
=== Usages ===
=== Predecessor ===
a520 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v305 stateDuring: ?646 #next: v226  <|@  <|@
tid v306 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.LinkedHashMap.newNode(LinkedHashMap.java:283) [bci: 17]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
referencedType: [null]
returnStamp: void
signature: [HotSpotType<Ljava/util/LinkedHashMap;, resolved>, UnresolvedJavaType<Ljava/util/LinkedHashMap$Entry;>]
stamp: void
targetMethod: HotSpotMethod<LinkedHashMap.linkNodeAtEnd(LinkedHashMap$Entry)>
=== Inputs ===
arguments: a1 a520 
=== Succesors ===
=== Usages ===
v226 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a520  <|@  <|@
tid ?647 <|@
d <@d|@=== Debug Properties ===
bci: 17
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<LinkedHashMap.newNode(int, Object, Object, HashMap$Node)>
localsSize: 6
locksSize: 0
sourceFile: LinkedHashMap.java
sourceLine: 283
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?229 
values: - - - - - a268 
virtualObjectMappings: ?271 
=== Succesors ===
=== Usages ===
v226 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?229 values: - - - - - a268 virtualObjectMappings: ?271  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v226 <|@
d <@d|@=== Debug Properties ===
bci: 17
identity: ANY_LOCATION
inlineControl: Normal
nodeSourcePosition: at java.util.LinkedHashMap.newNode(LinkedHashMap.java:283) [bci: 17]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
polymorphic: false
stamp: void
targetMethod: Direct#LinkedHashMap.linkNodeAtEnd
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v306 
stateDuring: ?647 
=== Succesors ===
next: v200 
=== Usages ===
=== Predecessor ===
v222 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v306 stateDuring: ?647 #next: v200  <|@  <|@
f <@*|@fixed>@ <|@
tid v200 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v189 
=== Predecessor ===
v226 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v37|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v37|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.LinkedHashMap$Entry.<init>(LinkedHashMap.java:208) [bci: 6]
locals: - - - - - 
java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 9]
stack: v37|QWORD[.] 
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] Object[null] - 
java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stack: v11|QWORD[.] v16|DWORD 
locals: v0|QWORD[.] - - - - v5|DWORD - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.]] [] callTarget: HotSpotMethod<HashMap$Node.<init>(int, Object, Object, HashMap$Node)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:6, 9, 56] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v37|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.LinkedHashMap.newNode(LinkedHashMap.java:283) [bci: 17]
locals: - - - - - v37|QWORD[.] 
java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stack: v11|QWORD[.] v16|DWORD 
locals: v0|QWORD[.] - - - - v5|DWORD - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<LinkedHashMap.linkNodeAtEnd(LinkedHashMap$Entry)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:17, 56] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v37|QWORD[.]] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B11" "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4605587348047262798
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a190 <|@
result v38|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a! java.util.HashMap$Node
valueDescription: a java.lang.Object
=== Inputs ===
merge: v189 
values: a517 a520 
=== Succesors ===
=== Usages ===
v1242 a322 ?643 a850 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v189 values: a517 a520  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v189 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v195 v200 
=== Succesors ===
next: v580 
=== Usages ===
a190 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v195 v200 #next: v580  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v580 <|@
d <@d|@=== Debug Properties ===
locations: [SecondarySuperCache]
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1145 
=== Usages ===
=== Predecessor ===
v189 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: v1145  <|@  <|@
f <@~|@floating>@ <|@
tid v799 <|@
result v39|QWORD <|@
d <@d|@=== Debug Properties ===
encoding: base: 140436756758528 shift: 0
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v1142 
=== Succesors ===
=== Usages ===
v1191 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v1142  <|@  <|@
f <@~|@floating>@ <|@
tid v1191 <|@
result [v39|QWORD + 208] <|@
d <@d|@=== Debug Properties ===
displacement: 208
stamp: void*
stride: S1
=== Inputs ===
base: v799 
index: - 
=== Succesors ===
=== Usages ===
v1145 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v799 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1145 <|@
result v41|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ObjArrayKlass::_element_klass:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: Klass*!
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1191 
lastLocationAccess: - 
=== Succesors ===
next: i574 
=== Usages ===
v578 v562 v1217 v537 v544 
=== Predecessor ===
v580 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1191 lastLocationAccess: - #next: i574  <|@  <|@
f <@~|@floating>@ <|@
tid v1217 <|@
result [v41|QWORD + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: v1145 
index: - 
=== Succesors ===
=== Usages ===
i574 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v1145 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i574 <|@
result v42|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: Klass::_super_check_offset:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:64) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1217 
lastLocationAccess: - 
=== Succesors ===
next: v1146 
=== Usages ===
v534 j535 
=== Predecessor ===
v1145 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1217 lastLocationAccess: - #next: v1146  <|@  <|@
f <@~|@floating>@ <|@
tid v1242 <|@
result [v38|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: a190 
index: - 
=== Succesors ===
=== Usages ===
v1146 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a190 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1146 <|@
result v43|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140436756758528 shift: 0)
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:209) [bci: 46] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: Klass*!(compressed base: 140436756758528 shift: 0)
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1242 
lastLocationAccess: - 
=== Succesors ===
next: v1147 
=== Usages ===
v802 
=== Predecessor ===
i574 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1242 lastLocationAccess: - #next: v1147  <|@  <|@
f <@~|@floating>@ <|@
tid v802 <|@
result v44|QWORD <|@
d <@d|@=== Debug Properties ===
encoding: base: 140436756758528 shift: 0
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:209) [bci: 46] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v1146 
=== Succesors ===
=== Usages ===
v1218 v544 v1219 v1222 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v1146  <|@  <|@
f <@~|@floating>@ <|@
tid j535 <|@
result v46|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:68) [bci: 36]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i574 
=== Succesors ===
=== Usages ===
v1218 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i574  <|@  <|@
f <@~|@floating>@ <|@
tid v1218 <|@
result [v44|QWORD + v46|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: v802 
index: j535 
=== Succesors ===
=== Usages ===
v1147 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v802 index: j535  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1147 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: PrimarySupers:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:68) [bci: 36]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: Klass*
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1218 
lastLocationAccess: - 
=== Succesors ===
next: v540 
=== Usages ===
v537 
=== Predecessor ===
v1146 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1218 lastLocationAccess: - #next: v540  <|@  <|@
f <@~|@floating>@ <|@
tid v537 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:68) [bci: 40]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1145 
y: v1147 
=== Succesors ===
=== Usages ===
v540 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: v1145 y: v1147  <|@  <|@
f <@*|@fixed>@ <|@
tid v540 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:68) [bci: 43]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
profileData: UNKNOWN designatedSuccessorProbability: 0.5
stamp: void
=== Inputs ===
condition: v537 
=== Succesors ===
trueSuccessor: v539 
falseSuccessor: v538 
=== Usages ===
=== Predecessor ===
v1147 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v537 #trueSuccessor: v539 #falseSuccessor: v538  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v38|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = UNCOMPRESSPOINTER (input: v14|DWORD, ~baseRegister: v40|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = MOV [v39|QWORD + 208] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = MOV [v41|QWORD + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = MOV [v38|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = UNCOMPRESSPOINTER (input: v43|DWORD, ~baseRegister: v45|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = MOVSXD v42|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v41|QWORD, y: [v44|QWORD + v46|QWORD * 1]) trueDestinationProbability: 0.5 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B27" 
    xhandlers
    flags 
    probability 4601083748419892302
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v539 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:69) [bci: 46]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v584 
=== Usages ===
=== Predecessor ===
v540 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v584  <|@  <|@
f <@*|@fixed>@ <|@
tid v584 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v638 
=== Predecessor ===
v539 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B17 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B45" 
    xhandlers
    flags 
    probability 4601083748419892302
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v538 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:78) [bci: 70]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v543 
=== Usages ===
=== Predecessor ===
v540 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v543  <|@  <|@
f <@~|@floating>@ <|@
tid i533 <|@
result int[32|0x20] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.secondarySuperCacheOffset(GraalHotSpotVMConfig) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:65) [bci: 18]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
rawvalue: 32
stableDimension: 0
stamp: i32 [32]
stampKind: i32
value: int[32|0x20]
=== Inputs ===
=== Succesors ===
=== Usages ===
v534 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v534 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:65) [bci: 21]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i574 
y: i533 
=== Succesors ===
=== Usages ===
v543 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i574 y: i533  <|@  <|@
f <@*|@fixed>@ <|@
tid v543 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:78) [bci: 72]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v534 
=== Succesors ===
trueSuccessor: v542 
falseSuccessor: v541 
=== Usages ===
=== Predecessor ===
v538 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v534 #trueSuccessor: v542 #falseSuccessor: v541  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v42|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B45 y: 32 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4601083748419892302
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v542 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:83) [bci: 84]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v547 
=== Usages ===
=== Predecessor ===
v543 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v547  <|@  <|@
f <@~|@floating>@ <|@
tid v544 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:88) [bci: 2]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:83) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v802 
y: v1145 
=== Succesors ===
=== Usages ===
v547 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: v802 y: v1145  <|@  <|@
f <@*|@fixed>@ <|@
tid v547 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:88) [bci: 5]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:83) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
profileData: UNKNOWN designatedSuccessorProbability: 0.5
stamp: void
=== Inputs ===
condition: v544 
=== Succesors ===
trueSuccessor: v546 
falseSuccessor: v545 
=== Usages ===
=== Predecessor ===
v542 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v544 #trueSuccessor: v546 #falseSuccessor: v545  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v41|QWORD, y: v44|QWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B27" 
    xhandlers
    flags 
    probability 4596580148792521806
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v546 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:89) [bci: 8]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:83) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v591 
=== Usages ===
=== Predecessor ===
v547 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v591  <|@  <|@
f <@*|@fixed>@ <|@
tid v591 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v638 
=== Predecessor ===
v546 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B20 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4596580148792521806
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v545 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:94) [bci: 17]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:83) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: j575 
=== Usages ===
=== Predecessor ===
v547 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j575  <|@  <|@
f <@~|@floating>@ <|@
tid v1219 <|@
result [v44|QWORD + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: v802 
index: - 
=== Succesors ===
=== Usages ===
j575 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v802 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j575 <|@
result v47|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: SecondarySupers:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:94) [bci: 27]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:83) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1219 
lastLocationAccess: - 
=== Succesors ===
next: i576 
=== Usages ===
v1220 v1221 
=== Predecessor ===
v545 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1219 lastLocationAccess: - #next: i576  <|@  <|@
f <@~|@floating>@ <|@
tid v1220 <|@
result [v47|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j575 
index: - 
=== Succesors ===
=== Usages ===
i576 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j575 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i576 <|@
result v48|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: MetaspaceArrayLength:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:95) [bci: 41]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:83) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1220 
lastLocationAccess: - 
=== Succesors ===
next: v550 
=== Usages ===
v553 
=== Predecessor ===
j575 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1220 lastLocationAccess: - #next: v550  <|@  <|@
f <@~|@floating>@ <|@
tid i571 <|@
result int[3|0x3] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.loadSecondarySupersElement(TypeCheckSnippetUtils.java:178) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:97) [bci: 63]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:83) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
rawvalue: 3
stableDimension: 0
stamp: i32 [3]
stampKind: i32
value: int[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
i572 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i557 <|@
result int[8|0x8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.metaspaceArrayBaseOffset(GraalHotSpotVMConfig) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.loadSecondarySupersElement(TypeCheckSnippetUtils.java:178) [bci: 4]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:97) [bci: 63]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:83) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
rawvalue: 8
stableDimension: 0
stamp: i32 [8]
stampKind: i32
value: int[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i558 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v550 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:96) [bci: 49]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:83) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v551 
=== Predecessor ===
i576 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = MOV [v44|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = MOV [v47|QWORD] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B24" 
    successors "B23" "B26" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4602807799859017905
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i552 <|@
result v49|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:96) [bci: 49]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:83) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v551 
values: i15 i566 
=== Succesors ===
=== Usages ===
v553 i566 i572 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v551 values: i15 i566  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v551 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 42
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:96) [bci: 49]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:83) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
osrLoop: false
peelings: 0
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v550 
=== Succesors ===
next: v556 
=== Usages ===
i552 v554 v563 v567 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v550 #next: v556  <|@  <|@
f <@~|@floating>@ <|@
tid v553 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:96) [bci: 53]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:83) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@4dc6bd49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i552 
y: i576 
=== Succesors ===
=== Usages ===
v556 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i552 y: i576  <|@  <|@
f <@*|@fixed>@ <|@
tid v556 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:96) [bci: 53]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:83) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v553 
=== Succesors ===
trueSuccessor: v555 
falseSuccessor: v554 
=== Usages ===
=== Predecessor ===
v551 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v553 #trueSuccessor: v555 #falseSuccessor: v554  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v49|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v48|DWORD, y: v49|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602807799859017905
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v555 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:97) [bci: 56]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:83) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: j577 
=== Usages ===
=== Predecessor ===
v556 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j577  <|@  <|@
f <@~|@floating>@ <|@
tid i572 <|@
result v50|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.loadSecondarySupersElement(TypeCheckSnippetUtils.java:178) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:97) [bci: 63]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:83) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: i32 [-2147483648 - 2147483640] bits:x...x000
=== Inputs ===
x: i552 
y: i571 
=== Succesors ===
=== Usages ===
i558 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i552 y: i571  <|@  <|@
f <@~|@floating>@ <|@
tid i558 <|@
result v51|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.loadSecondarySupersElement(TypeCheckSnippetUtils.java:178) [bci: 12]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:97) [bci: 63]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:83) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: i32 [-2147483648 - 2147483640] bits:x...x000
=== Inputs ===
x: i572 
y: i557 
=== Succesors ===
=== Usages ===
j559 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i572 y: i557  <|@  <|@
f <@~|@floating>@ <|@
tid j559 <|@
result v52|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.loadSecondarySupersElement(TypeCheckSnippetUtils.java:178) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:97) [bci: 63]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:83) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] bits:x...x000
=== Inputs ===
value: i558 
=== Succesors ===
=== Usages ===
v1221 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i558  <|@  <|@
f <@~|@floating>@ <|@
tid v1221 <|@
result [v47|QWORD + v52|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j575 
index: j559 
=== Succesors ===
=== Usages ===
j577 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j575 index: j559  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j577 <|@
result v53|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: SecondarySupersElement:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.loadSecondarySupersElement(TypeCheckSnippetUtils.java:178) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:97) [bci: 63]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:83) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1221 
lastLocationAccess: - 
=== Succesors ===
next: v565 
=== Usages ===
v561 
=== Predecessor ===
v555 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1221 lastLocationAccess: - #next: v565  <|@  <|@
f <@~|@floating>@ <|@
tid v561 <|@
result v53|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.loadSecondarySupersElement(TypeCheckSnippetUtils.java:178) [bci: 22]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:97) [bci: 63]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:83) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: Klass*
=== Inputs ===
input: j577 
=== Succesors ===
=== Usages ===
v562 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@jdk.graal.compiler.hotspot.word.PointerCastNode>@ input: j577  <|@  <|@
f <@~|@floating>@ <|@
tid v562 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:97) [bci: 66]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:83) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v561 
y: v1145 
=== Succesors ===
=== Usages ===
v565 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: v561 y: v1145  <|@  <|@
f <@*|@fixed>@ <|@
tid v565 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:97) [bci: 72]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:83) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
profileData: INJECTED designatedSuccessorProbability: 0.4
stamp: void
=== Inputs ===
condition: v562 
=== Succesors ===
trueSuccessor: v563 
falseSuccessor: v564 
=== Usages ===
=== Predecessor ===
j577 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v562 #trueSuccessor: v563 #falseSuccessor: v564  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = SHL v49|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = LEA [v50|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = MOVSXD v51|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v53|QWORD = MOV [v47|QWORD + v52|QWORD * 1] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v41|QWORD, y: v53|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B23 -> B25 falseDestination: B23 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B22" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4599230716294395707
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v564 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:96) [bci: 98]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:83) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v567 
=== Usages ===
=== Predecessor ===
v565 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v567  <|@  <|@
f <@~|@floating>@ <|@
tid i566 <|@
result v54|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:96) [bci: 98]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:83) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: i32
=== Inputs ===
x: i552 
y: i29 
=== Succesors ===
=== Usages ===
i552 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i552 y: i29  <|@  <|@
f <@*|@fixed>@ <|@
tid v567 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:96) [bci: 49]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:83) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
loopBegin: v551 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v564 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v551  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v54|DWORD = INC v49|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v54|DWORD] destination: B24 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B27" 
    xhandlers
    flags 
    probability 4596580148792521807
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v563 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:98) [bci: 75]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:83) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v551 
=== Succesors ===
next: v578 
=== Usages ===
=== Predecessor ===
v565 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v551 #next: v578  <|@  <|@
f <@~|@floating>@ <|@
tid v1222 <|@
result [v44|QWORD + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
stamp: void*
stride: S1
=== Inputs ===
base: v802 
index: - 
=== Succesors ===
=== Usages ===
v578 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v802 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v578 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: SecondarySuperCache
location: SecondarySuperCache
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:98) [bci: 86]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:83) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1222 
lastLocationAccess: - 
value: v1145 
stateAfter: - 
=== Succesors ===
next: v590 
=== Usages ===
=== Predecessor ===
v563 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1222 lastLocationAccess: - value: v1145 stateAfter: - #next: v590  <|@  <|@
f <@*|@fixed>@ <|@
tid v590 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:83) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v638 
=== Predecessor ===
v578 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v44|QWORD + 32], y: v41|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v554 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:103) [bci: 104]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:83) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v551 
=== Succesors ===
next: v592 
=== Usages ===
=== Predecessor ===
v556 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v551 #next: v592  <|@  <|@
f <@*|@fixed>@ <|@
tid v592 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:83) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v641 
=== Predecessor ===
v554 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B26 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B17" "B25" "B20" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4605587348047262798
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v638 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v584 v590 v591 
=== Succesors ===
next: v847 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v584 v590 v591 #next: v847  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v847 <|@
d <@d|@=== Debug Properties ===
locations: [GC-SATB-Queue-Log, GC-SATB-Marking-Active, GC-SATB-Queue-Index, GC-SATB-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: j805 
=== Usages ===
=== Predecessor ===
v638 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j805  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j805 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:127) [bci: 10]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j806 
=== Usages ===
v1243 v1245 v1246 
=== Predecessor ===
v847 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j806  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j806 <|@
result [v11|QWORD[.] + v16|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:129) [bci: 21]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1190 
=== Succesors ===
next: i833 
=== Usages ===
v1244 
=== Predecessor ===
j805 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: v1190 #next: i833  <|@  <|@
f <@~|@floating>@ <|@
tid v1243 <|@
result [r15|QWORD + 64] <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: j805 
index: - 
=== Succesors ===
=== Usages ===
i833 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j805 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i833 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Marking-Active
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:130) [bci: 35]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1243 
lastLocationAccess: - 
=== Succesors ===
next: v810 
=== Usages ===
v841 
=== Predecessor ===
j806 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1243 lastLocationAccess: - #next: v810  <|@  <|@
f <@~|@floating>@ <|@
tid v841 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i833 
y: i840 
=== Succesors ===
=== Usages ===
v810 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i833 y: i840  <|@  <|@
f <@*|@fixed>@ <|@
tid v810 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 217]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v841 
=== Succesors ===
trueSuccessor: v809 
falseSuccessor: v808 
=== Usages ===
=== Predecessor ===
i833 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v841 #trueSuccessor: v809 #falseSuccessor: v808  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" 
    xhandlers
    flags 
    probability 4604846135197064160
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v809 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v813 
=== Usages ===
=== Predecessor ===
v810 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v813  <|@  <|@
f <@*|@fixed>@ <|@
tid v813 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v814 
=== Predecessor ===
v809 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B28 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4590594123464754032
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v808 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:150) [bci: 220]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: a834 
=== Usages ===
=== Predecessor ===
v810 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a834  <|@  <|@
f <@~|@floating>@ <|@
tid v1244 <|@
result [v55|QWORD[.+]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j806 
index: - 
=== Succesors ===
=== Usages ===
a834 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j806 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a834 <|@
result v56|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1244 
lastLocationAccess: - 
=== Succesors ===
next: v817 
=== Usages ===
a835 v842 
=== Predecessor ===
v808 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1244 lastLocationAccess: - #next: v817  <|@  <|@
f <@~|@floating>@ <|@
tid v842 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 296]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a834 
=== Succesors ===
=== Usages ===
v817 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a834  <|@  <|@
f <@*|@fixed>@ <|@
tid v817 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 307]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v842 
=== Succesors ===
trueSuccessor: v816 
falseSuccessor: v812 
=== Usages ===
=== Predecessor ===
a834 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v842 #trueSuccessor: v816 #falseSuccessor: v812  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[.+] = LEA [v11|QWORD[.] + v16|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v56|DWORD[_] = MOV [v55|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v56|DWORD[_], y: v56|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    probability 4575897384022324722
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v816 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v815 
=== Usages ===
=== Predecessor ===
v817 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v815  <|@  <|@
f <@*|@fixed>@ <|@
tid v815 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v814 
=== Predecessor ===
v816 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B30 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4590001153184595122
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v812 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:163) [bci: 310]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: j836 
=== Usages ===
=== Predecessor ===
v817 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j836  <|@  <|@
f <@~|@floating>@ <|@
tid v1245 <|@
result [r15|QWORD + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: j805 
index: - 
=== Succesors ===
=== Usages ===
j836 v839 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j805 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j836 <|@
result v57|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:166) [bci: 327]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1245 
lastLocationAccess: - 
=== Succesors ===
next: v822 
=== Usages ===
v819 j832 v1247 
=== Predecessor ===
v812 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1245 lastLocationAccess: - #next: v822  <|@  <|@
f <@~|@floating>@ <|@
tid v819 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 341]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j836 
y: j570 
=== Succesors ===
=== Usages ===
v822 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j836 y: j570  <|@  <|@
f <@~|@floating>@ <|@
tid a835 <|@
result v58|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a834 
=== Succesors ===
=== Usages ===
j824 v827 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a834  <|@  <|@
f <@*|@fixed>@ <|@
tid v822 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 347]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v819 
=== Succesors ===
trueSuccessor: v821 
falseSuccessor: v820 
=== Usages ===
=== Predecessor ===
j836 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v819 #trueSuccessor: v821 #falseSuccessor: v820  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[.] = UNCOMPRESSPOINTER (input: v56|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v57|QWORD, y: v57|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4575188794187971253
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v821 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 410]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v827 
=== Usages ===
=== Predecessor ===
v822 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v827  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v827 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_pre(Object)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-SATB-Queue-Index, GC-SATB-Queue-Buffer, GC-SATB-Queue-Log], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_pre
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(ForeignCallDescriptor, Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(G1WriteBarrierSnippets.java:409) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 413]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: a835 
=== Succesors ===
next: v828 
=== Usages ===
=== Predecessor ===
v821 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: a835 #next: v828  <|@  <|@
f <@*|@fixed>@ <|@
tid v828 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v814 
=== Predecessor ===
v827 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v58|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4589467479932452103
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v820 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 350]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: j837 
=== Usages ===
=== Predecessor ===
v822 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j837  <|@  <|@
f <@~|@floating>@ <|@
tid v1246 <|@
result [r15|QWORD + 56] <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: j805 
index: - 
=== Succesors ===
=== Usages ===
j837 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j805 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j837 <|@
result v59|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 359]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1246 
lastLocationAccess: - 
=== Succesors ===
next: j824 
=== Usages ===
v1247 
=== Predecessor ===
v820 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1246 lastLocationAccess: - #next: j824  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j824 <|@
result v58|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 384]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a835 
=== Succesors ===
next: v838 
=== Usages ===
v838 
=== Predecessor ===
j837 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a835 #next: v838  <|@  <|@
f <@~|@floating>@ <|@
tid v1247 <|@
result [v59|QWORD + v57|QWORD * 1 - 8] <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j837 
index: j836 
=== Succesors ===
=== Usages ===
v838 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j837 index: j836  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v838 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Log
location: GC-SATB-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 390]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1247 
lastLocationAccess: - 
value: j824 
stateAfter: - 
=== Succesors ===
next: v839 
=== Usages ===
=== Predecessor ===
j824 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1247 lastLocationAccess: - value: j824 stateAfter: - #next: v839  <|@  <|@
f <@~|@floating>@ <|@
tid j832 <|@
result v60|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: i64
=== Inputs ===
x: j836 
y: j831 
=== Succesors ===
=== Usages ===
v839 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j836 y: j831  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v839 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Index
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:173) [bci: 404]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1245 
lastLocationAccess: - 
value: j832 
stateAfter: - 
=== Succesors ===
next: v826 
=== Usages ===
=== Predecessor ===
v838 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1245 lastLocationAccess: - value: j832 stateAfter: - #next: v826  <|@  <|@
f <@*|@fixed>@ <|@
tid v826 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v814 
=== Predecessor ===
v839 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v59|QWORD + v57|QWORD * 1 - 8], y: v58|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = LEA [v57|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v60|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" "B33" "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4605587348047262798
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v814 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v813 v815 v826 v828 
=== Succesors ===
next: v323 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v813 v815 v826 v828 #next: v323  <|@  <|@
f <@~|@floating>@ <|@
tid a322 <|@
result v61|DWORD[_] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
op: Compress
stamp: n! java.util.HashMap$Node
=== Inputs ===
value: a190 
=== Succesors ===
=== Usages ===
v323 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a190  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v323 <|@
d <@d|@=== Debug Properties ===
barrierType: ARRAY
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: Object
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v480 
address: v1190 
lastLocationAccess: - 
value: a322 
stateAfter: - 
=== Succesors ===
next: v909 
=== Usages ===
=== Predecessor ===
v814 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v480 address: v1190 lastLocationAccess: - value: a322 stateAfter: - #next: v909  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v909 <|@
d <@d|@=== Debug Properties ===
locations: [GC-Card, GC-Card-Queue-Log, GC-Card-Queue-Index, GC-Card-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: j849 
=== Usages ===
=== Predecessor ===
v323 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j849  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j849 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:184) [bci: 1] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: a850 
=== Usages ===
v1248 v1249 
=== Predecessor ===
v909 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: a850  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a850 <|@
result v38|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.FixedValueAnchorNode.getObject(Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:185) [bci: 7] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: a! java.util.HashMap$Node
=== Inputs ===
object: a190 
=== Succesors ===
next: j851 
=== Usages ===
j852 
=== Predecessor ===
j849 >@ <|@
instruction <@FixedValueAnchor|@jdk.graal.compiler.nodes.extended.FixedValueAnchorNode>@ object: a190 #next: j851  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j851 <|@
result [v11|QWORD[.] + v16|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:192) [bci: 36] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1190 
=== Succesors ===
next: j852 
=== Usages ===
j853 j866 
=== Predecessor ===
a850 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: v1190 #next: j852  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j852 <|@
result v38|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:208) [bci: 150] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a850 
=== Succesors ===
next: v856 
=== Usages ===
j853 v857 
=== Predecessor ===
j851 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a850 #next: v856  <|@  <|@
f <@~|@floating>@ <|@
tid j853 <|@
result v63|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:212) [bci: 165] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: i64
=== Inputs ===
x: j851 
y: j852 
=== Succesors ===
=== Usages ===
v888 
=== Predecessor ===
- >@ <|@
instruction <@^|@jdk.graal.compiler.nodes.calc.XorNode>@ x: j851 y: j852  <|@  <|@
f <@~|@floating>@ <|@
tid v888 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:215) [bci: 193] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
x: j853 
y: j887 
=== Succesors ===
=== Usages ===
v856 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@jdk.graal.compiler.nodes.calc.IntegerTestNode>@ x: j853 y: j887  <|@  <|@
f <@*|@fixed>@ <|@
tid v856 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:215) [bci: 201] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v888 
=== Succesors ===
trueSuccessor: v855 
falseSuccessor: v854 
=== Usages ===
=== Predecessor ===
j852 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v888 #trueSuccessor: v855 #falseSuccessor: v854  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v61|DWORD[_] = COMPRESSPOINTER (input: v38|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v11|QWORD[.] + v16|DWORD * 4 + 16], y: v61|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v62|QWORD[.+] = LEA [v11|QWORD[.] + v16|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v63|QWORD[*] = XOR (x: v62|QWORD[.+], y: v38|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v63|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B88" 
    xhandlers
    flags 
    probability 4590594123464754032
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v855 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v140 
=== Usages ===
=== Predecessor ===
v856 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v140  <|@  <|@
f <@*|@fixed>@ <|@
tid v140 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:667) [bci: 259]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v141 
=== Predecessor ===
v855 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B35 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4604846135197064160
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v854 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:216) [bci: 204] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v863 
=== Usages ===
=== Predecessor ===
v856 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v863  <|@  <|@
f <@~|@floating>@ <|@
tid v857 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:218) [bci: 218] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j852 
y: j570 
=== Succesors ===
=== Usages ===
v863 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j852 y: j570  <|@  <|@
f <@*|@fixed>@ <|@
tid v863 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:218) [bci: 226] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v857 
=== Succesors ===
trueSuccessor: v862 
falseSuccessor: v858 
=== Usages ===
=== Predecessor ===
v854 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v857 #trueSuccessor: v862 #falseSuccessor: v858  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v38|QWORD[.], y: v38|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B88" 
    xhandlers
    flags 
    probability 4590001153184595122
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v862 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1132 
=== Usages ===
=== Predecessor ===
v863 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1132  <|@  <|@
f <@*|@fixed>@ <|@
tid v1132 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v141 
=== Predecessor ===
v862 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B37 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4604179043631885386
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v858 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 229] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: i894 
=== Usages ===
=== Predecessor ===
v863 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i894  <|@  <|@
f <@~|@floating>@ <|@
tid j866 <|@
result v64|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.cardTableAddress(HotSpotG1WriteBarrierSnippets.java:131) [bci: 23]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 232] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: i64 [0 - 36028797018963967] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j851 
y: i865 
=== Succesors ===
=== Usages ===
j889 v1251 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j851 y: i865  <|@  <|@
f <@~|@floating>@ <|@
tid v1251 <|@
result [v64|QWORD[*] + v21|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j866 
index: j864 
=== Succesors ===
=== Usages ===
i894 i895 v896 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j866 index: j864  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i894 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:223) [bci: 243] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1251 
lastLocationAccess: - 
=== Succesors ===
next: v870 
=== Usages ===
v902 
=== Predecessor ===
v858 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1251 lastLocationAccess: - #next: v870  <|@  <|@
f <@~|@floating>@ <|@
tid v902 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:227) [bci: 265] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i894 
y: i901 
=== Succesors ===
=== Usages ===
v870 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i894 y: i901  <|@  <|@
f <@*|@fixed>@ <|@
tid v870 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:227) [bci: 276] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v902 
=== Succesors ===
trueSuccessor: v869 
falseSuccessor: v867 
=== Usages ===
=== Predecessor ===
i894 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v902 #trueSuccessor: v869 #falseSuccessor: v867  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v65|QWORD[.+] = LEA [v11|QWORD[.] + v16|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v64|QWORD[*] = SHR v65|QWORD[.+] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v64|QWORD[*] + v21|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B88" 
    xhandlers
    flags 
    probability 4603578661223224489
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v869 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1131 
=== Usages ===
=== Predecessor ===
v870 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1131  <|@  <|@
f <@*|@fixed>@ <|@
tid v1131 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v141 
=== Predecessor ===
v869 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B39 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4589467479932452103
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v867 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:228) [bci: 279] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v871 
=== Usages ===
=== Predecessor ===
v870 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v871  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v871 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_LOAD
fence: STORE_LOAD
location: GC-Card
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.MembarNode.memoryBarrier(MembarNode$FenceKind, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:228) [bci: 285] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: i895 
=== Usages ===
=== Predecessor ===
v867 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: i895  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i895 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:229) [bci: 294] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1251 
lastLocationAccess: - 
=== Succesors ===
next: v875 
=== Usages ===
v903 
=== Predecessor ===
v871 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1251 lastLocationAccess: - #next: v875  <|@  <|@
f <@~|@floating>@ <|@
tid v903 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:230) [bci: 308] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i895 
y: i840 
=== Succesors ===
=== Usages ===
v875 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i895 y: i840  <|@  <|@
f <@*|@fixed>@ <|@
tid v875 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:230) [bci: 319] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v903 
=== Succesors ===
trueSuccessor: v874 
falseSuccessor: v872 
=== Usages ===
=== Predecessor ===
i895 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v903 #trueSuccessor: v874 #falseSuccessor: v872  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v64|QWORD[*] + v21|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B88" 
    xhandlers
    flags 
    probability 4588806327720511347
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v874 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1130 
=== Usages ===
=== Predecessor ===
v875 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1130  <|@  <|@
f <@*|@fixed>@ <|@
tid v1130 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v141 
=== Predecessor ===
v874 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B41 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4574334916984542422
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v872 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:231) [bci: 322] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v896 
=== Usages ===
=== Predecessor ===
v875 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v896  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v896 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:232) [bci: 358] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1251 
lastLocationAccess: - 
value: i840 
stateAfter: - 
=== Succesors ===
next: j897 
=== Usages ===
=== Predecessor ===
v872 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1251 lastLocationAccess: - value: i840 stateAfter: - #next: j897  <|@  <|@
f <@~|@floating>@ <|@
tid v1248 <|@
result [r15|QWORD + 72] <|@
d <@d|@=== Debug Properties ===
displacement: 72
stamp: void*
stride: S1
=== Inputs ===
base: j849 
index: - 
=== Succesors ===
=== Usages ===
j897 v900 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j849 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j897 <|@
result v66|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:237) [bci: 378] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1248 
lastLocationAccess: - 
=== Succesors ===
next: v880 
=== Usages ===
v877 j893 v1250 
=== Predecessor ===
v896 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1248 lastLocationAccess: - #next: v880  <|@  <|@
f <@~|@floating>@ <|@
tid v877 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:238) [bci: 392] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j897 
y: j570 
=== Succesors ===
=== Usages ===
v880 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j897 y: j570  <|@  <|@
f <@~|@floating>@ <|@
tid j889 <|@
result v67|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.cardTableAddress(HotSpotG1WriteBarrierSnippets.java:131) [bci: 28]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 232] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: i64 [140438306553856 - 36169235325517823] bits:00000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j866 
y: j864 
=== Succesors ===
=== Usages ===
v884 v899 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j866 y: j864  <|@  <|@
f <@*|@fixed>@ <|@
tid v880 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:238) [bci: 398] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v877 
=== Succesors ===
trueSuccessor: v879 
falseSuccessor: v878 
=== Usages ===
=== Predecessor ===
j897 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v877 #trueSuccessor: v879 #falseSuccessor: v878  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v64|QWORD[*] + v21|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[*] = ADD (x: v64|QWORD[*], y: v21|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v66|QWORD, y: v66|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B88" 
    xhandlers
    flags 
    probability 4559287139136259037
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v879 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:247) [bci: 458] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v884 
=== Usages ===
=== Predecessor ===
v880 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v884  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v884 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_post(Word)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-Card-Queue-Index, GC-Card-Queue-Buffer, GC-Card-Queue-Log, GC-Card], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_post
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostBarrierStub(ForeignCallDescriptor, Word) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostBarrierStub(G1WriteBarrierSnippets.java:413) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:247) [bci: 461] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: j889 
=== Succesors ===
next: v1128 
=== Usages ===
=== Predecessor ===
v879 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: j889 #next: v1128  <|@  <|@
f <@*|@fixed>@ <|@
tid v1128 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v141 
=== Predecessor ===
v884 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v67|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B43 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B88" 
    xhandlers
    flags 
    probability 4573566427501456474
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v878 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:239) [bci: 401] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: j898 
=== Usages ===
=== Predecessor ===
v880 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j898  <|@  <|@
f <@~|@floating>@ <|@
tid v1249 <|@
result [r15|QWORD + 88] <|@
d <@d|@=== Debug Properties ===
displacement: 88
stamp: void*
stride: S1
=== Inputs ===
base: j849 
index: - 
=== Succesors ===
=== Usages ===
j898 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j849 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j898 <|@
result v68|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:239) [bci: 410] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1249 
lastLocationAccess: - 
=== Succesors ===
next: v899 
=== Usages ===
v1250 
=== Predecessor ===
v878 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1249 lastLocationAccess: - #next: v899  <|@  <|@
f <@~|@floating>@ <|@
tid v1250 <|@
result [v68|QWORD + v66|QWORD * 1 - 8] <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j898 
index: j897 
=== Succesors ===
=== Usages ===
v899 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j898 index: j897  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v899 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card-Queue-Log
location: GC-Card-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:244) [bci: 438] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1250 
lastLocationAccess: - 
value: j889 
stateAfter: - 
=== Succesors ===
next: v900 
=== Usages ===
=== Predecessor ===
j898 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1250 lastLocationAccess: - value: j889 stateAfter: - #next: v900  <|@  <|@
f <@~|@floating>@ <|@
tid j893 <|@
result v69|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:240) [bci: 424] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: i64
=== Inputs ===
x: j897 
y: j831 
=== Succesors ===
=== Usages ===
v900 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j897 y: j831  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v900 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card-Queue-Index
location: GC-Card-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:245) [bci: 452] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1248 
lastLocationAccess: - 
value: j893 
stateAfter: - 
=== Succesors ===
next: v1129 
=== Usages ===
=== Predecessor ===
v899 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1248 lastLocationAccess: - value: j893 stateAfter: - #next: v1129  <|@  <|@
f <@*|@fixed>@ <|@
tid v1129 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v141 
=== Predecessor ===
v900 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v68|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v68|QWORD + v66|QWORD * 1 - 8], y: v67|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v69|QWORD = LEA [v66|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v69|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B44 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v541 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:79) [bci: 75]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v586 
=== Usages ===
=== Predecessor ===
v543 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v586  <|@  <|@
f <@*|@fixed>@ <|@
tid v586 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v641 
=== Predecessor ===
v541 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B26" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v641 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v586 v592 
=== Succesors ===
next: v485 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v586 v592 #next: v485  <|@  <|@
tid ?643 <|@
d <@d|@=== Debug Properties ===
bci: 59
bytecode: aastore
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
localsSize: 13
locksSize: 0
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
sourceFile: HashMap.java
sourceLine: 637
stackSize: 3
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a26 i32 a190 a1 - - - - i6 
=== Succesors ===
=== Usages ===
v485 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a26 i32 a190 a1 - - - - i6  <|@  <|@
f <@*|@fixed>@ <|@
tid v485 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 324
mayConvertToGuard: true
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
reason: ArrayStoreException
speculation: jdk.vm.ci.meta.SpeculationLog$NoSpeculationReason@7f1c506c
stamp: void
=== Inputs ===
stateBefore: ?643 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v641 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?643  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -82987 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stack: v11|QWORD[.] v16|DWORD v38|QWORD[.] 
locals: v0|QWORD[.] - - - - v5|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:59] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v202 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: v665 
=== Usages ===
=== Predecessor ===
v204 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v665  <|@  <|@
f <@~|@floating>@ <|@
tid j667 <|@
result long[5780|0x1694] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:636) [bci: 40]
rawvalue: 5780
stableDimension: 0
stamp: i64 [5780]
stampKind: i64
value: long[5780|0x1694]
=== Inputs ===
=== Succesors ===
=== Usages ===
j661 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i666 <|@
result int[-51507|0xffffffffffff36cd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:636) [bci: 40]
rawvalue: -51507
stableDimension: 0
stamp: i32 [-51507]
stampKind: i32
value: int[-51507|0xffffffffffff36cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i660 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v665 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:636) [bci: 40]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v657 
=== Predecessor ===
v202 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-51507|0xffffffffffff36cd], long[5780|0x1694]] destination: B47 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B49" "B54" 
    xhandlers
    flags 
    probability 4595548303301553864
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v35 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:640) [bci: 63]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1148 
=== Usages ===
=== Predecessor ===
v37 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i1148  <|@  <|@
f <@~|@floating>@ <|@
tid v1192 <|@
result [v17|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a1143 
=== Succesors ===
=== Usages ===
i1148 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1143  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1148 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: HashMap$Node.hash
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:640) [bci: 65]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1192 
lastLocationAccess: - 
=== Succesors ===
next: v48 
=== Usages ===
v45 
=== Predecessor ===
v35 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1192 lastLocationAccess: - #next: v48  <|@  <|@
f <@~|@floating>@ <|@
tid v45 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:640) [bci: 69]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i1148 
=== Succesors ===
=== Usages ===
v48 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i2 y: i1148  <|@  <|@
f <@~|@floating>@ <|@
tid a304 <|@
result v70|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:636) [bci: 40]
op: Uncompress
stamp: a java.util.HashMap$Node
=== Inputs ===
value: a1143 
=== Succesors ===
=== Usages ===
v346 ?650 a79 ?58 a79 a83 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1143  <|@  <|@
f <@~|@floating>@ <|@
tid v1252 <|@
result [v2|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
v1150 v1155 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@*|@fixed>@ <|@
tid v48 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:640) [bci: 69]
profileData: PROFILED designatedSuccessorProbability: 0.01987559010066231
stamp: void
=== Inputs ===
condition: v45 
=== Succesors ===
trueSuccessor: v47 
falseSuccessor: v46 
=== Usages ===
=== Predecessor ===
i1148 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v45 #trueSuccessor: v47 #falseSuccessor: v46  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v70|QWORD[.] = UNCOMPRESSPOINTER (input: v17|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v17|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.01987559010066231 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4570262383476918658
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v47 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:640) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1149 
=== Usages ===
=== Predecessor ===
v48 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a1149  <|@  <|@
f <@~|@floating>@ <|@
tid v1193 <|@
result [v17|DWORD[_] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a1143 
=== Succesors ===
=== Usages ===
a1149 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1143  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1149 <|@
result v71|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: HashMap$Node.key
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:640) [bci: 74]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1193 
lastLocationAccess: - 
=== Succesors ===
next: v53 
=== Usages ===
a332 
=== Predecessor ===
v47 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1193 lastLocationAccess: - #next: v53  <|@  <|@
f <@~|@floating>@ <|@
tid a332 <|@
result v72|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:640) [bci: 74]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a1149 
=== Succesors ===
=== Usages ===
v50 v342 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1149  <|@  <|@
f <@~|@floating>@ <|@
tid v50 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:640) [bci: 81]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a3 
y: a332 
=== Succesors ===
=== Usages ===
v53 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.ObjectEqualsNode>@ x: a3 y: a332  <|@  <|@
f <@*|@fixed>@ <|@
tid v53 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:640) [bci: 81]
profileData: PROFILED designatedSuccessorProbability: 0.9854570809572428
stamp: void
=== Inputs ===
condition: v50 
=== Succesors ===
trueSuccessor: v52 
falseSuccessor: v51 
=== Usages ===
=== Predecessor ===
a1149 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v50 #trueSuccessor: v52 #falseSuccessor: v51  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v71|DWORD[_] = MOV [v17|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v72|QWORD[.] = UNCOMPRESSPOINTER (input: v71|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v72|QWORD[.], y: v2|QWORD[.]) trueDestinationProbability: 0.9854570809572428 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B86" 
    xhandlers
    flags 
    probability 4570144353713859813
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v52 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:642) [bci: 97]
stamp: void
=== Inputs ===
=== Succesors ===
next: v76 
=== Usages ===
=== Predecessor ===
v53 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v76  <|@  <|@
f <@*|@fixed>@ <|@
tid v76 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:659) [bci: 222]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v77 
=== Predecessor ===
v52 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v70|QWORD[.]] destination: B50 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4542678729597855531
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v51 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:640) [bci: 84]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1150 
=== Usages ===
=== Predecessor ===
v53 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1150  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1150 <|@
result v73|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140436756758528 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-85259|0xfffffffffffeb2f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:641) [bci: 91]
stamp: Klass*!(compressed base: 140436756758528 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?28 
guard: - 
address: v1252 
lastLocationAccess: - 
=== Succesors ===
next: v338 
=== Usages ===
v912 
=== Predecessor ===
v51 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?28 guard: - address: v1252 lastLocationAccess: - #next: v338  <|@  <|@
f <@~|@floating>@ <|@
tid v912 <|@
result v74|QWORD <|@
d <@d|@=== Debug Properties ===
encoding: base: 140436756758528 shift: 0
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:641) [bci: 91]
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v1150 
=== Succesors ===
=== Usages ===
v1194 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v1150  <|@  <|@
f <@~|@floating>@ <|@
tid v1194 <|@
result [v74|QWORD + 464] <|@
d <@d|@=== Debug Properties ===
displacement: 464
stamp: void*
stride: S1
=== Inputs ===
base: v912 
index: - 
=== Succesors ===
=== Usages ===
v338 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v912 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v338 <|@
result v76|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: Method*!
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:641) [bci: 91]
stamp: Method*!
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1194 
lastLocationAccess: - 
=== Succesors ===
next: j341 
=== Usages ===
v1195 v342 
=== Predecessor ===
v1150 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1194 lastLocationAccess: - #next: j341  <|@  <|@
f <@~|@floating>@ <|@
tid v1195 <|@
result [v76|QWORD + 64] <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: v338 
index: - 
=== Succesors ===
=== Usages ===
j341 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v338 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j341 <|@
result v77|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:641) [bci: 91]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1195 
lastLocationAccess: - 
=== Succesors ===
next: i57 
=== Usages ===
v342 
=== Predecessor ===
v338 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1195 lastLocationAccess: - #next: i57  <|@  <|@
tid v342 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:641) [bci: 91]
referencedType: [null]
returnStamp: i32 [0 - 1] bits:0...0x
signature: [HotSpotType<Ljava/lang/Object;, resolved>, UnresolvedJavaType<Ljava/lang/Object;>]
stamp: void
targetMethod: HotSpotMethod<Object.equals(Object)>
=== Inputs ===
computedAddress: j341 
metaspaceMethod: v338 
arguments: a3 a332 
=== Succesors ===
=== Usages ===
i57 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotIndirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotIndirectCallTargetNode>@ computedAddress: j341 metaspaceMethod: v338 arguments: a3 a332  <|@  <|@
tid ?650 <|@
d <@d|@=== Debug Properties ===
bci: 91
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
localsSize: 13
locksSize: 0
sourceFile: HashMap.java
sourceLine: 641
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i2 a3 a4 i5 i6 a26 a304 
=== Succesors ===
=== Usages ===
i57 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 a3 a4 i5 i6 a26 a304  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i57 <|@
result v78|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 91
identity: ANY_LOCATION
inlineControl: Normal
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:641) [bci: 91]
polymorphic: true
stamp: i32 [0 - 1] bits:0...0x
targetMethod: Indirect#Object.equals
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v342 
stateDuring: ?650 
=== Succesors ===
next: v602 
=== Usages ===
v59 
=== Predecessor ===
j341 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v342 stateDuring: ?650 #next: v602  <|@  <|@
f <@~|@floating>@ <|@
tid v59 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:641) [bci: 94]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i57 
y: i15 
=== Succesors ===
=== Usages ===
v602 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i57 y: i15  <|@  <|@
f <@*|@fixed>@ <|@
tid v602 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:641) [bci: 94]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v59 
=== Succesors ===
trueSuccessor: v600 
falseSuccessor: v601 
=== Usages ===
=== Predecessor ===
i57 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v59 #trueSuccessor: v600 #falseSuccessor: v601  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] - v12|DWORD - - - - 
>@ <|@ instruction v73|DWORD = MOV [v2|QWORD[.] + 8] size: DWORD state [bci:29] <|@ <|@
      nr   -1  <|@ instruction v75|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr   -1  <|@ instruction v74|QWORD = UNCOMPRESSPOINTER (input: v73|DWORD, ~baseRegister: v75|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v76|QWORD = MOV [v74|QWORD + 464] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v77|QWORD = MOV [v76|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v72|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v76|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v77|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:641) [bci: 91]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] v70|QWORD[.] - - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:91] <|@ <|@
      nr   -1  <|@ instruction v78|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v78|DWORD, y: v78|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v600 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:641) [bci: 94]
stamp: void
=== Inputs ===
=== Succesors ===
next: v599 
=== Usages ===
=== Predecessor ===
v602 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v599  <|@  <|@
tid ?58 <|@
d <@d|@=== Debug Properties ===
bci: 94
bytecode: ifeq
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
localsSize: 13
locksSize: 0
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:641) [bci: 91]
sourceFile: HashMap.java
sourceLine: 641
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: i15 a1 i2 a3 a4 i5 i6 a26 a304 
=== Succesors ===
=== Usages ===
v599 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: i15 a1 i2 a3 a4 i5 i6 a26 a304  <|@  <|@
f <@*|@fixed>@ <|@
tid v599 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 0
mayConvertToGuard: true
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:641) [bci: 94]
reason: UnreachedCode
speculation: {0x0000000000000294[index: 20, len: 20, hash: 0x5bfbb5d0]: UnreachedCode@5[HotSpotMethod<HashMap.putVal(int, Object, Object, boolean, boolean)>, 104]}
stamp: void
=== Inputs ===
stateBefore: ?58 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v600 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?58  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -153363 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:641) [bci: 94]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] v70|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:94] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B86" 
    xhandlers
    flags 
    probability 4542678729597855531
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v601 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:642) [bci: 97]
stamp: void
=== Inputs ===
=== Succesors ===
next: v188 
=== Usages ===
=== Predecessor ===
v602 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v188  <|@  <|@
f <@*|@fixed>@ <|@
tid v188 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:642) [bci: 97]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v77 
=== Predecessor ===
v601 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v70|QWORD[.]] destination: B53 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4595421491411700642
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v46 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:643) [bci: 104]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1151 
=== Usages ===
=== Predecessor ===
v48 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1151  <|@  <|@
f <@~|@floating>@ <|@
tid v1253 <|@
result [v17|DWORD[_] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a1143 
=== Succesors ===
=== Usages ===
v1151 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1143  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1151 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140436756758528 shift: 0)
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubOrNullIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 1] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:643) [bci: 106]
stamp: Klass*!(compressed base: 140436756758528 shift: 0)
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1253 
lastLocationAccess: - 
=== Succesors ===
next: v69 
=== Usages ===
v1168 
=== Predecessor ===
v46 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1253 lastLocationAccess: - #next: v69  <|@  <|@
f <@~|@floating>@ <|@
tid v1167 <|@
result meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 12] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:643) [bci: 106]
rawvalue: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 140436756758528 shift: 0)
stampKind: Klass*(compressed base: 140436756758528 shift: 0)
value: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1168 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1168 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 12] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:643) [bci: 106]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1151 
y: v1167 
=== Succesors ===
=== Usages ===
v69 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: v1151 y: v1167  <|@  <|@
f <@*|@fixed>@ <|@
tid v69 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:643) [bci: 109]
profileData: PROFILED designatedSuccessorProbability: 2.021089053783065E-6
stamp: void
=== Inputs ===
condition: v1168 
=== Succesors ===
trueSuccessor: v68 
falseSuccessor: v1164 
=== Usages ===
=== Predecessor ===
v1151 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1168 #trueSuccessor: v68 #falseSuccessor: v1164  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v17|DWORD[_] * 8 + 8] trueDestinationProbability: 2.021089053783065E-6 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B56 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B86" 
    xhandlers
    flags 
    probability 4510226010095555986
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v68 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:644) [bci: 112]
stamp: void
=== Inputs ===
=== Succesors ===
next: a74 
=== Usages ===
=== Predecessor ===
v69 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a74  <|@  <|@
tid v346 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:644) [bci: 123]
referencedType: [null]
returnStamp: a# java.util.HashMap$TreeNode
signature: [HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>, UnresolvedJavaType<Ljava/util/HashMap;>, UnresolvedJavaType<[Ljava/util/HashMap$Node;>, HotSpotResolvedPrimitiveType<int>, UnresolvedJavaType<Ljava/lang/Object;>, UnresolvedJavaType<Ljava/lang/Object;>]
stamp: void
targetMethod: HotSpotMethod<HashMap$TreeNode.putTreeVal(HashMap, HashMap$Node[], int, Object, Object)>
=== Inputs ===
arguments: a304 a1 a26 i2 a3 a4 
=== Succesors ===
=== Usages ===
a74 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a304 a1 a26 i2 a3 a4  <|@  <|@
tid ?648 <|@
d <@d|@=== Debug Properties ===
bci: 123
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
localsSize: 13
locksSize: 0
sourceFile: HashMap.java
sourceLine: 644
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 - - a4 i5 i6 
=== Succesors ===
=== Usages ===
a74 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - a4 i5 i6  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a74 <|@
result v79|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 123
identity: ANY_LOCATION
inlineControl: Normal
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:644) [bci: 123]
polymorphic: false
stamp: a# java.util.HashMap$TreeNode
targetMethod: Direct#HashMap$TreeNode.putTreeVal
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v346 
stateDuring: ?648 
=== Succesors ===
next: v78 
=== Usages ===
a79 
=== Predecessor ===
v68 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v346 stateDuring: ?648 #next: v78  <|@  <|@
f <@*|@fixed>@ <|@
tid v78 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:659) [bci: 222]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v77 
=== Predecessor ===
a74 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v70|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:644) [bci: 123]
locals: v0|QWORD[.] - - v3|QWORD[.] v4|DWORD v5|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|QWORD[.], rdi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap$TreeNode.putTreeVal(HashMap, HashMap$Node[], int, Object, Object)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:123] <|@ <|@
      nr   -1  <|@ instruction v79|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v79|QWORD[.]] destination: B55 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4595421478772878611
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1164 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:646) [bci: 131]
stamp: void
=== Inputs ===
=== Succesors ===
next: v81 
=== Usages ===
=== Predecessor ===
v69 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v81  <|@  <|@
f <@*|@fixed>@ <|@
tid v81 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v82 
=== Predecessor ===
v1164 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v70|QWORD[.], int[0|0x0]] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B62" 
    successors "B65" "B58" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4595777537596400292
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a83 <|@
result v80|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
stamp: a java.util.HashMap$Node
valueDescription: a java.lang.Object
=== Inputs ===
merge: v82 
values: a304 a353 
=== Succesors ===
=== Usages ===
?85 j974 ?651 v1196 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v82 values: a304 a353  <|@  <|@
f <@~|@floating>@ <|@
tid i84 <|@
result v81|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v82 
values: i15 i119 
=== Succesors ===
=== Usages ===
?85 v127 ?112 i119 ?651 ?649 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v82 values: i15 i119  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v82 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: true
canNeverOverflow: false
cloneFromNodeId: -1
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
osrLoop: false
peelings: 0
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v81 
=== Succesors ===
next: a1152 
=== Usages ===
a83 i84 v90 v105 v116 v120 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v81 #next: a1152  <|@  <|@
tid ?85 <|@
d <@d|@=== Debug Properties ===
bci: 134
bytecode: aload
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
localsSize: 13
locksSize: 0
sourceFile: HashMap.java
sourceLine: 647
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i2 a3 a4 i5 i6 a26 a83 - - - - i84 
=== Succesors ===
=== Usages ===
v1155 v504 a1152 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 a3 a4 i5 i6 a26 a83 - - - - i84  <|@  <|@
f <@~|@floating>@ <|@
tid v1196 <|@
result [v80|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S1
=== Inputs ===
base: a83 
index: - 
=== Succesors ===
=== Usages ===
a1152 v383 j932 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a83 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1152 <|@
result v82|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.HashMap$Node
barrierType: NONE
deoptReasonAndAction: int[-89099|0xfffffffffffea3f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: HashMap$Node.next
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:647) [bci: 136]
stamp: n java.util.HashMap$Node
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?85 
guard: - 
address: v1196 
lastLocationAccess: - 
=== Succesors ===
next: v95 
=== Usages ===
a353 v354 v1197 v1198 
=== Predecessor ===
v82 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?85 guard: - address: v1196 lastLocationAccess: - #next: v95  <|@  <|@
f <@~|@floating>@ <|@
tid a353 <|@
result v83|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:647) [bci: 136]
op: Uncompress
stamp: a java.util.HashMap$Node
=== Inputs ===
value: a1152 
=== Succesors ===
=== Usages ===
a79 a79 a79 a83 a79 ?112 ?649 ?651 ?652 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1152  <|@  <|@
f <@~|@floating>@ <|@
tid v354 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:653) [bci: 177]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a1152 
=== Succesors ===
=== Usages ===
v95 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a1152  <|@  <|@
f <@*|@fixed>@ <|@
tid v95 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:647) [bci: 142]
profileData: PROFILED designatedSuccessorProbability: 0.5880075530332061
stamp: void
=== Inputs ===
condition: v354 
=== Succesors ===
trueSuccessor: v90 
falseSuccessor: v88 
=== Usages ===
=== Predecessor ===
a1152 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v354 #trueSuccessor: v90 #falseSuccessor: v88  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v80|QWORD[.], v81|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] v80|QWORD[.] - - - - v81|DWORD 
>@ <|@ instruction v82|DWORD[_] = MOV [v80|QWORD[.] + 24] size: DWORD state [bci:134] <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = UNCOMPRESSPOINTER (input: v82|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v82|DWORD[_], y: v82|DWORD[_]) trueDestinationProbability: 0.5880075530332061 condition: = trueDestination: B57 -> B65 falseDestination: B57 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4590110563079390205
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v88 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:653) [bci: 175]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1153 
=== Usages ===
=== Predecessor ===
v95 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i1153  <|@  <|@
f <@~|@floating>@ <|@
tid v1197 <|@
result [v82|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a1152 
=== Succesors ===
=== Usages ===
i1153 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1152  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1153 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: HashMap$Node.hash
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:653) [bci: 177]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1197 
lastLocationAccess: - 
=== Succesors ===
next: v100 
=== Usages ===
v97 
=== Predecessor ===
v88 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1197 lastLocationAccess: - #next: v100  <|@  <|@
f <@~|@floating>@ <|@
tid v97 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:653) [bci: 181]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i1153 
=== Succesors ===
=== Usages ===
v100 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i2 y: i1153  <|@  <|@
f <@*|@fixed>@ <|@
tid v100 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:653) [bci: 181]
profileData: PROFILED designatedSuccessorProbability: 0.8692436604445373
stamp: void
=== Inputs ===
condition: v97 
=== Succesors ===
trueSuccessor: v99 
falseSuccessor: v98 
=== Usages ===
=== Predecessor ===
i1153 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v97 #trueSuccessor: v99 #falseSuccessor: v98  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v82|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.8692436604445373 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B62 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B64" "B60" 
    xhandlers
    flags 
    probability 4589398445432346844
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v99 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:653) [bci: 184]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1154 
=== Usages ===
=== Predecessor ===
v100 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a1154  <|@  <|@
f <@~|@floating>@ <|@
tid v1198 <|@
result [v82|DWORD[_] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a1152 
=== Succesors ===
=== Usages ===
a1154 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1152  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1154 <|@
result v84|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: HashMap$Node.key
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:653) [bci: 186]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1198 
lastLocationAccess: - 
=== Succesors ===
next: v108 
=== Usages ===
a361 
=== Predecessor ===
v99 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1198 lastLocationAccess: - #next: v108  <|@  <|@
f <@~|@floating>@ <|@
tid a361 <|@
result v85|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:653) [bci: 186]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a1154 
=== Succesors ===
=== Usages ===
v102 v369 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1154  <|@  <|@
f <@~|@floating>@ <|@
tid v102 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:653) [bci: 193]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a3 
y: a361 
=== Succesors ===
=== Usages ===
v108 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.ObjectEqualsNode>@ x: a3 y: a361  <|@  <|@
f <@*|@fixed>@ <|@
tid v108 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:653) [bci: 193]
profileData: PROFILED designatedSuccessorProbability: 0.9998932466496128
stamp: void
=== Inputs ===
condition: v102 
=== Succesors ===
trueSuccessor: v105 
falseSuccessor: v103 
=== Usages ===
=== Predecessor ===
a1154 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v102 #trueSuccessor: v105 #falseSuccessor: v103  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v84|DWORD[_] = MOV [v82|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v85|QWORD[.] = UNCOMPRESSPOINTER (input: v84|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v85|QWORD[.], y: v2|QWORD[.]) trueDestinationProbability: 0.9998932466496128 condition: = trueDestination: B59 -> B64 falseDestination: B59 -> B60 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B63" 
    xhandlers
    flags 
    probability 4529894057192690854
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v103 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:653) [bci: 196]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1155 
=== Usages ===
=== Predecessor ===
v108 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1155  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1155 <|@
result v86|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140436756758528 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-92683|0xfffffffffffe95f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:654) [bci: 203]
stamp: Klass*!(compressed base: 140436756758528 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?85 
guard: - 
address: v1252 
lastLocationAccess: - 
=== Succesors ===
next: v366 
=== Usages ===
v927 
=== Predecessor ===
v103 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?85 guard: - address: v1252 lastLocationAccess: - #next: v366  <|@  <|@
f <@~|@floating>@ <|@
tid v927 <|@
result v87|QWORD <|@
d <@d|@=== Debug Properties ===
encoding: base: 140436756758528 shift: 0
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:654) [bci: 203]
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v1155 
=== Succesors ===
=== Usages ===
v1199 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v1155  <|@  <|@
f <@~|@floating>@ <|@
tid v1199 <|@
result [v87|QWORD + 464] <|@
d <@d|@=== Debug Properties ===
displacement: 464
stamp: void*
stride: S1
=== Inputs ===
base: v927 
index: - 
=== Succesors ===
=== Usages ===
v366 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v927 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v366 <|@
result v89|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: Method*!
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:654) [bci: 203]
stamp: Method*!
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1199 
lastLocationAccess: - 
=== Succesors ===
next: j368 
=== Usages ===
v1200 v369 
=== Predecessor ===
v1155 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1199 lastLocationAccess: - #next: j368  <|@  <|@
f <@~|@floating>@ <|@
tid v1200 <|@
result [v89|QWORD + 64] <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: v366 
index: - 
=== Succesors ===
=== Usages ===
j368 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v366 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j368 <|@
result v90|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:654) [bci: 203]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1200 
lastLocationAccess: - 
=== Succesors ===
next: i111 
=== Usages ===
v369 
=== Predecessor ===
v366 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1200 lastLocationAccess: - #next: i111  <|@  <|@
tid v369 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:654) [bci: 203]
referencedType: [null]
returnStamp: i32 [0 - 1] bits:0...0x
signature: [HotSpotType<Ljava/lang/Object;, resolved>, UnresolvedJavaType<Ljava/lang/Object;>]
stamp: void
targetMethod: HotSpotMethod<Object.equals(Object)>
=== Inputs ===
computedAddress: j368 
metaspaceMethod: v366 
arguments: a3 a361 
=== Succesors ===
=== Usages ===
i111 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotIndirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotIndirectCallTargetNode>@ computedAddress: j368 metaspaceMethod: v366 arguments: a3 a361  <|@  <|@
tid ?649 <|@
d <@d|@=== Debug Properties ===
bci: 203
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
localsSize: 13
locksSize: 0
sourceFile: HashMap.java
sourceLine: 654
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i2 a3 a4 i5 i6 a26 - - - a353 - i84 
=== Succesors ===
=== Usages ===
i111 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 a3 a4 i5 i6 a26 - - - a353 - i84  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i111 <|@
result v91|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 203
identity: ANY_LOCATION
inlineControl: Normal
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:654) [bci: 203]
polymorphic: true
stamp: i32 [0 - 1] bits:0...0x
targetMethod: Indirect#Object.equals
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v369 
stateDuring: ?649 
=== Succesors ===
next: v619 
=== Usages ===
v113 
=== Predecessor ===
j368 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v369 stateDuring: ?649 #next: v619  <|@  <|@
f <@~|@floating>@ <|@
tid v113 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:654) [bci: 206]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i111 
y: i15 
=== Succesors ===
=== Usages ===
v619 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i111 y: i15  <|@  <|@
f <@*|@fixed>@ <|@
tid v619 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:654) [bci: 206]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v113 
=== Succesors ===
trueSuccessor: v618 
falseSuccessor: v116 
=== Usages ===
=== Predecessor ===
i111 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v113 #trueSuccessor: v618 #falseSuccessor: v116  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] v80|QWORD[.] - - - - v81|DWORD 
>@ <|@ instruction v86|DWORD = MOV [v2|QWORD[.] + 8] size: DWORD state [bci:134] <|@ <|@
      nr   -1  <|@ instruction v88|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr   -1  <|@ instruction v87|QWORD = UNCOMPRESSPOINTER (input: v86|DWORD, ~baseRegister: v88|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v89|QWORD = MOV [v87|QWORD + 464] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v90|QWORD = MOV [v89|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v85|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v89|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v90|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:654) [bci: 203]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] - - - v83|QWORD[.] - v81|DWORD 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:203] <|@ <|@
      nr   -1  <|@ instruction v91|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v91|DWORD, y: v91|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v618 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:654) [bci: 206]
stamp: void
=== Inputs ===
=== Succesors ===
next: v617 
=== Usages ===
=== Predecessor ===
v619 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v617  <|@  <|@
tid ?112 <|@
d <@d|@=== Debug Properties ===
bci: 206
bytecode: ifeq
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
localsSize: 13
locksSize: 0
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:654) [bci: 203]
sourceFile: HashMap.java
sourceLine: 654
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: i15 a1 i2 a3 a4 i5 i6 a26 - - - a353 - i84 
=== Succesors ===
=== Usages ===
v617 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: i15 a1 i2 a3 a4 i5 i6 a26 - - - a353 - i84  <|@  <|@
f <@*|@fixed>@ <|@
tid v617 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 0
mayConvertToGuard: true
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:654) [bci: 206]
reason: UnreachedCode
speculation: {0x0000000000000514[index: 40, len: 20, hash: 0x5bfbb53c]: UnreachedCode@5[HotSpotMethod<HashMap.putVal(int, Object, Object, boolean, boolean)>, 212]}
stamp: void
=== Inputs ===
stateBefore: ?112 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v618 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?112  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -157971 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 1300 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:654) [bci: 206]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] - - - v83|QWORD[.] - v81|DWORD 
>@ <|@ instruction DEOPT info [bci:206] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B57" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4576850562957400324
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v98 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:656) [bci: 212]
stamp: void
=== Inputs ===
=== Succesors ===
next: v504 
=== Usages ===
=== Predecessor ===
v100 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v504  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v504 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
stamp: void
=== Inputs ===
stateBefore: ?85 
=== Succesors ===
next: v120 
=== Usages ===
=== Predecessor ===
v98 >@ <|@
instruction <@Safepoint|@jdk.graal.compiler.nodes.SafepointNode>@ stateBefore: ?85 #next: v120  <|@  <|@
f <@~|@floating>@ <|@
tid i119 <|@
result v93|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:646) [bci: 216]
stamp: i32
=== Inputs ===
x: i84 
y: i29 
=== Succesors ===
=== Usages ===
i84 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i84 y: i29  <|@  <|@
f <@*|@fixed>@ <|@
tid v120 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: true
endIndex: 0
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
stamp: void
=== Inputs ===
loopBegin: v82 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v504 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v82  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] v80|QWORD[.] - - - - v81|DWORD 
>@ <|@ instruction SAFEPOINT v92|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 thread: r15 state [bci:134] <|@ <|@
      nr   -1  <|@ instruction v93|DWORD = INC v81|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v83|QWORD[.], v93|DWORD] destination: B62 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B86" 
    xhandlers
    flags 
    probability 4529894057192690854
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v116 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:655) [bci: 209]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v82 
=== Succesors ===
next: v136 
=== Usages ===
=== Predecessor ===
v619 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v82 #next: v136  <|@  <|@
f <@*|@fixed>@ <|@
tid v136 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:659) [bci: 222]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v77 
=== Predecessor ===
v116 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v83|QWORD[.]] destination: B63 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B86" 
    xhandlers
    flags 
    probability 4589397940059341918
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v105 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:659) [bci: 222]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v82 
=== Succesors ===
next: v104 
=== Usages ===
=== Predecessor ===
v108 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v82 #next: v104  <|@  <|@
f <@*|@fixed>@ <|@
tid v104 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:659) [bci: 222]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v77 
=== Predecessor ===
v105 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v83|QWORD[.]] destination: B64 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4592437312858669387
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v90 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:648) [bci: 145]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v82 
=== Succesors ===
next: v374 
=== Usages ===
=== Predecessor ===
v95 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v82 #next: v374  <|@  <|@
f <@~|@floating>@ <|@
tid v1201 <|@
result [v19|QWORD + 680] <|@
d <@d|@=== Debug Properties ===
displacement: 680
stamp: void*
stride: S1
=== Inputs ===
base: v697 
index: - 
=== Succesors ===
=== Usages ===
v374 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v697 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v374 <|@
result v94|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: Method*!
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:648) [bci: 152]
stamp: Method*!
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1201 
lastLocationAccess: - 
=== Succesors ===
next: j376 
=== Usages ===
v1202 v377 
=== Predecessor ===
v90 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1201 lastLocationAccess: - #next: j376  <|@  <|@
f <@~|@floating>@ <|@
tid v1202 <|@
result [v94|QWORD + 64] <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: v374 
index: - 
=== Succesors ===
=== Usages ===
j376 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v374 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j376 <|@
result v95|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:648) [bci: 152]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1202 
lastLocationAccess: - 
=== Succesors ===
next: a122 
=== Usages ===
v377 
=== Predecessor ===
v374 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1202 lastLocationAccess: - #next: a122  <|@  <|@
tid v377 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:648) [bci: 152]
referencedType: [null]
returnStamp: a java.util.HashMap$Node
signature: [HotSpotType<Ljava/util/HashMap;, resolved>, HotSpotResolvedPrimitiveType<int>, UnresolvedJavaType<Ljava/lang/Object;>, UnresolvedJavaType<Ljava/lang/Object;>, UnresolvedJavaType<Ljava/util/HashMap$Node;>]
stamp: void
targetMethod: HotSpotMethod<HashMap.newNode(int, Object, Object, HashMap$Node)>
=== Inputs ===
computedAddress: j376 
metaspaceMethod: v374 
arguments: a1 i2 a3 a4 a9 
=== Succesors ===
=== Usages ===
a122 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotIndirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotIndirectCallTargetNode>@ computedAddress: j376 metaspaceMethod: v374 arguments: a1 i2 a3 a4 a9  <|@  <|@
tid ?651 <|@
d <@d|@=== Debug Properties ===
bci: 152
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
localsSize: 13
locksSize: 0
sourceFile: HashMap.java
sourceLine: 648
stackSize: 1
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a83 a1 i2 - a4 i5 i6 a26 - - - a353 - i84 
=== Succesors ===
=== Usages ===
a122 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a83 a1 i2 - a4 i5 i6 a26 - - - a353 - i84  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a122 <|@
result v96|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 152
identity: ANY_LOCATION
inlineControl: Normal
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:648) [bci: 152]
polymorphic: true
stamp: a java.util.HashMap$Node
targetMethod: Indirect#HashMap.newNode
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v377 
stateDuring: ?651 
=== Succesors ===
next: v970 
=== Usages ===
a973 a381 
=== Predecessor ===
j376 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v377 stateDuring: ?651 #next: v970  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v970 <|@
d <@d|@=== Debug Properties ===
locations: [GC-SATB-Queue-Log, GC-SATB-Marking-Active, GC-SATB-Queue-Index, GC-SATB-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
=== Inputs ===
=== Succesors ===
next: j931 
=== Usages ===
=== Predecessor ===
a122 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j931  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j931 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:127) [bci: 10]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j932 
=== Usages ===
v1254 v1256 v1257 
=== Predecessor ===
v970 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j932  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j932 <|@
result [v80|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:129) [bci: 21]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1196 
=== Succesors ===
next: i957 
=== Usages ===
v1255 
=== Predecessor ===
j931 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: v1196 #next: i957  <|@  <|@
f <@~|@floating>@ <|@
tid v1254 <|@
result [r15|QWORD + 64] <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: j931 
index: - 
=== Succesors ===
=== Usages ===
i957 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j931 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i957 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Marking-Active
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:130) [bci: 35]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1254 
lastLocationAccess: - 
=== Succesors ===
next: v936 
=== Usages ===
v964 
=== Predecessor ===
j932 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1254 lastLocationAccess: - #next: v936  <|@  <|@
f <@~|@floating>@ <|@
tid v964 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i957 
y: i840 
=== Succesors ===
=== Usages ===
v936 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i957 y: i840  <|@  <|@
f <@*|@fixed>@ <|@
tid v936 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 217]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v964 
=== Succesors ===
trueSuccessor: v935 
falseSuccessor: v934 
=== Usages ===
=== Predecessor ===
i957 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v964 #trueSuccessor: v935 #falseSuccessor: v934  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v94|QWORD = MOV [v19|QWORD + 680] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v95|QWORD = MOV [v94|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v94|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v95|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:648) [bci: 152]
stack: v80|QWORD[.] 
locals: v0|QWORD[.] v1|DWORD - v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] - - - v83|QWORD[.] - v81|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.]]) [] callTarget: HotSpotMethod<HashMap.newNode(int, Object, Object, HashMap$Node)> state [bci:152] <|@ <|@
      nr   -1  <|@ instruction v96|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B67 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B72" 
    xhandlers
    flags 
    probability 4591660023639118941
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v935 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
=== Inputs ===
=== Succesors ===
next: v939 
=== Usages ===
=== Predecessor ===
v936 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v939  <|@  <|@
f <@*|@fixed>@ <|@
tid v939 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v940 
=== Predecessor ===
v935 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B66 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4577371935537457006
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v934 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:150) [bci: 220]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
=== Inputs ===
=== Succesors ===
next: a958 
=== Usages ===
=== Predecessor ===
v936 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a958  <|@  <|@
f <@~|@floating>@ <|@
tid v1255 <|@
result [v97|QWORD[.+]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j932 
index: - 
=== Succesors ===
=== Usages ===
a958 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j932 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a958 <|@
result v98|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1255 
lastLocationAccess: - 
=== Succesors ===
next: v943 
=== Usages ===
a959 v965 
=== Predecessor ===
v934 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1255 lastLocationAccess: - #next: v943  <|@  <|@
f <@~|@floating>@ <|@
tid v965 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 296]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a958 
=== Succesors ===
=== Usages ===
v943 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a958  <|@  <|@
f <@*|@fixed>@ <|@
tid v943 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 307]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v965 
=== Succesors ===
trueSuccessor: v942 
falseSuccessor: v938 
=== Usages ===
=== Predecessor ===
a958 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v965 #trueSuccessor: v942 #falseSuccessor: v938  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v97|QWORD[.+] = LEA [v80|QWORD[.] + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v98|DWORD[_] = MOV [v97|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v98|DWORD[_], y: v98|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B67 -> B68 falseDestination: B67 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B72" 
    xhandlers
    flags 
    probability 4562617473904064804
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v942 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
=== Inputs ===
=== Succesors ===
next: v941 
=== Usages ===
=== Predecessor ===
v943 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v941  <|@  <|@
f <@*|@fixed>@ <|@
tid v941 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v940 
=== Predecessor ===
v942 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B68 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" "B71" 
    xhandlers
    flags 
    probability 4576750104161816650
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v938 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:163) [bci: 310]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
=== Inputs ===
=== Succesors ===
next: j960 
=== Usages ===
=== Predecessor ===
v943 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j960  <|@  <|@
f <@~|@floating>@ <|@
tid v1256 <|@
result [r15|QWORD + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: j931 
index: - 
=== Succesors ===
=== Usages ===
j960 v963 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j931 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j960 <|@
result v99|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:166) [bci: 327]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1256 
lastLocationAccess: - 
=== Succesors ===
next: v948 
=== Usages ===
v945 j956 v1258 
=== Predecessor ===
v938 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1256 lastLocationAccess: - #next: v948  <|@  <|@
f <@~|@floating>@ <|@
tid v945 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 341]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j960 
y: j570 
=== Succesors ===
=== Usages ===
v948 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j960 y: j570  <|@  <|@
f <@~|@floating>@ <|@
tid a959 <|@
result v100|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a958 
=== Succesors ===
=== Usages ===
j950 v953 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a958  <|@  <|@
f <@*|@fixed>@ <|@
tid v948 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 347]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v945 
=== Succesors ===
trueSuccessor: v947 
falseSuccessor: v946 
=== Usages ===
=== Predecessor ===
j960 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v945 #trueSuccessor: v947 #falseSuccessor: v946  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v99|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v100|QWORD[.] = UNCOMPRESSPOINTER (input: v98|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v99|QWORD, y: v99|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    probability 4562093595080792590
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v947 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 410]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
=== Inputs ===
=== Succesors ===
next: v953 
=== Usages ===
=== Predecessor ===
v948 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v953  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v953 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_pre(Object)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-SATB-Queue-Index, GC-SATB-Queue-Buffer, GC-SATB-Queue-Log], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_pre
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(ForeignCallDescriptor, Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(G1WriteBarrierSnippets.java:409) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 413]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: a959 
=== Succesors ===
next: v954 
=== Usages ===
=== Predecessor ===
v947 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: a959 #next: v954  <|@  <|@
f <@*|@fixed>@ <|@
tid v954 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v940 
=== Predecessor ===
v953 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v100|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    probability 4576190455923740329
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v946 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 350]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
=== Inputs ===
=== Succesors ===
next: j961 
=== Usages ===
=== Predecessor ===
v948 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j961  <|@  <|@
f <@~|@floating>@ <|@
tid v1257 <|@
result [r15|QWORD + 56] <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: j931 
index: - 
=== Succesors ===
=== Usages ===
j961 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j931 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j961 <|@
result v101|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 359]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1257 
lastLocationAccess: - 
=== Succesors ===
next: j950 
=== Usages ===
v1258 
=== Predecessor ===
v946 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1257 lastLocationAccess: - #next: j950  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j950 <|@
result v100|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 384]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a959 
=== Succesors ===
next: v962 
=== Usages ===
v962 
=== Predecessor ===
j961 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a959 #next: v962  <|@  <|@
f <@~|@floating>@ <|@
tid v1258 <|@
result [v101|QWORD + v99|QWORD * 1 - 8] <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j961 
index: j960 
=== Succesors ===
=== Usages ===
v962 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j961 index: j960  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v962 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Log
location: GC-SATB-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 390]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1258 
lastLocationAccess: - 
value: j950 
stateAfter: - 
=== Succesors ===
next: v963 
=== Usages ===
=== Predecessor ===
j950 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1258 lastLocationAccess: - value: j950 stateAfter: - #next: v963  <|@  <|@
f <@~|@floating>@ <|@
tid j956 <|@
result v102|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: i64
=== Inputs ===
x: j960 
y: j831 
=== Succesors ===
=== Usages ===
v963 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j960 y: j831  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v963 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Index
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:173) [bci: 404]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1256 
lastLocationAccess: - 
value: j956 
stateAfter: - 
=== Succesors ===
next: v952 
=== Usages ===
=== Predecessor ===
v962 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1256 lastLocationAccess: - value: j956 stateAfter: - #next: v952  <|@  <|@
f <@*|@fixed>@ <|@
tid v952 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v940 
=== Predecessor ===
v963 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v101|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v101|QWORD + v99|QWORD * 1 - 8], y: v100|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v102|QWORD = LEA [v99|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v102|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B66" "B68" "B71" "B70" 
    successors "B73" "B74" 
    xhandlers
    flags 
    probability 4592437312858669387
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v940 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v939 v941 v952 v954 
=== Succesors ===
next: v383 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v939 v941 v952 v954 #next: v383  <|@  <|@
f <@~|@floating>@ <|@
tid a381 <|@
result v103|DWORD[_] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
op: Compress
stamp: n java.util.HashMap$Node
=== Inputs ===
value: a122 
=== Succesors ===
=== Usages ===
v383 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a122  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v383 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: HashMap$Node.next
location: HashMap$Node.next
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1196 
lastLocationAccess: - 
value: a381 
stateAfter: - 
=== Succesors ===
next: v1026 
=== Usages ===
=== Predecessor ===
v940 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1196 lastLocationAccess: - value: a381 stateAfter: - #next: v1026  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1026 <|@
d <@d|@=== Debug Properties ===
locations: [GC-Card, GC-Card-Queue-Log, GC-Card-Queue-Index, GC-Card-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
=== Inputs ===
=== Succesors ===
next: j972 
=== Usages ===
=== Predecessor ===
v383 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j972  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j972 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:184) [bci: 1] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: a973 
=== Usages ===
v1259 v1260 
=== Predecessor ===
v1026 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: a973  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a973 <|@
result v96|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.FixedValueAnchorNode.getObject(Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:185) [bci: 7] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: a java.util.HashMap$Node
=== Inputs ===
object: a122 
=== Succesors ===
next: j974 
=== Usages ===
j975 
=== Predecessor ===
j972 >@ <|@
instruction <@FixedValueAnchor|@jdk.graal.compiler.nodes.extended.FixedValueAnchorNode>@ object: a122 #next: j974  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j974 <|@
result v80|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:197) [bci: 56] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a83 
=== Succesors ===
next: j975 
=== Usages ===
j976 j987 
=== Predecessor ===
a973 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a83 #next: j975  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j975 <|@
result v96|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:208) [bci: 150] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a973 
=== Succesors ===
next: v979 
=== Usages ===
j976 v980 
=== Predecessor ===
j974 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a973 #next: v979  <|@  <|@
f <@~|@floating>@ <|@
tid j976 <|@
result v104|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:212) [bci: 165] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: i64
=== Inputs ===
x: j974 
y: j975 
=== Succesors ===
=== Usages ===
v1008 
=== Predecessor ===
- >@ <|@
instruction <@^|@jdk.graal.compiler.nodes.calc.XorNode>@ x: j974 y: j975  <|@  <|@
f <@~|@floating>@ <|@
tid v1008 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:215) [bci: 193] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
=== Inputs ===
x: j976 
y: j887 
=== Succesors ===
=== Usages ===
v979 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@jdk.graal.compiler.nodes.calc.IntegerTestNode>@ x: j976 y: j887  <|@  <|@
f <@*|@fixed>@ <|@
tid v979 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:215) [bci: 201] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v1008 
=== Succesors ===
trueSuccessor: v978 
falseSuccessor: v977 
=== Usages ===
=== Predecessor ===
j975 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1008 #trueSuccessor: v978 #falseSuccessor: v977  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v103|DWORD[_] = COMPRESSPOINTER (input: v96|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v80|QWORD[.] + 24], y: v103|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v104|QWORD[*] = XOR (x: v80|QWORD[.], y: v96|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v104|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B83" 
    xhandlers
    flags 
    probability 4577371935537457006
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v978 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
=== Inputs ===
=== Succesors ===
next: v982 
=== Usages ===
=== Predecessor ===
v979 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v982  <|@  <|@
f <@*|@fixed>@ <|@
tid v982 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v983 
=== Predecessor ===
v978 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B73 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    probability 4591660023639118941
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v977 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:216) [bci: 204] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
=== Inputs ===
=== Succesors ===
next: v986 
=== Usages ===
=== Predecessor ===
v979 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v986  <|@  <|@
f <@~|@floating>@ <|@
tid v980 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:218) [bci: 218] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j975 
y: j570 
=== Succesors ===
=== Usages ===
v986 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j975 y: j570  <|@  <|@
f <@*|@fixed>@ <|@
tid v986 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:218) [bci: 226] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v980 
=== Succesors ===
trueSuccessor: v985 
falseSuccessor: v981 
=== Usages ===
=== Predecessor ===
v977 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v980 #trueSuccessor: v985 #falseSuccessor: v981  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v96|QWORD[.], y: v96|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B83" 
    xhandlers
    flags 
    probability 4576750104161816649
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v985 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
=== Inputs ===
=== Succesors ===
next: v984 
=== Usages ===
=== Predecessor ===
v986 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v984  <|@  <|@
f <@*|@fixed>@ <|@
tid v984 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v983 
=== Predecessor ===
v985 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B75 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    probability 4590960463341523540
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v981 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 229] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1012 
=== Usages ===
=== Predecessor ===
v986 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i1012  <|@  <|@
f <@~|@floating>@ <|@
tid j987 <|@
result v105|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.cardTableAddress(HotSpotG1WriteBarrierSnippets.java:131) [bci: 23]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 232] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: i64 [0 - 36028797018963967] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j974 
y: i865 
=== Succesors ===
=== Usages ===
j1009 v1262 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j974 y: i865  <|@  <|@
f <@~|@floating>@ <|@
tid v1262 <|@
result [v105|QWORD[*] + v21|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j987 
index: j864 
=== Succesors ===
=== Usages ===
i1012 i1013 v1014 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j987 index: j864  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1012 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:223) [bci: 243] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1262 
lastLocationAccess: - 
=== Succesors ===
next: v991 
=== Usages ===
v1019 
=== Predecessor ===
v981 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1262 lastLocationAccess: - #next: v991  <|@  <|@
f <@~|@floating>@ <|@
tid v1019 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:227) [bci: 265] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1012 
y: i901 
=== Succesors ===
=== Usages ===
v991 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i1012 y: i901  <|@  <|@
f <@*|@fixed>@ <|@
tid v991 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:227) [bci: 276] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v1019 
=== Succesors ===
trueSuccessor: v990 
falseSuccessor: v988 
=== Usages ===
=== Predecessor ===
i1012 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1019 #trueSuccessor: v990 #falseSuccessor: v988  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v105|QWORD[*] = SHR v80|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v105|QWORD[*] + v21|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B83" 
    xhandlers
    flags 
    probability 4590330859073687679
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v990 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
=== Inputs ===
=== Succesors ===
next: v989 
=== Usages ===
=== Predecessor ===
v991 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v989  <|@  <|@
f <@*|@fixed>@ <|@
tid v989 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v983 
=== Predecessor ===
v990 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B77 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    probability 4576190455923740328
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v988 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:228) [bci: 279] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
=== Inputs ===
=== Succesors ===
next: v992 
=== Usages ===
=== Predecessor ===
v991 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v992  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v992 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_LOAD
fence: STORE_LOAD
location: GC-Card
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.MembarNode.memoryBarrier(MembarNode$FenceKind, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:228) [bci: 285] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1013 
=== Usages ===
=== Predecessor ===
v988 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: i1013  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1013 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:229) [bci: 294] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1262 
lastLocationAccess: - 
=== Succesors ===
next: v996 
=== Usages ===
v1020 
=== Predecessor ===
v992 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1262 lastLocationAccess: - #next: v996  <|@  <|@
f <@~|@floating>@ <|@
tid v1020 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:230) [bci: 308] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1013 
y: i840 
=== Succesors ===
=== Usages ===
v996 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i1013 y: i840  <|@  <|@
f <@*|@fixed>@ <|@
tid v996 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:230) [bci: 319] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v1020 
=== Succesors ===
trueSuccessor: v995 
falseSuccessor: v993 
=== Usages ===
=== Predecessor ===
i1013 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1020 #trueSuccessor: v995 #falseSuccessor: v993  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v105|QWORD[*] + v21|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B83" 
    xhandlers
    flags 
    probability 4575686772509471639
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v995 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
=== Inputs ===
=== Succesors ===
next: v994 
=== Usages ===
=== Predecessor ===
v996 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v994  <|@  <|@
f <@*|@fixed>@ <|@
tid v994 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v983 
=== Predecessor ===
v995 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B79 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    probability 4561198157899870475
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v993 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:231) [bci: 322] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1014 
=== Usages ===
=== Predecessor ===
v996 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1014  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1014 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:232) [bci: 358] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1262 
lastLocationAccess: - 
value: i840 
stateAfter: - 
=== Succesors ===
next: j1015 
=== Usages ===
=== Predecessor ===
v993 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1262 lastLocationAccess: - value: i840 stateAfter: - #next: j1015  <|@  <|@
f <@~|@floating>@ <|@
tid v1259 <|@
result [r15|QWORD + 72] <|@
d <@d|@=== Debug Properties ===
displacement: 72
stamp: void*
stride: S1
=== Inputs ===
base: j972 
index: - 
=== Succesors ===
=== Usages ===
j1015 v1018 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j972 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1015 <|@
result v106|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:237) [bci: 378] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1259 
lastLocationAccess: - 
=== Succesors ===
next: v1001 
=== Usages ===
v998 j1011 v1261 
=== Predecessor ===
v1014 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1259 lastLocationAccess: - #next: v1001  <|@  <|@
f <@~|@floating>@ <|@
tid v998 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:238) [bci: 392] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1015 
y: j570 
=== Succesors ===
=== Usages ===
v1001 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j1015 y: j570  <|@  <|@
f <@~|@floating>@ <|@
tid j1009 <|@
result v107|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.cardTableAddress(HotSpotG1WriteBarrierSnippets.java:131) [bci: 28]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 232] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: i64 [140438306553856 - 36169235325517823] bits:00000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j987 
y: j864 
=== Succesors ===
=== Usages ===
v1005 v1017 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j987 y: j864  <|@  <|@
f <@*|@fixed>@ <|@
tid v1001 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:238) [bci: 398] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v998 
=== Succesors ===
trueSuccessor: v1000 
falseSuccessor: v999 
=== Usages ===
=== Predecessor ===
j1015 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v998 #trueSuccessor: v1000 #falseSuccessor: v999  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v105|QWORD[*] + v21|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v106|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v107|QWORD[*] = ADD (x: v105|QWORD[*], y: v21|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v106|QWORD, y: v106|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    probability 4546075572092099182
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1000 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:247) [bci: 458] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1005 
=== Usages ===
=== Predecessor ===
v1001 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1005  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1005 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_post(Word)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-Card-Queue-Index, GC-Card-Queue-Buffer, GC-Card-Queue-Log, GC-Card], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_post
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostBarrierStub(ForeignCallDescriptor, Word) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostBarrierStub(G1WriteBarrierSnippets.java:413) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:247) [bci: 461] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: j1009 
=== Succesors ===
next: v1006 
=== Usages ===
=== Predecessor ===
v1000 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: j1009 #next: v1006  <|@  <|@
f <@*|@fixed>@ <|@
tid v1006 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v983 
=== Predecessor ===
v1005 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v107|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    probability 4560392264437040573
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v999 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:239) [bci: 401] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1016 
=== Usages ===
=== Predecessor ===
v1001 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j1016  <|@  <|@
f <@~|@floating>@ <|@
tid v1260 <|@
result [r15|QWORD + 88] <|@
d <@d|@=== Debug Properties ===
displacement: 88
stamp: void*
stride: S1
=== Inputs ===
base: j972 
index: - 
=== Succesors ===
=== Usages ===
j1016 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j972 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1016 <|@
result v108|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:239) [bci: 410] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1260 
lastLocationAccess: - 
=== Succesors ===
next: v1017 
=== Usages ===
v1261 
=== Predecessor ===
v999 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1260 lastLocationAccess: - #next: v1017  <|@  <|@
f <@~|@floating>@ <|@
tid v1261 <|@
result [v108|QWORD + v106|QWORD * 1 - 8] <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j1016 
index: j1015 
=== Succesors ===
=== Usages ===
v1017 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1016 index: j1015  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1017 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card-Queue-Log
location: GC-Card-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:244) [bci: 438] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1261 
lastLocationAccess: - 
value: j1009 
stateAfter: - 
=== Succesors ===
next: v1018 
=== Usages ===
=== Predecessor ===
j1016 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1261 lastLocationAccess: - value: j1009 stateAfter: - #next: v1018  <|@  <|@
f <@~|@floating>@ <|@
tid j1011 <|@
result v109|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:240) [bci: 424] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: i64
=== Inputs ===
x: j1015 
y: j831 
=== Succesors ===
=== Usages ===
v1018 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j1015 y: j831  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1018 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card-Queue-Index
location: GC-Card-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:245) [bci: 452] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1259 
lastLocationAccess: - 
value: j1011 
stateAfter: - 
=== Succesors ===
next: v1004 
=== Usages ===
=== Predecessor ===
v1017 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1259 lastLocationAccess: - value: j1011 stateAfter: - #next: v1004  <|@  <|@
f <@*|@fixed>@ <|@
tid v1004 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v983 
=== Predecessor ===
v1018 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v108|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v108|QWORD + v106|QWORD * 1 - 8], y: v107|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v109|QWORD = LEA [v106|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v109|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B73" "B75" "B77" "B79" "B82" "B81" 
    successors "B84" "B85" 
    xhandlers
    flags 
    probability 4592437312858669387
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v983 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v982 v984 v989 v994 v1004 v1006 
=== Succesors ===
next: v131 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v982 v984 v989 v994 v1004 v1006 #next: v131  <|@  <|@
f <@~|@floating>@ <|@
tid i126 <|@
result int[7|0x7] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:649) [bci: 160]
rawvalue: 7
stableDimension: 0
stamp: i32 [7]
stampKind: i32
value: int[7|0x7]
=== Inputs ===
=== Succesors ===
=== Usages ===
v127 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v127 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:649) [bci: 162]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@4dc6bd49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i84 
y: i126 
=== Succesors ===
=== Usages ===
v131 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i84 y: i126  <|@  <|@
f <@*|@fixed>@ <|@
tid v131 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:649) [bci: 162]
profileData: PROFILED designatedSuccessorProbability: 0.9999886211240704
stamp: void
=== Inputs ===
condition: v127 
=== Succesors ===
trueSuccessor: v130 
falseSuccessor: v128 
=== Usages ===
=== Predecessor ===
v983 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v127 #trueSuccessor: v130 #falseSuccessor: v128  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v81|DWORD trueDestinationProbability: 0.9999886211240704 condition: < trueDestination: B83 -> B84 falseDestination: B83 -> B85 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" 
    xhandlers
    flags 
    probability 4592437224411893480
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v130 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:659) [bci: 222]
stamp: void
=== Inputs ===
=== Succesors ===
next: v129 
=== Usages ===
=== Predecessor ===
v131 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v129  <|@  <|@
f <@*|@fixed>@ <|@
tid v129 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:659) [bci: 222]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v77 
=== Predecessor ===
v130 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v83|QWORD[.]] destination: B84 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" 
    xhandlers
    flags 
    probability 4518403274531071726
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v128 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:650) [bci: 165]
stamp: void
=== Inputs ===
=== Succesors ===
next: v133 
=== Usages ===
=== Predecessor ===
v131 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v133  <|@  <|@
tid v384 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:650) [bci: 169]
referencedType: [null]
returnStamp: void
signature: [HotSpotType<Ljava/util/HashMap;, resolved>, UnresolvedJavaType<[Ljava/util/HashMap$Node;>, HotSpotResolvedPrimitiveType<int>]
stamp: void
targetMethod: HotSpotMethod<HashMap.treeifyBin(HashMap$Node[], int)>
=== Inputs ===
arguments: a1 a26 i2 
=== Succesors ===
=== Usages ===
v133 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a26 i2  <|@  <|@
tid ?652 <|@
d <@d|@=== Debug Properties ===
bci: 169
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
localsSize: 13
locksSize: 0
sourceFile: HashMap.java
sourceLine: 650
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 - - a4 i5 i6 - - - - a353 
=== Succesors ===
=== Usages ===
v133 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - a4 i5 i6 - - - - a353  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v133 <|@
d <@d|@=== Debug Properties ===
bci: 169
identity: ANY_LOCATION
inlineControl: Normal
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:650) [bci: 169]
polymorphic: false
stamp: void
targetMethod: Direct#HashMap.treeifyBin
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v384 
stateDuring: ?652 
=== Succesors ===
next: v135 
=== Usages ===
=== Predecessor ===
v128 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v384 stateDuring: ?652 #next: v135  <|@  <|@
f <@*|@fixed>@ <|@
tid v135 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:659) [bci: 222]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v77 
=== Predecessor ===
v133 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:650) [bci: 169]
locals: v0|QWORD[.] - - v3|QWORD[.] v4|DWORD v5|DWORD - - - - v83|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<HashMap.treeifyBin(HashMap$Node[], int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:169] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v83|QWORD[.]] destination: B85 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B50" "B55" "B64" "B84" "B85" "B63" "B53" 
    successors "B87" "B100" 
    xhandlers
    flags 
    probability 4595548303301553864
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a79 <|@
result v110|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:659) [bci: 222]
stamp: a java.util.HashMap$Node
valueDescription: a java.lang.Object
=== Inputs ===
merge: v77 
values: a304 a74 a353 a353 a353 a353 a304 
=== Succesors ===
=== Usages ===
?137 v138 j1070 v396 v1203 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v77 values: a304 a74 a353 a353 a353 a353 a304  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v77 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:659) [bci: 222]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v76 v78 v104 v129 v135 v136 v188 
=== Succesors ===
next: v144 
=== Usages ===
a79 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v76 v78 v104 v129 v135 v136 v188 #next: v144  <|@  <|@
f <@~|@floating>@ <|@
tid v138 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:659) [bci: 224]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a79 
=== Succesors ===
=== Usages ===
v144 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a79  <|@  <|@
f <@*|@fixed>@ <|@
tid v144 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:659) [bci: 224]
profileData: PROFILED designatedSuccessorProbability: 0.6091185940042786
stamp: void
=== Inputs ===
condition: v138 
=== Succesors ===
trueSuccessor: v143 
falseSuccessor: v139 
=== Usages ===
=== Predecessor ===
v77 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v138 #trueSuccessor: v143 #falseSuccessor: v139  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v110|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v110|QWORD[.], y: v110|QWORD[.]) trueDestinationProbability: 0.6091185940042786 condition: = trueDestination: B86 -> B87 falseDestination: B86 -> B100 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B88" 
    xhandlers
    flags 
    probability 4592437118697206803
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v143 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:667) [bci: 259]
stamp: void
=== Inputs ===
=== Succesors ===
next: v142 
=== Usages ===
=== Predecessor ===
v144 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v142  <|@  <|@
f <@*|@fixed>@ <|@
tid v142 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:667) [bci: 259]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v141 
=== Predecessor ===
v143 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B87 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B35" "B87" "B43" "B44" "B41" "B39" "B37" 
    successors "B89" "B90" 
    xhandlers
    flags 
    probability 4606558935301518032
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v141 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:667) [bci: 259]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v140 v142 v1128 v1129 v1130 v1131 v1132 
=== Succesors ===
next: i1156 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v140 v142 v1128 v1129 v1130 v1131 v1132 #next: i1156  <|@  <|@
f <@~|@floating>@ <|@
tid v1206 <|@
result [v0|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i1156 v401 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1156 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: HashMap.modCount
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:667) [bci: 261]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1206 
lastLocationAccess: - 
=== Succesors ===
next: v401 
=== Usages ===
i165 
=== Predecessor ===
v141 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1206 lastLocationAccess: - #next: v401  <|@  <|@
f <@~|@floating>@ <|@
tid i165 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:667) [bci: 265]
stamp: i32
=== Inputs ===
x: i1156 
y: i29 
=== Succesors ===
=== Usages ===
v401 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i1156 y: i29  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v401 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: HashMap.modCount
location: HashMap.modCount
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:667) [bci: 266]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1206 
lastLocationAccess: - 
value: i165 
stateAfter: - 
=== Succesors ===
next: i1157 
=== Usages ===
=== Predecessor ===
i1156 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1206 lastLocationAccess: - value: i165 stateAfter: - #next: i1157  <|@  <|@
f <@~|@floating>@ <|@
tid v1207 <|@
result [v0|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i1157 v404 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1157 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: HashMap.size
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:668) [bci: 271]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1207 
lastLocationAccess: - 
=== Succesors ===
next: v404 
=== Usages ===
i169 
=== Predecessor ===
v401 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1207 lastLocationAccess: - #next: v404  <|@  <|@
f <@~|@floating>@ <|@
tid i169 <|@
result v112|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:668) [bci: 275]
stamp: i32
=== Inputs ===
x: i1157 
y: i29 
=== Succesors ===
=== Usages ===
v404 v173 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i1157 y: i29  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v404 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: HashMap.size
location: HashMap.size
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:668) [bci: 277]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1207 
lastLocationAccess: - 
value: i169 
stateAfter: - 
=== Succesors ===
next: i1158 
=== Usages ===
=== Predecessor ===
i1157 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1207 lastLocationAccess: - value: i169 stateAfter: - #next: i1158  <|@  <|@
f <@~|@floating>@ <|@
tid v1208 <|@
result [v0|QWORD[.] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i1158 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1158 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: HashMap.threshold
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:668) [bci: 281]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1208 
lastLocationAccess: - 
=== Succesors ===
next: v176 
=== Usages ===
v173 
=== Predecessor ===
v404 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1208 lastLocationAccess: - #next: v176  <|@  <|@
f <@~|@floating>@ <|@
tid v173 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:668) [bci: 284]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@4dc6bd49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1158 
y: i169 
=== Succesors ===
=== Usages ===
v176 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i1158 y: i169  <|@  <|@
f <@*|@fixed>@ <|@
tid v176 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:668) [bci: 284]
profileData: PROFILED designatedSuccessorProbability: 7.853038846579175E-4
stamp: void
=== Inputs ===
condition: v173 
=== Succesors ===
trueSuccessor: v175 
falseSuccessor: v174 
=== Usages ===
=== Predecessor ===
i1158 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v173 #trueSuccessor: v175 #falseSuccessor: v174  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction INC [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v111|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction v112|DWORD = ADD (x: v111|DWORD, ~y: [v0|QWORD[.] + 20]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v112|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v112|DWORD, y: [v0|QWORD[.] + 28]) trueDestinationProbability: 7.853038846579175E-4 condition: > trueDestination: B88 -> B89 falseDestination: B88 -> B90 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B91" 
    xhandlers
    flags 
    probability 4559880998172045651
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v175 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:669) [bci: 287]
stamp: void
=== Inputs ===
=== Succesors ===
next: a178 
=== Usages ===
=== Predecessor ===
v176 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a178  <|@  <|@
tid v419 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:669) [bci: 288]
referencedType: [null]
returnStamp: a java.util.HashMap$Node[]
signature: [HotSpotType<Ljava/util/HashMap;, resolved>]
stamp: void
targetMethod: HotSpotMethod<HashMap.resize()>
=== Inputs ===
arguments: a1 
=== Succesors ===
=== Usages ===
a178 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1  <|@  <|@
tid ?653 <|@
d <@d|@=== Debug Properties ===
bci: 288
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
localsSize: 13
locksSize: 0
sourceFile: HashMap.java
sourceLine: 669
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 - - - - i6 
=== Succesors ===
=== Usages ===
a178 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - i6  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a178 <|@
result v113|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 288
identity: ANY_LOCATION
inlineControl: Normal
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:669) [bci: 288]
polymorphic: false
stamp: a java.util.HashMap$Node[]
targetMethod: Direct#HashMap.resize
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v419 
stateDuring: ?653 
=== Succesors ===
next: v182 
=== Usages ===
=== Predecessor ===
v175 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v419 stateDuring: ?653 #next: v182  <|@  <|@
f <@*|@fixed>@ <|@
tid v182 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:670) [bci: 292]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v181 
=== Predecessor ===
a178 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:669) [bci: 288]
locals: v0|QWORD[.] - - - - v5|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.resize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:288] <|@ <|@
      nr   -1  <|@ instruction v113|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B89 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B91" 
    xhandlers
    flags 
    probability 4606552351536966788
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v174 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:670) [bci: 292]
stamp: void
=== Inputs ===
=== Succesors ===
next: v180 
=== Usages ===
=== Predecessor ===
v176 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v180  <|@  <|@
f <@*|@fixed>@ <|@
tid v180 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:670) [bci: 292]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v181 
=== Predecessor ===
v174 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B90 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" "B89" 
    successors "B92" "B93" "B99" 
    xhandlers
    flags 
    probability 4606558935301518032
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v181 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:670) [bci: 292]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v180 v182 
=== Succesors ===
next: v241 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v180 v182 #next: v241  <|@  <|@
tid ?183 <|@
d <@d|@=== Debug Properties ===
bci: 292
bytecode: aload_0
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
localsSize: 13
locksSize: 0
sourceFile: HashMap.java
sourceLine: 670
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 - - - - i6 
=== Succesors ===
=== Usages ===
v1274 v1187 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - i6  <|@  <|@
f <@*|@fixed>@ <|@
tid v241 <|@
d <@d|@=== Debug Properties ===
hubs: [meta{HotSpotType<Ljava/util/HashMap;, resolved>}, meta{HotSpotType<Ljava/util/LinkedHashMap;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/replacements/SnippetTemplate$LRUCache;, resolved>}]
keySuccessors: [I@10641ff8
keys: [HotSpotType<Ljava/util/HashMap;, resolved>, HotSpotType<Ljava/util/LinkedHashMap;, resolved>, HotSpotType<Ljdk/graal/compiler/replacements/SnippetTemplate$LRUCache;, resolved>]
profileData: PROFILED keyProbabilities: [0.9996391032011914, 3.6023598855703206E-4, 6.608102515459184E-7, 0.0]
stamp: void
=== Inputs ===
value: v697 
=== Succesors ===
successors: v233 v237 v240 
=== Usages ===
=== Predecessor ===
v181 >@ <|@
instruction <@TypeSwitch|@jdk.graal.compiler.nodes.java.TypeSwitchNode>@ value: v697 #successors: v233 v237 v240  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v19|QWORD - keyConstants: [meta{HotSpotType<Ljava/util/HashMap;, resolved>}, meta{HotSpotType<Ljava/util/LinkedHashMap;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/replacements/SnippetTemplate$LRUCache;, resolved>}] keyTargets: [B91 -> B92, B91 -> B93, B91 -> B93] defaultTarget: B91 -> B99 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B97" 
    xhandlers
    flags 
    probability 4606555909645339483
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v233 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: v234 
=== Usages ===
=== Predecessor ===
v241 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v234  <|@  <|@
f <@*|@fixed>@ <|@
tid v234 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v230 
=== Predecessor ===
v233 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B92 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B94" "B95" 
    xhandlers
    flags 
    probability 4554832167497868566
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v237 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: v248 
=== Usages ===
=== Predecessor ===
v241 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v248  <|@  <|@
f <@~|@floating>@ <|@
tid v245 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 1]
at java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i6 
y: i15 
=== Succesors ===
=== Usages ===
v248 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i6 y: i15  <|@  <|@
f <@*|@fixed>@ <|@
tid v248 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 1]
at java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
profileData: PROFILED designatedSuccessorProbability: 0.4891304347826087
stamp: void
=== Inputs ===
condition: v245 
=== Succesors ===
trueSuccessor: v247 
falseSuccessor: v246 
=== Usages ===
=== Predecessor ===
v237 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v245 #trueSuccessor: v247 #falseSuccessor: v246  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v5|DWORD, y: v5|DWORD) trueDestinationProbability: 0.4891304347826087 condition: = trueDestination: B93 -> B94 falseDestination: B93 -> B95 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B97" 
    xhandlers
    flags 
    probability 4550193860395418340
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v247 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:328) [bci: 39]
at java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
stamp: void
=== Inputs ===
=== Succesors ===
next: v238 
=== Usages ===
=== Predecessor ===
v248 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v238  <|@  <|@
f <@*|@fixed>@ <|@
tid v238 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v230 
=== Predecessor ===
v247 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B94 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B96" "B98" 
    xhandlers
    flags 
    probability 4550463275345577801
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v246 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 4]
at java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1159 
=== Usages ===
=== Predecessor ===
v248 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a1159  <|@  <|@
f <@~|@floating>@ <|@
tid v1209 <|@
result [v0|QWORD[.] + 52] <|@
d <@d|@=== Debug Properties ===
displacement: 52
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a1159 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1159 <|@
result v114|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.LinkedHashMap$Entry
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: LinkedHashMap.head
memoryOrder: PLAIN
nodeSourcePosition: at java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 5]
at java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
stamp: n java.util.LinkedHashMap$Entry
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1209 
lastLocationAccess: - 
=== Succesors ===
next: v1187 
=== Usages ===
a411 v1273 
=== Predecessor ===
v246 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1209 lastLocationAccess: - #next: v1187  <|@  <|@
f <@~|@floating>@ <|@
tid v1273 <|@
result [v114|DWORD[_] * 8] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a1159 
=== Succesors ===
=== Usages ===
v1187 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1159  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1187 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: [null]
deoptSpeculation: [null]
stamp: void
=== Inputs ===
stateBefore: ?183 
object: v1273 
=== Succesors ===
next: v1160 
=== Usages ===
=== Predecessor ===
a1159 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?183 object: v1273 #next: v1160  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1160 <|@
result v115|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140436756758528 shift: 0)
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 15]
at java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
stamp: Klass*!(compressed base: 140436756758528 shift: 0)
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1223 
lastLocationAccess: - 
=== Succesors ===
next: v415 
=== Usages ===
v1125 
=== Predecessor ===
v1187 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1223 lastLocationAccess: - #next: v415  <|@  <|@
f <@~|@floating>@ <|@
tid v1125 <|@
result v116|QWORD <|@
d <@d|@=== Debug Properties ===
encoding: base: 140436756758528 shift: 0
nodeSourcePosition: at java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 15]
at java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v1160 
=== Succesors ===
=== Usages ===
v1210 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v1160  <|@  <|@
f <@~|@floating>@ <|@
tid v1210 <|@
result [v116|QWORD + 872] <|@
d <@d|@=== Debug Properties ===
displacement: 872
stamp: void*
stride: S1
=== Inputs ===
base: v1125 
index: - 
=== Succesors ===
=== Usages ===
v415 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v1125 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v415 <|@
result v118|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: Method*!
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 15]
at java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
stamp: Method*!
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1210 
lastLocationAccess: - 
=== Succesors ===
next: j417 
=== Usages ===
v1211 v418 
=== Predecessor ===
v1160 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1210 lastLocationAccess: - #next: j417  <|@  <|@
f <@~|@floating>@ <|@
tid v1211 <|@
result [v118|QWORD + 64] <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: v415 
index: - 
=== Succesors ===
=== Usages ===
j417 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v415 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j417 <|@
result v119|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 15]
at java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1211 
lastLocationAccess: - 
=== Succesors ===
next: i253 
=== Usages ===
v418 
=== Predecessor ===
v415 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1211 lastLocationAccess: - #next: i253  <|@  <|@
f <@~|@floating>@ <|@
tid a411 <|@
result v120|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 5]
at java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
op: Uncompress
stamp: a java.util.LinkedHashMap$Entry
=== Inputs ===
value: a1159 
=== Succesors ===
=== Usages ===
?254 v418 ?655 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1159  <|@  <|@
tid v418 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 15]
at java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
referencedType: [null]
returnStamp: i32 [0 - 1] bits:0...0x
signature: [HotSpotType<Ljava/util/LinkedHashMap;, resolved>, UnresolvedJavaType<Ljava/util/Map$Entry;>]
stamp: void
targetMethod: HotSpotMethod<LinkedHashMap.removeEldestEntry(Map$Entry)>
=== Inputs ===
computedAddress: j417 
metaspaceMethod: v415 
arguments: a1 a411 
=== Succesors ===
=== Usages ===
i253 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotIndirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotIndirectCallTargetNode>@ computedAddress: j417 metaspaceMethod: v415 arguments: a1 a411  <|@  <|@
tid ?262 <|@
d <@d|@=== Debug Properties ===
bci: 295
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
localsSize: 13
locksSize: 0
sourceFile: HashMap.java
sourceLine: 670
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
=== Succesors ===
=== Usages ===
?254 ?655 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: -  <|@  <|@
tid ?655 <|@
d <@d|@=== Debug Properties ===
bci: 15
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<LinkedHashMap.afterNodeInsertion(boolean)>
localsSize: 4
locksSize: 0
sourceFile: LinkedHashMap.java
sourceLine: 324
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?262 
values: a1 - a411 
=== Succesors ===
=== Usages ===
i253 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?262 values: a1 - a411  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i253 <|@
result v121|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 15
identity: ANY_LOCATION
inlineControl: Normal
nodeSourcePosition: at java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 15]
at java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
polymorphic: true
stamp: i32 [0 - 1] bits:0...0x
targetMethod: Indirect#LinkedHashMap.removeEldestEntry
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v418 
stateDuring: ?655 
=== Succesors ===
next: v633 
=== Usages ===
?254 v255 
=== Predecessor ===
j417 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v418 stateDuring: ?655 #next: v633  <|@  <|@
f <@~|@floating>@ <|@
tid v255 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 18]
at java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i253 
y: i15 
=== Succesors ===
=== Usages ===
v633 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i253 y: i15  <|@  <|@
f <@*|@fixed>@ <|@
tid v633 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 18]
at java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v255 
=== Succesors ===
trueSuccessor: v631 
falseSuccessor: v632 
=== Usages ===
=== Predecessor ===
i253 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v255 #trueSuccessor: v631 #falseSuccessor: v632  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v114|DWORD[_] = MOV [v0|QWORD[.] + 52] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:670) [bci: 292]
locals: v0|QWORD[.] - - - - v5|DWORD - - - - - - - 
>@ <|@ instruction NULLCHECK [v114|DWORD[_] * 8] state [bci:292] <|@ <|@
      nr   -1  <|@ instruction v115|DWORD = MOV [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v117|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr   -1  <|@ instruction v116|QWORD = UNCOMPRESSPOINTER (input: v115|DWORD, ~baseRegister: v117|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v118|QWORD = MOV [v116|QWORD + 872] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v119|QWORD = MOV [v118|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v120|QWORD[.] = UNCOMPRESSPOINTER (input: v114|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v120|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v118|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v119|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 15]
locals: v0|QWORD[.] - v120|QWORD[.] - 
java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
locals: - - - - - - - - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<LinkedHashMap.removeEldestEntry(Map$Entry)> state [bci:15, 295] <|@ <|@
      nr   -1  <|@ instruction v121|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v121|DWORD, y: v121|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B95 -> B96 falseDestination: B95 -> B98 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B97" 
    xhandlers
    flags 
    probability 4550463275345577801
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v631 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:328) [bci: 39]
at java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
stamp: void
=== Inputs ===
=== Succesors ===
next: v263 
=== Usages ===
=== Predecessor ===
v633 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v263  <|@  <|@
f <@*|@fixed>@ <|@
tid v263 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:328) [bci: 39]
at java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v230 
=== Predecessor ===
v631 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B96 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B92" "B94" "B96" 
    successors 
    xhandlers
    flags 
    probability 4606558935301518031
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v230 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v234 v238 v263 
=== Succesors ===
next: v187 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v234 v238 v263 #next: v187  <|@  <|@
f <@*|@fixed>@ <|@
tid v187 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:671) [bci: 299]
stamp: void
=== Inputs ===
memoryMap: - 
result: a9 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v230 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: a9  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v632 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 18]
at java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
stamp: void
=== Inputs ===
=== Succesors ===
next: v630 
=== Usages ===
=== Predecessor ===
v633 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v630  <|@  <|@
tid ?254 <|@
d <@d|@=== Debug Properties ===
bci: 18
bytecode: ifeq
code: ResolvedJavaMethodBytecode<LinkedHashMap.afterNodeInsertion(boolean)>
localsSize: 4
locksSize: 0
nodeSourcePosition: at java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 15]
at java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
sourceFile: LinkedHashMap.java
sourceLine: 324
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?262 
values: i253 a1 - a411 
=== Succesors ===
=== Usages ===
v630 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?262 values: i253 a1 - a411  <|@  <|@
f <@*|@fixed>@ <|@
tid v630 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 0
mayConvertToGuard: true
nodeSourcePosition: at java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 18]
at java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
reason: UnreachedCode
speculation: {0x0000000000002814[index: 320, len: 20, hash: 0x77a90074]: UnreachedCode@5[HotSpotMethod<LinkedHashMap.afterNodeInsertion(boolean)>, 21]}
stamp: void
=== Inputs ===
stateBefore: ?254 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v632 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?254  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -161299 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 10260 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 18]
stack: v121|DWORD 
locals: v0|QWORD[.] - v120|QWORD[.] - 
java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
locals: - - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:18, 295] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v240 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: v1274 
=== Usages ===
=== Predecessor ===
v241 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1274  <|@  <|@
f <@*|@fixed>@ <|@
tid v1274 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 239
mayConvertToGuard: true
reason: TypeCheckedInliningViolated
speculation: {0x0000000000002314[index: 280, len: 20, hash: 0x49e68ffd]: FallbackDeopt@8[HotSpotMethod<HashMap.putVal(int, Object, Object, boolean, boolean)>, 295, FALSE, jdk.graal.compiler.phases.common.inlining.InliningUtil$ReceiverTypeSpeculationContext, HotSpotType<Ljava/util/HashMap;, resolved>, HotSpotType<Ljava/util/LinkedHashMap;, resolved>, HotSpotType<Ljdk/graal/compiler/replacements/SnippetTemplate$LRUCache;, resolved>]}
stamp: void
=== Inputs ===
stateBefore: ?183 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v240 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?183  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -61235 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 8980 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:670) [bci: 292]
locals: v0|QWORD[.] - - - - v5|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:292] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B101" "B119" 
    xhandlers
    flags 
    probability 4589652288651159933
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v139 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:660) [bci: 227]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1161 
=== Usages ===
=== Predecessor ===
v144 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a1161  <|@  <|@
f <@~|@floating>@ <|@
tid v1203 <|@
result [v110|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a79 
index: - 
=== Succesors ===
=== Usages ===
a1161 v398 j1028 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a79 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1161 <|@
result v122|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: HashMap$Node.value
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:660) [bci: 229]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1203 
lastLocationAccess: - 
=== Succesors ===
next: v149 
=== Usages ===
a390 v1272 
=== Predecessor ===
v139 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1203 lastLocationAccess: - #next: v149  <|@  <|@
f <@~|@floating>@ <|@
tid v146 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:661) [bci: 236]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i5 
y: i15 
=== Succesors ===
=== Usages ===
v149 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i5 y: i15  <|@  <|@
f <@*|@fixed>@ <|@
tid v149 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:661) [bci: 236]
profileData: PROFILED designatedSuccessorProbability: 0.9999962001170364
stamp: void
=== Inputs ===
condition: v146 
=== Succesors ===
trueSuccessor: v148 
falseSuccessor: v147 
=== Usages ===
=== Predecessor ===
a1161 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v146 #trueSuccessor: v148 #falseSuccessor: v147  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v122|DWORD[_] = MOV [v110|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v4|DWORD, y: v4|DWORD) trueDestinationProbability: 0.9999962001170364 condition: = trueDestination: B100 -> B101 falseDestination: B100 -> B119 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B102" "B103" 
    xhandlers
    flags 
    probability 4589652269697845341
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v148 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:662) [bci: 244]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1066 
=== Usages ===
=== Predecessor ===
v149 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1066  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1066 <|@
d <@d|@=== Debug Properties ===
locations: [GC-SATB-Queue-Log, GC-SATB-Marking-Active, GC-SATB-Queue-Index, GC-SATB-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1027 
=== Usages ===
=== Predecessor ===
v148 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j1027  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1027 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:127) [bci: 10]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1028 
=== Usages ===
v1263 v1265 v1266 
=== Predecessor ===
v1066 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j1028  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1028 <|@
result [v110|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:129) [bci: 21]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1203 
=== Succesors ===
next: i1053 
=== Usages ===
v1264 
=== Predecessor ===
j1027 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: v1203 #next: i1053  <|@  <|@
f <@~|@floating>@ <|@
tid v1263 <|@
result [r15|QWORD + 64] <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: j1027 
index: - 
=== Succesors ===
=== Usages ===
i1053 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1027 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1053 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Marking-Active
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:130) [bci: 35]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1263 
lastLocationAccess: - 
=== Succesors ===
next: v1032 
=== Usages ===
v1060 
=== Predecessor ===
j1028 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1263 lastLocationAccess: - #next: v1032  <|@  <|@
f <@~|@floating>@ <|@
tid v1060 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1053 
y: i840 
=== Succesors ===
=== Usages ===
v1032 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i1053 y: i840  <|@  <|@
f <@*|@fixed>@ <|@
tid v1032 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 217]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v1060 
=== Succesors ===
trueSuccessor: v1031 
falseSuccessor: v1030 
=== Usages ===
=== Predecessor ===
i1053 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1060 #trueSuccessor: v1031 #falseSuccessor: v1030  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B103 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B108" 
    xhandlers
    flags 
    probability 4589138949298219176
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1031 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1035 
=== Usages ===
=== Predecessor ===
v1032 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1035  <|@  <|@
f <@*|@fixed>@ <|@
tid v1035 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1036 
=== Predecessor ===
v1031 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B102 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" "B105" 
    xhandlers
    flags 
    probability 4574630580609171603
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1030 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:150) [bci: 220]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1054 
=== Usages ===
=== Predecessor ===
v1032 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a1054  <|@  <|@
f <@~|@floating>@ <|@
tid v1264 <|@
result [v123|QWORD[.+]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j1028 
index: - 
=== Succesors ===
=== Usages ===
a1054 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1028 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1054 <|@
result v124|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1264 
lastLocationAccess: - 
=== Succesors ===
next: v1039 
=== Usages ===
a1055 v1061 
=== Predecessor ===
v1030 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1264 lastLocationAccess: - #next: v1039  <|@  <|@
f <@~|@floating>@ <|@
tid v1061 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 296]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a1054 
=== Succesors ===
=== Usages ===
v1039 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a1054  <|@  <|@
f <@*|@fixed>@ <|@
tid v1039 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 307]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v1061 
=== Succesors ===
trueSuccessor: v1038 
falseSuccessor: v1034 
=== Usages ===
=== Predecessor ===
a1054 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1061 #trueSuccessor: v1038 #falseSuccessor: v1034  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v123|QWORD[.+] = LEA [v110|QWORD[.] + 20] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v124|DWORD[_] = MOV [v123|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v124|DWORD[_], y: v124|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B103 -> B104 falseDestination: B103 -> B105 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B108" 
    xhandlers
    flags 
    probability 4559523670035962382
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1038 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1037 
=== Usages ===
=== Predecessor ===
v1039 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1037  <|@  <|@
f <@*|@fixed>@ <|@
tid v1037 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1036 
=== Predecessor ===
v1038 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B104 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B106" "B107" 
    xhandlers
    flags 
    probability 4573832524763622737
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1034 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:163) [bci: 310]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1056 
=== Usages ===
=== Predecessor ===
v1039 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j1056  <|@  <|@
f <@~|@floating>@ <|@
tid v1265 <|@
result [r15|QWORD + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: j1027 
index: - 
=== Succesors ===
=== Usages ===
j1056 v1059 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1027 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1056 <|@
result v125|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:166) [bci: 327]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1265 
lastLocationAccess: - 
=== Succesors ===
next: v1044 
=== Usages ===
v1041 j1052 v1267 
=== Predecessor ===
v1034 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1265 lastLocationAccess: - #next: v1044  <|@  <|@
f <@~|@floating>@ <|@
tid v1041 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 341]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1056 
y: j570 
=== Succesors ===
=== Usages ===
v1044 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j1056 y: j570  <|@  <|@
f <@~|@floating>@ <|@
tid a1055 <|@
result v126|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a1054 
=== Succesors ===
=== Usages ===
j1046 v1049 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1054  <|@  <|@
f <@*|@fixed>@ <|@
tid v1044 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 347]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v1041 
=== Succesors ===
trueSuccessor: v1043 
falseSuccessor: v1042 
=== Usages ===
=== Predecessor ===
j1056 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1041 #trueSuccessor: v1043 #falseSuccessor: v1042  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v125|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v126|QWORD[.] = UNCOMPRESSPOINTER (input: v124|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v125|QWORD, y: v125|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B105 -> B106 falseDestination: B105 -> B107 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B108" 
    xhandlers
    flags 
    probability 4558885225359523289
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1043 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 410]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1049 
=== Usages ===
=== Predecessor ===
v1044 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1049  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1049 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_pre(Object)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-SATB-Queue-Index, GC-SATB-Queue-Buffer, GC-SATB-Queue-Log], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_pre
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(ForeignCallDescriptor, Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(G1WriteBarrierSnippets.java:409) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 413]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: a1055 
=== Succesors ===
next: v1050 
=== Usages ===
=== Predecessor ===
v1043 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: a1055 #next: v1050  <|@  <|@
f <@*|@fixed>@ <|@
tid v1050 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1036 
=== Predecessor ===
v1049 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v126|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B106 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B108" 
    xhandlers
    flags 
    probability 4573114274502628758
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1042 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 350]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1057 
=== Usages ===
=== Predecessor ===
v1044 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j1057  <|@  <|@
f <@~|@floating>@ <|@
tid v1266 <|@
result [r15|QWORD + 56] <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: j1027 
index: - 
=== Succesors ===
=== Usages ===
j1057 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1027 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1057 <|@
result v127|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 359]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1266 
lastLocationAccess: - 
=== Succesors ===
next: j1046 
=== Usages ===
v1267 
=== Predecessor ===
v1042 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1266 lastLocationAccess: - #next: j1046  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1046 <|@
result v126|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 384]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1055 
=== Succesors ===
next: v1058 
=== Usages ===
v1058 
=== Predecessor ===
j1057 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a1055 #next: v1058  <|@  <|@
f <@~|@floating>@ <|@
tid v1267 <|@
result [v127|QWORD + v125|QWORD * 1 - 8] <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j1057 
index: j1056 
=== Succesors ===
=== Usages ===
v1058 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1057 index: j1056  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1058 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Log
location: GC-SATB-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 390]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1267 
lastLocationAccess: - 
value: j1046 
stateAfter: - 
=== Succesors ===
next: v1059 
=== Usages ===
=== Predecessor ===
j1046 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1267 lastLocationAccess: - value: j1046 stateAfter: - #next: v1059  <|@  <|@
f <@~|@floating>@ <|@
tid j1052 <|@
result v128|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: i64
=== Inputs ===
x: j1056 
y: j831 
=== Succesors ===
=== Usages ===
v1059 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j1056 y: j831  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1059 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Index
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:173) [bci: 404]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1265 
lastLocationAccess: - 
value: j1052 
stateAfter: - 
=== Succesors ===
next: v1048 
=== Usages ===
=== Predecessor ===
v1058 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1265 lastLocationAccess: - value: j1052 stateAfter: - #next: v1048  <|@  <|@
f <@*|@fixed>@ <|@
tid v1048 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1036 
=== Predecessor ===
v1059 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v127|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v127|QWORD + v125|QWORD * 1 - 8], y: v126|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v128|QWORD = LEA [v125|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v128|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B107 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B102" "B104" "B107" "B106" 
    successors "B109" "B110" 
    xhandlers
    flags 
    probability 4589652269697845341
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1036 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1035 v1037 v1048 v1050 
=== Succesors ===
next: v398 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v1035 v1037 v1048 v1050 #next: v398  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v398 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: HashMap$Node.value
location: HashMap$Node.value
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1203 
lastLocationAccess: - 
value: a397 
stateAfter: - 
=== Succesors ===
next: v1122 
=== Usages ===
=== Predecessor ===
v1036 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1203 lastLocationAccess: - value: a397 stateAfter: - #next: v1122  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1122 <|@
d <@d|@=== Debug Properties ===
locations: [GC-Card, GC-Card-Queue-Log, GC-Card-Queue-Index, GC-Card-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1068 
=== Usages ===
=== Predecessor ===
v398 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j1068  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1068 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:184) [bci: 1] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: a1069 
=== Usages ===
v1268 v1269 
=== Predecessor ===
v1122 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: a1069  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1069 <|@
result v3|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.FixedValueAnchorNode.getObject(Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:185) [bci: 7] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: a java.lang.Object
=== Inputs ===
object: a4 
=== Succesors ===
next: j1070 
=== Usages ===
j1071 
=== Predecessor ===
j1068 >@ <|@
instruction <@FixedValueAnchor|@jdk.graal.compiler.nodes.extended.FixedValueAnchorNode>@ object: a4 #next: j1070  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1070 <|@
result v110|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:197) [bci: 56] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a79 
=== Succesors ===
next: j1071 
=== Usages ===
j1072 j1083 
=== Predecessor ===
a1069 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a79 #next: j1071  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1071 <|@
result v3|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:208) [bci: 150] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1069 
=== Succesors ===
next: v1075 
=== Usages ===
j1072 v1076 
=== Predecessor ===
j1070 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a1069 #next: v1075  <|@  <|@
f <@~|@floating>@ <|@
tid j1072 <|@
result v129|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:212) [bci: 165] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: i64
=== Inputs ===
x: j1070 
y: j1071 
=== Succesors ===
=== Usages ===
v1104 
=== Predecessor ===
- >@ <|@
instruction <@^|@jdk.graal.compiler.nodes.calc.XorNode>@ x: j1070 y: j1071  <|@  <|@
f <@~|@floating>@ <|@
tid v1104 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:215) [bci: 193] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
=== Inputs ===
x: j1072 
y: j887 
=== Succesors ===
=== Usages ===
v1075 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@jdk.graal.compiler.nodes.calc.IntegerTestNode>@ x: j1072 y: j887  <|@  <|@
f <@*|@fixed>@ <|@
tid v1075 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:215) [bci: 201] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v1104 
=== Succesors ===
trueSuccessor: v1074 
falseSuccessor: v1073 
=== Usages ===
=== Predecessor ===
j1071 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1104 #trueSuccessor: v1074 #falseSuccessor: v1073  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v110|QWORD[.] + 20], y: v22|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v129|QWORD[*] = XOR (x: v110|QWORD[.], y: v3|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v129|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B108 -> B109 falseDestination: B108 -> B110 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B120" 
    xhandlers
    flags 
    probability 4574630580609171603
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1074 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
=== Inputs ===
=== Succesors ===
next: v157 
=== Usages ===
=== Predecessor ===
v1075 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v157  <|@  <|@
f <@*|@fixed>@ <|@
tid v157 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:663) [bci: 250]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v156 
=== Predecessor ===
v1074 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B109 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" "B112" 
    xhandlers
    flags 
    probability 4589138949298219176
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1073 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:216) [bci: 204] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1082 
=== Usages ===
=== Predecessor ===
v1075 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1082  <|@  <|@
f <@~|@floating>@ <|@
tid v1076 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:218) [bci: 218] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1071 
y: j570 
=== Succesors ===
=== Usages ===
v1082 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j1071 y: j570  <|@  <|@
f <@*|@fixed>@ <|@
tid v1082 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:218) [bci: 226] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v1076 
=== Succesors ===
trueSuccessor: v1081 
falseSuccessor: v1077 
=== Usages ===
=== Predecessor ===
v1073 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1076 #trueSuccessor: v1081 #falseSuccessor: v1077  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v3|QWORD[.], y: v3|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B110 -> B111 falseDestination: B110 -> B112 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B120" 
    xhandlers
    flags 
    probability 4573832524763622738
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1081 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1137 
=== Usages ===
=== Predecessor ===
v1082 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1137  <|@  <|@
f <@*|@fixed>@ <|@
tid v1137 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v156 
=== Predecessor ===
v1081 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B111 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B113" "B114" 
    xhandlers
    flags 
    probability 4588241136471976702
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1077 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 229] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1108 
=== Usages ===
=== Predecessor ===
v1082 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i1108  <|@  <|@
f <@~|@floating>@ <|@
tid j1083 <|@
result v130|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.cardTableAddress(HotSpotG1WriteBarrierSnippets.java:131) [bci: 23]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 232] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: i64 [0 - 36028797018963967] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j1070 
y: i865 
=== Succesors ===
=== Usages ===
j1105 v1271 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j1070 y: i865  <|@  <|@
f <@~|@floating>@ <|@
tid v1271 <|@
result [v130|QWORD[*] + v21|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j1083 
index: j864 
=== Succesors ===
=== Usages ===
i1108 i1109 v1110 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1083 index: j864  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1108 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:223) [bci: 243] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1271 
lastLocationAccess: - 
=== Succesors ===
next: v1087 
=== Usages ===
v1115 
=== Predecessor ===
v1077 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1271 lastLocationAccess: - #next: v1087  <|@  <|@
f <@~|@floating>@ <|@
tid v1115 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:227) [bci: 265] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1108 
y: i901 
=== Succesors ===
=== Usages ===
v1087 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i1108 y: i901  <|@  <|@
f <@*|@fixed>@ <|@
tid v1087 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:227) [bci: 276] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v1115 
=== Succesors ===
trueSuccessor: v1086 
falseSuccessor: v1084 
=== Usages ===
=== Predecessor ===
i1108 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1115 #trueSuccessor: v1086 #falseSuccessor: v1084  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v130|QWORD[*] = SHR v110|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v130|QWORD[*] + v21|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B112 -> B113 falseDestination: B112 -> B114 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B120" 
    xhandlers
    flags 
    probability 4587433104928358475
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1086 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1136 
=== Usages ===
=== Predecessor ===
v1087 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1136  <|@  <|@
f <@*|@fixed>@ <|@
tid v1136 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v156 
=== Predecessor ===
v1086 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B113 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B115" "B116" 
    xhandlers
    flags 
    probability 4573114274502628759
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1084 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:228) [bci: 279] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1088 
=== Usages ===
=== Predecessor ===
v1087 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1088  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1088 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_LOAD
fence: STORE_LOAD
location: GC-Card
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.MembarNode.memoryBarrier(MembarNode$FenceKind, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:228) [bci: 285] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1109 
=== Usages ===
=== Predecessor ===
v1084 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: i1109  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1109 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:229) [bci: 294] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1271 
lastLocationAccess: - 
=== Succesors ===
next: v1092 
=== Usages ===
v1116 
=== Predecessor ===
v1088 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1271 lastLocationAccess: - #next: v1092  <|@  <|@
f <@~|@floating>@ <|@
tid v1116 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:230) [bci: 308] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1109 
y: i840 
=== Succesors ===
=== Usages ===
v1092 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i1109 y: i840  <|@  <|@
f <@*|@fixed>@ <|@
tid v1092 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:230) [bci: 319] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v1116 
=== Succesors ===
trueSuccessor: v1091 
falseSuccessor: v1089 
=== Usages ===
=== Predecessor ===
i1109 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1116 #trueSuccessor: v1091 #falseSuccessor: v1089  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v130|QWORD[*] + v21|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B114 -> B115 falseDestination: B114 -> B116 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B120" 
    xhandlers
    flags 
    probability 4572467849267734178
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1091 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1135 
=== Usages ===
=== Predecessor ===
v1092 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1135  <|@  <|@
f <@*|@fixed>@ <|@
tid v1135 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v156 
=== Predecessor ===
v1091 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B115 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B117" "B118" 
    xhandlers
    flags 
    probability 4558310625150728107
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1089 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:231) [bci: 322] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1110 
=== Usages ===
=== Predecessor ===
v1092 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1110  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1110 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:232) [bci: 358] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1271 
lastLocationAccess: - 
value: i840 
stateAfter: - 
=== Succesors ===
next: j1111 
=== Usages ===
=== Predecessor ===
v1089 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1271 lastLocationAccess: - value: i840 stateAfter: - #next: j1111  <|@  <|@
f <@~|@floating>@ <|@
tid v1268 <|@
result [r15|QWORD + 72] <|@
d <@d|@=== Debug Properties ===
displacement: 72
stamp: void*
stride: S1
=== Inputs ===
base: j1068 
index: - 
=== Succesors ===
=== Usages ===
j1111 v1114 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1068 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1111 <|@
result v131|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:237) [bci: 378] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1268 
lastLocationAccess: - 
=== Succesors ===
next: v1097 
=== Usages ===
v1094 j1107 v1270 
=== Predecessor ===
v1110 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1268 lastLocationAccess: - #next: v1097  <|@  <|@
f <@~|@floating>@ <|@
tid v1094 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:238) [bci: 392] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1111 
y: j570 
=== Succesors ===
=== Usages ===
v1097 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j1111 y: j570  <|@  <|@
f <@~|@floating>@ <|@
tid j1105 <|@
result v132|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.cardTableAddress(HotSpotG1WriteBarrierSnippets.java:131) [bci: 28]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 232] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: i64 [140438306553856 - 36169235325517823] bits:00000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j1083 
y: j864 
=== Succesors ===
=== Usages ===
v1101 v1113 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j1083 y: j864  <|@  <|@
f <@*|@fixed>@ <|@
tid v1097 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:238) [bci: 398] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v1094 
=== Succesors ===
trueSuccessor: v1096 
falseSuccessor: v1095 
=== Usages ===
=== Predecessor ===
j1111 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1094 #trueSuccessor: v1096 #falseSuccessor: v1095  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v130|QWORD[*] + v21|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v131|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v132|QWORD[*] = ADD (x: v130|QWORD[*], y: v21|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v131|QWORD, y: v131|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B116 -> B117 falseDestination: B116 -> B118 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B120" 
    xhandlers
    flags 
    probability 4543399067768740112
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1096 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:247) [bci: 458] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1101 
=== Usages ===
=== Predecessor ===
v1097 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1101  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1101 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_post(Word)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-Card-Queue-Index, GC-Card-Queue-Buffer, GC-Card-Queue-Log, GC-Card], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_post
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostBarrierStub(ForeignCallDescriptor, Word) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostBarrierStub(G1WriteBarrierSnippets.java:413) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:247) [bci: 461] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: j1105 
=== Succesors ===
next: v1133 
=== Usages ===
=== Predecessor ===
v1096 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: j1105 #next: v1133  <|@  <|@
f <@*|@fixed>@ <|@
tid v1133 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v156 
=== Predecessor ===
v1101 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v132|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B117 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B120" 
    xhandlers
    flags 
    probability 4557793484962812442
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1095 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:239) [bci: 401] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1112 
=== Usages ===
=== Predecessor ===
v1097 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j1112  <|@  <|@
f <@~|@floating>@ <|@
tid v1269 <|@
result [r15|QWORD + 88] <|@
d <@d|@=== Debug Properties ===
displacement: 88
stamp: void*
stride: S1
=== Inputs ===
base: j1068 
index: - 
=== Succesors ===
=== Usages ===
j1112 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1068 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1112 <|@
result v133|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:239) [bci: 410] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1269 
lastLocationAccess: - 
=== Succesors ===
next: v1113 
=== Usages ===
v1270 
=== Predecessor ===
v1095 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1269 lastLocationAccess: - #next: v1113  <|@  <|@
f <@~|@floating>@ <|@
tid v1270 <|@
result [v133|QWORD + v131|QWORD * 1 - 8] <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j1112 
index: j1111 
=== Succesors ===
=== Usages ===
v1113 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1112 index: j1111  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1113 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card-Queue-Log
location: GC-Card-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:244) [bci: 438] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1270 
lastLocationAccess: - 
value: j1105 
stateAfter: - 
=== Succesors ===
next: v1114 
=== Usages ===
=== Predecessor ===
j1112 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1270 lastLocationAccess: - value: j1105 stateAfter: - #next: v1114  <|@  <|@
f <@~|@floating>@ <|@
tid j1107 <|@
result v134|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:240) [bci: 424] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: i64
=== Inputs ===
x: j1111 
y: j831 
=== Succesors ===
=== Usages ===
v1114 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j1111 y: j831  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1114 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card-Queue-Index
location: GC-Card-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:245) [bci: 452] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1268 
lastLocationAccess: - 
value: j1107 
stateAfter: - 
=== Succesors ===
next: v1134 
=== Usages ===
=== Predecessor ===
v1113 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1268 lastLocationAccess: - value: j1107 stateAfter: - #next: v1134  <|@  <|@
f <@*|@fixed>@ <|@
tid v1134 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v156 
=== Predecessor ===
v1114 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v133|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v133|QWORD + v131|QWORD * 1 - 8], y: v132|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v134|QWORD = LEA [v131|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v134|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B118 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B120" 
    xhandlers
    flags 
    probability 4508568125070994604
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v147 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:661) [bci: 239]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1179 
=== Usages ===
=== Predecessor ===
v149 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1179  <|@  <|@
tid ?137 <|@
d <@d|@=== Debug Properties ===
bci: 222
bytecode: aload
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
localsSize: 13
locksSize: 0
sourceFile: HashMap.java
sourceLine: 659
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 - - a4 i5 i6 - - - - a79 
=== Succesors ===
=== Usages ===
v1179 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - a4 i5 i6 - - - - a79  <|@  <|@
f <@~|@floating>@ <|@
tid v1272 <|@
result [v122|DWORD[_] * 8] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a1161 
=== Succesors ===
=== Usages ===
v1179 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1161  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1179 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: [null]
deoptSpeculation: [null]
stamp: void
=== Inputs ===
stateBefore: ?137 
object: v1272 
=== Succesors ===
next: v155 
=== Usages ===
=== Predecessor ===
v147 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?137 object: v1272 #next: v155  <|@  <|@
f <@*|@fixed>@ <|@
tid v155 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:663) [bci: 250]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v156 
=== Predecessor ===
v1179 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:659) [bci: 222]
locals: v0|QWORD[.] - - v3|QWORD[.] v4|DWORD v5|DWORD - - - - v110|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [v122|DWORD[_] * 8] state [bci:222] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B119 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B119" "B109" "B117" "B118" "B115" "B113" "B111" 
    successors 
    xhandlers
    flags 
    probability 4589652288651159933
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v156 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:663) [bci: 250]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v155 v157 v1133 v1134 v1135 v1136 v1137 
=== Succesors ===
next: v393 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v155 v157 v1133 v1134 v1135 v1136 v1137 #next: v393  <|@  <|@
f <@~|@floating>@ <|@
tid v1204 <|@
result [v19|QWORD + 688] <|@
d <@d|@=== Debug Properties ===
displacement: 688
stamp: void*
stride: S1
=== Inputs ===
base: v697 
index: - 
=== Succesors ===
=== Usages ===
v393 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v697 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v393 <|@
result v135|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: Method*!
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:663) [bci: 253]
stamp: Method*!
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1204 
lastLocationAccess: - 
=== Succesors ===
next: j395 
=== Usages ===
v1205 v396 
=== Predecessor ===
v156 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1204 lastLocationAccess: - #next: j395  <|@  <|@
f <@~|@floating>@ <|@
tid v1205 <|@
result [v135|QWORD + 64] <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: v393 
index: - 
=== Succesors ===
=== Usages ===
j395 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v393 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j395 <|@
result v136|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:663) [bci: 253]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1205 
lastLocationAccess: - 
=== Succesors ===
next: v160 
=== Usages ===
v396 
=== Predecessor ===
v393 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1205 lastLocationAccess: - #next: v160  <|@  <|@
tid v396 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:663) [bci: 253]
referencedType: [null]
returnStamp: void
signature: [HotSpotType<Ljava/util/HashMap;, resolved>, UnresolvedJavaType<Ljava/util/HashMap$Node;>]
stamp: void
targetMethod: HotSpotMethod<HashMap.afterNodeAccess(HashMap$Node)>
=== Inputs ===
computedAddress: j395 
metaspaceMethod: v393 
arguments: a1 a79 
=== Succesors ===
=== Usages ===
v160 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotIndirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotIndirectCallTargetNode>@ computedAddress: j395 metaspaceMethod: v393 arguments: a1 a79  <|@  <|@
f <@~|@floating>@ <|@
tid a390 <|@
result v137|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:660) [bci: 229]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a1161 
=== Succesors ===
=== Usages ===
v162 ?654 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1161  <|@  <|@
tid ?654 <|@
d <@d|@=== Debug Properties ===
bci: 253
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
localsSize: 13
locksSize: 0
sourceFile: HashMap.java
sourceLine: 663
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: - - - - - - - - - - - - a390 
=== Succesors ===
=== Usages ===
v160 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: - - - - - - - - - - - - a390  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v160 <|@
d <@d|@=== Debug Properties ===
bci: 253
identity: ANY_LOCATION
inlineControl: Normal
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:663) [bci: 253]
polymorphic: true
stamp: void
targetMethod: Indirect#HashMap.afterNodeAccess
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v396 
stateDuring: ?654 
=== Succesors ===
next: v162 
=== Usages ===
=== Predecessor ===
j395 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v396 stateDuring: ?654 #next: v162  <|@  <|@
f <@*|@fixed>@ <|@
tid v162 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:664) [bci: 258]
stamp: void
=== Inputs ===
memoryMap: - 
result: a390 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v160 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: a390  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v135|QWORD = MOV [v19|QWORD + 688] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v136|QWORD = MOV [v135|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v137|QWORD[.] = UNCOMPRESSPOINTER (input: v122|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v110|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v135|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v136|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:663) [bci: 253]
locals: - - - - - - - - - - - - v137|QWORD[.] 
>@ <|@ instruction - = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<HashMap.afterNodeAccess(HashMap$Node)> state [bci:253] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v137|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v482 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:636) [bci: 40]
stamp: void
=== Inputs ===
=== Succesors ===
next: v663 
=== Usages ===
=== Predecessor ===
v483 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v663  <|@  <|@
f <@~|@floating>@ <|@
tid i664 <|@
result int[-75547|0xfffffffffffed8e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:636) [bci: 40]
rawvalue: -75547
stableDimension: 0
stamp: i32 [-75547]
stampKind: i32
value: int[-75547|0xfffffffffffed8e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i660 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v663 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:636) [bci: 40]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v657 
=== Predecessor ===
v482 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-75547|0xfffffffffffed8e5], long[0|0x0]] destination: B121 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B121" "B47" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i660 <|@
result v138|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:636) [bci: 40]
stamp: i32 [-75547 - -51507] bits:1...1xxxx1xxx011x0x101
valueDescription: i32
=== Inputs ===
merge: v657 
values: i664 i666 
=== Succesors ===
=== Usages ===
v662 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v657 values: i664 i666  <|@  <|@
f <@~|@floating>@ <|@
tid j661 <|@
result v139|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:636) [bci: 40]
stamp: i64 [0 - 5780] bits:0...0x0xx0x00x0x00
valueDescription: i64
=== Inputs ===
merge: v657 
values: j570 j667 
=== Succesors ===
=== Usages ===
v662 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v657 values: j570 j667  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v657 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:636) [bci: 40]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v663 v665 
=== Succesors ===
next: v662 
=== Usages ===
i660 j661 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v663 v665 #next: v662  <|@  <|@
f <@*|@fixed>@ <|@
tid v662 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:636) [bci: 40]
stamp: void
=== Inputs ===
stateBefore: ?28 
actionAndReason: i660 
speculation: j661 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v657 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?28 actionAndReason: i660 speculation: j661  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v138|DWORD, v139|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v138|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v139|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] - v12|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:29] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After ConstantLoadOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|DWORD, rdi|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@21849dd slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[_] = MOV [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v6|DWORD[_], y: v6|DWORD[_]) trueDestinationProbability: 0.0015880438063265454 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607168114973028567
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOV [v6|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v9|DWORD, y: v9|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607168114973028567
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v10|QWORD[.], v9|DWORD] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B1" 
    successors "B6" "B121" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v11|QWORD[.], v12|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = MOV [v11|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOV [v11|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = DEC v12|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = AND (x: v1|DWORD, y: v15|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v16|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B121 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B48" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v17|DWORD[_] = MOV [v11|QWORD[.] + v16|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = MOV [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = UNCOMPRESSPOINTER (input: v18|DWORD, ~baseRegister: v20|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = MOVE input: long[140438306553856|0x7fba57600000] <|@ <|@
      nr   -1  <|@ instruction v22|DWORD[_] = COMPRESSPOINTER (input: v3|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v17|DWORD[_], y: v17|DWORD[_]) trueDestinationProbability: 0.8229115724385652 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B12" "B47" 
    xhandlers
    flags 
    probability 4605587348047262798
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v19|QWORD - keyConstants: [meta{HotSpotType<Ljava/util/HashMap;, resolved>}, meta{HotSpotType<Ljava/util/LinkedHashMap;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/replacements/SnippetTemplate$LRUCache;, resolved>}] keyTargets: [B7 -> B8, B7 -> B12, B7 -> B12] defaultTarget: B7 -> B47 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4605585062831744793
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = LEA [v23|QWORD + 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v24|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4605510964398880109
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v24|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v23|QWORD + 288] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV [v23|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v23|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV [v23|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v23|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v23|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD[.] = MOVE v23|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v28|QWORD[.]] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 4605585062831744793
    begin_IR
      LIR
      nr   -1  <|@ instruction [v29|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v29|QWORD[.] + 20], y: v22|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|DWORD[_] = COMPRESSPOINTER (input: v2|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v29|QWORD[.] + 16], y: v30|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v29|QWORD[.] + 12], y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v29|QWORD[.]] destination: B11 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B11" "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4605587348047262798
    begin_IR
      LIR
      nr   -1  <|@ instruction [v38|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = UNCOMPRESSPOINTER (input: v14|DWORD, ~baseRegister: v40|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = MOV [v39|QWORD + 208] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = MOV [v41|QWORD + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = MOV [v38|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = UNCOMPRESSPOINTER (input: v43|DWORD, ~baseRegister: v45|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = MOVSXD v42|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v41|QWORD, y: [v44|QWORD + v46|QWORD * 1]) trueDestinationProbability: 0.5 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B45" 
    xhandlers
    flags 
    probability 4601083748419892302
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v42|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B45 y: 32 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4601083748419892302
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v41|QWORD, y: v44|QWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4596580148792521806
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = MOV [v44|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = MOV [v47|QWORD] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B24" 
    successors "B23" "B26" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4602807799859017905
    begin_IR
      LIR
      nr   -1  <|@ instruction [v49|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v48|DWORD, y: v49|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602807799859017905
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = SHL v49|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = LEA [v50|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = MOVSXD v51|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v53|QWORD = MOV [v47|QWORD + v52|QWORD * 1] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v41|QWORD, y: v53|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B23 -> B25 falseDestination: B23 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B22" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4599230716294395707
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v54|DWORD = INC v49|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v54|DWORD] destination: B24 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B27" 
    xhandlers
    flags 
    probability 4601083748419892302
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B17 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B27" 
    xhandlers
    flags 
    probability 4596580148792521807
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v44|QWORD + 32], y: v41|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B27" 
    xhandlers
    flags 
    probability 4596580148792521806
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B20 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B17" "B25" "B20" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4605587348047262798
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" 
    xhandlers
    flags 
    probability 4604846135197064160
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B28 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B49" "B54" 
    xhandlers
    flags 
    probability 4595548303301553864
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v70|QWORD[.] = UNCOMPRESSPOINTER (input: v17|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v17|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.01987559010066231 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4595421491411700642
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v17|DWORD[_] * 8 + 8] trueDestinationProbability: 2.021089053783065E-6 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B56 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4595421478772878611
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v70|QWORD[.], int[0|0x0]] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B62" 
    successors "B65" "B58" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4595777537596400292
    begin_IR
      LIR
      nr   -1  <|@ instruction [v80|QWORD[.], v81|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] v80|QWORD[.] - - - - v81|DWORD 
>@ <|@ instruction v82|DWORD[_] = MOV [v80|QWORD[.] + 24] size: DWORD state [bci:134] <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = UNCOMPRESSPOINTER (input: v82|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v82|DWORD[_], y: v82|DWORD[_]) trueDestinationProbability: 0.5880075530332061 condition: = trueDestination: B57 -> B65 falseDestination: B57 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4590110563079390205
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v82|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.8692436604445373 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B62 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B57" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4576850562957400324
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] v80|QWORD[.] - - - - v81|DWORD 
>@ <|@ instruction SAFEPOINT v92|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 thread: r15 state [bci:134] <|@ <|@
      nr   -1  <|@ instruction v93|DWORD = INC v81|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v83|QWORD[.], v93|DWORD] destination: B62 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4592437312858669387
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v94|QWORD = MOV [v19|QWORD + 680] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v95|QWORD = MOV [v94|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v94|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v95|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:648) [bci: 152]
stack: v80|QWORD[.] 
locals: v0|QWORD[.] v1|DWORD - v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] - - - v83|QWORD[.] - v81|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.]]) [] callTarget: HotSpotMethod<HashMap.newNode(int, Object, Object, HashMap$Node)> state [bci:152] <|@ <|@
      nr   -1  <|@ instruction v96|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B67 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B72" 
    xhandlers
    flags 
    probability 4591660023639118941
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B66 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4590594123464754032
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[.+] = LEA [v11|QWORD[.] + v16|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v56|DWORD[_] = MOV [v55|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v56|DWORD[_], y: v56|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4590001153184595122
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[.] = UNCOMPRESSPOINTER (input: v56|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v57|QWORD, y: v57|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4589467479932452103
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v59|QWORD + v57|QWORD * 1 - 8], y: v58|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = LEA [v57|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v60|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B64" "B60" 
    xhandlers
    flags 
    probability 4589398445432346844
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v84|DWORD[_] = MOV [v82|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v85|QWORD[.] = UNCOMPRESSPOINTER (input: v84|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v85|QWORD[.], y: v2|QWORD[.]) trueDestinationProbability: 0.9998932466496128 condition: = trueDestination: B59 -> B64 falseDestination: B59 -> B60 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B86" 
    xhandlers
    flags 
    probability 4589397940059341918
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v83|QWORD[.]] destination: B64 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4577371935537457006
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v97|QWORD[.+] = LEA [v80|QWORD[.] + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v98|DWORD[_] = MOV [v97|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v98|DWORD[_], y: v98|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B67 -> B68 falseDestination: B67 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" "B71" 
    xhandlers
    flags 
    probability 4576750104161816650
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v99|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v100|QWORD[.] = UNCOMPRESSPOINTER (input: v98|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v99|QWORD, y: v99|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    probability 4576190455923740329
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v101|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v101|QWORD + v99|QWORD * 1 - 8], y: v100|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v102|QWORD = LEA [v99|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v102|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    probability 4575897384022324722
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B30 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4575895921484393205
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v25|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] - v12|DWORD - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7fba62ccef80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:29] <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] - v12|DWORD - - - - 
>@ <|@ instruction NULLCHECK [v26|QWORD[.]] state [bci:29] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v26|QWORD[.]] destination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4575188794187971253
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v58|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" "B33" "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4605587348047262798
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v61|DWORD[_] = COMPRESSPOINTER (input: v38|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v11|QWORD[.] + v16|DWORD * 4 + 16], y: v61|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v62|QWORD[.+] = LEA [v11|QWORD[.] + v16|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v63|QWORD[*] = XOR (x: v62|QWORD[.+], y: v38|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v63|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4604846135197064160
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v38|QWORD[.], y: v38|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4604179043631885386
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v65|QWORD[.+] = LEA [v11|QWORD[.] + v16|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v64|QWORD[*] = SHR v65|QWORD[.+] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v64|QWORD[*] + v21|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B88" 
    xhandlers
    flags 
    probability 4603578661223224489
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B39 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B88" 
    xhandlers
    flags 
    probability 4590594123464754032
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B35 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B88" 
    xhandlers
    flags 
    probability 4590001153184595122
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B37 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4589467479932452103
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v64|QWORD[*] + v21|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B88" 
    xhandlers
    flags 
    probability 4588806327720511347
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B41 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4574334916984542422
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v64|QWORD[*] + v21|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[*] = ADD (x: v64|QWORD[*], y: v21|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v66|QWORD, y: v66|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B88" 
    xhandlers
    flags 
    probability 4573566427501456474
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v68|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v68|QWORD + v66|QWORD * 1 - 8], y: v67|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v69|QWORD = LEA [v66|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v69|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B44 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4570262383476918658
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v71|DWORD[_] = MOV [v17|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v72|QWORD[.] = UNCOMPRESSPOINTER (input: v71|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v72|QWORD[.], y: v2|QWORD[.]) trueDestinationProbability: 0.9854570809572428 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B86" 
    xhandlers
    flags 
    probability 4570144353713859813
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v70|QWORD[.]] destination: B50 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 4564966382317228292
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:635) [bci: 20]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.resize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:20] <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:635) [bci: 23]
stack: Object[null] 
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD - - - - - - - 
>@ <|@ instruction v8|DWORD = MOV [v7|QWORD[.] + 12] size: DWORD state [bci:23] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v7|QWORD[.], v8|DWORD] destination: B1 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B72" 
    xhandlers
    flags 
    probability 4562617473904064804
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B68 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    probability 4562093595080792590
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v100|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B66" "B68" "B71" "B70" 
    successors "B73" "B74" 
    xhandlers
    flags 
    probability 4592437312858669387
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v103|DWORD[_] = COMPRESSPOINTER (input: v96|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v80|QWORD[.] + 24], y: v103|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v104|QWORD[*] = XOR (x: v80|QWORD[.], y: v96|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v104|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    probability 4591660023639118941
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v96|QWORD[.], y: v96|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    probability 4590960463341523540
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v105|QWORD[*] = SHR v80|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v105|QWORD[*] + v21|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B83" 
    xhandlers
    flags 
    probability 4590330859073687679
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B77 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B83" 
    xhandlers
    flags 
    probability 4577371935537457006
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B73 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B83" 
    xhandlers
    flags 
    probability 4576750104161816649
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B75 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    probability 4576190455923740328
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v105|QWORD[*] + v21|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B83" 
    xhandlers
    flags 
    probability 4575686772509471639
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B79 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    probability 4561198157899870475
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v105|QWORD[*] + v21|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v106|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v107|QWORD[*] = ADD (x: v105|QWORD[*], y: v21|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v106|QWORD, y: v106|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    probability 4560392264437040573
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v108|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v108|QWORD + v106|QWORD * 1 - 8], y: v107|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v109|QWORD = LEA [v106|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v109|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B88" 
    xhandlers
    flags 
    probability 4559287139136259037
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v67|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B43 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4553315745025075769
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = LEA [v31|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v32|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4553268943811267021
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v32|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v31|QWORD + 296] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV [v31|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v31|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV [v31|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v31|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v31|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v31|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[.] = MOVE v31|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v36|QWORD[.]] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4553315745025075769
    begin_IR
      LIR
      nr   -1  <|@ instruction [v37|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v37|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.LinkedHashMap$Entry.<init>(LinkedHashMap.java:208) [bci: 6]
locals: - - - - - 
java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 9]
stack: v37|QWORD[.] 
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] Object[null] - 
java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stack: v11|QWORD[.] v16|DWORD 
locals: v0|QWORD[.] - - - - v5|DWORD - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.]] [] callTarget: HotSpotMethod<HashMap$Node.<init>(int, Object, Object, HashMap$Node)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:6, 9, 56] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v37|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.LinkedHashMap.newNode(LinkedHashMap.java:283) [bci: 17]
locals: - - - - - v37|QWORD[.] 
java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stack: v11|QWORD[.] v16|DWORD 
locals: v0|QWORD[.] - - - - v5|DWORD - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<LinkedHashMap.linkNodeAtEnd(LinkedHashMap$Entry)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:17, 56] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v37|QWORD[.]] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    probability 4546075572092099182
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v107|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B73" "B75" "B77" "B79" "B82" "B81" 
    successors "B84" "B85" 
    xhandlers
    flags 
    probability 4592437312858669387
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v81|DWORD trueDestinationProbability: 0.9999886211240704 condition: < trueDestination: B83 -> B84 falseDestination: B83 -> B85 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" 
    xhandlers
    flags 
    probability 4592437224411893480
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v83|QWORD[.]] destination: B84 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B50" "B55" "B64" "B84" "B85" "B63" "B53" 
    successors "B87" "B100" 
    xhandlers
    flags 
    probability 4595548303301553864
    begin_IR
      LIR
      nr   -1  <|@ instruction [v110|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v110|QWORD[.], y: v110|QWORD[.]) trueDestinationProbability: 0.6091185940042786 condition: = trueDestination: B86 -> B87 falseDestination: B86 -> B100 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B88" 
    xhandlers
    flags 
    probability 4592437118697206803
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B87 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B35" "B87" "B43" "B44" "B41" "B39" "B37" 
    successors "B89" "B90" 
    xhandlers
    flags 
    probability 4606558935301518032
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction INC [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v111|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction v112|DWORD = ADD (x: v111|DWORD, ~y: [v0|QWORD[.] + 20]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v112|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v112|DWORD, y: [v0|QWORD[.] + 28]) trueDestinationProbability: 7.853038846579175E-4 condition: > trueDestination: B88 -> B89 falseDestination: B88 -> B90 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B91" 
    xhandlers
    flags 
    probability 4606552351536966788
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B90 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" "B89" 
    successors "B92" "B93" "B99" 
    xhandlers
    flags 
    probability 4606558935301518032
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v19|QWORD - keyConstants: [meta{HotSpotType<Ljava/util/HashMap;, resolved>}, meta{HotSpotType<Ljava/util/LinkedHashMap;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/replacements/SnippetTemplate$LRUCache;, resolved>}] keyTargets: [B91 -> B92, B91 -> B93, B91 -> B93] defaultTarget: B91 -> B99 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B97" 
    xhandlers
    flags 
    probability 4606555909645339483
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B92 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B92" "B94" "B96" 
    successors 
    xhandlers
    flags 
    probability 4606558935301518031
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B101" "B119" 
    xhandlers
    flags 
    probability 4589652288651159933
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v122|DWORD[_] = MOV [v110|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v4|DWORD, y: v4|DWORD) trueDestinationProbability: 0.9999962001170364 condition: = trueDestination: B100 -> B101 falseDestination: B100 -> B119 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B102" "B103" 
    xhandlers
    flags 
    probability 4589652269697845341
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B103 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B108" 
    xhandlers
    flags 
    probability 4589138949298219176
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B102 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" "B105" 
    xhandlers
    flags 
    probability 4574630580609171603
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v123|QWORD[.+] = LEA [v110|QWORD[.] + 20] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v124|DWORD[_] = MOV [v123|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v124|DWORD[_], y: v124|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B103 -> B104 falseDestination: B103 -> B105 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B106" "B107" 
    xhandlers
    flags 
    probability 4573832524763622737
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v125|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v126|QWORD[.] = UNCOMPRESSPOINTER (input: v124|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v125|QWORD, y: v125|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B105 -> B106 falseDestination: B105 -> B107 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B108" 
    xhandlers
    flags 
    probability 4573114274502628758
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v127|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v127|QWORD + v125|QWORD * 1 - 8], y: v126|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v128|QWORD = LEA [v125|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v128|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B107 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B91" 
    xhandlers
    flags 
    probability 4559880998172045651
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:669) [bci: 288]
locals: v0|QWORD[.] - - - - v5|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.resize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:288] <|@ <|@
      nr   -1  <|@ instruction v113|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B89 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B108" 
    xhandlers
    flags 
    probability 4559523670035962382
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B104 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B108" 
    xhandlers
    flags 
    probability 4558885225359523289
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v126|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B106 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B102" "B104" "B107" "B106" 
    successors "B109" "B110" 
    xhandlers
    flags 
    probability 4589652269697845341
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v110|QWORD[.] + 20], y: v22|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v129|QWORD[*] = XOR (x: v110|QWORD[.], y: v3|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v129|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B108 -> B109 falseDestination: B108 -> B110 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" "B112" 
    xhandlers
    flags 
    probability 4589138949298219176
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v3|QWORD[.], y: v3|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B110 -> B111 falseDestination: B110 -> B112 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B113" "B114" 
    xhandlers
    flags 
    probability 4588241136471976702
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v130|QWORD[*] = SHR v110|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v130|QWORD[*] + v21|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B112 -> B113 falseDestination: B112 -> B114 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B120" 
    xhandlers
    flags 
    probability 4587433104928358475
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B113 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B120" 
    xhandlers
    flags 
    probability 4574630580609171603
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B109 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B120" 
    xhandlers
    flags 
    probability 4573832524763622738
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B111 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B115" "B116" 
    xhandlers
    flags 
    probability 4573114274502628759
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v130|QWORD[*] + v21|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B114 -> B115 falseDestination: B114 -> B116 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B120" 
    xhandlers
    flags 
    probability 4572467849267734178
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B115 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B117" "B118" 
    xhandlers
    flags 
    probability 4558310625150728107
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v130|QWORD[*] + v21|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v131|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v132|QWORD[*] = ADD (x: v130|QWORD[*], y: v21|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v131|QWORD, y: v131|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B116 -> B117 falseDestination: B116 -> B118 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B120" 
    xhandlers
    flags 
    probability 4557793484962812442
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v133|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v133|QWORD + v131|QWORD * 1 - 8], y: v132|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v134|QWORD = LEA [v131|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v134|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B118 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B94" "B95" 
    xhandlers
    flags 
    probability 4554832167497868566
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v5|DWORD, y: v5|DWORD) trueDestinationProbability: 0.4891304347826087 condition: = trueDestination: B93 -> B94 falseDestination: B93 -> B95 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B96" "B98" 
    xhandlers
    flags 
    probability 4550463275345577801
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v114|DWORD[_] = MOV [v0|QWORD[.] + 52] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:670) [bci: 292]
locals: v0|QWORD[.] - - - - v5|DWORD - - - - - - - 
>@ <|@ instruction NULLCHECK [v114|DWORD[_] * 8] state [bci:292] <|@ <|@
      nr   -1  <|@ instruction v115|DWORD = MOV [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v117|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr   -1  <|@ instruction v116|QWORD = UNCOMPRESSPOINTER (input: v115|DWORD, ~baseRegister: v117|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v118|QWORD = MOV [v116|QWORD + 872] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v119|QWORD = MOV [v118|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v120|QWORD[.] = UNCOMPRESSPOINTER (input: v114|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v120|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v118|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v119|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 15]
locals: v0|QWORD[.] - v120|QWORD[.] - 
java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
locals: - - - - - - - - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<LinkedHashMap.removeEldestEntry(Map$Entry)> state [bci:15, 295] <|@ <|@
      nr   -1  <|@ instruction v121|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v121|DWORD, y: v121|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B95 -> B96 falseDestination: B95 -> B98 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B97" 
    xhandlers
    flags 
    probability 4550463275345577801
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B96 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B97" 
    xhandlers
    flags 
    probability 4550193860395418340
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B94 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B120" 
    xhandlers
    flags 
    probability 4543399067768740112
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v132|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B117 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B119" "B109" "B117" "B118" "B115" "B113" "B111" 
    successors 
    xhandlers
    flags 
    probability 4589652288651159933
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v135|QWORD = MOV [v19|QWORD + 688] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v136|QWORD = MOV [v135|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v137|QWORD[.] = UNCOMPRESSPOINTER (input: v122|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v110|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v135|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v136|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:663) [bci: 253]
locals: - - - - - - - - - - - - v137|QWORD[.] 
>@ <|@ instruction - = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<HashMap.afterNodeAccess(HashMap$Node)> state [bci:253] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v137|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4542678729597855531
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] - v12|DWORD - - - - 
>@ <|@ instruction v73|DWORD = MOV [v2|QWORD[.] + 8] size: DWORD state [bci:29] <|@ <|@
      nr   -1  <|@ instruction v75|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr   -1  <|@ instruction v74|QWORD = UNCOMPRESSPOINTER (input: v73|DWORD, ~baseRegister: v75|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v76|QWORD = MOV [v74|QWORD + 464] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v77|QWORD = MOV [v76|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v72|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v76|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v77|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:641) [bci: 91]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] v70|QWORD[.] - - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:91] <|@ <|@
      nr   -1  <|@ instruction v78|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v78|DWORD, y: v78|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B86" 
    xhandlers
    flags 
    probability 4542678729597855531
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v70|QWORD[.]] destination: B53 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B63" 
    xhandlers
    flags 
    probability 4529894057192690854
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] v80|QWORD[.] - - - - v81|DWORD 
>@ <|@ instruction v86|DWORD = MOV [v2|QWORD[.] + 8] size: DWORD state [bci:134] <|@ <|@
      nr   -1  <|@ instruction v88|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr   -1  <|@ instruction v87|QWORD = UNCOMPRESSPOINTER (input: v86|DWORD, ~baseRegister: v88|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v89|QWORD = MOV [v87|QWORD + 464] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v90|QWORD = MOV [v89|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v85|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v89|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v90|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:654) [bci: 203]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] - - - v83|QWORD[.] - v81|DWORD 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:203] <|@ <|@
      nr   -1  <|@ instruction v91|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v91|DWORD, y: v91|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B86" 
    xhandlers
    flags 
    probability 4529894057192690854
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v83|QWORD[.]] destination: B63 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4523100981620127249
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v33|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] - v12|DWORD - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7fba62ccef80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:29] <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] - v12|DWORD - - - - 
>@ <|@ instruction NULLCHECK [v34|QWORD[.]] state [bci:29] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v34|QWORD[.]] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" 
    xhandlers
    flags 
    probability 4518403274531071726
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:650) [bci: 169]
locals: v0|QWORD[.] - - v3|QWORD[.] v4|DWORD v5|DWORD - - - - v83|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<HashMap.treeifyBin(HashMap$Node[], int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:169] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v83|QWORD[.]] destination: B85 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B86" 
    xhandlers
    flags 
    probability 4510226010095555986
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v70|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:644) [bci: 123]
locals: v0|QWORD[.] - - v3|QWORD[.] v4|DWORD v5|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|QWORD[.], rdi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap$TreeNode.putTreeVal(HashMap, HashMap$Node[], int, Object, Object)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:123] <|@ <|@
      nr   -1  <|@ instruction v79|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v79|QWORD[.]] destination: B55 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B120" 
    xhandlers
    flags 
    probability 4508568125070994604
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:659) [bci: 222]
locals: v0|QWORD[.] - - v3|QWORD[.] v4|DWORD v5|DWORD - - - - v110|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [v122|DWORD[_] * 8] state [bci:222] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B119 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-51507|0xffffffffffff36cd], long[5780|0x1694]] destination: B47 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -157971 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 1300 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:654) [bci: 206]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] - - - v83|QWORD[.] - v81|DWORD 
>@ <|@ instruction DEOPT info [bci:206] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-75547|0xfffffffffffed8e5], long[0|0x0]] destination: B121 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B121" "B47" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v138|DWORD, v139|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v138|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v139|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] - v12|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:29] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -61235 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 8980 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:670) [bci: 292]
locals: v0|QWORD[.] - - - - v5|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:292] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B26 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B26" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -82987 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stack: v11|QWORD[.] v16|DWORD v38|QWORD[.] 
locals: v0|QWORD[.] - - - - v5|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:59] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -153363 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:641) [bci: 94]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] v70|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:94] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -161299 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 10260 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 18]
stack: v121|DWORD 
locals: v0|QWORD[.] - v120|QWORD[.] - 
java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
locals: - - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:18, 295] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -129299 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:634) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #21         // table:java.util.HashMap$Node[]
     4: dup           
     5: astore        6
     7: ifnull        19
    10: aload         6
    12: arraylength   
    13: dup           
    14: istore        8
    16: ifne          29
    19: aload_0       
    20: invokevirtual #23         // resize:()java.util.HashMap$Node[]
    23: dup           
    24: astore        6
    26: arraylength   
    27: istore        8
    29: aload         6
    31: iload         8
    33: iconst_1      
    34: isub          
    35: iload_1       
    36: iand          
    37: dup           
    38: istore        9
    40: aaload        
    41: dup           
    42: astore        7
    44: ifnonnull     63
    47: aload         6
    49: iload         9
    51: aload_0       
    52: iload_1       
    53: aload_2       
    54: aload_3       
    55: aconst_null   
    56: invokevirtual #40         // newNode:(int, java.lang.Object, java.lang.Object, java.util.HashMap$Node)java.util.HashMap$Node
    59: aastore       
    60: goto          259
    63: aload         7
    65: getfield      #35         // java.util.HashMap$Node.hash:int
    68: iload_1       
    69: if_icmpne     104
    72: aload         7
    74: getfield      #36         // java.util.HashMap$Node.key:java.lang.Object
    77: dup           
    78: astore        11
    80: aload_2       
    81: if_acmpeq     97
    84: aload_2       
    85: ifnull        104
    88: aload_2       
    89: aload         11
    91: invokevirtual #37         // java.lang.Object.equals:(java.lang.Object)boolean
    94: ifeq          104
    97: aload         7
    99: astore        10
   101: goto          222
   104: aload         7
   106: instanceof    #180        // java.util.HashMap$TreeNode
   109: ifeq          131
   112: aload         7
   114: checkcast     #180        // java.util.HashMap$TreeNode
   117: aload_0       
   118: aload         6
   120: iload_1       
   121: aload_2       
   122: aload_3       
   123: invokevirtual #41         // java.util.HashMap$TreeNode.putTreeVal:(java.util.HashMap, java.util.HashMap$Node[], int, java.lang.Object, java.lang.Object)java.util.HashMap$TreeNode
   126: astore        10
   128: goto          222
   131: iconst_0      
   132: istore        12
   134: aload         7
   136: getfield      #38         // java.util.HashMap$Node.next:java.util.HashMap$Node
   139: dup           
   140: astore        10
   142: ifnonnull     175
   145: aload         7
   147: aload_0       
   148: iload_1       
   149: aload_2       
   150: aload_3       
   151: aconst_null   
   152: invokevirtual #40         // newNode:(int, java.lang.Object, java.lang.Object, java.util.HashMap$Node)java.util.HashMap$Node
   155: putfield      #38         // java.util.HashMap$Node.next:java.util.HashMap$Node
   158: iload         12
   160: bipush        7
   162: if_icmplt     222
   165: aload_0       
   166: aload         6
   168: iload_1       
   169: invokevirtual #42         // treeifyBin:(java.util.HashMap$Node[], int)void
   172: goto          222
   175: aload         10
   177: getfield      #35         // java.util.HashMap$Node.hash:int
   180: iload_1       
   181: if_icmpne     212
   184: aload         10
   186: getfield      #36         // java.util.HashMap$Node.key:java.lang.Object
   189: dup           
   190: astore        11
   192: aload_2       
   193: if_acmpeq     222
   196: aload_2       
   197: ifnull        212
   200: aload_2       
   201: aload         11
   203: invokevirtual #37         // java.lang.Object.equals:(java.lang.Object)boolean
   206: ifeq          212
   209: goto          222
   212: aload         10
   214: astore        7
   216: iinc          
   219: goto          134
   222: aload         10
   224: ifnull        259
   227: aload         10
   229: getfield      #34         // java.util.HashMap$Node.value:java.lang.Object
   232: astore        12
   234: iload         4
   236: ifeq          244
   239: aload         12
   241: ifnonnull     250
   244: aload         10
   246: aload_3       
   247: putfield      #34         // java.util.HashMap$Node.value:java.lang.Object
   250: aload_0       
   251: aload         10
   253: invokevirtual #43         // afterNodeAccess:(java.util.HashMap$Node)void
   256: aload         12
   258: areturn       
   259: aload_0       
   260: dup           
   261: getfield      #44         // modCount:int
   264: iconst_1      
   265: iadd          
   266: putfield      #44         // modCount:int
   269: aload_0       
   270: dup           
   271: getfield      #32         // size:int
   274: iconst_1      
   275: iadd          
   276: dup_x1        
   277: putfield      #32         // size:int
   280: aload_0       
   281: getfield      #17         // threshold:int
   284: if_icmple     292
   287: aload_0       
   288: invokevirtual #23         // resize:()java.util.HashMap$Node[]
   291: pop           
   292: aload_0       
   293: iload         5
   295: invokevirtual #45         // afterNodeInsertion:(boolean)void
   298: aconst_null   
   299: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After SaveCalleeSaveRegisters"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|DWORD, rdi|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@21849dd slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[_] = MOV [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v6|DWORD[_], y: v6|DWORD[_]) trueDestinationProbability: 0.0015880438063265454 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607168114973028567
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOV [v6|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v9|DWORD, y: v9|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607168114973028567
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v10|QWORD[.], v9|DWORD] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B1" 
    successors "B6" "B121" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v11|QWORD[.], v12|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = MOV [v11|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOV [v11|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = DEC v12|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = AND (x: v1|DWORD, y: v15|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v16|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B121 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B48" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v17|DWORD[_] = MOV [v11|QWORD[.] + v16|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = MOV [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = UNCOMPRESSPOINTER (input: v18|DWORD, ~baseRegister: v20|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = MOVE input: long[140438306553856|0x7fba57600000] <|@ <|@
      nr   -1  <|@ instruction v22|DWORD[_] = COMPRESSPOINTER (input: v3|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v17|DWORD[_], y: v17|DWORD[_]) trueDestinationProbability: 0.8229115724385652 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B12" "B47" 
    xhandlers
    flags 
    probability 4605587348047262798
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v19|QWORD - keyConstants: [meta{HotSpotType<Ljava/util/HashMap;, resolved>}, meta{HotSpotType<Ljava/util/LinkedHashMap;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/replacements/SnippetTemplate$LRUCache;, resolved>}] keyTargets: [B7 -> B8, B7 -> B12, B7 -> B12] defaultTarget: B7 -> B47 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4605585062831744793
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = LEA [v23|QWORD + 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v24|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4605510964398880109
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v24|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v23|QWORD + 288] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV [v23|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v23|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV [v23|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v23|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v23|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD[.] = MOVE v23|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v28|QWORD[.]] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 4605585062831744793
    begin_IR
      LIR
      nr   -1  <|@ instruction [v29|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v29|QWORD[.] + 20], y: v22|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|DWORD[_] = COMPRESSPOINTER (input: v2|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v29|QWORD[.] + 16], y: v30|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v29|QWORD[.] + 12], y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v29|QWORD[.]] destination: B11 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B11" "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4605587348047262798
    begin_IR
      LIR
      nr   -1  <|@ instruction [v38|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = UNCOMPRESSPOINTER (input: v14|DWORD, ~baseRegister: v40|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = MOV [v39|QWORD + 208] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = MOV [v41|QWORD + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = MOV [v38|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = UNCOMPRESSPOINTER (input: v43|DWORD, ~baseRegister: v45|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = MOVSXD v42|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v41|QWORD, y: [v44|QWORD + v46|QWORD * 1]) trueDestinationProbability: 0.5 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B45" 
    xhandlers
    flags 
    probability 4601083748419892302
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v42|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B45 y: 32 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4601083748419892302
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v41|QWORD, y: v44|QWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4596580148792521806
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = MOV [v44|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = MOV [v47|QWORD] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B24" 
    successors "B23" "B26" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4602807799859017905
    begin_IR
      LIR
      nr   -1  <|@ instruction [v49|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v48|DWORD, y: v49|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602807799859017905
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = SHL v49|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = LEA [v50|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = MOVSXD v51|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v53|QWORD = MOV [v47|QWORD + v52|QWORD * 1] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v41|QWORD, y: v53|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B23 -> B25 falseDestination: B23 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B22" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4599230716294395707
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v54|DWORD = INC v49|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v54|DWORD] destination: B24 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B27" 
    xhandlers
    flags 
    probability 4601083748419892302
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B17 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B27" 
    xhandlers
    flags 
    probability 4596580148792521807
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v44|QWORD + 32], y: v41|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B27" 
    xhandlers
    flags 
    probability 4596580148792521806
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B20 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B17" "B25" "B20" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4605587348047262798
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" 
    xhandlers
    flags 
    probability 4604846135197064160
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B28 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B49" "B54" 
    xhandlers
    flags 
    probability 4595548303301553864
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v70|QWORD[.] = UNCOMPRESSPOINTER (input: v17|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v17|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.01987559010066231 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4595421491411700642
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v17|DWORD[_] * 8 + 8] trueDestinationProbability: 2.021089053783065E-6 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B56 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4595421478772878611
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v70|QWORD[.], int[0|0x0]] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B62" 
    successors "B65" "B58" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4595777537596400292
    begin_IR
      LIR
      nr   -1  <|@ instruction [v80|QWORD[.], v81|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] v80|QWORD[.] - - - - v81|DWORD 
>@ <|@ instruction v82|DWORD[_] = MOV [v80|QWORD[.] + 24] size: DWORD state [bci:134] <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = UNCOMPRESSPOINTER (input: v82|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v82|DWORD[_], y: v82|DWORD[_]) trueDestinationProbability: 0.5880075530332061 condition: = trueDestination: B57 -> B65 falseDestination: B57 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4590110563079390205
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v82|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.8692436604445373 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B62 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B57" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4576850562957400324
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] v80|QWORD[.] - - - - v81|DWORD 
>@ <|@ instruction SAFEPOINT v92|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 thread: r15 state [bci:134] <|@ <|@
      nr   -1  <|@ instruction v93|DWORD = INC v81|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v83|QWORD[.], v93|DWORD] destination: B62 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4592437312858669387
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v94|QWORD = MOV [v19|QWORD + 680] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v95|QWORD = MOV [v94|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v94|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v95|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:648) [bci: 152]
stack: v80|QWORD[.] 
locals: v0|QWORD[.] v1|DWORD - v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] - - - v83|QWORD[.] - v81|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.]]) [] callTarget: HotSpotMethod<HashMap.newNode(int, Object, Object, HashMap$Node)> state [bci:152] <|@ <|@
      nr   -1  <|@ instruction v96|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B67 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B72" 
    xhandlers
    flags 
    probability 4591660023639118941
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B66 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4590594123464754032
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[.+] = LEA [v11|QWORD[.] + v16|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v56|DWORD[_] = MOV [v55|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v56|DWORD[_], y: v56|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4590001153184595122
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[.] = UNCOMPRESSPOINTER (input: v56|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v57|QWORD, y: v57|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4589467479932452103
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v59|QWORD + v57|QWORD * 1 - 8], y: v58|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = LEA [v57|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v60|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B64" "B60" 
    xhandlers
    flags 
    probability 4589398445432346844
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v84|DWORD[_] = MOV [v82|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v85|QWORD[.] = UNCOMPRESSPOINTER (input: v84|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v85|QWORD[.], y: v2|QWORD[.]) trueDestinationProbability: 0.9998932466496128 condition: = trueDestination: B59 -> B64 falseDestination: B59 -> B60 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B86" 
    xhandlers
    flags 
    probability 4589397940059341918
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v83|QWORD[.]] destination: B64 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4577371935537457006
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v97|QWORD[.+] = LEA [v80|QWORD[.] + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v98|DWORD[_] = MOV [v97|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v98|DWORD[_], y: v98|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B67 -> B68 falseDestination: B67 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" "B71" 
    xhandlers
    flags 
    probability 4576750104161816650
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v99|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v100|QWORD[.] = UNCOMPRESSPOINTER (input: v98|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v99|QWORD, y: v99|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    probability 4576190455923740329
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v101|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v101|QWORD + v99|QWORD * 1 - 8], y: v100|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v102|QWORD = LEA [v99|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v102|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    probability 4575897384022324722
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B30 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4575895921484393205
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v25|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] - v12|DWORD - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7fba62ccef80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:29] <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] - v12|DWORD - - - - 
>@ <|@ instruction NULLCHECK [v26|QWORD[.]] state [bci:29] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v26|QWORD[.]] destination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4575188794187971253
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v58|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" "B33" "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4605587348047262798
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v61|DWORD[_] = COMPRESSPOINTER (input: v38|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v11|QWORD[.] + v16|DWORD * 4 + 16], y: v61|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v62|QWORD[.+] = LEA [v11|QWORD[.] + v16|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v63|QWORD[*] = XOR (x: v62|QWORD[.+], y: v38|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v63|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4604846135197064160
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v38|QWORD[.], y: v38|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4604179043631885386
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v65|QWORD[.+] = LEA [v11|QWORD[.] + v16|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v64|QWORD[*] = SHR v65|QWORD[.+] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v64|QWORD[*] + v21|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B88" 
    xhandlers
    flags 
    probability 4603578661223224489
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B39 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B88" 
    xhandlers
    flags 
    probability 4590594123464754032
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B35 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B88" 
    xhandlers
    flags 
    probability 4590001153184595122
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B37 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4589467479932452103
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v64|QWORD[*] + v21|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B88" 
    xhandlers
    flags 
    probability 4588806327720511347
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B41 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4574334916984542422
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v64|QWORD[*] + v21|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[*] = ADD (x: v64|QWORD[*], y: v21|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v66|QWORD, y: v66|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B88" 
    xhandlers
    flags 
    probability 4573566427501456474
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v68|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v68|QWORD + v66|QWORD * 1 - 8], y: v67|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v69|QWORD = LEA [v66|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v69|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B44 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4570262383476918658
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v71|DWORD[_] = MOV [v17|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v72|QWORD[.] = UNCOMPRESSPOINTER (input: v71|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v72|QWORD[.], y: v2|QWORD[.]) trueDestinationProbability: 0.9854570809572428 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B86" 
    xhandlers
    flags 
    probability 4570144353713859813
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v70|QWORD[.]] destination: B50 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 4564966382317228292
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:635) [bci: 20]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.resize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:20] <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:635) [bci: 23]
stack: Object[null] 
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD - - - - - - - 
>@ <|@ instruction v8|DWORD = MOV [v7|QWORD[.] + 12] size: DWORD state [bci:23] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v7|QWORD[.], v8|DWORD] destination: B1 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B72" 
    xhandlers
    flags 
    probability 4562617473904064804
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B68 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    probability 4562093595080792590
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v100|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B66" "B68" "B71" "B70" 
    successors "B73" "B74" 
    xhandlers
    flags 
    probability 4592437312858669387
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v103|DWORD[_] = COMPRESSPOINTER (input: v96|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v80|QWORD[.] + 24], y: v103|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v104|QWORD[*] = XOR (x: v80|QWORD[.], y: v96|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v104|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    probability 4591660023639118941
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v96|QWORD[.], y: v96|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    probability 4590960463341523540
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v105|QWORD[*] = SHR v80|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v105|QWORD[*] + v21|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B83" 
    xhandlers
    flags 
    probability 4590330859073687679
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B77 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B83" 
    xhandlers
    flags 
    probability 4577371935537457006
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B73 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B83" 
    xhandlers
    flags 
    probability 4576750104161816649
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B75 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    probability 4576190455923740328
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v105|QWORD[*] + v21|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B83" 
    xhandlers
    flags 
    probability 4575686772509471639
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B79 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    probability 4561198157899870475
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v105|QWORD[*] + v21|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v106|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v107|QWORD[*] = ADD (x: v105|QWORD[*], y: v21|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v106|QWORD, y: v106|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    probability 4560392264437040573
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v108|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v108|QWORD + v106|QWORD * 1 - 8], y: v107|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v109|QWORD = LEA [v106|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v109|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B88" 
    xhandlers
    flags 
    probability 4559287139136259037
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v67|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B43 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4553315745025075769
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = LEA [v31|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v32|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4553268943811267021
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v32|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v31|QWORD + 296] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV [v31|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v31|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV [v31|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v31|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v31|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v31|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[.] = MOVE v31|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v36|QWORD[.]] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4553315745025075769
    begin_IR
      LIR
      nr   -1  <|@ instruction [v37|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v37|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.LinkedHashMap$Entry.<init>(LinkedHashMap.java:208) [bci: 6]
locals: - - - - - 
java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 9]
stack: v37|QWORD[.] 
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] Object[null] - 
java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stack: v11|QWORD[.] v16|DWORD 
locals: v0|QWORD[.] - - - - v5|DWORD - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.]] [] callTarget: HotSpotMethod<HashMap$Node.<init>(int, Object, Object, HashMap$Node)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:6, 9, 56] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v37|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.LinkedHashMap.newNode(LinkedHashMap.java:283) [bci: 17]
locals: - - - - - v37|QWORD[.] 
java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stack: v11|QWORD[.] v16|DWORD 
locals: v0|QWORD[.] - - - - v5|DWORD - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<LinkedHashMap.linkNodeAtEnd(LinkedHashMap$Entry)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:17, 56] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v37|QWORD[.]] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    probability 4546075572092099182
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v107|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B73" "B75" "B77" "B79" "B82" "B81" 
    successors "B84" "B85" 
    xhandlers
    flags 
    probability 4592437312858669387
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v81|DWORD trueDestinationProbability: 0.9999886211240704 condition: < trueDestination: B83 -> B84 falseDestination: B83 -> B85 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" 
    xhandlers
    flags 
    probability 4592437224411893480
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v83|QWORD[.]] destination: B84 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B50" "B55" "B64" "B84" "B85" "B63" "B53" 
    successors "B87" "B100" 
    xhandlers
    flags 
    probability 4595548303301553864
    begin_IR
      LIR
      nr   -1  <|@ instruction [v110|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v110|QWORD[.], y: v110|QWORD[.]) trueDestinationProbability: 0.6091185940042786 condition: = trueDestination: B86 -> B87 falseDestination: B86 -> B100 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B88" 
    xhandlers
    flags 
    probability 4592437118697206803
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B87 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B35" "B87" "B43" "B44" "B41" "B39" "B37" 
    successors "B89" "B90" 
    xhandlers
    flags 
    probability 4606558935301518032
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction INC [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v111|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction v112|DWORD = ADD (x: v111|DWORD, ~y: [v0|QWORD[.] + 20]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v112|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v112|DWORD, y: [v0|QWORD[.] + 28]) trueDestinationProbability: 7.853038846579175E-4 condition: > trueDestination: B88 -> B89 falseDestination: B88 -> B90 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B91" 
    xhandlers
    flags 
    probability 4606552351536966788
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B90 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" "B89" 
    successors "B92" "B93" "B99" 
    xhandlers
    flags 
    probability 4606558935301518032
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v19|QWORD - keyConstants: [meta{HotSpotType<Ljava/util/HashMap;, resolved>}, meta{HotSpotType<Ljava/util/LinkedHashMap;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/replacements/SnippetTemplate$LRUCache;, resolved>}] keyTargets: [B91 -> B92, B91 -> B93, B91 -> B93] defaultTarget: B91 -> B99 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B97" 
    xhandlers
    flags 
    probability 4606555909645339483
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B92 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B92" "B94" "B96" 
    successors 
    xhandlers
    flags 
    probability 4606558935301518031
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B101" "B119" 
    xhandlers
    flags 
    probability 4589652288651159933
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v122|DWORD[_] = MOV [v110|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v4|DWORD, y: v4|DWORD) trueDestinationProbability: 0.9999962001170364 condition: = trueDestination: B100 -> B101 falseDestination: B100 -> B119 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B102" "B103" 
    xhandlers
    flags 
    probability 4589652269697845341
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B103 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B108" 
    xhandlers
    flags 
    probability 4589138949298219176
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B102 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" "B105" 
    xhandlers
    flags 
    probability 4574630580609171603
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v123|QWORD[.+] = LEA [v110|QWORD[.] + 20] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v124|DWORD[_] = MOV [v123|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v124|DWORD[_], y: v124|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B103 -> B104 falseDestination: B103 -> B105 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B106" "B107" 
    xhandlers
    flags 
    probability 4573832524763622737
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v125|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v126|QWORD[.] = UNCOMPRESSPOINTER (input: v124|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v125|QWORD, y: v125|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B105 -> B106 falseDestination: B105 -> B107 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B108" 
    xhandlers
    flags 
    probability 4573114274502628758
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v127|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v127|QWORD + v125|QWORD * 1 - 8], y: v126|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v128|QWORD = LEA [v125|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v128|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B107 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B91" 
    xhandlers
    flags 
    probability 4559880998172045651
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:669) [bci: 288]
locals: v0|QWORD[.] - - - - v5|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.resize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:288] <|@ <|@
      nr   -1  <|@ instruction v113|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B89 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B108" 
    xhandlers
    flags 
    probability 4559523670035962382
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B104 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B108" 
    xhandlers
    flags 
    probability 4558885225359523289
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v126|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B106 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B102" "B104" "B107" "B106" 
    successors "B109" "B110" 
    xhandlers
    flags 
    probability 4589652269697845341
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v110|QWORD[.] + 20], y: v22|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v129|QWORD[*] = XOR (x: v110|QWORD[.], y: v3|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v129|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B108 -> B109 falseDestination: B108 -> B110 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" "B112" 
    xhandlers
    flags 
    probability 4589138949298219176
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v3|QWORD[.], y: v3|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B110 -> B111 falseDestination: B110 -> B112 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B113" "B114" 
    xhandlers
    flags 
    probability 4588241136471976702
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v130|QWORD[*] = SHR v110|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v130|QWORD[*] + v21|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B112 -> B113 falseDestination: B112 -> B114 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B120" 
    xhandlers
    flags 
    probability 4587433104928358475
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B113 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B120" 
    xhandlers
    flags 
    probability 4574630580609171603
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B109 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B120" 
    xhandlers
    flags 
    probability 4573832524763622738
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B111 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B115" "B116" 
    xhandlers
    flags 
    probability 4573114274502628759
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v130|QWORD[*] + v21|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B114 -> B115 falseDestination: B114 -> B116 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B120" 
    xhandlers
    flags 
    probability 4572467849267734178
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B115 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B117" "B118" 
    xhandlers
    flags 
    probability 4558310625150728107
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v130|QWORD[*] + v21|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v131|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v132|QWORD[*] = ADD (x: v130|QWORD[*], y: v21|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v131|QWORD, y: v131|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B116 -> B117 falseDestination: B116 -> B118 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B120" 
    xhandlers
    flags 
    probability 4557793484962812442
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v133|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v133|QWORD + v131|QWORD * 1 - 8], y: v132|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v134|QWORD = LEA [v131|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v134|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B118 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B94" "B95" 
    xhandlers
    flags 
    probability 4554832167497868566
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v5|DWORD, y: v5|DWORD) trueDestinationProbability: 0.4891304347826087 condition: = trueDestination: B93 -> B94 falseDestination: B93 -> B95 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B96" "B98" 
    xhandlers
    flags 
    probability 4550463275345577801
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v114|DWORD[_] = MOV [v0|QWORD[.] + 52] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:670) [bci: 292]
locals: v0|QWORD[.] - - - - v5|DWORD - - - - - - - 
>@ <|@ instruction NULLCHECK [v114|DWORD[_] * 8] state [bci:292] <|@ <|@
      nr   -1  <|@ instruction v115|DWORD = MOV [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v117|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr   -1  <|@ instruction v116|QWORD = UNCOMPRESSPOINTER (input: v115|DWORD, ~baseRegister: v117|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v118|QWORD = MOV [v116|QWORD + 872] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v119|QWORD = MOV [v118|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v120|QWORD[.] = UNCOMPRESSPOINTER (input: v114|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v120|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v118|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v119|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 15]
locals: v0|QWORD[.] - v120|QWORD[.] - 
java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
locals: - - - - - - - - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<LinkedHashMap.removeEldestEntry(Map$Entry)> state [bci:15, 295] <|@ <|@
      nr   -1  <|@ instruction v121|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v121|DWORD, y: v121|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B95 -> B96 falseDestination: B95 -> B98 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B97" 
    xhandlers
    flags 
    probability 4550463275345577801
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B96 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B97" 
    xhandlers
    flags 
    probability 4550193860395418340
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B94 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B120" 
    xhandlers
    flags 
    probability 4543399067768740112
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v132|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B117 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B119" "B109" "B117" "B118" "B115" "B113" "B111" 
    successors 
    xhandlers
    flags 
    probability 4589652288651159933
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v135|QWORD = MOV [v19|QWORD + 688] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v136|QWORD = MOV [v135|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v137|QWORD[.] = UNCOMPRESSPOINTER (input: v122|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v110|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v135|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v136|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:663) [bci: 253]
locals: - - - - - - - - - - - - v137|QWORD[.] 
>@ <|@ instruction - = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<HashMap.afterNodeAccess(HashMap$Node)> state [bci:253] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v137|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4542678729597855531
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] - v12|DWORD - - - - 
>@ <|@ instruction v73|DWORD = MOV [v2|QWORD[.] + 8] size: DWORD state [bci:29] <|@ <|@
      nr   -1  <|@ instruction v75|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr   -1  <|@ instruction v74|QWORD = UNCOMPRESSPOINTER (input: v73|DWORD, ~baseRegister: v75|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v76|QWORD = MOV [v74|QWORD + 464] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v77|QWORD = MOV [v76|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v72|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v76|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v77|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:641) [bci: 91]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] v70|QWORD[.] - - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:91] <|@ <|@
      nr   -1  <|@ instruction v78|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v78|DWORD, y: v78|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B86" 
    xhandlers
    flags 
    probability 4542678729597855531
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v70|QWORD[.]] destination: B53 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B63" 
    xhandlers
    flags 
    probability 4529894057192690854
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] v80|QWORD[.] - - - - v81|DWORD 
>@ <|@ instruction v86|DWORD = MOV [v2|QWORD[.] + 8] size: DWORD state [bci:134] <|@ <|@
      nr   -1  <|@ instruction v88|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr   -1  <|@ instruction v87|QWORD = UNCOMPRESSPOINTER (input: v86|DWORD, ~baseRegister: v88|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v89|QWORD = MOV [v87|QWORD + 464] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v90|QWORD = MOV [v89|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v85|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v89|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v90|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:654) [bci: 203]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] - - - v83|QWORD[.] - v81|DWORD 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:203] <|@ <|@
      nr   -1  <|@ instruction v91|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v91|DWORD, y: v91|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B86" 
    xhandlers
    flags 
    probability 4529894057192690854
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v83|QWORD[.]] destination: B63 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4523100981620127249
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v33|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] - v12|DWORD - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7fba62ccef80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:29] <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] - v12|DWORD - - - - 
>@ <|@ instruction NULLCHECK [v34|QWORD[.]] state [bci:29] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v34|QWORD[.]] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" 
    xhandlers
    flags 
    probability 4518403274531071726
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:650) [bci: 169]
locals: v0|QWORD[.] - - v3|QWORD[.] v4|DWORD v5|DWORD - - - - v83|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<HashMap.treeifyBin(HashMap$Node[], int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:169] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v83|QWORD[.]] destination: B85 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B86" 
    xhandlers
    flags 
    probability 4510226010095555986
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v70|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:644) [bci: 123]
locals: v0|QWORD[.] - - v3|QWORD[.] v4|DWORD v5|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|QWORD[.], rdi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap$TreeNode.putTreeVal(HashMap, HashMap$Node[], int, Object, Object)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:123] <|@ <|@
      nr   -1  <|@ instruction v79|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v79|QWORD[.]] destination: B55 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B120" 
    xhandlers
    flags 
    probability 4508568125070994604
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:659) [bci: 222]
locals: v0|QWORD[.] - - v3|QWORD[.] v4|DWORD v5|DWORD - - - - v110|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [v122|DWORD[_] * 8] state [bci:222] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B119 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-51507|0xffffffffffff36cd], long[5780|0x1694]] destination: B47 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -157971 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 1300 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:654) [bci: 206]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] - - - v83|QWORD[.] - v81|DWORD 
>@ <|@ instruction DEOPT info [bci:206] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-75547|0xfffffffffffed8e5], long[0|0x0]] destination: B121 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B121" "B47" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v138|DWORD, v139|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v138|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v139|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] - v12|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:29] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -61235 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 8980 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:670) [bci: 292]
locals: v0|QWORD[.] - - - - v5|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:292] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B26 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B26" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -82987 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stack: v11|QWORD[.] v16|DWORD v38|QWORD[.] 
locals: v0|QWORD[.] - - - - v5|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:59] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -153363 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:641) [bci: 94]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] v70|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:94] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -161299 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 10260 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 18]
stack: v121|DWORD 
locals: v0|QWORD[.] - v120|QWORD[.] - 
java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
locals: - - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:18, 295] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -129299 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:634) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #21         // table:java.util.HashMap$Node[]
     4: dup           
     5: astore        6
     7: ifnull        19
    10: aload         6
    12: arraylength   
    13: dup           
    14: istore        8
    16: ifne          29
    19: aload_0       
    20: invokevirtual #23         // resize:()java.util.HashMap$Node[]
    23: dup           
    24: astore        6
    26: arraylength   
    27: istore        8
    29: aload         6
    31: iload         8
    33: iconst_1      
    34: isub          
    35: iload_1       
    36: iand          
    37: dup           
    38: istore        9
    40: aaload        
    41: dup           
    42: astore        7
    44: ifnonnull     63
    47: aload         6
    49: iload         9
    51: aload_0       
    52: iload_1       
    53: aload_2       
    54: aload_3       
    55: aconst_null   
    56: invokevirtual #40         // newNode:(int, java.lang.Object, java.lang.Object, java.util.HashMap$Node)java.util.HashMap$Node
    59: aastore       
    60: goto          259
    63: aload         7
    65: getfield      #35         // java.util.HashMap$Node.hash:int
    68: iload_1       
    69: if_icmpne     104
    72: aload         7
    74: getfield      #36         // java.util.HashMap$Node.key:java.lang.Object
    77: dup           
    78: astore        11
    80: aload_2       
    81: if_acmpeq     97
    84: aload_2       
    85: ifnull        104
    88: aload_2       
    89: aload         11
    91: invokevirtual #37         // java.lang.Object.equals:(java.lang.Object)boolean
    94: ifeq          104
    97: aload         7
    99: astore        10
   101: goto          222
   104: aload         7
   106: instanceof    #180        // java.util.HashMap$TreeNode
   109: ifeq          131
   112: aload         7
   114: checkcast     #180        // java.util.HashMap$TreeNode
   117: aload_0       
   118: aload         6
   120: iload_1       
   121: aload_2       
   122: aload_3       
   123: invokevirtual #41         // java.util.HashMap$TreeNode.putTreeVal:(java.util.HashMap, java.util.HashMap$Node[], int, java.lang.Object, java.lang.Object)java.util.HashMap$TreeNode
   126: astore        10
   128: goto          222
   131: iconst_0      
   132: istore        12
   134: aload         7
   136: getfield      #38         // java.util.HashMap$Node.next:java.util.HashMap$Node
   139: dup           
   140: astore        10
   142: ifnonnull     175
   145: aload         7
   147: aload_0       
   148: iload_1       
   149: aload_2       
   150: aload_3       
   151: aconst_null   
   152: invokevirtual #40         // newNode:(int, java.lang.Object, java.lang.Object, java.util.HashMap$Node)java.util.HashMap$Node
   155: putfield      #38         // java.util.HashMap$Node.next:java.util.HashMap$Node
   158: iload         12
   160: bipush        7
   162: if_icmplt     222
   165: aload_0       
   166: aload         6
   168: iload_1       
   169: invokevirtual #42         // treeifyBin:(java.util.HashMap$Node[], int)void
   172: goto          222
   175: aload         10
   177: getfield      #35         // java.util.HashMap$Node.hash:int
   180: iload_1       
   181: if_icmpne     212
   184: aload         10
   186: getfield      #36         // java.util.HashMap$Node.key:java.lang.Object
   189: dup           
   190: astore        11
   192: aload_2       
   193: if_acmpeq     222
   196: aload_2       
   197: ifnull        212
   200: aload_2       
   201: aload         11
   203: invokevirtual #37         // java.lang.Object.equals:(java.lang.Object)boolean
   206: ifeq          212
   209: goto          222
   212: aload         10
   214: astore        7
   216: iinc          
   219: goto          134
   222: aload         10
   224: ifnull        259
   227: aload         10
   229: getfield      #34         // java.util.HashMap$Node.value:java.lang.Object
   232: astore        12
   234: iload         4
   236: ifeq          244
   239: aload         12
   241: ifnonnull     250
   244: aload         10
   246: aload_3       
   247: putfield      #34         // java.util.HashMap$Node.value:java.lang.Object
   250: aload_0       
   251: aload         10
   253: invokevirtual #43         // afterNodeAccess:(java.util.HashMap$Node)void
   256: aload         12
   258: areturn       
   259: aload_0       
   260: dup           
   261: getfield      #44         // modCount:int
   264: iconst_1      
   265: iadd          
   266: putfield      #44         // modCount:int
   269: aload_0       
   270: dup           
   271: getfield      #32         // size:int
   274: iconst_1      
   275: iadd          
   276: dup_x1        
   277: putfield      #32         // size:int
   280: aload_0       
   281: getfield      #17         // threshold:int
   284: if_icmple     292
   287: aload_0       
   288: invokevirtual #23         // resize:()java.util.HashMap$Node[]
   291: pop           
   292: aload_0       
   293: iload         5
   295: invokevirtual #45         // afterNodeInsertion:(boolean)void
   298: aconst_null   
   299: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|DWORD, rdi|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@21849dd slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[_] = MOV [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v6|DWORD[_], y: v6|DWORD[_]) trueDestinationProbability: 0.0015880438063265454 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607168114973028567
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOV [v6|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v9|DWORD, y: v9|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607168114973028567
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v10|QWORD[.], v9|DWORD] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B1" 
    successors "B6" "B121" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v11|QWORD[.], v12|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = MOV [v11|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOV [v11|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = DEC v12|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = AND (x: v1|DWORD, y: v15|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v16|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B121 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B48" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v17|DWORD[_] = MOV [v11|QWORD[.] + v16|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = MOV [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = UNCOMPRESSPOINTER (input: v18|DWORD, ~baseRegister: v20|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = MOVE input: long[140438306553856|0x7fba57600000] <|@ <|@
      nr   -1  <|@ instruction v22|DWORD[_] = COMPRESSPOINTER (input: v3|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v17|DWORD[_], y: v17|DWORD[_]) trueDestinationProbability: 0.8229115724385652 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B12" "B47" 
    xhandlers
    flags 
    probability 4605587348047262798
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v19|QWORD - keyConstants: [meta{HotSpotType<Ljava/util/HashMap;, resolved>}, meta{HotSpotType<Ljava/util/LinkedHashMap;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/replacements/SnippetTemplate$LRUCache;, resolved>}] keyTargets: [B7 -> B8, B7 -> B12, B7 -> B12] defaultTarget: B7 -> B47 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4605585062831744793
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = LEA [v23|QWORD + 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v24|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4605510964398880109
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v24|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v23|QWORD + 288] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV [v23|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v23|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV [v23|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v23|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v23|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD[.] = MOVE v23|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v28|QWORD[.]] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 4605585062831744793
    begin_IR
      LIR
      nr   -1  <|@ instruction [v29|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v29|QWORD[.] + 20], y: v22|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|DWORD[_] = COMPRESSPOINTER (input: v2|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v29|QWORD[.] + 16], y: v30|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v29|QWORD[.] + 12], y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v29|QWORD[.]] destination: B11 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B11" "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4605587348047262798
    begin_IR
      LIR
      nr   -1  <|@ instruction [v38|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = UNCOMPRESSPOINTER (input: v14|DWORD, ~baseRegister: v40|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = MOV [v39|QWORD + 208] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = MOV [v41|QWORD + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = MOV [v38|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = UNCOMPRESSPOINTER (input: v43|DWORD, ~baseRegister: v45|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = MOVSXD v42|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v41|QWORD, y: [v44|QWORD + v46|QWORD * 1]) trueDestinationProbability: 0.5 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B45" 
    xhandlers
    flags 
    probability 4601083748419892302
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v42|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B45 y: 32 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4601083748419892302
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v41|QWORD, y: v44|QWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4596580148792521806
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = MOV [v44|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = MOV [v47|QWORD] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B24" 
    successors "B23" "B26" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4602807799859017905
    begin_IR
      LIR
      nr   -1  <|@ instruction [v49|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v48|DWORD, y: v49|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602807799859017905
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = SHL v49|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = LEA [v50|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = MOVSXD v51|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v53|QWORD = MOV [v47|QWORD + v52|QWORD * 1] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v41|QWORD, y: v53|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B23 -> B25 falseDestination: B23 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B22" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4599230716294395707
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v54|DWORD = INC v49|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v54|DWORD] destination: B24 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B27" 
    xhandlers
    flags 
    probability 4601083748419892302
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B17 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B27" 
    xhandlers
    flags 
    probability 4596580148792521807
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v44|QWORD + 32], y: v41|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B27" 
    xhandlers
    flags 
    probability 4596580148792521806
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B20 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B17" "B25" "B20" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4605587348047262798
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" 
    xhandlers
    flags 
    probability 4604846135197064160
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B28 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B49" "B54" 
    xhandlers
    flags 
    probability 4595548303301553864
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v70|QWORD[.] = UNCOMPRESSPOINTER (input: v17|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v17|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.01987559010066231 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4595421491411700642
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v17|DWORD[_] * 8 + 8] trueDestinationProbability: 2.021089053783065E-6 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B56 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4595421478772878611
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v70|QWORD[.], int[0|0x0]] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B62" 
    successors "B65" "B58" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4595777537596400292
    begin_IR
      LIR
      nr   -1  <|@ instruction [v80|QWORD[.], v81|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] v80|QWORD[.] - - - - v81|DWORD 
>@ <|@ instruction v82|DWORD[_] = MOV [v80|QWORD[.] + 24] size: DWORD state [bci:134] <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = UNCOMPRESSPOINTER (input: v82|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v82|DWORD[_], y: v82|DWORD[_]) trueDestinationProbability: 0.5880075530332061 condition: = trueDestination: B57 -> B65 falseDestination: B57 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4590110563079390205
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v82|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.8692436604445373 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B62 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B57" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4576850562957400324
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] v80|QWORD[.] - - - - v81|DWORD 
>@ <|@ instruction SAFEPOINT v92|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 thread: r15 state [bci:134] <|@ <|@
      nr   -1  <|@ instruction v93|DWORD = INC v81|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v83|QWORD[.], v93|DWORD] destination: B62 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4592437312858669387
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v94|QWORD = MOV [v19|QWORD + 680] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v95|QWORD = MOV [v94|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v94|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v95|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:648) [bci: 152]
stack: v80|QWORD[.] 
locals: v0|QWORD[.] v1|DWORD - v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] - - - v83|QWORD[.] - v81|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.]]) [] callTarget: HotSpotMethod<HashMap.newNode(int, Object, Object, HashMap$Node)> state [bci:152] <|@ <|@
      nr   -1  <|@ instruction v96|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B67 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B72" 
    xhandlers
    flags 
    probability 4591660023639118941
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B66 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4590594123464754032
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[.+] = LEA [v11|QWORD[.] + v16|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v56|DWORD[_] = MOV [v55|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v56|DWORD[_], y: v56|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4590001153184595122
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[.] = UNCOMPRESSPOINTER (input: v56|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v57|QWORD, y: v57|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4589467479932452103
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v59|QWORD + v57|QWORD * 1 - 8], y: v58|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = LEA [v57|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v60|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B64" "B60" 
    xhandlers
    flags 
    probability 4589398445432346844
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v84|DWORD[_] = MOV [v82|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v85|QWORD[.] = UNCOMPRESSPOINTER (input: v84|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v85|QWORD[.], y: v2|QWORD[.]) trueDestinationProbability: 0.9998932466496128 condition: = trueDestination: B59 -> B64 falseDestination: B59 -> B60 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B86" 
    xhandlers
    flags 
    probability 4589397940059341918
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v83|QWORD[.]] destination: B64 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4577371935537457006
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v97|QWORD[.+] = LEA [v80|QWORD[.] + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v98|DWORD[_] = MOV [v97|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v98|DWORD[_], y: v98|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B67 -> B68 falseDestination: B67 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" "B71" 
    xhandlers
    flags 
    probability 4576750104161816650
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v99|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v100|QWORD[.] = UNCOMPRESSPOINTER (input: v98|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v99|QWORD, y: v99|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    probability 4576190455923740329
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v101|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v101|QWORD + v99|QWORD * 1 - 8], y: v100|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v102|QWORD = LEA [v99|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v102|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    probability 4575897384022324722
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B30 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4575895921484393205
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v25|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] - v12|DWORD - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7fba62ccef80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:29] <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] - v12|DWORD - - - - 
>@ <|@ instruction NULLCHECK [v26|QWORD[.]] state [bci:29] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v26|QWORD[.]] destination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4575188794187971253
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v58|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" "B33" "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4605587348047262798
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v61|DWORD[_] = COMPRESSPOINTER (input: v38|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v11|QWORD[.] + v16|DWORD * 4 + 16], y: v61|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v62|QWORD[.+] = LEA [v11|QWORD[.] + v16|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v63|QWORD[*] = XOR (x: v62|QWORD[.+], y: v38|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v63|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4604846135197064160
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v38|QWORD[.], y: v38|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4604179043631885386
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v65|QWORD[.+] = LEA [v11|QWORD[.] + v16|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v64|QWORD[*] = SHR v65|QWORD[.+] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v64|QWORD[*] + v21|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B88" 
    xhandlers
    flags 
    probability 4603578661223224489
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B39 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B88" 
    xhandlers
    flags 
    probability 4590594123464754032
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B35 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B88" 
    xhandlers
    flags 
    probability 4590001153184595122
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B37 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4589467479932452103
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v64|QWORD[*] + v21|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B88" 
    xhandlers
    flags 
    probability 4588806327720511347
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B41 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4574334916984542422
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v64|QWORD[*] + v21|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[*] = ADD (x: v64|QWORD[*], y: v21|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v66|QWORD, y: v66|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B88" 
    xhandlers
    flags 
    probability 4573566427501456474
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v68|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v68|QWORD + v66|QWORD * 1 - 8], y: v67|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v69|QWORD = LEA [v66|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v69|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B44 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4570262383476918658
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v71|DWORD[_] = MOV [v17|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v72|QWORD[.] = UNCOMPRESSPOINTER (input: v71|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v72|QWORD[.], y: v2|QWORD[.]) trueDestinationProbability: 0.9854570809572428 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B86" 
    xhandlers
    flags 
    probability 4570144353713859813
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v70|QWORD[.]] destination: B50 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 4564966382317228292
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:635) [bci: 20]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.resize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:20] <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:635) [bci: 23]
stack: Object[null] 
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD - - - - - - - 
>@ <|@ instruction v8|DWORD = MOV [v7|QWORD[.] + 12] size: DWORD state [bci:23] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v7|QWORD[.], v8|DWORD] destination: B1 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B72" 
    xhandlers
    flags 
    probability 4562617473904064804
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B68 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    probability 4562093595080792590
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v100|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B66" "B68" "B71" "B70" 
    successors "B73" "B74" 
    xhandlers
    flags 
    probability 4592437312858669387
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v103|DWORD[_] = COMPRESSPOINTER (input: v96|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v80|QWORD[.] + 24], y: v103|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v104|QWORD[*] = XOR (x: v80|QWORD[.], y: v96|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v104|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    probability 4591660023639118941
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v96|QWORD[.], y: v96|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    probability 4590960463341523540
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v105|QWORD[*] = SHR v80|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v105|QWORD[*] + v21|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B83" 
    xhandlers
    flags 
    probability 4590330859073687679
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B77 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B83" 
    xhandlers
    flags 
    probability 4577371935537457006
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B73 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B83" 
    xhandlers
    flags 
    probability 4576750104161816649
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B75 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    probability 4576190455923740328
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v105|QWORD[*] + v21|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B83" 
    xhandlers
    flags 
    probability 4575686772509471639
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B79 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    probability 4561198157899870475
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v105|QWORD[*] + v21|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v106|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v107|QWORD[*] = ADD (x: v105|QWORD[*], y: v21|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v106|QWORD, y: v106|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    probability 4560392264437040573
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v108|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v108|QWORD + v106|QWORD * 1 - 8], y: v107|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v109|QWORD = LEA [v106|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v109|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B88" 
    xhandlers
    flags 
    probability 4559287139136259037
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v67|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B43 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4553315745025075769
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = LEA [v31|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v32|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4553268943811267021
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v32|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v31|QWORD + 296] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV [v31|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v31|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV [v31|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v31|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v31|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v31|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[.] = MOVE v31|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v36|QWORD[.]] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4553315745025075769
    begin_IR
      LIR
      nr   -1  <|@ instruction [v37|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v37|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.LinkedHashMap$Entry.<init>(LinkedHashMap.java:208) [bci: 6]
locals: - - - - - 
java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 9]
stack: v37|QWORD[.] 
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] Object[null] - 
java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stack: v11|QWORD[.] v16|DWORD 
locals: v0|QWORD[.] - - - - v5|DWORD - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.]] [] callTarget: HotSpotMethod<HashMap$Node.<init>(int, Object, Object, HashMap$Node)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:6, 9, 56] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v37|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.LinkedHashMap.newNode(LinkedHashMap.java:283) [bci: 17]
locals: - - - - - v37|QWORD[.] 
java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stack: v11|QWORD[.] v16|DWORD 
locals: v0|QWORD[.] - - - - v5|DWORD - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<LinkedHashMap.linkNodeAtEnd(LinkedHashMap$Entry)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:17, 56] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v37|QWORD[.]] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    probability 4546075572092099182
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v107|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B73" "B75" "B77" "B79" "B82" "B81" 
    successors "B84" "B85" 
    xhandlers
    flags 
    probability 4592437312858669387
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v81|DWORD trueDestinationProbability: 0.9999886211240704 condition: < trueDestination: B83 -> B84 falseDestination: B83 -> B85 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" 
    xhandlers
    flags 
    probability 4592437224411893480
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v83|QWORD[.]] destination: B84 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B50" "B55" "B64" "B84" "B85" "B63" "B53" 
    successors "B87" "B100" 
    xhandlers
    flags 
    probability 4595548303301553864
    begin_IR
      LIR
      nr   -1  <|@ instruction [v110|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v110|QWORD[.], y: v110|QWORD[.]) trueDestinationProbability: 0.6091185940042786 condition: = trueDestination: B86 -> B87 falseDestination: B86 -> B100 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B88" 
    xhandlers
    flags 
    probability 4592437118697206803
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B87 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B35" "B87" "B43" "B44" "B41" "B39" "B37" 
    successors "B89" "B90" 
    xhandlers
    flags 
    probability 4606558935301518032
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction INC [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v111|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction v112|DWORD = ADD (x: v111|DWORD, ~y: [v0|QWORD[.] + 20]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v112|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v112|DWORD, y: [v0|QWORD[.] + 28]) trueDestinationProbability: 7.853038846579175E-4 condition: > trueDestination: B88 -> B89 falseDestination: B88 -> B90 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B91" 
    xhandlers
    flags 
    probability 4606552351536966788
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B90 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" "B89" 
    successors "B92" "B93" "B99" 
    xhandlers
    flags 
    probability 4606558935301518032
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v19|QWORD - keyConstants: [meta{HotSpotType<Ljava/util/HashMap;, resolved>}, meta{HotSpotType<Ljava/util/LinkedHashMap;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/replacements/SnippetTemplate$LRUCache;, resolved>}] keyTargets: [B91 -> B92, B91 -> B93, B91 -> B93] defaultTarget: B91 -> B99 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B97" 
    xhandlers
    flags 
    probability 4606555909645339483
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B92 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B92" "B94" "B96" 
    successors 
    xhandlers
    flags 
    probability 4606558935301518031
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B101" "B119" 
    xhandlers
    flags 
    probability 4589652288651159933
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v122|DWORD[_] = MOV [v110|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v4|DWORD, y: v4|DWORD) trueDestinationProbability: 0.9999962001170364 condition: = trueDestination: B100 -> B101 falseDestination: B100 -> B119 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B102" "B103" 
    xhandlers
    flags 
    probability 4589652269697845341
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B103 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B108" 
    xhandlers
    flags 
    probability 4589138949298219176
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B102 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" "B105" 
    xhandlers
    flags 
    probability 4574630580609171603
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v123|QWORD[.+] = LEA [v110|QWORD[.] + 20] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v124|DWORD[_] = MOV [v123|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v124|DWORD[_], y: v124|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B103 -> B104 falseDestination: B103 -> B105 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B106" "B107" 
    xhandlers
    flags 
    probability 4573832524763622737
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v125|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v126|QWORD[.] = UNCOMPRESSPOINTER (input: v124|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v125|QWORD, y: v125|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B105 -> B106 falseDestination: B105 -> B107 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B108" 
    xhandlers
    flags 
    probability 4573114274502628758
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v127|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v127|QWORD + v125|QWORD * 1 - 8], y: v126|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v128|QWORD = LEA [v125|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v128|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B107 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B91" 
    xhandlers
    flags 
    probability 4559880998172045651
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:669) [bci: 288]
locals: v0|QWORD[.] - - - - v5|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.resize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:288] <|@ <|@
      nr   -1  <|@ instruction v113|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B89 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B108" 
    xhandlers
    flags 
    probability 4559523670035962382
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B104 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B108" 
    xhandlers
    flags 
    probability 4558885225359523289
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v126|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B106 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B102" "B104" "B107" "B106" 
    successors "B109" "B110" 
    xhandlers
    flags 
    probability 4589652269697845341
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v110|QWORD[.] + 20], y: v22|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v129|QWORD[*] = XOR (x: v110|QWORD[.], y: v3|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v129|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B108 -> B109 falseDestination: B108 -> B110 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" "B112" 
    xhandlers
    flags 
    probability 4589138949298219176
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v3|QWORD[.], y: v3|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B110 -> B111 falseDestination: B110 -> B112 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B113" "B114" 
    xhandlers
    flags 
    probability 4588241136471976702
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v130|QWORD[*] = SHR v110|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v130|QWORD[*] + v21|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B112 -> B113 falseDestination: B112 -> B114 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B120" 
    xhandlers
    flags 
    probability 4587433104928358475
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B113 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B120" 
    xhandlers
    flags 
    probability 4574630580609171603
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B109 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B120" 
    xhandlers
    flags 
    probability 4573832524763622738
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B111 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B115" "B116" 
    xhandlers
    flags 
    probability 4573114274502628759
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v130|QWORD[*] + v21|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B114 -> B115 falseDestination: B114 -> B116 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B120" 
    xhandlers
    flags 
    probability 4572467849267734178
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B115 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B117" "B118" 
    xhandlers
    flags 
    probability 4558310625150728107
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v130|QWORD[*] + v21|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v131|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v132|QWORD[*] = ADD (x: v130|QWORD[*], y: v21|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v131|QWORD, y: v131|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B116 -> B117 falseDestination: B116 -> B118 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B120" 
    xhandlers
    flags 
    probability 4557793484962812442
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v133|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v133|QWORD + v131|QWORD * 1 - 8], y: v132|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v134|QWORD = LEA [v131|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v134|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B118 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B94" "B95" 
    xhandlers
    flags 
    probability 4554832167497868566
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v5|DWORD, y: v5|DWORD) trueDestinationProbability: 0.4891304347826087 condition: = trueDestination: B93 -> B94 falseDestination: B93 -> B95 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B96" "B98" 
    xhandlers
    flags 
    probability 4550463275345577801
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v114|DWORD[_] = MOV [v0|QWORD[.] + 52] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:670) [bci: 292]
locals: v0|QWORD[.] - - - - v5|DWORD - - - - - - - 
>@ <|@ instruction NULLCHECK [v114|DWORD[_] * 8] state [bci:292] <|@ <|@
      nr   -1  <|@ instruction v115|DWORD = MOV [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v117|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr   -1  <|@ instruction v116|QWORD = UNCOMPRESSPOINTER (input: v115|DWORD, ~baseRegister: v117|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v118|QWORD = MOV [v116|QWORD + 872] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v119|QWORD = MOV [v118|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v120|QWORD[.] = UNCOMPRESSPOINTER (input: v114|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v120|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v118|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v119|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 15]
locals: v0|QWORD[.] - v120|QWORD[.] - 
java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
locals: - - - - - - - - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<LinkedHashMap.removeEldestEntry(Map$Entry)> state [bci:15, 295] <|@ <|@
      nr   -1  <|@ instruction v121|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v121|DWORD, y: v121|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B95 -> B96 falseDestination: B95 -> B98 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B97" 
    xhandlers
    flags 
    probability 4550463275345577801
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B96 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B97" 
    xhandlers
    flags 
    probability 4550193860395418340
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B94 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B120" 
    xhandlers
    flags 
    probability 4543399067768740112
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v132|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B117 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B119" "B109" "B117" "B118" "B115" "B113" "B111" 
    successors 
    xhandlers
    flags 
    probability 4589652288651159933
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v135|QWORD = MOV [v19|QWORD + 688] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v136|QWORD = MOV [v135|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v137|QWORD[.] = UNCOMPRESSPOINTER (input: v122|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v110|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v135|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v136|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:663) [bci: 253]
locals: - - - - - - - - - - - - v137|QWORD[.] 
>@ <|@ instruction - = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<HashMap.afterNodeAccess(HashMap$Node)> state [bci:253] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v137|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4542678729597855531
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] - v12|DWORD - - - - 
>@ <|@ instruction v73|DWORD = MOV [v2|QWORD[.] + 8] size: DWORD state [bci:29] <|@ <|@
      nr   -1  <|@ instruction v75|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr   -1  <|@ instruction v74|QWORD = UNCOMPRESSPOINTER (input: v73|DWORD, ~baseRegister: v75|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v76|QWORD = MOV [v74|QWORD + 464] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v77|QWORD = MOV [v76|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v72|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v76|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v77|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:641) [bci: 91]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] v70|QWORD[.] - - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:91] <|@ <|@
      nr   -1  <|@ instruction v78|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v78|DWORD, y: v78|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B86" 
    xhandlers
    flags 
    probability 4542678729597855531
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v70|QWORD[.]] destination: B53 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B63" 
    xhandlers
    flags 
    probability 4529894057192690854
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] v80|QWORD[.] - - - - v81|DWORD 
>@ <|@ instruction v86|DWORD = MOV [v2|QWORD[.] + 8] size: DWORD state [bci:134] <|@ <|@
      nr   -1  <|@ instruction v88|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr   -1  <|@ instruction v87|QWORD = UNCOMPRESSPOINTER (input: v86|DWORD, ~baseRegister: v88|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v89|QWORD = MOV [v87|QWORD + 464] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v90|QWORD = MOV [v89|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v85|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v89|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v90|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:654) [bci: 203]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] - - - v83|QWORD[.] - v81|DWORD 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:203] <|@ <|@
      nr   -1  <|@ instruction v91|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v91|DWORD, y: v91|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B86" 
    xhandlers
    flags 
    probability 4529894057192690854
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v83|QWORD[.]] destination: B63 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4523100981620127249
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v33|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] - v12|DWORD - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7fba62ccef80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:29] <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] - v12|DWORD - - - - 
>@ <|@ instruction NULLCHECK [v34|QWORD[.]] state [bci:29] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v34|QWORD[.]] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" 
    xhandlers
    flags 
    probability 4518403274531071726
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:650) [bci: 169]
locals: v0|QWORD[.] - - v3|QWORD[.] v4|DWORD v5|DWORD - - - - v83|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<HashMap.treeifyBin(HashMap$Node[], int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:169] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v83|QWORD[.]] destination: B85 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B86" 
    xhandlers
    flags 
    probability 4510226010095555986
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v70|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:644) [bci: 123]
locals: v0|QWORD[.] - - v3|QWORD[.] v4|DWORD v5|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|QWORD[.], rdi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap$TreeNode.putTreeVal(HashMap, HashMap$Node[], int, Object, Object)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:123] <|@ <|@
      nr   -1  <|@ instruction v79|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v79|QWORD[.]] destination: B55 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B120" 
    xhandlers
    flags 
    probability 4508568125070994604
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:659) [bci: 222]
locals: v0|QWORD[.] - - v3|QWORD[.] v4|DWORD v5|DWORD - - - - v110|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [v122|DWORD[_] * 8] state [bci:222] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B119 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-51507|0xffffffffffff36cd], long[5780|0x1694]] destination: B47 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -157971 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 1300 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:654) [bci: 206]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] - - - v83|QWORD[.] - v81|DWORD 
>@ <|@ instruction DEOPT info [bci:206] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-75547|0xfffffffffffed8e5], long[0|0x0]] destination: B121 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B121" "B47" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v138|DWORD, v139|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v138|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v139|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] - v12|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:29] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -61235 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 8980 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:670) [bci: 292]
locals: v0|QWORD[.] - - - - v5|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:292] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B26 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B26" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -82987 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stack: v11|QWORD[.] v16|DWORD v38|QWORD[.] 
locals: v0|QWORD[.] - - - - v5|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:59] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -153363 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:641) [bci: 94]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] v70|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:94] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -161299 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 10260 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 18]
stack: v121|DWORD 
locals: v0|QWORD[.] - v120|QWORD[.] - 
java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
locals: - - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:18, 295] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -129299 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:634) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #21         // table:java.util.HashMap$Node[]
     4: dup           
     5: astore        6
     7: ifnull        19
    10: aload         6
    12: arraylength   
    13: dup           
    14: istore        8
    16: ifne          29
    19: aload_0       
    20: invokevirtual #23         // resize:()java.util.HashMap$Node[]
    23: dup           
    24: astore        6
    26: arraylength   
    27: istore        8
    29: aload         6
    31: iload         8
    33: iconst_1      
    34: isub          
    35: iload_1       
    36: iand          
    37: dup           
    38: istore        9
    40: aaload        
    41: dup           
    42: astore        7
    44: ifnonnull     63
    47: aload         6
    49: iload         9
    51: aload_0       
    52: iload_1       
    53: aload_2       
    54: aload_3       
    55: aconst_null   
    56: invokevirtual #40         // newNode:(int, java.lang.Object, java.lang.Object, java.util.HashMap$Node)java.util.HashMap$Node
    59: aastore       
    60: goto          259
    63: aload         7
    65: getfield      #35         // java.util.HashMap$Node.hash:int
    68: iload_1       
    69: if_icmpne     104
    72: aload         7
    74: getfield      #36         // java.util.HashMap$Node.key:java.lang.Object
    77: dup           
    78: astore        11
    80: aload_2       
    81: if_acmpeq     97
    84: aload_2       
    85: ifnull        104
    88: aload_2       
    89: aload         11
    91: invokevirtual #37         // java.lang.Object.equals:(java.lang.Object)boolean
    94: ifeq          104
    97: aload         7
    99: astore        10
   101: goto          222
   104: aload         7
   106: instanceof    #180        // java.util.HashMap$TreeNode
   109: ifeq          131
   112: aload         7
   114: checkcast     #180        // java.util.HashMap$TreeNode
   117: aload_0       
   118: aload         6
   120: iload_1       
   121: aload_2       
   122: aload_3       
   123: invokevirtual #41         // java.util.HashMap$TreeNode.putTreeVal:(java.util.HashMap, java.util.HashMap$Node[], int, java.lang.Object, java.lang.Object)java.util.HashMap$TreeNode
   126: astore        10
   128: goto          222
   131: iconst_0      
   132: istore        12
   134: aload         7
   136: getfield      #38         // java.util.HashMap$Node.next:java.util.HashMap$Node
   139: dup           
   140: astore        10
   142: ifnonnull     175
   145: aload         7
   147: aload_0       
   148: iload_1       
   149: aload_2       
   150: aload_3       
   151: aconst_null   
   152: invokevirtual #40         // newNode:(int, java.lang.Object, java.lang.Object, java.util.HashMap$Node)java.util.HashMap$Node
   155: putfield      #38         // java.util.HashMap$Node.next:java.util.HashMap$Node
   158: iload         12
   160: bipush        7
   162: if_icmplt     222
   165: aload_0       
   166: aload         6
   168: iload_1       
   169: invokevirtual #42         // treeifyBin:(java.util.HashMap$Node[], int)void
   172: goto          222
   175: aload         10
   177: getfield      #35         // java.util.HashMap$Node.hash:int
   180: iload_1       
   181: if_icmpne     212
   184: aload         10
   186: getfield      #36         // java.util.HashMap$Node.key:java.lang.Object
   189: dup           
   190: astore        11
   192: aload_2       
   193: if_acmpeq     222
   196: aload_2       
   197: ifnull        212
   200: aload_2       
   201: aload         11
   203: invokevirtual #37         // java.lang.Object.equals:(java.lang.Object)boolean
   206: ifeq          212
   209: goto          222
   212: aload         10
   214: astore        7
   216: iinc          
   219: goto          134
   222: aload         10
   224: ifnull        259
   227: aload         10
   229: getfield      #34         // java.util.HashMap$Node.value:java.lang.Object
   232: astore        12
   234: iload         4
   236: ifeq          244
   239: aload         12
   241: ifnonnull     250
   244: aload         10
   246: aload_3       
   247: putfield      #34         // java.util.HashMap$Node.value:java.lang.Object
   250: aload_0       
   251: aload         10
   253: invokevirtual #43         // afterNodeAccess:(java.util.HashMap$Node)void
   256: aload         12
   258: areturn       
   259: aload_0       
   260: dup           
   261: getfield      #44         // modCount:int
   264: iconst_1      
   265: iadd          
   266: putfield      #44         // modCount:int
   269: aload_0       
   270: dup           
   271: getfield      #32         // size:int
   274: iconst_1      
   275: iadd          
   276: dup_x1        
   277: putfield      #32         // size:int
   280: aload_0       
   281: getfield      #17         // threshold:int
   284: if_icmple     292
   287: aload_0       
   288: invokevirtual #23         // resize:()java.util.HashMap$Node[]
   291: pop           
   292: aload_0       
   293: iload         5
   295: invokevirtual #45         // afterNodeInsertion:(boolean)void
   298: aconst_null   
   299: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After MarkBasePointers"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|DWORD, rdi|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@21849dd slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[_] = MOV [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v6|DWORD[_], y: v6|DWORD[_]) trueDestinationProbability: 0.0015880438063265454 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607168114973028567
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOV [v6|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v9|DWORD, y: v9|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607168114973028567
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v10|QWORD[.], v9|DWORD] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B1" 
    successors "B6" "B121" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v11|QWORD[.], v12|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = MOV [v11|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOV [v11|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = DEC v12|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = AND (x: v1|DWORD, y: v15|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v16|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B121 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B48" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v17|DWORD[_] = MOV [v11|QWORD[.] + v16|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = MOV [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = UNCOMPRESSPOINTER (input: v18|DWORD, ~baseRegister: v20|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = MOVE input: long[140438306553856|0x7fba57600000] <|@ <|@
      nr   -1  <|@ instruction v22|DWORD[_] = COMPRESSPOINTER (input: v3|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v17|DWORD[_], y: v17|DWORD[_]) trueDestinationProbability: 0.8229115724385652 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B12" "B47" 
    xhandlers
    flags 
    probability 4605587348047262798
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v19|QWORD - keyConstants: [meta{HotSpotType<Ljava/util/HashMap;, resolved>}, meta{HotSpotType<Ljava/util/LinkedHashMap;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/replacements/SnippetTemplate$LRUCache;, resolved>}] keyTargets: [B7 -> B8, B7 -> B12, B7 -> B12] defaultTarget: B7 -> B47 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4605585062831744793
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = LEA [v23|QWORD + 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v24|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4605510964398880109
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v24|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v23|QWORD + 288] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV [v23|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v23|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV [v23|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v23|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v23|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD[.] = MOVE v23|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v28|QWORD[.]] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 4605585062831744793
    begin_IR
      LIR
      nr   -1  <|@ instruction [v29|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v29|QWORD[.] + 20], y: v22|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|DWORD[_] = COMPRESSPOINTER (input: v2|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v29|QWORD[.] + 16], y: v30|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v29|QWORD[.] + 12], y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v29|QWORD[.]] destination: B11 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B11" "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4605587348047262798
    begin_IR
      LIR
      nr   -1  <|@ instruction [v38|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = UNCOMPRESSPOINTER (input: v14|DWORD, ~baseRegister: v40|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = MOV [v39|QWORD + 208] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = MOV [v41|QWORD + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = MOV [v38|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = UNCOMPRESSPOINTER (input: v43|DWORD, ~baseRegister: v45|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = MOVSXD v42|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v41|QWORD, y: [v44|QWORD + v46|QWORD * 1]) trueDestinationProbability: 0.5 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B45" 
    xhandlers
    flags 
    probability 4601083748419892302
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v42|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B45 y: 32 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4601083748419892302
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v41|QWORD, y: v44|QWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4596580148792521806
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = MOV [v44|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = MOV [v47|QWORD] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B24" 
    successors "B23" "B26" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4602807799859017905
    begin_IR
      LIR
      nr   -1  <|@ instruction [v49|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v48|DWORD, y: v49|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602807799859017905
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = SHL v49|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = LEA [v50|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = MOVSXD v51|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v53|QWORD = MOV [v47|QWORD + v52|QWORD * 1] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v41|QWORD, y: v53|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B23 -> B25 falseDestination: B23 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B22" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4599230716294395707
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v54|DWORD = INC v49|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v54|DWORD] destination: B24 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B27" 
    xhandlers
    flags 
    probability 4601083748419892302
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B17 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B27" 
    xhandlers
    flags 
    probability 4596580148792521807
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v44|QWORD + 32], y: v41|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B27" 
    xhandlers
    flags 
    probability 4596580148792521806
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B20 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B17" "B25" "B20" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4605587348047262798
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" 
    xhandlers
    flags 
    probability 4604846135197064160
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B28 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B49" "B54" 
    xhandlers
    flags 
    probability 4595548303301553864
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v70|QWORD[.] = UNCOMPRESSPOINTER (input: v17|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v17|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.01987559010066231 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4595421491411700642
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v17|DWORD[_] * 8 + 8] trueDestinationProbability: 2.021089053783065E-6 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B56 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4595421478772878611
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v70|QWORD[.], int[0|0x0]] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B62" 
    successors "B65" "B58" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4595777537596400292
    begin_IR
      LIR
      nr   -1  <|@ instruction [v80|QWORD[.], v81|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] v80|QWORD[.] - - - - v81|DWORD 
>@ <|@ instruction v82|DWORD[_] = MOV [v80|QWORD[.] + 24] size: DWORD state [bci:134] <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = UNCOMPRESSPOINTER (input: v82|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v82|DWORD[_], y: v82|DWORD[_]) trueDestinationProbability: 0.5880075530332061 condition: = trueDestination: B57 -> B65 falseDestination: B57 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4590110563079390205
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v82|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.8692436604445373 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B62 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B57" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4576850562957400324
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] v80|QWORD[.] - - - - v81|DWORD 
>@ <|@ instruction SAFEPOINT v92|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 thread: r15 state [bci:134] <|@ <|@
      nr   -1  <|@ instruction v93|DWORD = INC v81|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v83|QWORD[.], v93|DWORD] destination: B62 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4592437312858669387
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v94|QWORD = MOV [v19|QWORD + 680] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v95|QWORD = MOV [v94|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v94|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v95|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:648) [bci: 152]
stack: v80|QWORD[.] 
locals: v0|QWORD[.] v1|DWORD - v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] - - - v83|QWORD[.] - v81|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.]]) [] callTarget: HotSpotMethod<HashMap.newNode(int, Object, Object, HashMap$Node)> state [bci:152] <|@ <|@
      nr   -1  <|@ instruction v96|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B67 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B72" 
    xhandlers
    flags 
    probability 4591660023639118941
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B66 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4590594123464754032
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[.+] = LEA [v11|QWORD[.] + v16|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v56|DWORD[_] = MOV [v55|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v56|DWORD[_], y: v56|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4590001153184595122
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[.] = UNCOMPRESSPOINTER (input: v56|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v57|QWORD, y: v57|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4589467479932452103
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v59|QWORD + v57|QWORD * 1 - 8], y: v58|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = LEA [v57|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v60|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B64" "B60" 
    xhandlers
    flags 
    probability 4589398445432346844
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v84|DWORD[_] = MOV [v82|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v85|QWORD[.] = UNCOMPRESSPOINTER (input: v84|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v85|QWORD[.], y: v2|QWORD[.]) trueDestinationProbability: 0.9998932466496128 condition: = trueDestination: B59 -> B64 falseDestination: B59 -> B60 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B86" 
    xhandlers
    flags 
    probability 4589397940059341918
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v83|QWORD[.]] destination: B64 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4577371935537457006
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v97|QWORD[.+] = LEA [v80|QWORD[.] + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v98|DWORD[_] = MOV [v97|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v98|DWORD[_], y: v98|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B67 -> B68 falseDestination: B67 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" "B71" 
    xhandlers
    flags 
    probability 4576750104161816650
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v99|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v100|QWORD[.] = UNCOMPRESSPOINTER (input: v98|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v99|QWORD, y: v99|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    probability 4576190455923740329
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v101|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v101|QWORD + v99|QWORD * 1 - 8], y: v100|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v102|QWORD = LEA [v99|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v102|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    probability 4575897384022324722
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B30 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4575895921484393205
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v25|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] - v12|DWORD - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7fba62ccef80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:29] <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] - v12|DWORD - - - - 
>@ <|@ instruction NULLCHECK [v26|QWORD[.]] state [bci:29] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v26|QWORD[.]] destination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4575188794187971253
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v58|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" "B33" "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4605587348047262798
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v61|DWORD[_] = COMPRESSPOINTER (input: v38|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v11|QWORD[.] + v16|DWORD * 4 + 16], y: v61|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v62|QWORD[.+] = LEA [v11|QWORD[.] + v16|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v63|QWORD[*] = XOR (x: v62|QWORD[.+], y: v38|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v63|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4604846135197064160
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v38|QWORD[.], y: v38|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4604179043631885386
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v65|QWORD[.+] = LEA [v11|QWORD[.] + v16|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v64|QWORD[*] = SHR v65|QWORD[.+] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v64|QWORD[*] + v21|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B88" 
    xhandlers
    flags 
    probability 4603578661223224489
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B39 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B88" 
    xhandlers
    flags 
    probability 4590594123464754032
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B35 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B88" 
    xhandlers
    flags 
    probability 4590001153184595122
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B37 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4589467479932452103
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v64|QWORD[*] + v21|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B88" 
    xhandlers
    flags 
    probability 4588806327720511347
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B41 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4574334916984542422
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v64|QWORD[*] + v21|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[*] = ADD (x: v64|QWORD[*], y: v21|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v66|QWORD, y: v66|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B88" 
    xhandlers
    flags 
    probability 4573566427501456474
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v68|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v68|QWORD + v66|QWORD * 1 - 8], y: v67|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v69|QWORD = LEA [v66|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v69|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B44 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4570262383476918658
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v71|DWORD[_] = MOV [v17|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v72|QWORD[.] = UNCOMPRESSPOINTER (input: v71|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v72|QWORD[.], y: v2|QWORD[.]) trueDestinationProbability: 0.9854570809572428 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B86" 
    xhandlers
    flags 
    probability 4570144353713859813
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v70|QWORD[.]] destination: B50 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 4564966382317228292
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:635) [bci: 20]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.resize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:20] <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:635) [bci: 23]
stack: Object[null] 
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD - - - - - - - 
>@ <|@ instruction v8|DWORD = MOV [v7|QWORD[.] + 12] size: DWORD state [bci:23] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v7|QWORD[.], v8|DWORD] destination: B1 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B72" 
    xhandlers
    flags 
    probability 4562617473904064804
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B68 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    probability 4562093595080792590
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v100|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B66" "B68" "B71" "B70" 
    successors "B73" "B74" 
    xhandlers
    flags 
    probability 4592437312858669387
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v103|DWORD[_] = COMPRESSPOINTER (input: v96|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v80|QWORD[.] + 24], y: v103|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v104|QWORD[*] = XOR (x: v80|QWORD[.], y: v96|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v104|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    probability 4591660023639118941
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v96|QWORD[.], y: v96|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    probability 4590960463341523540
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v105|QWORD[*] = SHR v80|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v105|QWORD[*] + v21|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B83" 
    xhandlers
    flags 
    probability 4590330859073687679
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B77 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B83" 
    xhandlers
    flags 
    probability 4577371935537457006
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B73 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B83" 
    xhandlers
    flags 
    probability 4576750104161816649
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B75 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    probability 4576190455923740328
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v105|QWORD[*] + v21|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B83" 
    xhandlers
    flags 
    probability 4575686772509471639
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B79 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    probability 4561198157899870475
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v105|QWORD[*] + v21|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v106|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v107|QWORD[*] = ADD (x: v105|QWORD[*], y: v21|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v106|QWORD, y: v106|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    probability 4560392264437040573
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v108|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v108|QWORD + v106|QWORD * 1 - 8], y: v107|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v109|QWORD = LEA [v106|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v109|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B88" 
    xhandlers
    flags 
    probability 4559287139136259037
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v67|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B43 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4553315745025075769
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = LEA [v31|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v32|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4553268943811267021
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v32|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v31|QWORD + 296] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV [v31|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v31|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV [v31|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v31|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v31|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v31|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[.] = MOVE v31|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v36|QWORD[.]] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4553315745025075769
    begin_IR
      LIR
      nr   -1  <|@ instruction [v37|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v37|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.LinkedHashMap$Entry.<init>(LinkedHashMap.java:208) [bci: 6]
locals: - - - - - 
java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 9]
stack: v37|QWORD[.] 
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] Object[null] - 
java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stack: v11|QWORD[.] v16|DWORD 
locals: v0|QWORD[.] - - - - v5|DWORD - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.]] [] callTarget: HotSpotMethod<HashMap$Node.<init>(int, Object, Object, HashMap$Node)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:6, 9, 56] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v37|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.LinkedHashMap.newNode(LinkedHashMap.java:283) [bci: 17]
locals: - - - - - v37|QWORD[.] 
java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stack: v11|QWORD[.] v16|DWORD 
locals: v0|QWORD[.] - - - - v5|DWORD - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<LinkedHashMap.linkNodeAtEnd(LinkedHashMap$Entry)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:17, 56] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v37|QWORD[.]] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    probability 4546075572092099182
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v107|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B73" "B75" "B77" "B79" "B82" "B81" 
    successors "B84" "B85" 
    xhandlers
    flags 
    probability 4592437312858669387
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v81|DWORD trueDestinationProbability: 0.9999886211240704 condition: < trueDestination: B83 -> B84 falseDestination: B83 -> B85 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" 
    xhandlers
    flags 
    probability 4592437224411893480
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v83|QWORD[.]] destination: B84 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B50" "B55" "B64" "B84" "B85" "B63" "B53" 
    successors "B87" "B100" 
    xhandlers
    flags 
    probability 4595548303301553864
    begin_IR
      LIR
      nr   -1  <|@ instruction [v110|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v110|QWORD[.], y: v110|QWORD[.]) trueDestinationProbability: 0.6091185940042786 condition: = trueDestination: B86 -> B87 falseDestination: B86 -> B100 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B88" 
    xhandlers
    flags 
    probability 4592437118697206803
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B87 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B35" "B87" "B43" "B44" "B41" "B39" "B37" 
    successors "B89" "B90" 
    xhandlers
    flags 
    probability 4606558935301518032
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction INC [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v111|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction v112|DWORD = ADD (x: v111|DWORD, ~y: [v0|QWORD[.] + 20]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v112|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v112|DWORD, y: [v0|QWORD[.] + 28]) trueDestinationProbability: 7.853038846579175E-4 condition: > trueDestination: B88 -> B89 falseDestination: B88 -> B90 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B91" 
    xhandlers
    flags 
    probability 4606552351536966788
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B90 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" "B89" 
    successors "B92" "B93" "B99" 
    xhandlers
    flags 
    probability 4606558935301518032
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v19|QWORD - keyConstants: [meta{HotSpotType<Ljava/util/HashMap;, resolved>}, meta{HotSpotType<Ljava/util/LinkedHashMap;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/replacements/SnippetTemplate$LRUCache;, resolved>}] keyTargets: [B91 -> B92, B91 -> B93, B91 -> B93] defaultTarget: B91 -> B99 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B97" 
    xhandlers
    flags 
    probability 4606555909645339483
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B92 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B92" "B94" "B96" 
    successors 
    xhandlers
    flags 
    probability 4606558935301518031
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B101" "B119" 
    xhandlers
    flags 
    probability 4589652288651159933
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v122|DWORD[_] = MOV [v110|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v4|DWORD, y: v4|DWORD) trueDestinationProbability: 0.9999962001170364 condition: = trueDestination: B100 -> B101 falseDestination: B100 -> B119 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B102" "B103" 
    xhandlers
    flags 
    probability 4589652269697845341
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B103 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B108" 
    xhandlers
    flags 
    probability 4589138949298219176
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B102 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" "B105" 
    xhandlers
    flags 
    probability 4574630580609171603
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v123|QWORD[.+] = LEA [v110|QWORD[.] + 20] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v124|DWORD[_] = MOV [v123|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v124|DWORD[_], y: v124|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B103 -> B104 falseDestination: B103 -> B105 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B106" "B107" 
    xhandlers
    flags 
    probability 4573832524763622737
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v125|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v126|QWORD[.] = UNCOMPRESSPOINTER (input: v124|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v125|QWORD, y: v125|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B105 -> B106 falseDestination: B105 -> B107 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B108" 
    xhandlers
    flags 
    probability 4573114274502628758
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v127|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v127|QWORD + v125|QWORD * 1 - 8], y: v126|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v128|QWORD = LEA [v125|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v128|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B107 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B91" 
    xhandlers
    flags 
    probability 4559880998172045651
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:669) [bci: 288]
locals: v0|QWORD[.] - - - - v5|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.resize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:288] <|@ <|@
      nr   -1  <|@ instruction v113|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B89 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B108" 
    xhandlers
    flags 
    probability 4559523670035962382
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B104 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B108" 
    xhandlers
    flags 
    probability 4558885225359523289
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v126|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B106 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B102" "B104" "B107" "B106" 
    successors "B109" "B110" 
    xhandlers
    flags 
    probability 4589652269697845341
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v110|QWORD[.] + 20], y: v22|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v129|QWORD[*] = XOR (x: v110|QWORD[.], y: v3|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v129|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B108 -> B109 falseDestination: B108 -> B110 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" "B112" 
    xhandlers
    flags 
    probability 4589138949298219176
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v3|QWORD[.], y: v3|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B110 -> B111 falseDestination: B110 -> B112 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B113" "B114" 
    xhandlers
    flags 
    probability 4588241136471976702
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v130|QWORD[*] = SHR v110|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v130|QWORD[*] + v21|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B112 -> B113 falseDestination: B112 -> B114 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B120" 
    xhandlers
    flags 
    probability 4587433104928358475
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B113 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B120" 
    xhandlers
    flags 
    probability 4574630580609171603
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B109 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B120" 
    xhandlers
    flags 
    probability 4573832524763622738
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B111 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B115" "B116" 
    xhandlers
    flags 
    probability 4573114274502628759
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v130|QWORD[*] + v21|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B114 -> B115 falseDestination: B114 -> B116 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B120" 
    xhandlers
    flags 
    probability 4572467849267734178
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B115 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B117" "B118" 
    xhandlers
    flags 
    probability 4558310625150728107
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v130|QWORD[*] + v21|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v131|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v132|QWORD[*] = ADD (x: v130|QWORD[*], y: v21|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v131|QWORD, y: v131|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B116 -> B117 falseDestination: B116 -> B118 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B120" 
    xhandlers
    flags 
    probability 4557793484962812442
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v133|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v133|QWORD + v131|QWORD * 1 - 8], y: v132|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v134|QWORD = LEA [v131|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v134|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B118 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B94" "B95" 
    xhandlers
    flags 
    probability 4554832167497868566
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v5|DWORD, y: v5|DWORD) trueDestinationProbability: 0.4891304347826087 condition: = trueDestination: B93 -> B94 falseDestination: B93 -> B95 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B96" "B98" 
    xhandlers
    flags 
    probability 4550463275345577801
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v114|DWORD[_] = MOV [v0|QWORD[.] + 52] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:670) [bci: 292]
locals: v0|QWORD[.] - - - - v5|DWORD - - - - - - - 
>@ <|@ instruction NULLCHECK [v114|DWORD[_] * 8] state [bci:292] <|@ <|@
      nr   -1  <|@ instruction v115|DWORD = MOV [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v117|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr   -1  <|@ instruction v116|QWORD = UNCOMPRESSPOINTER (input: v115|DWORD, ~baseRegister: v117|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v118|QWORD = MOV [v116|QWORD + 872] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v119|QWORD = MOV [v118|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v120|QWORD[.] = UNCOMPRESSPOINTER (input: v114|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v120|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v118|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v119|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 15]
locals: v0|QWORD[.] - v120|QWORD[.] - 
java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
locals: - - - - - - - - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<LinkedHashMap.removeEldestEntry(Map$Entry)> state [bci:15, 295] <|@ <|@
      nr   -1  <|@ instruction v121|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v121|DWORD, y: v121|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B95 -> B96 falseDestination: B95 -> B98 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B97" 
    xhandlers
    flags 
    probability 4550463275345577801
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B96 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B97" 
    xhandlers
    flags 
    probability 4550193860395418340
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B94 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B120" 
    xhandlers
    flags 
    probability 4543399067768740112
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v132|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B117 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B119" "B109" "B117" "B118" "B115" "B113" "B111" 
    successors 
    xhandlers
    flags 
    probability 4589652288651159933
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v135|QWORD = MOV [v19|QWORD + 688] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v136|QWORD = MOV [v135|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v137|QWORD[.] = UNCOMPRESSPOINTER (input: v122|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v110|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v135|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v136|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:663) [bci: 253]
locals: - - - - - - - - - - - - v137|QWORD[.] 
>@ <|@ instruction - = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<HashMap.afterNodeAccess(HashMap$Node)> state [bci:253] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v137|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4542678729597855531
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] - v12|DWORD - - - - 
>@ <|@ instruction v73|DWORD = MOV [v2|QWORD[.] + 8] size: DWORD state [bci:29] <|@ <|@
      nr   -1  <|@ instruction v75|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr   -1  <|@ instruction v74|QWORD = UNCOMPRESSPOINTER (input: v73|DWORD, ~baseRegister: v75|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v76|QWORD = MOV [v74|QWORD + 464] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v77|QWORD = MOV [v76|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v72|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v76|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v77|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:641) [bci: 91]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] v70|QWORD[.] - - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:91] <|@ <|@
      nr   -1  <|@ instruction v78|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v78|DWORD, y: v78|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B86" 
    xhandlers
    flags 
    probability 4542678729597855531
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v70|QWORD[.]] destination: B53 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B63" 
    xhandlers
    flags 
    probability 4529894057192690854
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] v80|QWORD[.] - - - - v81|DWORD 
>@ <|@ instruction v86|DWORD = MOV [v2|QWORD[.] + 8] size: DWORD state [bci:134] <|@ <|@
      nr   -1  <|@ instruction v88|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr   -1  <|@ instruction v87|QWORD = UNCOMPRESSPOINTER (input: v86|DWORD, ~baseRegister: v88|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v89|QWORD = MOV [v87|QWORD + 464] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v90|QWORD = MOV [v89|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v85|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v89|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v90|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:654) [bci: 203]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] - - - v83|QWORD[.] - v81|DWORD 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:203] <|@ <|@
      nr   -1  <|@ instruction v91|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v91|DWORD, y: v91|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B86" 
    xhandlers
    flags 
    probability 4529894057192690854
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v83|QWORD[.]] destination: B63 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4523100981620127249
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v33|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] - v12|DWORD - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7fba62ccef80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:29] <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] - v12|DWORD - - - - 
>@ <|@ instruction NULLCHECK [v34|QWORD[.]] state [bci:29] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v34|QWORD[.]] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" 
    xhandlers
    flags 
    probability 4518403274531071726
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:650) [bci: 169]
locals: v0|QWORD[.] - - v3|QWORD[.] v4|DWORD v5|DWORD - - - - v83|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<HashMap.treeifyBin(HashMap$Node[], int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:169] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v83|QWORD[.]] destination: B85 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B86" 
    xhandlers
    flags 
    probability 4510226010095555986
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v70|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:644) [bci: 123]
locals: v0|QWORD[.] - - v3|QWORD[.] v4|DWORD v5|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|QWORD[.], rdi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap$TreeNode.putTreeVal(HashMap, HashMap$Node[], int, Object, Object)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:123] <|@ <|@
      nr   -1  <|@ instruction v79|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v79|QWORD[.]] destination: B55 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B120" 
    xhandlers
    flags 
    probability 4508568125070994604
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:659) [bci: 222]
locals: v0|QWORD[.] - - v3|QWORD[.] v4|DWORD v5|DWORD - - - - v110|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [v122|DWORD[_] * 8] state [bci:222] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B119 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-51507|0xffffffffffff36cd], long[5780|0x1694]] destination: B47 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -157971 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 1300 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:654) [bci: 206]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] - - - v83|QWORD[.] - v81|DWORD 
>@ <|@ instruction DEOPT info [bci:206] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-75547|0xfffffffffffed8e5], long[0|0x0]] destination: B121 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B121" "B47" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v138|DWORD, v139|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v138|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v139|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] - v12|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:29] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -61235 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 8980 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:670) [bci: 292]
locals: v0|QWORD[.] - - - - v5|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:292] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B26 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B26" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -82987 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stack: v11|QWORD[.] v16|DWORD v38|QWORD[.] 
locals: v0|QWORD[.] - - - - v5|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:59] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -153363 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:641) [bci: 94]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] v70|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:94] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -161299 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 10260 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 18]
stack: v121|DWORD 
locals: v0|QWORD[.] - v120|QWORD[.] - 
java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
locals: - - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:18, 295] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -129299 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:634) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #21         // table:java.util.HashMap$Node[]
     4: dup           
     5: astore        6
     7: ifnull        19
    10: aload         6
    12: arraylength   
    13: dup           
    14: istore        8
    16: ifne          29
    19: aload_0       
    20: invokevirtual #23         // resize:()java.util.HashMap$Node[]
    23: dup           
    24: astore        6
    26: arraylength   
    27: istore        8
    29: aload         6
    31: iload         8
    33: iconst_1      
    34: isub          
    35: iload_1       
    36: iand          
    37: dup           
    38: istore        9
    40: aaload        
    41: dup           
    42: astore        7
    44: ifnonnull     63
    47: aload         6
    49: iload         9
    51: aload_0       
    52: iload_1       
    53: aload_2       
    54: aload_3       
    55: aconst_null   
    56: invokevirtual #40         // newNode:(int, java.lang.Object, java.lang.Object, java.util.HashMap$Node)java.util.HashMap$Node
    59: aastore       
    60: goto          259
    63: aload         7
    65: getfield      #35         // java.util.HashMap$Node.hash:int
    68: iload_1       
    69: if_icmpne     104
    72: aload         7
    74: getfield      #36         // java.util.HashMap$Node.key:java.lang.Object
    77: dup           
    78: astore        11
    80: aload_2       
    81: if_acmpeq     97
    84: aload_2       
    85: ifnull        104
    88: aload_2       
    89: aload         11
    91: invokevirtual #37         // java.lang.Object.equals:(java.lang.Object)boolean
    94: ifeq          104
    97: aload         7
    99: astore        10
   101: goto          222
   104: aload         7
   106: instanceof    #180        // java.util.HashMap$TreeNode
   109: ifeq          131
   112: aload         7
   114: checkcast     #180        // java.util.HashMap$TreeNode
   117: aload_0       
   118: aload         6
   120: iload_1       
   121: aload_2       
   122: aload_3       
   123: invokevirtual #41         // java.util.HashMap$TreeNode.putTreeVal:(java.util.HashMap, java.util.HashMap$Node[], int, java.lang.Object, java.lang.Object)java.util.HashMap$TreeNode
   126: astore        10
   128: goto          222
   131: iconst_0      
   132: istore        12
   134: aload         7
   136: getfield      #38         // java.util.HashMap$Node.next:java.util.HashMap$Node
   139: dup           
   140: astore        10
   142: ifnonnull     175
   145: aload         7
   147: aload_0       
   148: iload_1       
   149: aload_2       
   150: aload_3       
   151: aconst_null   
   152: invokevirtual #40         // newNode:(int, java.lang.Object, java.lang.Object, java.util.HashMap$Node)java.util.HashMap$Node
   155: putfield      #38         // java.util.HashMap$Node.next:java.util.HashMap$Node
   158: iload         12
   160: bipush        7
   162: if_icmplt     222
   165: aload_0       
   166: aload         6
   168: iload_1       
   169: invokevirtual #42         // treeifyBin:(java.util.HashMap$Node[], int)void
   172: goto          222
   175: aload         10
   177: getfield      #35         // java.util.HashMap$Node.hash:int
   180: iload_1       
   181: if_icmpne     212
   184: aload         10
   186: getfield      #36         // java.util.HashMap$Node.key:java.lang.Object
   189: dup           
   190: astore        11
   192: aload_2       
   193: if_acmpeq     222
   196: aload_2       
   197: ifnull        212
   200: aload_2       
   201: aload         11
   203: invokevirtual #37         // java.lang.Object.equals:(java.lang.Object)boolean
   206: ifeq          212
   209: goto          222
   212: aload         10
   214: astore        7
   216: iinc          
   219: goto          134
   222: aload         10
   224: ifnull        259
   227: aload         10
   229: getfield      #34         // java.util.HashMap$Node.value:java.lang.Object
   232: astore        12
   234: iload         4
   236: ifeq          244
   239: aload         12
   241: ifnonnull     250
   244: aload         10
   246: aload_3       
   247: putfield      #34         // java.util.HashMap$Node.value:java.lang.Object
   250: aload_0       
   251: aload         10
   253: invokevirtual #43         // afterNodeAccess:(java.util.HashMap$Node)void
   256: aload         12
   258: areturn       
   259: aload_0       
   260: dup           
   261: getfield      #44         // modCount:int
   264: iconst_1      
   265: iadd          
   266: putfield      #44         // modCount:int
   269: aload_0       
   270: dup           
   271: getfield      #32         // size:int
   274: iconst_1      
   275: iadd          
   276: dup_x1        
   277: putfield      #32         // size:int
   280: aload_0       
   281: getfield      #17         // threshold:int
   284: if_icmple     292
   287: aload_0       
   288: invokevirtual #23         // resize:()java.util.HashMap$Node[]
   291: pop           
   292: aload_0       
   293: iload         5
   295: invokevirtual #45         // afterNodeInsertion:(boolean)void
   298: aconst_null   
   299: areturn       
   <|@
end_bytecodes
begin_cfg
  name "Before register allocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|DWORD, rdi|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@21849dd slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction v2|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   12  <|@ instruction v3|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   14  <|@ instruction v4|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   16  <|@ instruction v5|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr   18  <|@ instruction v6|DWORD[_] = MOV [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   20  <|@ instruction TESTBRANCH (x: v6|DWORD[_], y: v6|DWORD[_]) trueDestinationProbability: 0.0015880438063265454 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607168114973028567
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   24  <|@ instruction v9|DWORD = MOV [v6|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   26  <|@ instruction TESTBRANCH (x: v9|DWORD, y: v9|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607168114973028567
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr   32  <|@ instruction JUMP ~[v10|QWORD[.], v9|DWORD] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B1" 
    successors "B6" "B121" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   34  <|@ instruction [v11|QWORD[.], v12|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   36  <|@ instruction v13|DWORD = MOV [v11|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   38  <|@ instruction v14|DWORD = MOV [v11|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   40  <|@ instruction v15|DWORD = DEC v12|DWORD size: DWORD <|@ <|@
      nr   42  <|@ instruction v16|DWORD = AND (x: v1|DWORD, y: v15|DWORD) size: DWORD <|@ <|@
      nr   44  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v16|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B121 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B48" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction v17|DWORD[_] = MOV [v11|QWORD[.] + v16|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   50  <|@ instruction v18|DWORD = MOV [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   52  <|@ instruction v20|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr   54  <|@ instruction v19|QWORD = UNCOMPRESSPOINTER (input: v18|DWORD, ~baseRegister: v20|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr   56  <|@ instruction v21|QWORD = MOVE input: long[140438306553856|0x7fba57600000] <|@ <|@
      nr   58  <|@ instruction v22|DWORD[_] = COMPRESSPOINTER (input: v3|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr   60  <|@ instruction TESTBRANCH (x: v17|DWORD[_], y: v17|DWORD[_]) trueDestinationProbability: 0.8229115724385652 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B12" "B47" 
    xhandlers
    flags 
    probability 4605587348047262798
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v19|QWORD - keyConstants: [meta{HotSpotType<Ljava/util/HashMap;, resolved>}, meta{HotSpotType<Ljava/util/LinkedHashMap;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/replacements/SnippetTemplate$LRUCache;, resolved>}] keyTargets: [B7 -> B8, B7 -> B12, B7 -> B12] defaultTarget: B7 -> B47 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4605585062831744793
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction v23|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   70  <|@ instruction v24|QWORD = LEA [v23|QWORD + 32] size: QWORD <|@ <|@
      nr   72  <|@ instruction CMPBRANCH (x: v24|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4605510964398880109
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction MOV (x: [r15|QWORD + 440], y: v24|QWORD) size: QWORD <|@ <|@
      nr   78  <|@ instruction AMD64PREFETCH ~[v23|QWORD + 288] instr: 0 <|@ <|@
      nr   80  <|@ instruction MOV [v23|QWORD] y: 1 size: QWORD <|@ <|@
      nr   82  <|@ instruction MOV [v23|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>;compressed} <|@ <|@
      nr   84  <|@ instruction MOV [v23|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   86  <|@ instruction MOV [v23|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   88  <|@ instruction MOV [v23|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr   90  <|@ instruction v28|QWORD[.] = MOVE v23|QWORD moveKind: QWORD <|@ <|@
      nr   92  <|@ instruction JUMP ~[v28|QWORD[.]] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 4605585062831744793
    begin_IR
      LIR
      nr   94  <|@ instruction [v29|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   96  <|@ instruction MOV (x: [v29|QWORD[.] + 20], y: v22|DWORD[_]) size: DWORD <|@ <|@
      nr   98  <|@ instruction v30|DWORD[_] = COMPRESSPOINTER (input: v2|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  100  <|@ instruction MOV (x: [v29|QWORD[.] + 16], y: v30|DWORD[_]) size: DWORD <|@ <|@
      nr  102  <|@ instruction MOV (x: [v29|QWORD[.] + 12], y: v1|DWORD) size: DWORD <|@ <|@
      nr  104  <|@ instruction JUMP ~[v29|QWORD[.]] destination: B11 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B11" "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4605587348047262798
    begin_IR
      LIR
      nr  106  <|@ instruction [v38|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  108  <|@ instruction v40|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr  110  <|@ instruction v39|QWORD = UNCOMPRESSPOINTER (input: v14|DWORD, ~baseRegister: v40|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr  112  <|@ instruction v41|QWORD = MOV [v39|QWORD + 208] size: QWORD <|@ <|@
      nr  114  <|@ instruction v42|DWORD = MOV [v41|QWORD + 20] size: DWORD <|@ <|@
      nr  116  <|@ instruction v43|DWORD = MOV [v38|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  118  <|@ instruction v45|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr  120  <|@ instruction v44|QWORD = UNCOMPRESSPOINTER (input: v43|DWORD, ~baseRegister: v45|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr  122  <|@ instruction v46|QWORD = MOVSXD v42|DWORD size: QWORD <|@ <|@
      nr  124  <|@ instruction CMPBRANCH (x: v41|QWORD, y: [v44|QWORD + v46|QWORD * 1]) trueDestinationProbability: 0.5 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B45" 
    xhandlers
    flags 
    probability 4601083748419892302
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction CMPCONSTBRANCH v42|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B45 y: 32 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4601083748419892302
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  132  <|@ instruction CMPBRANCH (x: v41|QWORD, y: v44|QWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4596580148792521806
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction v47|QWORD = MOV [v44|QWORD + 40] size: QWORD <|@ <|@
      nr  138  <|@ instruction v48|DWORD = MOV [v47|QWORD] size: DWORD <|@ <|@
      nr  140  <|@ instruction JUMP ~[int[0|0x0]] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B24" 
    successors "B23" "B26" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4602807799859017905
    begin_IR
      LIR
      nr  142  <|@ instruction [v49|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  144  <|@ instruction CMPBRANCH (x: v48|DWORD, y: v49|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602807799859017905
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction v50|DWORD = SHL v49|DWORD y: 3 size: DWORD <|@ <|@
      nr  150  <|@ instruction v51|DWORD = LEA [v50|DWORD + 8] size: DWORD <|@ <|@
      nr  152  <|@ instruction v52|QWORD = MOVSXD v51|DWORD size: QWORD <|@ <|@
      nr  154  <|@ instruction v53|QWORD = MOV [v47|QWORD + v52|QWORD * 1] size: QWORD <|@ <|@
      nr  156  <|@ instruction CMPBRANCH (x: v41|QWORD, y: v53|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B23 -> B25 falseDestination: B23 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B22" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4599230716294395707
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction v54|DWORD = INC v49|DWORD size: DWORD <|@ <|@
      nr  162  <|@ instruction JUMP ~[v54|DWORD] destination: B24 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B27" 
    xhandlers
    flags 
    probability 4601083748419892302
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction JUMP ~[] destination: B17 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B27" 
    xhandlers
    flags 
    probability 4596580148792521807
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction MOV (x: [v44|QWORD + 32], y: v41|QWORD) size: QWORD <|@ <|@
      nr  172  <|@ instruction JUMP ~[] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B27" 
    xhandlers
    flags 
    probability 4596580148792521806
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction JUMP ~[] destination: B20 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B17" "B25" "B20" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4605587348047262798
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" 
    xhandlers
    flags 
    probability 4604846135197064160
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction JUMP ~[] destination: B28 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B49" "B54" 
    xhandlers
    flags 
    probability 4595548303301553864
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction v70|QWORD[.] = UNCOMPRESSPOINTER (input: v17|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  190  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v17|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.01987559010066231 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4595421491411700642
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction CMPCONSTBRANCH [v17|DWORD[_] * 8 + 8] trueDestinationProbability: 2.021089053783065E-6 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B56 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4595421478772878611
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction JUMP ~[v70|QWORD[.], int[0|0x0]] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B62" 
    successors "B65" "B58" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4595777537596400292
    begin_IR
      LIR
      nr  200  <|@ instruction [v80|QWORD[.], v81|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  202  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] v80|QWORD[.] - - - - v81|DWORD 
>@ <|@ instruction v82|DWORD[_] = MOV [v80|QWORD[.] + 24] size: DWORD state [bci:134] <|@ <|@
      nr  204  <|@ instruction v83|QWORD[.] = UNCOMPRESSPOINTER (input: v82|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  206  <|@ instruction TESTBRANCH (x: v82|DWORD[_], y: v82|DWORD[_]) trueDestinationProbability: 0.5880075530332061 condition: = trueDestination: B57 -> B65 falseDestination: B57 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4590110563079390205
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v82|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.8692436604445373 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B62 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B57" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4576850562957400324
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] v80|QWORD[.] - - - - v81|DWORD 
>@ <|@ instruction SAFEPOINT v92|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 thread: r15 state [bci:134] <|@ <|@
      nr  216  <|@ instruction v93|DWORD = INC v81|DWORD size: DWORD <|@ <|@
      nr  218  <|@ instruction JUMP ~[v83|QWORD[.], v93|DWORD] destination: B62 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4592437312858669387
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction v94|QWORD = MOV [v19|QWORD + 680] size: QWORD <|@ <|@
      nr  224  <|@ instruction v95|QWORD = MOV [v94|QWORD + 64] size: QWORD <|@ <|@
      nr  226  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  228  <|@ instruction rdx|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr  230  <|@ instruction rcx|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction r8|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  234  <|@ instruction r9|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  236  <|@ instruction rbx|QWORD = MOVE v94|QWORD moveKind: QWORD <|@ <|@
      nr  238  <|@ instruction rax|QWORD = MOVE v95|QWORD moveKind: QWORD <|@ <|@
      nr  240  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:648) [bci: 152]
stack: v80|QWORD[.] 
locals: v0|QWORD[.] v1|DWORD - v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] - - - v83|QWORD[.] - v81|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.]]) [] callTarget: HotSpotMethod<HashMap.newNode(int, Object, Object, HashMap$Node)> state [bci:152] <|@ <|@
      nr  242  <|@ instruction v96|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  244  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B67 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B72" 
    xhandlers
    flags 
    probability 4591660023639118941
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction JUMP ~[] destination: B66 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4590594123464754032
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction v55|QWORD[.+] = LEA [v11|QWORD[.] + v16|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  254  <|@ instruction v56|DWORD[_] = MOV [v55|QWORD[.+]] size: DWORD <|@ <|@
      nr  256  <|@ instruction TESTBRANCH (x: v56|DWORD[_], y: v56|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4590001153184595122
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction v57|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  262  <|@ instruction v58|QWORD[.] = UNCOMPRESSPOINTER (input: v56|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  264  <|@ instruction TESTBRANCH (x: v57|QWORD, y: v57|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4589467479932452103
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction v59|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  270  <|@ instruction MOV (x: [v59|QWORD + v57|QWORD * 1 - 8], y: v58|QWORD[.]) size: QWORD <|@ <|@
      nr  272  <|@ instruction v60|QWORD = LEA [v57|QWORD - 8] size: QWORD <|@ <|@
      nr  274  <|@ instruction MOV (x: [r15|QWORD + 40], y: v60|QWORD) size: QWORD <|@ <|@
      nr  276  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B64" "B60" 
    xhandlers
    flags 
    probability 4589398445432346844
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction v84|DWORD[_] = MOV [v82|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  282  <|@ instruction v85|QWORD[.] = UNCOMPRESSPOINTER (input: v84|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  284  <|@ instruction CMPBRANCH (x: v85|QWORD[.], y: v2|QWORD[.]) trueDestinationProbability: 0.9998932466496128 condition: = trueDestination: B59 -> B64 falseDestination: B59 -> B60 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B86" 
    xhandlers
    flags 
    probability 4589397940059341918
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  288  <|@ instruction JUMP ~[v83|QWORD[.]] destination: B64 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4577371935537457006
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  292  <|@ instruction v97|QWORD[.+] = LEA [v80|QWORD[.] + 24] size: QWORD <|@ <|@
      nr  294  <|@ instruction v98|DWORD[_] = MOV [v97|QWORD[.+]] size: DWORD <|@ <|@
      nr  296  <|@ instruction TESTBRANCH (x: v98|DWORD[_], y: v98|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B67 -> B68 falseDestination: B67 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" "B71" 
    xhandlers
    flags 
    probability 4576750104161816650
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  300  <|@ instruction v99|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  302  <|@ instruction v100|QWORD[.] = UNCOMPRESSPOINTER (input: v98|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  304  <|@ instruction TESTBRANCH (x: v99|QWORD, y: v99|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    probability 4576190455923740329
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  308  <|@ instruction v101|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  310  <|@ instruction MOV (x: [v101|QWORD + v99|QWORD * 1 - 8], y: v100|QWORD[.]) size: QWORD <|@ <|@
      nr  312  <|@ instruction v102|QWORD = LEA [v99|QWORD - 8] size: QWORD <|@ <|@
      nr  314  <|@ instruction MOV (x: [r15|QWORD + 40], y: v102|QWORD) size: QWORD <|@ <|@
      nr  316  <|@ instruction JUMP ~[] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    probability 4575897384022324722
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  320  <|@ instruction JUMP ~[] destination: B30 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4575895921484393205
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction v25|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>} <|@ <|@
      nr  326  <|@ instruction rsi|QWORD = MOVE v25|QWORD moveKind: QWORD <|@ <|@
      nr  328  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] - v12|DWORD - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7fba62ccef80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:29] <|@ <|@
      nr  330  <|@ instruction v26|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  332  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] - v12|DWORD - - - - 
>@ <|@ instruction NULLCHECK [v26|QWORD[.]] state [bci:29] <|@ <|@
      nr  334  <|@ instruction JUMP ~[v26|QWORD[.]] destination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4575188794187971253
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  338  <|@ instruction rsi|QWORD[.] = MOVE v58|QWORD[.] moveKind: QWORD <|@ <|@
      nr  340  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  342  <|@ instruction JUMP ~[] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" "B33" "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4605587348047262798
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction v61|DWORD[_] = COMPRESSPOINTER (input: v38|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  348  <|@ instruction MOV (x: [v11|QWORD[.] + v16|DWORD * 4 + 16], y: v61|DWORD[_]) size: DWORD <|@ <|@
      nr  350  <|@ instruction v62|QWORD[.+] = LEA [v11|QWORD[.] + v16|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  352  <|@ instruction v63|QWORD[*] = XOR (x: v62|QWORD[.+], y: v38|QWORD[.]) size: QWORD <|@ <|@
      nr  354  <|@ instruction TESTCONSTBRANCH v63|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4604846135197064160
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  358  <|@ instruction TESTBRANCH (x: v38|QWORD[.], y: v38|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4604179043631885386
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  362  <|@ instruction v65|QWORD[.+] = LEA [v11|QWORD[.] + v16|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  364  <|@ instruction v64|QWORD[*] = SHR v65|QWORD[.+] y: 9 size: QWORD <|@ <|@
      nr  366  <|@ instruction CMPCONSTBRANCH [v64|QWORD[*] + v21|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B88" 
    xhandlers
    flags 
    probability 4603578661223224489
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction JUMP ~[] destination: B39 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B88" 
    xhandlers
    flags 
    probability 4590594123464754032
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  374  <|@ instruction JUMP ~[] destination: B35 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B88" 
    xhandlers
    flags 
    probability 4590001153184595122
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction JUMP ~[] destination: B37 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4589467479932452103
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  382  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  384  <|@ instruction CMPCONSTBRANCH [v64|QWORD[*] + v21|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B88" 
    xhandlers
    flags 
    probability 4588806327720511347
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction JUMP ~[] destination: B41 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4574334916984542422
    begin_IR
      LIR
      nr  390  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  392  <|@ instruction MOVB [v64|QWORD[*] + v21|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  394  <|@ instruction v66|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  396  <|@ instruction v67|QWORD[*] = ADD (x: v64|QWORD[*], y: v21|QWORD) size: QWORD <|@ <|@
      nr  398  <|@ instruction TESTBRANCH (x: v66|QWORD, y: v66|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B88" 
    xhandlers
    flags 
    probability 4573566427501456474
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  402  <|@ instruction v68|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  404  <|@ instruction MOV (x: [v68|QWORD + v66|QWORD * 1 - 8], y: v67|QWORD[*]) size: QWORD <|@ <|@
      nr  406  <|@ instruction v69|QWORD = LEA [v66|QWORD - 8] size: QWORD <|@ <|@
      nr  408  <|@ instruction MOV (x: [r15|QWORD + 72], y: v69|QWORD) size: QWORD <|@ <|@
      nr  410  <|@ instruction JUMP ~[] destination: B44 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4570262383476918658
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  414  <|@ instruction v71|DWORD[_] = MOV [v17|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  416  <|@ instruction v72|QWORD[.] = UNCOMPRESSPOINTER (input: v71|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  418  <|@ instruction CMPBRANCH (x: v72|QWORD[.], y: v2|QWORD[.]) trueDestinationProbability: 0.9854570809572428 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B86" 
    xhandlers
    flags 
    probability 4570144353713859813
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  422  <|@ instruction JUMP ~[v70|QWORD[.]] destination: B50 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 4564966382317228292
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  426  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  428  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:635) [bci: 20]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.resize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:20] <|@ <|@
      nr  430  <|@ instruction v7|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  432  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:635) [bci: 23]
stack: Object[null] 
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD - - - - - - - 
>@ <|@ instruction v8|DWORD = MOV [v7|QWORD[.] + 12] size: DWORD state [bci:23] <|@ <|@
      nr  434  <|@ instruction JUMP ~[v7|QWORD[.], v8|DWORD] destination: B1 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B72" 
    xhandlers
    flags 
    probability 4562617473904064804
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction JUMP ~[] destination: B68 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    probability 4562093595080792590
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  442  <|@ instruction rsi|QWORD[.] = MOVE v100|QWORD[.] moveKind: QWORD <|@ <|@
      nr  444  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  446  <|@ instruction JUMP ~[] destination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B66" "B68" "B71" "B70" 
    successors "B73" "B74" 
    xhandlers
    flags 
    probability 4592437312858669387
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  450  <|@ instruction v103|DWORD[_] = COMPRESSPOINTER (input: v96|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  452  <|@ instruction MOV (x: [v80|QWORD[.] + 24], y: v103|DWORD[_]) size: DWORD <|@ <|@
      nr  454  <|@ instruction v104|QWORD[*] = XOR (x: v80|QWORD[.], y: v96|QWORD[.]) size: QWORD <|@ <|@
      nr  456  <|@ instruction TESTCONSTBRANCH v104|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    probability 4591660023639118941
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  460  <|@ instruction TESTBRANCH (x: v96|QWORD[.], y: v96|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    probability 4590960463341523540
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  464  <|@ instruction v105|QWORD[*] = SHR v80|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  466  <|@ instruction CMPCONSTBRANCH [v105|QWORD[*] + v21|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B83" 
    xhandlers
    flags 
    probability 4590330859073687679
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  470  <|@ instruction JUMP ~[] destination: B77 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B83" 
    xhandlers
    flags 
    probability 4577371935537457006
    begin_IR
      LIR
      nr  472  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  474  <|@ instruction JUMP ~[] destination: B73 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B83" 
    xhandlers
    flags 
    probability 4576750104161816649
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  478  <|@ instruction JUMP ~[] destination: B75 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    probability 4576190455923740328
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  482  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  484  <|@ instruction CMPCONSTBRANCH [v105|QWORD[*] + v21|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B83" 
    xhandlers
    flags 
    probability 4575686772509471639
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  488  <|@ instruction JUMP ~[] destination: B79 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    probability 4561198157899870475
    begin_IR
      LIR
      nr  490  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  492  <|@ instruction MOVB [v105|QWORD[*] + v21|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  494  <|@ instruction v106|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  496  <|@ instruction v107|QWORD[*] = ADD (x: v105|QWORD[*], y: v21|QWORD) size: QWORD <|@ <|@
      nr  498  <|@ instruction TESTBRANCH (x: v106|QWORD, y: v106|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    probability 4560392264437040573
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  502  <|@ instruction v108|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  504  <|@ instruction MOV (x: [v108|QWORD + v106|QWORD * 1 - 8], y: v107|QWORD[*]) size: QWORD <|@ <|@
      nr  506  <|@ instruction v109|QWORD = LEA [v106|QWORD - 8] size: QWORD <|@ <|@
      nr  508  <|@ instruction MOV (x: [r15|QWORD + 72], y: v109|QWORD) size: QWORD <|@ <|@
      nr  510  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B88" 
    xhandlers
    flags 
    probability 4559287139136259037
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  514  <|@ instruction rsi|QWORD = MOVE v67|QWORD[*] moveKind: QWORD <|@ <|@
      nr  516  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  518  <|@ instruction JUMP ~[] destination: B43 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4553315745025075769
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  522  <|@ instruction v31|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  524  <|@ instruction v32|QWORD = LEA [v31|QWORD + 40] size: QWORD <|@ <|@
      nr  526  <|@ instruction CMPBRANCH (x: v32|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4553268943811267021
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  530  <|@ instruction MOV (x: [r15|QWORD + 440], y: v32|QWORD) size: QWORD <|@ <|@
      nr  532  <|@ instruction AMD64PREFETCH ~[v31|QWORD + 296] instr: 0 <|@ <|@
      nr  534  <|@ instruction MOV [v31|QWORD] y: 1 size: QWORD <|@ <|@
      nr  536  <|@ instruction MOV [v31|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>;compressed} <|@ <|@
      nr  538  <|@ instruction MOV [v31|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  540  <|@ instruction MOV [v31|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  542  <|@ instruction MOV [v31|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  544  <|@ instruction MOV [v31|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  546  <|@ instruction v36|QWORD[.] = MOVE v31|QWORD moveKind: QWORD <|@ <|@
      nr  548  <|@ instruction JUMP ~[v36|QWORD[.]] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4553315745025075769
    begin_IR
      LIR
      nr  550  <|@ instruction [v37|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  552  <|@ instruction rsi|QWORD[.] = MOVE v37|QWORD[.] moveKind: QWORD <|@ <|@
      nr  554  <|@ instruction rdx|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr  556  <|@ instruction rcx|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  558  <|@ instruction r8|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  560  <|@ instruction r9|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  562  <|@ st <@st|@live-base-pointers: []
java.util.LinkedHashMap$Entry.<init>(LinkedHashMap.java:208) [bci: 6]
locals: - - - - - 
java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 9]
stack: v37|QWORD[.] 
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] Object[null] - 
java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stack: v11|QWORD[.] v16|DWORD 
locals: v0|QWORD[.] - - - - v5|DWORD - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.]] [] callTarget: HotSpotMethod<HashMap$Node.<init>(int, Object, Object, HashMap$Node)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:6, 9, 56] <|@ <|@
      nr  564  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  566  <|@ instruction rdx|QWORD[.] = MOVE v37|QWORD[.] moveKind: QWORD <|@ <|@
      nr  568  <|@ st <@st|@live-base-pointers: []
java.util.LinkedHashMap.newNode(LinkedHashMap.java:283) [bci: 17]
locals: - - - - - v37|QWORD[.] 
java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stack: v11|QWORD[.] v16|DWORD 
locals: v0|QWORD[.] - - - - v5|DWORD - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<LinkedHashMap.linkNodeAtEnd(LinkedHashMap$Entry)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:17, 56] <|@ <|@
      nr  570  <|@ instruction JUMP ~[v37|QWORD[.]] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    probability 4546075572092099182
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  574  <|@ instruction rsi|QWORD = MOVE v107|QWORD[*] moveKind: QWORD <|@ <|@
      nr  576  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  578  <|@ instruction JUMP ~[] destination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B73" "B75" "B77" "B79" "B82" "B81" 
    successors "B84" "B85" 
    xhandlers
    flags 
    probability 4592437312858669387
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  582  <|@ instruction CMPCONSTBRANCH v81|DWORD trueDestinationProbability: 0.9999886211240704 condition: < trueDestination: B83 -> B84 falseDestination: B83 -> B85 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" 
    xhandlers
    flags 
    probability 4592437224411893480
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  586  <|@ instruction JUMP ~[v83|QWORD[.]] destination: B84 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B50" "B55" "B64" "B84" "B85" "B63" "B53" 
    successors "B87" "B100" 
    xhandlers
    flags 
    probability 4595548303301553864
    begin_IR
      LIR
      nr  588  <|@ instruction [v110|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  590  <|@ instruction TESTBRANCH (x: v110|QWORD[.], y: v110|QWORD[.]) trueDestinationProbability: 0.6091185940042786 condition: = trueDestination: B86 -> B87 falseDestination: B86 -> B100 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B88" 
    xhandlers
    flags 
    probability 4592437118697206803
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction JUMP ~[] destination: B87 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B35" "B87" "B43" "B44" "B41" "B39" "B37" 
    successors "B89" "B90" 
    xhandlers
    flags 
    probability 4606558935301518032
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  598  <|@ instruction INC [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  600  <|@ instruction v111|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  602  <|@ instruction v112|DWORD = ADD (x: v111|DWORD, ~y: [v0|QWORD[.] + 20]) size: DWORD <|@ <|@
      nr  604  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v112|DWORD) size: DWORD <|@ <|@
      nr  606  <|@ instruction CMPBRANCH (x: v112|DWORD, y: [v0|QWORD[.] + 28]) trueDestinationProbability: 7.853038846579175E-4 condition: > trueDestination: B88 -> B89 falseDestination: B88 -> B90 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B91" 
    xhandlers
    flags 
    probability 4606552351536966788
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  610  <|@ instruction JUMP ~[] destination: B90 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" "B89" 
    successors "B92" "B93" "B99" 
    xhandlers
    flags 
    probability 4606558935301518032
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  614  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v19|QWORD - keyConstants: [meta{HotSpotType<Ljava/util/HashMap;, resolved>}, meta{HotSpotType<Ljava/util/LinkedHashMap;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/replacements/SnippetTemplate$LRUCache;, resolved>}] keyTargets: [B91 -> B92, B91 -> B93, B91 -> B93] defaultTarget: B91 -> B99 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B97" 
    xhandlers
    flags 
    probability 4606555909645339483
    begin_IR
      LIR
      nr  616  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  618  <|@ instruction JUMP ~[] destination: B92 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B92" "B94" "B96" 
    successors 
    xhandlers
    flags 
    probability 4606558935301518031
    begin_IR
      LIR
      nr  620  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  622  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  624  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B101" "B119" 
    xhandlers
    flags 
    probability 4589652288651159933
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  628  <|@ instruction v122|DWORD[_] = MOV [v110|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  630  <|@ instruction TESTBRANCH (x: v4|DWORD, y: v4|DWORD) trueDestinationProbability: 0.9999962001170364 condition: = trueDestination: B100 -> B101 falseDestination: B100 -> B119 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B102" "B103" 
    xhandlers
    flags 
    probability 4589652269697845341
    begin_IR
      LIR
      nr  632  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  634  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B103 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B108" 
    xhandlers
    flags 
    probability 4589138949298219176
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  638  <|@ instruction JUMP ~[] destination: B102 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" "B105" 
    xhandlers
    flags 
    probability 4574630580609171603
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  642  <|@ instruction v123|QWORD[.+] = LEA [v110|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  644  <|@ instruction v124|DWORD[_] = MOV [v123|QWORD[.+]] size: DWORD <|@ <|@
      nr  646  <|@ instruction TESTBRANCH (x: v124|DWORD[_], y: v124|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B103 -> B104 falseDestination: B103 -> B105 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B106" "B107" 
    xhandlers
    flags 
    probability 4573832524763622737
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  650  <|@ instruction v125|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  652  <|@ instruction v126|QWORD[.] = UNCOMPRESSPOINTER (input: v124|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  654  <|@ instruction TESTBRANCH (x: v125|QWORD, y: v125|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B105 -> B106 falseDestination: B105 -> B107 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B108" 
    xhandlers
    flags 
    probability 4573114274502628758
    begin_IR
      LIR
      nr  656  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  658  <|@ instruction v127|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  660  <|@ instruction MOV (x: [v127|QWORD + v125|QWORD * 1 - 8], y: v126|QWORD[.]) size: QWORD <|@ <|@
      nr  662  <|@ instruction v128|QWORD = LEA [v125|QWORD - 8] size: QWORD <|@ <|@
      nr  664  <|@ instruction MOV (x: [r15|QWORD + 40], y: v128|QWORD) size: QWORD <|@ <|@
      nr  666  <|@ instruction JUMP ~[] destination: B107 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B91" 
    xhandlers
    flags 
    probability 4559880998172045651
    begin_IR
      LIR
      nr  668  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  670  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  672  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:669) [bci: 288]
locals: v0|QWORD[.] - - - - v5|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.resize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:288] <|@ <|@
      nr  674  <|@ instruction v113|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  676  <|@ instruction JUMP ~[] destination: B89 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B108" 
    xhandlers
    flags 
    probability 4559523670035962382
    begin_IR
      LIR
      nr  678  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  680  <|@ instruction JUMP ~[] destination: B104 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B108" 
    xhandlers
    flags 
    probability 4558885225359523289
    begin_IR
      LIR
      nr  682  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  684  <|@ instruction rsi|QWORD[.] = MOVE v126|QWORD[.] moveKind: QWORD <|@ <|@
      nr  686  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  688  <|@ instruction JUMP ~[] destination: B106 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B102" "B104" "B107" "B106" 
    successors "B109" "B110" 
    xhandlers
    flags 
    probability 4589652269697845341
    begin_IR
      LIR
      nr  690  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  692  <|@ instruction MOV (x: [v110|QWORD[.] + 20], y: v22|DWORD[_]) size: DWORD <|@ <|@
      nr  694  <|@ instruction v129|QWORD[*] = XOR (x: v110|QWORD[.], y: v3|QWORD[.]) size: QWORD <|@ <|@
      nr  696  <|@ instruction TESTCONSTBRANCH v129|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B108 -> B109 falseDestination: B108 -> B110 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" "B112" 
    xhandlers
    flags 
    probability 4589138949298219176
    begin_IR
      LIR
      nr  698  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  700  <|@ instruction TESTBRANCH (x: v3|QWORD[.], y: v3|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B110 -> B111 falseDestination: B110 -> B112 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B113" "B114" 
    xhandlers
    flags 
    probability 4588241136471976702
    begin_IR
      LIR
      nr  702  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  704  <|@ instruction v130|QWORD[*] = SHR v110|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  706  <|@ instruction CMPCONSTBRANCH [v130|QWORD[*] + v21|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B112 -> B113 falseDestination: B112 -> B114 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B120" 
    xhandlers
    flags 
    probability 4587433104928358475
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  710  <|@ instruction JUMP ~[] destination: B113 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B120" 
    xhandlers
    flags 
    probability 4574630580609171603
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  714  <|@ instruction JUMP ~[] destination: B109 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B120" 
    xhandlers
    flags 
    probability 4573832524763622738
    begin_IR
      LIR
      nr  716  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  718  <|@ instruction JUMP ~[] destination: B111 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B115" "B116" 
    xhandlers
    flags 
    probability 4573114274502628759
    begin_IR
      LIR
      nr  720  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  722  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  724  <|@ instruction CMPCONSTBRANCH [v130|QWORD[*] + v21|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B114 -> B115 falseDestination: B114 -> B116 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B120" 
    xhandlers
    flags 
    probability 4572467849267734178
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  728  <|@ instruction JUMP ~[] destination: B115 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B117" "B118" 
    xhandlers
    flags 
    probability 4558310625150728107
    begin_IR
      LIR
      nr  730  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  732  <|@ instruction MOVB [v130|QWORD[*] + v21|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  734  <|@ instruction v131|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  736  <|@ instruction v132|QWORD[*] = ADD (x: v130|QWORD[*], y: v21|QWORD) size: QWORD <|@ <|@
      nr  738  <|@ instruction TESTBRANCH (x: v131|QWORD, y: v131|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B116 -> B117 falseDestination: B116 -> B118 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B120" 
    xhandlers
    flags 
    probability 4557793484962812442
    begin_IR
      LIR
      nr  740  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  742  <|@ instruction v133|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  744  <|@ instruction MOV (x: [v133|QWORD + v131|QWORD * 1 - 8], y: v132|QWORD[*]) size: QWORD <|@ <|@
      nr  746  <|@ instruction v134|QWORD = LEA [v131|QWORD - 8] size: QWORD <|@ <|@
      nr  748  <|@ instruction MOV (x: [r15|QWORD + 72], y: v134|QWORD) size: QWORD <|@ <|@
      nr  750  <|@ instruction JUMP ~[] destination: B118 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B94" "B95" 
    xhandlers
    flags 
    probability 4554832167497868566
    begin_IR
      LIR
      nr  752  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  754  <|@ instruction TESTBRANCH (x: v5|DWORD, y: v5|DWORD) trueDestinationProbability: 0.4891304347826087 condition: = trueDestination: B93 -> B94 falseDestination: B93 -> B95 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B96" "B98" 
    xhandlers
    flags 
    probability 4550463275345577801
    begin_IR
      LIR
      nr  756  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  758  <|@ instruction v114|DWORD[_] = MOV [v0|QWORD[.] + 52] size: DWORD <|@ <|@
      nr  760  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:670) [bci: 292]
locals: v0|QWORD[.] - - - - v5|DWORD - - - - - - - 
>@ <|@ instruction NULLCHECK [v114|DWORD[_] * 8] state [bci:292] <|@ <|@
      nr  762  <|@ instruction v115|DWORD = MOV [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  764  <|@ instruction v117|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr  766  <|@ instruction v116|QWORD = UNCOMPRESSPOINTER (input: v115|DWORD, ~baseRegister: v117|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr  768  <|@ instruction v118|QWORD = MOV [v116|QWORD + 872] size: QWORD <|@ <|@
      nr  770  <|@ instruction v119|QWORD = MOV [v118|QWORD + 64] size: QWORD <|@ <|@
      nr  772  <|@ instruction v120|QWORD[.] = UNCOMPRESSPOINTER (input: v114|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  774  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  776  <|@ instruction rdx|QWORD[.] = MOVE v120|QWORD[.] moveKind: QWORD <|@ <|@
      nr  778  <|@ instruction rbx|QWORD = MOVE v118|QWORD moveKind: QWORD <|@ <|@
      nr  780  <|@ instruction rax|QWORD = MOVE v119|QWORD moveKind: QWORD <|@ <|@
      nr  782  <|@ st <@st|@live-base-pointers: []
java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 15]
locals: v0|QWORD[.] - v120|QWORD[.] - 
java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
locals: - - - - - - - - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<LinkedHashMap.removeEldestEntry(Map$Entry)> state [bci:15, 295] <|@ <|@
      nr  784  <|@ instruction v121|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  786  <|@ instruction TESTBRANCH (x: v121|DWORD, y: v121|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B95 -> B96 falseDestination: B95 -> B98 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B97" 
    xhandlers
    flags 
    probability 4550463275345577801
    begin_IR
      LIR
      nr  788  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  790  <|@ instruction JUMP ~[] destination: B96 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B97" 
    xhandlers
    flags 
    probability 4550193860395418340
    begin_IR
      LIR
      nr  792  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  794  <|@ instruction JUMP ~[] destination: B94 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B120" 
    xhandlers
    flags 
    probability 4543399067768740112
    begin_IR
      LIR
      nr  796  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  798  <|@ instruction rsi|QWORD = MOVE v132|QWORD[*] moveKind: QWORD <|@ <|@
      nr  800  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  802  <|@ instruction JUMP ~[] destination: B117 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B119" "B109" "B117" "B118" "B115" "B113" "B111" 
    successors 
    xhandlers
    flags 
    probability 4589652288651159933
    begin_IR
      LIR
      nr  804  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  806  <|@ instruction v135|QWORD = MOV [v19|QWORD + 688] size: QWORD <|@ <|@
      nr  808  <|@ instruction v136|QWORD = MOV [v135|QWORD + 64] size: QWORD <|@ <|@
      nr  810  <|@ instruction v137|QWORD[.] = UNCOMPRESSPOINTER (input: v122|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  812  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  814  <|@ instruction rdx|QWORD[.] = MOVE v110|QWORD[.] moveKind: QWORD <|@ <|@
      nr  816  <|@ instruction rbx|QWORD = MOVE v135|QWORD moveKind: QWORD <|@ <|@
      nr  818  <|@ instruction rax|QWORD = MOVE v136|QWORD moveKind: QWORD <|@ <|@
      nr  820  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:663) [bci: 253]
locals: - - - - - - - - - - - - v137|QWORD[.] 
>@ <|@ instruction - = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<HashMap.afterNodeAccess(HashMap$Node)> state [bci:253] <|@ <|@
      nr  822  <|@ instruction rax|QWORD[.] = MOVE v137|QWORD[.] moveKind: QWORD <|@ <|@
      nr  824  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4542678729597855531
    begin_IR
      LIR
      nr  826  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  828  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] - v12|DWORD - - - - 
>@ <|@ instruction v73|DWORD = MOV [v2|QWORD[.] + 8] size: DWORD state [bci:29] <|@ <|@
      nr  830  <|@ instruction v75|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr  832  <|@ instruction v74|QWORD = UNCOMPRESSPOINTER (input: v73|DWORD, ~baseRegister: v75|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr  834  <|@ instruction v76|QWORD = MOV [v74|QWORD + 464] size: QWORD <|@ <|@
      nr  836  <|@ instruction v77|QWORD = MOV [v76|QWORD + 64] size: QWORD <|@ <|@
      nr  838  <|@ instruction rsi|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  840  <|@ instruction rdx|QWORD[.] = MOVE v72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  842  <|@ instruction rbx|QWORD = MOVE v76|QWORD moveKind: QWORD <|@ <|@
      nr  844  <|@ instruction rax|QWORD = MOVE v77|QWORD moveKind: QWORD <|@ <|@
      nr  846  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:641) [bci: 91]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] v70|QWORD[.] - - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:91] <|@ <|@
      nr  848  <|@ instruction v78|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  850  <|@ instruction TESTBRANCH (x: v78|DWORD, y: v78|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B86" 
    xhandlers
    flags 
    probability 4542678729597855531
    begin_IR
      LIR
      nr  852  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  854  <|@ instruction JUMP ~[v70|QWORD[.]] destination: B53 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B63" 
    xhandlers
    flags 
    probability 4529894057192690854
    begin_IR
      LIR
      nr  856  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  858  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] v80|QWORD[.] - - - - v81|DWORD 
>@ <|@ instruction v86|DWORD = MOV [v2|QWORD[.] + 8] size: DWORD state [bci:134] <|@ <|@
      nr  860  <|@ instruction v88|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr  862  <|@ instruction v87|QWORD = UNCOMPRESSPOINTER (input: v86|DWORD, ~baseRegister: v88|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr  864  <|@ instruction v89|QWORD = MOV [v87|QWORD + 464] size: QWORD <|@ <|@
      nr  866  <|@ instruction v90|QWORD = MOV [v89|QWORD + 64] size: QWORD <|@ <|@
      nr  868  <|@ instruction rsi|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  870  <|@ instruction rdx|QWORD[.] = MOVE v85|QWORD[.] moveKind: QWORD <|@ <|@
      nr  872  <|@ instruction rbx|QWORD = MOVE v89|QWORD moveKind: QWORD <|@ <|@
      nr  874  <|@ instruction rax|QWORD = MOVE v90|QWORD moveKind: QWORD <|@ <|@
      nr  876  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:654) [bci: 203]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] - - - v83|QWORD[.] - v81|DWORD 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:203] <|@ <|@
      nr  878  <|@ instruction v91|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  880  <|@ instruction TESTBRANCH (x: v91|DWORD, y: v91|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B86" 
    xhandlers
    flags 
    probability 4529894057192690854
    begin_IR
      LIR
      nr  882  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  884  <|@ instruction JUMP ~[v83|QWORD[.]] destination: B63 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4523100981620127249
    begin_IR
      LIR
      nr  886  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  888  <|@ instruction v33|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>} <|@ <|@
      nr  890  <|@ instruction rsi|QWORD = MOVE v33|QWORD moveKind: QWORD <|@ <|@
      nr  892  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] - v12|DWORD - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7fba62ccef80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:29] <|@ <|@
      nr  894  <|@ instruction v34|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  896  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] - v12|DWORD - - - - 
>@ <|@ instruction NULLCHECK [v34|QWORD[.]] state [bci:29] <|@ <|@
      nr  898  <|@ instruction JUMP ~[v34|QWORD[.]] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" 
    xhandlers
    flags 
    probability 4518403274531071726
    begin_IR
      LIR
      nr  900  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  902  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  904  <|@ instruction rdx|QWORD[.] = MOVE v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  906  <|@ instruction rcx|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr  908  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:650) [bci: 169]
locals: v0|QWORD[.] - - v3|QWORD[.] v4|DWORD v5|DWORD - - - - v83|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<HashMap.treeifyBin(HashMap$Node[], int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:169] <|@ <|@
      nr  910  <|@ instruction JUMP ~[v83|QWORD[.]] destination: B85 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B86" 
    xhandlers
    flags 
    probability 4510226010095555986
    begin_IR
      LIR
      nr  912  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  914  <|@ instruction rsi|QWORD[.] = MOVE v70|QWORD[.] moveKind: QWORD <|@ <|@
      nr  916  <|@ instruction rdx|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  918  <|@ instruction rcx|QWORD[.] = MOVE v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  920  <|@ instruction r8|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr  922  <|@ instruction r9|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  924  <|@ instruction rdi|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  926  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:644) [bci: 123]
locals: v0|QWORD[.] - - v3|QWORD[.] v4|DWORD v5|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|QWORD[.], rdi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap$TreeNode.putTreeVal(HashMap, HashMap$Node[], int, Object, Object)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:123] <|@ <|@
      nr  928  <|@ instruction v79|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  930  <|@ instruction JUMP ~[v79|QWORD[.]] destination: B55 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B120" 
    xhandlers
    flags 
    probability 4508568125070994604
    begin_IR
      LIR
      nr  932  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  934  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:659) [bci: 222]
locals: v0|QWORD[.] - - v3|QWORD[.] v4|DWORD v5|DWORD - - - - v110|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [v122|DWORD[_] * 8] state [bci:222] <|@ <|@
      nr  936  <|@ instruction JUMP ~[] destination: B119 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  938  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  940  <|@ instruction JUMP ~[int[-51507|0xffffffffffff36cd], long[5780|0x1694]] destination: B47 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  942  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  944  <|@ instruction MOV [r15|QWORD + 1156] y: -157971 size: DWORD <|@ <|@
      nr  946  <|@ instruction MOV [r15|QWORD + 1168] y: 1300 size: QWORD <|@ <|@
      nr  948  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:654) [bci: 206]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] - - - v83|QWORD[.] - v81|DWORD 
>@ <|@ instruction DEOPT info [bci:206] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  950  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  952  <|@ instruction JUMP ~[int[-75547|0xfffffffffffed8e5], long[0|0x0]] destination: B121 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B121" "B47" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  954  <|@ instruction [v138|DWORD, v139|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  956  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v138|DWORD) size: DWORD <|@ <|@
      nr  958  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v139|QWORD) size: QWORD <|@ <|@
      nr  960  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] - v12|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:29] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  962  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  964  <|@ instruction JUMP ~[] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  966  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  968  <|@ instruction MOV [r15|QWORD + 1156] y: -61235 size: DWORD <|@ <|@
      nr  970  <|@ instruction MOV [r15|QWORD + 1168] y: 8980 size: QWORD <|@ <|@
      nr  972  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:670) [bci: 292]
locals: v0|QWORD[.] - - - - v5|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:292] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  974  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  976  <|@ instruction JUMP ~[] destination: B26 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B26" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  978  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  980  <|@ instruction MOV [r15|QWORD + 1156] y: -82987 size: DWORD <|@ <|@
      nr  982  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  984  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stack: v11|QWORD[.] v16|DWORD v38|QWORD[.] 
locals: v0|QWORD[.] - - - - v5|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:59] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  986  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  988  <|@ instruction MOV [r15|QWORD + 1156] y: -153363 size: DWORD <|@ <|@
      nr  990  <|@ instruction MOV [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  992  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:641) [bci: 94]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] v70|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:94] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  994  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  996  <|@ instruction MOV [r15|QWORD + 1156] y: -161299 size: DWORD <|@ <|@
      nr  998  <|@ instruction MOV [r15|QWORD + 1168] y: 10260 size: QWORD <|@ <|@
      nr 1000  <|@ st <@st|@live-base-pointers: []
java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 18]
stack: v121|DWORD 
locals: v0|QWORD[.] - v120|QWORD[.] - 
java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
locals: - - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:18, 295] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1002  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1004  <|@ instruction MOV [r15|QWORD + 1156] y: -129299 size: DWORD <|@ <|@
      nr 1006  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 1008  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:634) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #21         // table:java.util.HashMap$Node[]
     4: dup           
     5: astore        6
     7: ifnull        19
    10: aload         6
    12: arraylength   
    13: dup           
    14: istore        8
    16: ifne          29
    19: aload_0       
    20: invokevirtual #23         // resize:()java.util.HashMap$Node[]
    23: dup           
    24: astore        6
    26: arraylength   
    27: istore        8
    29: aload         6
    31: iload         8
    33: iconst_1      
    34: isub          
    35: iload_1       
    36: iand          
    37: dup           
    38: istore        9
    40: aaload        
    41: dup           
    42: astore        7
    44: ifnonnull     63
    47: aload         6
    49: iload         9
    51: aload_0       
    52: iload_1       
    53: aload_2       
    54: aload_3       
    55: aconst_null   
    56: invokevirtual #40         // newNode:(int, java.lang.Object, java.lang.Object, java.util.HashMap$Node)java.util.HashMap$Node
    59: aastore       
    60: goto          259
    63: aload         7
    65: getfield      #35         // java.util.HashMap$Node.hash:int
    68: iload_1       
    69: if_icmpne     104
    72: aload         7
    74: getfield      #36         // java.util.HashMap$Node.key:java.lang.Object
    77: dup           
    78: astore        11
    80: aload_2       
    81: if_acmpeq     97
    84: aload_2       
    85: ifnull        104
    88: aload_2       
    89: aload         11
    91: invokevirtual #37         // java.lang.Object.equals:(java.lang.Object)boolean
    94: ifeq          104
    97: aload         7
    99: astore        10
   101: goto          222
   104: aload         7
   106: instanceof    #180        // java.util.HashMap$TreeNode
   109: ifeq          131
   112: aload         7
   114: checkcast     #180        // java.util.HashMap$TreeNode
   117: aload_0       
   118: aload         6
   120: iload_1       
   121: aload_2       
   122: aload_3       
   123: invokevirtual #41         // java.util.HashMap$TreeNode.putTreeVal:(java.util.HashMap, java.util.HashMap$Node[], int, java.lang.Object, java.lang.Object)java.util.HashMap$TreeNode
   126: astore        10
   128: goto          222
   131: iconst_0      
   132: istore        12
   134: aload         7
   136: getfield      #38         // java.util.HashMap$Node.next:java.util.HashMap$Node
   139: dup           
   140: astore        10
   142: ifnonnull     175
   145: aload         7
   147: aload_0       
   148: iload_1       
   149: aload_2       
   150: aload_3       
   151: aconst_null   
   152: invokevirtual #40         // newNode:(int, java.lang.Object, java.lang.Object, java.util.HashMap$Node)java.util.HashMap$Node
   155: putfield      #38         // java.util.HashMap$Node.next:java.util.HashMap$Node
   158: iload         12
   160: bipush        7
   162: if_icmplt     222
   165: aload_0       
   166: aload         6
   168: iload_1       
   169: invokevirtual #42         // treeifyBin:(java.util.HashMap$Node[], int)void
   172: goto          222
   175: aload         10
   177: getfield      #35         // java.util.HashMap$Node.hash:int
   180: iload_1       
   181: if_icmpne     212
   184: aload         10
   186: getfield      #36         // java.util.HashMap$Node.key:java.lang.Object
   189: dup           
   190: astore        11
   192: aload_2       
   193: if_acmpeq     222
   196: aload_2       
   197: ifnull        212
   200: aload_2       
   201: aload         11
   203: invokevirtual #37         // java.lang.Object.equals:(java.lang.Object)boolean
   206: ifeq          212
   209: goto          222
   212: aload         10
   214: astore        7
   216: iinc          
   219: goto          134
   222: aload         10
   224: ifnull        259
   227: aload         10
   229: getfield      #34         // java.util.HashMap$Node.value:java.lang.Object
   232: astore        12
   234: iload         4
   236: ifeq          244
   239: aload         12
   241: ifnonnull     250
   244: aload         10
   246: aload_3       
   247: putfield      #34         // java.util.HashMap$Node.value:java.lang.Object
   250: aload_0       
   251: aload         10
   253: invokevirtual #43         // afterNodeAccess:(java.util.HashMap$Node)void
   256: aload         12
   258: areturn       
   259: aload_0       
   260: dup           
   261: getfield      #44         // modCount:int
   264: iconst_1      
   265: iadd          
   266: putfield      #44         // modCount:int
   269: aload_0       
   270: dup           
   271: getfield      #32         // size:int
   274: iconst_1      
   275: iadd          
   276: dup_x1        
   277: putfield      #32         // size:int
   280: aload_0       
   281: getfield      #17         // threshold:int
   284: if_icmple     292
   287: aload_0       
   288: invokevirtual #23         // resize:()java.util.HashMap$Node[]
   291: pop           
   292: aload_0       
   293: iload         5
   295: invokevirtual #45         // afterNodeInsertion:(boolean)void
   298: aconst_null   
   299: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanLifetimeAnalysis"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|DWORD, rdi|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@21849dd slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction v2|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   12  <|@ instruction v3|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   14  <|@ instruction v4|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   16  <|@ instruction v5|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr   18  <|@ instruction v6|DWORD[_] = MOV [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   20  <|@ instruction TESTBRANCH (x: v6|DWORD[_], y: v6|DWORD[_]) trueDestinationProbability: 0.0015880438063265454 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607168114973028567
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   24  <|@ instruction v9|DWORD = MOV [v6|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   26  <|@ instruction TESTBRANCH (x: v9|DWORD, y: v9|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607168114973028567
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr   32  <|@ instruction JUMP ~[v10|QWORD[.], v9|DWORD] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B1" 
    successors "B6" "B121" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   34  <|@ instruction [v11|QWORD[.], v12|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   36  <|@ instruction v13|DWORD = MOV [v11|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   38  <|@ instruction v14|DWORD = MOV [v11|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   40  <|@ instruction v15|DWORD = DEC v12|DWORD size: DWORD <|@ <|@
      nr   42  <|@ instruction v16|DWORD = AND (x: v1|DWORD, y: v15|DWORD) size: DWORD <|@ <|@
      nr   44  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v16|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B121 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B48" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction v17|DWORD[_] = MOV [v11|QWORD[.] + v16|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   50  <|@ instruction v18|DWORD = MOV [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   52  <|@ instruction v20|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr   54  <|@ instruction v19|QWORD = UNCOMPRESSPOINTER (input: v18|DWORD, ~baseRegister: v20|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr   56  <|@ instruction v21|QWORD = MOVE input: long[140438306553856|0x7fba57600000] <|@ <|@
      nr   58  <|@ instruction v22|DWORD[_] = COMPRESSPOINTER (input: v3|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr   60  <|@ instruction TESTBRANCH (x: v17|DWORD[_], y: v17|DWORD[_]) trueDestinationProbability: 0.8229115724385652 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B12" "B47" 
    xhandlers
    flags 
    probability 4605587348047262798
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v19|QWORD - keyConstants: [meta{HotSpotType<Ljava/util/HashMap;, resolved>}, meta{HotSpotType<Ljava/util/LinkedHashMap;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/replacements/SnippetTemplate$LRUCache;, resolved>}] keyTargets: [B7 -> B8, B7 -> B12, B7 -> B12] defaultTarget: B7 -> B47 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4605585062831744793
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction v23|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   70  <|@ instruction v24|QWORD = LEA [v23|QWORD + 32] size: QWORD <|@ <|@
      nr   72  <|@ instruction CMPBRANCH (x: v24|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4605510964398880109
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction MOV (x: [r15|QWORD + 440], y: v24|QWORD) size: QWORD <|@ <|@
      nr   78  <|@ instruction AMD64PREFETCH ~[v23|QWORD + 288] instr: 0 <|@ <|@
      nr   80  <|@ instruction MOV [v23|QWORD] y: 1 size: QWORD <|@ <|@
      nr   82  <|@ instruction MOV [v23|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>;compressed} <|@ <|@
      nr   84  <|@ instruction MOV [v23|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   86  <|@ instruction MOV [v23|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   88  <|@ instruction MOV [v23|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr   90  <|@ instruction v28|QWORD[.] = MOVE v23|QWORD moveKind: QWORD <|@ <|@
      nr   92  <|@ instruction JUMP ~[v28|QWORD[.]] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 4605585062831744793
    begin_IR
      LIR
      nr   94  <|@ instruction [v29|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   96  <|@ instruction MOV (x: [v29|QWORD[.] + 20], y: v22|DWORD[_]) size: DWORD <|@ <|@
      nr   98  <|@ instruction v30|DWORD[_] = COMPRESSPOINTER (input: v2|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  100  <|@ instruction MOV (x: [v29|QWORD[.] + 16], y: v30|DWORD[_]) size: DWORD <|@ <|@
      nr  102  <|@ instruction MOV (x: [v29|QWORD[.] + 12], y: v1|DWORD) size: DWORD <|@ <|@
      nr  104  <|@ instruction JUMP ~[v29|QWORD[.]] destination: B11 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B11" "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4605587348047262798
    begin_IR
      LIR
      nr  106  <|@ instruction [v38|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  108  <|@ instruction v40|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr  110  <|@ instruction v39|QWORD = UNCOMPRESSPOINTER (input: v14|DWORD, ~baseRegister: v40|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr  112  <|@ instruction v41|QWORD = MOV [v39|QWORD + 208] size: QWORD <|@ <|@
      nr  114  <|@ instruction v42|DWORD = MOV [v41|QWORD + 20] size: DWORD <|@ <|@
      nr  116  <|@ instruction v43|DWORD = MOV [v38|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  118  <|@ instruction v45|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr  120  <|@ instruction v44|QWORD = UNCOMPRESSPOINTER (input: v43|DWORD, ~baseRegister: v45|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr  122  <|@ instruction v46|QWORD = MOVSXD v42|DWORD size: QWORD <|@ <|@
      nr  124  <|@ instruction CMPBRANCH (x: v41|QWORD, y: [v44|QWORD + v46|QWORD * 1]) trueDestinationProbability: 0.5 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B45" 
    xhandlers
    flags 
    probability 4601083748419892302
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction CMPCONSTBRANCH v42|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B45 y: 32 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4601083748419892302
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  132  <|@ instruction CMPBRANCH (x: v41|QWORD, y: v44|QWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4596580148792521806
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction v47|QWORD = MOV [v44|QWORD + 40] size: QWORD <|@ <|@
      nr  138  <|@ instruction v48|DWORD = MOV [v47|QWORD] size: DWORD <|@ <|@
      nr  140  <|@ instruction JUMP ~[int[0|0x0]] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B24" 
    successors "B23" "B26" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4602807799859017905
    begin_IR
      LIR
      nr  142  <|@ instruction [v49|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  144  <|@ instruction CMPBRANCH (x: v48|DWORD, y: v49|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602807799859017905
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction v50|DWORD = SHL v49|DWORD y: 3 size: DWORD <|@ <|@
      nr  150  <|@ instruction v51|DWORD = LEA [v50|DWORD + 8] size: DWORD <|@ <|@
      nr  152  <|@ instruction v52|QWORD = MOVSXD v51|DWORD size: QWORD <|@ <|@
      nr  154  <|@ instruction v53|QWORD = MOV [v47|QWORD + v52|QWORD * 1] size: QWORD <|@ <|@
      nr  156  <|@ instruction CMPBRANCH (x: v41|QWORD, y: v53|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B23 -> B25 falseDestination: B23 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B22" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4599230716294395707
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction v54|DWORD = INC v49|DWORD size: DWORD <|@ <|@
      nr  162  <|@ instruction JUMP ~[v54|DWORD] destination: B24 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B27" 
    xhandlers
    flags 
    probability 4601083748419892302
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction JUMP ~[] destination: B17 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B27" 
    xhandlers
    flags 
    probability 4596580148792521807
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction MOV (x: [v44|QWORD + 32], y: v41|QWORD) size: QWORD <|@ <|@
      nr  172  <|@ instruction JUMP ~[] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B27" 
    xhandlers
    flags 
    probability 4596580148792521806
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction JUMP ~[] destination: B20 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B17" "B25" "B20" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4605587348047262798
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" 
    xhandlers
    flags 
    probability 4604846135197064160
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction JUMP ~[] destination: B28 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B49" "B54" 
    xhandlers
    flags 
    probability 4595548303301553864
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction v70|QWORD[.] = UNCOMPRESSPOINTER (input: v17|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  190  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v17|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.01987559010066231 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4595421491411700642
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction CMPCONSTBRANCH [v17|DWORD[_] * 8 + 8] trueDestinationProbability: 2.021089053783065E-6 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B56 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4595421478772878611
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction JUMP ~[v70|QWORD[.], int[0|0x0]] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B62" 
    successors "B65" "B58" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4595777537596400292
    begin_IR
      LIR
      nr  200  <|@ instruction [v80|QWORD[.], v81|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  202  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] v80|QWORD[.] - - - - v81|DWORD 
>@ <|@ instruction v82|DWORD[_] = MOV [v80|QWORD[.] + 24] size: DWORD state [bci:134] <|@ <|@
      nr  204  <|@ instruction v83|QWORD[.] = UNCOMPRESSPOINTER (input: v82|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  206  <|@ instruction TESTBRANCH (x: v82|DWORD[_], y: v82|DWORD[_]) trueDestinationProbability: 0.5880075530332061 condition: = trueDestination: B57 -> B65 falseDestination: B57 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4590110563079390205
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v82|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.8692436604445373 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B62 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B57" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4576850562957400324
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] v80|QWORD[.] - - - - v81|DWORD 
>@ <|@ instruction SAFEPOINT v92|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 thread: r15 state [bci:134] <|@ <|@
      nr  216  <|@ instruction v93|DWORD = INC v81|DWORD size: DWORD <|@ <|@
      nr  218  <|@ instruction JUMP ~[v83|QWORD[.], v93|DWORD] destination: B62 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4592437312858669387
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction v94|QWORD = MOV [v19|QWORD + 680] size: QWORD <|@ <|@
      nr  224  <|@ instruction v95|QWORD = MOV [v94|QWORD + 64] size: QWORD <|@ <|@
      nr  226  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  228  <|@ instruction rdx|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr  230  <|@ instruction rcx|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction r8|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  234  <|@ instruction r9|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  236  <|@ instruction rbx|QWORD = MOVE v94|QWORD moveKind: QWORD <|@ <|@
      nr  238  <|@ instruction rax|QWORD = MOVE v95|QWORD moveKind: QWORD <|@ <|@
      nr  240  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:648) [bci: 152]
stack: v80|QWORD[.] 
locals: v0|QWORD[.] v1|DWORD - v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] - - - v83|QWORD[.] - v81|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.]]) [] callTarget: HotSpotMethod<HashMap.newNode(int, Object, Object, HashMap$Node)> state [bci:152] <|@ <|@
      nr  242  <|@ instruction v96|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  244  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B67 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B72" 
    xhandlers
    flags 
    probability 4591660023639118941
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction JUMP ~[] destination: B66 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4590594123464754032
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction v55|QWORD[.+] = LEA [v11|QWORD[.] + v16|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  254  <|@ instruction v56|DWORD[_] = MOV [v55|QWORD[.+]] size: DWORD <|@ <|@
      nr  256  <|@ instruction TESTBRANCH (x: v56|DWORD[_], y: v56|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4590001153184595122
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction v57|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  262  <|@ instruction v58|QWORD[.] = UNCOMPRESSPOINTER (input: v56|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  264  <|@ instruction TESTBRANCH (x: v57|QWORD, y: v57|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4589467479932452103
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction v59|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  270  <|@ instruction MOV (x: [v59|QWORD + v57|QWORD * 1 - 8], y: v58|QWORD[.]) size: QWORD <|@ <|@
      nr  272  <|@ instruction v60|QWORD = LEA [v57|QWORD - 8] size: QWORD <|@ <|@
      nr  274  <|@ instruction MOV (x: [r15|QWORD + 40], y: v60|QWORD) size: QWORD <|@ <|@
      nr  276  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B64" "B60" 
    xhandlers
    flags 
    probability 4589398445432346844
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction v84|DWORD[_] = MOV [v82|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  282  <|@ instruction v85|QWORD[.] = UNCOMPRESSPOINTER (input: v84|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  284  <|@ instruction CMPBRANCH (x: v85|QWORD[.], y: v2|QWORD[.]) trueDestinationProbability: 0.9998932466496128 condition: = trueDestination: B59 -> B64 falseDestination: B59 -> B60 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B86" 
    xhandlers
    flags 
    probability 4589397940059341918
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  288  <|@ instruction JUMP ~[v83|QWORD[.]] destination: B64 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4577371935537457006
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  292  <|@ instruction v97|QWORD[.+] = LEA [v80|QWORD[.] + 24] size: QWORD <|@ <|@
      nr  294  <|@ instruction v98|DWORD[_] = MOV [v97|QWORD[.+]] size: DWORD <|@ <|@
      nr  296  <|@ instruction TESTBRANCH (x: v98|DWORD[_], y: v98|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B67 -> B68 falseDestination: B67 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" "B71" 
    xhandlers
    flags 
    probability 4576750104161816650
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  300  <|@ instruction v99|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  302  <|@ instruction v100|QWORD[.] = UNCOMPRESSPOINTER (input: v98|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  304  <|@ instruction TESTBRANCH (x: v99|QWORD, y: v99|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    probability 4576190455923740329
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  308  <|@ instruction v101|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  310  <|@ instruction MOV (x: [v101|QWORD + v99|QWORD * 1 - 8], y: v100|QWORD[.]) size: QWORD <|@ <|@
      nr  312  <|@ instruction v102|QWORD = LEA [v99|QWORD - 8] size: QWORD <|@ <|@
      nr  314  <|@ instruction MOV (x: [r15|QWORD + 40], y: v102|QWORD) size: QWORD <|@ <|@
      nr  316  <|@ instruction JUMP ~[] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    probability 4575897384022324722
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  320  <|@ instruction JUMP ~[] destination: B30 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4575895921484393205
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction v25|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>} <|@ <|@
      nr  326  <|@ instruction rsi|QWORD = MOVE v25|QWORD moveKind: QWORD <|@ <|@
      nr  328  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] - v12|DWORD - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7fba62ccef80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:29] <|@ <|@
      nr  330  <|@ instruction v26|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  332  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] - v12|DWORD - - - - 
>@ <|@ instruction NULLCHECK [v26|QWORD[.]] state [bci:29] <|@ <|@
      nr  334  <|@ instruction JUMP ~[v26|QWORD[.]] destination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4575188794187971253
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  338  <|@ instruction rsi|QWORD[.] = MOVE v58|QWORD[.] moveKind: QWORD <|@ <|@
      nr  340  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  342  <|@ instruction JUMP ~[] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" "B33" "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4605587348047262798
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction v61|DWORD[_] = COMPRESSPOINTER (input: v38|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  348  <|@ instruction MOV (x: [v11|QWORD[.] + v16|DWORD * 4 + 16], y: v61|DWORD[_]) size: DWORD <|@ <|@
      nr  350  <|@ instruction v62|QWORD[.+] = LEA [v11|QWORD[.] + v16|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  352  <|@ instruction v63|QWORD[*] = XOR (x: v62|QWORD[.+], y: v38|QWORD[.]) size: QWORD <|@ <|@
      nr  354  <|@ instruction TESTCONSTBRANCH v63|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4604846135197064160
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  358  <|@ instruction TESTBRANCH (x: v38|QWORD[.], y: v38|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4604179043631885386
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  362  <|@ instruction v65|QWORD[.+] = LEA [v11|QWORD[.] + v16|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  364  <|@ instruction v64|QWORD[*] = SHR v65|QWORD[.+] y: 9 size: QWORD <|@ <|@
      nr  366  <|@ instruction CMPCONSTBRANCH [v64|QWORD[*] + v21|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B88" 
    xhandlers
    flags 
    probability 4603578661223224489
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction JUMP ~[] destination: B39 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B88" 
    xhandlers
    flags 
    probability 4590594123464754032
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  374  <|@ instruction JUMP ~[] destination: B35 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B88" 
    xhandlers
    flags 
    probability 4590001153184595122
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction JUMP ~[] destination: B37 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4589467479932452103
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  382  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  384  <|@ instruction CMPCONSTBRANCH [v64|QWORD[*] + v21|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B88" 
    xhandlers
    flags 
    probability 4588806327720511347
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction JUMP ~[] destination: B41 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4574334916984542422
    begin_IR
      LIR
      nr  390  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  392  <|@ instruction MOVB [v64|QWORD[*] + v21|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  394  <|@ instruction v66|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  396  <|@ instruction v67|QWORD[*] = ADD (x: v64|QWORD[*], y: v21|QWORD) size: QWORD <|@ <|@
      nr  398  <|@ instruction TESTBRANCH (x: v66|QWORD, y: v66|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B88" 
    xhandlers
    flags 
    probability 4573566427501456474
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  402  <|@ instruction v68|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  404  <|@ instruction MOV (x: [v68|QWORD + v66|QWORD * 1 - 8], y: v67|QWORD[*]) size: QWORD <|@ <|@
      nr  406  <|@ instruction v69|QWORD = LEA [v66|QWORD - 8] size: QWORD <|@ <|@
      nr  408  <|@ instruction MOV (x: [r15|QWORD + 72], y: v69|QWORD) size: QWORD <|@ <|@
      nr  410  <|@ instruction JUMP ~[] destination: B44 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4570262383476918658
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  414  <|@ instruction v71|DWORD[_] = MOV [v17|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  416  <|@ instruction v72|QWORD[.] = UNCOMPRESSPOINTER (input: v71|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  418  <|@ instruction CMPBRANCH (x: v72|QWORD[.], y: v2|QWORD[.]) trueDestinationProbability: 0.9854570809572428 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B86" 
    xhandlers
    flags 
    probability 4570144353713859813
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  422  <|@ instruction JUMP ~[v70|QWORD[.]] destination: B50 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 4564966382317228292
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  426  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  428  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:635) [bci: 20]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.resize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:20] <|@ <|@
      nr  430  <|@ instruction v7|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  432  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:635) [bci: 23]
stack: Object[null] 
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD - - - - - - - 
>@ <|@ instruction v8|DWORD = MOV [v7|QWORD[.] + 12] size: DWORD state [bci:23] <|@ <|@
      nr  434  <|@ instruction JUMP ~[v7|QWORD[.], v8|DWORD] destination: B1 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B72" 
    xhandlers
    flags 
    probability 4562617473904064804
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction JUMP ~[] destination: B68 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    probability 4562093595080792590
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  442  <|@ instruction rsi|QWORD[.] = MOVE v100|QWORD[.] moveKind: QWORD <|@ <|@
      nr  444  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  446  <|@ instruction JUMP ~[] destination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B66" "B68" "B71" "B70" 
    successors "B73" "B74" 
    xhandlers
    flags 
    probability 4592437312858669387
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  450  <|@ instruction v103|DWORD[_] = COMPRESSPOINTER (input: v96|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  452  <|@ instruction MOV (x: [v80|QWORD[.] + 24], y: v103|DWORD[_]) size: DWORD <|@ <|@
      nr  454  <|@ instruction v104|QWORD[*] = XOR (x: v80|QWORD[.], y: v96|QWORD[.]) size: QWORD <|@ <|@
      nr  456  <|@ instruction TESTCONSTBRANCH v104|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    probability 4591660023639118941
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  460  <|@ instruction TESTBRANCH (x: v96|QWORD[.], y: v96|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    probability 4590960463341523540
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  464  <|@ instruction v105|QWORD[*] = SHR v80|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  466  <|@ instruction CMPCONSTBRANCH [v105|QWORD[*] + v21|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B83" 
    xhandlers
    flags 
    probability 4590330859073687679
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  470  <|@ instruction JUMP ~[] destination: B77 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B83" 
    xhandlers
    flags 
    probability 4577371935537457006
    begin_IR
      LIR
      nr  472  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  474  <|@ instruction JUMP ~[] destination: B73 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B83" 
    xhandlers
    flags 
    probability 4576750104161816649
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  478  <|@ instruction JUMP ~[] destination: B75 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    probability 4576190455923740328
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  482  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  484  <|@ instruction CMPCONSTBRANCH [v105|QWORD[*] + v21|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B83" 
    xhandlers
    flags 
    probability 4575686772509471639
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  488  <|@ instruction JUMP ~[] destination: B79 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    probability 4561198157899870475
    begin_IR
      LIR
      nr  490  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  492  <|@ instruction MOVB [v105|QWORD[*] + v21|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  494  <|@ instruction v106|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  496  <|@ instruction v107|QWORD[*] = ADD (x: v105|QWORD[*], y: v21|QWORD) size: QWORD <|@ <|@
      nr  498  <|@ instruction TESTBRANCH (x: v106|QWORD, y: v106|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    probability 4560392264437040573
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  502  <|@ instruction v108|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  504  <|@ instruction MOV (x: [v108|QWORD + v106|QWORD * 1 - 8], y: v107|QWORD[*]) size: QWORD <|@ <|@
      nr  506  <|@ instruction v109|QWORD = LEA [v106|QWORD - 8] size: QWORD <|@ <|@
      nr  508  <|@ instruction MOV (x: [r15|QWORD + 72], y: v109|QWORD) size: QWORD <|@ <|@
      nr  510  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B88" 
    xhandlers
    flags 
    probability 4559287139136259037
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  514  <|@ instruction rsi|QWORD = MOVE v67|QWORD[*] moveKind: QWORD <|@ <|@
      nr  516  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  518  <|@ instruction JUMP ~[] destination: B43 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4553315745025075769
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  522  <|@ instruction v31|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  524  <|@ instruction v32|QWORD = LEA [v31|QWORD + 40] size: QWORD <|@ <|@
      nr  526  <|@ instruction CMPBRANCH (x: v32|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4553268943811267021
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  530  <|@ instruction MOV (x: [r15|QWORD + 440], y: v32|QWORD) size: QWORD <|@ <|@
      nr  532  <|@ instruction AMD64PREFETCH ~[v31|QWORD + 296] instr: 0 <|@ <|@
      nr  534  <|@ instruction MOV [v31|QWORD] y: 1 size: QWORD <|@ <|@
      nr  536  <|@ instruction MOV [v31|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>;compressed} <|@ <|@
      nr  538  <|@ instruction MOV [v31|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  540  <|@ instruction MOV [v31|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  542  <|@ instruction MOV [v31|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  544  <|@ instruction MOV [v31|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  546  <|@ instruction v36|QWORD[.] = MOVE v31|QWORD moveKind: QWORD <|@ <|@
      nr  548  <|@ instruction JUMP ~[v36|QWORD[.]] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4553315745025075769
    begin_IR
      LIR
      nr  550  <|@ instruction [v37|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  552  <|@ instruction rsi|QWORD[.] = MOVE v37|QWORD[.] moveKind: QWORD <|@ <|@
      nr  554  <|@ instruction rdx|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr  556  <|@ instruction rcx|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  558  <|@ instruction r8|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  560  <|@ instruction r9|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  562  <|@ st <@st|@live-base-pointers: []
java.util.LinkedHashMap$Entry.<init>(LinkedHashMap.java:208) [bci: 6]
locals: - - - - - 
java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 9]
stack: v37|QWORD[.] 
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] Object[null] - 
java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stack: v11|QWORD[.] v16|DWORD 
locals: v0|QWORD[.] - - - - v5|DWORD - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.]] [] callTarget: HotSpotMethod<HashMap$Node.<init>(int, Object, Object, HashMap$Node)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:6, 9, 56] <|@ <|@
      nr  564  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  566  <|@ instruction rdx|QWORD[.] = MOVE v37|QWORD[.] moveKind: QWORD <|@ <|@
      nr  568  <|@ st <@st|@live-base-pointers: []
java.util.LinkedHashMap.newNode(LinkedHashMap.java:283) [bci: 17]
locals: - - - - - v37|QWORD[.] 
java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stack: v11|QWORD[.] v16|DWORD 
locals: v0|QWORD[.] - - - - v5|DWORD - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<LinkedHashMap.linkNodeAtEnd(LinkedHashMap$Entry)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:17, 56] <|@ <|@
      nr  570  <|@ instruction JUMP ~[v37|QWORD[.]] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    probability 4546075572092099182
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  574  <|@ instruction rsi|QWORD = MOVE v107|QWORD[*] moveKind: QWORD <|@ <|@
      nr  576  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  578  <|@ instruction JUMP ~[] destination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B73" "B75" "B77" "B79" "B82" "B81" 
    successors "B84" "B85" 
    xhandlers
    flags 
    probability 4592437312858669387
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  582  <|@ instruction CMPCONSTBRANCH v81|DWORD trueDestinationProbability: 0.9999886211240704 condition: < trueDestination: B83 -> B84 falseDestination: B83 -> B85 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" 
    xhandlers
    flags 
    probability 4592437224411893480
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  586  <|@ instruction JUMP ~[v83|QWORD[.]] destination: B84 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B50" "B55" "B64" "B84" "B85" "B63" "B53" 
    successors "B87" "B100" 
    xhandlers
    flags 
    probability 4595548303301553864
    begin_IR
      LIR
      nr  588  <|@ instruction [v110|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  590  <|@ instruction TESTBRANCH (x: v110|QWORD[.], y: v110|QWORD[.]) trueDestinationProbability: 0.6091185940042786 condition: = trueDestination: B86 -> B87 falseDestination: B86 -> B100 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B88" 
    xhandlers
    flags 
    probability 4592437118697206803
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction JUMP ~[] destination: B87 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B35" "B87" "B43" "B44" "B41" "B39" "B37" 
    successors "B89" "B90" 
    xhandlers
    flags 
    probability 4606558935301518032
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  598  <|@ instruction INC [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  600  <|@ instruction v111|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  602  <|@ instruction v112|DWORD = ADD (x: v111|DWORD, ~y: [v0|QWORD[.] + 20]) size: DWORD <|@ <|@
      nr  604  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v112|DWORD) size: DWORD <|@ <|@
      nr  606  <|@ instruction CMPBRANCH (x: v112|DWORD, y: [v0|QWORD[.] + 28]) trueDestinationProbability: 7.853038846579175E-4 condition: > trueDestination: B88 -> B89 falseDestination: B88 -> B90 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B91" 
    xhandlers
    flags 
    probability 4606552351536966788
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  610  <|@ instruction JUMP ~[] destination: B90 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" "B89" 
    successors "B92" "B93" "B99" 
    xhandlers
    flags 
    probability 4606558935301518032
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  614  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v19|QWORD - keyConstants: [meta{HotSpotType<Ljava/util/HashMap;, resolved>}, meta{HotSpotType<Ljava/util/LinkedHashMap;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/replacements/SnippetTemplate$LRUCache;, resolved>}] keyTargets: [B91 -> B92, B91 -> B93, B91 -> B93] defaultTarget: B91 -> B99 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B97" 
    xhandlers
    flags 
    probability 4606555909645339483
    begin_IR
      LIR
      nr  616  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  618  <|@ instruction JUMP ~[] destination: B92 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B92" "B94" "B96" 
    successors 
    xhandlers
    flags 
    probability 4606558935301518031
    begin_IR
      LIR
      nr  620  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  622  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  624  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B101" "B119" 
    xhandlers
    flags 
    probability 4589652288651159933
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  628  <|@ instruction v122|DWORD[_] = MOV [v110|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  630  <|@ instruction TESTBRANCH (x: v4|DWORD, y: v4|DWORD) trueDestinationProbability: 0.9999962001170364 condition: = trueDestination: B100 -> B101 falseDestination: B100 -> B119 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B102" "B103" 
    xhandlers
    flags 
    probability 4589652269697845341
    begin_IR
      LIR
      nr  632  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  634  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B103 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B108" 
    xhandlers
    flags 
    probability 4589138949298219176
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  638  <|@ instruction JUMP ~[] destination: B102 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" "B105" 
    xhandlers
    flags 
    probability 4574630580609171603
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  642  <|@ instruction v123|QWORD[.+] = LEA [v110|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  644  <|@ instruction v124|DWORD[_] = MOV [v123|QWORD[.+]] size: DWORD <|@ <|@
      nr  646  <|@ instruction TESTBRANCH (x: v124|DWORD[_], y: v124|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B103 -> B104 falseDestination: B103 -> B105 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B106" "B107" 
    xhandlers
    flags 
    probability 4573832524763622737
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  650  <|@ instruction v125|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  652  <|@ instruction v126|QWORD[.] = UNCOMPRESSPOINTER (input: v124|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  654  <|@ instruction TESTBRANCH (x: v125|QWORD, y: v125|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B105 -> B106 falseDestination: B105 -> B107 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B108" 
    xhandlers
    flags 
    probability 4573114274502628758
    begin_IR
      LIR
      nr  656  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  658  <|@ instruction v127|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  660  <|@ instruction MOV (x: [v127|QWORD + v125|QWORD * 1 - 8], y: v126|QWORD[.]) size: QWORD <|@ <|@
      nr  662  <|@ instruction v128|QWORD = LEA [v125|QWORD - 8] size: QWORD <|@ <|@
      nr  664  <|@ instruction MOV (x: [r15|QWORD + 40], y: v128|QWORD) size: QWORD <|@ <|@
      nr  666  <|@ instruction JUMP ~[] destination: B107 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B91" 
    xhandlers
    flags 
    probability 4559880998172045651
    begin_IR
      LIR
      nr  668  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  670  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  672  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:669) [bci: 288]
locals: v0|QWORD[.] - - - - v5|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.resize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:288] <|@ <|@
      nr  674  <|@ instruction v113|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  676  <|@ instruction JUMP ~[] destination: B89 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B108" 
    xhandlers
    flags 
    probability 4559523670035962382
    begin_IR
      LIR
      nr  678  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  680  <|@ instruction JUMP ~[] destination: B104 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B108" 
    xhandlers
    flags 
    probability 4558885225359523289
    begin_IR
      LIR
      nr  682  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  684  <|@ instruction rsi|QWORD[.] = MOVE v126|QWORD[.] moveKind: QWORD <|@ <|@
      nr  686  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  688  <|@ instruction JUMP ~[] destination: B106 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B102" "B104" "B107" "B106" 
    successors "B109" "B110" 
    xhandlers
    flags 
    probability 4589652269697845341
    begin_IR
      LIR
      nr  690  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  692  <|@ instruction MOV (x: [v110|QWORD[.] + 20], y: v22|DWORD[_]) size: DWORD <|@ <|@
      nr  694  <|@ instruction v129|QWORD[*] = XOR (x: v110|QWORD[.], y: v3|QWORD[.]) size: QWORD <|@ <|@
      nr  696  <|@ instruction TESTCONSTBRANCH v129|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B108 -> B109 falseDestination: B108 -> B110 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" "B112" 
    xhandlers
    flags 
    probability 4589138949298219176
    begin_IR
      LIR
      nr  698  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  700  <|@ instruction TESTBRANCH (x: v3|QWORD[.], y: v3|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B110 -> B111 falseDestination: B110 -> B112 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B113" "B114" 
    xhandlers
    flags 
    probability 4588241136471976702
    begin_IR
      LIR
      nr  702  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  704  <|@ instruction v130|QWORD[*] = SHR v110|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  706  <|@ instruction CMPCONSTBRANCH [v130|QWORD[*] + v21|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B112 -> B113 falseDestination: B112 -> B114 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B120" 
    xhandlers
    flags 
    probability 4587433104928358475
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  710  <|@ instruction JUMP ~[] destination: B113 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B120" 
    xhandlers
    flags 
    probability 4574630580609171603
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  714  <|@ instruction JUMP ~[] destination: B109 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B120" 
    xhandlers
    flags 
    probability 4573832524763622738
    begin_IR
      LIR
      nr  716  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  718  <|@ instruction JUMP ~[] destination: B111 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B115" "B116" 
    xhandlers
    flags 
    probability 4573114274502628759
    begin_IR
      LIR
      nr  720  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  722  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  724  <|@ instruction CMPCONSTBRANCH [v130|QWORD[*] + v21|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B114 -> B115 falseDestination: B114 -> B116 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B120" 
    xhandlers
    flags 
    probability 4572467849267734178
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  728  <|@ instruction JUMP ~[] destination: B115 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B117" "B118" 
    xhandlers
    flags 
    probability 4558310625150728107
    begin_IR
      LIR
      nr  730  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  732  <|@ instruction MOVB [v130|QWORD[*] + v21|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  734  <|@ instruction v131|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  736  <|@ instruction v132|QWORD[*] = ADD (x: v130|QWORD[*], y: v21|QWORD) size: QWORD <|@ <|@
      nr  738  <|@ instruction TESTBRANCH (x: v131|QWORD, y: v131|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B116 -> B117 falseDestination: B116 -> B118 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B120" 
    xhandlers
    flags 
    probability 4557793484962812442
    begin_IR
      LIR
      nr  740  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  742  <|@ instruction v133|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  744  <|@ instruction MOV (x: [v133|QWORD + v131|QWORD * 1 - 8], y: v132|QWORD[*]) size: QWORD <|@ <|@
      nr  746  <|@ instruction v134|QWORD = LEA [v131|QWORD - 8] size: QWORD <|@ <|@
      nr  748  <|@ instruction MOV (x: [r15|QWORD + 72], y: v134|QWORD) size: QWORD <|@ <|@
      nr  750  <|@ instruction JUMP ~[] destination: B118 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B94" "B95" 
    xhandlers
    flags 
    probability 4554832167497868566
    begin_IR
      LIR
      nr  752  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  754  <|@ instruction TESTBRANCH (x: v5|DWORD, y: v5|DWORD) trueDestinationProbability: 0.4891304347826087 condition: = trueDestination: B93 -> B94 falseDestination: B93 -> B95 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B96" "B98" 
    xhandlers
    flags 
    probability 4550463275345577801
    begin_IR
      LIR
      nr  756  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  758  <|@ instruction v114|DWORD[_] = MOV [v0|QWORD[.] + 52] size: DWORD <|@ <|@
      nr  760  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:670) [bci: 292]
locals: v0|QWORD[.] - - - - v5|DWORD - - - - - - - 
>@ <|@ instruction NULLCHECK [v114|DWORD[_] * 8] state [bci:292] <|@ <|@
      nr  762  <|@ instruction v115|DWORD = MOV [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  764  <|@ instruction v117|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr  766  <|@ instruction v116|QWORD = UNCOMPRESSPOINTER (input: v115|DWORD, ~baseRegister: v117|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr  768  <|@ instruction v118|QWORD = MOV [v116|QWORD + 872] size: QWORD <|@ <|@
      nr  770  <|@ instruction v119|QWORD = MOV [v118|QWORD + 64] size: QWORD <|@ <|@
      nr  772  <|@ instruction v120|QWORD[.] = UNCOMPRESSPOINTER (input: v114|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  774  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  776  <|@ instruction rdx|QWORD[.] = MOVE v120|QWORD[.] moveKind: QWORD <|@ <|@
      nr  778  <|@ instruction rbx|QWORD = MOVE v118|QWORD moveKind: QWORD <|@ <|@
      nr  780  <|@ instruction rax|QWORD = MOVE v119|QWORD moveKind: QWORD <|@ <|@
      nr  782  <|@ st <@st|@live-base-pointers: []
java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 15]
locals: v0|QWORD[.] - v120|QWORD[.] - 
java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
locals: - - - - - - - - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<LinkedHashMap.removeEldestEntry(Map$Entry)> state [bci:15, 295] <|@ <|@
      nr  784  <|@ instruction v121|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  786  <|@ instruction TESTBRANCH (x: v121|DWORD, y: v121|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B95 -> B96 falseDestination: B95 -> B98 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B97" 
    xhandlers
    flags 
    probability 4550463275345577801
    begin_IR
      LIR
      nr  788  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  790  <|@ instruction JUMP ~[] destination: B96 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B97" 
    xhandlers
    flags 
    probability 4550193860395418340
    begin_IR
      LIR
      nr  792  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  794  <|@ instruction JUMP ~[] destination: B94 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B120" 
    xhandlers
    flags 
    probability 4543399067768740112
    begin_IR
      LIR
      nr  796  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  798  <|@ instruction rsi|QWORD = MOVE v132|QWORD[*] moveKind: QWORD <|@ <|@
      nr  800  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  802  <|@ instruction JUMP ~[] destination: B117 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B119" "B109" "B117" "B118" "B115" "B113" "B111" 
    successors 
    xhandlers
    flags 
    probability 4589652288651159933
    begin_IR
      LIR
      nr  804  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  806  <|@ instruction v135|QWORD = MOV [v19|QWORD + 688] size: QWORD <|@ <|@
      nr  808  <|@ instruction v136|QWORD = MOV [v135|QWORD + 64] size: QWORD <|@ <|@
      nr  810  <|@ instruction v137|QWORD[.] = UNCOMPRESSPOINTER (input: v122|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  812  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  814  <|@ instruction rdx|QWORD[.] = MOVE v110|QWORD[.] moveKind: QWORD <|@ <|@
      nr  816  <|@ instruction rbx|QWORD = MOVE v135|QWORD moveKind: QWORD <|@ <|@
      nr  818  <|@ instruction rax|QWORD = MOVE v136|QWORD moveKind: QWORD <|@ <|@
      nr  820  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:663) [bci: 253]
locals: - - - - - - - - - - - - v137|QWORD[.] 
>@ <|@ instruction - = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<HashMap.afterNodeAccess(HashMap$Node)> state [bci:253] <|@ <|@
      nr  822  <|@ instruction rax|QWORD[.] = MOVE v137|QWORD[.] moveKind: QWORD <|@ <|@
      nr  824  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4542678729597855531
    begin_IR
      LIR
      nr  826  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  828  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] - v12|DWORD - - - - 
>@ <|@ instruction v73|DWORD = MOV [v2|QWORD[.] + 8] size: DWORD state [bci:29] <|@ <|@
      nr  830  <|@ instruction v75|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr  832  <|@ instruction v74|QWORD = UNCOMPRESSPOINTER (input: v73|DWORD, ~baseRegister: v75|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr  834  <|@ instruction v76|QWORD = MOV [v74|QWORD + 464] size: QWORD <|@ <|@
      nr  836  <|@ instruction v77|QWORD = MOV [v76|QWORD + 64] size: QWORD <|@ <|@
      nr  838  <|@ instruction rsi|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  840  <|@ instruction rdx|QWORD[.] = MOVE v72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  842  <|@ instruction rbx|QWORD = MOVE v76|QWORD moveKind: QWORD <|@ <|@
      nr  844  <|@ instruction rax|QWORD = MOVE v77|QWORD moveKind: QWORD <|@ <|@
      nr  846  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:641) [bci: 91]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] v70|QWORD[.] - - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:91] <|@ <|@
      nr  848  <|@ instruction v78|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  850  <|@ instruction TESTBRANCH (x: v78|DWORD, y: v78|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B86" 
    xhandlers
    flags 
    probability 4542678729597855531
    begin_IR
      LIR
      nr  852  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  854  <|@ instruction JUMP ~[v70|QWORD[.]] destination: B53 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B63" 
    xhandlers
    flags 
    probability 4529894057192690854
    begin_IR
      LIR
      nr  856  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  858  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] v80|QWORD[.] - - - - v81|DWORD 
>@ <|@ instruction v86|DWORD = MOV [v2|QWORD[.] + 8] size: DWORD state [bci:134] <|@ <|@
      nr  860  <|@ instruction v88|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr  862  <|@ instruction v87|QWORD = UNCOMPRESSPOINTER (input: v86|DWORD, ~baseRegister: v88|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr  864  <|@ instruction v89|QWORD = MOV [v87|QWORD + 464] size: QWORD <|@ <|@
      nr  866  <|@ instruction v90|QWORD = MOV [v89|QWORD + 64] size: QWORD <|@ <|@
      nr  868  <|@ instruction rsi|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  870  <|@ instruction rdx|QWORD[.] = MOVE v85|QWORD[.] moveKind: QWORD <|@ <|@
      nr  872  <|@ instruction rbx|QWORD = MOVE v89|QWORD moveKind: QWORD <|@ <|@
      nr  874  <|@ instruction rax|QWORD = MOVE v90|QWORD moveKind: QWORD <|@ <|@
      nr  876  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:654) [bci: 203]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] - - - v83|QWORD[.] - v81|DWORD 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:203] <|@ <|@
      nr  878  <|@ instruction v91|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  880  <|@ instruction TESTBRANCH (x: v91|DWORD, y: v91|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B86" 
    xhandlers
    flags 
    probability 4529894057192690854
    begin_IR
      LIR
      nr  882  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  884  <|@ instruction JUMP ~[v83|QWORD[.]] destination: B63 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4523100981620127249
    begin_IR
      LIR
      nr  886  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  888  <|@ instruction v33|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>} <|@ <|@
      nr  890  <|@ instruction rsi|QWORD = MOVE v33|QWORD moveKind: QWORD <|@ <|@
      nr  892  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] - v12|DWORD - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7fba62ccef80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:29] <|@ <|@
      nr  894  <|@ instruction v34|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  896  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] - v12|DWORD - - - - 
>@ <|@ instruction NULLCHECK [v34|QWORD[.]] state [bci:29] <|@ <|@
      nr  898  <|@ instruction JUMP ~[v34|QWORD[.]] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" 
    xhandlers
    flags 
    probability 4518403274531071726
    begin_IR
      LIR
      nr  900  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  902  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  904  <|@ instruction rdx|QWORD[.] = MOVE v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  906  <|@ instruction rcx|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr  908  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:650) [bci: 169]
locals: v0|QWORD[.] - - v3|QWORD[.] v4|DWORD v5|DWORD - - - - v83|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<HashMap.treeifyBin(HashMap$Node[], int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:169] <|@ <|@
      nr  910  <|@ instruction JUMP ~[v83|QWORD[.]] destination: B85 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B86" 
    xhandlers
    flags 
    probability 4510226010095555986
    begin_IR
      LIR
      nr  912  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  914  <|@ instruction rsi|QWORD[.] = MOVE v70|QWORD[.] moveKind: QWORD <|@ <|@
      nr  916  <|@ instruction rdx|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  918  <|@ instruction rcx|QWORD[.] = MOVE v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  920  <|@ instruction r8|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr  922  <|@ instruction r9|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  924  <|@ instruction rdi|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  926  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:644) [bci: 123]
locals: v0|QWORD[.] - - v3|QWORD[.] v4|DWORD v5|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|QWORD[.], rdi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap$TreeNode.putTreeVal(HashMap, HashMap$Node[], int, Object, Object)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:123] <|@ <|@
      nr  928  <|@ instruction v79|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  930  <|@ instruction JUMP ~[v79|QWORD[.]] destination: B55 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B120" 
    xhandlers
    flags 
    probability 4508568125070994604
    begin_IR
      LIR
      nr  932  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  934  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:659) [bci: 222]
locals: v0|QWORD[.] - - v3|QWORD[.] v4|DWORD v5|DWORD - - - - v110|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [v122|DWORD[_] * 8] state [bci:222] <|@ <|@
      nr  936  <|@ instruction JUMP ~[] destination: B119 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  938  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  940  <|@ instruction JUMP ~[int[-51507|0xffffffffffff36cd], long[5780|0x1694]] destination: B47 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  942  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  944  <|@ instruction MOV [r15|QWORD + 1156] y: -157971 size: DWORD <|@ <|@
      nr  946  <|@ instruction MOV [r15|QWORD + 1168] y: 1300 size: QWORD <|@ <|@
      nr  948  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:654) [bci: 206]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] - - - v83|QWORD[.] - v81|DWORD 
>@ <|@ instruction DEOPT info [bci:206] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  950  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  952  <|@ instruction JUMP ~[int[-75547|0xfffffffffffed8e5], long[0|0x0]] destination: B121 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B121" "B47" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  954  <|@ instruction [v138|DWORD, v139|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  956  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v138|DWORD) size: DWORD <|@ <|@
      nr  958  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v139|QWORD) size: QWORD <|@ <|@
      nr  960  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] - v12|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:29] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  962  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  964  <|@ instruction JUMP ~[] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  966  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  968  <|@ instruction MOV [r15|QWORD + 1156] y: -61235 size: DWORD <|@ <|@
      nr  970  <|@ instruction MOV [r15|QWORD + 1168] y: 8980 size: QWORD <|@ <|@
      nr  972  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:670) [bci: 292]
locals: v0|QWORD[.] - - - - v5|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:292] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  974  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  976  <|@ instruction JUMP ~[] destination: B26 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B26" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  978  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  980  <|@ instruction MOV [r15|QWORD + 1156] y: -82987 size: DWORD <|@ <|@
      nr  982  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  984  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stack: v11|QWORD[.] v16|DWORD v38|QWORD[.] 
locals: v0|QWORD[.] - - - - v5|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:59] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  986  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  988  <|@ instruction MOV [r15|QWORD + 1156] y: -153363 size: DWORD <|@ <|@
      nr  990  <|@ instruction MOV [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  992  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:641) [bci: 94]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] v70|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:94] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  994  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  996  <|@ instruction MOV [r15|QWORD + 1156] y: -161299 size: DWORD <|@ <|@
      nr  998  <|@ instruction MOV [r15|QWORD + 1168] y: 10260 size: QWORD <|@ <|@
      nr 1000  <|@ st <@st|@live-base-pointers: []
java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 18]
stack: v121|DWORD 
locals: v0|QWORD[.] - v120|QWORD[.] - 
java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
locals: - - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:18, 295] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1002  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1004  <|@ instruction MOV [r15|QWORD + 1156] y: -129299 size: DWORD <|@ <|@
      nr 1006  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 1008  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:634) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #21         // table:java.util.HashMap$Node[]
     4: dup           
     5: astore        6
     7: ifnull        19
    10: aload         6
    12: arraylength   
    13: dup           
    14: istore        8
    16: ifne          29
    19: aload_0       
    20: invokevirtual #23         // resize:()java.util.HashMap$Node[]
    23: dup           
    24: astore        6
    26: arraylength   
    27: istore        8
    29: aload         6
    31: iload         8
    33: iconst_1      
    34: isub          
    35: iload_1       
    36: iand          
    37: dup           
    38: istore        9
    40: aaload        
    41: dup           
    42: astore        7
    44: ifnonnull     63
    47: aload         6
    49: iload         9
    51: aload_0       
    52: iload_1       
    53: aload_2       
    54: aload_3       
    55: aconst_null   
    56: invokevirtual #40         // newNode:(int, java.lang.Object, java.lang.Object, java.util.HashMap$Node)java.util.HashMap$Node
    59: aastore       
    60: goto          259
    63: aload         7
    65: getfield      #35         // java.util.HashMap$Node.hash:int
    68: iload_1       
    69: if_icmpne     104
    72: aload         7
    74: getfield      #36         // java.util.HashMap$Node.key:java.lang.Object
    77: dup           
    78: astore        11
    80: aload_2       
    81: if_acmpeq     97
    84: aload_2       
    85: ifnull        104
    88: aload_2       
    89: aload         11
    91: invokevirtual #37         // java.lang.Object.equals:(java.lang.Object)boolean
    94: ifeq          104
    97: aload         7
    99: astore        10
   101: goto          222
   104: aload         7
   106: instanceof    #180        // java.util.HashMap$TreeNode
   109: ifeq          131
   112: aload         7
   114: checkcast     #180        // java.util.HashMap$TreeNode
   117: aload_0       
   118: aload         6
   120: iload_1       
   121: aload_2       
   122: aload_3       
   123: invokevirtual #41         // java.util.HashMap$TreeNode.putTreeVal:(java.util.HashMap, java.util.HashMap$Node[], int, java.lang.Object, java.lang.Object)java.util.HashMap$TreeNode
   126: astore        10
   128: goto          222
   131: iconst_0      
   132: istore        12
   134: aload         7
   136: getfield      #38         // java.util.HashMap$Node.next:java.util.HashMap$Node
   139: dup           
   140: astore        10
   142: ifnonnull     175
   145: aload         7
   147: aload_0       
   148: iload_1       
   149: aload_2       
   150: aload_3       
   151: aconst_null   
   152: invokevirtual #40         // newNode:(int, java.lang.Object, java.lang.Object, java.util.HashMap$Node)java.util.HashMap$Node
   155: putfield      #38         // java.util.HashMap$Node.next:java.util.HashMap$Node
   158: iload         12
   160: bipush        7
   162: if_icmplt     222
   165: aload_0       
   166: aload         6
   168: iload_1       
   169: invokevirtual #42         // treeifyBin:(java.util.HashMap$Node[], int)void
   172: goto          222
   175: aload         10
   177: getfield      #35         // java.util.HashMap$Node.hash:int
   180: iload_1       
   181: if_icmpne     212
   184: aload         10
   186: getfield      #36         // java.util.HashMap$Node.key:java.lang.Object
   189: dup           
   190: astore        11
   192: aload_2       
   193: if_acmpeq     222
   196: aload_2       
   197: ifnull        212
   200: aload_2       
   201: aload         11
   203: invokevirtual #37         // java.lang.Object.equals:(java.lang.Object)boolean
   206: ifeq          212
   209: goto          222
   212: aload         10
   214: astore        7
   216: iinc          
   219: goto          134
   222: aload         10
   224: ifnull        259
   227: aload         10
   229: getfield      #34         // java.util.HashMap$Node.value:java.lang.Object
   232: astore        12
   234: iload         4
   236: ifeq          244
   239: aload         12
   241: ifnonnull     250
   244: aload         10
   246: aload_3       
   247: putfield      #34         // java.util.HashMap$Node.value:java.lang.Object
   250: aload_0       
   251: aload         10
   253: invokevirtual #43         // afterNodeAccess:(java.util.HashMap$Node)void
   256: aload         12
   258: areturn       
   259: aload_0       
   260: dup           
   261: getfield      #44         // modCount:int
   264: iconst_1      
   265: iadd          
   266: putfield      #44         // modCount:int
   269: aload_0       
   270: dup           
   271: getfield      #32         // size:int
   274: iconst_1      
   275: iadd          
   276: dup_x1        
   277: putfield      #32         // size:int
   280: aload_0       
   281: getfield      #17         // threshold:int
   284: if_icmple     292
   287: aload_0       
   288: invokevirtual #23         // resize:()java.util.HashMap$Node[]
   291: pop           
   292: aload_0       
   293: iload         5
   295: invokevirtual #45         // afterNodeInsertion:(boolean)void
   298: aconst_null   
   299: areturn       
   <|@
end_bytecodes
begin_intervals
  name "Before register allocation"
  rax|q fixed "[rax|q]" rax|q v95|q [0, 1[[238, 242[[328, 330[[428, 430[[562, 563[[568, 569[[622, 624[[672, 674[[780, 784[[818, 821[[822, 824[[844, 848[[874, 878[[892, 894[[908, 909[[926, 928[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v2|q [0, 10[[230, 241[[428, 429[[556, 563[[568, 569[[672, 673[[782, 783[[820, 821[[846, 847[[876, 877[[906, 909[[918, 927[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- v1|d [0, 8[[228, 241[[428, 429[[554, 563[[566, 569[[672, 673[[776, 783[[814, 821[[840, 847[[870, 877[[904, 909[[916, 927[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- v94|q [0, 1[[236, 241[[428, 429[[562, 563[[568, 569[[672, 673[[778, 783[[816, 821[[842, 847[[872, 877[[908, 909[[926, 927[ "NoOptimization"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 2[[240, 241[[428, 429[[562, 563[[568, 569[[672, 673[[782, 783[[820, 821[[846, 847[[876, 877[[908, 909[[926, 927[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v0|q [0, 6[[226, 241[[326, 328[[338, 340[[426, 429[[442, 444[[514, 516[[552, 563[[564, 569[[574, 576[[670, 673[[684, 686[[774, 783[[798, 800[[812, 821[[838, 847[[868, 877[[890, 892[[902, 909[[914, 927[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- v3|q [0, 16[[240, 241[[428, 429[[562, 563[[568, 569[[672, 673[[782, 783[[820, 821[[846, 847[[876, 877[[908, 909[[924, 927[ "NoOptimization"
  r8|- fixed "[r8|-]" r8|- v3|q [0, 12[[232, 241[[428, 429[[558, 563[[568, 569[[672, 673[[782, 783[[820, 821[[846, 847[[876, 877[[908, 909[[920, 927[ "NoOptimization"
  r9|- fixed "[r9|-]" r9|- v2|q [0, 14[[234, 241[[428, 429[[560, 563[[568, 569[[672, 673[[782, 783[[820, 821[[846, 847[[876, 877[[908, 909[[922, 927[ "NoOptimization"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[240, 241[[428, 429[[562, 563[[568, 569[[672, 673[[782, 783[[820, 821[[846, 847[[876, 877[[908, 909[[926, 927[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[240, 241[[428, 429[[562, 563[[568, 569[[672, 673[[782, 783[[820, 821[[846, 847[[876, 877[[908, 909[[926, 927[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[240, 241[[428, 429[[562, 563[[568, 569[[672, 673[[782, 783[[820, 821[[846, 847[[876, 877[[908, 909[[926, 927[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[240, 241[[428, 429[[562, 563[[568, 569[[672, 673[[782, 783[[820, 821[[846, 847[[876, 877[[908, 909[[926, 927[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[240, 241[[428, 429[[562, 563[[568, 569[[672, 673[[782, 783[[820, 821[[846, 847[[876, 877[[908, 909[[926, 927[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[240, 241[[428, 429[[562, 563[[568, 569[[672, 673[[782, 783[[820, 821[[846, 847[[876, 877[[908, 909[[926, 927[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[240, 241[[428, 429[[562, 563[[568, 569[[672, 673[[782, 783[[820, 821[[846, 847[[876, 877[[908, 909[[926, 927[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[240, 241[[428, 429[[562, 563[[568, 569[[672, 673[[782, 783[[820, 821[[846, 847[[876, 877[[908, 909[[926, 927[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[240, 241[[428, 429[[562, 563[[568, 569[[672, 673[[782, 783[[820, 821[[846, 847[[876, 877[[908, 909[[926, 927[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[240, 241[[428, 429[[562, 563[[568, 569[[672, 673[[782, 783[[820, 821[[846, 847[[876, 877[[908, 909[[926, 927[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[240, 241[[428, 429[[562, 563[[568, 569[[672, 673[[782, 783[[820, 821[[846, 847[[876, 877[[908, 909[[926, 927[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[240, 241[[428, 429[[562, 563[[568, 569[[672, 673[[782, 783[[820, 821[[846, 847[[876, 877[[908, 909[[926, 927[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[240, 241[[428, 429[[562, 563[[568, 569[[672, 673[[782, 783[[820, 821[[846, 847[[876, 877[[908, 909[[926, 927[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[240, 241[[428, 429[[562, 563[[568, 569[[672, 673[[782, 783[[820, 821[[846, 847[[876, 877[[908, 909[[926, 927[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[240, 241[[428, 429[[562, 563[[568, 569[[672, 673[[782, 783[[820, 821[[846, 847[[876, 877[[908, 909[[926, 927[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[240, 241[[428, 429[[562, 563[[568, 569[[672, 673[[782, 783[[820, 821[[846, 847[[876, 877[[908, 909[[926, 927[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[240, 241[[428, 429[[562, 563[[568, 569[[672, 673[[782, 783[[820, 821[[846, 847[[876, 877[[908, 909[[926, 927[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[240, 241[[428, 429[[562, 563[[568, 569[[672, 673[[782, 783[[820, 821[[846, 847[[876, 877[[908, 909[[926, 927[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[240, 241[[428, 429[[562, 563[[568, 569[[672, 673[[782, 783[[820, 821[[846, 847[[876, 877[[908, 909[[926, 927[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[240, 241[[428, 429[[562, 563[[568, 569[[672, 673[[782, 783[[820, 821[[846, 847[[876, 877[[908, 909[[926, 927[ "NoDefinitionFound"
  v0|q QWORD "[v0|q]" v0|q rsi|- [6, 616[[626, 788[[796, 812[[826, 949[[950, 961[[962, 973[[974, 985[[986, 993[[994, 1001[[1002, 1009[6 MustHaveRegister 18 MustHaveRegister 50 MustHaveRegister 226 ShouldHaveRegister 426 ShouldHaveRegister 564 ShouldHaveRegister 598 MustHaveRegister 602 MustHaveRegister 604 MustHaveRegister 606 MustHaveRegister 670 ShouldHaveRegister 758 MustHaveRegister 762 MustHaveRegister 774 ShouldHaveRegister 812 ShouldHaveRegister 902 ShouldHaveRegister 916 ShouldHaveRegister  "NoSpillStore"
  v1|d DWORD "[v1|d]" v1|d rdx|- [8, 102[[186, 250[[278, 286[[290, 318[[322, 336[[412, 420[[424, 512[[520, 563[[572, 584[[826, 852[[856, 882[[886, 906[[912, 920[[938, 949[[950, 961[[986, 993[[1002, 1009[8 MustHaveRegister 42 ShouldHaveRegister 102 MustHaveRegister 190 MustHaveRegister 210 MustHaveRegister 219 LiveAtLoopEnd 228 ShouldHaveRegister 554 ShouldHaveRegister 906 ShouldHaveRegister 920 ShouldHaveRegister  "NoSpillStore"
  v2|q QWORD "[v2|q]" v2|q rcx|- [10, 98[[186, 230[[278, 286[[322, 336[[412, 420[[424, 436[[520, 563[[826, 852[[856, 882[[886, 900[[912, 922[[938, 949[[950, 961[[986, 993[[1002, 1009[10 MustHaveRegister 98 MustHaveRegister 230 ShouldHaveRegister 284 ShouldHaveRegister 418 ShouldHaveRegister 556 ShouldHaveRegister 828 MustHaveRegister 838 ShouldHaveRegister 858 MustHaveRegister 868 ShouldHaveRegister 922 ShouldHaveRegister  "NoSpillStore"
  v3|q QWORD "[v3|q]" v3|q r8|- [12, 74[[186, 250[[278, 318[[322, 333[[412, 512[[520, 563[[572, 592[[626, 668[[678, 700[[826, 935[[938, 949[[950, 961[[986, 993[[1002, 1009[12 MustHaveRegister 58 MustHaveRegister 232 ShouldHaveRegister 558 ShouldHaveRegister 694 ShouldHaveRegister 700 MustHaveRegister 924 ShouldHaveRegister  "NoSpillStore"
  v4|d DWORD "[v4|d]" v4|d r9|- [14, 74[[186, 250[[278, 318[[322, 333[[412, 512[[520, 528[[572, 592[[626, 632[[826, 897[[900, 935[[938, 949[[950, 961[[986, 993[[1002, 1009[14 MustHaveRegister 630 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[v5|d]" v5|d rdi|- [16, 616[[626, 632[[668, 678[[752, 761[[826, 935[[938, 949[[950, 961[[962, 973[[974, 985[[986, 993[[1002, 1009[16 MustHaveRegister 754 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[v6|d]" v6|d -1 [18, 30[18 MustHaveRegister 20 MustHaveRegister 24 MustHaveRegister 30 MustHaveRegister  "NoSpillStore"
  v7|q QWORD "[v7|q]" v7|q rax|q [430, 435[430 MustHaveRegister 432 MustHaveRegister 434 ShouldHaveRegister  "NoSpillStore"
  v8|d DWORD "[v8|d]" v8|d -1 [432, 435[432 MustHaveRegister 434 ShouldHaveRegister  "NoSpillStore"
  v9|d DWORD "[v9|d]" v9|d v12|d [24, 33[24 MustHaveRegister 26 MustHaveRegister 32 ShouldHaveRegister  "NoSpillStore"
  v10|q QWORD "[v10|q]" v10|q v6|d [30, 33[30 MustHaveRegister 32 ShouldHaveRegister  "NoSpillStore"
  v11|q QWORD "[v11|q]" v11|q v10|q [34, 286[[290, 362[[412, 420[[436, 512[[520, 584[[826, 852[[856, 882[[886, 904[[912, 918[[938, 949[[950, 961[[962, 966[[974, 985[[986, 993[36 MustHaveRegister 38 MustHaveRegister 48 MustHaveRegister 252 MustHaveRegister 348 MustHaveRegister 350 MustHaveRegister 362 MustHaveRegister 904 ShouldHaveRegister 918 ShouldHaveRegister  "NoSpillStore"
  v12|d DWORD "[v12|d]" v12|d v9|d [34, 74[[186, 192[[322, 333[[412, 420[[520, 528[[826, 829[[886, 897[[938, 942[[950, 961[40 ShouldHaveRegister  "NoSpillStore"
  v13|d DWORD "[v13|d]" v13|d -1 [36, 44[36 MustHaveRegister 44 MustHaveRegister  "NoSpillStore"
  v14|d DWORD "[v14|d]" v14|d -1 [38, 110[[322, 336[[520, 572[[886, 900[38 MustHaveRegister 110 MustHaveRegister  "NoSpillStore"
  v15|d DWORD "[v15|d]" v15|d v12|d [40, 42[40 MustHaveRegister 42 ShouldHaveRegister  "NoSpillStore"
  v16|d DWORD "[v16|d]" v16|d v1|d [42, 186[[250, 278[[318, 362[[520, 572[[886, 900[[962, 966[[974, 985[42 MustHaveRegister 44 ShouldHaveRegister 48 MustHaveRegister 252 MustHaveRegister 348 MustHaveRegister 350 MustHaveRegister 362 MustHaveRegister  "NoSpillStore"
  v17|d DWORD "[v17|d]" v17|d -1 [48, 62[[186, 194[[412, 414[48 MustHaveRegister 60 MustHaveRegister 188 MustHaveRegister 190 MustHaveRegister 194 MustHaveRegister 414 MustHaveRegister  "NoSpillStore"
  v18|d DWORD "[v18|d]" v18|d -1 [50, 54[50 MustHaveRegister 54 MustHaveRegister  "NoSpillStore"
  v19|q QWORD "[v19|q]" v19|q v18|d [54, 424[[436, 615[[626, 752[[796, 806[[826, 938[54 MustHaveRegister 64 MustHaveRegister 222 MustHaveRegister 614 MustHaveRegister 806 MustHaveRegister  "NoSpillStore"
  v20|q QWORD "[v20|q]" v20|q -1 [52, 55[52 MustHaveRegister 54 MustHaveRegister  "NoSpillStore"
  v21|q QWORD "[v21|q]" v21|q -1 [56, 368[[380, 386[[390, 396[[412, 424[[436, 512[[520, 592[[626, 668[[678, 708[[720, 726[[730, 736[[826, 932[56 MustHaveRegister 366 MustHaveRegister 384 MustHaveRegister 392 MustHaveRegister 396 ShouldHaveRegister 466 MustHaveRegister 484 MustHaveRegister 492 MustHaveRegister 496 ShouldHaveRegister 706 MustHaveRegister 724 MustHaveRegister 732 MustHaveRegister 736 ShouldHaveRegister  "NoSpillStore"
  v22|d DWORD "[v22|d]" v22|d v3|q [58, 96[[186, 250[[278, 318[[322, 336[[412, 424[[436, 512[[572, 592[[626, 668[[678, 692[[826, 886[[900, 932[58 MustHaveRegister 96 MustHaveRegister 692 MustHaveRegister  "NoSpillStore"
  v23|q QWORD "[v23|q]" v23|q -1 [68, 90[68 MustHaveRegister 70 MustHaveRegister 78 MustHaveRegister 80 MustHaveRegister 82 MustHaveRegister 84 MustHaveRegister 86 MustHaveRegister 88 MustHaveRegister 90 ShouldHaveRegister  "NoSpillStore"
  v24|q QWORD "[v24|q]" v24|q -1 [70, 76[70 MustHaveRegister 72 MustHaveRegister 76 MustHaveRegister  "NoSpillStore"
  v25|q QWORD "[v25|q]" v25|q -1 [324, 326[324 MustHaveRegister 326 ShouldHaveRegister  "NoSpillStore"
  v26|q QWORD "[v26|q]" v26|q rax|q [330, 335[330 MustHaveRegister 332 MustHaveRegister 334 ShouldHaveRegister  "NoSpillStore"
  v28|q QWORD "[v28|q]" v28|q v23|q [90, 93[90 MustHaveRegister 92 ShouldHaveRegister  "NoSpillStore"
  v29|q QWORD "[v29|q]" v29|q v28|q [94, 105[96 MustHaveRegister 100 MustHaveRegister 102 MustHaveRegister 104 ShouldHaveRegister  "NoSpillStore"
  v30|d DWORD "[v30|d]" v30|d v2|q [98, 100[98 MustHaveRegister 100 MustHaveRegister  "NoSpillStore"
  v31|q QWORD "[v31|q]" v31|q -1 [522, 546[522 MustHaveRegister 524 MustHaveRegister 532 MustHaveRegister 534 MustHaveRegister 536 MustHaveRegister 538 MustHaveRegister 540 MustHaveRegister 542 MustHaveRegister 544 MustHaveRegister 546 ShouldHaveRegister  "NoSpillStore"
  v32|q QWORD "[v32|q]" v32|q -1 [524, 530[524 MustHaveRegister 526 MustHaveRegister 530 MustHaveRegister  "NoSpillStore"
  v33|q QWORD "[v33|q]" v33|q -1 [888, 890[888 MustHaveRegister 890 ShouldHaveRegister  "NoSpillStore"
  v34|q QWORD "[v34|q]" v34|q rax|q [894, 899[894 MustHaveRegister 896 MustHaveRegister 898 ShouldHaveRegister  "NoSpillStore"
  v36|q QWORD "[v36|q]" v36|q v31|q [546, 549[546 MustHaveRegister 548 ShouldHaveRegister  "NoSpillStore"
  v37|q QWORD "[v37|q]" v37|q v36|q [550, 571[552 ShouldHaveRegister 566 ShouldHaveRegister 570 ShouldHaveRegister  "NoSpillStore"
  v38|q QWORD "[v38|q]" v38|q v29|q [106, 186[[250, 278[[318, 322[[336, 358[[962, 966[[974, 985[116 MustHaveRegister 346 MustHaveRegister 352 ShouldHaveRegister 358 MustHaveRegister  "NoSpillStore"
  v39|q QWORD "[v39|q]" v39|q v14|d [110, 112[110 MustHaveRegister 112 MustHaveRegister  "NoSpillStore"
  v40|q QWORD "[v40|q]" v40|q -1 [108, 111[108 MustHaveRegister 110 MustHaveRegister  "NoSpillStore"
  v41|q QWORD "[v41|q]" v41|q -1 [112, 164[[168, 170[112 MustHaveRegister 114 MustHaveRegister 124 MustHaveRegister 132 MustHaveRegister 156 MustHaveRegister 163 LiveAtLoopEnd 170 MustHaveRegister  "NoSpillStore"
  v42|d DWORD "[v42|d]" v42|d -1 [114, 128[114 MustHaveRegister 122 ShouldHaveRegister 128 ShouldHaveRegister  "NoSpillStore"
  v43|d DWORD "[v43|d]" v43|d -1 [116, 120[116 MustHaveRegister 120 MustHaveRegister  "NoSpillStore"
  v44|q QWORD "[v44|q]" v44|q v43|d [120, 164[[168, 170[120 MustHaveRegister 124 MustHaveRegister 132 ShouldHaveRegister 136 MustHaveRegister 170 MustHaveRegister  "NoSpillStore"
  v45|q QWORD "[v45|q]" v45|q -1 [118, 121[118 MustHaveRegister 120 MustHaveRegister  "NoSpillStore"
  v46|q QWORD "[v46|q]" v46|q -1 [122, 124[122 MustHaveRegister 124 MustHaveRegister  "NoSpillStore"
  v47|q QWORD "[v47|q]" v47|q -1 [136, 164[136 MustHaveRegister 138 MustHaveRegister 154 MustHaveRegister 163 LiveAtLoopEnd  "NoSpillStore"
  v48|d DWORD "[v48|d]" v48|d -1 [138, 164[138 MustHaveRegister 144 MustHaveRegister 163 LiveAtLoopEnd  "NoSpillStore"
  v49|d DWORD "[v49|d]" v49|d v54|d [142, 160[144 ShouldHaveRegister 148 MustHaveRegister 160 ShouldHaveRegister  "NoSpillStore"
  v50|d DWORD "[v50|d]" v50|d v49|d [148, 150[148 MustHaveRegister 150 MustHaveRegister  "NoSpillStore"
  v51|d DWORD "[v51|d]" v51|d -1 [150, 152[150 MustHaveRegister 152 ShouldHaveRegister  "NoSpillStore"
  v52|q QWORD "[v52|q]" v52|q -1 [152, 154[152 MustHaveRegister 154 MustHaveRegister  "NoSpillStore"
  v53|q QWORD "[v53|q]" v53|q -1 [154, 156[154 MustHaveRegister 156 ShouldHaveRegister  "NoSpillStore"
  v54|d DWORD "[v54|d]" v54|d v49|d [160, 163[160 MustHaveRegister 162 ShouldHaveRegister  "NoSpillStore"
  v55|q QWORD "[v55|q]" v55|q -1 [252, 254[252 MustHaveRegister 254 MustHaveRegister  "NoSpillStore"
  v56|d DWORD "[v56|d]" v56|d -1 [254, 262[254 MustHaveRegister 256 MustHaveRegister 262 MustHaveRegister  "NoSpillStore"
  v57|q QWORD "[v57|q]" v57|q -1 [260, 272[260 MustHaveRegister 264 MustHaveRegister 270 MustHaveRegister 272 MustHaveRegister  "NoSpillStore"
  v58|q QWORD "[v58|q]" v58|q v56|d [262, 270[[336, 338[262 MustHaveRegister 270 MustHaveRegister 338 ShouldHaveRegister  "NoSpillStore"
  v59|q QWORD "[v59|q]" v59|q -1 [268, 270[268 MustHaveRegister 270 MustHaveRegister  "NoSpillStore"
  v60|q QWORD "[v60|q]" v60|q -1 [272, 274[272 MustHaveRegister 274 MustHaveRegister  "NoSpillStore"
  v61|d DWORD "[v61|d]" v61|d v38|q [346, 348[346 MustHaveRegister 348 MustHaveRegister  "NoSpillStore"
  v62|q QWORD "[v62|q]" v62|q -1 [350, 352[350 MustHaveRegister 352 ShouldHaveRegister  "NoSpillStore"
  v63|q QWORD "[v63|q]" v63|q v62|q [352, 354[352 MustHaveRegister 354 ShouldHaveRegister  "NoSpillStore"
  v64|q QWORD "[v64|q]" v64|q v65|q [364, 368[[380, 386[[390, 396[364 MustHaveRegister 366 MustHaveRegister 384 MustHaveRegister 392 MustHaveRegister 396 ShouldHaveRegister  "NoSpillStore"
  v65|q QWORD "[v65|q]" v65|q -1 [362, 364[362 MustHaveRegister 364 MustHaveRegister  "NoSpillStore"
  v66|q QWORD "[v66|q]" v66|q -1 [394, 406[394 MustHaveRegister 398 MustHaveRegister 404 MustHaveRegister 406 MustHaveRegister  "NoSpillStore"
  v67|q QWORD "[v67|q]" v67|q v64|q [396, 404[[512, 514[396 MustHaveRegister 404 MustHaveRegister 514 ShouldHaveRegister  "NoSpillStore"
  v68|q QWORD "[v68|q]" v68|q -1 [402, 404[402 MustHaveRegister 404 MustHaveRegister  "NoSpillStore"
  v69|q QWORD "[v69|q]" v69|q -1 [406, 408[406 MustHaveRegister 408 MustHaveRegister  "NoSpillStore"
  v70|q QWORD "[v70|q]" v70|q v17|d [188, 199[[412, 423[[826, 855[[912, 914[[986, 993[188 MustHaveRegister 198 ShouldHaveRegister 422 ShouldHaveRegister 854 ShouldHaveRegister 914 ShouldHaveRegister  "NoSpillStore"
  v71|d DWORD "[v71|d]" v71|d -1 [414, 416[414 MustHaveRegister 416 MustHaveRegister  "NoSpillStore"
  v72|q QWORD "[v72|q]" v72|q v71|d [416, 420[[826, 840[416 MustHaveRegister 418 MustHaveRegister 840 ShouldHaveRegister  "NoSpillStore"
  v73|d DWORD "[v73|d]" v73|d -1 [828, 832[828 MustHaveRegister 832 MustHaveRegister  "NoSpillStore"
  v74|q QWORD "[v74|q]" v74|q v73|d [832, 834[832 MustHaveRegister 834 MustHaveRegister  "NoSpillStore"
  v75|q QWORD "[v75|q]" v75|q -1 [830, 833[830 MustHaveRegister 832 MustHaveRegister  "NoSpillStore"
  v76|q QWORD "[v76|q]" v76|q -1 [834, 842[834 MustHaveRegister 836 MustHaveRegister 842 ShouldHaveRegister  "NoSpillStore"
  v77|q QWORD "[v77|q]" v77|q -1 [836, 844[836 MustHaveRegister 844 ShouldHaveRegister  "NoSpillStore"
  v78|d DWORD "[v78|d]" v78|d rax|q [848, 850[848 MustHaveRegister 850 MustHaveRegister  "NoSpillStore"
  v79|q QWORD "[v79|q]" v79|q rax|q [928, 931[928 MustHaveRegister 930 ShouldHaveRegister  "NoSpillStore"
  v80|q QWORD "[v80|q]" v80|q v70|q [200, 215[[220, 250[[278, 286[[290, 318[[436, 464[[856, 859[202 MustHaveRegister 292 MustHaveRegister 452 MustHaveRegister 454 ShouldHaveRegister 464 MustHaveRegister  "NoSpillStore"
  v81|d DWORD "[v81|d]" v81|d v93|d [200, 216[[220, 250[[278, 286[[290, 318[[436, 512[[572, 582[[856, 882[[942, 949[216 ShouldHaveRegister 582 ShouldHaveRegister  "NoSpillStore"
  v82|d DWORD "[v82|d]" v82|d -1 [202, 212[[278, 280[202 MustHaveRegister 204 MustHaveRegister 206 MustHaveRegister 210 MustHaveRegister 280 MustHaveRegister  "NoSpillStore"
  v83|q QWORD "[v83|q]" v83|q v82|d [204, 219[[220, 250[[278, 289[[290, 318[[436, 512[[572, 587[[856, 885[[900, 911[[942, 949[204 MustHaveRegister 218 ShouldHaveRegister 288 ShouldHaveRegister 586 ShouldHaveRegister 884 ShouldHaveRegister 910 ShouldHaveRegister  "NoSpillStore"
  v84|d DWORD "[v84|d]" v84|d -1 [280, 282[280 MustHaveRegister 282 MustHaveRegister  "NoSpillStore"
  v85|q QWORD "[v85|q]" v85|q v84|d [282, 286[[856, 870[282 MustHaveRegister 284 MustHaveRegister 870 ShouldHaveRegister  "NoSpillStore"
  v86|d DWORD "[v86|d]" v86|d -1 [858, 862[858 MustHaveRegister 862 MustHaveRegister  "NoSpillStore"
  v87|q QWORD "[v87|q]" v87|q v86|d [862, 864[862 MustHaveRegister 864 MustHaveRegister  "NoSpillStore"
  v88|q QWORD "[v88|q]" v88|q -1 [860, 863[860 MustHaveRegister 862 MustHaveRegister  "NoSpillStore"
  v89|q QWORD "[v89|q]" v89|q -1 [864, 872[864 MustHaveRegister 866 MustHaveRegister 872 ShouldHaveRegister  "NoSpillStore"
  v90|q QWORD "[v90|q]" v90|q -1 [866, 874[866 MustHaveRegister 874 ShouldHaveRegister  "NoSpillStore"
  v91|d DWORD "[v91|d]" v91|d rax|q [878, 880[878 MustHaveRegister 880 MustHaveRegister  "NoSpillStore"
  v92|q QWORD "[v92|q]" v92|q -1 [214, 215[214 MustHaveRegister  "NoDefinitionFound"
  v93|d DWORD "[v93|d]" v93|d v81|d [216, 219[216 MustHaveRegister 218 ShouldHaveRegister  "NoSpillStore"
  v94|q QWORD "[v94|q]" v94|q -1 [222, 236[222 MustHaveRegister 224 MustHaveRegister 236 ShouldHaveRegister  "NoSpillStore"
  v95|q QWORD "[v95|q]" v95|q -1 [224, 238[224 MustHaveRegister 238 ShouldHaveRegister  "NoSpillStore"
  v96|q QWORD "[v96|q]" v96|q rax|q [242, 250[[290, 318[[436, 460[242 MustHaveRegister 450 MustHaveRegister 454 ShouldHaveRegister 460 MustHaveRegister  "NoSpillStore"
  v97|q QWORD "[v97|q]" v97|q -1 [292, 294[292 MustHaveRegister 294 MustHaveRegister  "NoSpillStore"
  v98|d DWORD "[v98|d]" v98|d -1 [294, 302[294 MustHaveRegister 296 MustHaveRegister 302 MustHaveRegister  "NoSpillStore"
  v99|q QWORD "[v99|q]" v99|q -1 [300, 312[300 MustHaveRegister 304 MustHaveRegister 310 MustHaveRegister 312 MustHaveRegister  "NoSpillStore"
  v100|q QWORD "[v100|q]" v100|q v98|d [302, 310[[440, 442[302 MustHaveRegister 310 MustHaveRegister 442 ShouldHaveRegister  "NoSpillStore"
  v101|q QWORD "[v101|q]" v101|q -1 [308, 310[308 MustHaveRegister 310 MustHaveRegister  "NoSpillStore"
  v102|q QWORD "[v102|q]" v102|q -1 [312, 314[312 MustHaveRegister 314 MustHaveRegister  "NoSpillStore"
  v103|d DWORD "[v103|d]" v103|d v96|q [450, 452[450 MustHaveRegister 452 MustHaveRegister  "NoSpillStore"
  v104|q QWORD "[v104|q]" v104|q v80|q [454, 456[454 MustHaveRegister 456 ShouldHaveRegister  "NoSpillStore"
  v105|q QWORD "[v105|q]" v105|q v80|q [464, 468[[480, 486[[490, 496[464 MustHaveRegister 466 MustHaveRegister 484 MustHaveRegister 492 MustHaveRegister 496 ShouldHaveRegister  "NoSpillStore"
  v106|q QWORD "[v106|q]" v106|q -1 [494, 506[494 MustHaveRegister 498 MustHaveRegister 504 MustHaveRegister 506 MustHaveRegister  "NoSpillStore"
  v107|q QWORD "[v107|q]" v107|q v105|q [496, 504[[572, 574[496 MustHaveRegister 504 MustHaveRegister 574 ShouldHaveRegister  "NoSpillStore"
  v108|q QWORD "[v108|q]" v108|q -1 [502, 504[502 MustHaveRegister 504 MustHaveRegister  "NoSpillStore"
  v109|q QWORD "[v109|q]" v109|q -1 [506, 508[506 MustHaveRegister 508 MustHaveRegister  "NoSpillStore"
  v110|q QWORD "[v110|q]" v110|q v83|q [588, 592[[626, 668[[678, 752[[796, 814[[932, 938[590 MustHaveRegister 628 MustHaveRegister 642 MustHaveRegister 692 MustHaveRegister 694 ShouldHaveRegister 704 MustHaveRegister 814 ShouldHaveRegister  "NoSpillStore"
  v111|d DWORD "[v111|d]" v111|d -1 [600, 602[600 MustHaveRegister 602 MustHaveRegister  "NoSpillStore"
  v112|d DWORD "[v112|d]" v112|d v111|d [602, 606[602 MustHaveRegister 604 MustHaveRegister 606 MustHaveRegister  "NoSpillStore"
  v113|q QWORD "[v113|q]" v113|q rax|q [674, 675[674 MustHaveRegister  "NoSpillStore"
  v114|d DWORD "[v114|d]" v114|d -1 [758, 772[758 MustHaveRegister 760 MustHaveRegister 772 MustHaveRegister  "NoSpillStore"
  v115|d DWORD "[v115|d]" v115|d -1 [762, 766[762 MustHaveRegister 766 MustHaveRegister  "NoSpillStore"
  v116|q QWORD "[v116|q]" v116|q v115|d [766, 768[766 MustHaveRegister 768 MustHaveRegister  "NoSpillStore"
  v117|q QWORD "[v117|q]" v117|q -1 [764, 767[764 MustHaveRegister 766 MustHaveRegister  "NoSpillStore"
  v118|q QWORD "[v118|q]" v118|q -1 [768, 778[768 MustHaveRegister 770 MustHaveRegister 778 ShouldHaveRegister  "NoSpillStore"
  v119|q QWORD "[v119|q]" v119|q -1 [770, 780[770 MustHaveRegister 780 ShouldHaveRegister  "NoSpillStore"
  v120|q QWORD "[v120|q]" v120|q v114|d [772, 788[[994, 1001[772 MustHaveRegister 776 ShouldHaveRegister  "NoSpillStore"
  v121|d DWORD "[v121|d]" v121|d rax|q [784, 788[[994, 1001[784 MustHaveRegister 786 MustHaveRegister  "NoSpillStore"
  v122|d DWORD "[v122|d]" v122|d -1 [628, 668[[678, 752[[796, 810[[932, 938[628 MustHaveRegister 810 MustHaveRegister 934 MustHaveRegister  "NoSpillStore"
  v123|q QWORD "[v123|q]" v123|q -1 [642, 644[642 MustHaveRegister 644 MustHaveRegister  "NoSpillStore"
  v124|d DWORD "[v124|d]" v124|d -1 [644, 652[644 MustHaveRegister 646 MustHaveRegister 652 MustHaveRegister  "NoSpillStore"
  v125|q QWORD "[v125|q]" v125|q -1 [650, 662[650 MustHaveRegister 654 MustHaveRegister 660 MustHaveRegister 662 MustHaveRegister  "NoSpillStore"
  v126|q QWORD "[v126|q]" v126|q v124|d [652, 660[[682, 684[652 MustHaveRegister 660 MustHaveRegister 684 ShouldHaveRegister  "NoSpillStore"
  v127|q QWORD "[v127|q]" v127|q -1 [658, 660[658 MustHaveRegister 660 MustHaveRegister  "NoSpillStore"
  v128|q QWORD "[v128|q]" v128|q -1 [662, 664[662 MustHaveRegister 664 MustHaveRegister  "NoSpillStore"
  v129|q QWORD "[v129|q]" v129|q v110|q [694, 696[694 MustHaveRegister 696 ShouldHaveRegister  "NoSpillStore"
  v130|q QWORD "[v130|q]" v130|q v110|q [704, 708[[720, 726[[730, 736[704 MustHaveRegister 706 MustHaveRegister 724 MustHaveRegister 732 MustHaveRegister 736 ShouldHaveRegister  "NoSpillStore"
  v131|q QWORD "[v131|q]" v131|q -1 [734, 746[734 MustHaveRegister 738 MustHaveRegister 744 MustHaveRegister 746 MustHaveRegister  "NoSpillStore"
  v132|q QWORD "[v132|q]" v132|q v130|q [736, 744[[796, 798[736 MustHaveRegister 744 MustHaveRegister 798 ShouldHaveRegister  "NoSpillStore"
  v133|q QWORD "[v133|q]" v133|q -1 [742, 744[742 MustHaveRegister 744 MustHaveRegister  "NoSpillStore"
  v134|q QWORD "[v134|q]" v134|q -1 [746, 748[746 MustHaveRegister 748 MustHaveRegister  "NoSpillStore"
  v135|q QWORD "[v135|q]" v135|q -1 [806, 816[806 MustHaveRegister 808 MustHaveRegister 816 ShouldHaveRegister  "NoSpillStore"
  v136|q QWORD "[v136|q]" v136|q -1 [808, 818[808 MustHaveRegister 818 ShouldHaveRegister  "NoSpillStore"
  v137|q QWORD "[v137|q]" v137|q v122|d [810, 822[810 MustHaveRegister 822 ShouldHaveRegister  "NoSpillStore"
  v138|d DWORD "[v138|d]" v138|d -1 [954, 956[956 MustHaveRegister  "NoSpillStore"
  v139|q QWORD "[v139|q]" v139|q -1 [954, 958[958 MustHaveRegister  "NoSpillStore"
end_intervals
begin_intervals
  name "After register allocation"
  rax|q fixed "[rax|q]" rax|q v95|q [0, 1[[238, 242[[328, 330[[428, 430[[562, 563[[568, 569[[622, 624[[672, 674[[780, 784[[818, 821[[822, 824[[844, 848[[874, 878[[892, 894[[908, 909[[926, 928[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v2|q [0, 10[[230, 241[[428, 429[[556, 563[[568, 569[[672, 673[[782, 783[[820, 821[[846, 847[[876, 877[[906, 909[[918, 927[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- v1|d [0, 8[[228, 241[[428, 429[[554, 563[[566, 569[[672, 673[[776, 783[[814, 821[[840, 847[[870, 877[[904, 909[[916, 927[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- v94|q [0, 1[[236, 241[[428, 429[[562, 563[[568, 569[[672, 673[[778, 783[[816, 821[[842, 847[[872, 877[[908, 909[[926, 927[ "NoOptimization"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 2[[240, 241[[428, 429[[562, 563[[568, 569[[672, 673[[782, 783[[820, 821[[846, 847[[876, 877[[908, 909[[926, 927[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v0|q [0, 6[[226, 241[[326, 328[[338, 340[[426, 429[[442, 444[[514, 516[[552, 563[[564, 569[[574, 576[[670, 673[[684, 686[[774, 783[[798, 800[[812, 821[[838, 847[[868, 877[[890, 892[[902, 909[[914, 927[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- v3|q [0, 16[[240, 241[[428, 429[[562, 563[[568, 569[[672, 673[[782, 783[[820, 821[[846, 847[[876, 877[[908, 909[[924, 927[ "NoOptimization"
  r8|- fixed "[r8|-]" r8|- v3|q [0, 12[[232, 241[[428, 429[[558, 563[[568, 569[[672, 673[[782, 783[[820, 821[[846, 847[[876, 877[[908, 909[[920, 927[ "NoOptimization"
  r9|- fixed "[r9|-]" r9|- v2|q [0, 14[[234, 241[[428, 429[[560, 563[[568, 569[[672, 673[[782, 783[[820, 821[[846, 847[[876, 877[[908, 909[[922, 927[ "NoOptimization"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[240, 241[[428, 429[[562, 563[[568, 569[[672, 673[[782, 783[[820, 821[[846, 847[[876, 877[[908, 909[[926, 927[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[240, 241[[428, 429[[562, 563[[568, 569[[672, 673[[782, 783[[820, 821[[846, 847[[876, 877[[908, 909[[926, 927[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[240, 241[[428, 429[[562, 563[[568, 569[[672, 673[[782, 783[[820, 821[[846, 847[[876, 877[[908, 909[[926, 927[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[240, 241[[428, 429[[562, 563[[568, 569[[672, 673[[782, 783[[820, 821[[846, 847[[876, 877[[908, 909[[926, 927[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[240, 241[[428, 429[[562, 563[[568, 569[[672, 673[[782, 783[[820, 821[[846, 847[[876, 877[[908, 909[[926, 927[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[240, 241[[428, 429[[562, 563[[568, 569[[672, 673[[782, 783[[820, 821[[846, 847[[876, 877[[908, 909[[926, 927[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[240, 241[[428, 429[[562, 563[[568, 569[[672, 673[[782, 783[[820, 821[[846, 847[[876, 877[[908, 909[[926, 927[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[240, 241[[428, 429[[562, 563[[568, 569[[672, 673[[782, 783[[820, 821[[846, 847[[876, 877[[908, 909[[926, 927[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[240, 241[[428, 429[[562, 563[[568, 569[[672, 673[[782, 783[[820, 821[[846, 847[[876, 877[[908, 909[[926, 927[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[240, 241[[428, 429[[562, 563[[568, 569[[672, 673[[782, 783[[820, 821[[846, 847[[876, 877[[908, 909[[926, 927[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[240, 241[[428, 429[[562, 563[[568, 569[[672, 673[[782, 783[[820, 821[[846, 847[[876, 877[[908, 909[[926, 927[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[240, 241[[428, 429[[562, 563[[568, 569[[672, 673[[782, 783[[820, 821[[846, 847[[876, 877[[908, 909[[926, 927[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[240, 241[[428, 429[[562, 563[[568, 569[[672, 673[[782, 783[[820, 821[[846, 847[[876, 877[[908, 909[[926, 927[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[240, 241[[428, 429[[562, 563[[568, 569[[672, 673[[782, 783[[820, 821[[846, 847[[876, 877[[908, 909[[926, 927[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[240, 241[[428, 429[[562, 563[[568, 569[[672, 673[[782, 783[[820, 821[[846, 847[[876, 877[[908, 909[[926, 927[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[240, 241[[428, 429[[562, 563[[568, 569[[672, 673[[782, 783[[820, 821[[846, 847[[876, 877[[908, 909[[926, 927[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[240, 241[[428, 429[[562, 563[[568, 569[[672, 673[[782, 783[[820, 821[[846, 847[[876, 877[[908, 909[[926, 927[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[240, 241[[428, 429[[562, 563[[568, 569[[672, 673[[782, 783[[820, 821[[846, 847[[876, 877[[908, 909[[926, 927[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[240, 241[[428, 429[[562, 563[[568, 569[[672, 673[[782, 783[[820, 821[[846, 847[[876, 877[[908, 909[[926, 927[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[240, 241[[428, 429[[562, 563[[568, 569[[672, 673[[782, 783[[820, 821[[846, 847[[876, 877[[908, 909[[926, 927[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|- [6, 225[6 MustHaveRegister 18 MustHaveRegister 50 MustHaveRegister  "SpillInDominator"
  v1|d DWORD "[rdx|d]" v1|d rdx|- [8, 102[[186, 227[8 MustHaveRegister 42 ShouldHaveRegister 102 MustHaveRegister 190 MustHaveRegister 210 MustHaveRegister 219 LiveAtLoopEnd  "OneSpillStore"
  v2|q QWORD "[rcx|q]" v2|q rcx|- [10, 98[[186, 230[[278, 286[[322, 336[[412, 420[10 MustHaveRegister 98 MustHaveRegister 230 ShouldHaveRegister 284 ShouldHaveRegister 418 ShouldHaveRegister  "SpillInDominator"
  v3|q QWORD "[r8|q]" v3|q r8|- [12, 74[[186, 200[12 MustHaveRegister 58 MustHaveRegister  "SpillInDominator"
  v4|d DWORD "[r9|d]" v4|d r9|- [14, 74[[186, 220[14 MustHaveRegister  "SpillInDominator"
  v5|d DWORD "[rdi|d]" v5|d rdi|- [16, 220[16 MustHaveRegister  "SpillInDominator"
  v6|d DWORD "[rbx|d]" v6|d -1 [18, 30[18 MustHaveRegister 20 MustHaveRegister 24 MustHaveRegister 30 MustHaveRegister  "NoSpillStore"
  v7|q QWORD "[rax|q]" v7|q rax|q [430, 435[430 MustHaveRegister 432 MustHaveRegister 434 ShouldHaveRegister  "NoSpillStore"
  v8|d DWORD "[rsi|d]" v8|d -1 [432, 435[432 MustHaveRegister 434 ShouldHaveRegister  "NoSpillStore"
  v9|d DWORD "[rax|d]" v9|d v12|d [24, 33[24 MustHaveRegister 26 MustHaveRegister 32 ShouldHaveRegister  "NoSpillStore"
  v10|q QWORD "[rbx|q]" v10|q v6|d [30, 33[30 MustHaveRegister 32 ShouldHaveRegister  "NoSpillStore"
  v11|q QWORD "[rbx|q]" v11|q v10|q [34, 220[36 MustHaveRegister 38 MustHaveRegister 48 MustHaveRegister  "SpillInDominator"
  v12|d DWORD "[r10|d]" v12|d v9|d [34, 46[40 ShouldHaveRegister  "OneSpillStore"
  v13|d DWORD "[rax|d]" v13|d -1 [36, 44[36 MustHaveRegister 44 MustHaveRegister  "NoSpillStore"
  v14|d DWORD "[r11|d]" v14|d -1 [38, 110[[322, 336[[520, 550[38 MustHaveRegister 110 MustHaveRegister  "OneSpillStore"
  v15|d DWORD "[rbp|d]" v15|d v12|d [40, 42[40 MustHaveRegister 42 ShouldHaveRegister  "NoSpillStore"
  v16|d DWORD "[rbp|d]" v16|d v1|d [42, 66[42 MustHaveRegister 44 ShouldHaveRegister 48 MustHaveRegister  "SpillInDominator"
  v17|d DWORD "[rax|d]" v17|d -1 [48, 62[[186, 194[[412, 414[48 MustHaveRegister 60 MustHaveRegister 188 MustHaveRegister 190 MustHaveRegister 194 MustHaveRegister 414 MustHaveRegister  "NoSpillStore"
  v18|d DWORD "[r13|d]" v18|d -1 [50, 54[50 MustHaveRegister 54 MustHaveRegister  "NoSpillStore"
  v19|q QWORD "[r13|q]" v19|q v18|d [54, 239[54 MustHaveRegister 64 MustHaveRegister 222 MustHaveRegister  "SpillInDominator"
  v20|q QWORD "[r14|q]" v20|q -1 [52, 55[52 MustHaveRegister 54 MustHaveRegister  "NoSpillStore"
  v21|q QWORD "[r14|q]" v21|q -1 [56, 220[56 MustHaveRegister  "SpillInDominator"
  v22|d DWORD "[r10|d]" v22|d v3|q [58, 96[[186, 220[58 MustHaveRegister 96 MustHaveRegister  "SpillInDominator"
  v23|q QWORD "[rax|q]" v23|q -1 [68, 90[68 MustHaveRegister 70 MustHaveRegister 78 MustHaveRegister 80 MustHaveRegister 82 MustHaveRegister 84 MustHaveRegister 86 MustHaveRegister 88 MustHaveRegister 90 ShouldHaveRegister  "NoSpillStore"
  v24|q QWORD "[rbp|q]" v24|q -1 [70, 76[70 MustHaveRegister 72 MustHaveRegister 76 MustHaveRegister  "NoSpillStore"
  v25|q QWORD "[rsi|q]" v25|q -1 [324, 326[324 MustHaveRegister 326 ShouldHaveRegister  "NoSpillStore"
  v26|q QWORD "[rax|q]" v26|q rax|q [330, 335[330 MustHaveRegister 332 MustHaveRegister 334 ShouldHaveRegister  "NoSpillStore"
  v28|q QWORD "[rax|q]" v28|q v23|q [90, 93[90 MustHaveRegister 92 ShouldHaveRegister  "NoSpillStore"
  v29|q QWORD "[rax|q]" v29|q v28|q [94, 105[96 MustHaveRegister 100 MustHaveRegister 102 MustHaveRegister 104 ShouldHaveRegister  "NoSpillStore"
  v30|d DWORD "[rcx|d]" v30|d v2|q [98, 100[98 MustHaveRegister 100 MustHaveRegister  "NoSpillStore"
  v31|q QWORD "[rsi|q]" v31|q -1 [522, 546[522 MustHaveRegister 524 MustHaveRegister 532 MustHaveRegister 534 MustHaveRegister 536 MustHaveRegister 538 MustHaveRegister 540 MustHaveRegister 542 MustHaveRegister 544 MustHaveRegister 546 ShouldHaveRegister  "NoSpillStore"
  v32|q QWORD "[rdx|q]" v32|q -1 [524, 530[524 MustHaveRegister 526 MustHaveRegister 530 MustHaveRegister  "NoSpillStore"
  v33|q QWORD "[rsi|q]" v33|q -1 [888, 890[888 MustHaveRegister 890 ShouldHaveRegister  "NoSpillStore"
  v34|q QWORD "[rax|q]" v34|q rax|q [894, 899[894 MustHaveRegister 896 MustHaveRegister 898 ShouldHaveRegister  "NoSpillStore"
  v36|q QWORD "[rsi|q]" v36|q v31|q [546, 549[546 MustHaveRegister 548 ShouldHaveRegister  "NoSpillStore"
  v37|q QWORD "[rsi|q]" v37|q v36|q [550, 551[ "OneSpillStore"
  v38|q QWORD "[rax|q]" v38|q v29|q [106, 186[[250, 278[[318, 322[[336, 358[[962, 966[[974, 985[116 MustHaveRegister 346 MustHaveRegister 352 ShouldHaveRegister 358 MustHaveRegister  "NoSpillStore"
  v39|q QWORD "[r11|q]" v39|q v14|d [110, 112[110 MustHaveRegister 112 MustHaveRegister  "NoSpillStore"
  v40|q QWORD "[rdx|q]" v40|q -1 [108, 111[108 MustHaveRegister 110 MustHaveRegister  "NoSpillStore"
  v41|q QWORD "[rdx|q]" v41|q -1 [112, 164[[168, 170[112 MustHaveRegister 114 MustHaveRegister 124 MustHaveRegister 132 MustHaveRegister 156 MustHaveRegister 163 LiveAtLoopEnd 170 MustHaveRegister  "NoSpillStore"
  v42|d DWORD "[rcx|d]" v42|d -1 [114, 128[114 MustHaveRegister 122 ShouldHaveRegister 128 ShouldHaveRegister  "NoSpillStore"
  v43|d DWORD "[r8|d]" v43|d -1 [116, 120[116 MustHaveRegister 120 MustHaveRegister  "NoSpillStore"
  v44|q QWORD "[r8|q]" v44|q v43|d [120, 164[[168, 170[120 MustHaveRegister 124 MustHaveRegister 132 ShouldHaveRegister 136 MustHaveRegister 170 MustHaveRegister  "NoSpillStore"
  v45|q QWORD "[r9|q]" v45|q -1 [118, 121[118 MustHaveRegister 120 MustHaveRegister  "NoSpillStore"
  v46|q QWORD "[r9|q]" v46|q -1 [122, 124[122 MustHaveRegister 124 MustHaveRegister  "NoSpillStore"
  v47|q QWORD "[rcx|q]" v47|q -1 [136, 164[136 MustHaveRegister 138 MustHaveRegister 154 MustHaveRegister 163 LiveAtLoopEnd  "NoSpillStore"
  v48|d DWORD "[r9|d]" v48|d -1 [138, 164[138 MustHaveRegister 144 MustHaveRegister 163 LiveAtLoopEnd  "NoSpillStore"
  v49|d DWORD "[r10|d]" v49|d v54|d [142, 160[144 ShouldHaveRegister 148 MustHaveRegister 160 ShouldHaveRegister  "NoSpillStore"
  v50|d DWORD "[r11|d]" v50|d v49|d [148, 150[148 MustHaveRegister 150 MustHaveRegister  "NoSpillStore"
  v51|d DWORD "[r11|d]" v51|d -1 [150, 152[150 MustHaveRegister 152 ShouldHaveRegister  "NoSpillStore"
  v52|q QWORD "[r11|q]" v52|q -1 [152, 154[152 MustHaveRegister 154 MustHaveRegister  "NoSpillStore"
  v53|q QWORD "[r11|q]" v53|q -1 [154, 156[154 MustHaveRegister 156 ShouldHaveRegister  "NoSpillStore"
  v54|d DWORD "[r10|d]" v54|d v49|d [160, 163[160 MustHaveRegister 162 ShouldHaveRegister  "NoSpillStore"
  v55|q QWORD "[rsi|q]" v55|q -1 [252, 254[252 MustHaveRegister 254 MustHaveRegister  "NoSpillStore"
  v56|d DWORD "[rsi|d]" v56|d -1 [254, 262[254 MustHaveRegister 256 MustHaveRegister 262 MustHaveRegister  "NoSpillStore"
  v57|q QWORD "[r10|q]" v57|q -1 [260, 272[260 MustHaveRegister 264 MustHaveRegister 270 MustHaveRegister 272 MustHaveRegister  "NoSpillStore"
  v58|q QWORD "[rsi|q]" v58|q v56|d [262, 270[[336, 338[262 MustHaveRegister 270 MustHaveRegister 338 ShouldHaveRegister  "NoSpillStore"
  v59|q QWORD "[r11|q]" v59|q -1 [268, 270[268 MustHaveRegister 270 MustHaveRegister  "NoSpillStore"
  v60|q QWORD "[rsi|q]" v60|q -1 [272, 274[272 MustHaveRegister 274 MustHaveRegister  "NoSpillStore"
  v61|d DWORD "[rsi|d]" v61|d v38|q [346, 348[346 MustHaveRegister 348 MustHaveRegister  "NoSpillStore"
  v62|q QWORD "[rsi|q]" v62|q -1 [350, 352[350 MustHaveRegister 352 ShouldHaveRegister  "NoSpillStore"
  v63|q QWORD "[rsi|q]" v63|q v62|q [352, 354[352 MustHaveRegister 354 ShouldHaveRegister  "NoSpillStore"
  v64|q QWORD "[rsi|q]" v64|q v65|q [364, 368[[380, 386[[390, 396[364 MustHaveRegister 366 MustHaveRegister 384 MustHaveRegister 392 MustHaveRegister 396 ShouldHaveRegister  "NoSpillStore"
  v65|q QWORD "[rsi|q]" v65|q -1 [362, 364[362 MustHaveRegister 364 MustHaveRegister  "NoSpillStore"
  v66|q QWORD "[r10|q]" v66|q -1 [394, 406[394 MustHaveRegister 398 MustHaveRegister 404 MustHaveRegister 406 MustHaveRegister  "NoSpillStore"
  v67|q QWORD "[rsi|q]" v67|q v64|q [396, 404[[512, 514[396 MustHaveRegister 404 MustHaveRegister 514 ShouldHaveRegister  "NoSpillStore"
  v68|q QWORD "[r11|q]" v68|q -1 [402, 404[402 MustHaveRegister 404 MustHaveRegister  "NoSpillStore"
  v69|q QWORD "[rsi|q]" v69|q -1 [406, 408[406 MustHaveRegister 408 MustHaveRegister  "NoSpillStore"
  v70|q QWORD "[r11|q]" v70|q v17|d [188, 199[[412, 423[188 MustHaveRegister 198 ShouldHaveRegister 422 ShouldHaveRegister  "OneSpillStore"
  v71|d DWORD "[rsi|d]" v71|d -1 [414, 416[414 MustHaveRegister 416 MustHaveRegister  "NoSpillStore"
  v72|q QWORD "[r10|q]" v72|q v71|d [416, 420[416 MustHaveRegister 418 MustHaveRegister  "NoSpillStore"
  v73|d DWORD "[rsi|d]" v73|d -1 [828, 832[828 MustHaveRegister 832 MustHaveRegister  "NoSpillStore"
  v74|q QWORD "[rsi|q]" v74|q v73|d [832, 834[832 MustHaveRegister 834 MustHaveRegister  "NoSpillStore"
  v75|q QWORD "[rdx|q]" v75|q -1 [830, 833[830 MustHaveRegister 832 MustHaveRegister  "NoSpillStore"
  v76|q QWORD "[rbx|q]" v76|q -1 [834, 842[834 MustHaveRegister 836 MustHaveRegister 842 ShouldHaveRegister  "NoSpillStore"
  v77|q QWORD "[rax|q]" v77|q -1 [836, 844[836 MustHaveRegister 844 ShouldHaveRegister  "NoSpillStore"
  v78|d DWORD "[rax|d]" v78|d rax|q [848, 850[848 MustHaveRegister 850 MustHaveRegister  "NoSpillStore"
  v79|q QWORD "[rax|q]" v79|q rax|q [928, 931[928 MustHaveRegister 930 ShouldHaveRegister  "NoSpillStore"
  v80|q QWORD "[r11|q]" v80|q v70|q [200, 215[202 MustHaveRegister  "OneSpillStore"
  v81|d DWORD "[rbp|d]" v81|d v93|d [200, 216[216 ShouldHaveRegister  "OneSpillStore"
  v82|d DWORD "[rax|d]" v82|d -1 [202, 212[[278, 280[202 MustHaveRegister 204 MustHaveRegister 206 MustHaveRegister 210 MustHaveRegister 280 MustHaveRegister  "NoSpillStore"
  v83|q QWORD "[r8|q]" v83|q v82|d [204, 219[204 MustHaveRegister 218 ShouldHaveRegister  "OneSpillStore"
  v84|d DWORD "[rsi|d]" v84|d -1 [280, 282[280 MustHaveRegister 282 MustHaveRegister  "NoSpillStore"
  v85|q QWORD "[r10|q]" v85|q v84|d [282, 286[282 MustHaveRegister 284 MustHaveRegister  "NoSpillStore"
  v86|d DWORD "[rsi|d]" v86|d -1 [858, 862[858 MustHaveRegister 862 MustHaveRegister  "NoSpillStore"
  v87|q QWORD "[rsi|q]" v87|q v86|d [862, 864[862 MustHaveRegister 864 MustHaveRegister  "NoSpillStore"
  v88|q QWORD "[rdx|q]" v88|q -1 [860, 863[860 MustHaveRegister 862 MustHaveRegister  "NoSpillStore"
  v89|q QWORD "[rbx|q]" v89|q -1 [864, 872[864 MustHaveRegister 866 MustHaveRegister 872 ShouldHaveRegister  "NoSpillStore"
  v90|q QWORD "[rax|q]" v90|q -1 [866, 874[866 MustHaveRegister 874 ShouldHaveRegister  "NoSpillStore"
  v91|d DWORD "[rax|d]" v91|d rax|q [878, 880[878 MustHaveRegister 880 MustHaveRegister  "NoSpillStore"
  v92|q QWORD "[rax|q]" v92|q -1 [214, 215[214 MustHaveRegister  "NoDefinitionFound"
  v93|d DWORD "[rbp|d]" v93|d v81|d [216, 219[216 MustHaveRegister 218 ShouldHaveRegister  "NoSpillStore"
  v94|q QWORD "[r10|q]" v94|q -1 [222, 236[222 MustHaveRegister 224 MustHaveRegister 236 ShouldHaveRegister  "NoSpillStore"
  v95|q QWORD "[r11|q]" v95|q -1 [224, 238[224 MustHaveRegister 238 ShouldHaveRegister  "NoSpillStore"
  v96|q QWORD "[rax|q]" v96|q rax|q [242, 250[[290, 318[[436, 460[242 MustHaveRegister 450 MustHaveRegister 454 ShouldHaveRegister 460 MustHaveRegister  "NoSpillStore"
  v97|q QWORD "[rsi|q]" v97|q -1 [292, 294[292 MustHaveRegister 294 MustHaveRegister  "NoSpillStore"
  v98|d DWORD "[rsi|d]" v98|d -1 [294, 302[294 MustHaveRegister 296 MustHaveRegister 302 MustHaveRegister  "NoSpillStore"
  v99|q QWORD "[r10|q]" v99|q -1 [300, 312[300 MustHaveRegister 304 MustHaveRegister 310 MustHaveRegister 312 MustHaveRegister  "NoSpillStore"
  v100|q QWORD "[rsi|q]" v100|q v98|d [302, 310[[440, 442[302 MustHaveRegister 310 MustHaveRegister 442 ShouldHaveRegister  "NoSpillStore"
  v101|q QWORD "[r8|q]" v101|q -1 [308, 310[308 MustHaveRegister 310 MustHaveRegister  "NoSpillStore"
  v102|q QWORD "[rsi|q]" v102|q -1 [312, 314[312 MustHaveRegister 314 MustHaveRegister  "NoSpillStore"
  v103|d DWORD "[rsi|d]" v103|d v96|q [450, 452[450 MustHaveRegister 452 MustHaveRegister  "NoSpillStore"
  v104|q QWORD "[rsi|q]" v104|q v80|q [454, 456[454 MustHaveRegister 456 ShouldHaveRegister  "NoSpillStore"
  v105|q QWORD "[r11|q]" v105|q v80|q [464, 468[[480, 486[[490, 496[464 MustHaveRegister 466 MustHaveRegister 484 MustHaveRegister 492 MustHaveRegister 496 ShouldHaveRegister  "NoSpillStore"
  v106|q QWORD "[rsi|q]" v106|q -1 [494, 506[494 MustHaveRegister 498 MustHaveRegister 504 MustHaveRegister 506 MustHaveRegister  "NoSpillStore"
  v107|q QWORD "[r11|q]" v107|q v105|q [496, 504[[572, 574[496 MustHaveRegister 504 MustHaveRegister 574 ShouldHaveRegister  "NoSpillStore"
  v108|q QWORD "[rdx|q]" v108|q -1 [502, 504[502 MustHaveRegister 504 MustHaveRegister  "NoSpillStore"
  v109|q QWORD "[rsi|q]" v109|q -1 [506, 508[506 MustHaveRegister 508 MustHaveRegister  "NoSpillStore"
  v110|q QWORD "[r8|q]" v110|q v83|q [588, 592[[626, 668[[678, 752[[796, 814[[932, 938[590 MustHaveRegister 628 MustHaveRegister 642 MustHaveRegister 692 MustHaveRegister 694 ShouldHaveRegister 704 MustHaveRegister 814 ShouldHaveRegister  "NoSpillStore"
  v111|d DWORD "[rax|d]" v111|d -1 [600, 602[600 MustHaveRegister 602 MustHaveRegister  "NoSpillStore"
  v112|d DWORD "[rax|d]" v112|d v111|d [602, 606[602 MustHaveRegister 604 MustHaveRegister 606 MustHaveRegister  "NoSpillStore"
  v113|q QWORD "[rax|q]" v113|q rax|q [674, 675[674 MustHaveRegister  "NoSpillStore"
  v114|d DWORD "[rdx|d]" v114|d -1 [758, 772[758 MustHaveRegister 760 MustHaveRegister 772 MustHaveRegister  "NoSpillStore"
  v115|d DWORD "[rbx|d]" v115|d -1 [762, 766[762 MustHaveRegister 766 MustHaveRegister  "NoSpillStore"
  v116|q QWORD "[rbx|q]" v116|q v115|d [766, 768[766 MustHaveRegister 768 MustHaveRegister  "NoSpillStore"
  v117|q QWORD "[rax|q]" v117|q -1 [764, 767[764 MustHaveRegister 766 MustHaveRegister  "NoSpillStore"
  v118|q QWORD "[rbx|q]" v118|q -1 [768, 778[768 MustHaveRegister 770 MustHaveRegister 778 ShouldHaveRegister  "NoSpillStore"
  v119|q QWORD "[rax|q]" v119|q -1 [770, 780[770 MustHaveRegister 780 ShouldHaveRegister  "NoSpillStore"
  v120|q QWORD "[rdx|q]" v120|q v114|d [772, 775[772 MustHaveRegister  "OneSpillStore"
  v121|d DWORD "[rax|d]" v121|d rax|q [784, 788[[994, 1001[784 MustHaveRegister 786 MustHaveRegister  "NoSpillStore"
  v122|d DWORD "[r10|d]" v122|d -1 [628, 668[628 MustHaveRegister  "NoSpillStore"
  v123|q QWORD "[r11|q]" v123|q -1 [642, 644[642 MustHaveRegister 644 MustHaveRegister  "NoSpillStore"
  v124|d DWORD "[r11|d]" v124|d -1 [644, 652[644 MustHaveRegister 646 MustHaveRegister 652 MustHaveRegister  "NoSpillStore"
  v125|q QWORD "[r9|q]" v125|q -1 [650, 662[650 MustHaveRegister 654 MustHaveRegister 660 MustHaveRegister 662 MustHaveRegister  "NoSpillStore"
  v126|q QWORD "[r11|q]" v126|q v124|d [652, 660[[682, 684[652 MustHaveRegister 660 MustHaveRegister 684 ShouldHaveRegister  "NoSpillStore"
  v127|q QWORD "[rcx|q]" v127|q -1 [658, 660[658 MustHaveRegister 660 MustHaveRegister  "NoSpillStore"
  v128|q QWORD "[r11|q]" v128|q -1 [662, 664[662 MustHaveRegister 664 MustHaveRegister  "NoSpillStore"
  v129|q QWORD "[rsi|q]" v129|q v110|q [694, 696[694 MustHaveRegister 696 ShouldHaveRegister  "NoSpillStore"
  v130|q QWORD "[rsi|q]" v130|q v110|q [704, 708[[720, 726[[730, 736[704 MustHaveRegister 706 MustHaveRegister 724 MustHaveRegister 732 MustHaveRegister 736 ShouldHaveRegister  "NoSpillStore"
  v131|q QWORD "[rdx|q]" v131|q -1 [734, 746[734 MustHaveRegister 738 MustHaveRegister 744 MustHaveRegister 746 MustHaveRegister  "NoSpillStore"
  v132|q QWORD "[rsi|q]" v132|q v130|q [736, 744[[796, 798[736 MustHaveRegister 744 MustHaveRegister 798 ShouldHaveRegister  "NoSpillStore"
  v133|q QWORD "[rbx|q]" v133|q -1 [742, 744[742 MustHaveRegister 744 MustHaveRegister  "NoSpillStore"
  v134|q QWORD "[rsi|q]" v134|q -1 [746, 748[746 MustHaveRegister 748 MustHaveRegister  "NoSpillStore"
  v135|q QWORD "[rbx|q]" v135|q -1 [806, 816[806 MustHaveRegister 808 MustHaveRegister 816 ShouldHaveRegister  "NoSpillStore"
  v136|q QWORD "[rax|q]" v136|q -1 [808, 818[808 MustHaveRegister 818 ShouldHaveRegister  "NoSpillStore"
  v137|q QWORD "[r10|q]" v137|q v122|d [810, 819[810 MustHaveRegister  "OneSpillStore"
  v138|d DWORD "[r10|d]" v138|d -1 [954, 956[956 MustHaveRegister  "NoSpillStore"
  v139|q QWORD "[r11|q]" v139|q -1 [954, 958[958 MustHaveRegister  "NoSpillStore"
  v140|q QWORD "[rdi|q]" v0|q v0|q [225, 227[226 ShouldHaveRegister  "SpillInDominator"
  v141|d DWORD "[rdi|d]" v1|d v1|d [227, 239[228 ShouldHaveRegister  "OneSpillStore"
  v142|q QWORD "[vstack:16|q]" v2|q v2|q [424, 427[ "SpillInDominator"
  v143|q QWORD "[rax|q]" v3|q v3|q [231, 237[232 ShouldHaveRegister  "SpillInDominator"
  v144|d DWORD "[vstack:8|d]" v4|d v4|d [220, 233[ "SpillInDominator"
  v145|d DWORD "[vstack:5|d]" v5|d v5|d [220, 239[ "SpillInDominator"
  v146|q QWORD "[vstack:10|q]" v11|q v11|q [220, 235[ "SpillInDominator"
  v147|d DWORD "[vstack:18|d]" v14|d v14|d [550, 561[ "OneSpillStore"
  v148|d DWORD "[vstack:1|d]" v16|d v16|d [550, 561[ "SpillInDominator"
  v149|q QWORD "[vstack:15|q]" v19|q v19|q [239, 424[[436, 612[ "SpillInDominator"
  v150|q QWORD "[vstack:12|q]" v21|q v21|q [220, 239[ "SpillInDominator"
  v151|d DWORD "[vstack:3|d]" v22|d v22|d [220, 239[ "SpillInDominator"
  v152|d DWORD "[r8|d]" v12|d v12|d [954, 961[ "OneSpillStore"
  v153|d DWORD "[vstack:0|d]" v12|d v12|d [46, 74[[186, 192[[322, 333[[412, 420[[520, 528[[826, 829[[886, 897[[938, 942[[950, 954[ "OneSpillStore"
  v154|d DWORD "[rbp|d]" v16|d v16|d [250, 278[[318, 362[[520, 550[252 MustHaveRegister 348 MustHaveRegister 350 MustHaveRegister 362 MustHaveRegister  "SpillInDominator"
  v155|d DWORD "[vstack:1|d]" v16|d v16|d [66, 186[ "SpillInDominator"
  v156|q QWORD "[vstack:21|q]" v70|q v70|q [826, 845[ "OneSpillStore"
  v157|q QWORD "[vstack:4|q]" v80|q v80|q [220, 239[ "OneSpillStore"
  v158|d DWORD "[vstack:14|d]" v81|d v81|d [220, 239[ "OneSpillStore"
  v159|q QWORD "[vstack:7|q]" v83|q v83|q [220, 231[ "OneSpillStore"
  v160|q QWORD "[rax|q]" v3|q v3|q [220, 231[ "SpillInDominator"
  v161|q QWORD "[vstack:2|q]" v3|q v3|q [200, 220[ "SpillInDominator"
  v162|q QWORD "[vstack:10|q]" v11|q v11|q [235, 250[ "SpillInDominator"
  v163|q QWORD "[vstack:7|q]" v83|q v83|q [231, 250[[278, 289[[290, 318[[436, 512[[572, 587[[856, 885[[900, 911[288 ShouldHaveRegister 586 ShouldHaveRegister 884 ShouldHaveRegister 910 ShouldHaveRegister  "OneSpillStore"
  v164|q QWORD "[vstack:4|q]" v80|q v80|q [239, 250[[278, 286[ "OneSpillStore"
  v165|q QWORD "[vstack:12|q]" v21|q v21|q [239, 360[ "SpillInDominator"
  v166|d DWORD "[vstack:14|d]" v81|d v81|d [239, 250[[278, 286[[290, 318[[436, 512[[572, 582[[856, 882[582 ShouldHaveRegister  "OneSpillStore"
  v167|d DWORD "[vstack:8|d]" v4|d v4|d [233, 250[[278, 318[[322, 333[[412, 512[[520, 528[[572, 592[ "SpillInDominator"
  v168|d DWORD "[vstack:3|d]" v22|d v22|d [239, 250[[278, 318[[322, 336[[412, 424[[436, 512[[572, 592[[626, 668[[678, 690[ "SpillInDominator"
  v169|d DWORD "[vstack:5|d]" v5|d v5|d [239, 616[[626, 632[[668, 678[ "SpillInDominator"
  v170|q QWORD "[vstack:6|q]" v0|q v0|q [239, 596[426 ShouldHaveRegister 564 ShouldHaveRegister  "SpillInDominator"
  v171|d DWORD "[vstack:13|d]" v1|d v1|d [239, 250[[278, 286[[290, 318[[322, 336[[412, 420[[424, 512[[520, 563[[572, 584[[826, 852[[856, 882[[886, 906[[912, 920[[938, 949[[950, 961[[986, 993[554 ShouldHaveRegister 906 ShouldHaveRegister 920 ShouldHaveRegister  "OneSpillStore"
  v172|q QWORD "[vstack:6|q]" v0|q v0|q [227, 239[ "SpillInDominator"
  v173|q QWORD "[vstack:2|q]" v3|q v3|q [237, 250[[278, 318[[322, 333[[412, 512[[520, 563[[572, 592[[626, 668[[678, 698[558 ShouldHaveRegister 694 ShouldHaveRegister  "SpillInDominator"
  v174|q QWORD "[r8|q]" v83|q v83|q [942, 949[ "OneSpillStore"
  v175|d DWORD "[r9|d]" v4|d v4|d [626, 632[630 MustHaveRegister  "SpillInDominator"
  v176|q QWORD "[rbx|q]" v11|q v11|q [250, 286[[290, 362[[412, 420[[436, 512[[520, 550[252 MustHaveRegister 348 MustHaveRegister 350 MustHaveRegister 362 MustHaveRegister  "SpillInDominator"
  v177|q QWORD "[r11|q]" v3|q v3|q [698, 700[700 MustHaveRegister  "SpillInDominator"
  v178|q QWORD "[r11|q]" v80|q v80|q [290, 318[[436, 464[[856, 859[292 MustHaveRegister 452 MustHaveRegister 454 ShouldHaveRegister 464 MustHaveRegister  "OneSpillStore"
  v179|q QWORD "[r14|q]" v21|q v21|q [360, 368[[380, 386[[390, 396[[412, 424[[436, 512[[520, 550[366 MustHaveRegister 384 MustHaveRegister 392 MustHaveRegister 396 ShouldHaveRegister 466 MustHaveRegister 484 MustHaveRegister 492 MustHaveRegister 496 ShouldHaveRegister  "SpillInDominator"
  v180|q QWORD "[rsi|q]" v0|q v0|q [596, 616[[626, 669[598 MustHaveRegister 602 MustHaveRegister 604 MustHaveRegister 606 MustHaveRegister  "SpillInDominator"
  v181|d DWORD "[rdx|d]" v1|d v1|d [1002, 1009[ "OneSpillStore"
  v182|d DWORD "[rbp|d]" v81|d v81|d [942, 949[ "OneSpillStore"
  v183|q QWORD "[r13|q]" v19|q v19|q [612, 615[[626, 668[614 MustHaveRegister  "SpillInDominator"
  v184|d DWORD "[r11|d]" v22|d v22|d [690, 692[692 MustHaveRegister  "SpillInDominator"
  v185|d DWORD "[rdi|d]" v5|d v5|d [752, 761[754 MustHaveRegister  "SpillInDominator"
  v186|q QWORD "[vstack:10|q]" v11|q v11|q [550, 561[ "SpillInDominator"
  v187|q QWORD "[vstack:12|q]" v21|q v21|q [550, 561[ "SpillInDominator"
  v188|q QWORD "[vstack:16|q]" v2|q v2|q [427, 436[[520, 563[556 ShouldHaveRegister  "SpillInDominator"
  v189|q QWORD "[rcx|q]" v2|q v2|q [826, 845[828 MustHaveRegister 838 ShouldHaveRegister  "SpillInDominator"
  v190|q QWORD "[r10|q]" v37|q v37|q [551, 561[552 ShouldHaveRegister  "OneSpillStore"
  v191|q QWORD "[vstack:12|q]" v21|q v21|q [561, 592[[626, 668[[678, 702[ "SpillInDominator"
  v192|q QWORD "[vstack:10|q]" v11|q v11|q [561, 584[[826, 852[[856, 882[[886, 904[[912, 918[[938, 949[[950, 961[[962, 966[[974, 985[904 ShouldHaveRegister 918 ShouldHaveRegister  "SpillInDominator"
  v193|d DWORD "[vstack:1|d]" v16|d v16|d [561, 572[[886, 900[[962, 966[[974, 978[ "SpillInDominator"
  v194|d DWORD "[vstack:18|d]" v14|d v14|d [561, 572[[886, 900[ "OneSpillStore"
  v195|q QWORD "[vstack:17|q]" v37|q v37|q [561, 571[566 ShouldHaveRegister 570 ShouldHaveRegister  "OneSpillStore"
  v196|q QWORD "[r14|q]" v21|q v21|q [702, 708[[720, 726[[730, 736[706 MustHaveRegister 724 MustHaveRegister 732 MustHaveRegister 736 ShouldHaveRegister  "SpillInDominator"
  v197|q QWORD "[rbx|q]" v11|q v11|q [986, 993[ "SpillInDominator"
  v198|d DWORD "[rbp|d]" v16|d v16|d [978, 985[ "SpillInDominator"
  v199|q QWORD "[r10|q]" v0|q v0|q [669, 671[670 ShouldHaveRegister  "SpillInDominator"
  v200|q QWORD "[vstack:15|q]" v19|q v19|q [668, 671[ "SpillInDominator"
  v201|d DWORD "[vstack:8|d]" v4|d v4|d [826, 845[ "SpillInDominator"
  v202|q QWORD "[vstack:15|q]" v19|q v19|q [671, 752[[796, 804[ "SpillInDominator"
  v203|q QWORD "[vstack:6|q]" v0|q v0|q [671, 756[ "SpillInDominator"
  v204|d DWORD "[r10|d]" v122|d v122|d [678, 752[[796, 810[[932, 938[810 MustHaveRegister 934 MustHaveRegister  "NoSpillStore"
  v205|q QWORD "[r10|q]" v72|q v72|q [826, 840[840 ShouldHaveRegister  "NoSpillStore"
  v206|q QWORD "[r10|q]" v85|q v85|q [856, 870[870 ShouldHaveRegister  "NoSpillStore"
  v207|q QWORD "[rsi|q]" v0|q v0|q [756, 773[758 MustHaveRegister 762 MustHaveRegister  "SpillInDominator"
  v208|q QWORD "[r13|q]" v19|q v19|q [804, 806[806 MustHaveRegister  "SpillInDominator"
  v209|d DWORD "[vstack:3|d]" v22|d v22|d [826, 845[ "SpillInDominator"
  v210|q QWORD "[vstack:2|q]" v3|q v3|q [826, 845[ "SpillInDominator"
  v211|q QWORD "[vstack:12|q]" v21|q v21|q [826, 845[ "SpillInDominator"
  v212|d DWORD "[vstack:5|d]" v5|d v5|d [826, 845[ "SpillInDominator"
  v213|q QWORD "[r10|q]" v0|q v0|q [773, 781[774 ShouldHaveRegister  "SpillInDominator"
  v214|q QWORD "[r11|q]" v120|q v120|q [775, 781[776 ShouldHaveRegister  "OneSpillStore"
  v215|q QWORD "[vstack:6|q]" v0|q v0|q [781, 788[[796, 812[[826, 949[[950, 961[[962, 973[[974, 985[[986, 993[[994, 1001[812 ShouldHaveRegister 902 ShouldHaveRegister 916 ShouldHaveRegister  "SpillInDominator"
  v216|q QWORD "[vstack:19|q]" v120|q v120|q [781, 788[ "OneSpillStore"
  v217|q QWORD "[rsi|q]" v0|q v0|q [1002, 1009[ "SpillInDominator"
  v218|q QWORD "[rdx|q]" v120|q v120|q [994, 1001[ "OneSpillStore"
  v219|q QWORD "[vstack:15|q]" v19|q v19|q [826, 845[ "SpillInDominator"
  v220|q QWORD "[vstack:20|q]" v137|q v137|q [819, 822[822 ShouldHaveRegister  "OneSpillStore"
  v221|q QWORD "[vstack:16|q]" v2|q v2|q [845, 852[ "SpillInDominator"
  v222|q QWORD "[vstack:21|q]" v70|q v70|q [845, 855[[912, 914[854 ShouldHaveRegister 914 ShouldHaveRegister  "OneSpillStore"
  v223|q QWORD "[vstack:2|q]" v3|q v3|q [845, 935[[938, 949[[950, 961[[986, 993[924 ShouldHaveRegister  "SpillInDominator"
  v224|q QWORD "[vstack:15|q]" v19|q v19|q [845, 938[ "SpillInDominator"
  v225|d DWORD "[vstack:5|d]" v5|d v5|d [845, 935[[938, 949[[950, 961[[962, 973[[974, 985[[986, 993[ "SpillInDominator"
  v226|q QWORD "[vstack:12|q]" v21|q v21|q [845, 932[ "SpillInDominator"
  v227|d DWORD "[vstack:3|d]" v22|d v22|d [845, 886[[900, 932[ "SpillInDominator"
  v228|d DWORD "[vstack:8|d]" v4|d v4|d [845, 897[[900, 935[[938, 949[[950, 961[[986, 993[ "SpillInDominator"
  v229|q QWORD "[r11|q]" v70|q v70|q [986, 993[ "OneSpillStore"
  v230|q QWORD "[rcx|q]" v2|q v2|q [856, 875[858 MustHaveRegister 868 ShouldHaveRegister  "SpillInDominator"
  v231|q QWORD "[r8|q]" v3|q v3|q [1002, 1009[ "SpillInDominator"
  v232|d DWORD "[r9|d]" v4|d v4|d [1002, 1009[ "SpillInDominator"
  v233|d DWORD "[rdi|d]" v5|d v5|d [1002, 1009[ "SpillInDominator"
  v234|q QWORD "[vstack:16|q]" v2|q v2|q [875, 882[[886, 900[[912, 922[[938, 949[[950, 961[[986, 993[922 ShouldHaveRegister  "SpillInDominator"
  v235|q QWORD "[rcx|q]" v2|q v2|q [1002, 1009[ "SpillInDominator"
end_intervals
begin_cfg
  name "After LinearScanRegisterAllocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|DWORD, rdi|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@21849dd slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction v2|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   12  <|@ instruction v3|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   14  <|@ instruction v4|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   16  <|@ instruction v5|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr   18  <|@ instruction v6|DWORD[_] = MOV [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   20  <|@ instruction TESTBRANCH (x: v6|DWORD[_], y: v6|DWORD[_]) trueDestinationProbability: 0.0015880438063265454 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607168114973028567
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   24  <|@ instruction v9|DWORD = MOV [v6|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   26  <|@ instruction TESTBRANCH (x: v9|DWORD, y: v9|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607168114973028567
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr   32  <|@ instruction JUMP ~[v10|QWORD[.], v9|DWORD] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B1" 
    successors "B6" "B121" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   34  <|@ instruction [v11|QWORD[.], v12|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   36  <|@ instruction v13|DWORD = MOV [v11|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   38  <|@ instruction v14|DWORD = MOV [v11|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   40  <|@ instruction v15|DWORD = DEC v12|DWORD size: DWORD <|@ <|@
      nr   42  <|@ instruction v16|DWORD = AND (x: v1|DWORD, y: v15|DWORD) size: DWORD <|@ <|@
      nr   44  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v16|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B121 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B48" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction v17|DWORD[_] = MOV [v11|QWORD[.] + v16|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   50  <|@ instruction v18|DWORD = MOV [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   52  <|@ instruction v20|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr   54  <|@ instruction v19|QWORD = UNCOMPRESSPOINTER (input: v18|DWORD, ~baseRegister: v20|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr   56  <|@ instruction v21|QWORD = MOVE input: long[140438306553856|0x7fba57600000] <|@ <|@
      nr   58  <|@ instruction v22|DWORD[_] = COMPRESSPOINTER (input: v3|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr   60  <|@ instruction TESTBRANCH (x: v17|DWORD[_], y: v17|DWORD[_]) trueDestinationProbability: 0.8229115724385652 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B12" "B47" 
    xhandlers
    flags 
    probability 4605587348047262798
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v19|QWORD - keyConstants: [meta{HotSpotType<Ljava/util/HashMap;, resolved>}, meta{HotSpotType<Ljava/util/LinkedHashMap;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/replacements/SnippetTemplate$LRUCache;, resolved>}] keyTargets: [B7 -> B8, B7 -> B12, B7 -> B12] defaultTarget: B7 -> B47 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4605585062831744793
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction v23|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   70  <|@ instruction v24|QWORD = LEA [v23|QWORD + 32] size: QWORD <|@ <|@
      nr   72  <|@ instruction CMPBRANCH (x: v24|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4605510964398880109
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction MOV (x: [r15|QWORD + 440], y: v24|QWORD) size: QWORD <|@ <|@
      nr   78  <|@ instruction AMD64PREFETCH ~[v23|QWORD + 288] instr: 0 <|@ <|@
      nr   80  <|@ instruction MOV [v23|QWORD] y: 1 size: QWORD <|@ <|@
      nr   82  <|@ instruction MOV [v23|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>;compressed} <|@ <|@
      nr   84  <|@ instruction MOV [v23|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   86  <|@ instruction MOV [v23|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   88  <|@ instruction MOV [v23|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr   90  <|@ instruction v28|QWORD[.] = MOVE v23|QWORD moveKind: QWORD <|@ <|@
      nr   92  <|@ instruction JUMP ~[v28|QWORD[.]] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 4605585062831744793
    begin_IR
      LIR
      nr   94  <|@ instruction [v29|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   96  <|@ instruction MOV (x: [v29|QWORD[.] + 20], y: v22|DWORD[_]) size: DWORD <|@ <|@
      nr   98  <|@ instruction v30|DWORD[_] = COMPRESSPOINTER (input: v2|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  100  <|@ instruction MOV (x: [v29|QWORD[.] + 16], y: v30|DWORD[_]) size: DWORD <|@ <|@
      nr  102  <|@ instruction MOV (x: [v29|QWORD[.] + 12], y: v1|DWORD) size: DWORD <|@ <|@
      nr  104  <|@ instruction JUMP ~[v29|QWORD[.]] destination: B11 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B11" "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4605587348047262798
    begin_IR
      LIR
      nr  106  <|@ instruction [v38|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  108  <|@ instruction v40|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr  110  <|@ instruction v39|QWORD = UNCOMPRESSPOINTER (input: v14|DWORD, ~baseRegister: v40|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr  112  <|@ instruction v41|QWORD = MOV [v39|QWORD + 208] size: QWORD <|@ <|@
      nr  114  <|@ instruction v42|DWORD = MOV [v41|QWORD + 20] size: DWORD <|@ <|@
      nr  116  <|@ instruction v43|DWORD = MOV [v38|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  118  <|@ instruction v45|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr  120  <|@ instruction v44|QWORD = UNCOMPRESSPOINTER (input: v43|DWORD, ~baseRegister: v45|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr  122  <|@ instruction v46|QWORD = MOVSXD v42|DWORD size: QWORD <|@ <|@
      nr  124  <|@ instruction CMPBRANCH (x: v41|QWORD, y: [v44|QWORD + v46|QWORD * 1]) trueDestinationProbability: 0.5 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B45" 
    xhandlers
    flags 
    probability 4601083748419892302
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction CMPCONSTBRANCH v42|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B45 y: 32 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4601083748419892302
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  132  <|@ instruction CMPBRANCH (x: v41|QWORD, y: v44|QWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4596580148792521806
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction v47|QWORD = MOV [v44|QWORD + 40] size: QWORD <|@ <|@
      nr  138  <|@ instruction v48|DWORD = MOV [v47|QWORD] size: DWORD <|@ <|@
      nr  140  <|@ instruction JUMP ~[int[0|0x0]] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B24" 
    successors "B23" "B26" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4602807799859017905
    begin_IR
      LIR
      nr  142  <|@ instruction [v49|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  144  <|@ instruction CMPBRANCH (x: v48|DWORD, y: v49|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602807799859017905
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction v50|DWORD = SHL v49|DWORD y: 3 size: DWORD <|@ <|@
      nr  150  <|@ instruction v51|DWORD = LEA [v50|DWORD + 8] size: DWORD <|@ <|@
      nr  152  <|@ instruction v52|QWORD = MOVSXD v51|DWORD size: QWORD <|@ <|@
      nr  154  <|@ instruction v53|QWORD = MOV [v47|QWORD + v52|QWORD * 1] size: QWORD <|@ <|@
      nr  156  <|@ instruction CMPBRANCH (x: v41|QWORD, y: v53|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B23 -> B25 falseDestination: B23 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B22" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4599230716294395707
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction v54|DWORD = INC v49|DWORD size: DWORD <|@ <|@
      nr  162  <|@ instruction JUMP ~[v54|DWORD] destination: B24 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B27" 
    xhandlers
    flags 
    probability 4601083748419892302
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction JUMP ~[] destination: B17 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B27" 
    xhandlers
    flags 
    probability 4596580148792521807
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction MOV (x: [v44|QWORD + 32], y: v41|QWORD) size: QWORD <|@ <|@
      nr  172  <|@ instruction JUMP ~[] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B27" 
    xhandlers
    flags 
    probability 4596580148792521806
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction JUMP ~[] destination: B20 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B17" "B25" "B20" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4605587348047262798
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" 
    xhandlers
    flags 
    probability 4604846135197064160
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction JUMP ~[] destination: B28 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B49" "B54" 
    xhandlers
    flags 
    probability 4595548303301553864
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction v70|QWORD[.] = UNCOMPRESSPOINTER (input: v17|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  190  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v17|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.01987559010066231 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4595421491411700642
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction CMPCONSTBRANCH [v17|DWORD[_] * 8 + 8] trueDestinationProbability: 2.021089053783065E-6 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B56 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4595421478772878611
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction JUMP ~[v70|QWORD[.], int[0|0x0]] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B62" 
    successors "B65" "B58" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4595777537596400292
    begin_IR
      LIR
      nr  200  <|@ instruction [v80|QWORD[.], v81|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  202  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] v80|QWORD[.] - - - - v81|DWORD 
>@ <|@ instruction v82|DWORD[_] = MOV [v80|QWORD[.] + 24] size: DWORD state [bci:134] <|@ <|@
      nr  204  <|@ instruction v83|QWORD[.] = UNCOMPRESSPOINTER (input: v82|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  206  <|@ instruction TESTBRANCH (x: v82|DWORD[_], y: v82|DWORD[_]) trueDestinationProbability: 0.5880075530332061 condition: = trueDestination: B57 -> B65 falseDestination: B57 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4590110563079390205
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v82|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.8692436604445373 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B62 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B57" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4576850562957400324
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] v80|QWORD[.] - - - - v81|DWORD 
>@ <|@ instruction SAFEPOINT v92|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 thread: r15 state [bci:134] <|@ <|@
      nr  216  <|@ instruction v93|DWORD = INC v81|DWORD size: DWORD <|@ <|@
      nr  218  <|@ instruction JUMP ~[v83|QWORD[.], v93|DWORD] destination: B62 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4592437312858669387
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction v94|QWORD = MOV [v19|QWORD + 680] size: QWORD <|@ <|@
      nr  224  <|@ instruction v95|QWORD = MOV [v94|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v140|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  226  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v172|QWORD[.] = MOVE v140|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v141|DWORD = MOVE v1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  228  <|@ instruction rdx|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr  230  <|@ instruction rcx|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v163|QWORD[.] = STACKMOVE (input: v159|QWORD[.], ~backupSlot: vstack:9|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v143|QWORD[.] = MOVE v160|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  232  <|@ instruction r8|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v167|DWORD = STACKMOVE (input: v144|DWORD, ~backupSlot: vstack:11|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  234  <|@ instruction r9|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction v162|QWORD[.] = STACKMOVE (input: v146|QWORD[.], ~backupSlot: vstack:9|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  236  <|@ instruction rbx|QWORD = MOVE v94|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v173|QWORD[.] = MOVE v143|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  238  <|@ instruction rax|QWORD = MOVE v95|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v169|DWORD = STACKMOVE (input: v145|DWORD, ~backupSlot: vstack:11|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v168|DWORD[_] = STACKMOVE (input: v151|DWORD[_], ~backupSlot: vstack:11|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v149|QWORD = MOVE v19|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v166|DWORD = STACKMOVE (input: v158|DWORD, ~backupSlot: vstack:11|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v171|DWORD = MOVE v141|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v170|QWORD[.] = STACKMOVE (input: v172|QWORD[.], ~backupSlot: vstack:9|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v165|QWORD = STACKMOVE (input: v150|QWORD, ~backupSlot: vstack:9|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v164|QWORD[.] = STACKMOVE (input: v157|QWORD[.], ~backupSlot: vstack:9|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  240  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:648) [bci: 152]
stack: v80|QWORD[.] 
locals: v0|QWORD[.] v1|DWORD - v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] - - - v83|QWORD[.] - v81|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.]]) [] callTarget: HotSpotMethod<HashMap.newNode(int, Object, Object, HashMap$Node)> state [bci:152] <|@ <|@
      nr  242  <|@ instruction v96|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  244  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B67 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B72" 
    xhandlers
    flags 
    probability 4591660023639118941
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction JUMP ~[] destination: B66 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4590594123464754032
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction v55|QWORD[.+] = LEA [v11|QWORD[.] + v16|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  254  <|@ instruction v56|DWORD[_] = MOV [v55|QWORD[.+]] size: DWORD <|@ <|@
      nr  256  <|@ instruction TESTBRANCH (x: v56|DWORD[_], y: v56|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4590001153184595122
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction v57|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  262  <|@ instruction v58|QWORD[.] = UNCOMPRESSPOINTER (input: v56|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  264  <|@ instruction TESTBRANCH (x: v57|QWORD, y: v57|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4589467479932452103
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction v59|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  270  <|@ instruction MOV (x: [v59|QWORD + v57|QWORD * 1 - 8], y: v58|QWORD[.]) size: QWORD <|@ <|@
      nr  272  <|@ instruction v60|QWORD = LEA [v57|QWORD - 8] size: QWORD <|@ <|@
      nr  274  <|@ instruction MOV (x: [r15|QWORD + 40], y: v60|QWORD) size: QWORD <|@ <|@
      nr  276  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B64" "B60" 
    xhandlers
    flags 
    probability 4589398445432346844
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction v84|DWORD[_] = MOV [v82|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  282  <|@ instruction v85|QWORD[.] = UNCOMPRESSPOINTER (input: v84|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  284  <|@ instruction CMPBRANCH (x: v85|QWORD[.], y: v2|QWORD[.]) trueDestinationProbability: 0.9998932466496128 condition: = trueDestination: B59 -> B64 falseDestination: B59 -> B60 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B86" 
    xhandlers
    flags 
    probability 4589397940059341918
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  288  <|@ instruction JUMP ~[v83|QWORD[.]] destination: B64 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4577371935537457006
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  292  <|@ instruction v97|QWORD[.+] = LEA [v80|QWORD[.] + 24] size: QWORD <|@ <|@
      nr  294  <|@ instruction v98|DWORD[_] = MOV [v97|QWORD[.+]] size: DWORD <|@ <|@
      nr  296  <|@ instruction TESTBRANCH (x: v98|DWORD[_], y: v98|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B67 -> B68 falseDestination: B67 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" "B71" 
    xhandlers
    flags 
    probability 4576750104161816650
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  300  <|@ instruction v99|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  302  <|@ instruction v100|QWORD[.] = UNCOMPRESSPOINTER (input: v98|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  304  <|@ instruction TESTBRANCH (x: v99|QWORD, y: v99|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    probability 4576190455923740329
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  308  <|@ instruction v101|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  310  <|@ instruction MOV (x: [v101|QWORD + v99|QWORD * 1 - 8], y: v100|QWORD[.]) size: QWORD <|@ <|@
      nr  312  <|@ instruction v102|QWORD = LEA [v99|QWORD - 8] size: QWORD <|@ <|@
      nr  314  <|@ instruction MOV (x: [r15|QWORD + 40], y: v102|QWORD) size: QWORD <|@ <|@
      nr  316  <|@ instruction JUMP ~[] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    probability 4575897384022324722
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  320  <|@ instruction JUMP ~[] destination: B30 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4575895921484393205
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction v25|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>} <|@ <|@
      nr  326  <|@ instruction rsi|QWORD = MOVE v25|QWORD moveKind: QWORD <|@ <|@
      nr  328  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] - v12|DWORD - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7fba62ccef80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:29] <|@ <|@
      nr  330  <|@ instruction v26|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  332  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] - v12|DWORD - - - - 
>@ <|@ instruction NULLCHECK [v26|QWORD[.]] state [bci:29] <|@ <|@
      nr  334  <|@ instruction JUMP ~[v26|QWORD[.]] destination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4575188794187971253
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  338  <|@ instruction rsi|QWORD[.] = MOVE v58|QWORD[.] moveKind: QWORD <|@ <|@
      nr  340  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  342  <|@ instruction JUMP ~[] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" "B33" "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4605587348047262798
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction v61|DWORD[_] = COMPRESSPOINTER (input: v38|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  348  <|@ instruction MOV (x: [v11|QWORD[.] + v16|DWORD * 4 + 16], y: v61|DWORD[_]) size: DWORD <|@ <|@
      nr  350  <|@ instruction v62|QWORD[.+] = LEA [v11|QWORD[.] + v16|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  352  <|@ instruction v63|QWORD[*] = XOR (x: v62|QWORD[.+], y: v38|QWORD[.]) size: QWORD <|@ <|@
      nr  354  <|@ instruction TESTCONSTBRANCH v63|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4604846135197064160
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  358  <|@ instruction TESTBRANCH (x: v38|QWORD[.], y: v38|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4604179043631885386
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  362  <|@ instruction v65|QWORD[.+] = LEA [v11|QWORD[.] + v16|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  364  <|@ instruction v64|QWORD[*] = SHR v65|QWORD[.+] y: 9 size: QWORD <|@ <|@
      nr  366  <|@ instruction CMPCONSTBRANCH [v64|QWORD[*] + v21|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B88" 
    xhandlers
    flags 
    probability 4603578661223224489
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction JUMP ~[] destination: B39 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B88" 
    xhandlers
    flags 
    probability 4590594123464754032
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  374  <|@ instruction JUMP ~[] destination: B35 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B88" 
    xhandlers
    flags 
    probability 4590001153184595122
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction JUMP ~[] destination: B37 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4589467479932452103
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  382  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  384  <|@ instruction CMPCONSTBRANCH [v64|QWORD[*] + v21|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B88" 
    xhandlers
    flags 
    probability 4588806327720511347
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction JUMP ~[] destination: B41 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4574334916984542422
    begin_IR
      LIR
      nr  390  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  392  <|@ instruction MOVB [v64|QWORD[*] + v21|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  394  <|@ instruction v66|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  396  <|@ instruction v67|QWORD[*] = ADD (x: v64|QWORD[*], y: v21|QWORD) size: QWORD <|@ <|@
      nr  398  <|@ instruction TESTBRANCH (x: v66|QWORD, y: v66|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B88" 
    xhandlers
    flags 
    probability 4573566427501456474
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  402  <|@ instruction v68|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  404  <|@ instruction MOV (x: [v68|QWORD + v66|QWORD * 1 - 8], y: v67|QWORD[*]) size: QWORD <|@ <|@
      nr  406  <|@ instruction v69|QWORD = LEA [v66|QWORD - 8] size: QWORD <|@ <|@
      nr  408  <|@ instruction MOV (x: [r15|QWORD + 72], y: v69|QWORD) size: QWORD <|@ <|@
      nr  410  <|@ instruction JUMP ~[] destination: B44 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4570262383476918658
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  414  <|@ instruction v71|DWORD[_] = MOV [v17|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  416  <|@ instruction v72|QWORD[.] = UNCOMPRESSPOINTER (input: v71|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  418  <|@ instruction CMPBRANCH (x: v72|QWORD[.], y: v2|QWORD[.]) trueDestinationProbability: 0.9854570809572428 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B86" 
    xhandlers
    flags 
    probability 4570144353713859813
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  422  <|@ instruction JUMP ~[v70|QWORD[.]] destination: B50 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 4564966382317228292
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  426  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v188|QWORD[.] = STACKMOVE (input: v142|QWORD[.], ~backupSlot: vstack:9|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  428  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:635) [bci: 20]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.resize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:20] <|@ <|@
      nr  430  <|@ instruction v7|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  432  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:635) [bci: 23]
stack: Object[null] 
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD - - - - - - - 
>@ <|@ instruction v8|DWORD = MOV [v7|QWORD[.] + 12] size: DWORD state [bci:23] <|@ <|@
      nr  434  <|@ instruction JUMP ~[v7|QWORD[.], v8|DWORD] destination: B1 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B72" 
    xhandlers
    flags 
    probability 4562617473904064804
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction JUMP ~[] destination: B68 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    probability 4562093595080792590
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  442  <|@ instruction rsi|QWORD[.] = MOVE v100|QWORD[.] moveKind: QWORD <|@ <|@
      nr  444  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  446  <|@ instruction JUMP ~[] destination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B66" "B68" "B71" "B70" 
    successors "B73" "B74" 
    xhandlers
    flags 
    probability 4592437312858669387
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  450  <|@ instruction v103|DWORD[_] = COMPRESSPOINTER (input: v96|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  452  <|@ instruction MOV (x: [v80|QWORD[.] + 24], y: v103|DWORD[_]) size: DWORD <|@ <|@
      nr  454  <|@ instruction v104|QWORD[*] = XOR (x: v80|QWORD[.], y: v96|QWORD[.]) size: QWORD <|@ <|@
      nr  456  <|@ instruction TESTCONSTBRANCH v104|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    probability 4591660023639118941
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  460  <|@ instruction TESTBRANCH (x: v96|QWORD[.], y: v96|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    probability 4590960463341523540
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  464  <|@ instruction v105|QWORD[*] = SHR v80|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  466  <|@ instruction CMPCONSTBRANCH [v105|QWORD[*] + v21|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B83" 
    xhandlers
    flags 
    probability 4590330859073687679
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  470  <|@ instruction JUMP ~[] destination: B77 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B83" 
    xhandlers
    flags 
    probability 4577371935537457006
    begin_IR
      LIR
      nr  472  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  474  <|@ instruction JUMP ~[] destination: B73 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B83" 
    xhandlers
    flags 
    probability 4576750104161816649
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  478  <|@ instruction JUMP ~[] destination: B75 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    probability 4576190455923740328
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  482  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  484  <|@ instruction CMPCONSTBRANCH [v105|QWORD[*] + v21|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B83" 
    xhandlers
    flags 
    probability 4575686772509471639
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  488  <|@ instruction JUMP ~[] destination: B79 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    probability 4561198157899870475
    begin_IR
      LIR
      nr  490  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  492  <|@ instruction MOVB [v105|QWORD[*] + v21|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  494  <|@ instruction v106|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  496  <|@ instruction v107|QWORD[*] = ADD (x: v105|QWORD[*], y: v21|QWORD) size: QWORD <|@ <|@
      nr  498  <|@ instruction TESTBRANCH (x: v106|QWORD, y: v106|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    probability 4560392264437040573
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  502  <|@ instruction v108|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  504  <|@ instruction MOV (x: [v108|QWORD + v106|QWORD * 1 - 8], y: v107|QWORD[*]) size: QWORD <|@ <|@
      nr  506  <|@ instruction v109|QWORD = LEA [v106|QWORD - 8] size: QWORD <|@ <|@
      nr  508  <|@ instruction MOV (x: [r15|QWORD + 72], y: v109|QWORD) size: QWORD <|@ <|@
      nr  510  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B88" 
    xhandlers
    flags 
    probability 4559287139136259037
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  514  <|@ instruction rsi|QWORD = MOVE v67|QWORD[*] moveKind: QWORD <|@ <|@
      nr  516  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  518  <|@ instruction JUMP ~[] destination: B43 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4553315745025075769
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  522  <|@ instruction v31|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  524  <|@ instruction v32|QWORD = LEA [v31|QWORD + 40] size: QWORD <|@ <|@
      nr  526  <|@ instruction CMPBRANCH (x: v32|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4553268943811267021
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  530  <|@ instruction MOV (x: [r15|QWORD + 440], y: v32|QWORD) size: QWORD <|@ <|@
      nr  532  <|@ instruction AMD64PREFETCH ~[v31|QWORD + 296] instr: 0 <|@ <|@
      nr  534  <|@ instruction MOV [v31|QWORD] y: 1 size: QWORD <|@ <|@
      nr  536  <|@ instruction MOV [v31|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>;compressed} <|@ <|@
      nr  538  <|@ instruction MOV [v31|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  540  <|@ instruction MOV [v31|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  542  <|@ instruction MOV [v31|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  544  <|@ instruction MOV [v31|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  546  <|@ instruction v36|QWORD[.] = MOVE v31|QWORD moveKind: QWORD <|@ <|@
      nr  548  <|@ instruction JUMP ~[v36|QWORD[.]] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4553315745025075769
    begin_IR
      LIR
      nr  550  <|@ instruction [v37|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v190|QWORD[.] = MOVE v37|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  552  <|@ instruction rsi|QWORD[.] = MOVE v37|QWORD[.] moveKind: QWORD <|@ <|@
      nr  554  <|@ instruction rdx|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr  556  <|@ instruction rcx|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  558  <|@ instruction r8|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  560  <|@ instruction r9|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction v193|DWORD = STACKMOVE (input: v148|DWORD, ~backupSlot: vstack:11|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v194|DWORD = STACKMOVE (input: v147|DWORD, ~backupSlot: vstack:11|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v192|QWORD[.] = STACKMOVE (input: v186|QWORD[.], ~backupSlot: vstack:9|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v191|QWORD = STACKMOVE (input: v187|QWORD, ~backupSlot: vstack:9|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v195|QWORD[.] = MOVE v190|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  562  <|@ st <@st|@live-base-pointers: []
java.util.LinkedHashMap$Entry.<init>(LinkedHashMap.java:208) [bci: 6]
locals: - - - - - 
java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 9]
stack: v37|QWORD[.] 
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] Object[null] - 
java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stack: v11|QWORD[.] v16|DWORD 
locals: v0|QWORD[.] - - - - v5|DWORD - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.]] [] callTarget: HotSpotMethod<HashMap$Node.<init>(int, Object, Object, HashMap$Node)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:6, 9, 56] <|@ <|@
      nr  564  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  566  <|@ instruction rdx|QWORD[.] = MOVE v37|QWORD[.] moveKind: QWORD <|@ <|@
      nr  568  <|@ st <@st|@live-base-pointers: []
java.util.LinkedHashMap.newNode(LinkedHashMap.java:283) [bci: 17]
locals: - - - - - v37|QWORD[.] 
java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stack: v11|QWORD[.] v16|DWORD 
locals: v0|QWORD[.] - - - - v5|DWORD - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<LinkedHashMap.linkNodeAtEnd(LinkedHashMap$Entry)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:17, 56] <|@ <|@
      nr  570  <|@ instruction JUMP ~[v37|QWORD[.]] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    probability 4546075572092099182
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  574  <|@ instruction rsi|QWORD = MOVE v107|QWORD[*] moveKind: QWORD <|@ <|@
      nr  576  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  578  <|@ instruction JUMP ~[] destination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B73" "B75" "B77" "B79" "B82" "B81" 
    successors "B84" "B85" 
    xhandlers
    flags 
    probability 4592437312858669387
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  582  <|@ instruction CMPCONSTBRANCH v81|DWORD trueDestinationProbability: 0.9999886211240704 condition: < trueDestination: B83 -> B84 falseDestination: B83 -> B85 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" 
    xhandlers
    flags 
    probability 4592437224411893480
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  586  <|@ instruction JUMP ~[v83|QWORD[.]] destination: B84 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B50" "B55" "B64" "B84" "B85" "B63" "B53" 
    successors "B87" "B100" 
    xhandlers
    flags 
    probability 4595548303301553864
    begin_IR
      LIR
      nr  588  <|@ instruction [v110|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  590  <|@ instruction TESTBRANCH (x: v110|QWORD[.], y: v110|QWORD[.]) trueDestinationProbability: 0.6091185940042786 condition: = trueDestination: B86 -> B87 falseDestination: B86 -> B100 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B88" 
    xhandlers
    flags 
    probability 4592437118697206803
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction JUMP ~[] destination: B87 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B35" "B87" "B43" "B44" "B41" "B39" "B37" 
    successors "B89" "B90" 
    xhandlers
    flags 
    probability 4606558935301518032
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  598  <|@ instruction INC [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  600  <|@ instruction v111|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  602  <|@ instruction v112|DWORD = ADD (x: v111|DWORD, ~y: [v0|QWORD[.] + 20]) size: DWORD <|@ <|@
      nr  604  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v112|DWORD) size: DWORD <|@ <|@
      nr  606  <|@ instruction CMPBRANCH (x: v112|DWORD, y: [v0|QWORD[.] + 28]) trueDestinationProbability: 7.853038846579175E-4 condition: > trueDestination: B88 -> B89 falseDestination: B88 -> B90 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B91" 
    xhandlers
    flags 
    probability 4606552351536966788
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  610  <|@ instruction JUMP ~[] destination: B90 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" "B89" 
    successors "B92" "B93" "B99" 
    xhandlers
    flags 
    probability 4606558935301518032
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  614  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v19|QWORD - keyConstants: [meta{HotSpotType<Ljava/util/HashMap;, resolved>}, meta{HotSpotType<Ljava/util/LinkedHashMap;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/replacements/SnippetTemplate$LRUCache;, resolved>}] keyTargets: [B91 -> B92, B91 -> B93, B91 -> B93] defaultTarget: B91 -> B99 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B97" 
    xhandlers
    flags 
    probability 4606555909645339483
    begin_IR
      LIR
      nr  616  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  618  <|@ instruction JUMP ~[] destination: B92 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B92" "B94" "B96" 
    successors 
    xhandlers
    flags 
    probability 4606558935301518031
    begin_IR
      LIR
      nr  620  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  622  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  624  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B101" "B119" 
    xhandlers
    flags 
    probability 4589652288651159933
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  628  <|@ instruction v122|DWORD[_] = MOV [v110|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  630  <|@ instruction TESTBRANCH (x: v4|DWORD, y: v4|DWORD) trueDestinationProbability: 0.9999962001170364 condition: = trueDestination: B100 -> B101 falseDestination: B100 -> B119 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B102" "B103" 
    xhandlers
    flags 
    probability 4589652269697845341
    begin_IR
      LIR
      nr  632  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  634  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B103 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B108" 
    xhandlers
    flags 
    probability 4589138949298219176
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  638  <|@ instruction JUMP ~[] destination: B102 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" "B105" 
    xhandlers
    flags 
    probability 4574630580609171603
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  642  <|@ instruction v123|QWORD[.+] = LEA [v110|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  644  <|@ instruction v124|DWORD[_] = MOV [v123|QWORD[.+]] size: DWORD <|@ <|@
      nr  646  <|@ instruction TESTBRANCH (x: v124|DWORD[_], y: v124|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B103 -> B104 falseDestination: B103 -> B105 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B106" "B107" 
    xhandlers
    flags 
    probability 4573832524763622737
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  650  <|@ instruction v125|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  652  <|@ instruction v126|QWORD[.] = UNCOMPRESSPOINTER (input: v124|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  654  <|@ instruction TESTBRANCH (x: v125|QWORD, y: v125|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B105 -> B106 falseDestination: B105 -> B107 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B108" 
    xhandlers
    flags 
    probability 4573114274502628758
    begin_IR
      LIR
      nr  656  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  658  <|@ instruction v127|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  660  <|@ instruction MOV (x: [v127|QWORD + v125|QWORD * 1 - 8], y: v126|QWORD[.]) size: QWORD <|@ <|@
      nr  662  <|@ instruction v128|QWORD = LEA [v125|QWORD - 8] size: QWORD <|@ <|@
      nr  664  <|@ instruction MOV (x: [r15|QWORD + 40], y: v128|QWORD) size: QWORD <|@ <|@
      nr  666  <|@ instruction JUMP ~[] destination: B107 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B91" 
    xhandlers
    flags 
    probability 4559880998172045651
    begin_IR
      LIR
      nr  668  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v199|QWORD[.] = MOVE v180|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  670  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v202|QWORD = STACKMOVE (input: v200|QWORD, ~backupSlot: vstack:9|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v203|QWORD[.] = MOVE v199|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  672  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:669) [bci: 288]
locals: v0|QWORD[.] - - - - v5|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.resize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:288] <|@ <|@
      nr  674  <|@ instruction v113|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  676  <|@ instruction JUMP ~[] destination: B89 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B108" 
    xhandlers
    flags 
    probability 4559523670035962382
    begin_IR
      LIR
      nr  678  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  680  <|@ instruction JUMP ~[] destination: B104 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B108" 
    xhandlers
    flags 
    probability 4558885225359523289
    begin_IR
      LIR
      nr  682  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  684  <|@ instruction rsi|QWORD[.] = MOVE v126|QWORD[.] moveKind: QWORD <|@ <|@
      nr  686  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  688  <|@ instruction JUMP ~[] destination: B106 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B102" "B104" "B107" "B106" 
    successors "B109" "B110" 
    xhandlers
    flags 
    probability 4589652269697845341
    begin_IR
      LIR
      nr  690  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  692  <|@ instruction MOV (x: [v110|QWORD[.] + 20], y: v22|DWORD[_]) size: DWORD <|@ <|@
      nr  694  <|@ instruction v129|QWORD[*] = XOR (x: v110|QWORD[.], y: v3|QWORD[.]) size: QWORD <|@ <|@
      nr  696  <|@ instruction TESTCONSTBRANCH v129|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B108 -> B109 falseDestination: B108 -> B110 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" "B112" 
    xhandlers
    flags 
    probability 4589138949298219176
    begin_IR
      LIR
      nr  698  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  700  <|@ instruction TESTBRANCH (x: v3|QWORD[.], y: v3|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B110 -> B111 falseDestination: B110 -> B112 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B113" "B114" 
    xhandlers
    flags 
    probability 4588241136471976702
    begin_IR
      LIR
      nr  702  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  704  <|@ instruction v130|QWORD[*] = SHR v110|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  706  <|@ instruction CMPCONSTBRANCH [v130|QWORD[*] + v21|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B112 -> B113 falseDestination: B112 -> B114 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B120" 
    xhandlers
    flags 
    probability 4587433104928358475
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  710  <|@ instruction JUMP ~[] destination: B113 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B120" 
    xhandlers
    flags 
    probability 4574630580609171603
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  714  <|@ instruction JUMP ~[] destination: B109 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B120" 
    xhandlers
    flags 
    probability 4573832524763622738
    begin_IR
      LIR
      nr  716  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  718  <|@ instruction JUMP ~[] destination: B111 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B115" "B116" 
    xhandlers
    flags 
    probability 4573114274502628759
    begin_IR
      LIR
      nr  720  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  722  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  724  <|@ instruction CMPCONSTBRANCH [v130|QWORD[*] + v21|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B114 -> B115 falseDestination: B114 -> B116 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B120" 
    xhandlers
    flags 
    probability 4572467849267734178
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  728  <|@ instruction JUMP ~[] destination: B115 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B117" "B118" 
    xhandlers
    flags 
    probability 4558310625150728107
    begin_IR
      LIR
      nr  730  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  732  <|@ instruction MOVB [v130|QWORD[*] + v21|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  734  <|@ instruction v131|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  736  <|@ instruction v132|QWORD[*] = ADD (x: v130|QWORD[*], y: v21|QWORD) size: QWORD <|@ <|@
      nr  738  <|@ instruction TESTBRANCH (x: v131|QWORD, y: v131|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B116 -> B117 falseDestination: B116 -> B118 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B120" 
    xhandlers
    flags 
    probability 4557793484962812442
    begin_IR
      LIR
      nr  740  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  742  <|@ instruction v133|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  744  <|@ instruction MOV (x: [v133|QWORD + v131|QWORD * 1 - 8], y: v132|QWORD[*]) size: QWORD <|@ <|@
      nr  746  <|@ instruction v134|QWORD = LEA [v131|QWORD - 8] size: QWORD <|@ <|@
      nr  748  <|@ instruction MOV (x: [r15|QWORD + 72], y: v134|QWORD) size: QWORD <|@ <|@
      nr  750  <|@ instruction JUMP ~[] destination: B118 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B94" "B95" 
    xhandlers
    flags 
    probability 4554832167497868566
    begin_IR
      LIR
      nr  752  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  754  <|@ instruction TESTBRANCH (x: v5|DWORD, y: v5|DWORD) trueDestinationProbability: 0.4891304347826087 condition: = trueDestination: B93 -> B94 falseDestination: B93 -> B95 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B96" "B98" 
    xhandlers
    flags 
    probability 4550463275345577801
    begin_IR
      LIR
      nr  756  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  758  <|@ instruction v114|DWORD[_] = MOV [v0|QWORD[.] + 52] size: DWORD <|@ <|@
      nr  760  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:670) [bci: 292]
locals: v0|QWORD[.] - - - - v5|DWORD - - - - - - - 
>@ <|@ instruction NULLCHECK [v114|DWORD[_] * 8] state [bci:292] <|@ <|@
      nr  762  <|@ instruction v115|DWORD = MOV [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  764  <|@ instruction v117|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr  766  <|@ instruction v116|QWORD = UNCOMPRESSPOINTER (input: v115|DWORD, ~baseRegister: v117|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr  768  <|@ instruction v118|QWORD = MOV [v116|QWORD + 872] size: QWORD <|@ <|@
      nr  770  <|@ instruction v119|QWORD = MOV [v118|QWORD + 64] size: QWORD <|@ <|@
      nr  772  <|@ instruction v120|QWORD[.] = UNCOMPRESSPOINTER (input: v114|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v213|QWORD[.] = MOVE v207|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  774  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v214|QWORD[.] = MOVE v120|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  776  <|@ instruction rdx|QWORD[.] = MOVE v120|QWORD[.] moveKind: QWORD <|@ <|@
      nr  778  <|@ instruction rbx|QWORD = MOVE v118|QWORD moveKind: QWORD <|@ <|@
      nr  780  <|@ instruction rax|QWORD = MOVE v119|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v216|QWORD[.] = MOVE v214|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v215|QWORD[.] = MOVE v213|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  782  <|@ st <@st|@live-base-pointers: []
java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 15]
locals: v0|QWORD[.] - v120|QWORD[.] - 
java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
locals: - - - - - - - - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<LinkedHashMap.removeEldestEntry(Map$Entry)> state [bci:15, 295] <|@ <|@
      nr  784  <|@ instruction v121|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  786  <|@ instruction TESTBRANCH (x: v121|DWORD, y: v121|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B95 -> B96 falseDestination: B95 -> B98 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B97" 
    xhandlers
    flags 
    probability 4550463275345577801
    begin_IR
      LIR
      nr  788  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  790  <|@ instruction JUMP ~[] destination: B96 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B97" 
    xhandlers
    flags 
    probability 4550193860395418340
    begin_IR
      LIR
      nr  792  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  794  <|@ instruction JUMP ~[] destination: B94 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B120" 
    xhandlers
    flags 
    probability 4543399067768740112
    begin_IR
      LIR
      nr  796  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  798  <|@ instruction rsi|QWORD = MOVE v132|QWORD[*] moveKind: QWORD <|@ <|@
      nr  800  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  802  <|@ instruction JUMP ~[] destination: B117 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B119" "B109" "B117" "B118" "B115" "B113" "B111" 
    successors 
    xhandlers
    flags 
    probability 4589652288651159933
    begin_IR
      LIR
      nr  804  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  806  <|@ instruction v135|QWORD = MOV [v19|QWORD + 688] size: QWORD <|@ <|@
      nr  808  <|@ instruction v136|QWORD = MOV [v135|QWORD + 64] size: QWORD <|@ <|@
      nr  810  <|@ instruction v137|QWORD[.] = UNCOMPRESSPOINTER (input: v122|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  812  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  814  <|@ instruction rdx|QWORD[.] = MOVE v110|QWORD[.] moveKind: QWORD <|@ <|@
      nr  816  <|@ instruction rbx|QWORD = MOVE v135|QWORD moveKind: QWORD <|@ <|@
      nr  818  <|@ instruction rax|QWORD = MOVE v136|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v220|QWORD[.] = MOVE v137|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  820  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:663) [bci: 253]
locals: - - - - - - - - - - - - v137|QWORD[.] 
>@ <|@ instruction - = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<HashMap.afterNodeAccess(HashMap$Node)> state [bci:253] <|@ <|@
      nr  822  <|@ instruction rax|QWORD[.] = MOVE v137|QWORD[.] moveKind: QWORD <|@ <|@
      nr  824  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4542678729597855531
    begin_IR
      LIR
      nr  826  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  828  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] - v12|DWORD - - - - 
>@ <|@ instruction v73|DWORD = MOV [v2|QWORD[.] + 8] size: DWORD state [bci:29] <|@ <|@
      nr  830  <|@ instruction v75|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr  832  <|@ instruction v74|QWORD = UNCOMPRESSPOINTER (input: v73|DWORD, ~baseRegister: v75|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr  834  <|@ instruction v76|QWORD = MOV [v74|QWORD + 464] size: QWORD <|@ <|@
      nr  836  <|@ instruction v77|QWORD = MOV [v76|QWORD + 64] size: QWORD <|@ <|@
      nr  838  <|@ instruction rsi|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  840  <|@ instruction rdx|QWORD[.] = MOVE v72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  842  <|@ instruction rbx|QWORD = MOVE v76|QWORD moveKind: QWORD <|@ <|@
      nr  844  <|@ instruction rax|QWORD = MOVE v77|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v224|QWORD = STACKMOVE (input: v219|QWORD, ~backupSlot: vstack:9|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v225|DWORD = STACKMOVE (input: v212|DWORD, ~backupSlot: vstack:11|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v226|QWORD = STACKMOVE (input: v211|QWORD, ~backupSlot: vstack:9|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v227|DWORD[_] = STACKMOVE (input: v209|DWORD[_], ~backupSlot: vstack:11|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v228|DWORD = STACKMOVE (input: v201|DWORD, ~backupSlot: vstack:11|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v223|QWORD[.] = STACKMOVE (input: v210|QWORD[.], ~backupSlot: vstack:9|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v221|QWORD[.] = MOVE v189|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v222|QWORD[.] = STACKMOVE (input: v156|QWORD[.], ~backupSlot: vstack:9|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  846  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:641) [bci: 91]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] v70|QWORD[.] - - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:91] <|@ <|@
      nr  848  <|@ instruction v78|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  850  <|@ instruction TESTBRANCH (x: v78|DWORD, y: v78|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B86" 
    xhandlers
    flags 
    probability 4542678729597855531
    begin_IR
      LIR
      nr  852  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  854  <|@ instruction JUMP ~[v70|QWORD[.]] destination: B53 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B63" 
    xhandlers
    flags 
    probability 4529894057192690854
    begin_IR
      LIR
      nr  856  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  858  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] v80|QWORD[.] - - - - v81|DWORD 
>@ <|@ instruction v86|DWORD = MOV [v2|QWORD[.] + 8] size: DWORD state [bci:134] <|@ <|@
      nr  860  <|@ instruction v88|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr  862  <|@ instruction v87|QWORD = UNCOMPRESSPOINTER (input: v86|DWORD, ~baseRegister: v88|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr  864  <|@ instruction v89|QWORD = MOV [v87|QWORD + 464] size: QWORD <|@ <|@
      nr  866  <|@ instruction v90|QWORD = MOV [v89|QWORD + 64] size: QWORD <|@ <|@
      nr  868  <|@ instruction rsi|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  870  <|@ instruction rdx|QWORD[.] = MOVE v85|QWORD[.] moveKind: QWORD <|@ <|@
      nr  872  <|@ instruction rbx|QWORD = MOVE v89|QWORD moveKind: QWORD <|@ <|@
      nr  874  <|@ instruction rax|QWORD = MOVE v90|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v234|QWORD[.] = MOVE v230|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  876  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:654) [bci: 203]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] - - - v83|QWORD[.] - v81|DWORD 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:203] <|@ <|@
      nr  878  <|@ instruction v91|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  880  <|@ instruction TESTBRANCH (x: v91|DWORD, y: v91|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B86" 
    xhandlers
    flags 
    probability 4529894057192690854
    begin_IR
      LIR
      nr  882  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  884  <|@ instruction JUMP ~[v83|QWORD[.]] destination: B63 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4523100981620127249
    begin_IR
      LIR
      nr  886  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  888  <|@ instruction v33|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>} <|@ <|@
      nr  890  <|@ instruction rsi|QWORD = MOVE v33|QWORD moveKind: QWORD <|@ <|@
      nr  892  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] - v12|DWORD - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7fba62ccef80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:29] <|@ <|@
      nr  894  <|@ instruction v34|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  896  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] - v12|DWORD - - - - 
>@ <|@ instruction NULLCHECK [v34|QWORD[.]] state [bci:29] <|@ <|@
      nr  898  <|@ instruction JUMP ~[v34|QWORD[.]] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" 
    xhandlers
    flags 
    probability 4518403274531071726
    begin_IR
      LIR
      nr  900  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  902  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  904  <|@ instruction rdx|QWORD[.] = MOVE v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  906  <|@ instruction rcx|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr  908  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:650) [bci: 169]
locals: v0|QWORD[.] - - v3|QWORD[.] v4|DWORD v5|DWORD - - - - v83|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<HashMap.treeifyBin(HashMap$Node[], int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:169] <|@ <|@
      nr  910  <|@ instruction JUMP ~[v83|QWORD[.]] destination: B85 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B86" 
    xhandlers
    flags 
    probability 4510226010095555986
    begin_IR
      LIR
      nr  912  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  914  <|@ instruction rsi|QWORD[.] = MOVE v70|QWORD[.] moveKind: QWORD <|@ <|@
      nr  916  <|@ instruction rdx|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  918  <|@ instruction rcx|QWORD[.] = MOVE v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  920  <|@ instruction r8|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr  922  <|@ instruction r9|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  924  <|@ instruction rdi|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  926  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:644) [bci: 123]
locals: v0|QWORD[.] - - v3|QWORD[.] v4|DWORD v5|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|QWORD[.], rdi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap$TreeNode.putTreeVal(HashMap, HashMap$Node[], int, Object, Object)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:123] <|@ <|@
      nr  928  <|@ instruction v79|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  930  <|@ instruction JUMP ~[v79|QWORD[.]] destination: B55 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B120" 
    xhandlers
    flags 
    probability 4508568125070994604
    begin_IR
      LIR
      nr  932  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  934  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:659) [bci: 222]
locals: v0|QWORD[.] - - v3|QWORD[.] v4|DWORD v5|DWORD - - - - v110|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [v122|DWORD[_] * 8] state [bci:222] <|@ <|@
      nr  936  <|@ instruction JUMP ~[] destination: B119 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  938  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  940  <|@ instruction JUMP ~[int[-51507|0xffffffffffff36cd], long[5780|0x1694]] destination: B47 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  942  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  944  <|@ instruction MOV [r15|QWORD + 1156] y: -157971 size: DWORD <|@ <|@
      nr  946  <|@ instruction MOV [r15|QWORD + 1168] y: 1300 size: QWORD <|@ <|@
      nr  948  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:654) [bci: 206]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] - - - v83|QWORD[.] - v81|DWORD 
>@ <|@ instruction DEOPT info [bci:206] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  950  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  952  <|@ instruction JUMP ~[int[-75547|0xfffffffffffed8e5], long[0|0x0]] destination: B121 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B121" "B47" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  954  <|@ instruction [v138|DWORD, v139|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  956  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v138|DWORD) size: DWORD <|@ <|@
      nr  958  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v139|QWORD) size: QWORD <|@ <|@
      nr  960  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] - v12|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:29] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  962  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  964  <|@ instruction JUMP ~[] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  966  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  968  <|@ instruction MOV [r15|QWORD + 1156] y: -61235 size: DWORD <|@ <|@
      nr  970  <|@ instruction MOV [r15|QWORD + 1168] y: 8980 size: QWORD <|@ <|@
      nr  972  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:670) [bci: 292]
locals: v0|QWORD[.] - - - - v5|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:292] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  974  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  976  <|@ instruction JUMP ~[] destination: B26 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B26" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  978  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  980  <|@ instruction MOV [r15|QWORD + 1156] y: -82987 size: DWORD <|@ <|@
      nr  982  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  984  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stack: v11|QWORD[.] v16|DWORD v38|QWORD[.] 
locals: v0|QWORD[.] - - - - v5|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:59] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  986  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  988  <|@ instruction MOV [r15|QWORD + 1156] y: -153363 size: DWORD <|@ <|@
      nr  990  <|@ instruction MOV [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  992  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:641) [bci: 94]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] v70|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:94] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  994  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  996  <|@ instruction MOV [r15|QWORD + 1156] y: -161299 size: DWORD <|@ <|@
      nr  998  <|@ instruction MOV [r15|QWORD + 1168] y: 10260 size: QWORD <|@ <|@
      nr 1000  <|@ st <@st|@live-base-pointers: []
java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 18]
stack: v121|DWORD 
locals: v0|QWORD[.] - v120|QWORD[.] - 
java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
locals: - - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:18, 295] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1002  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1004  <|@ instruction MOV [r15|QWORD + 1156] y: -129299 size: DWORD <|@ <|@
      nr 1006  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 1008  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:634) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #21         // table:java.util.HashMap$Node[]
     4: dup           
     5: astore        6
     7: ifnull        19
    10: aload         6
    12: arraylength   
    13: dup           
    14: istore        8
    16: ifne          29
    19: aload_0       
    20: invokevirtual #23         // resize:()java.util.HashMap$Node[]
    23: dup           
    24: astore        6
    26: arraylength   
    27: istore        8
    29: aload         6
    31: iload         8
    33: iconst_1      
    34: isub          
    35: iload_1       
    36: iand          
    37: dup           
    38: istore        9
    40: aaload        
    41: dup           
    42: astore        7
    44: ifnonnull     63
    47: aload         6
    49: iload         9
    51: aload_0       
    52: iload_1       
    53: aload_2       
    54: aload_3       
    55: aconst_null   
    56: invokevirtual #40         // newNode:(int, java.lang.Object, java.lang.Object, java.util.HashMap$Node)java.util.HashMap$Node
    59: aastore       
    60: goto          259
    63: aload         7
    65: getfield      #35         // java.util.HashMap$Node.hash:int
    68: iload_1       
    69: if_icmpne     104
    72: aload         7
    74: getfield      #36         // java.util.HashMap$Node.key:java.lang.Object
    77: dup           
    78: astore        11
    80: aload_2       
    81: if_acmpeq     97
    84: aload_2       
    85: ifnull        104
    88: aload_2       
    89: aload         11
    91: invokevirtual #37         // java.lang.Object.equals:(java.lang.Object)boolean
    94: ifeq          104
    97: aload         7
    99: astore        10
   101: goto          222
   104: aload         7
   106: instanceof    #180        // java.util.HashMap$TreeNode
   109: ifeq          131
   112: aload         7
   114: checkcast     #180        // java.util.HashMap$TreeNode
   117: aload_0       
   118: aload         6
   120: iload_1       
   121: aload_2       
   122: aload_3       
   123: invokevirtual #41         // java.util.HashMap$TreeNode.putTreeVal:(java.util.HashMap, java.util.HashMap$Node[], int, java.lang.Object, java.lang.Object)java.util.HashMap$TreeNode
   126: astore        10
   128: goto          222
   131: iconst_0      
   132: istore        12
   134: aload         7
   136: getfield      #38         // java.util.HashMap$Node.next:java.util.HashMap$Node
   139: dup           
   140: astore        10
   142: ifnonnull     175
   145: aload         7
   147: aload_0       
   148: iload_1       
   149: aload_2       
   150: aload_3       
   151: aconst_null   
   152: invokevirtual #40         // newNode:(int, java.lang.Object, java.lang.Object, java.util.HashMap$Node)java.util.HashMap$Node
   155: putfield      #38         // java.util.HashMap$Node.next:java.util.HashMap$Node
   158: iload         12
   160: bipush        7
   162: if_icmplt     222
   165: aload_0       
   166: aload         6
   168: iload_1       
   169: invokevirtual #42         // treeifyBin:(java.util.HashMap$Node[], int)void
   172: goto          222
   175: aload         10
   177: getfield      #35         // java.util.HashMap$Node.hash:int
   180: iload_1       
   181: if_icmpne     212
   184: aload         10
   186: getfield      #36         // java.util.HashMap$Node.key:java.lang.Object
   189: dup           
   190: astore        11
   192: aload_2       
   193: if_acmpeq     222
   196: aload_2       
   197: ifnull        212
   200: aload_2       
   201: aload         11
   203: invokevirtual #37         // java.lang.Object.equals:(java.lang.Object)boolean
   206: ifeq          212
   209: goto          222
   212: aload         10
   214: astore        7
   216: iinc          
   219: goto          134
   222: aload         10
   224: ifnull        259
   227: aload         10
   229: getfield      #34         // java.util.HashMap$Node.value:java.lang.Object
   232: astore        12
   234: iload         4
   236: ifeq          244
   239: aload         12
   241: ifnonnull     250
   244: aload         10
   246: aload_3       
   247: putfield      #34         // java.util.HashMap$Node.value:java.lang.Object
   250: aload_0       
   251: aload         10
   253: invokevirtual #43         // afterNodeAccess:(java.util.HashMap$Node)void
   256: aload         12
   258: areturn       
   259: aload_0       
   260: dup           
   261: getfield      #44         // modCount:int
   264: iconst_1      
   265: iadd          
   266: putfield      #44         // modCount:int
   269: aload_0       
   270: dup           
   271: getfield      #32         // size:int
   274: iconst_1      
   275: iadd          
   276: dup_x1        
   277: putfield      #32         // size:int
   280: aload_0       
   281: getfield      #17         // threshold:int
   284: if_icmple     292
   287: aload_0       
   288: invokevirtual #23         // resize:()java.util.HashMap$Node[]
   291: pop           
   292: aload_0       
   293: iload         5
   295: invokevirtual #45         // afterNodeInsertion:(boolean)void
   298: aconst_null   
   299: areturn       
   <|@
end_bytecodes
begin_intervals
  name "After optimize spill position"
  rax|q fixed "[rax|q]" rax|q v95|q [0, 1[[238, 242[[328, 330[[428, 430[[562, 563[[568, 569[[622, 624[[672, 674[[780, 784[[818, 821[[822, 824[[844, 848[[874, 878[[892, 894[[908, 909[[926, 928[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v2|q [0, 10[[230, 241[[428, 429[[556, 563[[568, 569[[672, 673[[782, 783[[820, 821[[846, 847[[876, 877[[906, 909[[918, 927[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- v1|d [0, 8[[228, 241[[428, 429[[554, 563[[566, 569[[672, 673[[776, 783[[814, 821[[840, 847[[870, 877[[904, 909[[916, 927[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- v94|q [0, 1[[236, 241[[428, 429[[562, 563[[568, 569[[672, 673[[778, 783[[816, 821[[842, 847[[872, 877[[908, 909[[926, 927[ "NoOptimization"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 2[[240, 241[[428, 429[[562, 563[[568, 569[[672, 673[[782, 783[[820, 821[[846, 847[[876, 877[[908, 909[[926, 927[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v0|q [0, 6[[226, 241[[326, 328[[338, 340[[426, 429[[442, 444[[514, 516[[552, 563[[564, 569[[574, 576[[670, 673[[684, 686[[774, 783[[798, 800[[812, 821[[838, 847[[868, 877[[890, 892[[902, 909[[914, 927[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- v3|q [0, 16[[240, 241[[428, 429[[562, 563[[568, 569[[672, 673[[782, 783[[820, 821[[846, 847[[876, 877[[908, 909[[924, 927[ "NoOptimization"
  r8|- fixed "[r8|-]" r8|- v3|q [0, 12[[232, 241[[428, 429[[558, 563[[568, 569[[672, 673[[782, 783[[820, 821[[846, 847[[876, 877[[908, 909[[920, 927[ "NoOptimization"
  r9|- fixed "[r9|-]" r9|- v2|q [0, 14[[234, 241[[428, 429[[560, 563[[568, 569[[672, 673[[782, 783[[820, 821[[846, 847[[876, 877[[908, 909[[922, 927[ "NoOptimization"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[240, 241[[428, 429[[562, 563[[568, 569[[672, 673[[782, 783[[820, 821[[846, 847[[876, 877[[908, 909[[926, 927[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[240, 241[[428, 429[[562, 563[[568, 569[[672, 673[[782, 783[[820, 821[[846, 847[[876, 877[[908, 909[[926, 927[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[240, 241[[428, 429[[562, 563[[568, 569[[672, 673[[782, 783[[820, 821[[846, 847[[876, 877[[908, 909[[926, 927[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[240, 241[[428, 429[[562, 563[[568, 569[[672, 673[[782, 783[[820, 821[[846, 847[[876, 877[[908, 909[[926, 927[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[240, 241[[428, 429[[562, 563[[568, 569[[672, 673[[782, 783[[820, 821[[846, 847[[876, 877[[908, 909[[926, 927[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[240, 241[[428, 429[[562, 563[[568, 569[[672, 673[[782, 783[[820, 821[[846, 847[[876, 877[[908, 909[[926, 927[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[240, 241[[428, 429[[562, 563[[568, 569[[672, 673[[782, 783[[820, 821[[846, 847[[876, 877[[908, 909[[926, 927[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[240, 241[[428, 429[[562, 563[[568, 569[[672, 673[[782, 783[[820, 821[[846, 847[[876, 877[[908, 909[[926, 927[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[240, 241[[428, 429[[562, 563[[568, 569[[672, 673[[782, 783[[820, 821[[846, 847[[876, 877[[908, 909[[926, 927[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[240, 241[[428, 429[[562, 563[[568, 569[[672, 673[[782, 783[[820, 821[[846, 847[[876, 877[[908, 909[[926, 927[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[240, 241[[428, 429[[562, 563[[568, 569[[672, 673[[782, 783[[820, 821[[846, 847[[876, 877[[908, 909[[926, 927[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[240, 241[[428, 429[[562, 563[[568, 569[[672, 673[[782, 783[[820, 821[[846, 847[[876, 877[[908, 909[[926, 927[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[240, 241[[428, 429[[562, 563[[568, 569[[672, 673[[782, 783[[820, 821[[846, 847[[876, 877[[908, 909[[926, 927[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[240, 241[[428, 429[[562, 563[[568, 569[[672, 673[[782, 783[[820, 821[[846, 847[[876, 877[[908, 909[[926, 927[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[240, 241[[428, 429[[562, 563[[568, 569[[672, 673[[782, 783[[820, 821[[846, 847[[876, 877[[908, 909[[926, 927[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[240, 241[[428, 429[[562, 563[[568, 569[[672, 673[[782, 783[[820, 821[[846, 847[[876, 877[[908, 909[[926, 927[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[240, 241[[428, 429[[562, 563[[568, 569[[672, 673[[782, 783[[820, 821[[846, 847[[876, 877[[908, 909[[926, 927[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[240, 241[[428, 429[[562, 563[[568, 569[[672, 673[[782, 783[[820, 821[[846, 847[[876, 877[[908, 909[[926, 927[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[240, 241[[428, 429[[562, 563[[568, 569[[672, 673[[782, 783[[820, 821[[846, 847[[876, 877[[908, 909[[926, 927[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[240, 241[[428, 429[[562, 563[[568, 569[[672, 673[[782, 783[[820, 821[[846, 847[[876, 877[[908, 909[[926, 927[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|- [6, 225[6 MustHaveRegister 18 MustHaveRegister 50 MustHaveRegister  "StoreAtDefinition"
  v1|d DWORD "[rdx|d]" v1|d rdx|- [8, 102[[186, 227[8 MustHaveRegister 42 ShouldHaveRegister 102 MustHaveRegister 190 MustHaveRegister 210 MustHaveRegister 219 LiveAtLoopEnd  "OneSpillStore"
  v2|q QWORD "[rcx|q]" v2|q rcx|- [10, 98[[186, 230[[278, 286[[322, 336[[412, 420[10 MustHaveRegister 98 MustHaveRegister 230 ShouldHaveRegister 284 ShouldHaveRegister 418 ShouldHaveRegister  "StoreAtDefinition"
  v3|q QWORD "[r8|q]" v3|q r8|- [12, 74[[186, 200[12 MustHaveRegister 58 MustHaveRegister  "StoreAtDefinition"
  v4|d DWORD "[r9|d]" v4|d r9|- [14, 74[[186, 220[14 MustHaveRegister  "StoreAtDefinition"
  v5|d DWORD "[rdi|d]" v5|d rdi|- [16, 220[16 MustHaveRegister  "StoreAtDefinition"
  v6|d DWORD "[rbx|d]" v6|d -1 [18, 30[18 MustHaveRegister 20 MustHaveRegister 24 MustHaveRegister 30 MustHaveRegister  "NoSpillStore"
  v7|q QWORD "[rax|q]" v7|q rax|q [430, 435[430 MustHaveRegister 432 MustHaveRegister 434 ShouldHaveRegister  "NoSpillStore"
  v8|d DWORD "[rsi|d]" v8|d -1 [432, 435[432 MustHaveRegister 434 ShouldHaveRegister  "NoSpillStore"
  v9|d DWORD "[rax|d]" v9|d v12|d [24, 33[24 MustHaveRegister 26 MustHaveRegister 32 ShouldHaveRegister  "NoSpillStore"
  v10|q QWORD "[rbx|q]" v10|q v6|d [30, 33[30 MustHaveRegister 32 ShouldHaveRegister  "NoSpillStore"
  v11|q QWORD "[rbx|q]" v11|q v10|q [34, 220[36 MustHaveRegister 38 MustHaveRegister 48 MustHaveRegister  "StoreAtDefinition"
  v12|d DWORD "[r10|d]" v12|d v9|d [34, 46[40 ShouldHaveRegister  "OneSpillStore"
  v13|d DWORD "[rax|d]" v13|d -1 [36, 44[36 MustHaveRegister 44 MustHaveRegister  "NoSpillStore"
  v14|d DWORD "[r11|d]" v14|d -1 [38, 110[[322, 336[[520, 550[38 MustHaveRegister 110 MustHaveRegister  "OneSpillStore"
  v15|d DWORD "[rbp|d]" v15|d v12|d [40, 42[40 MustHaveRegister 42 ShouldHaveRegister  "NoSpillStore"
  v16|d DWORD "[rbp|d]" v16|d v1|d [42, 66[42 MustHaveRegister 44 ShouldHaveRegister 48 MustHaveRegister  "SpillInDominator"
  v17|d DWORD "[rax|d]" v17|d -1 [48, 62[[186, 194[[412, 414[48 MustHaveRegister 60 MustHaveRegister 188 MustHaveRegister 190 MustHaveRegister 194 MustHaveRegister 414 MustHaveRegister  "NoSpillStore"
  v18|d DWORD "[r13|d]" v18|d -1 [50, 54[50 MustHaveRegister 54 MustHaveRegister  "NoSpillStore"
  v19|q QWORD "[r13|q]" v19|q v18|d [54, 239[54 MustHaveRegister 64 MustHaveRegister 222 MustHaveRegister  "StoreAtDefinition"
  v20|q QWORD "[r14|q]" v20|q -1 [52, 55[52 MustHaveRegister 54 MustHaveRegister  "NoSpillStore"
  v21|q QWORD "[r14|q]" v21|q -1 [56, 220[56 MustHaveRegister  "StoreAtDefinition"
  v22|d DWORD "[r10|d]" v22|d v3|q [58, 96[[186, 220[58 MustHaveRegister 96 MustHaveRegister  "StoreAtDefinition"
  v23|q QWORD "[rax|q]" v23|q -1 [68, 90[68 MustHaveRegister 70 MustHaveRegister 78 MustHaveRegister 80 MustHaveRegister 82 MustHaveRegister 84 MustHaveRegister 86 MustHaveRegister 88 MustHaveRegister 90 ShouldHaveRegister  "NoSpillStore"
  v24|q QWORD "[rbp|q]" v24|q -1 [70, 76[70 MustHaveRegister 72 MustHaveRegister 76 MustHaveRegister  "NoSpillStore"
  v25|q QWORD "[rsi|q]" v25|q -1 [324, 326[324 MustHaveRegister 326 ShouldHaveRegister  "NoSpillStore"
  v26|q QWORD "[rax|q]" v26|q rax|q [330, 335[330 MustHaveRegister 332 MustHaveRegister 334 ShouldHaveRegister  "NoSpillStore"
  v28|q QWORD "[rax|q]" v28|q v23|q [90, 93[90 MustHaveRegister 92 ShouldHaveRegister  "NoSpillStore"
  v29|q QWORD "[rax|q]" v29|q v28|q [94, 105[96 MustHaveRegister 100 MustHaveRegister 102 MustHaveRegister 104 ShouldHaveRegister  "NoSpillStore"
  v30|d DWORD "[rcx|d]" v30|d v2|q [98, 100[98 MustHaveRegister 100 MustHaveRegister  "NoSpillStore"
  v31|q QWORD "[rsi|q]" v31|q -1 [522, 546[522 MustHaveRegister 524 MustHaveRegister 532 MustHaveRegister 534 MustHaveRegister 536 MustHaveRegister 538 MustHaveRegister 540 MustHaveRegister 542 MustHaveRegister 544 MustHaveRegister 546 ShouldHaveRegister  "NoSpillStore"
  v32|q QWORD "[rdx|q]" v32|q -1 [524, 530[524 MustHaveRegister 526 MustHaveRegister 530 MustHaveRegister  "NoSpillStore"
  v33|q QWORD "[rsi|q]" v33|q -1 [888, 890[888 MustHaveRegister 890 ShouldHaveRegister  "NoSpillStore"
  v34|q QWORD "[rax|q]" v34|q rax|q [894, 899[894 MustHaveRegister 896 MustHaveRegister 898 ShouldHaveRegister  "NoSpillStore"
  v36|q QWORD "[rsi|q]" v36|q v31|q [546, 549[546 MustHaveRegister 548 ShouldHaveRegister  "NoSpillStore"
  v37|q QWORD "[rsi|q]" v37|q v36|q [550, 551[ "OneSpillStore"
  v38|q QWORD "[rax|q]" v38|q v29|q [106, 186[[250, 278[[318, 322[[336, 358[[962, 966[[974, 985[116 MustHaveRegister 346 MustHaveRegister 352 ShouldHaveRegister 358 MustHaveRegister  "NoSpillStore"
  v39|q QWORD "[r11|q]" v39|q v14|d [110, 112[110 MustHaveRegister 112 MustHaveRegister  "NoSpillStore"
  v40|q QWORD "[rdx|q]" v40|q -1 [108, 111[108 MustHaveRegister 110 MustHaveRegister  "NoSpillStore"
  v41|q QWORD "[rdx|q]" v41|q -1 [112, 164[[168, 170[112 MustHaveRegister 114 MustHaveRegister 124 MustHaveRegister 132 MustHaveRegister 156 MustHaveRegister 163 LiveAtLoopEnd 170 MustHaveRegister  "NoSpillStore"
  v42|d DWORD "[rcx|d]" v42|d -1 [114, 128[114 MustHaveRegister 122 ShouldHaveRegister 128 ShouldHaveRegister  "NoSpillStore"
  v43|d DWORD "[r8|d]" v43|d -1 [116, 120[116 MustHaveRegister 120 MustHaveRegister  "NoSpillStore"
  v44|q QWORD "[r8|q]" v44|q v43|d [120, 164[[168, 170[120 MustHaveRegister 124 MustHaveRegister 132 ShouldHaveRegister 136 MustHaveRegister 170 MustHaveRegister  "NoSpillStore"
  v45|q QWORD "[r9|q]" v45|q -1 [118, 121[118 MustHaveRegister 120 MustHaveRegister  "NoSpillStore"
  v46|q QWORD "[r9|q]" v46|q -1 [122, 124[122 MustHaveRegister 124 MustHaveRegister  "NoSpillStore"
  v47|q QWORD "[rcx|q]" v47|q -1 [136, 164[136 MustHaveRegister 138 MustHaveRegister 154 MustHaveRegister 163 LiveAtLoopEnd  "NoSpillStore"
  v48|d DWORD "[r9|d]" v48|d -1 [138, 164[138 MustHaveRegister 144 MustHaveRegister 163 LiveAtLoopEnd  "NoSpillStore"
  v49|d DWORD "[r10|d]" v49|d v54|d [142, 160[144 ShouldHaveRegister 148 MustHaveRegister 160 ShouldHaveRegister  "NoSpillStore"
  v50|d DWORD "[r11|d]" v50|d v49|d [148, 150[148 MustHaveRegister 150 MustHaveRegister  "NoSpillStore"
  v51|d DWORD "[r11|d]" v51|d -1 [150, 152[150 MustHaveRegister 152 ShouldHaveRegister  "NoSpillStore"
  v52|q QWORD "[r11|q]" v52|q -1 [152, 154[152 MustHaveRegister 154 MustHaveRegister  "NoSpillStore"
  v53|q QWORD "[r11|q]" v53|q -1 [154, 156[154 MustHaveRegister 156 ShouldHaveRegister  "NoSpillStore"
  v54|d DWORD "[r10|d]" v54|d v49|d [160, 163[160 MustHaveRegister 162 ShouldHaveRegister  "NoSpillStore"
  v55|q QWORD "[rsi|q]" v55|q -1 [252, 254[252 MustHaveRegister 254 MustHaveRegister  "NoSpillStore"
  v56|d DWORD "[rsi|d]" v56|d -1 [254, 262[254 MustHaveRegister 256 MustHaveRegister 262 MustHaveRegister  "NoSpillStore"
  v57|q QWORD "[r10|q]" v57|q -1 [260, 272[260 MustHaveRegister 264 MustHaveRegister 270 MustHaveRegister 272 MustHaveRegister  "NoSpillStore"
  v58|q QWORD "[rsi|q]" v58|q v56|d [262, 270[[336, 338[262 MustHaveRegister 270 MustHaveRegister 338 ShouldHaveRegister  "NoSpillStore"
  v59|q QWORD "[r11|q]" v59|q -1 [268, 270[268 MustHaveRegister 270 MustHaveRegister  "NoSpillStore"
  v60|q QWORD "[rsi|q]" v60|q -1 [272, 274[272 MustHaveRegister 274 MustHaveRegister  "NoSpillStore"
  v61|d DWORD "[rsi|d]" v61|d v38|q [346, 348[346 MustHaveRegister 348 MustHaveRegister  "NoSpillStore"
  v62|q QWORD "[rsi|q]" v62|q -1 [350, 352[350 MustHaveRegister 352 ShouldHaveRegister  "NoSpillStore"
  v63|q QWORD "[rsi|q]" v63|q v62|q [352, 354[352 MustHaveRegister 354 ShouldHaveRegister  "NoSpillStore"
  v64|q QWORD "[rsi|q]" v64|q v65|q [364, 368[[380, 386[[390, 396[364 MustHaveRegister 366 MustHaveRegister 384 MustHaveRegister 392 MustHaveRegister 396 ShouldHaveRegister  "NoSpillStore"
  v65|q QWORD "[rsi|q]" v65|q -1 [362, 364[362 MustHaveRegister 364 MustHaveRegister  "NoSpillStore"
  v66|q QWORD "[r10|q]" v66|q -1 [394, 406[394 MustHaveRegister 398 MustHaveRegister 404 MustHaveRegister 406 MustHaveRegister  "NoSpillStore"
  v67|q QWORD "[rsi|q]" v67|q v64|q [396, 404[[512, 514[396 MustHaveRegister 404 MustHaveRegister 514 ShouldHaveRegister  "NoSpillStore"
  v68|q QWORD "[r11|q]" v68|q -1 [402, 404[402 MustHaveRegister 404 MustHaveRegister  "NoSpillStore"
  v69|q QWORD "[rsi|q]" v69|q -1 [406, 408[406 MustHaveRegister 408 MustHaveRegister  "NoSpillStore"
  v70|q QWORD "[r11|q]" v70|q v17|d [188, 199[[412, 423[188 MustHaveRegister 198 ShouldHaveRegister 422 ShouldHaveRegister  "OneSpillStore"
  v71|d DWORD "[rsi|d]" v71|d -1 [414, 416[414 MustHaveRegister 416 MustHaveRegister  "NoSpillStore"
  v72|q QWORD "[r10|q]" v72|q v71|d [416, 420[416 MustHaveRegister 418 MustHaveRegister  "NoSpillStore"
  v73|d DWORD "[rsi|d]" v73|d -1 [828, 832[828 MustHaveRegister 832 MustHaveRegister  "NoSpillStore"
  v74|q QWORD "[rsi|q]" v74|q v73|d [832, 834[832 MustHaveRegister 834 MustHaveRegister  "NoSpillStore"
  v75|q QWORD "[rdx|q]" v75|q -1 [830, 833[830 MustHaveRegister 832 MustHaveRegister  "NoSpillStore"
  v76|q QWORD "[rbx|q]" v76|q -1 [834, 842[834 MustHaveRegister 836 MustHaveRegister 842 ShouldHaveRegister  "NoSpillStore"
  v77|q QWORD "[rax|q]" v77|q -1 [836, 844[836 MustHaveRegister 844 ShouldHaveRegister  "NoSpillStore"
  v78|d DWORD "[rax|d]" v78|d rax|q [848, 850[848 MustHaveRegister 850 MustHaveRegister  "NoSpillStore"
  v79|q QWORD "[rax|q]" v79|q rax|q [928, 931[928 MustHaveRegister 930 ShouldHaveRegister  "NoSpillStore"
  v80|q QWORD "[r11|q]" v80|q v70|q [200, 215[202 MustHaveRegister  "OneSpillStore"
  v81|d DWORD "[rbp|d]" v81|d v93|d [200, 216[216 ShouldHaveRegister  "OneSpillStore"
  v82|d DWORD "[rax|d]" v82|d -1 [202, 212[[278, 280[202 MustHaveRegister 204 MustHaveRegister 206 MustHaveRegister 210 MustHaveRegister 280 MustHaveRegister  "NoSpillStore"
  v83|q QWORD "[r8|q]" v83|q v82|d [204, 219[204 MustHaveRegister 218 ShouldHaveRegister  "OneSpillStore"
  v84|d DWORD "[rsi|d]" v84|d -1 [280, 282[280 MustHaveRegister 282 MustHaveRegister  "NoSpillStore"
  v85|q QWORD "[r10|q]" v85|q v84|d [282, 286[282 MustHaveRegister 284 MustHaveRegister  "NoSpillStore"
  v86|d DWORD "[rsi|d]" v86|d -1 [858, 862[858 MustHaveRegister 862 MustHaveRegister  "NoSpillStore"
  v87|q QWORD "[rsi|q]" v87|q v86|d [862, 864[862 MustHaveRegister 864 MustHaveRegister  "NoSpillStore"
  v88|q QWORD "[rdx|q]" v88|q -1 [860, 863[860 MustHaveRegister 862 MustHaveRegister  "NoSpillStore"
  v89|q QWORD "[rbx|q]" v89|q -1 [864, 872[864 MustHaveRegister 866 MustHaveRegister 872 ShouldHaveRegister  "NoSpillStore"
  v90|q QWORD "[rax|q]" v90|q -1 [866, 874[866 MustHaveRegister 874 ShouldHaveRegister  "NoSpillStore"
  v91|d DWORD "[rax|d]" v91|d rax|q [878, 880[878 MustHaveRegister 880 MustHaveRegister  "NoSpillStore"
  v92|q QWORD "[rax|q]" v92|q -1 [214, 215[214 MustHaveRegister  "NoDefinitionFound"
  v93|d DWORD "[rbp|d]" v93|d v81|d [216, 219[216 MustHaveRegister 218 ShouldHaveRegister  "NoSpillStore"
  v94|q QWORD "[r10|q]" v94|q -1 [222, 236[222 MustHaveRegister 224 MustHaveRegister 236 ShouldHaveRegister  "NoSpillStore"
  v95|q QWORD "[r11|q]" v95|q -1 [224, 238[224 MustHaveRegister 238 ShouldHaveRegister  "NoSpillStore"
  v96|q QWORD "[rax|q]" v96|q rax|q [242, 250[[290, 318[[436, 460[242 MustHaveRegister 450 MustHaveRegister 454 ShouldHaveRegister 460 MustHaveRegister  "NoSpillStore"
  v97|q QWORD "[rsi|q]" v97|q -1 [292, 294[292 MustHaveRegister 294 MustHaveRegister  "NoSpillStore"
  v98|d DWORD "[rsi|d]" v98|d -1 [294, 302[294 MustHaveRegister 296 MustHaveRegister 302 MustHaveRegister  "NoSpillStore"
  v99|q QWORD "[r10|q]" v99|q -1 [300, 312[300 MustHaveRegister 304 MustHaveRegister 310 MustHaveRegister 312 MustHaveRegister  "NoSpillStore"
  v100|q QWORD "[rsi|q]" v100|q v98|d [302, 310[[440, 442[302 MustHaveRegister 310 MustHaveRegister 442 ShouldHaveRegister  "NoSpillStore"
  v101|q QWORD "[r8|q]" v101|q -1 [308, 310[308 MustHaveRegister 310 MustHaveRegister  "NoSpillStore"
  v102|q QWORD "[rsi|q]" v102|q -1 [312, 314[312 MustHaveRegister 314 MustHaveRegister  "NoSpillStore"
  v103|d DWORD "[rsi|d]" v103|d v96|q [450, 452[450 MustHaveRegister 452 MustHaveRegister  "NoSpillStore"
  v104|q QWORD "[rsi|q]" v104|q v80|q [454, 456[454 MustHaveRegister 456 ShouldHaveRegister  "NoSpillStore"
  v105|q QWORD "[r11|q]" v105|q v80|q [464, 468[[480, 486[[490, 496[464 MustHaveRegister 466 MustHaveRegister 484 MustHaveRegister 492 MustHaveRegister 496 ShouldHaveRegister  "NoSpillStore"
  v106|q QWORD "[rsi|q]" v106|q -1 [494, 506[494 MustHaveRegister 498 MustHaveRegister 504 MustHaveRegister 506 MustHaveRegister  "NoSpillStore"
  v107|q QWORD "[r11|q]" v107|q v105|q [496, 504[[572, 574[496 MustHaveRegister 504 MustHaveRegister 574 ShouldHaveRegister  "NoSpillStore"
  v108|q QWORD "[rdx|q]" v108|q -1 [502, 504[502 MustHaveRegister 504 MustHaveRegister  "NoSpillStore"
  v109|q QWORD "[rsi|q]" v109|q -1 [506, 508[506 MustHaveRegister 508 MustHaveRegister  "NoSpillStore"
  v110|q QWORD "[r8|q]" v110|q v83|q [588, 592[[626, 668[[678, 752[[796, 814[[932, 938[590 MustHaveRegister 628 MustHaveRegister 642 MustHaveRegister 692 MustHaveRegister 694 ShouldHaveRegister 704 MustHaveRegister 814 ShouldHaveRegister  "NoSpillStore"
  v111|d DWORD "[rax|d]" v111|d -1 [600, 602[600 MustHaveRegister 602 MustHaveRegister  "NoSpillStore"
  v112|d DWORD "[rax|d]" v112|d v111|d [602, 606[602 MustHaveRegister 604 MustHaveRegister 606 MustHaveRegister  "NoSpillStore"
  v113|q QWORD "[rax|q]" v113|q rax|q [674, 675[674 MustHaveRegister  "NoSpillStore"
  v114|d DWORD "[rdx|d]" v114|d -1 [758, 772[758 MustHaveRegister 760 MustHaveRegister 772 MustHaveRegister  "NoSpillStore"
  v115|d DWORD "[rbx|d]" v115|d -1 [762, 766[762 MustHaveRegister 766 MustHaveRegister  "NoSpillStore"
  v116|q QWORD "[rbx|q]" v116|q v115|d [766, 768[766 MustHaveRegister 768 MustHaveRegister  "NoSpillStore"
  v117|q QWORD "[rax|q]" v117|q -1 [764, 767[764 MustHaveRegister 766 MustHaveRegister  "NoSpillStore"
  v118|q QWORD "[rbx|q]" v118|q -1 [768, 778[768 MustHaveRegister 770 MustHaveRegister 778 ShouldHaveRegister  "NoSpillStore"
  v119|q QWORD "[rax|q]" v119|q -1 [770, 780[770 MustHaveRegister 780 ShouldHaveRegister  "NoSpillStore"
  v120|q QWORD "[rdx|q]" v120|q v114|d [772, 775[772 MustHaveRegister  "OneSpillStore"
  v121|d DWORD "[rax|d]" v121|d rax|q [784, 788[[994, 1001[784 MustHaveRegister 786 MustHaveRegister  "NoSpillStore"
  v122|d DWORD "[r10|d]" v122|d -1 [628, 668[628 MustHaveRegister  "NoSpillStore"
  v123|q QWORD "[r11|q]" v123|q -1 [642, 644[642 MustHaveRegister 644 MustHaveRegister  "NoSpillStore"
  v124|d DWORD "[r11|d]" v124|d -1 [644, 652[644 MustHaveRegister 646 MustHaveRegister 652 MustHaveRegister  "NoSpillStore"
  v125|q QWORD "[r9|q]" v125|q -1 [650, 662[650 MustHaveRegister 654 MustHaveRegister 660 MustHaveRegister 662 MustHaveRegister  "NoSpillStore"
  v126|q QWORD "[r11|q]" v126|q v124|d [652, 660[[682, 684[652 MustHaveRegister 660 MustHaveRegister 684 ShouldHaveRegister  "NoSpillStore"
  v127|q QWORD "[rcx|q]" v127|q -1 [658, 660[658 MustHaveRegister 660 MustHaveRegister  "NoSpillStore"
  v128|q QWORD "[r11|q]" v128|q -1 [662, 664[662 MustHaveRegister 664 MustHaveRegister  "NoSpillStore"
  v129|q QWORD "[rsi|q]" v129|q v110|q [694, 696[694 MustHaveRegister 696 ShouldHaveRegister  "NoSpillStore"
  v130|q QWORD "[rsi|q]" v130|q v110|q [704, 708[[720, 726[[730, 736[704 MustHaveRegister 706 MustHaveRegister 724 MustHaveRegister 732 MustHaveRegister 736 ShouldHaveRegister  "NoSpillStore"
  v131|q QWORD "[rdx|q]" v131|q -1 [734, 746[734 MustHaveRegister 738 MustHaveRegister 744 MustHaveRegister 746 MustHaveRegister  "NoSpillStore"
  v132|q QWORD "[rsi|q]" v132|q v130|q [736, 744[[796, 798[736 MustHaveRegister 744 MustHaveRegister 798 ShouldHaveRegister  "NoSpillStore"
  v133|q QWORD "[rbx|q]" v133|q -1 [742, 744[742 MustHaveRegister 744 MustHaveRegister  "NoSpillStore"
  v134|q QWORD "[rsi|q]" v134|q -1 [746, 748[746 MustHaveRegister 748 MustHaveRegister  "NoSpillStore"
  v135|q QWORD "[rbx|q]" v135|q -1 [806, 816[806 MustHaveRegister 808 MustHaveRegister 816 ShouldHaveRegister  "NoSpillStore"
  v136|q QWORD "[rax|q]" v136|q -1 [808, 818[808 MustHaveRegister 818 ShouldHaveRegister  "NoSpillStore"
  v137|q QWORD "[r10|q]" v137|q v122|d [810, 819[810 MustHaveRegister  "OneSpillStore"
  v138|d DWORD "[r10|d]" v138|d -1 [954, 956[956 MustHaveRegister  "NoSpillStore"
  v139|q QWORD "[r11|q]" v139|q -1 [954, 958[958 MustHaveRegister  "NoSpillStore"
  v140|q QWORD "[rdi|q]" v0|q v0|q [225, 227[226 ShouldHaveRegister  "StoreAtDefinition"
  v141|d DWORD "[rdi|d]" v1|d v1|d [227, 239[228 ShouldHaveRegister  "OneSpillStore"
  v142|q QWORD "[vstack:16|q]" v2|q v2|q [424, 427[ "StoreAtDefinition"
  v143|q QWORD "[rax|q]" v3|q v3|q [231, 237[232 ShouldHaveRegister  "StoreAtDefinition"
  v144|d DWORD "[vstack:8|d]" v4|d v4|d [220, 233[ "StoreAtDefinition"
  v145|d DWORD "[vstack:5|d]" v5|d v5|d [220, 239[ "StoreAtDefinition"
  v146|q QWORD "[vstack:10|q]" v11|q v11|q [220, 235[ "StoreAtDefinition"
  v147|d DWORD "[vstack:18|d]" v14|d v14|d [550, 561[ "OneSpillStore"
  v148|d DWORD "[vstack:1|d]" v16|d v16|d [550, 561[ "SpillInDominator"
  v149|q QWORD "[vstack:15|q]" v19|q v19|q [239, 424[[436, 612[ "StoreAtDefinition"
  v150|q QWORD "[vstack:12|q]" v21|q v21|q [220, 239[ "StoreAtDefinition"
  v151|d DWORD "[vstack:3|d]" v22|d v22|d [220, 239[ "StoreAtDefinition"
  v152|d DWORD "[r8|d]" v12|d v12|d [954, 961[ "OneSpillStore"
  v153|d DWORD "[vstack:0|d]" v12|d v12|d [46, 74[[186, 192[[322, 333[[412, 420[[520, 528[[826, 829[[886, 897[[938, 942[[950, 954[ "OneSpillStore"
  v154|d DWORD "[rbp|d]" v16|d v16|d [250, 278[[318, 362[[520, 550[252 MustHaveRegister 348 MustHaveRegister 350 MustHaveRegister 362 MustHaveRegister  "SpillInDominator"
  v155|d DWORD "[vstack:1|d]" v16|d v16|d [66, 186[ "SpillInDominator"
  v156|q QWORD "[vstack:21|q]" v70|q v70|q [826, 845[ "OneSpillStore"
  v157|q QWORD "[vstack:4|q]" v80|q v80|q [220, 239[ "OneSpillStore"
  v158|d DWORD "[vstack:14|d]" v81|d v81|d [220, 239[ "OneSpillStore"
  v159|q QWORD "[vstack:7|q]" v83|q v83|q [220, 231[ "OneSpillStore"
  v160|q QWORD "[rax|q]" v3|q v3|q [220, 231[ "StoreAtDefinition"
  v161|q QWORD "[vstack:2|q]" v3|q v3|q [200, 220[ "StoreAtDefinition"
  v162|q QWORD "[vstack:10|q]" v11|q v11|q [235, 250[ "StoreAtDefinition"
  v163|q QWORD "[vstack:7|q]" v83|q v83|q [231, 250[[278, 289[[290, 318[[436, 512[[572, 587[[856, 885[[900, 911[288 ShouldHaveRegister 586 ShouldHaveRegister 884 ShouldHaveRegister 910 ShouldHaveRegister  "OneSpillStore"
  v164|q QWORD "[vstack:4|q]" v80|q v80|q [239, 250[[278, 286[ "OneSpillStore"
  v165|q QWORD "[vstack:12|q]" v21|q v21|q [239, 360[ "StoreAtDefinition"
  v166|d DWORD "[vstack:14|d]" v81|d v81|d [239, 250[[278, 286[[290, 318[[436, 512[[572, 582[[856, 882[582 ShouldHaveRegister  "OneSpillStore"
  v167|d DWORD "[vstack:8|d]" v4|d v4|d [233, 250[[278, 318[[322, 333[[412, 512[[520, 528[[572, 592[ "StoreAtDefinition"
  v168|d DWORD "[vstack:3|d]" v22|d v22|d [239, 250[[278, 318[[322, 336[[412, 424[[436, 512[[572, 592[[626, 668[[678, 690[ "StoreAtDefinition"
  v169|d DWORD "[vstack:5|d]" v5|d v5|d [239, 616[[626, 632[[668, 678[ "StoreAtDefinition"
  v170|q QWORD "[vstack:6|q]" v0|q v0|q [239, 596[426 ShouldHaveRegister 564 ShouldHaveRegister  "StoreAtDefinition"
  v171|d DWORD "[vstack:13|d]" v1|d v1|d [239, 250[[278, 286[[290, 318[[322, 336[[412, 420[[424, 512[[520, 563[[572, 584[[826, 852[[856, 882[[886, 906[[912, 920[[938, 949[[950, 961[[986, 993[554 ShouldHaveRegister 906 ShouldHaveRegister 920 ShouldHaveRegister  "OneSpillStore"
  v172|q QWORD "[vstack:6|q]" v0|q v0|q [227, 239[ "StoreAtDefinition"
  v173|q QWORD "[vstack:2|q]" v3|q v3|q [237, 250[[278, 318[[322, 333[[412, 512[[520, 563[[572, 592[[626, 668[[678, 698[558 ShouldHaveRegister 694 ShouldHaveRegister  "StoreAtDefinition"
  v174|q QWORD "[r8|q]" v83|q v83|q [942, 949[ "OneSpillStore"
  v175|d DWORD "[r9|d]" v4|d v4|d [626, 632[630 MustHaveRegister  "StoreAtDefinition"
  v176|q QWORD "[rbx|q]" v11|q v11|q [250, 286[[290, 362[[412, 420[[436, 512[[520, 550[252 MustHaveRegister 348 MustHaveRegister 350 MustHaveRegister 362 MustHaveRegister  "StoreAtDefinition"
  v177|q QWORD "[r11|q]" v3|q v3|q [698, 700[700 MustHaveRegister  "StoreAtDefinition"
  v178|q QWORD "[r11|q]" v80|q v80|q [290, 318[[436, 464[[856, 859[292 MustHaveRegister 452 MustHaveRegister 454 ShouldHaveRegister 464 MustHaveRegister  "OneSpillStore"
  v179|q QWORD "[r14|q]" v21|q v21|q [360, 368[[380, 386[[390, 396[[412, 424[[436, 512[[520, 550[366 MustHaveRegister 384 MustHaveRegister 392 MustHaveRegister 396 ShouldHaveRegister 466 MustHaveRegister 484 MustHaveRegister 492 MustHaveRegister 496 ShouldHaveRegister  "StoreAtDefinition"
  v180|q QWORD "[rsi|q]" v0|q v0|q [596, 616[[626, 669[598 MustHaveRegister 602 MustHaveRegister 604 MustHaveRegister 606 MustHaveRegister  "StoreAtDefinition"
  v181|d DWORD "[rdx|d]" v1|d v1|d [1002, 1009[ "OneSpillStore"
  v182|d DWORD "[rbp|d]" v81|d v81|d [942, 949[ "OneSpillStore"
  v183|q QWORD "[r13|q]" v19|q v19|q [612, 615[[626, 668[614 MustHaveRegister  "StoreAtDefinition"
  v184|d DWORD "[r11|d]" v22|d v22|d [690, 692[692 MustHaveRegister  "StoreAtDefinition"
  v185|d DWORD "[rdi|d]" v5|d v5|d [752, 761[754 MustHaveRegister  "StoreAtDefinition"
  v186|q QWORD "[vstack:10|q]" v11|q v11|q [550, 561[ "StoreAtDefinition"
  v187|q QWORD "[vstack:12|q]" v21|q v21|q [550, 561[ "StoreAtDefinition"
  v188|q QWORD "[vstack:16|q]" v2|q v2|q [427, 436[[520, 563[556 ShouldHaveRegister  "StoreAtDefinition"
  v189|q QWORD "[rcx|q]" v2|q v2|q [826, 845[828 MustHaveRegister 838 ShouldHaveRegister  "StoreAtDefinition"
  v190|q QWORD "[r10|q]" v37|q v37|q [551, 561[552 ShouldHaveRegister  "OneSpillStore"
  v191|q QWORD "[vstack:12|q]" v21|q v21|q [561, 592[[626, 668[[678, 702[ "StoreAtDefinition"
  v192|q QWORD "[vstack:10|q]" v11|q v11|q [561, 584[[826, 852[[856, 882[[886, 904[[912, 918[[938, 949[[950, 961[[962, 966[[974, 985[904 ShouldHaveRegister 918 ShouldHaveRegister  "StoreAtDefinition"
  v193|d DWORD "[vstack:1|d]" v16|d v16|d [561, 572[[886, 900[[962, 966[[974, 978[ "SpillInDominator"
  v194|d DWORD "[vstack:18|d]" v14|d v14|d [561, 572[[886, 900[ "OneSpillStore"
  v195|q QWORD "[vstack:17|q]" v37|q v37|q [561, 571[566 ShouldHaveRegister 570 ShouldHaveRegister  "OneSpillStore"
  v196|q QWORD "[r14|q]" v21|q v21|q [702, 708[[720, 726[[730, 736[706 MustHaveRegister 724 MustHaveRegister 732 MustHaveRegister 736 ShouldHaveRegister  "StoreAtDefinition"
  v197|q QWORD "[rbx|q]" v11|q v11|q [986, 993[ "StoreAtDefinition"
  v198|d DWORD "[rbp|d]" v16|d v16|d [978, 985[ "SpillInDominator"
  v199|q QWORD "[r10|q]" v0|q v0|q [669, 671[670 ShouldHaveRegister  "StoreAtDefinition"
  v200|q QWORD "[vstack:15|q]" v19|q v19|q [668, 671[ "StoreAtDefinition"
  v201|d DWORD "[vstack:8|d]" v4|d v4|d [826, 845[ "StoreAtDefinition"
  v202|q QWORD "[vstack:15|q]" v19|q v19|q [671, 752[[796, 804[ "StoreAtDefinition"
  v203|q QWORD "[vstack:6|q]" v0|q v0|q [671, 756[ "StoreAtDefinition"
  v204|d DWORD "[r10|d]" v122|d v122|d [678, 752[[796, 810[[932, 938[810 MustHaveRegister 934 MustHaveRegister  "NoSpillStore"
  v205|q QWORD "[r10|q]" v72|q v72|q [826, 840[840 ShouldHaveRegister  "NoSpillStore"
  v206|q QWORD "[r10|q]" v85|q v85|q [856, 870[870 ShouldHaveRegister  "NoSpillStore"
  v207|q QWORD "[rsi|q]" v0|q v0|q [756, 773[758 MustHaveRegister 762 MustHaveRegister  "StoreAtDefinition"
  v208|q QWORD "[r13|q]" v19|q v19|q [804, 806[806 MustHaveRegister  "StoreAtDefinition"
  v209|d DWORD "[vstack:3|d]" v22|d v22|d [826, 845[ "StoreAtDefinition"
  v210|q QWORD "[vstack:2|q]" v3|q v3|q [826, 845[ "StoreAtDefinition"
  v211|q QWORD "[vstack:12|q]" v21|q v21|q [826, 845[ "StoreAtDefinition"
  v212|d DWORD "[vstack:5|d]" v5|d v5|d [826, 845[ "StoreAtDefinition"
  v213|q QWORD "[r10|q]" v0|q v0|q [773, 781[774 ShouldHaveRegister  "StoreAtDefinition"
  v214|q QWORD "[r11|q]" v120|q v120|q [775, 781[776 ShouldHaveRegister  "OneSpillStore"
  v215|q QWORD "[vstack:6|q]" v0|q v0|q [781, 788[[796, 812[[826, 949[[950, 961[[962, 973[[974, 985[[986, 993[[994, 1001[812 ShouldHaveRegister 902 ShouldHaveRegister 916 ShouldHaveRegister  "StoreAtDefinition"
  v216|q QWORD "[vstack:19|q]" v120|q v120|q [781, 788[ "OneSpillStore"
  v217|q QWORD "[rsi|q]" v0|q v0|q [1002, 1009[ "StoreAtDefinition"
  v218|q QWORD "[rdx|q]" v120|q v120|q [994, 1001[ "OneSpillStore"
  v219|q QWORD "[vstack:15|q]" v19|q v19|q [826, 845[ "StoreAtDefinition"
  v220|q QWORD "[vstack:20|q]" v137|q v137|q [819, 822[822 ShouldHaveRegister  "OneSpillStore"
  v221|q QWORD "[vstack:16|q]" v2|q v2|q [845, 852[ "StoreAtDefinition"
  v222|q QWORD "[vstack:21|q]" v70|q v70|q [845, 855[[912, 914[854 ShouldHaveRegister 914 ShouldHaveRegister  "OneSpillStore"
  v223|q QWORD "[vstack:2|q]" v3|q v3|q [845, 935[[938, 949[[950, 961[[986, 993[924 ShouldHaveRegister  "StoreAtDefinition"
  v224|q QWORD "[vstack:15|q]" v19|q v19|q [845, 938[ "StoreAtDefinition"
  v225|d DWORD "[vstack:5|d]" v5|d v5|d [845, 935[[938, 949[[950, 961[[962, 973[[974, 985[[986, 993[ "StoreAtDefinition"
  v226|q QWORD "[vstack:12|q]" v21|q v21|q [845, 932[ "StoreAtDefinition"
  v227|d DWORD "[vstack:3|d]" v22|d v22|d [845, 886[[900, 932[ "StoreAtDefinition"
  v228|d DWORD "[vstack:8|d]" v4|d v4|d [845, 897[[900, 935[[938, 949[[950, 961[[986, 993[ "StoreAtDefinition"
  v229|q QWORD "[r11|q]" v70|q v70|q [986, 993[ "OneSpillStore"
  v230|q QWORD "[rcx|q]" v2|q v2|q [856, 875[858 MustHaveRegister 868 ShouldHaveRegister  "StoreAtDefinition"
  v231|q QWORD "[r8|q]" v3|q v3|q [1002, 1009[ "StoreAtDefinition"
  v232|d DWORD "[r9|d]" v4|d v4|d [1002, 1009[ "StoreAtDefinition"
  v233|d DWORD "[rdi|d]" v5|d v5|d [1002, 1009[ "StoreAtDefinition"
  v234|q QWORD "[vstack:16|q]" v2|q v2|q [875, 882[[886, 900[[912, 922[[938, 949[[950, 961[[986, 993[922 ShouldHaveRegister  "StoreAtDefinition"
  v235|q QWORD "[rcx|q]" v2|q v2|q [1002, 1009[ "StoreAtDefinition"
end_intervals
begin_cfg
  name "After LinearScanOptimizeSpillPosition"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|DWORD, rdi|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@21849dd slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction v2|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   12  <|@ instruction v3|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   14  <|@ instruction v4|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   16  <|@ instruction v5|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr   18  <|@ instruction v6|DWORD[_] = MOV [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   20  <|@ instruction TESTBRANCH (x: v6|DWORD[_], y: v6|DWORD[_]) trueDestinationProbability: 0.0015880438063265454 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607168114973028567
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   24  <|@ instruction v9|DWORD = MOV [v6|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   26  <|@ instruction TESTBRANCH (x: v9|DWORD, y: v9|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607168114973028567
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr   32  <|@ instruction JUMP ~[v10|QWORD[.], v9|DWORD] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B1" 
    successors "B6" "B121" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   34  <|@ instruction [v11|QWORD[.], v12|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   36  <|@ instruction v13|DWORD = MOV [v11|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   38  <|@ instruction v14|DWORD = MOV [v11|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   40  <|@ instruction v15|DWORD = DEC v12|DWORD size: DWORD <|@ <|@
      nr   42  <|@ instruction v16|DWORD = AND (x: v1|DWORD, y: v15|DWORD) size: DWORD <|@ <|@
      nr   44  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v16|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B121 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B48" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction v17|DWORD[_] = MOV [v11|QWORD[.] + v16|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   50  <|@ instruction v18|DWORD = MOV [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   52  <|@ instruction v20|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr   54  <|@ instruction v19|QWORD = UNCOMPRESSPOINTER (input: v18|DWORD, ~baseRegister: v20|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr   56  <|@ instruction v21|QWORD = MOVE input: long[140438306553856|0x7fba57600000] <|@ <|@
      nr   58  <|@ instruction v22|DWORD[_] = COMPRESSPOINTER (input: v3|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr   60  <|@ instruction TESTBRANCH (x: v17|DWORD[_], y: v17|DWORD[_]) trueDestinationProbability: 0.8229115724385652 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B12" "B47" 
    xhandlers
    flags 
    probability 4605587348047262798
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -2  <|@ instruction vstack:1|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr   64  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v19|QWORD - keyConstants: [meta{HotSpotType<Ljava/util/HashMap;, resolved>}, meta{HotSpotType<Ljava/util/LinkedHashMap;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/replacements/SnippetTemplate$LRUCache;, resolved>}] keyTargets: [B7 -> B8, B7 -> B12, B7 -> B12] defaultTarget: B7 -> B47 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4605585062831744793
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction v23|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   70  <|@ instruction v24|QWORD = LEA [v23|QWORD + 32] size: QWORD <|@ <|@
      nr   72  <|@ instruction CMPBRANCH (x: v24|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4605510964398880109
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction MOV (x: [r15|QWORD + 440], y: v24|QWORD) size: QWORD <|@ <|@
      nr   78  <|@ instruction AMD64PREFETCH ~[v23|QWORD + 288] instr: 0 <|@ <|@
      nr   80  <|@ instruction MOV [v23|QWORD] y: 1 size: QWORD <|@ <|@
      nr   82  <|@ instruction MOV [v23|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>;compressed} <|@ <|@
      nr   84  <|@ instruction MOV [v23|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   86  <|@ instruction MOV [v23|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   88  <|@ instruction MOV [v23|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr   90  <|@ instruction v28|QWORD[.] = MOVE v23|QWORD moveKind: QWORD <|@ <|@
      nr   92  <|@ instruction JUMP ~[v28|QWORD[.]] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 4605585062831744793
    begin_IR
      LIR
      nr   94  <|@ instruction [v29|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   96  <|@ instruction MOV (x: [v29|QWORD[.] + 20], y: v22|DWORD[_]) size: DWORD <|@ <|@
      nr   98  <|@ instruction v30|DWORD[_] = COMPRESSPOINTER (input: v2|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  100  <|@ instruction MOV (x: [v29|QWORD[.] + 16], y: v30|DWORD[_]) size: DWORD <|@ <|@
      nr  102  <|@ instruction MOV (x: [v29|QWORD[.] + 12], y: v1|DWORD) size: DWORD <|@ <|@
      nr  104  <|@ instruction JUMP ~[v29|QWORD[.]] destination: B11 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B11" "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4605587348047262798
    begin_IR
      LIR
      nr  106  <|@ instruction [v38|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  108  <|@ instruction v40|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr  110  <|@ instruction v39|QWORD = UNCOMPRESSPOINTER (input: v14|DWORD, ~baseRegister: v40|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr  112  <|@ instruction v41|QWORD = MOV [v39|QWORD + 208] size: QWORD <|@ <|@
      nr  114  <|@ instruction v42|DWORD = MOV [v41|QWORD + 20] size: DWORD <|@ <|@
      nr  116  <|@ instruction v43|DWORD = MOV [v38|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  118  <|@ instruction v45|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr  120  <|@ instruction v44|QWORD = UNCOMPRESSPOINTER (input: v43|DWORD, ~baseRegister: v45|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr  122  <|@ instruction v46|QWORD = MOVSXD v42|DWORD size: QWORD <|@ <|@
      nr  124  <|@ instruction CMPBRANCH (x: v41|QWORD, y: [v44|QWORD + v46|QWORD * 1]) trueDestinationProbability: 0.5 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B45" 
    xhandlers
    flags 
    probability 4601083748419892302
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction CMPCONSTBRANCH v42|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B45 y: 32 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4601083748419892302
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  132  <|@ instruction CMPBRANCH (x: v41|QWORD, y: v44|QWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4596580148792521806
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction v47|QWORD = MOV [v44|QWORD + 40] size: QWORD <|@ <|@
      nr  138  <|@ instruction v48|DWORD = MOV [v47|QWORD] size: DWORD <|@ <|@
      nr  140  <|@ instruction JUMP ~[int[0|0x0]] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B24" 
    successors "B23" "B26" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4602807799859017905
    begin_IR
      LIR
      nr  142  <|@ instruction [v49|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  144  <|@ instruction CMPBRANCH (x: v48|DWORD, y: v49|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602807799859017905
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction v50|DWORD = SHL v49|DWORD y: 3 size: DWORD <|@ <|@
      nr  150  <|@ instruction v51|DWORD = LEA [v50|DWORD + 8] size: DWORD <|@ <|@
      nr  152  <|@ instruction v52|QWORD = MOVSXD v51|DWORD size: QWORD <|@ <|@
      nr  154  <|@ instruction v53|QWORD = MOV [v47|QWORD + v52|QWORD * 1] size: QWORD <|@ <|@
      nr  156  <|@ instruction CMPBRANCH (x: v41|QWORD, y: v53|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B23 -> B25 falseDestination: B23 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B22" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4599230716294395707
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction v54|DWORD = INC v49|DWORD size: DWORD <|@ <|@
      nr  162  <|@ instruction JUMP ~[v54|DWORD] destination: B24 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B27" 
    xhandlers
    flags 
    probability 4601083748419892302
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction JUMP ~[] destination: B17 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B27" 
    xhandlers
    flags 
    probability 4596580148792521807
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction MOV (x: [v44|QWORD + 32], y: v41|QWORD) size: QWORD <|@ <|@
      nr  172  <|@ instruction JUMP ~[] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B27" 
    xhandlers
    flags 
    probability 4596580148792521806
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction JUMP ~[] destination: B20 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B17" "B25" "B20" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4605587348047262798
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" 
    xhandlers
    flags 
    probability 4604846135197064160
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction JUMP ~[] destination: B28 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B49" "B54" 
    xhandlers
    flags 
    probability 4595548303301553864
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction v70|QWORD[.] = UNCOMPRESSPOINTER (input: v17|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  190  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v17|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.01987559010066231 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4595421491411700642
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction CMPCONSTBRANCH [v17|DWORD[_] * 8 + 8] trueDestinationProbability: 2.021089053783065E-6 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B56 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4595421478772878611
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction JUMP ~[v70|QWORD[.], int[0|0x0]] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B62" 
    successors "B65" "B58" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4595777537596400292
    begin_IR
      LIR
      nr  200  <|@ instruction [v80|QWORD[.], v81|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  202  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] v80|QWORD[.] - - - - v81|DWORD 
>@ <|@ instruction v82|DWORD[_] = MOV [v80|QWORD[.] + 24] size: DWORD state [bci:134] <|@ <|@
      nr  204  <|@ instruction v83|QWORD[.] = UNCOMPRESSPOINTER (input: v82|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  206  <|@ instruction TESTBRANCH (x: v82|DWORD[_], y: v82|DWORD[_]) trueDestinationProbability: 0.5880075530332061 condition: = trueDestination: B57 -> B65 falseDestination: B57 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4590110563079390205
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v82|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.8692436604445373 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B62 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B57" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4576850562957400324
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] v80|QWORD[.] - - - - v81|DWORD 
>@ <|@ instruction SAFEPOINT v92|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 thread: r15 state [bci:134] <|@ <|@
      nr  216  <|@ instruction v93|DWORD = INC v81|DWORD size: DWORD <|@ <|@
      nr  218  <|@ instruction JUMP ~[v83|QWORD[.], v93|DWORD] destination: B62 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4592437312858669387
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction v94|QWORD = MOV [v19|QWORD + 680] size: QWORD <|@ <|@
      nr  224  <|@ instruction v95|QWORD = MOV [v94|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v140|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  226  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v172|QWORD[.] = MOVE v140|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v141|DWORD = MOVE v1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  228  <|@ instruction rdx|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr  230  <|@ instruction rcx|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v163|QWORD[.] = STACKMOVE (input: v159|QWORD[.], ~backupSlot: vstack:9|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v143|QWORD[.] = MOVE v160|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  232  <|@ instruction r8|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v167|DWORD = STACKMOVE (input: v144|DWORD, ~backupSlot: vstack:11|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  234  <|@ instruction r9|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction v162|QWORD[.] = STACKMOVE (input: v146|QWORD[.], ~backupSlot: vstack:9|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  236  <|@ instruction rbx|QWORD = MOVE v94|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v173|QWORD[.] = MOVE v143|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  238  <|@ instruction rax|QWORD = MOVE v95|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v169|DWORD = STACKMOVE (input: v145|DWORD, ~backupSlot: vstack:11|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v168|DWORD[_] = STACKMOVE (input: v151|DWORD[_], ~backupSlot: vstack:11|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v149|QWORD = MOVE v19|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v166|DWORD = STACKMOVE (input: v158|DWORD, ~backupSlot: vstack:11|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v171|DWORD = MOVE v141|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v170|QWORD[.] = STACKMOVE (input: v172|QWORD[.], ~backupSlot: vstack:9|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v165|QWORD = STACKMOVE (input: v150|QWORD, ~backupSlot: vstack:9|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v164|QWORD[.] = STACKMOVE (input: v157|QWORD[.], ~backupSlot: vstack:9|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  240  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:648) [bci: 152]
stack: v80|QWORD[.] 
locals: v0|QWORD[.] v1|DWORD - v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] - - - v83|QWORD[.] - v81|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.]]) [] callTarget: HotSpotMethod<HashMap.newNode(int, Object, Object, HashMap$Node)> state [bci:152] <|@ <|@
      nr  242  <|@ instruction v96|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  244  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B67 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B72" 
    xhandlers
    flags 
    probability 4591660023639118941
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction JUMP ~[] destination: B66 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4590594123464754032
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction v55|QWORD[.+] = LEA [v11|QWORD[.] + v16|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  254  <|@ instruction v56|DWORD[_] = MOV [v55|QWORD[.+]] size: DWORD <|@ <|@
      nr  256  <|@ instruction TESTBRANCH (x: v56|DWORD[_], y: v56|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4590001153184595122
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction v57|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  262  <|@ instruction v58|QWORD[.] = UNCOMPRESSPOINTER (input: v56|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  264  <|@ instruction TESTBRANCH (x: v57|QWORD, y: v57|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4589467479932452103
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction v59|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  270  <|@ instruction MOV (x: [v59|QWORD + v57|QWORD * 1 - 8], y: v58|QWORD[.]) size: QWORD <|@ <|@
      nr  272  <|@ instruction v60|QWORD = LEA [v57|QWORD - 8] size: QWORD <|@ <|@
      nr  274  <|@ instruction MOV (x: [r15|QWORD + 40], y: v60|QWORD) size: QWORD <|@ <|@
      nr  276  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B64" "B60" 
    xhandlers
    flags 
    probability 4589398445432346844
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction v84|DWORD[_] = MOV [v82|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  282  <|@ instruction v85|QWORD[.] = UNCOMPRESSPOINTER (input: v84|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  284  <|@ instruction CMPBRANCH (x: v85|QWORD[.], y: v2|QWORD[.]) trueDestinationProbability: 0.9998932466496128 condition: = trueDestination: B59 -> B64 falseDestination: B59 -> B60 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B86" 
    xhandlers
    flags 
    probability 4589397940059341918
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  288  <|@ instruction JUMP ~[v83|QWORD[.]] destination: B64 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4577371935537457006
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  292  <|@ instruction v97|QWORD[.+] = LEA [v80|QWORD[.] + 24] size: QWORD <|@ <|@
      nr  294  <|@ instruction v98|DWORD[_] = MOV [v97|QWORD[.+]] size: DWORD <|@ <|@
      nr  296  <|@ instruction TESTBRANCH (x: v98|DWORD[_], y: v98|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B67 -> B68 falseDestination: B67 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" "B71" 
    xhandlers
    flags 
    probability 4576750104161816650
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  300  <|@ instruction v99|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  302  <|@ instruction v100|QWORD[.] = UNCOMPRESSPOINTER (input: v98|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  304  <|@ instruction TESTBRANCH (x: v99|QWORD, y: v99|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    probability 4576190455923740329
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  308  <|@ instruction v101|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  310  <|@ instruction MOV (x: [v101|QWORD + v99|QWORD * 1 - 8], y: v100|QWORD[.]) size: QWORD <|@ <|@
      nr  312  <|@ instruction v102|QWORD = LEA [v99|QWORD - 8] size: QWORD <|@ <|@
      nr  314  <|@ instruction MOV (x: [r15|QWORD + 40], y: v102|QWORD) size: QWORD <|@ <|@
      nr  316  <|@ instruction JUMP ~[] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    probability 4575897384022324722
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  320  <|@ instruction JUMP ~[] destination: B30 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4575895921484393205
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction v25|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>} <|@ <|@
      nr  326  <|@ instruction rsi|QWORD = MOVE v25|QWORD moveKind: QWORD <|@ <|@
      nr  328  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] - v12|DWORD - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7fba62ccef80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:29] <|@ <|@
      nr  330  <|@ instruction v26|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  332  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] - v12|DWORD - - - - 
>@ <|@ instruction NULLCHECK [v26|QWORD[.]] state [bci:29] <|@ <|@
      nr  334  <|@ instruction JUMP ~[v26|QWORD[.]] destination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4575188794187971253
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  338  <|@ instruction rsi|QWORD[.] = MOVE v58|QWORD[.] moveKind: QWORD <|@ <|@
      nr  340  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  342  <|@ instruction JUMP ~[] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" "B33" "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4605587348047262798
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction v61|DWORD[_] = COMPRESSPOINTER (input: v38|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  348  <|@ instruction MOV (x: [v11|QWORD[.] + v16|DWORD * 4 + 16], y: v61|DWORD[_]) size: DWORD <|@ <|@
      nr  350  <|@ instruction v62|QWORD[.+] = LEA [v11|QWORD[.] + v16|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  352  <|@ instruction v63|QWORD[*] = XOR (x: v62|QWORD[.+], y: v38|QWORD[.]) size: QWORD <|@ <|@
      nr  354  <|@ instruction TESTCONSTBRANCH v63|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4604846135197064160
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  358  <|@ instruction TESTBRANCH (x: v38|QWORD[.], y: v38|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4604179043631885386
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  362  <|@ instruction v65|QWORD[.+] = LEA [v11|QWORD[.] + v16|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  364  <|@ instruction v64|QWORD[*] = SHR v65|QWORD[.+] y: 9 size: QWORD <|@ <|@
      nr  366  <|@ instruction CMPCONSTBRANCH [v64|QWORD[*] + v21|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B88" 
    xhandlers
    flags 
    probability 4603578661223224489
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction JUMP ~[] destination: B39 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B88" 
    xhandlers
    flags 
    probability 4590594123464754032
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  374  <|@ instruction JUMP ~[] destination: B35 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B88" 
    xhandlers
    flags 
    probability 4590001153184595122
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction JUMP ~[] destination: B37 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4589467479932452103
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  382  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  384  <|@ instruction CMPCONSTBRANCH [v64|QWORD[*] + v21|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B88" 
    xhandlers
    flags 
    probability 4588806327720511347
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction JUMP ~[] destination: B41 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4574334916984542422
    begin_IR
      LIR
      nr  390  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  392  <|@ instruction MOVB [v64|QWORD[*] + v21|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  394  <|@ instruction v66|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  396  <|@ instruction v67|QWORD[*] = ADD (x: v64|QWORD[*], y: v21|QWORD) size: QWORD <|@ <|@
      nr  398  <|@ instruction TESTBRANCH (x: v66|QWORD, y: v66|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B88" 
    xhandlers
    flags 
    probability 4573566427501456474
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  402  <|@ instruction v68|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  404  <|@ instruction MOV (x: [v68|QWORD + v66|QWORD * 1 - 8], y: v67|QWORD[*]) size: QWORD <|@ <|@
      nr  406  <|@ instruction v69|QWORD = LEA [v66|QWORD - 8] size: QWORD <|@ <|@
      nr  408  <|@ instruction MOV (x: [r15|QWORD + 72], y: v69|QWORD) size: QWORD <|@ <|@
      nr  410  <|@ instruction JUMP ~[] destination: B44 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4570262383476918658
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  414  <|@ instruction v71|DWORD[_] = MOV [v17|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  416  <|@ instruction v72|QWORD[.] = UNCOMPRESSPOINTER (input: v71|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  418  <|@ instruction CMPBRANCH (x: v72|QWORD[.], y: v2|QWORD[.]) trueDestinationProbability: 0.9854570809572428 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B86" 
    xhandlers
    flags 
    probability 4570144353713859813
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  422  <|@ instruction JUMP ~[v70|QWORD[.]] destination: B50 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 4564966382317228292
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  426  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v188|QWORD[.] = STACKMOVE (input: v142|QWORD[.], ~backupSlot: vstack:9|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  428  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:635) [bci: 20]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.resize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:20] <|@ <|@
      nr  430  <|@ instruction v7|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  432  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:635) [bci: 23]
stack: Object[null] 
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD - - - - - - - 
>@ <|@ instruction v8|DWORD = MOV [v7|QWORD[.] + 12] size: DWORD state [bci:23] <|@ <|@
      nr  434  <|@ instruction JUMP ~[v7|QWORD[.], v8|DWORD] destination: B1 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B72" 
    xhandlers
    flags 
    probability 4562617473904064804
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction JUMP ~[] destination: B68 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    probability 4562093595080792590
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  442  <|@ instruction rsi|QWORD[.] = MOVE v100|QWORD[.] moveKind: QWORD <|@ <|@
      nr  444  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  446  <|@ instruction JUMP ~[] destination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B66" "B68" "B71" "B70" 
    successors "B73" "B74" 
    xhandlers
    flags 
    probability 4592437312858669387
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  450  <|@ instruction v103|DWORD[_] = COMPRESSPOINTER (input: v96|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  452  <|@ instruction MOV (x: [v80|QWORD[.] + 24], y: v103|DWORD[_]) size: DWORD <|@ <|@
      nr  454  <|@ instruction v104|QWORD[*] = XOR (x: v80|QWORD[.], y: v96|QWORD[.]) size: QWORD <|@ <|@
      nr  456  <|@ instruction TESTCONSTBRANCH v104|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    probability 4591660023639118941
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  460  <|@ instruction TESTBRANCH (x: v96|QWORD[.], y: v96|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    probability 4590960463341523540
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  464  <|@ instruction v105|QWORD[*] = SHR v80|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  466  <|@ instruction CMPCONSTBRANCH [v105|QWORD[*] + v21|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B83" 
    xhandlers
    flags 
    probability 4590330859073687679
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  470  <|@ instruction JUMP ~[] destination: B77 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B83" 
    xhandlers
    flags 
    probability 4577371935537457006
    begin_IR
      LIR
      nr  472  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  474  <|@ instruction JUMP ~[] destination: B73 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B83" 
    xhandlers
    flags 
    probability 4576750104161816649
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  478  <|@ instruction JUMP ~[] destination: B75 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    probability 4576190455923740328
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  482  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  484  <|@ instruction CMPCONSTBRANCH [v105|QWORD[*] + v21|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B83" 
    xhandlers
    flags 
    probability 4575686772509471639
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  488  <|@ instruction JUMP ~[] destination: B79 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    probability 4561198157899870475
    begin_IR
      LIR
      nr  490  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  492  <|@ instruction MOVB [v105|QWORD[*] + v21|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  494  <|@ instruction v106|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  496  <|@ instruction v107|QWORD[*] = ADD (x: v105|QWORD[*], y: v21|QWORD) size: QWORD <|@ <|@
      nr  498  <|@ instruction TESTBRANCH (x: v106|QWORD, y: v106|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    probability 4560392264437040573
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  502  <|@ instruction v108|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  504  <|@ instruction MOV (x: [v108|QWORD + v106|QWORD * 1 - 8], y: v107|QWORD[*]) size: QWORD <|@ <|@
      nr  506  <|@ instruction v109|QWORD = LEA [v106|QWORD - 8] size: QWORD <|@ <|@
      nr  508  <|@ instruction MOV (x: [r15|QWORD + 72], y: v109|QWORD) size: QWORD <|@ <|@
      nr  510  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B88" 
    xhandlers
    flags 
    probability 4559287139136259037
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  514  <|@ instruction rsi|QWORD = MOVE v67|QWORD[*] moveKind: QWORD <|@ <|@
      nr  516  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  518  <|@ instruction JUMP ~[] destination: B43 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4553315745025075769
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  522  <|@ instruction v31|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  524  <|@ instruction v32|QWORD = LEA [v31|QWORD + 40] size: QWORD <|@ <|@
      nr  526  <|@ instruction CMPBRANCH (x: v32|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4553268943811267021
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  530  <|@ instruction MOV (x: [r15|QWORD + 440], y: v32|QWORD) size: QWORD <|@ <|@
      nr  532  <|@ instruction AMD64PREFETCH ~[v31|QWORD + 296] instr: 0 <|@ <|@
      nr  534  <|@ instruction MOV [v31|QWORD] y: 1 size: QWORD <|@ <|@
      nr  536  <|@ instruction MOV [v31|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>;compressed} <|@ <|@
      nr  538  <|@ instruction MOV [v31|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  540  <|@ instruction MOV [v31|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  542  <|@ instruction MOV [v31|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  544  <|@ instruction MOV [v31|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  546  <|@ instruction v36|QWORD[.] = MOVE v31|QWORD moveKind: QWORD <|@ <|@
      nr  548  <|@ instruction JUMP ~[v36|QWORD[.]] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4553315745025075769
    begin_IR
      LIR
      nr  550  <|@ instruction [v37|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v190|QWORD[.] = MOVE v37|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  552  <|@ instruction rsi|QWORD[.] = MOVE v37|QWORD[.] moveKind: QWORD <|@ <|@
      nr  554  <|@ instruction rdx|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr  556  <|@ instruction rcx|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  558  <|@ instruction r8|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  560  <|@ instruction r9|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction v193|DWORD = STACKMOVE (input: v148|DWORD, ~backupSlot: vstack:11|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v194|DWORD = STACKMOVE (input: v147|DWORD, ~backupSlot: vstack:11|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v192|QWORD[.] = STACKMOVE (input: v186|QWORD[.], ~backupSlot: vstack:9|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v191|QWORD = STACKMOVE (input: v187|QWORD, ~backupSlot: vstack:9|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v195|QWORD[.] = MOVE v190|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  562  <|@ st <@st|@live-base-pointers: []
java.util.LinkedHashMap$Entry.<init>(LinkedHashMap.java:208) [bci: 6]
locals: - - - - - 
java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 9]
stack: v37|QWORD[.] 
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] Object[null] - 
java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stack: v11|QWORD[.] v16|DWORD 
locals: v0|QWORD[.] - - - - v5|DWORD - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.]] [] callTarget: HotSpotMethod<HashMap$Node.<init>(int, Object, Object, HashMap$Node)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:6, 9, 56] <|@ <|@
      nr  564  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  566  <|@ instruction rdx|QWORD[.] = MOVE v37|QWORD[.] moveKind: QWORD <|@ <|@
      nr  568  <|@ st <@st|@live-base-pointers: []
java.util.LinkedHashMap.newNode(LinkedHashMap.java:283) [bci: 17]
locals: - - - - - v37|QWORD[.] 
java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stack: v11|QWORD[.] v16|DWORD 
locals: v0|QWORD[.] - - - - v5|DWORD - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<LinkedHashMap.linkNodeAtEnd(LinkedHashMap$Entry)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:17, 56] <|@ <|@
      nr  570  <|@ instruction JUMP ~[v37|QWORD[.]] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    probability 4546075572092099182
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  574  <|@ instruction rsi|QWORD = MOVE v107|QWORD[*] moveKind: QWORD <|@ <|@
      nr  576  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  578  <|@ instruction JUMP ~[] destination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B73" "B75" "B77" "B79" "B82" "B81" 
    successors "B84" "B85" 
    xhandlers
    flags 
    probability 4592437312858669387
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  582  <|@ instruction CMPCONSTBRANCH v81|DWORD trueDestinationProbability: 0.9999886211240704 condition: < trueDestination: B83 -> B84 falseDestination: B83 -> B85 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" 
    xhandlers
    flags 
    probability 4592437224411893480
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  586  <|@ instruction JUMP ~[v83|QWORD[.]] destination: B84 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B50" "B55" "B64" "B84" "B85" "B63" "B53" 
    successors "B87" "B100" 
    xhandlers
    flags 
    probability 4595548303301553864
    begin_IR
      LIR
      nr  588  <|@ instruction [v110|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  590  <|@ instruction TESTBRANCH (x: v110|QWORD[.], y: v110|QWORD[.]) trueDestinationProbability: 0.6091185940042786 condition: = trueDestination: B86 -> B87 falseDestination: B86 -> B100 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B88" 
    xhandlers
    flags 
    probability 4592437118697206803
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction JUMP ~[] destination: B87 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B35" "B87" "B43" "B44" "B41" "B39" "B37" 
    successors "B89" "B90" 
    xhandlers
    flags 
    probability 4606558935301518032
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  598  <|@ instruction INC [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  600  <|@ instruction v111|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  602  <|@ instruction v112|DWORD = ADD (x: v111|DWORD, ~y: [v0|QWORD[.] + 20]) size: DWORD <|@ <|@
      nr  604  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v112|DWORD) size: DWORD <|@ <|@
      nr  606  <|@ instruction CMPBRANCH (x: v112|DWORD, y: [v0|QWORD[.] + 28]) trueDestinationProbability: 7.853038846579175E-4 condition: > trueDestination: B88 -> B89 falseDestination: B88 -> B90 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B91" 
    xhandlers
    flags 
    probability 4606552351536966788
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  610  <|@ instruction JUMP ~[] destination: B90 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" "B89" 
    successors "B92" "B93" "B99" 
    xhandlers
    flags 
    probability 4606558935301518032
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  614  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v19|QWORD - keyConstants: [meta{HotSpotType<Ljava/util/HashMap;, resolved>}, meta{HotSpotType<Ljava/util/LinkedHashMap;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/replacements/SnippetTemplate$LRUCache;, resolved>}] keyTargets: [B91 -> B92, B91 -> B93, B91 -> B93] defaultTarget: B91 -> B99 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B97" 
    xhandlers
    flags 
    probability 4606555909645339483
    begin_IR
      LIR
      nr  616  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  618  <|@ instruction JUMP ~[] destination: B92 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B92" "B94" "B96" 
    successors 
    xhandlers
    flags 
    probability 4606558935301518031
    begin_IR
      LIR
      nr  620  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  622  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  624  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B101" "B119" 
    xhandlers
    flags 
    probability 4589652288651159933
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  628  <|@ instruction v122|DWORD[_] = MOV [v110|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  630  <|@ instruction TESTBRANCH (x: v4|DWORD, y: v4|DWORD) trueDestinationProbability: 0.9999962001170364 condition: = trueDestination: B100 -> B101 falseDestination: B100 -> B119 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B102" "B103" 
    xhandlers
    flags 
    probability 4589652269697845341
    begin_IR
      LIR
      nr  632  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  634  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B103 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B108" 
    xhandlers
    flags 
    probability 4589138949298219176
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  638  <|@ instruction JUMP ~[] destination: B102 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" "B105" 
    xhandlers
    flags 
    probability 4574630580609171603
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  642  <|@ instruction v123|QWORD[.+] = LEA [v110|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  644  <|@ instruction v124|DWORD[_] = MOV [v123|QWORD[.+]] size: DWORD <|@ <|@
      nr  646  <|@ instruction TESTBRANCH (x: v124|DWORD[_], y: v124|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B103 -> B104 falseDestination: B103 -> B105 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B106" "B107" 
    xhandlers
    flags 
    probability 4573832524763622737
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  650  <|@ instruction v125|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  652  <|@ instruction v126|QWORD[.] = UNCOMPRESSPOINTER (input: v124|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  654  <|@ instruction TESTBRANCH (x: v125|QWORD, y: v125|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B105 -> B106 falseDestination: B105 -> B107 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B108" 
    xhandlers
    flags 
    probability 4573114274502628758
    begin_IR
      LIR
      nr  656  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  658  <|@ instruction v127|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  660  <|@ instruction MOV (x: [v127|QWORD + v125|QWORD * 1 - 8], y: v126|QWORD[.]) size: QWORD <|@ <|@
      nr  662  <|@ instruction v128|QWORD = LEA [v125|QWORD - 8] size: QWORD <|@ <|@
      nr  664  <|@ instruction MOV (x: [r15|QWORD + 40], y: v128|QWORD) size: QWORD <|@ <|@
      nr  666  <|@ instruction JUMP ~[] destination: B107 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B91" 
    xhandlers
    flags 
    probability 4559880998172045651
    begin_IR
      LIR
      nr  668  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v199|QWORD[.] = MOVE v180|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  670  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v202|QWORD = STACKMOVE (input: v200|QWORD, ~backupSlot: vstack:9|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v203|QWORD[.] = MOVE v199|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  672  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:669) [bci: 288]
locals: v0|QWORD[.] - - - - v5|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.resize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:288] <|@ <|@
      nr  674  <|@ instruction v113|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  676  <|@ instruction JUMP ~[] destination: B89 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B108" 
    xhandlers
    flags 
    probability 4559523670035962382
    begin_IR
      LIR
      nr  678  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  680  <|@ instruction JUMP ~[] destination: B104 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B108" 
    xhandlers
    flags 
    probability 4558885225359523289
    begin_IR
      LIR
      nr  682  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  684  <|@ instruction rsi|QWORD[.] = MOVE v126|QWORD[.] moveKind: QWORD <|@ <|@
      nr  686  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  688  <|@ instruction JUMP ~[] destination: B106 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B102" "B104" "B107" "B106" 
    successors "B109" "B110" 
    xhandlers
    flags 
    probability 4589652269697845341
    begin_IR
      LIR
      nr  690  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  692  <|@ instruction MOV (x: [v110|QWORD[.] + 20], y: v22|DWORD[_]) size: DWORD <|@ <|@
      nr  694  <|@ instruction v129|QWORD[*] = XOR (x: v110|QWORD[.], y: v3|QWORD[.]) size: QWORD <|@ <|@
      nr  696  <|@ instruction TESTCONSTBRANCH v129|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B108 -> B109 falseDestination: B108 -> B110 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" "B112" 
    xhandlers
    flags 
    probability 4589138949298219176
    begin_IR
      LIR
      nr  698  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  700  <|@ instruction TESTBRANCH (x: v3|QWORD[.], y: v3|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B110 -> B111 falseDestination: B110 -> B112 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B113" "B114" 
    xhandlers
    flags 
    probability 4588241136471976702
    begin_IR
      LIR
      nr  702  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  704  <|@ instruction v130|QWORD[*] = SHR v110|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  706  <|@ instruction CMPCONSTBRANCH [v130|QWORD[*] + v21|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B112 -> B113 falseDestination: B112 -> B114 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B120" 
    xhandlers
    flags 
    probability 4587433104928358475
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  710  <|@ instruction JUMP ~[] destination: B113 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B120" 
    xhandlers
    flags 
    probability 4574630580609171603
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  714  <|@ instruction JUMP ~[] destination: B109 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B120" 
    xhandlers
    flags 
    probability 4573832524763622738
    begin_IR
      LIR
      nr  716  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  718  <|@ instruction JUMP ~[] destination: B111 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B115" "B116" 
    xhandlers
    flags 
    probability 4573114274502628759
    begin_IR
      LIR
      nr  720  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  722  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  724  <|@ instruction CMPCONSTBRANCH [v130|QWORD[*] + v21|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B114 -> B115 falseDestination: B114 -> B116 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B120" 
    xhandlers
    flags 
    probability 4572467849267734178
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  728  <|@ instruction JUMP ~[] destination: B115 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B117" "B118" 
    xhandlers
    flags 
    probability 4558310625150728107
    begin_IR
      LIR
      nr  730  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  732  <|@ instruction MOVB [v130|QWORD[*] + v21|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  734  <|@ instruction v131|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  736  <|@ instruction v132|QWORD[*] = ADD (x: v130|QWORD[*], y: v21|QWORD) size: QWORD <|@ <|@
      nr  738  <|@ instruction TESTBRANCH (x: v131|QWORD, y: v131|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B116 -> B117 falseDestination: B116 -> B118 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B120" 
    xhandlers
    flags 
    probability 4557793484962812442
    begin_IR
      LIR
      nr  740  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  742  <|@ instruction v133|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  744  <|@ instruction MOV (x: [v133|QWORD + v131|QWORD * 1 - 8], y: v132|QWORD[*]) size: QWORD <|@ <|@
      nr  746  <|@ instruction v134|QWORD = LEA [v131|QWORD - 8] size: QWORD <|@ <|@
      nr  748  <|@ instruction MOV (x: [r15|QWORD + 72], y: v134|QWORD) size: QWORD <|@ <|@
      nr  750  <|@ instruction JUMP ~[] destination: B118 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B94" "B95" 
    xhandlers
    flags 
    probability 4554832167497868566
    begin_IR
      LIR
      nr  752  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  754  <|@ instruction TESTBRANCH (x: v5|DWORD, y: v5|DWORD) trueDestinationProbability: 0.4891304347826087 condition: = trueDestination: B93 -> B94 falseDestination: B93 -> B95 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B96" "B98" 
    xhandlers
    flags 
    probability 4550463275345577801
    begin_IR
      LIR
      nr  756  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  758  <|@ instruction v114|DWORD[_] = MOV [v0|QWORD[.] + 52] size: DWORD <|@ <|@
      nr  760  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:670) [bci: 292]
locals: v0|QWORD[.] - - - - v5|DWORD - - - - - - - 
>@ <|@ instruction NULLCHECK [v114|DWORD[_] * 8] state [bci:292] <|@ <|@
      nr  762  <|@ instruction v115|DWORD = MOV [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  764  <|@ instruction v117|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr  766  <|@ instruction v116|QWORD = UNCOMPRESSPOINTER (input: v115|DWORD, ~baseRegister: v117|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr  768  <|@ instruction v118|QWORD = MOV [v116|QWORD + 872] size: QWORD <|@ <|@
      nr  770  <|@ instruction v119|QWORD = MOV [v118|QWORD + 64] size: QWORD <|@ <|@
      nr  772  <|@ instruction v120|QWORD[.] = UNCOMPRESSPOINTER (input: v114|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v213|QWORD[.] = MOVE v207|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  774  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v214|QWORD[.] = MOVE v120|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  776  <|@ instruction rdx|QWORD[.] = MOVE v120|QWORD[.] moveKind: QWORD <|@ <|@
      nr  778  <|@ instruction rbx|QWORD = MOVE v118|QWORD moveKind: QWORD <|@ <|@
      nr  780  <|@ instruction rax|QWORD = MOVE v119|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v216|QWORD[.] = MOVE v214|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v215|QWORD[.] = MOVE v213|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  782  <|@ st <@st|@live-base-pointers: []
java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 15]
locals: v0|QWORD[.] - v120|QWORD[.] - 
java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
locals: - - - - - - - - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<LinkedHashMap.removeEldestEntry(Map$Entry)> state [bci:15, 295] <|@ <|@
      nr  784  <|@ instruction v121|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  786  <|@ instruction TESTBRANCH (x: v121|DWORD, y: v121|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B95 -> B96 falseDestination: B95 -> B98 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B97" 
    xhandlers
    flags 
    probability 4550463275345577801
    begin_IR
      LIR
      nr  788  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  790  <|@ instruction JUMP ~[] destination: B96 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B97" 
    xhandlers
    flags 
    probability 4550193860395418340
    begin_IR
      LIR
      nr  792  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  794  <|@ instruction JUMP ~[] destination: B94 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B120" 
    xhandlers
    flags 
    probability 4543399067768740112
    begin_IR
      LIR
      nr  796  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  798  <|@ instruction rsi|QWORD = MOVE v132|QWORD[*] moveKind: QWORD <|@ <|@
      nr  800  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  802  <|@ instruction JUMP ~[] destination: B117 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B119" "B109" "B117" "B118" "B115" "B113" "B111" 
    successors 
    xhandlers
    flags 
    probability 4589652288651159933
    begin_IR
      LIR
      nr  804  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  806  <|@ instruction v135|QWORD = MOV [v19|QWORD + 688] size: QWORD <|@ <|@
      nr  808  <|@ instruction v136|QWORD = MOV [v135|QWORD + 64] size: QWORD <|@ <|@
      nr  810  <|@ instruction v137|QWORD[.] = UNCOMPRESSPOINTER (input: v122|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  812  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  814  <|@ instruction rdx|QWORD[.] = MOVE v110|QWORD[.] moveKind: QWORD <|@ <|@
      nr  816  <|@ instruction rbx|QWORD = MOVE v135|QWORD moveKind: QWORD <|@ <|@
      nr  818  <|@ instruction rax|QWORD = MOVE v136|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v220|QWORD[.] = MOVE v137|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  820  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:663) [bci: 253]
locals: - - - - - - - - - - - - v137|QWORD[.] 
>@ <|@ instruction - = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<HashMap.afterNodeAccess(HashMap$Node)> state [bci:253] <|@ <|@
      nr  822  <|@ instruction rax|QWORD[.] = MOVE v137|QWORD[.] moveKind: QWORD <|@ <|@
      nr  824  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4542678729597855531
    begin_IR
      LIR
      nr  826  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  828  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] - v12|DWORD - - - - 
>@ <|@ instruction v73|DWORD = MOV [v2|QWORD[.] + 8] size: DWORD state [bci:29] <|@ <|@
      nr  830  <|@ instruction v75|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr  832  <|@ instruction v74|QWORD = UNCOMPRESSPOINTER (input: v73|DWORD, ~baseRegister: v75|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr  834  <|@ instruction v76|QWORD = MOV [v74|QWORD + 464] size: QWORD <|@ <|@
      nr  836  <|@ instruction v77|QWORD = MOV [v76|QWORD + 64] size: QWORD <|@ <|@
      nr  838  <|@ instruction rsi|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  840  <|@ instruction rdx|QWORD[.] = MOVE v72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  842  <|@ instruction rbx|QWORD = MOVE v76|QWORD moveKind: QWORD <|@ <|@
      nr  844  <|@ instruction rax|QWORD = MOVE v77|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v224|QWORD = STACKMOVE (input: v219|QWORD, ~backupSlot: vstack:9|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v225|DWORD = STACKMOVE (input: v212|DWORD, ~backupSlot: vstack:11|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v226|QWORD = STACKMOVE (input: v211|QWORD, ~backupSlot: vstack:9|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v227|DWORD[_] = STACKMOVE (input: v209|DWORD[_], ~backupSlot: vstack:11|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v228|DWORD = STACKMOVE (input: v201|DWORD, ~backupSlot: vstack:11|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v223|QWORD[.] = STACKMOVE (input: v210|QWORD[.], ~backupSlot: vstack:9|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v221|QWORD[.] = MOVE v189|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v222|QWORD[.] = STACKMOVE (input: v156|QWORD[.], ~backupSlot: vstack:9|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  846  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:641) [bci: 91]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] v70|QWORD[.] - - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:91] <|@ <|@
      nr  848  <|@ instruction v78|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  850  <|@ instruction TESTBRANCH (x: v78|DWORD, y: v78|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B86" 
    xhandlers
    flags 
    probability 4542678729597855531
    begin_IR
      LIR
      nr  852  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  854  <|@ instruction JUMP ~[v70|QWORD[.]] destination: B53 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B63" 
    xhandlers
    flags 
    probability 4529894057192690854
    begin_IR
      LIR
      nr  856  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  858  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] v80|QWORD[.] - - - - v81|DWORD 
>@ <|@ instruction v86|DWORD = MOV [v2|QWORD[.] + 8] size: DWORD state [bci:134] <|@ <|@
      nr  860  <|@ instruction v88|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr  862  <|@ instruction v87|QWORD = UNCOMPRESSPOINTER (input: v86|DWORD, ~baseRegister: v88|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr  864  <|@ instruction v89|QWORD = MOV [v87|QWORD + 464] size: QWORD <|@ <|@
      nr  866  <|@ instruction v90|QWORD = MOV [v89|QWORD + 64] size: QWORD <|@ <|@
      nr  868  <|@ instruction rsi|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  870  <|@ instruction rdx|QWORD[.] = MOVE v85|QWORD[.] moveKind: QWORD <|@ <|@
      nr  872  <|@ instruction rbx|QWORD = MOVE v89|QWORD moveKind: QWORD <|@ <|@
      nr  874  <|@ instruction rax|QWORD = MOVE v90|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v234|QWORD[.] = MOVE v230|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  876  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:654) [bci: 203]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] - - - v83|QWORD[.] - v81|DWORD 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:203] <|@ <|@
      nr  878  <|@ instruction v91|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  880  <|@ instruction TESTBRANCH (x: v91|DWORD, y: v91|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B86" 
    xhandlers
    flags 
    probability 4529894057192690854
    begin_IR
      LIR
      nr  882  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  884  <|@ instruction JUMP ~[v83|QWORD[.]] destination: B63 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4523100981620127249
    begin_IR
      LIR
      nr  886  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  888  <|@ instruction v33|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>} <|@ <|@
      nr  890  <|@ instruction rsi|QWORD = MOVE v33|QWORD moveKind: QWORD <|@ <|@
      nr  892  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] - v12|DWORD - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7fba62ccef80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:29] <|@ <|@
      nr  894  <|@ instruction v34|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  896  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] - v12|DWORD - - - - 
>@ <|@ instruction NULLCHECK [v34|QWORD[.]] state [bci:29] <|@ <|@
      nr  898  <|@ instruction JUMP ~[v34|QWORD[.]] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" 
    xhandlers
    flags 
    probability 4518403274531071726
    begin_IR
      LIR
      nr  900  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  902  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  904  <|@ instruction rdx|QWORD[.] = MOVE v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  906  <|@ instruction rcx|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr  908  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:650) [bci: 169]
locals: v0|QWORD[.] - - v3|QWORD[.] v4|DWORD v5|DWORD - - - - v83|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<HashMap.treeifyBin(HashMap$Node[], int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:169] <|@ <|@
      nr  910  <|@ instruction JUMP ~[v83|QWORD[.]] destination: B85 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B86" 
    xhandlers
    flags 
    probability 4510226010095555986
    begin_IR
      LIR
      nr  912  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  914  <|@ instruction rsi|QWORD[.] = MOVE v70|QWORD[.] moveKind: QWORD <|@ <|@
      nr  916  <|@ instruction rdx|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  918  <|@ instruction rcx|QWORD[.] = MOVE v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  920  <|@ instruction r8|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr  922  <|@ instruction r9|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  924  <|@ instruction rdi|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  926  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:644) [bci: 123]
locals: v0|QWORD[.] - - v3|QWORD[.] v4|DWORD v5|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|QWORD[.], rdi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap$TreeNode.putTreeVal(HashMap, HashMap$Node[], int, Object, Object)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:123] <|@ <|@
      nr  928  <|@ instruction v79|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  930  <|@ instruction JUMP ~[v79|QWORD[.]] destination: B55 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B120" 
    xhandlers
    flags 
    probability 4508568125070994604
    begin_IR
      LIR
      nr  932  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  934  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:659) [bci: 222]
locals: v0|QWORD[.] - - v3|QWORD[.] v4|DWORD v5|DWORD - - - - v110|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [v122|DWORD[_] * 8] state [bci:222] <|@ <|@
      nr  936  <|@ instruction JUMP ~[] destination: B119 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  938  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  940  <|@ instruction JUMP ~[int[-51507|0xffffffffffff36cd], long[5780|0x1694]] destination: B47 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  942  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  944  <|@ instruction MOV [r15|QWORD + 1156] y: -157971 size: DWORD <|@ <|@
      nr  946  <|@ instruction MOV [r15|QWORD + 1168] y: 1300 size: QWORD <|@ <|@
      nr  948  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:654) [bci: 206]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] - - - v83|QWORD[.] - v81|DWORD 
>@ <|@ instruction DEOPT info [bci:206] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  950  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  952  <|@ instruction JUMP ~[int[-75547|0xfffffffffffed8e5], long[0|0x0]] destination: B121 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B121" "B47" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  954  <|@ instruction [v138|DWORD, v139|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  956  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v138|DWORD) size: DWORD <|@ <|@
      nr  958  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v139|QWORD) size: QWORD <|@ <|@
      nr  960  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] - v12|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:29] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  962  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  964  <|@ instruction JUMP ~[] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  966  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  968  <|@ instruction MOV [r15|QWORD + 1156] y: -61235 size: DWORD <|@ <|@
      nr  970  <|@ instruction MOV [r15|QWORD + 1168] y: 8980 size: QWORD <|@ <|@
      nr  972  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:670) [bci: 292]
locals: v0|QWORD[.] - - - - v5|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:292] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  974  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  976  <|@ instruction JUMP ~[] destination: B26 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B26" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  978  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  980  <|@ instruction MOV [r15|QWORD + 1156] y: -82987 size: DWORD <|@ <|@
      nr  982  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  984  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stack: v11|QWORD[.] v16|DWORD v38|QWORD[.] 
locals: v0|QWORD[.] - - - - v5|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:59] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  986  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  988  <|@ instruction MOV [r15|QWORD + 1156] y: -153363 size: DWORD <|@ <|@
      nr  990  <|@ instruction MOV [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  992  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:641) [bci: 94]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] v70|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:94] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  994  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  996  <|@ instruction MOV [r15|QWORD + 1156] y: -161299 size: DWORD <|@ <|@
      nr  998  <|@ instruction MOV [r15|QWORD + 1168] y: 10260 size: QWORD <|@ <|@
      nr 1000  <|@ st <@st|@live-base-pointers: []
java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 18]
stack: v121|DWORD 
locals: v0|QWORD[.] - v120|QWORD[.] - 
java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
locals: - - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:18, 295] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1002  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1004  <|@ instruction MOV [r15|QWORD + 1156] y: -129299 size: DWORD <|@ <|@
      nr 1006  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 1008  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:634) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #21         // table:java.util.HashMap$Node[]
     4: dup           
     5: astore        6
     7: ifnull        19
    10: aload         6
    12: arraylength   
    13: dup           
    14: istore        8
    16: ifne          29
    19: aload_0       
    20: invokevirtual #23         // resize:()java.util.HashMap$Node[]
    23: dup           
    24: astore        6
    26: arraylength   
    27: istore        8
    29: aload         6
    31: iload         8
    33: iconst_1      
    34: isub          
    35: iload_1       
    36: iand          
    37: dup           
    38: istore        9
    40: aaload        
    41: dup           
    42: astore        7
    44: ifnonnull     63
    47: aload         6
    49: iload         9
    51: aload_0       
    52: iload_1       
    53: aload_2       
    54: aload_3       
    55: aconst_null   
    56: invokevirtual #40         // newNode:(int, java.lang.Object, java.lang.Object, java.util.HashMap$Node)java.util.HashMap$Node
    59: aastore       
    60: goto          259
    63: aload         7
    65: getfield      #35         // java.util.HashMap$Node.hash:int
    68: iload_1       
    69: if_icmpne     104
    72: aload         7
    74: getfield      #36         // java.util.HashMap$Node.key:java.lang.Object
    77: dup           
    78: astore        11
    80: aload_2       
    81: if_acmpeq     97
    84: aload_2       
    85: ifnull        104
    88: aload_2       
    89: aload         11
    91: invokevirtual #37         // java.lang.Object.equals:(java.lang.Object)boolean
    94: ifeq          104
    97: aload         7
    99: astore        10
   101: goto          222
   104: aload         7
   106: instanceof    #180        // java.util.HashMap$TreeNode
   109: ifeq          131
   112: aload         7
   114: checkcast     #180        // java.util.HashMap$TreeNode
   117: aload_0       
   118: aload         6
   120: iload_1       
   121: aload_2       
   122: aload_3       
   123: invokevirtual #41         // java.util.HashMap$TreeNode.putTreeVal:(java.util.HashMap, java.util.HashMap$Node[], int, java.lang.Object, java.lang.Object)java.util.HashMap$TreeNode
   126: astore        10
   128: goto          222
   131: iconst_0      
   132: istore        12
   134: aload         7
   136: getfield      #38         // java.util.HashMap$Node.next:java.util.HashMap$Node
   139: dup           
   140: astore        10
   142: ifnonnull     175
   145: aload         7
   147: aload_0       
   148: iload_1       
   149: aload_2       
   150: aload_3       
   151: aconst_null   
   152: invokevirtual #40         // newNode:(int, java.lang.Object, java.lang.Object, java.util.HashMap$Node)java.util.HashMap$Node
   155: putfield      #38         // java.util.HashMap$Node.next:java.util.HashMap$Node
   158: iload         12
   160: bipush        7
   162: if_icmplt     222
   165: aload_0       
   166: aload         6
   168: iload_1       
   169: invokevirtual #42         // treeifyBin:(java.util.HashMap$Node[], int)void
   172: goto          222
   175: aload         10
   177: getfield      #35         // java.util.HashMap$Node.hash:int
   180: iload_1       
   181: if_icmpne     212
   184: aload         10
   186: getfield      #36         // java.util.HashMap$Node.key:java.lang.Object
   189: dup           
   190: astore        11
   192: aload_2       
   193: if_acmpeq     222
   196: aload_2       
   197: ifnull        212
   200: aload_2       
   201: aload         11
   203: invokevirtual #37         // java.lang.Object.equals:(java.lang.Object)boolean
   206: ifeq          212
   209: goto          222
   212: aload         10
   214: astore        7
   216: iinc          
   219: goto          134
   222: aload         10
   224: ifnull        259
   227: aload         10
   229: getfield      #34         // java.util.HashMap$Node.value:java.lang.Object
   232: astore        12
   234: iload         4
   236: ifeq          244
   239: aload         12
   241: ifnonnull     250
   244: aload         10
   246: aload_3       
   247: putfield      #34         // java.util.HashMap$Node.value:java.lang.Object
   250: aload_0       
   251: aload         10
   253: invokevirtual #43         // afterNodeAccess:(java.util.HashMap$Node)void
   256: aload         12
   258: areturn       
   259: aload_0       
   260: dup           
   261: getfield      #44         // modCount:int
   264: iconst_1      
   265: iadd          
   266: putfield      #44         // modCount:int
   269: aload_0       
   270: dup           
   271: getfield      #32         // size:int
   274: iconst_1      
   275: iadd          
   276: dup_x1        
   277: putfield      #32         // size:int
   280: aload_0       
   281: getfield      #17         // threshold:int
   284: if_icmple     292
   287: aload_0       
   288: invokevirtual #23         // resize:()java.util.HashMap$Node[]
   291: pop           
   292: aload_0       
   293: iload         5
   295: invokevirtual #45         // afterNodeInsertion:(boolean)void
   298: aconst_null   
   299: areturn       
   <|@
end_bytecodes
begin_intervals
  name "After resolve data flow"
  rax|q fixed "[rax|q]" rax|q v95|q [0, 1[[238, 242[[328, 330[[428, 430[[562, 563[[568, 569[[622, 624[[672, 674[[780, 784[[818, 821[[822, 824[[844, 848[[874, 878[[892, 894[[908, 909[[926, 928[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v2|q [0, 10[[230, 241[[428, 429[[556, 563[[568, 569[[672, 673[[782, 783[[820, 821[[846, 847[[876, 877[[906, 909[[918, 927[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- v1|d [0, 8[[228, 241[[428, 429[[554, 563[[566, 569[[672, 673[[776, 783[[814, 821[[840, 847[[870, 877[[904, 909[[916, 927[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- v94|q [0, 1[[236, 241[[428, 429[[562, 563[[568, 569[[672, 673[[778, 783[[816, 821[[842, 847[[872, 877[[908, 909[[926, 927[ "NoOptimization"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 2[[240, 241[[428, 429[[562, 563[[568, 569[[672, 673[[782, 783[[820, 821[[846, 847[[876, 877[[908, 909[[926, 927[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v0|q [0, 6[[226, 241[[326, 328[[338, 340[[426, 429[[442, 444[[514, 516[[552, 563[[564, 569[[574, 576[[670, 673[[684, 686[[774, 783[[798, 800[[812, 821[[838, 847[[868, 877[[890, 892[[902, 909[[914, 927[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- v3|q [0, 16[[240, 241[[428, 429[[562, 563[[568, 569[[672, 673[[782, 783[[820, 821[[846, 847[[876, 877[[908, 909[[924, 927[ "NoOptimization"
  r8|- fixed "[r8|-]" r8|- v3|q [0, 12[[232, 241[[428, 429[[558, 563[[568, 569[[672, 673[[782, 783[[820, 821[[846, 847[[876, 877[[908, 909[[920, 927[ "NoOptimization"
  r9|- fixed "[r9|-]" r9|- v2|q [0, 14[[234, 241[[428, 429[[560, 563[[568, 569[[672, 673[[782, 783[[820, 821[[846, 847[[876, 877[[908, 909[[922, 927[ "NoOptimization"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[240, 241[[428, 429[[562, 563[[568, 569[[672, 673[[782, 783[[820, 821[[846, 847[[876, 877[[908, 909[[926, 927[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[240, 241[[428, 429[[562, 563[[568, 569[[672, 673[[782, 783[[820, 821[[846, 847[[876, 877[[908, 909[[926, 927[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[240, 241[[428, 429[[562, 563[[568, 569[[672, 673[[782, 783[[820, 821[[846, 847[[876, 877[[908, 909[[926, 927[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[240, 241[[428, 429[[562, 563[[568, 569[[672, 673[[782, 783[[820, 821[[846, 847[[876, 877[[908, 909[[926, 927[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[240, 241[[428, 429[[562, 563[[568, 569[[672, 673[[782, 783[[820, 821[[846, 847[[876, 877[[908, 909[[926, 927[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[240, 241[[428, 429[[562, 563[[568, 569[[672, 673[[782, 783[[820, 821[[846, 847[[876, 877[[908, 909[[926, 927[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[240, 241[[428, 429[[562, 563[[568, 569[[672, 673[[782, 783[[820, 821[[846, 847[[876, 877[[908, 909[[926, 927[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[240, 241[[428, 429[[562, 563[[568, 569[[672, 673[[782, 783[[820, 821[[846, 847[[876, 877[[908, 909[[926, 927[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[240, 241[[428, 429[[562, 563[[568, 569[[672, 673[[782, 783[[820, 821[[846, 847[[876, 877[[908, 909[[926, 927[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[240, 241[[428, 429[[562, 563[[568, 569[[672, 673[[782, 783[[820, 821[[846, 847[[876, 877[[908, 909[[926, 927[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[240, 241[[428, 429[[562, 563[[568, 569[[672, 673[[782, 783[[820, 821[[846, 847[[876, 877[[908, 909[[926, 927[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[240, 241[[428, 429[[562, 563[[568, 569[[672, 673[[782, 783[[820, 821[[846, 847[[876, 877[[908, 909[[926, 927[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[240, 241[[428, 429[[562, 563[[568, 569[[672, 673[[782, 783[[820, 821[[846, 847[[876, 877[[908, 909[[926, 927[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[240, 241[[428, 429[[562, 563[[568, 569[[672, 673[[782, 783[[820, 821[[846, 847[[876, 877[[908, 909[[926, 927[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[240, 241[[428, 429[[562, 563[[568, 569[[672, 673[[782, 783[[820, 821[[846, 847[[876, 877[[908, 909[[926, 927[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[240, 241[[428, 429[[562, 563[[568, 569[[672, 673[[782, 783[[820, 821[[846, 847[[876, 877[[908, 909[[926, 927[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[240, 241[[428, 429[[562, 563[[568, 569[[672, 673[[782, 783[[820, 821[[846, 847[[876, 877[[908, 909[[926, 927[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[240, 241[[428, 429[[562, 563[[568, 569[[672, 673[[782, 783[[820, 821[[846, 847[[876, 877[[908, 909[[926, 927[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[240, 241[[428, 429[[562, 563[[568, 569[[672, 673[[782, 783[[820, 821[[846, 847[[876, 877[[908, 909[[926, 927[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[240, 241[[428, 429[[562, 563[[568, 569[[672, 673[[782, 783[[820, 821[[846, 847[[876, 877[[908, 909[[926, 927[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|- [6, 225[6 MustHaveRegister 18 MustHaveRegister 50 MustHaveRegister  "StoreAtDefinition"
  v1|d DWORD "[rdx|d]" v1|d rdx|- [8, 102[[186, 227[8 MustHaveRegister 42 ShouldHaveRegister 102 MustHaveRegister 190 MustHaveRegister 210 MustHaveRegister 219 LiveAtLoopEnd  "OneSpillStore"
  v2|q QWORD "[rcx|q]" v2|q rcx|- [10, 98[[186, 230[[278, 286[[322, 336[[412, 420[10 MustHaveRegister 98 MustHaveRegister 230 ShouldHaveRegister 284 ShouldHaveRegister 418 ShouldHaveRegister  "StoreAtDefinition"
  v3|q QWORD "[r8|q]" v3|q r8|- [12, 74[[186, 200[12 MustHaveRegister 58 MustHaveRegister  "StoreAtDefinition"
  v4|d DWORD "[r9|d]" v4|d r9|- [14, 74[[186, 220[14 MustHaveRegister  "StoreAtDefinition"
  v5|d DWORD "[rdi|d]" v5|d rdi|- [16, 220[16 MustHaveRegister  "StoreAtDefinition"
  v6|d DWORD "[rbx|d]" v6|d -1 [18, 30[18 MustHaveRegister 20 MustHaveRegister 24 MustHaveRegister 30 MustHaveRegister  "NoSpillStore"
  v7|q QWORD "[rax|q]" v7|q rax|q [430, 435[430 MustHaveRegister 432 MustHaveRegister 434 ShouldHaveRegister  "NoSpillStore"
  v8|d DWORD "[rsi|d]" v8|d -1 [432, 435[432 MustHaveRegister 434 ShouldHaveRegister  "NoSpillStore"
  v9|d DWORD "[rax|d]" v9|d v12|d [24, 33[24 MustHaveRegister 26 MustHaveRegister 32 ShouldHaveRegister  "NoSpillStore"
  v10|q QWORD "[rbx|q]" v10|q v6|d [30, 33[30 MustHaveRegister 32 ShouldHaveRegister  "NoSpillStore"
  v11|q QWORD "[rbx|q]" v11|q v10|q [34, 220[36 MustHaveRegister 38 MustHaveRegister 48 MustHaveRegister  "StoreAtDefinition"
  v12|d DWORD "[r10|d]" v12|d v9|d [34, 46[40 ShouldHaveRegister  "OneSpillStore"
  v13|d DWORD "[rax|d]" v13|d -1 [36, 44[36 MustHaveRegister 44 MustHaveRegister  "NoSpillStore"
  v14|d DWORD "[r11|d]" v14|d -1 [38, 110[[322, 336[[520, 550[38 MustHaveRegister 110 MustHaveRegister  "OneSpillStore"
  v15|d DWORD "[rbp|d]" v15|d v12|d [40, 42[40 MustHaveRegister 42 ShouldHaveRegister  "NoSpillStore"
  v16|d DWORD "[rbp|d]" v16|d v1|d [42, 66[42 MustHaveRegister 44 ShouldHaveRegister 48 MustHaveRegister  "SpillInDominator"
  v17|d DWORD "[rax|d]" v17|d -1 [48, 62[[186, 194[[412, 414[48 MustHaveRegister 60 MustHaveRegister 188 MustHaveRegister 190 MustHaveRegister 194 MustHaveRegister 414 MustHaveRegister  "NoSpillStore"
  v18|d DWORD "[r13|d]" v18|d -1 [50, 54[50 MustHaveRegister 54 MustHaveRegister  "NoSpillStore"
  v19|q QWORD "[r13|q]" v19|q v18|d [54, 239[54 MustHaveRegister 64 MustHaveRegister 222 MustHaveRegister  "StoreAtDefinition"
  v20|q QWORD "[r14|q]" v20|q -1 [52, 55[52 MustHaveRegister 54 MustHaveRegister  "NoSpillStore"
  v21|q QWORD "[r14|q]" v21|q -1 [56, 220[56 MustHaveRegister  "StoreAtDefinition"
  v22|d DWORD "[r10|d]" v22|d v3|q [58, 96[[186, 220[58 MustHaveRegister 96 MustHaveRegister  "StoreAtDefinition"
  v23|q QWORD "[rax|q]" v23|q -1 [68, 90[68 MustHaveRegister 70 MustHaveRegister 78 MustHaveRegister 80 MustHaveRegister 82 MustHaveRegister 84 MustHaveRegister 86 MustHaveRegister 88 MustHaveRegister 90 ShouldHaveRegister  "NoSpillStore"
  v24|q QWORD "[rbp|q]" v24|q -1 [70, 76[70 MustHaveRegister 72 MustHaveRegister 76 MustHaveRegister  "NoSpillStore"
  v25|q QWORD "[rsi|q]" v25|q -1 [324, 326[324 MustHaveRegister 326 ShouldHaveRegister  "NoSpillStore"
  v26|q QWORD "[rax|q]" v26|q rax|q [330, 335[330 MustHaveRegister 332 MustHaveRegister 334 ShouldHaveRegister  "NoSpillStore"
  v28|q QWORD "[rax|q]" v28|q v23|q [90, 93[90 MustHaveRegister 92 ShouldHaveRegister  "NoSpillStore"
  v29|q QWORD "[rax|q]" v29|q v28|q [94, 105[96 MustHaveRegister 100 MustHaveRegister 102 MustHaveRegister 104 ShouldHaveRegister  "NoSpillStore"
  v30|d DWORD "[rcx|d]" v30|d v2|q [98, 100[98 MustHaveRegister 100 MustHaveRegister  "NoSpillStore"
  v31|q QWORD "[rsi|q]" v31|q -1 [522, 546[522 MustHaveRegister 524 MustHaveRegister 532 MustHaveRegister 534 MustHaveRegister 536 MustHaveRegister 538 MustHaveRegister 540 MustHaveRegister 542 MustHaveRegister 544 MustHaveRegister 546 ShouldHaveRegister  "NoSpillStore"
  v32|q QWORD "[rdx|q]" v32|q -1 [524, 530[524 MustHaveRegister 526 MustHaveRegister 530 MustHaveRegister  "NoSpillStore"
  v33|q QWORD "[rsi|q]" v33|q -1 [888, 890[888 MustHaveRegister 890 ShouldHaveRegister  "NoSpillStore"
  v34|q QWORD "[rax|q]" v34|q rax|q [894, 899[894 MustHaveRegister 896 MustHaveRegister 898 ShouldHaveRegister  "NoSpillStore"
  v36|q QWORD "[rsi|q]" v36|q v31|q [546, 549[546 MustHaveRegister 548 ShouldHaveRegister  "NoSpillStore"
  v37|q QWORD "[rsi|q]" v37|q v36|q [550, 551[ "OneSpillStore"
  v38|q QWORD "[rax|q]" v38|q v29|q [106, 186[[250, 278[[318, 322[[336, 358[[962, 966[[974, 985[116 MustHaveRegister 346 MustHaveRegister 352 ShouldHaveRegister 358 MustHaveRegister  "NoSpillStore"
  v39|q QWORD "[r11|q]" v39|q v14|d [110, 112[110 MustHaveRegister 112 MustHaveRegister  "NoSpillStore"
  v40|q QWORD "[rdx|q]" v40|q -1 [108, 111[108 MustHaveRegister 110 MustHaveRegister  "NoSpillStore"
  v41|q QWORD "[rdx|q]" v41|q -1 [112, 164[[168, 170[112 MustHaveRegister 114 MustHaveRegister 124 MustHaveRegister 132 MustHaveRegister 156 MustHaveRegister 163 LiveAtLoopEnd 170 MustHaveRegister  "NoSpillStore"
  v42|d DWORD "[rcx|d]" v42|d -1 [114, 128[114 MustHaveRegister 122 ShouldHaveRegister 128 ShouldHaveRegister  "NoSpillStore"
  v43|d DWORD "[r8|d]" v43|d -1 [116, 120[116 MustHaveRegister 120 MustHaveRegister  "NoSpillStore"
  v44|q QWORD "[r8|q]" v44|q v43|d [120, 164[[168, 170[120 MustHaveRegister 124 MustHaveRegister 132 ShouldHaveRegister 136 MustHaveRegister 170 MustHaveRegister  "NoSpillStore"
  v45|q QWORD "[r9|q]" v45|q -1 [118, 121[118 MustHaveRegister 120 MustHaveRegister  "NoSpillStore"
  v46|q QWORD "[r9|q]" v46|q -1 [122, 124[122 MustHaveRegister 124 MustHaveRegister  "NoSpillStore"
  v47|q QWORD "[rcx|q]" v47|q -1 [136, 164[136 MustHaveRegister 138 MustHaveRegister 154 MustHaveRegister 163 LiveAtLoopEnd  "NoSpillStore"
  v48|d DWORD "[r9|d]" v48|d -1 [138, 164[138 MustHaveRegister 144 MustHaveRegister 163 LiveAtLoopEnd  "NoSpillStore"
  v49|d DWORD "[r10|d]" v49|d v54|d [142, 160[144 ShouldHaveRegister 148 MustHaveRegister 160 ShouldHaveRegister  "NoSpillStore"
  v50|d DWORD "[r11|d]" v50|d v49|d [148, 150[148 MustHaveRegister 150 MustHaveRegister  "NoSpillStore"
  v51|d DWORD "[r11|d]" v51|d -1 [150, 152[150 MustHaveRegister 152 ShouldHaveRegister  "NoSpillStore"
  v52|q QWORD "[r11|q]" v52|q -1 [152, 154[152 MustHaveRegister 154 MustHaveRegister  "NoSpillStore"
  v53|q QWORD "[r11|q]" v53|q -1 [154, 156[154 MustHaveRegister 156 ShouldHaveRegister  "NoSpillStore"
  v54|d DWORD "[r10|d]" v54|d v49|d [160, 163[160 MustHaveRegister 162 ShouldHaveRegister  "NoSpillStore"
  v55|q QWORD "[rsi|q]" v55|q -1 [252, 254[252 MustHaveRegister 254 MustHaveRegister  "NoSpillStore"
  v56|d DWORD "[rsi|d]" v56|d -1 [254, 262[254 MustHaveRegister 256 MustHaveRegister 262 MustHaveRegister  "NoSpillStore"
  v57|q QWORD "[r10|q]" v57|q -1 [260, 272[260 MustHaveRegister 264 MustHaveRegister 270 MustHaveRegister 272 MustHaveRegister  "NoSpillStore"
  v58|q QWORD "[rsi|q]" v58|q v56|d [262, 270[[336, 338[262 MustHaveRegister 270 MustHaveRegister 338 ShouldHaveRegister  "NoSpillStore"
  v59|q QWORD "[r11|q]" v59|q -1 [268, 270[268 MustHaveRegister 270 MustHaveRegister  "NoSpillStore"
  v60|q QWORD "[rsi|q]" v60|q -1 [272, 274[272 MustHaveRegister 274 MustHaveRegister  "NoSpillStore"
  v61|d DWORD "[rsi|d]" v61|d v38|q [346, 348[346 MustHaveRegister 348 MustHaveRegister  "NoSpillStore"
  v62|q QWORD "[rsi|q]" v62|q -1 [350, 352[350 MustHaveRegister 352 ShouldHaveRegister  "NoSpillStore"
  v63|q QWORD "[rsi|q]" v63|q v62|q [352, 354[352 MustHaveRegister 354 ShouldHaveRegister  "NoSpillStore"
  v64|q QWORD "[rsi|q]" v64|q v65|q [364, 368[[380, 386[[390, 396[364 MustHaveRegister 366 MustHaveRegister 384 MustHaveRegister 392 MustHaveRegister 396 ShouldHaveRegister  "NoSpillStore"
  v65|q QWORD "[rsi|q]" v65|q -1 [362, 364[362 MustHaveRegister 364 MustHaveRegister  "NoSpillStore"
  v66|q QWORD "[r10|q]" v66|q -1 [394, 406[394 MustHaveRegister 398 MustHaveRegister 404 MustHaveRegister 406 MustHaveRegister  "NoSpillStore"
  v67|q QWORD "[rsi|q]" v67|q v64|q [396, 404[[512, 514[396 MustHaveRegister 404 MustHaveRegister 514 ShouldHaveRegister  "NoSpillStore"
  v68|q QWORD "[r11|q]" v68|q -1 [402, 404[402 MustHaveRegister 404 MustHaveRegister  "NoSpillStore"
  v69|q QWORD "[rsi|q]" v69|q -1 [406, 408[406 MustHaveRegister 408 MustHaveRegister  "NoSpillStore"
  v70|q QWORD "[r11|q]" v70|q v17|d [188, 199[[412, 423[188 MustHaveRegister 198 ShouldHaveRegister 422 ShouldHaveRegister  "OneSpillStore"
  v71|d DWORD "[rsi|d]" v71|d -1 [414, 416[414 MustHaveRegister 416 MustHaveRegister  "NoSpillStore"
  v72|q QWORD "[r10|q]" v72|q v71|d [416, 420[416 MustHaveRegister 418 MustHaveRegister  "NoSpillStore"
  v73|d DWORD "[rsi|d]" v73|d -1 [828, 832[828 MustHaveRegister 832 MustHaveRegister  "NoSpillStore"
  v74|q QWORD "[rsi|q]" v74|q v73|d [832, 834[832 MustHaveRegister 834 MustHaveRegister  "NoSpillStore"
  v75|q QWORD "[rdx|q]" v75|q -1 [830, 833[830 MustHaveRegister 832 MustHaveRegister  "NoSpillStore"
  v76|q QWORD "[rbx|q]" v76|q -1 [834, 842[834 MustHaveRegister 836 MustHaveRegister 842 ShouldHaveRegister  "NoSpillStore"
  v77|q QWORD "[rax|q]" v77|q -1 [836, 844[836 MustHaveRegister 844 ShouldHaveRegister  "NoSpillStore"
  v78|d DWORD "[rax|d]" v78|d rax|q [848, 850[848 MustHaveRegister 850 MustHaveRegister  "NoSpillStore"
  v79|q QWORD "[rax|q]" v79|q rax|q [928, 931[928 MustHaveRegister 930 ShouldHaveRegister  "NoSpillStore"
  v80|q QWORD "[r11|q]" v80|q v70|q [200, 215[202 MustHaveRegister  "OneSpillStore"
  v81|d DWORD "[rbp|d]" v81|d v93|d [200, 216[216 ShouldHaveRegister  "OneSpillStore"
  v82|d DWORD "[rax|d]" v82|d -1 [202, 212[[278, 280[202 MustHaveRegister 204 MustHaveRegister 206 MustHaveRegister 210 MustHaveRegister 280 MustHaveRegister  "NoSpillStore"
  v83|q QWORD "[r8|q]" v83|q v82|d [204, 219[204 MustHaveRegister 218 ShouldHaveRegister  "OneSpillStore"
  v84|d DWORD "[rsi|d]" v84|d -1 [280, 282[280 MustHaveRegister 282 MustHaveRegister  "NoSpillStore"
  v85|q QWORD "[r10|q]" v85|q v84|d [282, 286[282 MustHaveRegister 284 MustHaveRegister  "NoSpillStore"
  v86|d DWORD "[rsi|d]" v86|d -1 [858, 862[858 MustHaveRegister 862 MustHaveRegister  "NoSpillStore"
  v87|q QWORD "[rsi|q]" v87|q v86|d [862, 864[862 MustHaveRegister 864 MustHaveRegister  "NoSpillStore"
  v88|q QWORD "[rdx|q]" v88|q -1 [860, 863[860 MustHaveRegister 862 MustHaveRegister  "NoSpillStore"
  v89|q QWORD "[rbx|q]" v89|q -1 [864, 872[864 MustHaveRegister 866 MustHaveRegister 872 ShouldHaveRegister  "NoSpillStore"
  v90|q QWORD "[rax|q]" v90|q -1 [866, 874[866 MustHaveRegister 874 ShouldHaveRegister  "NoSpillStore"
  v91|d DWORD "[rax|d]" v91|d rax|q [878, 880[878 MustHaveRegister 880 MustHaveRegister  "NoSpillStore"
  v92|q QWORD "[rax|q]" v92|q -1 [214, 215[214 MustHaveRegister  "NoDefinitionFound"
  v93|d DWORD "[rbp|d]" v93|d v81|d [216, 219[216 MustHaveRegister 218 ShouldHaveRegister  "NoSpillStore"
  v94|q QWORD "[r10|q]" v94|q -1 [222, 236[222 MustHaveRegister 224 MustHaveRegister 236 ShouldHaveRegister  "NoSpillStore"
  v95|q QWORD "[r11|q]" v95|q -1 [224, 238[224 MustHaveRegister 238 ShouldHaveRegister  "NoSpillStore"
  v96|q QWORD "[rax|q]" v96|q rax|q [242, 250[[290, 318[[436, 460[242 MustHaveRegister 450 MustHaveRegister 454 ShouldHaveRegister 460 MustHaveRegister  "NoSpillStore"
  v97|q QWORD "[rsi|q]" v97|q -1 [292, 294[292 MustHaveRegister 294 MustHaveRegister  "NoSpillStore"
  v98|d DWORD "[rsi|d]" v98|d -1 [294, 302[294 MustHaveRegister 296 MustHaveRegister 302 MustHaveRegister  "NoSpillStore"
  v99|q QWORD "[r10|q]" v99|q -1 [300, 312[300 MustHaveRegister 304 MustHaveRegister 310 MustHaveRegister 312 MustHaveRegister  "NoSpillStore"
  v100|q QWORD "[rsi|q]" v100|q v98|d [302, 310[[440, 442[302 MustHaveRegister 310 MustHaveRegister 442 ShouldHaveRegister  "NoSpillStore"
  v101|q QWORD "[r8|q]" v101|q -1 [308, 310[308 MustHaveRegister 310 MustHaveRegister  "NoSpillStore"
  v102|q QWORD "[rsi|q]" v102|q -1 [312, 314[312 MustHaveRegister 314 MustHaveRegister  "NoSpillStore"
  v103|d DWORD "[rsi|d]" v103|d v96|q [450, 452[450 MustHaveRegister 452 MustHaveRegister  "NoSpillStore"
  v104|q QWORD "[rsi|q]" v104|q v80|q [454, 456[454 MustHaveRegister 456 ShouldHaveRegister  "NoSpillStore"
  v105|q QWORD "[r11|q]" v105|q v80|q [464, 468[[480, 486[[490, 496[464 MustHaveRegister 466 MustHaveRegister 484 MustHaveRegister 492 MustHaveRegister 496 ShouldHaveRegister  "NoSpillStore"
  v106|q QWORD "[rsi|q]" v106|q -1 [494, 506[494 MustHaveRegister 498 MustHaveRegister 504 MustHaveRegister 506 MustHaveRegister  "NoSpillStore"
  v107|q QWORD "[r11|q]" v107|q v105|q [496, 504[[572, 574[496 MustHaveRegister 504 MustHaveRegister 574 ShouldHaveRegister  "NoSpillStore"
  v108|q QWORD "[rdx|q]" v108|q -1 [502, 504[502 MustHaveRegister 504 MustHaveRegister  "NoSpillStore"
  v109|q QWORD "[rsi|q]" v109|q -1 [506, 508[506 MustHaveRegister 508 MustHaveRegister  "NoSpillStore"
  v110|q QWORD "[r8|q]" v110|q v83|q [588, 592[[626, 668[[678, 752[[796, 814[[932, 938[590 MustHaveRegister 628 MustHaveRegister 642 MustHaveRegister 692 MustHaveRegister 694 ShouldHaveRegister 704 MustHaveRegister 814 ShouldHaveRegister  "NoSpillStore"
  v111|d DWORD "[rax|d]" v111|d -1 [600, 602[600 MustHaveRegister 602 MustHaveRegister  "NoSpillStore"
  v112|d DWORD "[rax|d]" v112|d v111|d [602, 606[602 MustHaveRegister 604 MustHaveRegister 606 MustHaveRegister  "NoSpillStore"
  v113|q QWORD "[rax|q]" v113|q rax|q [674, 675[674 MustHaveRegister  "NoSpillStore"
  v114|d DWORD "[rdx|d]" v114|d -1 [758, 772[758 MustHaveRegister 760 MustHaveRegister 772 MustHaveRegister  "NoSpillStore"
  v115|d DWORD "[rbx|d]" v115|d -1 [762, 766[762 MustHaveRegister 766 MustHaveRegister  "NoSpillStore"
  v116|q QWORD "[rbx|q]" v116|q v115|d [766, 768[766 MustHaveRegister 768 MustHaveRegister  "NoSpillStore"
  v117|q QWORD "[rax|q]" v117|q -1 [764, 767[764 MustHaveRegister 766 MustHaveRegister  "NoSpillStore"
  v118|q QWORD "[rbx|q]" v118|q -1 [768, 778[768 MustHaveRegister 770 MustHaveRegister 778 ShouldHaveRegister  "NoSpillStore"
  v119|q QWORD "[rax|q]" v119|q -1 [770, 780[770 MustHaveRegister 780 ShouldHaveRegister  "NoSpillStore"
  v120|q QWORD "[rdx|q]" v120|q v114|d [772, 775[772 MustHaveRegister  "OneSpillStore"
  v121|d DWORD "[rax|d]" v121|d rax|q [784, 788[[994, 1001[784 MustHaveRegister 786 MustHaveRegister  "NoSpillStore"
  v122|d DWORD "[r10|d]" v122|d -1 [628, 668[628 MustHaveRegister  "NoSpillStore"
  v123|q QWORD "[r11|q]" v123|q -1 [642, 644[642 MustHaveRegister 644 MustHaveRegister  "NoSpillStore"
  v124|d DWORD "[r11|d]" v124|d -1 [644, 652[644 MustHaveRegister 646 MustHaveRegister 652 MustHaveRegister  "NoSpillStore"
  v125|q QWORD "[r9|q]" v125|q -1 [650, 662[650 MustHaveRegister 654 MustHaveRegister 660 MustHaveRegister 662 MustHaveRegister  "NoSpillStore"
  v126|q QWORD "[r11|q]" v126|q v124|d [652, 660[[682, 684[652 MustHaveRegister 660 MustHaveRegister 684 ShouldHaveRegister  "NoSpillStore"
  v127|q QWORD "[rcx|q]" v127|q -1 [658, 660[658 MustHaveRegister 660 MustHaveRegister  "NoSpillStore"
  v128|q QWORD "[r11|q]" v128|q -1 [662, 664[662 MustHaveRegister 664 MustHaveRegister  "NoSpillStore"
  v129|q QWORD "[rsi|q]" v129|q v110|q [694, 696[694 MustHaveRegister 696 ShouldHaveRegister  "NoSpillStore"
  v130|q QWORD "[rsi|q]" v130|q v110|q [704, 708[[720, 726[[730, 736[704 MustHaveRegister 706 MustHaveRegister 724 MustHaveRegister 732 MustHaveRegister 736 ShouldHaveRegister  "NoSpillStore"
  v131|q QWORD "[rdx|q]" v131|q -1 [734, 746[734 MustHaveRegister 738 MustHaveRegister 744 MustHaveRegister 746 MustHaveRegister  "NoSpillStore"
  v132|q QWORD "[rsi|q]" v132|q v130|q [736, 744[[796, 798[736 MustHaveRegister 744 MustHaveRegister 798 ShouldHaveRegister  "NoSpillStore"
  v133|q QWORD "[rbx|q]" v133|q -1 [742, 744[742 MustHaveRegister 744 MustHaveRegister  "NoSpillStore"
  v134|q QWORD "[rsi|q]" v134|q -1 [746, 748[746 MustHaveRegister 748 MustHaveRegister  "NoSpillStore"
  v135|q QWORD "[rbx|q]" v135|q -1 [806, 816[806 MustHaveRegister 808 MustHaveRegister 816 ShouldHaveRegister  "NoSpillStore"
  v136|q QWORD "[rax|q]" v136|q -1 [808, 818[808 MustHaveRegister 818 ShouldHaveRegister  "NoSpillStore"
  v137|q QWORD "[r10|q]" v137|q v122|d [810, 819[810 MustHaveRegister  "OneSpillStore"
  v138|d DWORD "[r10|d]" v138|d -1 [954, 956[956 MustHaveRegister  "NoSpillStore"
  v139|q QWORD "[r11|q]" v139|q -1 [954, 958[958 MustHaveRegister  "NoSpillStore"
  v140|q QWORD "[rdi|q]" v0|q v0|q [225, 227[226 ShouldHaveRegister  "StoreAtDefinition"
  v141|d DWORD "[rdi|d]" v1|d v1|d [227, 239[228 ShouldHaveRegister  "OneSpillStore"
  v142|q QWORD "[vstack:16|q]" v2|q v2|q [424, 427[ "StoreAtDefinition"
  v143|q QWORD "[rax|q]" v3|q v3|q [231, 237[232 ShouldHaveRegister  "StoreAtDefinition"
  v144|d DWORD "[vstack:8|d]" v4|d v4|d [220, 233[ "StoreAtDefinition"
  v145|d DWORD "[vstack:5|d]" v5|d v5|d [220, 239[ "StoreAtDefinition"
  v146|q QWORD "[vstack:10|q]" v11|q v11|q [220, 235[ "StoreAtDefinition"
  v147|d DWORD "[vstack:18|d]" v14|d v14|d [550, 561[ "OneSpillStore"
  v148|d DWORD "[vstack:1|d]" v16|d v16|d [550, 561[ "SpillInDominator"
  v149|q QWORD "[vstack:15|q]" v19|q v19|q [239, 424[[436, 612[ "StoreAtDefinition"
  v150|q QWORD "[vstack:12|q]" v21|q v21|q [220, 239[ "StoreAtDefinition"
  v151|d DWORD "[vstack:3|d]" v22|d v22|d [220, 239[ "StoreAtDefinition"
  v152|d DWORD "[r8|d]" v12|d v12|d [954, 961[ "OneSpillStore"
  v153|d DWORD "[vstack:0|d]" v12|d v12|d [46, 74[[186, 192[[322, 333[[412, 420[[520, 528[[826, 829[[886, 897[[938, 942[[950, 954[ "OneSpillStore"
  v154|d DWORD "[rbp|d]" v16|d v16|d [250, 278[[318, 362[[520, 550[252 MustHaveRegister 348 MustHaveRegister 350 MustHaveRegister 362 MustHaveRegister  "SpillInDominator"
  v155|d DWORD "[vstack:1|d]" v16|d v16|d [66, 186[ "SpillInDominator"
  v156|q QWORD "[vstack:21|q]" v70|q v70|q [826, 845[ "OneSpillStore"
  v157|q QWORD "[vstack:4|q]" v80|q v80|q [220, 239[ "OneSpillStore"
  v158|d DWORD "[vstack:14|d]" v81|d v81|d [220, 239[ "OneSpillStore"
  v159|q QWORD "[vstack:7|q]" v83|q v83|q [220, 231[ "OneSpillStore"
  v160|q QWORD "[rax|q]" v3|q v3|q [220, 231[ "StoreAtDefinition"
  v161|q QWORD "[vstack:2|q]" v3|q v3|q [200, 220[ "StoreAtDefinition"
  v162|q QWORD "[vstack:10|q]" v11|q v11|q [235, 250[ "StoreAtDefinition"
  v163|q QWORD "[vstack:7|q]" v83|q v83|q [231, 250[[278, 289[[290, 318[[436, 512[[572, 587[[856, 885[[900, 911[288 ShouldHaveRegister 586 ShouldHaveRegister 884 ShouldHaveRegister 910 ShouldHaveRegister  "OneSpillStore"
  v164|q QWORD "[vstack:4|q]" v80|q v80|q [239, 250[[278, 286[ "OneSpillStore"
  v165|q QWORD "[vstack:12|q]" v21|q v21|q [239, 360[ "StoreAtDefinition"
  v166|d DWORD "[vstack:14|d]" v81|d v81|d [239, 250[[278, 286[[290, 318[[436, 512[[572, 582[[856, 882[582 ShouldHaveRegister  "OneSpillStore"
  v167|d DWORD "[vstack:8|d]" v4|d v4|d [233, 250[[278, 318[[322, 333[[412, 512[[520, 528[[572, 592[ "StoreAtDefinition"
  v168|d DWORD "[vstack:3|d]" v22|d v22|d [239, 250[[278, 318[[322, 336[[412, 424[[436, 512[[572, 592[[626, 668[[678, 690[ "StoreAtDefinition"
  v169|d DWORD "[vstack:5|d]" v5|d v5|d [239, 616[[626, 632[[668, 678[ "StoreAtDefinition"
  v170|q QWORD "[vstack:6|q]" v0|q v0|q [239, 596[426 ShouldHaveRegister 564 ShouldHaveRegister  "StoreAtDefinition"
  v171|d DWORD "[vstack:13|d]" v1|d v1|d [239, 250[[278, 286[[290, 318[[322, 336[[412, 420[[424, 512[[520, 563[[572, 584[[826, 852[[856, 882[[886, 906[[912, 920[[938, 949[[950, 961[[986, 993[554 ShouldHaveRegister 906 ShouldHaveRegister 920 ShouldHaveRegister  "OneSpillStore"
  v172|q QWORD "[vstack:6|q]" v0|q v0|q [227, 239[ "StoreAtDefinition"
  v173|q QWORD "[vstack:2|q]" v3|q v3|q [237, 250[[278, 318[[322, 333[[412, 512[[520, 563[[572, 592[[626, 668[[678, 698[558 ShouldHaveRegister 694 ShouldHaveRegister  "StoreAtDefinition"
  v174|q QWORD "[r8|q]" v83|q v83|q [942, 949[ "OneSpillStore"
  v175|d DWORD "[r9|d]" v4|d v4|d [626, 632[630 MustHaveRegister  "StoreAtDefinition"
  v176|q QWORD "[rbx|q]" v11|q v11|q [250, 286[[290, 362[[412, 420[[436, 512[[520, 550[252 MustHaveRegister 348 MustHaveRegister 350 MustHaveRegister 362 MustHaveRegister  "StoreAtDefinition"
  v177|q QWORD "[r11|q]" v3|q v3|q [698, 700[700 MustHaveRegister  "StoreAtDefinition"
  v178|q QWORD "[r11|q]" v80|q v80|q [290, 318[[436, 464[[856, 859[292 MustHaveRegister 452 MustHaveRegister 454 ShouldHaveRegister 464 MustHaveRegister  "OneSpillStore"
  v179|q QWORD "[r14|q]" v21|q v21|q [360, 368[[380, 386[[390, 396[[412, 424[[436, 512[[520, 550[366 MustHaveRegister 384 MustHaveRegister 392 MustHaveRegister 396 ShouldHaveRegister 466 MustHaveRegister 484 MustHaveRegister 492 MustHaveRegister 496 ShouldHaveRegister  "StoreAtDefinition"
  v180|q QWORD "[rsi|q]" v0|q v0|q [596, 616[[626, 669[598 MustHaveRegister 602 MustHaveRegister 604 MustHaveRegister 606 MustHaveRegister  "StoreAtDefinition"
  v181|d DWORD "[rdx|d]" v1|d v1|d [1002, 1009[ "OneSpillStore"
  v182|d DWORD "[rbp|d]" v81|d v81|d [942, 949[ "OneSpillStore"
  v183|q QWORD "[r13|q]" v19|q v19|q [612, 615[[626, 668[614 MustHaveRegister  "StoreAtDefinition"
  v184|d DWORD "[r11|d]" v22|d v22|d [690, 692[692 MustHaveRegister  "StoreAtDefinition"
  v185|d DWORD "[rdi|d]" v5|d v5|d [752, 761[754 MustHaveRegister  "StoreAtDefinition"
  v186|q QWORD "[vstack:10|q]" v11|q v11|q [550, 561[ "StoreAtDefinition"
  v187|q QWORD "[vstack:12|q]" v21|q v21|q [550, 561[ "StoreAtDefinition"
  v188|q QWORD "[vstack:16|q]" v2|q v2|q [427, 436[[520, 563[556 ShouldHaveRegister  "StoreAtDefinition"
  v189|q QWORD "[rcx|q]" v2|q v2|q [826, 845[828 MustHaveRegister 838 ShouldHaveRegister  "StoreAtDefinition"
  v190|q QWORD "[r10|q]" v37|q v37|q [551, 561[552 ShouldHaveRegister  "OneSpillStore"
  v191|q QWORD "[vstack:12|q]" v21|q v21|q [561, 592[[626, 668[[678, 702[ "StoreAtDefinition"
  v192|q QWORD "[vstack:10|q]" v11|q v11|q [561, 584[[826, 852[[856, 882[[886, 904[[912, 918[[938, 949[[950, 961[[962, 966[[974, 985[904 ShouldHaveRegister 918 ShouldHaveRegister  "StoreAtDefinition"
  v193|d DWORD "[vstack:1|d]" v16|d v16|d [561, 572[[886, 900[[962, 966[[974, 978[ "SpillInDominator"
  v194|d DWORD "[vstack:18|d]" v14|d v14|d [561, 572[[886, 900[ "OneSpillStore"
  v195|q QWORD "[vstack:17|q]" v37|q v37|q [561, 571[566 ShouldHaveRegister 570 ShouldHaveRegister  "OneSpillStore"
  v196|q QWORD "[r14|q]" v21|q v21|q [702, 708[[720, 726[[730, 736[706 MustHaveRegister 724 MustHaveRegister 732 MustHaveRegister 736 ShouldHaveRegister  "StoreAtDefinition"
  v197|q QWORD "[rbx|q]" v11|q v11|q [986, 993[ "StoreAtDefinition"
  v198|d DWORD "[rbp|d]" v16|d v16|d [978, 985[ "SpillInDominator"
  v199|q QWORD "[r10|q]" v0|q v0|q [669, 671[670 ShouldHaveRegister  "StoreAtDefinition"
  v200|q QWORD "[vstack:15|q]" v19|q v19|q [668, 671[ "StoreAtDefinition"
  v201|d DWORD "[vstack:8|d]" v4|d v4|d [826, 845[ "StoreAtDefinition"
  v202|q QWORD "[vstack:15|q]" v19|q v19|q [671, 752[[796, 804[ "StoreAtDefinition"
  v203|q QWORD "[vstack:6|q]" v0|q v0|q [671, 756[ "StoreAtDefinition"
  v204|d DWORD "[r10|d]" v122|d v122|d [678, 752[[796, 810[[932, 938[810 MustHaveRegister 934 MustHaveRegister  "NoSpillStore"
  v205|q QWORD "[r10|q]" v72|q v72|q [826, 840[840 ShouldHaveRegister  "NoSpillStore"
  v206|q QWORD "[r10|q]" v85|q v85|q [856, 870[870 ShouldHaveRegister  "NoSpillStore"
  v207|q QWORD "[rsi|q]" v0|q v0|q [756, 773[758 MustHaveRegister 762 MustHaveRegister  "StoreAtDefinition"
  v208|q QWORD "[r13|q]" v19|q v19|q [804, 806[806 MustHaveRegister  "StoreAtDefinition"
  v209|d DWORD "[vstack:3|d]" v22|d v22|d [826, 845[ "StoreAtDefinition"
  v210|q QWORD "[vstack:2|q]" v3|q v3|q [826, 845[ "StoreAtDefinition"
  v211|q QWORD "[vstack:12|q]" v21|q v21|q [826, 845[ "StoreAtDefinition"
  v212|d DWORD "[vstack:5|d]" v5|d v5|d [826, 845[ "StoreAtDefinition"
  v213|q QWORD "[r10|q]" v0|q v0|q [773, 781[774 ShouldHaveRegister  "StoreAtDefinition"
  v214|q QWORD "[r11|q]" v120|q v120|q [775, 781[776 ShouldHaveRegister  "OneSpillStore"
  v215|q QWORD "[vstack:6|q]" v0|q v0|q [781, 788[[796, 812[[826, 949[[950, 961[[962, 973[[974, 985[[986, 993[[994, 1001[812 ShouldHaveRegister 902 ShouldHaveRegister 916 ShouldHaveRegister  "StoreAtDefinition"
  v216|q QWORD "[vstack:19|q]" v120|q v120|q [781, 788[ "OneSpillStore"
  v217|q QWORD "[rsi|q]" v0|q v0|q [1002, 1009[ "StoreAtDefinition"
  v218|q QWORD "[rdx|q]" v120|q v120|q [994, 1001[ "OneSpillStore"
  v219|q QWORD "[vstack:15|q]" v19|q v19|q [826, 845[ "StoreAtDefinition"
  v220|q QWORD "[vstack:20|q]" v137|q v137|q [819, 822[822 ShouldHaveRegister  "OneSpillStore"
  v221|q QWORD "[vstack:16|q]" v2|q v2|q [845, 852[ "StoreAtDefinition"
  v222|q QWORD "[vstack:21|q]" v70|q v70|q [845, 855[[912, 914[854 ShouldHaveRegister 914 ShouldHaveRegister  "OneSpillStore"
  v223|q QWORD "[vstack:2|q]" v3|q v3|q [845, 935[[938, 949[[950, 961[[986, 993[924 ShouldHaveRegister  "StoreAtDefinition"
  v224|q QWORD "[vstack:15|q]" v19|q v19|q [845, 938[ "StoreAtDefinition"
  v225|d DWORD "[vstack:5|d]" v5|d v5|d [845, 935[[938, 949[[950, 961[[962, 973[[974, 985[[986, 993[ "StoreAtDefinition"
  v226|q QWORD "[vstack:12|q]" v21|q v21|q [845, 932[ "StoreAtDefinition"
  v227|d DWORD "[vstack:3|d]" v22|d v22|d [845, 886[[900, 932[ "StoreAtDefinition"
  v228|d DWORD "[vstack:8|d]" v4|d v4|d [845, 897[[900, 935[[938, 949[[950, 961[[986, 993[ "StoreAtDefinition"
  v229|q QWORD "[r11|q]" v70|q v70|q [986, 993[ "OneSpillStore"
  v230|q QWORD "[rcx|q]" v2|q v2|q [856, 875[858 MustHaveRegister 868 ShouldHaveRegister  "StoreAtDefinition"
  v231|q QWORD "[r8|q]" v3|q v3|q [1002, 1009[ "StoreAtDefinition"
  v232|d DWORD "[r9|d]" v4|d v4|d [1002, 1009[ "StoreAtDefinition"
  v233|d DWORD "[rdi|d]" v5|d v5|d [1002, 1009[ "StoreAtDefinition"
  v234|q QWORD "[vstack:16|q]" v2|q v2|q [875, 882[[886, 900[[912, 922[[938, 949[[950, 961[[986, 993[922 ShouldHaveRegister  "StoreAtDefinition"
  v235|q QWORD "[rcx|q]" v2|q v2|q [1002, 1009[ "StoreAtDefinition"
end_intervals
begin_cfg
  name "After SSALinearScanResolveDataFlow"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|DWORD, rdi|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@21849dd slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction v2|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   12  <|@ instruction v3|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   14  <|@ instruction v4|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   16  <|@ instruction v5|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr   18  <|@ instruction v6|DWORD[_] = MOV [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   20  <|@ instruction TESTBRANCH (x: v6|DWORD[_], y: v6|DWORD[_]) trueDestinationProbability: 0.0015880438063265454 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607168114973028567
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   24  <|@ instruction v9|DWORD = MOV [v6|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   26  <|@ instruction TESTBRANCH (x: v9|DWORD, y: v9|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607168114973028567
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOVE v9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   32  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B1" 
    successors "B6" "B121" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   34  <|@ instruction [v11|QWORD[.], v12|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   36  <|@ instruction v13|DWORD = MOV [v11|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   38  <|@ instruction v14|DWORD = MOV [v11|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   40  <|@ instruction v15|DWORD = DEC v12|DWORD size: DWORD <|@ <|@
      nr   42  <|@ instruction v16|DWORD = AND (x: v1|DWORD, y: v15|DWORD) size: DWORD <|@ <|@
      nr   44  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v16|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B121 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B48" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v153|DWORD = MOVE v12|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   48  <|@ instruction v17|DWORD[_] = MOV [v11|QWORD[.] + v16|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   50  <|@ instruction v18|DWORD = MOV [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   52  <|@ instruction v20|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr   54  <|@ instruction v19|QWORD = UNCOMPRESSPOINTER (input: v18|DWORD, ~baseRegister: v20|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr   56  <|@ instruction v21|QWORD = MOVE input: long[140438306553856|0x7fba57600000] <|@ <|@
      nr   58  <|@ instruction v22|DWORD[_] = COMPRESSPOINTER (input: v3|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr   60  <|@ instruction TESTBRANCH (x: v17|DWORD[_], y: v17|DWORD[_]) trueDestinationProbability: 0.8229115724385652 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B12" "B47" 
    xhandlers
    flags 
    probability 4605587348047262798
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -2  <|@ instruction vstack:1|DWORD = MOVE rbp|DWORD moveKind: DWORD // LSRAOptimizeSpillPos: optimize spill pos <|@ <|@
      nr   64  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v19|QWORD - keyConstants: [meta{HotSpotType<Ljava/util/HashMap;, resolved>}, meta{HotSpotType<Ljava/util/LinkedHashMap;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/replacements/SnippetTemplate$LRUCache;, resolved>}] keyTargets: [B7 -> B8, B7 -> B12, B7 -> B12] defaultTarget: B7 -> B47 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4605585062831744793
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v155|DWORD = MOVE v16|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   68  <|@ instruction v23|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   70  <|@ instruction v24|QWORD = LEA [v23|QWORD + 32] size: QWORD <|@ <|@
      nr   72  <|@ instruction CMPBRANCH (x: v24|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4605510964398880109
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction MOV (x: [r15|QWORD + 440], y: v24|QWORD) size: QWORD <|@ <|@
      nr   78  <|@ instruction AMD64PREFETCH ~[v23|QWORD + 288] instr: 0 <|@ <|@
      nr   80  <|@ instruction MOV [v23|QWORD] y: 1 size: QWORD <|@ <|@
      nr   82  <|@ instruction MOV [v23|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>;compressed} <|@ <|@
      nr   84  <|@ instruction MOV [v23|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   86  <|@ instruction MOV [v23|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   88  <|@ instruction MOV [v23|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr   90  <|@ instruction v28|QWORD[.] = MOVE v23|QWORD moveKind: QWORD <|@ <|@
      nr   92  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 4605585062831744793
    begin_IR
      LIR
      nr   94  <|@ instruction [v29|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   96  <|@ instruction MOV (x: [v29|QWORD[.] + 20], y: v22|DWORD[_]) size: DWORD <|@ <|@
      nr   98  <|@ instruction v30|DWORD[_] = COMPRESSPOINTER (input: v2|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  100  <|@ instruction MOV (x: [v29|QWORD[.] + 16], y: v30|DWORD[_]) size: DWORD <|@ <|@
      nr  102  <|@ instruction MOV (x: [v29|QWORD[.] + 12], y: v1|DWORD) size: DWORD <|@ <|@
      nr  104  <|@ instruction JUMP ~[] destination: B11 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B11" "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4605587348047262798
    begin_IR
      LIR
      nr  106  <|@ instruction [v38|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  108  <|@ instruction v40|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr  110  <|@ instruction v39|QWORD = UNCOMPRESSPOINTER (input: v14|DWORD, ~baseRegister: v40|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr  112  <|@ instruction v41|QWORD = MOV [v39|QWORD + 208] size: QWORD <|@ <|@
      nr  114  <|@ instruction v42|DWORD = MOV [v41|QWORD + 20] size: DWORD <|@ <|@
      nr  116  <|@ instruction v43|DWORD = MOV [v38|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  118  <|@ instruction v45|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr  120  <|@ instruction v44|QWORD = UNCOMPRESSPOINTER (input: v43|DWORD, ~baseRegister: v45|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr  122  <|@ instruction v46|QWORD = MOVSXD v42|DWORD size: QWORD <|@ <|@
      nr  124  <|@ instruction CMPBRANCH (x: v41|QWORD, y: [v44|QWORD + v46|QWORD * 1]) trueDestinationProbability: 0.5 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B45" 
    xhandlers
    flags 
    probability 4601083748419892302
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction CMPCONSTBRANCH v42|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B45 y: 32 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4601083748419892302
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  132  <|@ instruction CMPBRANCH (x: v41|QWORD, y: v44|QWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4596580148792521806
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction v47|QWORD = MOV [v44|QWORD + 40] size: QWORD <|@ <|@
      nr  138  <|@ instruction v48|DWORD = MOV [v47|QWORD] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v49|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  140  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B24" 
    successors "B23" "B26" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4602807799859017905
    begin_IR
      LIR
      nr  142  <|@ instruction [v49|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  144  <|@ instruction CMPBRANCH (x: v48|DWORD, y: v49|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602807799859017905
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction v50|DWORD = SHL v49|DWORD y: 3 size: DWORD <|@ <|@
      nr  150  <|@ instruction v51|DWORD = LEA [v50|DWORD + 8] size: DWORD <|@ <|@
      nr  152  <|@ instruction v52|QWORD = MOVSXD v51|DWORD size: QWORD <|@ <|@
      nr  154  <|@ instruction v53|QWORD = MOV [v47|QWORD + v52|QWORD * 1] size: QWORD <|@ <|@
      nr  156  <|@ instruction CMPBRANCH (x: v41|QWORD, y: v53|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B23 -> B25 falseDestination: B23 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B22" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4599230716294395707
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction v54|DWORD = INC v49|DWORD size: DWORD <|@ <|@
      nr  162  <|@ instruction JUMP ~[] destination: B24 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B27" 
    xhandlers
    flags 
    probability 4601083748419892302
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction JUMP ~[] destination: B17 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B27" 
    xhandlers
    flags 
    probability 4596580148792521807
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction MOV (x: [v44|QWORD + 32], y: v41|QWORD) size: QWORD <|@ <|@
      nr  172  <|@ instruction JUMP ~[] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B27" 
    xhandlers
    flags 
    probability 4596580148792521806
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction JUMP ~[] destination: B20 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B17" "B25" "B20" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4605587348047262798
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" 
    xhandlers
    flags 
    probability 4604846135197064160
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v165|QWORD = MOVE v21|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v149|QWORD = MOVE v19|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v154|DWORD = MOVE v155|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v169|DWORD = MOVE v5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v170|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  184  <|@ instruction JUMP ~[] destination: B28 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B49" "B54" 
    xhandlers
    flags 
    probability 4595548303301553864
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction v70|QWORD[.] = UNCOMPRESSPOINTER (input: v17|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  190  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v17|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.01987559010066231 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4595421491411700642
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction CMPCONSTBRANCH [v17|DWORD[_] * 8 + 8] trueDestinationProbability: 2.021089053783065E-6 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B56 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4595421478772878611
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v81|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v161|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  198  <|@ instruction JUMP ~[] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B62" 
    successors "B65" "B58" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4595777537596400292
    begin_IR
      LIR
      nr  200  <|@ instruction [v80|QWORD[.], v81|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  202  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] v80|QWORD[.] - - - - v81|DWORD 
>@ <|@ instruction v82|DWORD[_] = MOV [v80|QWORD[.] + 24] size: DWORD state [bci:134] <|@ <|@
      nr  204  <|@ instruction v83|QWORD[.] = UNCOMPRESSPOINTER (input: v82|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  206  <|@ instruction TESTBRANCH (x: v82|DWORD[_], y: v82|DWORD[_]) trueDestinationProbability: 0.5880075530332061 condition: = trueDestination: B57 -> B65 falseDestination: B57 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4590110563079390205
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v82|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.8692436604445373 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B62 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B57" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4576850562957400324
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] v80|QWORD[.] - - - - v81|DWORD 
>@ <|@ instruction SAFEPOINT v92|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 thread: r15 state [bci:134] <|@ <|@
      nr  216  <|@ instruction v93|DWORD = INC v81|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v80|QWORD[.] = MOVE v83|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  218  <|@ instruction JUMP ~[] destination: B62 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4592437312858669387
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v159|QWORD[.] = MOVE v83|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v158|DWORD = MOVE v81|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v157|QWORD[.] = MOVE v80|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v151|DWORD[_] = MOVE v22|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v150|QWORD = MOVE v21|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v146|QWORD[.] = MOVE v11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v145|DWORD = MOVE v5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v144|DWORD = MOVE v4|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v160|QWORD[.] = MOVE v161|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  222  <|@ instruction v94|QWORD = MOV [v19|QWORD + 680] size: QWORD <|@ <|@
      nr  224  <|@ instruction v95|QWORD = MOV [v94|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v140|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  226  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v172|QWORD[.] = MOVE v140|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v141|DWORD = MOVE v1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  228  <|@ instruction rdx|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr  230  <|@ instruction rcx|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v163|QWORD[.] = STACKMOVE (input: v159|QWORD[.], ~backupSlot: vstack:9|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v143|QWORD[.] = MOVE v160|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  232  <|@ instruction r8|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v167|DWORD = STACKMOVE (input: v144|DWORD, ~backupSlot: vstack:11|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  234  <|@ instruction r9|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction v162|QWORD[.] = STACKMOVE (input: v146|QWORD[.], ~backupSlot: vstack:9|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  236  <|@ instruction rbx|QWORD = MOVE v94|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v173|QWORD[.] = MOVE v143|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  238  <|@ instruction rax|QWORD = MOVE v95|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v169|DWORD = STACKMOVE (input: v145|DWORD, ~backupSlot: vstack:11|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v168|DWORD[_] = STACKMOVE (input: v151|DWORD[_], ~backupSlot: vstack:11|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v149|QWORD = MOVE v19|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v166|DWORD = STACKMOVE (input: v158|DWORD, ~backupSlot: vstack:11|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v171|DWORD = MOVE v141|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v170|QWORD[.] = STACKMOVE (input: v172|QWORD[.], ~backupSlot: vstack:9|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v165|QWORD = STACKMOVE (input: v150|QWORD, ~backupSlot: vstack:9|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v164|QWORD[.] = STACKMOVE (input: v157|QWORD[.], ~backupSlot: vstack:9|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  240  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:648) [bci: 152]
stack: v80|QWORD[.] 
locals: v0|QWORD[.] v1|DWORD - v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] - - - v83|QWORD[.] - v81|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.]]) [] callTarget: HotSpotMethod<HashMap.newNode(int, Object, Object, HashMap$Node)> state [bci:152] <|@ <|@
      nr  242  <|@ instruction v96|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  244  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B67 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B72" 
    xhandlers
    flags 
    probability 4591660023639118941
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v178|QWORD[.] = MOVE v164|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v179|QWORD = MOVE v165|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v176|QWORD[.] = MOVE v162|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  248  <|@ instruction JUMP ~[] destination: B66 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4590594123464754032
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v165|QWORD = MOVE v21|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v149|QWORD = MOVE v19|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v154|DWORD = MOVE v155|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v169|DWORD = MOVE v5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v170|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  252  <|@ instruction v55|QWORD[.+] = LEA [v11|QWORD[.] + v16|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  254  <|@ instruction v56|DWORD[_] = MOV [v55|QWORD[.+]] size: DWORD <|@ <|@
      nr  256  <|@ instruction TESTBRANCH (x: v56|DWORD[_], y: v56|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4590001153184595122
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction v57|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  262  <|@ instruction v58|QWORD[.] = UNCOMPRESSPOINTER (input: v56|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  264  <|@ instruction TESTBRANCH (x: v57|QWORD, y: v57|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4589467479932452103
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction v59|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  270  <|@ instruction MOV (x: [v59|QWORD + v57|QWORD * 1 - 8], y: v58|QWORD[.]) size: QWORD <|@ <|@
      nr  272  <|@ instruction v60|QWORD = LEA [v57|QWORD - 8] size: QWORD <|@ <|@
      nr  274  <|@ instruction MOV (x: [r15|QWORD + 40], y: v60|QWORD) size: QWORD <|@ <|@
      nr  276  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B64" "B60" 
    xhandlers
    flags 
    probability 4589398445432346844
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v163|QWORD[.] = MOVE v83|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v166|DWORD = MOVE v81|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v164|QWORD[.] = MOVE v80|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v168|DWORD[_] = MOVE v22|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v165|QWORD = MOVE v21|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v149|QWORD = MOVE v19|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v169|DWORD = MOVE v5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v167|DWORD = MOVE v4|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v171|DWORD = MOVE v1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v170|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  280  <|@ instruction v84|DWORD[_] = MOV [v82|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  282  <|@ instruction v85|QWORD[.] = UNCOMPRESSPOINTER (input: v84|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  284  <|@ instruction CMPBRANCH (x: v85|QWORD[.], y: v2|QWORD[.]) trueDestinationProbability: 0.9998932466496128 condition: = trueDestination: B59 -> B64 falseDestination: B59 -> B60 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B86" 
    xhandlers
    flags 
    probability 4589397940059341918
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v110|QWORD[.] = MOVE v163|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  288  <|@ instruction JUMP ~[] destination: B64 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4577371935537457006
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v178|QWORD[.] = MOVE v164|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v176|QWORD[.] = MOVE v162|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  292  <|@ instruction v97|QWORD[.+] = LEA [v80|QWORD[.] + 24] size: QWORD <|@ <|@
      nr  294  <|@ instruction v98|DWORD[_] = MOV [v97|QWORD[.+]] size: DWORD <|@ <|@
      nr  296  <|@ instruction TESTBRANCH (x: v98|DWORD[_], y: v98|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B67 -> B68 falseDestination: B67 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" "B71" 
    xhandlers
    flags 
    probability 4576750104161816650
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  300  <|@ instruction v99|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  302  <|@ instruction v100|QWORD[.] = UNCOMPRESSPOINTER (input: v98|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  304  <|@ instruction TESTBRANCH (x: v99|QWORD, y: v99|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    probability 4576190455923740329
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  308  <|@ instruction v101|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  310  <|@ instruction MOV (x: [v101|QWORD + v99|QWORD * 1 - 8], y: v100|QWORD[.]) size: QWORD <|@ <|@
      nr  312  <|@ instruction v102|QWORD = LEA [v99|QWORD - 8] size: QWORD <|@ <|@
      nr  314  <|@ instruction MOV (x: [r15|QWORD + 40], y: v102|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v179|QWORD = MOVE v165|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  316  <|@ instruction JUMP ~[] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    probability 4575897384022324722
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  320  <|@ instruction JUMP ~[] destination: B30 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4575895921484393205
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v168|DWORD[_] = MOVE v22|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v165|QWORD = MOVE v21|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v149|QWORD = MOVE v19|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v154|DWORD = MOVE v155|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v169|DWORD = MOVE v5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v167|DWORD = MOVE v4|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v173|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v171|DWORD = MOVE v1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v170|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  324  <|@ instruction v25|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>} <|@ <|@
      nr  326  <|@ instruction rsi|QWORD = MOVE v25|QWORD moveKind: QWORD <|@ <|@
      nr  328  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] - v12|DWORD - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7fba62ccef80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:29] <|@ <|@
      nr  330  <|@ instruction v26|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  332  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] - v12|DWORD - - - - 
>@ <|@ instruction NULLCHECK [v26|QWORD[.]] state [bci:29] <|@ <|@
      nr   -1  <|@ instruction v22|DWORD[_] = MOVE v168|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = MOVE v165|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = MOVE v149|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v155|DWORD = MOVE v154|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOVE v169|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE v171|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE v170|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  334  <|@ instruction JUMP ~[] destination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4575188794187971253
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  338  <|@ instruction rsi|QWORD[.] = MOVE v58|QWORD[.] moveKind: QWORD <|@ <|@
      nr  340  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  342  <|@ instruction JUMP ~[] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" "B33" "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4605587348047262798
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction v61|DWORD[_] = COMPRESSPOINTER (input: v38|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  348  <|@ instruction MOV (x: [v11|QWORD[.] + v16|DWORD * 4 + 16], y: v61|DWORD[_]) size: DWORD <|@ <|@
      nr  350  <|@ instruction v62|QWORD[.+] = LEA [v11|QWORD[.] + v16|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  352  <|@ instruction v63|QWORD[*] = XOR (x: v62|QWORD[.+], y: v38|QWORD[.]) size: QWORD <|@ <|@
      nr  354  <|@ instruction TESTCONSTBRANCH v63|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4604846135197064160
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  358  <|@ instruction TESTBRANCH (x: v38|QWORD[.], y: v38|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4604179043631885386
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v179|QWORD = MOVE v165|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  362  <|@ instruction v65|QWORD[.+] = LEA [v11|QWORD[.] + v16|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  364  <|@ instruction v64|QWORD[*] = SHR v65|QWORD[.+] y: 9 size: QWORD <|@ <|@
      nr  366  <|@ instruction CMPCONSTBRANCH [v64|QWORD[*] + v21|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B88" 
    xhandlers
    flags 
    probability 4603578661223224489
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v180|QWORD[.] = MOVE v170|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  370  <|@ instruction JUMP ~[] destination: B39 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B88" 
    xhandlers
    flags 
    probability 4590594123464754032
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v180|QWORD[.] = MOVE v170|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  374  <|@ instruction JUMP ~[] destination: B35 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B88" 
    xhandlers
    flags 
    probability 4590001153184595122
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v180|QWORD[.] = MOVE v170|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  378  <|@ instruction JUMP ~[] destination: B37 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4589467479932452103
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  382  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  384  <|@ instruction CMPCONSTBRANCH [v64|QWORD[*] + v21|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B88" 
    xhandlers
    flags 
    probability 4588806327720511347
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v180|QWORD[.] = MOVE v170|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  388  <|@ instruction JUMP ~[] destination: B41 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4574334916984542422
    begin_IR
      LIR
      nr  390  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  392  <|@ instruction MOVB [v64|QWORD[*] + v21|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  394  <|@ instruction v66|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  396  <|@ instruction v67|QWORD[*] = ADD (x: v64|QWORD[*], y: v21|QWORD) size: QWORD <|@ <|@
      nr  398  <|@ instruction TESTBRANCH (x: v66|QWORD, y: v66|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B88" 
    xhandlers
    flags 
    probability 4573566427501456474
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  402  <|@ instruction v68|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  404  <|@ instruction MOV (x: [v68|QWORD + v66|QWORD * 1 - 8], y: v67|QWORD[*]) size: QWORD <|@ <|@
      nr  406  <|@ instruction v69|QWORD = LEA [v66|QWORD - 8] size: QWORD <|@ <|@
      nr  408  <|@ instruction MOV (x: [r15|QWORD + 72], y: v69|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v180|QWORD[.] = MOVE v170|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  410  <|@ instruction JUMP ~[] destination: B44 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4570262383476918658
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v168|DWORD[_] = MOVE v22|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v149|QWORD = MOVE v19|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v169|DWORD = MOVE v5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v167|DWORD = MOVE v4|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v173|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v171|DWORD = MOVE v1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v170|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  414  <|@ instruction v71|DWORD[_] = MOV [v17|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  416  <|@ instruction v72|QWORD[.] = UNCOMPRESSPOINTER (input: v71|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  418  <|@ instruction CMPBRANCH (x: v72|QWORD[.], y: v2|QWORD[.]) trueDestinationProbability: 0.9854570809572428 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B86" 
    xhandlers
    flags 
    probability 4570144353713859813
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v110|QWORD[.] = MOVE v70|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v191|QWORD = MOVE v179|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  422  <|@ instruction JUMP ~[] destination: B50 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 4564966382317228292
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v169|DWORD = MOVE v5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v167|DWORD = MOVE v4|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v173|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v142|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v171|DWORD = MOVE v1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v170|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  426  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v188|QWORD[.] = STACKMOVE (input: v142|QWORD[.], ~backupSlot: vstack:9|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  428  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:635) [bci: 20]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.resize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:20] <|@ <|@
      nr  430  <|@ instruction v7|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  432  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:635) [bci: 23]
stack: Object[null] 
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD - - - - - - - 
>@ <|@ instruction v8|DWORD = MOV [v7|QWORD[.] + 12] size: DWORD state [bci:23] <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOVE v8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = MOVE v7|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOVE v169|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVE v167|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE v173|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE v188|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE v171|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE v170|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  434  <|@ instruction JUMP ~[] destination: B1 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B72" 
    xhandlers
    flags 
    probability 4562617473904064804
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v179|QWORD = MOVE v165|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  438  <|@ instruction JUMP ~[] destination: B68 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    probability 4562093595080792590
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v179|QWORD = MOVE v165|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  442  <|@ instruction rsi|QWORD[.] = MOVE v100|QWORD[.] moveKind: QWORD <|@ <|@
      nr  444  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  446  <|@ instruction JUMP ~[] destination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B66" "B68" "B71" "B70" 
    successors "B73" "B74" 
    xhandlers
    flags 
    probability 4592437312858669387
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  450  <|@ instruction v103|DWORD[_] = COMPRESSPOINTER (input: v96|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  452  <|@ instruction MOV (x: [v80|QWORD[.] + 24], y: v103|DWORD[_]) size: DWORD <|@ <|@
      nr  454  <|@ instruction v104|QWORD[*] = XOR (x: v80|QWORD[.], y: v96|QWORD[.]) size: QWORD <|@ <|@
      nr  456  <|@ instruction TESTCONSTBRANCH v104|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    probability 4591660023639118941
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  460  <|@ instruction TESTBRANCH (x: v96|QWORD[.], y: v96|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    probability 4590960463341523540
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  464  <|@ instruction v105|QWORD[*] = SHR v80|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  466  <|@ instruction CMPCONSTBRANCH [v105|QWORD[*] + v21|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B83" 
    xhandlers
    flags 
    probability 4590330859073687679
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v191|QWORD = MOVE v179|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v192|QWORD[.] = MOVE v176|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  470  <|@ instruction JUMP ~[] destination: B77 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B83" 
    xhandlers
    flags 
    probability 4577371935537457006
    begin_IR
      LIR
      nr  472  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v191|QWORD = MOVE v179|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v192|QWORD[.] = MOVE v176|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  474  <|@ instruction JUMP ~[] destination: B73 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B83" 
    xhandlers
    flags 
    probability 4576750104161816649
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v191|QWORD = MOVE v179|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v192|QWORD[.] = MOVE v176|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  478  <|@ instruction JUMP ~[] destination: B75 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    probability 4576190455923740328
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  482  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  484  <|@ instruction CMPCONSTBRANCH [v105|QWORD[*] + v21|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B83" 
    xhandlers
    flags 
    probability 4575686772509471639
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v191|QWORD = MOVE v179|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v192|QWORD[.] = MOVE v176|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  488  <|@ instruction JUMP ~[] destination: B79 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    probability 4561198157899870475
    begin_IR
      LIR
      nr  490  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  492  <|@ instruction MOVB [v105|QWORD[*] + v21|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  494  <|@ instruction v106|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  496  <|@ instruction v107|QWORD[*] = ADD (x: v105|QWORD[*], y: v21|QWORD) size: QWORD <|@ <|@
      nr  498  <|@ instruction TESTBRANCH (x: v106|QWORD, y: v106|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    probability 4560392264437040573
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  502  <|@ instruction v108|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  504  <|@ instruction MOV (x: [v108|QWORD + v106|QWORD * 1 - 8], y: v107|QWORD[*]) size: QWORD <|@ <|@
      nr  506  <|@ instruction v109|QWORD = LEA [v106|QWORD - 8] size: QWORD <|@ <|@
      nr  508  <|@ instruction MOV (x: [r15|QWORD + 72], y: v109|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v191|QWORD = MOVE v179|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v192|QWORD[.] = MOVE v176|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  510  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B88" 
    xhandlers
    flags 
    probability 4559287139136259037
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  514  <|@ instruction rsi|QWORD = MOVE v67|QWORD[*] moveKind: QWORD <|@ <|@
      nr  516  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction v180|QWORD[.] = MOVE v170|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  518  <|@ instruction JUMP ~[] destination: B43 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4553315745025075769
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v149|QWORD = MOVE v19|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v169|DWORD = MOVE v5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v167|DWORD = MOVE v4|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v173|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v188|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v171|DWORD = MOVE v1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v170|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  522  <|@ instruction v31|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  524  <|@ instruction v32|QWORD = LEA [v31|QWORD + 40] size: QWORD <|@ <|@
      nr  526  <|@ instruction CMPBRANCH (x: v32|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4553268943811267021
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  530  <|@ instruction MOV (x: [r15|QWORD + 440], y: v32|QWORD) size: QWORD <|@ <|@
      nr  532  <|@ instruction AMD64PREFETCH ~[v31|QWORD + 296] instr: 0 <|@ <|@
      nr  534  <|@ instruction MOV [v31|QWORD] y: 1 size: QWORD <|@ <|@
      nr  536  <|@ instruction MOV [v31|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>;compressed} <|@ <|@
      nr  538  <|@ instruction MOV [v31|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  540  <|@ instruction MOV [v31|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  542  <|@ instruction MOV [v31|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  544  <|@ instruction MOV [v31|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  546  <|@ instruction v36|QWORD[.] = MOVE v31|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v187|QWORD = MOVE v179|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v148|DWORD = MOVE v154|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v147|DWORD = MOVE v14|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v186|QWORD[.] = MOVE v176|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  548  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4553315745025075769
    begin_IR
      LIR
      nr  550  <|@ instruction [v37|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v190|QWORD[.] = MOVE v37|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  552  <|@ instruction rsi|QWORD[.] = MOVE v37|QWORD[.] moveKind: QWORD <|@ <|@
      nr  554  <|@ instruction rdx|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr  556  <|@ instruction rcx|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  558  <|@ instruction r8|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  560  <|@ instruction r9|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction v193|DWORD = STACKMOVE (input: v148|DWORD, ~backupSlot: vstack:11|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v194|DWORD = STACKMOVE (input: v147|DWORD, ~backupSlot: vstack:11|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v192|QWORD[.] = STACKMOVE (input: v186|QWORD[.], ~backupSlot: vstack:9|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v191|QWORD = STACKMOVE (input: v187|QWORD, ~backupSlot: vstack:9|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v195|QWORD[.] = MOVE v190|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  562  <|@ st <@st|@live-base-pointers: []
java.util.LinkedHashMap$Entry.<init>(LinkedHashMap.java:208) [bci: 6]
locals: - - - - - 
java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 9]
stack: v37|QWORD[.] 
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] Object[null] - 
java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stack: v11|QWORD[.] v16|DWORD 
locals: v0|QWORD[.] - - - - v5|DWORD - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.]] [] callTarget: HotSpotMethod<HashMap$Node.<init>(int, Object, Object, HashMap$Node)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:6, 9, 56] <|@ <|@
      nr  564  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  566  <|@ instruction rdx|QWORD[.] = MOVE v37|QWORD[.] moveKind: QWORD <|@ <|@
      nr  568  <|@ st <@st|@live-base-pointers: []
java.util.LinkedHashMap.newNode(LinkedHashMap.java:283) [bci: 17]
locals: - - - - - v37|QWORD[.] 
java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stack: v11|QWORD[.] v16|DWORD 
locals: v0|QWORD[.] - - - - v5|DWORD - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<LinkedHashMap.linkNodeAtEnd(LinkedHashMap$Entry)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:17, 56] <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[.] = MOVE v195|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = MOVE v191|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = MOVE v149|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOVE v194|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = MOVE v192|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOVE v169|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE v170|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  570  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    probability 4546075572092099182
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v191|QWORD = MOVE v179|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v192|QWORD[.] = MOVE v176|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  574  <|@ instruction rsi|QWORD = MOVE v107|QWORD[*] moveKind: QWORD <|@ <|@
      nr  576  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  578  <|@ instruction JUMP ~[] destination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B73" "B75" "B77" "B79" "B82" "B81" 
    successors "B84" "B85" 
    xhandlers
    flags 
    probability 4592437312858669387
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  582  <|@ instruction CMPCONSTBRANCH v81|DWORD trueDestinationProbability: 0.9999886211240704 condition: < trueDestination: B83 -> B84 falseDestination: B83 -> B85 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" 
    xhandlers
    flags 
    probability 4592437224411893480
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v110|QWORD[.] = MOVE v163|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  586  <|@ instruction JUMP ~[] destination: B84 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B50" "B55" "B64" "B84" "B85" "B63" "B53" 
    successors "B87" "B100" 
    xhandlers
    flags 
    probability 4595548303301553864
    begin_IR
      LIR
      nr  588  <|@ instruction [v110|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  590  <|@ instruction TESTBRANCH (x: v110|QWORD[.], y: v110|QWORD[.]) trueDestinationProbability: 0.6091185940042786 condition: = trueDestination: B86 -> B87 falseDestination: B86 -> B100 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B88" 
    xhandlers
    flags 
    probability 4592437118697206803
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v180|QWORD[.] = MOVE v170|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  594  <|@ instruction JUMP ~[] destination: B87 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B35" "B87" "B43" "B44" "B41" "B39" "B37" 
    successors "B89" "B90" 
    xhandlers
    flags 
    probability 4606558935301518032
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  598  <|@ instruction INC [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  600  <|@ instruction v111|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  602  <|@ instruction v112|DWORD = ADD (x: v111|DWORD, ~y: [v0|QWORD[.] + 20]) size: DWORD <|@ <|@
      nr  604  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v112|DWORD) size: DWORD <|@ <|@
      nr  606  <|@ instruction CMPBRANCH (x: v112|DWORD, y: [v0|QWORD[.] + 28]) trueDestinationProbability: 7.853038846579175E-4 condition: > trueDestination: B88 -> B89 falseDestination: B88 -> B90 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B91" 
    xhandlers
    flags 
    probability 4606552351536966788
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v183|QWORD = MOVE v149|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  610  <|@ instruction JUMP ~[] destination: B90 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" "B89" 
    successors "B92" "B93" "B99" 
    xhandlers
    flags 
    probability 4606558935301518032
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  614  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v19|QWORD - keyConstants: [meta{HotSpotType<Ljava/util/HashMap;, resolved>}, meta{HotSpotType<Ljava/util/LinkedHashMap;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/replacements/SnippetTemplate$LRUCache;, resolved>}] keyTargets: [B91 -> B92, B91 -> B93, B91 -> B93] defaultTarget: B91 -> B99 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B97" 
    xhandlers
    flags 
    probability 4606555909645339483
    begin_IR
      LIR
      nr  616  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  618  <|@ instruction JUMP ~[] destination: B92 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B92" "B94" "B96" 
    successors 
    xhandlers
    flags 
    probability 4606558935301518031
    begin_IR
      LIR
      nr  620  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  622  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  624  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B101" "B119" 
    xhandlers
    flags 
    probability 4589652288651159933
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v183|QWORD = MOVE v149|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v175|DWORD = MOVE v167|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v180|QWORD[.] = MOVE v170|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  628  <|@ instruction v122|DWORD[_] = MOV [v110|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  630  <|@ instruction TESTBRANCH (x: v4|DWORD, y: v4|DWORD) trueDestinationProbability: 0.9999962001170364 condition: = trueDestination: B100 -> B101 falseDestination: B100 -> B119 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B102" "B103" 
    xhandlers
    flags 
    probability 4589652269697845341
    begin_IR
      LIR
      nr  632  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  634  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B103 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B108" 
    xhandlers
    flags 
    probability 4589138949298219176
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v184|DWORD[_] = MOVE v168|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v202|QWORD = MOVE v183|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v203|QWORD[.] = MOVE v180|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  638  <|@ instruction JUMP ~[] destination: B102 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" "B105" 
    xhandlers
    flags 
    probability 4574630580609171603
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  642  <|@ instruction v123|QWORD[.+] = LEA [v110|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  644  <|@ instruction v124|DWORD[_] = MOV [v123|QWORD[.+]] size: DWORD <|@ <|@
      nr  646  <|@ instruction TESTBRANCH (x: v124|DWORD[_], y: v124|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B103 -> B104 falseDestination: B103 -> B105 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B106" "B107" 
    xhandlers
    flags 
    probability 4573832524763622737
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  650  <|@ instruction v125|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  652  <|@ instruction v126|QWORD[.] = UNCOMPRESSPOINTER (input: v124|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  654  <|@ instruction TESTBRANCH (x: v125|QWORD, y: v125|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B105 -> B106 falseDestination: B105 -> B107 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B108" 
    xhandlers
    flags 
    probability 4573114274502628758
    begin_IR
      LIR
      nr  656  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  658  <|@ instruction v127|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  660  <|@ instruction MOV (x: [v127|QWORD + v125|QWORD * 1 - 8], y: v126|QWORD[.]) size: QWORD <|@ <|@
      nr  662  <|@ instruction v128|QWORD = LEA [v125|QWORD - 8] size: QWORD <|@ <|@
      nr  664  <|@ instruction MOV (x: [r15|QWORD + 40], y: v128|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v184|DWORD[_] = MOVE v168|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v202|QWORD = MOVE v183|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v203|QWORD[.] = MOVE v180|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  666  <|@ instruction JUMP ~[] destination: B107 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B91" 
    xhandlers
    flags 
    probability 4559880998172045651
    begin_IR
      LIR
      nr  668  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v199|QWORD[.] = MOVE v180|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  670  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v202|QWORD = STACKMOVE (input: v200|QWORD, ~backupSlot: vstack:9|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v203|QWORD[.] = MOVE v199|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  672  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:669) [bci: 288]
locals: v0|QWORD[.] - - - - v5|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.resize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:288] <|@ <|@
      nr  674  <|@ instruction v113|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v183|QWORD = MOVE v202|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v180|QWORD[.] = MOVE v203|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  676  <|@ instruction JUMP ~[] destination: B89 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B108" 
    xhandlers
    flags 
    probability 4559523670035962382
    begin_IR
      LIR
      nr  678  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v184|DWORD[_] = MOVE v168|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v202|QWORD = MOVE v183|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v203|QWORD[.] = MOVE v180|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  680  <|@ instruction JUMP ~[] destination: B104 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B108" 
    xhandlers
    flags 
    probability 4558885225359523289
    begin_IR
      LIR
      nr  682  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v202|QWORD = MOVE v183|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v203|QWORD[.] = MOVE v180|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  684  <|@ instruction rsi|QWORD[.] = MOVE v126|QWORD[.] moveKind: QWORD <|@ <|@
      nr  686  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction v184|DWORD[_] = MOVE v168|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  688  <|@ instruction JUMP ~[] destination: B106 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B102" "B104" "B107" "B106" 
    successors "B109" "B110" 
    xhandlers
    flags 
    probability 4589652269697845341
    begin_IR
      LIR
      nr  690  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  692  <|@ instruction MOV (x: [v110|QWORD[.] + 20], y: v22|DWORD[_]) size: DWORD <|@ <|@
      nr  694  <|@ instruction v129|QWORD[*] = XOR (x: v110|QWORD[.], y: v3|QWORD[.]) size: QWORD <|@ <|@
      nr  696  <|@ instruction TESTCONSTBRANCH v129|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B108 -> B109 falseDestination: B108 -> B110 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" "B112" 
    xhandlers
    flags 
    probability 4589138949298219176
    begin_IR
      LIR
      nr  698  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v177|QWORD[.] = MOVE v173|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  700  <|@ instruction TESTBRANCH (x: v3|QWORD[.], y: v3|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B110 -> B111 falseDestination: B110 -> B112 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B113" "B114" 
    xhandlers
    flags 
    probability 4588241136471976702
    begin_IR
      LIR
      nr  702  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v196|QWORD = MOVE v191|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  704  <|@ instruction v130|QWORD[*] = SHR v110|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  706  <|@ instruction CMPCONSTBRANCH [v130|QWORD[*] + v21|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B112 -> B113 falseDestination: B112 -> B114 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B120" 
    xhandlers
    flags 
    probability 4587433104928358475
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v208|QWORD = MOVE v202|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  710  <|@ instruction JUMP ~[] destination: B113 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B120" 
    xhandlers
    flags 
    probability 4574630580609171603
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v208|QWORD = MOVE v202|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  714  <|@ instruction JUMP ~[] destination: B109 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B120" 
    xhandlers
    flags 
    probability 4573832524763622738
    begin_IR
      LIR
      nr  716  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v208|QWORD = MOVE v202|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  718  <|@ instruction JUMP ~[] destination: B111 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B115" "B116" 
    xhandlers
    flags 
    probability 4573114274502628759
    begin_IR
      LIR
      nr  720  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  722  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  724  <|@ instruction CMPCONSTBRANCH [v130|QWORD[*] + v21|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B114 -> B115 falseDestination: B114 -> B116 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B120" 
    xhandlers
    flags 
    probability 4572467849267734178
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v208|QWORD = MOVE v202|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  728  <|@ instruction JUMP ~[] destination: B115 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B117" "B118" 
    xhandlers
    flags 
    probability 4558310625150728107
    begin_IR
      LIR
      nr  730  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  732  <|@ instruction MOVB [v130|QWORD[*] + v21|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  734  <|@ instruction v131|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  736  <|@ instruction v132|QWORD[*] = ADD (x: v130|QWORD[*], y: v21|QWORD) size: QWORD <|@ <|@
      nr  738  <|@ instruction TESTBRANCH (x: v131|QWORD, y: v131|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B116 -> B117 falseDestination: B116 -> B118 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B120" 
    xhandlers
    flags 
    probability 4557793484962812442
    begin_IR
      LIR
      nr  740  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  742  <|@ instruction v133|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  744  <|@ instruction MOV (x: [v133|QWORD + v131|QWORD * 1 - 8], y: v132|QWORD[*]) size: QWORD <|@ <|@
      nr  746  <|@ instruction v134|QWORD = LEA [v131|QWORD - 8] size: QWORD <|@ <|@
      nr  748  <|@ instruction MOV (x: [r15|QWORD + 72], y: v134|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v208|QWORD = MOVE v202|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  750  <|@ instruction JUMP ~[] destination: B118 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B94" "B95" 
    xhandlers
    flags 
    probability 4554832167497868566
    begin_IR
      LIR
      nr  752  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v185|DWORD = MOVE v169|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v203|QWORD[.] = MOVE v180|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  754  <|@ instruction TESTBRANCH (x: v5|DWORD, y: v5|DWORD) trueDestinationProbability: 0.4891304347826087 condition: = trueDestination: B93 -> B94 falseDestination: B93 -> B95 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B96" "B98" 
    xhandlers
    flags 
    probability 4550463275345577801
    begin_IR
      LIR
      nr  756  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v207|QWORD[.] = MOVE v203|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  758  <|@ instruction v114|DWORD[_] = MOV [v0|QWORD[.] + 52] size: DWORD <|@ <|@
      nr  760  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:670) [bci: 292]
locals: v0|QWORD[.] - - - - v5|DWORD - - - - - - - 
>@ <|@ instruction NULLCHECK [v114|DWORD[_] * 8] state [bci:292] <|@ <|@
      nr  762  <|@ instruction v115|DWORD = MOV [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  764  <|@ instruction v117|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr  766  <|@ instruction v116|QWORD = UNCOMPRESSPOINTER (input: v115|DWORD, ~baseRegister: v117|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr  768  <|@ instruction v118|QWORD = MOV [v116|QWORD + 872] size: QWORD <|@ <|@
      nr  770  <|@ instruction v119|QWORD = MOV [v118|QWORD + 64] size: QWORD <|@ <|@
      nr  772  <|@ instruction v120|QWORD[.] = UNCOMPRESSPOINTER (input: v114|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v213|QWORD[.] = MOVE v207|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  774  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v214|QWORD[.] = MOVE v120|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  776  <|@ instruction rdx|QWORD[.] = MOVE v120|QWORD[.] moveKind: QWORD <|@ <|@
      nr  778  <|@ instruction rbx|QWORD = MOVE v118|QWORD moveKind: QWORD <|@ <|@
      nr  780  <|@ instruction rax|QWORD = MOVE v119|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v216|QWORD[.] = MOVE v214|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v215|QWORD[.] = MOVE v213|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  782  <|@ st <@st|@live-base-pointers: []
java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 15]
locals: v0|QWORD[.] - v120|QWORD[.] - 
java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
locals: - - - - - - - - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<LinkedHashMap.removeEldestEntry(Map$Entry)> state [bci:15, 295] <|@ <|@
      nr  784  <|@ instruction v121|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  786  <|@ instruction TESTBRANCH (x: v121|DWORD, y: v121|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B95 -> B96 falseDestination: B95 -> B98 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B97" 
    xhandlers
    flags 
    probability 4550463275345577801
    begin_IR
      LIR
      nr  788  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  790  <|@ instruction JUMP ~[] destination: B96 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B97" 
    xhandlers
    flags 
    probability 4550193860395418340
    begin_IR
      LIR
      nr  792  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  794  <|@ instruction JUMP ~[] destination: B94 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B120" 
    xhandlers
    flags 
    probability 4543399067768740112
    begin_IR
      LIR
      nr  796  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  798  <|@ instruction rsi|QWORD = MOVE v132|QWORD[*] moveKind: QWORD <|@ <|@
      nr  800  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction v208|QWORD = MOVE v202|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  802  <|@ instruction JUMP ~[] destination: B117 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B119" "B109" "B117" "B118" "B115" "B113" "B111" 
    successors 
    xhandlers
    flags 
    probability 4589652288651159933
    begin_IR
      LIR
      nr  804  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  806  <|@ instruction v135|QWORD = MOV [v19|QWORD + 688] size: QWORD <|@ <|@
      nr  808  <|@ instruction v136|QWORD = MOV [v135|QWORD + 64] size: QWORD <|@ <|@
      nr  810  <|@ instruction v137|QWORD[.] = UNCOMPRESSPOINTER (input: v122|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  812  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  814  <|@ instruction rdx|QWORD[.] = MOVE v110|QWORD[.] moveKind: QWORD <|@ <|@
      nr  816  <|@ instruction rbx|QWORD = MOVE v135|QWORD moveKind: QWORD <|@ <|@
      nr  818  <|@ instruction rax|QWORD = MOVE v136|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v220|QWORD[.] = MOVE v137|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  820  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:663) [bci: 253]
locals: - - - - - - - - - - - - v137|QWORD[.] 
>@ <|@ instruction - = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<HashMap.afterNodeAccess(HashMap$Node)> state [bci:253] <|@ <|@
      nr  822  <|@ instruction rax|QWORD[.] = MOVE v137|QWORD[.] moveKind: QWORD <|@ <|@
      nr  824  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4542678729597855531
    begin_IR
      LIR
      nr  826  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v156|QWORD[.] = MOVE v70|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v211|QWORD = MOVE v179|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v192|QWORD[.] = MOVE v176|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  828  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] - v12|DWORD - - - - 
>@ <|@ instruction v73|DWORD = MOV [v2|QWORD[.] + 8] size: DWORD state [bci:29] <|@ <|@
      nr  830  <|@ instruction v75|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr  832  <|@ instruction v74|QWORD = UNCOMPRESSPOINTER (input: v73|DWORD, ~baseRegister: v75|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr  834  <|@ instruction v76|QWORD = MOV [v74|QWORD + 464] size: QWORD <|@ <|@
      nr  836  <|@ instruction v77|QWORD = MOV [v76|QWORD + 64] size: QWORD <|@ <|@
      nr  838  <|@ instruction rsi|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  840  <|@ instruction rdx|QWORD[.] = MOVE v72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  842  <|@ instruction rbx|QWORD = MOVE v76|QWORD moveKind: QWORD <|@ <|@
      nr  844  <|@ instruction rax|QWORD = MOVE v77|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v224|QWORD = STACKMOVE (input: v219|QWORD, ~backupSlot: vstack:9|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v225|DWORD = STACKMOVE (input: v212|DWORD, ~backupSlot: vstack:11|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v226|QWORD = STACKMOVE (input: v211|QWORD, ~backupSlot: vstack:9|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v227|DWORD[_] = STACKMOVE (input: v209|DWORD[_], ~backupSlot: vstack:11|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v228|DWORD = STACKMOVE (input: v201|DWORD, ~backupSlot: vstack:11|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v223|QWORD[.] = STACKMOVE (input: v210|QWORD[.], ~backupSlot: vstack:9|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v221|QWORD[.] = MOVE v189|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v222|QWORD[.] = STACKMOVE (input: v156|QWORD[.], ~backupSlot: vstack:9|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  846  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:641) [bci: 91]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] v70|QWORD[.] - - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:91] <|@ <|@
      nr  848  <|@ instruction v78|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  850  <|@ instruction TESTBRANCH (x: v78|DWORD, y: v78|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B86" 
    xhandlers
    flags 
    probability 4542678729597855531
    begin_IR
      LIR
      nr  852  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v110|QWORD[.] = MOVE v222|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  854  <|@ instruction JUMP ~[] destination: B53 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B63" 
    xhandlers
    flags 
    probability 4529894057192690854
    begin_IR
      LIR
      nr  856  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v178|QWORD[.] = MOVE v164|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v192|QWORD[.] = MOVE v176|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  858  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] v80|QWORD[.] - - - - v81|DWORD 
>@ <|@ instruction v86|DWORD = MOV [v2|QWORD[.] + 8] size: DWORD state [bci:134] <|@ <|@
      nr  860  <|@ instruction v88|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr  862  <|@ instruction v87|QWORD = UNCOMPRESSPOINTER (input: v86|DWORD, ~baseRegister: v88|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr  864  <|@ instruction v89|QWORD = MOV [v87|QWORD + 464] size: QWORD <|@ <|@
      nr  866  <|@ instruction v90|QWORD = MOV [v89|QWORD + 64] size: QWORD <|@ <|@
      nr  868  <|@ instruction rsi|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  870  <|@ instruction rdx|QWORD[.] = MOVE v85|QWORD[.] moveKind: QWORD <|@ <|@
      nr  872  <|@ instruction rbx|QWORD = MOVE v89|QWORD moveKind: QWORD <|@ <|@
      nr  874  <|@ instruction rax|QWORD = MOVE v90|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v234|QWORD[.] = MOVE v230|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  876  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:654) [bci: 203]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] - - - v83|QWORD[.] - v81|DWORD 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:203] <|@ <|@
      nr  878  <|@ instruction v91|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  880  <|@ instruction TESTBRANCH (x: v91|DWORD, y: v91|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B86" 
    xhandlers
    flags 
    probability 4529894057192690854
    begin_IR
      LIR
      nr  882  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v110|QWORD[.] = MOVE v163|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  884  <|@ instruction JUMP ~[] destination: B63 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4523100981620127249
    begin_IR
      LIR
      nr  886  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v226|QWORD = MOVE v179|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v193|DWORD = MOVE v154|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v194|DWORD = MOVE v14|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v192|QWORD[.] = MOVE v176|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  888  <|@ instruction v33|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>} <|@ <|@
      nr  890  <|@ instruction rsi|QWORD = MOVE v33|QWORD moveKind: QWORD <|@ <|@
      nr  892  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] - v12|DWORD - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7fba62ccef80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:29] <|@ <|@
      nr  894  <|@ instruction v34|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  896  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] - v12|DWORD - - - - 
>@ <|@ instruction NULLCHECK [v34|QWORD[.]] state [bci:29] <|@ <|@
      nr   -1  <|@ instruction v37|QWORD[.] = MOVE v34|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  898  <|@ instruction JUMP ~[] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" 
    xhandlers
    flags 
    probability 4518403274531071726
    begin_IR
      LIR
      nr  900  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  902  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  904  <|@ instruction rdx|QWORD[.] = MOVE v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  906  <|@ instruction rcx|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr  908  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:650) [bci: 169]
locals: v0|QWORD[.] - - v3|QWORD[.] v4|DWORD v5|DWORD - - - - v83|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<HashMap.treeifyBin(HashMap$Node[], int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:169] <|@ <|@
      nr   -1  <|@ instruction v110|QWORD[.] = MOVE v163|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  910  <|@ instruction JUMP ~[] destination: B85 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B86" 
    xhandlers
    flags 
    probability 4510226010095555986
    begin_IR
      LIR
      nr  912  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v222|QWORD[.] = MOVE v70|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v227|DWORD[_] = MOVE v22|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v226|QWORD = MOVE v21|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v224|QWORD = MOVE v19|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v192|QWORD[.] = MOVE v11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v225|DWORD = MOVE v5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v228|DWORD = MOVE v4|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v223|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v234|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v171|DWORD = MOVE v1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v215|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  914  <|@ instruction rsi|QWORD[.] = MOVE v70|QWORD[.] moveKind: QWORD <|@ <|@
      nr  916  <|@ instruction rdx|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  918  <|@ instruction rcx|QWORD[.] = MOVE v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  920  <|@ instruction r8|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr  922  <|@ instruction r9|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  924  <|@ instruction rdi|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  926  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:644) [bci: 123]
locals: v0|QWORD[.] - - v3|QWORD[.] v4|DWORD v5|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|QWORD[.], rdi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap$TreeNode.putTreeVal(HashMap, HashMap$Node[], int, Object, Object)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:123] <|@ <|@
      nr  928  <|@ instruction v79|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v110|QWORD[.] = MOVE v79|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  930  <|@ instruction JUMP ~[] destination: B55 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B120" 
    xhandlers
    flags 
    probability 4508568125070994604
    begin_IR
      LIR
      nr  932  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v224|QWORD = MOVE v183|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v228|DWORD = MOVE v175|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v215|QWORD[.] = MOVE v180|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  934  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:659) [bci: 222]
locals: v0|QWORD[.] - - v3|QWORD[.] v4|DWORD v5|DWORD - - - - v110|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [v122|DWORD[_] * 8] state [bci:222] <|@ <|@
      nr   -1  <|@ instruction v208|QWORD = MOVE v224|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  936  <|@ instruction JUMP ~[] destination: B119 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  938  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v139|QWORD = MOVE input: long[5780|0x1694] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v138|DWORD = MOVE input: int[-51507|0xffffffffffff36cd] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v192|QWORD[.] = MOVE v11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v225|DWORD = MOVE v5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v228|DWORD = MOVE v4|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v223|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v234|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v171|DWORD = MOVE v1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v215|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v152|DWORD = MOVE v153|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  940  <|@ instruction JUMP ~[] destination: B47 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  942  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v174|QWORD[.] = MOVE v163|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v182|DWORD = MOVE v166|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  944  <|@ instruction MOV [r15|QWORD + 1156] y: -157971 size: DWORD <|@ <|@
      nr  946  <|@ instruction MOV [r15|QWORD + 1168] y: 1300 size: QWORD <|@ <|@
      nr  948  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:654) [bci: 206]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] - - - v83|QWORD[.] - v81|DWORD 
>@ <|@ instruction DEOPT info [bci:206] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  950  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v139|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v192|QWORD[.] = MOVE v11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v225|DWORD = MOVE v5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v228|DWORD = MOVE v4|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v223|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v234|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v171|DWORD = MOVE v1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v215|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v152|DWORD = MOVE v12|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v138|DWORD = MOVE input: int[-75547|0xfffffffffffed8e5] // MoveResolver resolve mapping <|@ <|@
      nr  952  <|@ instruction JUMP ~[] destination: B121 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B121" "B47" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  954  <|@ instruction [v138|DWORD, v139|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  956  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v138|DWORD) size: DWORD <|@ <|@
      nr  958  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v139|QWORD) size: QWORD <|@ <|@
      nr  960  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] - v12|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:29] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  962  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v198|DWORD = MOVE v155|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v192|QWORD[.] = MOVE v11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v225|DWORD = MOVE v5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v215|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  964  <|@ instruction JUMP ~[] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  966  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v215|QWORD[.] = MOVE v180|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  968  <|@ instruction MOV [r15|QWORD + 1156] y: -61235 size: DWORD <|@ <|@
      nr  970  <|@ instruction MOV [r15|QWORD + 1168] y: 8980 size: QWORD <|@ <|@
      nr  972  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:670) [bci: 292]
locals: v0|QWORD[.] - - - - v5|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:292] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  974  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v198|DWORD = MOVE v155|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v192|QWORD[.] = MOVE v11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v225|DWORD = MOVE v5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v215|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  976  <|@ instruction JUMP ~[] destination: B26 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B26" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  978  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  980  <|@ instruction MOV [r15|QWORD + 1156] y: -82987 size: DWORD <|@ <|@
      nr  982  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  984  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stack: v11|QWORD[.] v16|DWORD v38|QWORD[.] 
locals: v0|QWORD[.] - - - - v5|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:59] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  986  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v229|QWORD[.] = MOVE v222|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v197|QWORD[.] = MOVE v192|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  988  <|@ instruction MOV [r15|QWORD + 1156] y: -153363 size: DWORD <|@ <|@
      nr  990  <|@ instruction MOV [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  992  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:641) [bci: 94]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] v70|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:94] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  994  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v218|QWORD[.] = MOVE v216|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  996  <|@ instruction MOV [r15|QWORD + 1156] y: -161299 size: DWORD <|@ <|@
      nr  998  <|@ instruction MOV [r15|QWORD + 1168] y: 10260 size: QWORD <|@ <|@
      nr 1000  <|@ st <@st|@live-base-pointers: []
java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 18]
stack: v121|DWORD 
locals: v0|QWORD[.] - v120|QWORD[.] - 
java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
locals: - - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:18, 295] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1002  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1004  <|@ instruction MOV [r15|QWORD + 1156] y: -129299 size: DWORD <|@ <|@
      nr 1006  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 1008  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:634) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #21         // table:java.util.HashMap$Node[]
     4: dup           
     5: astore        6
     7: ifnull        19
    10: aload         6
    12: arraylength   
    13: dup           
    14: istore        8
    16: ifne          29
    19: aload_0       
    20: invokevirtual #23         // resize:()java.util.HashMap$Node[]
    23: dup           
    24: astore        6
    26: arraylength   
    27: istore        8
    29: aload         6
    31: iload         8
    33: iconst_1      
    34: isub          
    35: iload_1       
    36: iand          
    37: dup           
    38: istore        9
    40: aaload        
    41: dup           
    42: astore        7
    44: ifnonnull     63
    47: aload         6
    49: iload         9
    51: aload_0       
    52: iload_1       
    53: aload_2       
    54: aload_3       
    55: aconst_null   
    56: invokevirtual #40         // newNode:(int, java.lang.Object, java.lang.Object, java.util.HashMap$Node)java.util.HashMap$Node
    59: aastore       
    60: goto          259
    63: aload         7
    65: getfield      #35         // java.util.HashMap$Node.hash:int
    68: iload_1       
    69: if_icmpne     104
    72: aload         7
    74: getfield      #36         // java.util.HashMap$Node.key:java.lang.Object
    77: dup           
    78: astore        11
    80: aload_2       
    81: if_acmpeq     97
    84: aload_2       
    85: ifnull        104
    88: aload_2       
    89: aload         11
    91: invokevirtual #37         // java.lang.Object.equals:(java.lang.Object)boolean
    94: ifeq          104
    97: aload         7
    99: astore        10
   101: goto          222
   104: aload         7
   106: instanceof    #180        // java.util.HashMap$TreeNode
   109: ifeq          131
   112: aload         7
   114: checkcast     #180        // java.util.HashMap$TreeNode
   117: aload_0       
   118: aload         6
   120: iload_1       
   121: aload_2       
   122: aload_3       
   123: invokevirtual #41         // java.util.HashMap$TreeNode.putTreeVal:(java.util.HashMap, java.util.HashMap$Node[], int, java.lang.Object, java.lang.Object)java.util.HashMap$TreeNode
   126: astore        10
   128: goto          222
   131: iconst_0      
   132: istore        12
   134: aload         7
   136: getfield      #38         // java.util.HashMap$Node.next:java.util.HashMap$Node
   139: dup           
   140: astore        10
   142: ifnonnull     175
   145: aload         7
   147: aload_0       
   148: iload_1       
   149: aload_2       
   150: aload_3       
   151: aconst_null   
   152: invokevirtual #40         // newNode:(int, java.lang.Object, java.lang.Object, java.util.HashMap$Node)java.util.HashMap$Node
   155: putfield      #38         // java.util.HashMap$Node.next:java.util.HashMap$Node
   158: iload         12
   160: bipush        7
   162: if_icmplt     222
   165: aload_0       
   166: aload         6
   168: iload_1       
   169: invokevirtual #42         // treeifyBin:(java.util.HashMap$Node[], int)void
   172: goto          222
   175: aload         10
   177: getfield      #35         // java.util.HashMap$Node.hash:int
   180: iload_1       
   181: if_icmpne     212
   184: aload         10
   186: getfield      #36         // java.util.HashMap$Node.key:java.lang.Object
   189: dup           
   190: astore        11
   192: aload_2       
   193: if_acmpeq     222
   196: aload_2       
   197: ifnull        212
   200: aload_2       
   201: aload         11
   203: invokevirtual #37         // java.lang.Object.equals:(java.lang.Object)boolean
   206: ifeq          212
   209: goto          222
   212: aload         10
   214: astore        7
   216: iinc          
   219: goto          134
   222: aload         10
   224: ifnull        259
   227: aload         10
   229: getfield      #34         // java.util.HashMap$Node.value:java.lang.Object
   232: astore        12
   234: iload         4
   236: ifeq          244
   239: aload         12
   241: ifnonnull     250
   244: aload         10
   246: aload_3       
   247: putfield      #34         // java.util.HashMap$Node.value:java.lang.Object
   250: aload_0       
   251: aload         10
   253: invokevirtual #43         // afterNodeAccess:(java.util.HashMap$Node)void
   256: aload         12
   258: areturn       
   259: aload_0       
   260: dup           
   261: getfield      #44         // modCount:int
   264: iconst_1      
   265: iadd          
   266: putfield      #44         // modCount:int
   269: aload_0       
   270: dup           
   271: getfield      #32         // size:int
   274: iconst_1      
   275: iadd          
   276: dup_x1        
   277: putfield      #32         // size:int
   280: aload_0       
   281: getfield      #17         // threshold:int
   284: if_icmple     292
   287: aload_0       
   288: invokevirtual #23         // resize:()java.util.HashMap$Node[]
   291: pop           
   292: aload_0       
   293: iload         5
   295: invokevirtual #45         // afterNodeInsertion:(boolean)void
   298: aconst_null   
   299: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanEliminateSpillMove"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|DWORD, rdi|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@21849dd slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:6|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr    8  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction v2|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:16|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   12  <|@ instruction v3|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:2|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   14  <|@ instruction v4|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:8|DWORD = MOVE r9|DWORD moveKind: DWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   16  <|@ instruction v5|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:5|DWORD = MOVE rdi|DWORD moveKind: DWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   18  <|@ instruction v6|DWORD[_] = MOV [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   20  <|@ instruction TESTBRANCH (x: v6|DWORD[_], y: v6|DWORD[_]) trueDestinationProbability: 0.0015880438063265454 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607168114973028567
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   24  <|@ instruction v9|DWORD = MOV [v6|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   26  <|@ instruction TESTBRANCH (x: v9|DWORD, y: v9|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607168114973028567
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOVE v9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   32  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B1" 
    successors "B6" "B121" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:10|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   36  <|@ instruction v13|DWORD = MOV [v11|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   38  <|@ instruction v14|DWORD = MOV [v11|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   40  <|@ instruction v15|DWORD = DEC v12|DWORD size: DWORD <|@ <|@
      nr   42  <|@ instruction v16|DWORD = AND (x: v1|DWORD, y: v15|DWORD) size: DWORD <|@ <|@
      nr   44  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v16|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B121 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B48" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v153|DWORD = MOVE v12|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   48  <|@ instruction v17|DWORD[_] = MOV [v11|QWORD[.] + v16|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   50  <|@ instruction v18|DWORD = MOV [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   52  <|@ instruction v20|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr   54  <|@ instruction v19|QWORD = UNCOMPRESSPOINTER (input: v18|DWORD, ~baseRegister: v20|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr   -1  <|@ instruction vstack:15|QWORD = MOVE r13|QWORD moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   56  <|@ instruction v21|QWORD = MOVE input: long[140438306553856|0x7fba57600000] <|@ <|@
      nr   -1  <|@ instruction vstack:12|QWORD = MOVE r14|QWORD moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   58  <|@ instruction v22|DWORD[_] = COMPRESSPOINTER (input: v3|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction vstack:3|DWORD[_] = MOVE r10|DWORD[_] moveKind: DWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   60  <|@ instruction TESTBRANCH (x: v17|DWORD[_], y: v17|DWORD[_]) trueDestinationProbability: 0.8229115724385652 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B12" "B47" 
    xhandlers
    flags 
    probability 4605587348047262798
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -2  <|@ instruction vstack:1|DWORD = MOVE rbp|DWORD moveKind: DWORD // LSRAOptimizeSpillPos: optimize spill pos <|@ <|@
      nr   64  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v19|QWORD - keyConstants: [meta{HotSpotType<Ljava/util/HashMap;, resolved>}, meta{HotSpotType<Ljava/util/LinkedHashMap;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/replacements/SnippetTemplate$LRUCache;, resolved>}] keyTargets: [B7 -> B8, B7 -> B12, B7 -> B12] defaultTarget: B7 -> B47 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4605585062831744793
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   68  <|@ instruction v23|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   70  <|@ instruction v24|QWORD = LEA [v23|QWORD + 32] size: QWORD <|@ <|@
      nr   72  <|@ instruction CMPBRANCH (x: v24|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4605510964398880109
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction MOV (x: [r15|QWORD + 440], y: v24|QWORD) size: QWORD <|@ <|@
      nr   78  <|@ instruction AMD64PREFETCH ~[v23|QWORD + 288] instr: 0 <|@ <|@
      nr   80  <|@ instruction MOV [v23|QWORD] y: 1 size: QWORD <|@ <|@
      nr   82  <|@ instruction MOV [v23|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>;compressed} <|@ <|@
      nr   84  <|@ instruction MOV [v23|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   86  <|@ instruction MOV [v23|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   88  <|@ instruction MOV [v23|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr   90  <|@ instruction v28|QWORD[.] = MOVE v23|QWORD moveKind: QWORD <|@ <|@
      nr   92  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 4605585062831744793
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   96  <|@ instruction MOV (x: [v29|QWORD[.] + 20], y: v22|DWORD[_]) size: DWORD <|@ <|@
      nr   98  <|@ instruction v30|DWORD[_] = COMPRESSPOINTER (input: v2|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  100  <|@ instruction MOV (x: [v29|QWORD[.] + 16], y: v30|DWORD[_]) size: DWORD <|@ <|@
      nr  102  <|@ instruction MOV (x: [v29|QWORD[.] + 12], y: v1|DWORD) size: DWORD <|@ <|@
      nr  104  <|@ instruction JUMP ~[] destination: B11 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B11" "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4605587348047262798
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  108  <|@ instruction v40|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr  110  <|@ instruction v39|QWORD = UNCOMPRESSPOINTER (input: v14|DWORD, ~baseRegister: v40|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr  112  <|@ instruction v41|QWORD = MOV [v39|QWORD + 208] size: QWORD <|@ <|@
      nr  114  <|@ instruction v42|DWORD = MOV [v41|QWORD + 20] size: DWORD <|@ <|@
      nr  116  <|@ instruction v43|DWORD = MOV [v38|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  118  <|@ instruction v45|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr  120  <|@ instruction v44|QWORD = UNCOMPRESSPOINTER (input: v43|DWORD, ~baseRegister: v45|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr  122  <|@ instruction v46|QWORD = MOVSXD v42|DWORD size: QWORD <|@ <|@
      nr  124  <|@ instruction CMPBRANCH (x: v41|QWORD, y: [v44|QWORD + v46|QWORD * 1]) trueDestinationProbability: 0.5 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B45" 
    xhandlers
    flags 
    probability 4601083748419892302
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction CMPCONSTBRANCH v42|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B45 y: 32 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4601083748419892302
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  132  <|@ instruction CMPBRANCH (x: v41|QWORD, y: v44|QWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4596580148792521806
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction v47|QWORD = MOV [v44|QWORD + 40] size: QWORD <|@ <|@
      nr  138  <|@ instruction v48|DWORD = MOV [v47|QWORD] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v49|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  140  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B24" 
    successors "B23" "B26" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4602807799859017905
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  144  <|@ instruction CMPBRANCH (x: v48|DWORD, y: v49|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602807799859017905
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction v50|DWORD = SHL v49|DWORD y: 3 size: DWORD <|@ <|@
      nr  150  <|@ instruction v51|DWORD = LEA [v50|DWORD + 8] size: DWORD <|@ <|@
      nr  152  <|@ instruction v52|QWORD = MOVSXD v51|DWORD size: QWORD <|@ <|@
      nr  154  <|@ instruction v53|QWORD = MOV [v47|QWORD + v52|QWORD * 1] size: QWORD <|@ <|@
      nr  156  <|@ instruction CMPBRANCH (x: v41|QWORD, y: v53|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B23 -> B25 falseDestination: B23 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B22" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4599230716294395707
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction v54|DWORD = INC v49|DWORD size: DWORD <|@ <|@
      nr  162  <|@ instruction JUMP ~[] destination: B24 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B27" 
    xhandlers
    flags 
    probability 4601083748419892302
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction JUMP ~[] destination: B17 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B27" 
    xhandlers
    flags 
    probability 4596580148792521807
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction MOV (x: [v44|QWORD + 32], y: v41|QWORD) size: QWORD <|@ <|@
      nr  172  <|@ instruction JUMP ~[] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B27" 
    xhandlers
    flags 
    probability 4596580148792521806
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction JUMP ~[] destination: B20 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B17" "B25" "B20" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4605587348047262798
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" 
    xhandlers
    flags 
    probability 4604846135197064160
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v154|DWORD = MOVE v155|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  184  <|@ instruction JUMP ~[] destination: B28 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B49" "B54" 
    xhandlers
    flags 
    probability 4595548303301553864
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction v70|QWORD[.] = UNCOMPRESSPOINTER (input: v17|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  190  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v17|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.01987559010066231 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4595421491411700642
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction CMPCONSTBRANCH [v17|DWORD[_] * 8 + 8] trueDestinationProbability: 2.021089053783065E-6 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B56 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4595421478772878611
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v81|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  198  <|@ instruction JUMP ~[] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B62" 
    successors "B65" "B58" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4595777537596400292
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  202  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] v80|QWORD[.] - - - - v81|DWORD 
>@ <|@ instruction v82|DWORD[_] = MOV [v80|QWORD[.] + 24] size: DWORD state [bci:134] <|@ <|@
      nr  204  <|@ instruction v83|QWORD[.] = UNCOMPRESSPOINTER (input: v82|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  206  <|@ instruction TESTBRANCH (x: v82|DWORD[_], y: v82|DWORD[_]) trueDestinationProbability: 0.5880075530332061 condition: = trueDestination: B57 -> B65 falseDestination: B57 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4590110563079390205
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v82|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.8692436604445373 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B62 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B57" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4576850562957400324
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] v80|QWORD[.] - - - - v81|DWORD 
>@ <|@ instruction SAFEPOINT v92|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 thread: r15 state [bci:134] <|@ <|@
      nr  216  <|@ instruction v93|DWORD = INC v81|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v80|QWORD[.] = MOVE v83|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  218  <|@ instruction JUMP ~[] destination: B62 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4592437312858669387
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v159|QWORD[.] = MOVE v83|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v158|DWORD = MOVE v81|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v157|QWORD[.] = MOVE v80|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v160|QWORD[.] = MOVE v161|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  222  <|@ instruction v94|QWORD = MOV [v19|QWORD + 680] size: QWORD <|@ <|@
      nr  224  <|@ instruction v95|QWORD = MOV [v94|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v140|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  226  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v141|DWORD = MOVE v1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  228  <|@ instruction rdx|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr  230  <|@ instruction rcx|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v163|QWORD[.] = STACKMOVE (input: v159|QWORD[.], ~backupSlot: vstack:9|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v143|QWORD[.] = MOVE v160|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  232  <|@ instruction r8|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  234  <|@ instruction r9|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  236  <|@ instruction rbx|QWORD = MOVE v94|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  238  <|@ instruction rax|QWORD = MOVE v95|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v166|DWORD = STACKMOVE (input: v158|DWORD, ~backupSlot: vstack:11|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v171|DWORD = MOVE v141|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v164|QWORD[.] = STACKMOVE (input: v157|QWORD[.], ~backupSlot: vstack:9|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  240  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:648) [bci: 152]
stack: v80|QWORD[.] 
locals: v0|QWORD[.] v1|DWORD - v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] - - - v83|QWORD[.] - v81|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.]]) [] callTarget: HotSpotMethod<HashMap.newNode(int, Object, Object, HashMap$Node)> state [bci:152] <|@ <|@
      nr  242  <|@ instruction v96|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  244  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B67 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B72" 
    xhandlers
    flags 
    probability 4591660023639118941
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v178|QWORD[.] = MOVE v164|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v179|QWORD = MOVE v165|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v176|QWORD[.] = MOVE v162|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  248  <|@ instruction JUMP ~[] destination: B66 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4590594123464754032
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v154|DWORD = MOVE v155|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  252  <|@ instruction v55|QWORD[.+] = LEA [v11|QWORD[.] + v16|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  254  <|@ instruction v56|DWORD[_] = MOV [v55|QWORD[.+]] size: DWORD <|@ <|@
      nr  256  <|@ instruction TESTBRANCH (x: v56|DWORD[_], y: v56|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4590001153184595122
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction v57|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  262  <|@ instruction v58|QWORD[.] = UNCOMPRESSPOINTER (input: v56|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  264  <|@ instruction TESTBRANCH (x: v57|QWORD, y: v57|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4589467479932452103
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction v59|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  270  <|@ instruction MOV (x: [v59|QWORD + v57|QWORD * 1 - 8], y: v58|QWORD[.]) size: QWORD <|@ <|@
      nr  272  <|@ instruction v60|QWORD = LEA [v57|QWORD - 8] size: QWORD <|@ <|@
      nr  274  <|@ instruction MOV (x: [r15|QWORD + 40], y: v60|QWORD) size: QWORD <|@ <|@
      nr  276  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B64" "B60" 
    xhandlers
    flags 
    probability 4589398445432346844
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v163|QWORD[.] = MOVE v83|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v166|DWORD = MOVE v81|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v164|QWORD[.] = MOVE v80|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v171|DWORD = MOVE v1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  280  <|@ instruction v84|DWORD[_] = MOV [v82|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  282  <|@ instruction v85|QWORD[.] = UNCOMPRESSPOINTER (input: v84|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  284  <|@ instruction CMPBRANCH (x: v85|QWORD[.], y: v2|QWORD[.]) trueDestinationProbability: 0.9998932466496128 condition: = trueDestination: B59 -> B64 falseDestination: B59 -> B60 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B86" 
    xhandlers
    flags 
    probability 4589397940059341918
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v110|QWORD[.] = MOVE v163|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  288  <|@ instruction JUMP ~[] destination: B64 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4577371935537457006
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v178|QWORD[.] = MOVE v164|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v176|QWORD[.] = MOVE v162|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  292  <|@ instruction v97|QWORD[.+] = LEA [v80|QWORD[.] + 24] size: QWORD <|@ <|@
      nr  294  <|@ instruction v98|DWORD[_] = MOV [v97|QWORD[.+]] size: DWORD <|@ <|@
      nr  296  <|@ instruction TESTBRANCH (x: v98|DWORD[_], y: v98|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B67 -> B68 falseDestination: B67 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" "B71" 
    xhandlers
    flags 
    probability 4576750104161816650
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  300  <|@ instruction v99|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  302  <|@ instruction v100|QWORD[.] = UNCOMPRESSPOINTER (input: v98|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  304  <|@ instruction TESTBRANCH (x: v99|QWORD, y: v99|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    probability 4576190455923740329
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  308  <|@ instruction v101|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  310  <|@ instruction MOV (x: [v101|QWORD + v99|QWORD * 1 - 8], y: v100|QWORD[.]) size: QWORD <|@ <|@
      nr  312  <|@ instruction v102|QWORD = LEA [v99|QWORD - 8] size: QWORD <|@ <|@
      nr  314  <|@ instruction MOV (x: [r15|QWORD + 40], y: v102|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v179|QWORD = MOVE v165|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  316  <|@ instruction JUMP ~[] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    probability 4575897384022324722
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  320  <|@ instruction JUMP ~[] destination: B30 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4575895921484393205
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v154|DWORD = MOVE v155|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v171|DWORD = MOVE v1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  324  <|@ instruction v25|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>} <|@ <|@
      nr  326  <|@ instruction rsi|QWORD = MOVE v25|QWORD moveKind: QWORD <|@ <|@
      nr  328  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] - v12|DWORD - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7fba62ccef80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:29] <|@ <|@
      nr  330  <|@ instruction v26|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  332  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] - v12|DWORD - - - - 
>@ <|@ instruction NULLCHECK [v26|QWORD[.]] state [bci:29] <|@ <|@
      nr   -1  <|@ instruction v22|DWORD[_] = MOVE v168|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = MOVE v165|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = MOVE v149|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOVE v169|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE v171|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE v170|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  334  <|@ instruction JUMP ~[] destination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4575188794187971253
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  338  <|@ instruction rsi|QWORD[.] = MOVE v58|QWORD[.] moveKind: QWORD <|@ <|@
      nr  340  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  342  <|@ instruction JUMP ~[] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" "B33" "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4605587348047262798
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction v61|DWORD[_] = COMPRESSPOINTER (input: v38|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  348  <|@ instruction MOV (x: [v11|QWORD[.] + v16|DWORD * 4 + 16], y: v61|DWORD[_]) size: DWORD <|@ <|@
      nr  350  <|@ instruction v62|QWORD[.+] = LEA [v11|QWORD[.] + v16|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  352  <|@ instruction v63|QWORD[*] = XOR (x: v62|QWORD[.+], y: v38|QWORD[.]) size: QWORD <|@ <|@
      nr  354  <|@ instruction TESTCONSTBRANCH v63|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4604846135197064160
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  358  <|@ instruction TESTBRANCH (x: v38|QWORD[.], y: v38|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4604179043631885386
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v179|QWORD = MOVE v165|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  362  <|@ instruction v65|QWORD[.+] = LEA [v11|QWORD[.] + v16|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  364  <|@ instruction v64|QWORD[*] = SHR v65|QWORD[.+] y: 9 size: QWORD <|@ <|@
      nr  366  <|@ instruction CMPCONSTBRANCH [v64|QWORD[*] + v21|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B88" 
    xhandlers
    flags 
    probability 4603578661223224489
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v180|QWORD[.] = MOVE v170|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  370  <|@ instruction JUMP ~[] destination: B39 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B88" 
    xhandlers
    flags 
    probability 4590594123464754032
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v180|QWORD[.] = MOVE v170|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  374  <|@ instruction JUMP ~[] destination: B35 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B88" 
    xhandlers
    flags 
    probability 4590001153184595122
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v180|QWORD[.] = MOVE v170|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  378  <|@ instruction JUMP ~[] destination: B37 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4589467479932452103
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  382  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  384  <|@ instruction CMPCONSTBRANCH [v64|QWORD[*] + v21|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B88" 
    xhandlers
    flags 
    probability 4588806327720511347
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v180|QWORD[.] = MOVE v170|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  388  <|@ instruction JUMP ~[] destination: B41 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4574334916984542422
    begin_IR
      LIR
      nr  390  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  392  <|@ instruction MOVB [v64|QWORD[*] + v21|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  394  <|@ instruction v66|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  396  <|@ instruction v67|QWORD[*] = ADD (x: v64|QWORD[*], y: v21|QWORD) size: QWORD <|@ <|@
      nr  398  <|@ instruction TESTBRANCH (x: v66|QWORD, y: v66|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B88" 
    xhandlers
    flags 
    probability 4573566427501456474
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  402  <|@ instruction v68|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  404  <|@ instruction MOV (x: [v68|QWORD + v66|QWORD * 1 - 8], y: v67|QWORD[*]) size: QWORD <|@ <|@
      nr  406  <|@ instruction v69|QWORD = LEA [v66|QWORD - 8] size: QWORD <|@ <|@
      nr  408  <|@ instruction MOV (x: [r15|QWORD + 72], y: v69|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v180|QWORD[.] = MOVE v170|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  410  <|@ instruction JUMP ~[] destination: B44 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4570262383476918658
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v171|DWORD = MOVE v1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  414  <|@ instruction v71|DWORD[_] = MOV [v17|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  416  <|@ instruction v72|QWORD[.] = UNCOMPRESSPOINTER (input: v71|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  418  <|@ instruction CMPBRANCH (x: v72|QWORD[.], y: v2|QWORD[.]) trueDestinationProbability: 0.9854570809572428 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B86" 
    xhandlers
    flags 
    probability 4570144353713859813
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v110|QWORD[.] = MOVE v70|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  422  <|@ instruction JUMP ~[] destination: B50 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 4564966382317228292
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v171|DWORD = MOVE v1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  426  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  428  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:635) [bci: 20]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.resize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:20] <|@ <|@
      nr  430  <|@ instruction v7|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  432  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:635) [bci: 23]
stack: Object[null] 
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD - - - - - - - 
>@ <|@ instruction v8|DWORD = MOV [v7|QWORD[.] + 12] size: DWORD state [bci:23] <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOVE v8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = MOVE v7|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOVE v169|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVE v167|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE v173|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE v188|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE v171|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE v170|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  434  <|@ instruction JUMP ~[] destination: B1 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B72" 
    xhandlers
    flags 
    probability 4562617473904064804
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v179|QWORD = MOVE v165|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  438  <|@ instruction JUMP ~[] destination: B68 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    probability 4562093595080792590
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v179|QWORD = MOVE v165|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  442  <|@ instruction rsi|QWORD[.] = MOVE v100|QWORD[.] moveKind: QWORD <|@ <|@
      nr  444  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  446  <|@ instruction JUMP ~[] destination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B66" "B68" "B71" "B70" 
    successors "B73" "B74" 
    xhandlers
    flags 
    probability 4592437312858669387
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  450  <|@ instruction v103|DWORD[_] = COMPRESSPOINTER (input: v96|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  452  <|@ instruction MOV (x: [v80|QWORD[.] + 24], y: v103|DWORD[_]) size: DWORD <|@ <|@
      nr  454  <|@ instruction v104|QWORD[*] = XOR (x: v80|QWORD[.], y: v96|QWORD[.]) size: QWORD <|@ <|@
      nr  456  <|@ instruction TESTCONSTBRANCH v104|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    probability 4591660023639118941
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  460  <|@ instruction TESTBRANCH (x: v96|QWORD[.], y: v96|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    probability 4590960463341523540
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  464  <|@ instruction v105|QWORD[*] = SHR v80|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  466  <|@ instruction CMPCONSTBRANCH [v105|QWORD[*] + v21|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B83" 
    xhandlers
    flags 
    probability 4590330859073687679
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  470  <|@ instruction JUMP ~[] destination: B77 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B83" 
    xhandlers
    flags 
    probability 4577371935537457006
    begin_IR
      LIR
      nr  472  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  474  <|@ instruction JUMP ~[] destination: B73 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B83" 
    xhandlers
    flags 
    probability 4576750104161816649
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  478  <|@ instruction JUMP ~[] destination: B75 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    probability 4576190455923740328
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  482  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  484  <|@ instruction CMPCONSTBRANCH [v105|QWORD[*] + v21|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B83" 
    xhandlers
    flags 
    probability 4575686772509471639
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  488  <|@ instruction JUMP ~[] destination: B79 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    probability 4561198157899870475
    begin_IR
      LIR
      nr  490  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  492  <|@ instruction MOVB [v105|QWORD[*] + v21|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  494  <|@ instruction v106|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  496  <|@ instruction v107|QWORD[*] = ADD (x: v105|QWORD[*], y: v21|QWORD) size: QWORD <|@ <|@
      nr  498  <|@ instruction TESTBRANCH (x: v106|QWORD, y: v106|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    probability 4560392264437040573
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  502  <|@ instruction v108|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  504  <|@ instruction MOV (x: [v108|QWORD + v106|QWORD * 1 - 8], y: v107|QWORD[*]) size: QWORD <|@ <|@
      nr  506  <|@ instruction v109|QWORD = LEA [v106|QWORD - 8] size: QWORD <|@ <|@
      nr  508  <|@ instruction MOV (x: [r15|QWORD + 72], y: v109|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  510  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B88" 
    xhandlers
    flags 
    probability 4559287139136259037
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  514  <|@ instruction rsi|QWORD = MOVE v67|QWORD[*] moveKind: QWORD <|@ <|@
      nr  516  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction v180|QWORD[.] = MOVE v170|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  518  <|@ instruction JUMP ~[] destination: B43 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4553315745025075769
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v171|DWORD = MOVE v1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  522  <|@ instruction v31|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  524  <|@ instruction v32|QWORD = LEA [v31|QWORD + 40] size: QWORD <|@ <|@
      nr  526  <|@ instruction CMPBRANCH (x: v32|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4553268943811267021
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  530  <|@ instruction MOV (x: [r15|QWORD + 440], y: v32|QWORD) size: QWORD <|@ <|@
      nr  532  <|@ instruction AMD64PREFETCH ~[v31|QWORD + 296] instr: 0 <|@ <|@
      nr  534  <|@ instruction MOV [v31|QWORD] y: 1 size: QWORD <|@ <|@
      nr  536  <|@ instruction MOV [v31|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>;compressed} <|@ <|@
      nr  538  <|@ instruction MOV [v31|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  540  <|@ instruction MOV [v31|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  542  <|@ instruction MOV [v31|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  544  <|@ instruction MOV [v31|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  546  <|@ instruction v36|QWORD[.] = MOVE v31|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v147|DWORD = MOVE v14|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  548  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4553315745025075769
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v190|QWORD[.] = MOVE v37|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  552  <|@ instruction rsi|QWORD[.] = MOVE v37|QWORD[.] moveKind: QWORD <|@ <|@
      nr  554  <|@ instruction rdx|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr  556  <|@ instruction rcx|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  558  <|@ instruction r8|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  560  <|@ instruction r9|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v194|DWORD = STACKMOVE (input: v147|DWORD, ~backupSlot: vstack:11|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v195|QWORD[.] = MOVE v190|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  562  <|@ st <@st|@live-base-pointers: []
java.util.LinkedHashMap$Entry.<init>(LinkedHashMap.java:208) [bci: 6]
locals: - - - - - 
java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 9]
stack: v37|QWORD[.] 
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] Object[null] - 
java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stack: v11|QWORD[.] v16|DWORD 
locals: v0|QWORD[.] - - - - v5|DWORD - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.]] [] callTarget: HotSpotMethod<HashMap$Node.<init>(int, Object, Object, HashMap$Node)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:6, 9, 56] <|@ <|@
      nr  564  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  566  <|@ instruction rdx|QWORD[.] = MOVE v37|QWORD[.] moveKind: QWORD <|@ <|@
      nr  568  <|@ st <@st|@live-base-pointers: []
java.util.LinkedHashMap.newNode(LinkedHashMap.java:283) [bci: 17]
locals: - - - - - v37|QWORD[.] 
java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stack: v11|QWORD[.] v16|DWORD 
locals: v0|QWORD[.] - - - - v5|DWORD - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<LinkedHashMap.linkNodeAtEnd(LinkedHashMap$Entry)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:17, 56] <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[.] = MOVE v195|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = MOVE v191|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = MOVE v149|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOVE v194|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = MOVE v192|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOVE v169|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE v170|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  570  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    probability 4546075572092099182
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  574  <|@ instruction rsi|QWORD = MOVE v107|QWORD[*] moveKind: QWORD <|@ <|@
      nr  576  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  578  <|@ instruction JUMP ~[] destination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B73" "B75" "B77" "B79" "B82" "B81" 
    successors "B84" "B85" 
    xhandlers
    flags 
    probability 4592437312858669387
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  582  <|@ instruction CMPCONSTBRANCH v81|DWORD trueDestinationProbability: 0.9999886211240704 condition: < trueDestination: B83 -> B84 falseDestination: B83 -> B85 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" 
    xhandlers
    flags 
    probability 4592437224411893480
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v110|QWORD[.] = MOVE v163|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  586  <|@ instruction JUMP ~[] destination: B84 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B50" "B55" "B64" "B84" "B85" "B63" "B53" 
    successors "B87" "B100" 
    xhandlers
    flags 
    probability 4595548303301553864
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  590  <|@ instruction TESTBRANCH (x: v110|QWORD[.], y: v110|QWORD[.]) trueDestinationProbability: 0.6091185940042786 condition: = trueDestination: B86 -> B87 falseDestination: B86 -> B100 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B88" 
    xhandlers
    flags 
    probability 4592437118697206803
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v180|QWORD[.] = MOVE v170|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  594  <|@ instruction JUMP ~[] destination: B87 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B35" "B87" "B43" "B44" "B41" "B39" "B37" 
    successors "B89" "B90" 
    xhandlers
    flags 
    probability 4606558935301518032
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  598  <|@ instruction INC [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  600  <|@ instruction v111|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  602  <|@ instruction v112|DWORD = ADD (x: v111|DWORD, ~y: [v0|QWORD[.] + 20]) size: DWORD <|@ <|@
      nr  604  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v112|DWORD) size: DWORD <|@ <|@
      nr  606  <|@ instruction CMPBRANCH (x: v112|DWORD, y: [v0|QWORD[.] + 28]) trueDestinationProbability: 7.853038846579175E-4 condition: > trueDestination: B88 -> B89 falseDestination: B88 -> B90 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B91" 
    xhandlers
    flags 
    probability 4606552351536966788
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v183|QWORD = MOVE v149|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  610  <|@ instruction JUMP ~[] destination: B90 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" "B89" 
    successors "B92" "B93" "B99" 
    xhandlers
    flags 
    probability 4606558935301518032
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  614  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v19|QWORD - keyConstants: [meta{HotSpotType<Ljava/util/HashMap;, resolved>}, meta{HotSpotType<Ljava/util/LinkedHashMap;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/replacements/SnippetTemplate$LRUCache;, resolved>}] keyTargets: [B91 -> B92, B91 -> B93, B91 -> B93] defaultTarget: B91 -> B99 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B97" 
    xhandlers
    flags 
    probability 4606555909645339483
    begin_IR
      LIR
      nr  616  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  618  <|@ instruction JUMP ~[] destination: B92 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B92" "B94" "B96" 
    successors 
    xhandlers
    flags 
    probability 4606558935301518031
    begin_IR
      LIR
      nr  620  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  622  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  624  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B101" "B119" 
    xhandlers
    flags 
    probability 4589652288651159933
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v183|QWORD = MOVE v149|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v175|DWORD = MOVE v167|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v180|QWORD[.] = MOVE v170|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  628  <|@ instruction v122|DWORD[_] = MOV [v110|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  630  <|@ instruction TESTBRANCH (x: v4|DWORD, y: v4|DWORD) trueDestinationProbability: 0.9999962001170364 condition: = trueDestination: B100 -> B101 falseDestination: B100 -> B119 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B102" "B103" 
    xhandlers
    flags 
    probability 4589652269697845341
    begin_IR
      LIR
      nr  632  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  634  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B103 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B108" 
    xhandlers
    flags 
    probability 4589138949298219176
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v184|DWORD[_] = MOVE v168|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  638  <|@ instruction JUMP ~[] destination: B102 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" "B105" 
    xhandlers
    flags 
    probability 4574630580609171603
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  642  <|@ instruction v123|QWORD[.+] = LEA [v110|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  644  <|@ instruction v124|DWORD[_] = MOV [v123|QWORD[.+]] size: DWORD <|@ <|@
      nr  646  <|@ instruction TESTBRANCH (x: v124|DWORD[_], y: v124|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B103 -> B104 falseDestination: B103 -> B105 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B106" "B107" 
    xhandlers
    flags 
    probability 4573832524763622737
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  650  <|@ instruction v125|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  652  <|@ instruction v126|QWORD[.] = UNCOMPRESSPOINTER (input: v124|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  654  <|@ instruction TESTBRANCH (x: v125|QWORD, y: v125|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B105 -> B106 falseDestination: B105 -> B107 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B108" 
    xhandlers
    flags 
    probability 4573114274502628758
    begin_IR
      LIR
      nr  656  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  658  <|@ instruction v127|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  660  <|@ instruction MOV (x: [v127|QWORD + v125|QWORD * 1 - 8], y: v126|QWORD[.]) size: QWORD <|@ <|@
      nr  662  <|@ instruction v128|QWORD = LEA [v125|QWORD - 8] size: QWORD <|@ <|@
      nr  664  <|@ instruction MOV (x: [r15|QWORD + 40], y: v128|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v184|DWORD[_] = MOVE v168|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  666  <|@ instruction JUMP ~[] destination: B107 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B91" 
    xhandlers
    flags 
    probability 4559880998172045651
    begin_IR
      LIR
      nr  668  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v199|QWORD[.] = MOVE v180|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  670  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  672  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:669) [bci: 288]
locals: v0|QWORD[.] - - - - v5|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.resize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:288] <|@ <|@
      nr  674  <|@ instruction v113|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v183|QWORD = MOVE v202|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v180|QWORD[.] = MOVE v203|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  676  <|@ instruction JUMP ~[] destination: B89 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B108" 
    xhandlers
    flags 
    probability 4559523670035962382
    begin_IR
      LIR
      nr  678  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v184|DWORD[_] = MOVE v168|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  680  <|@ instruction JUMP ~[] destination: B104 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B108" 
    xhandlers
    flags 
    probability 4558885225359523289
    begin_IR
      LIR
      nr  682  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  684  <|@ instruction rsi|QWORD[.] = MOVE v126|QWORD[.] moveKind: QWORD <|@ <|@
      nr  686  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction v184|DWORD[_] = MOVE v168|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  688  <|@ instruction JUMP ~[] destination: B106 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B102" "B104" "B107" "B106" 
    successors "B109" "B110" 
    xhandlers
    flags 
    probability 4589652269697845341
    begin_IR
      LIR
      nr  690  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  692  <|@ instruction MOV (x: [v110|QWORD[.] + 20], y: v22|DWORD[_]) size: DWORD <|@ <|@
      nr  694  <|@ instruction v129|QWORD[*] = XOR (x: v110|QWORD[.], y: v3|QWORD[.]) size: QWORD <|@ <|@
      nr  696  <|@ instruction TESTCONSTBRANCH v129|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B108 -> B109 falseDestination: B108 -> B110 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" "B112" 
    xhandlers
    flags 
    probability 4589138949298219176
    begin_IR
      LIR
      nr  698  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v177|QWORD[.] = MOVE v173|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  700  <|@ instruction TESTBRANCH (x: v3|QWORD[.], y: v3|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B110 -> B111 falseDestination: B110 -> B112 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B113" "B114" 
    xhandlers
    flags 
    probability 4588241136471976702
    begin_IR
      LIR
      nr  702  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v196|QWORD = MOVE v191|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  704  <|@ instruction v130|QWORD[*] = SHR v110|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  706  <|@ instruction CMPCONSTBRANCH [v130|QWORD[*] + v21|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B112 -> B113 falseDestination: B112 -> B114 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B120" 
    xhandlers
    flags 
    probability 4587433104928358475
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v208|QWORD = MOVE v202|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  710  <|@ instruction JUMP ~[] destination: B113 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B120" 
    xhandlers
    flags 
    probability 4574630580609171603
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v208|QWORD = MOVE v202|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  714  <|@ instruction JUMP ~[] destination: B109 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B120" 
    xhandlers
    flags 
    probability 4573832524763622738
    begin_IR
      LIR
      nr  716  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v208|QWORD = MOVE v202|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  718  <|@ instruction JUMP ~[] destination: B111 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B115" "B116" 
    xhandlers
    flags 
    probability 4573114274502628759
    begin_IR
      LIR
      nr  720  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  722  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  724  <|@ instruction CMPCONSTBRANCH [v130|QWORD[*] + v21|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B114 -> B115 falseDestination: B114 -> B116 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B120" 
    xhandlers
    flags 
    probability 4572467849267734178
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v208|QWORD = MOVE v202|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  728  <|@ instruction JUMP ~[] destination: B115 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B117" "B118" 
    xhandlers
    flags 
    probability 4558310625150728107
    begin_IR
      LIR
      nr  730  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  732  <|@ instruction MOVB [v130|QWORD[*] + v21|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  734  <|@ instruction v131|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  736  <|@ instruction v132|QWORD[*] = ADD (x: v130|QWORD[*], y: v21|QWORD) size: QWORD <|@ <|@
      nr  738  <|@ instruction TESTBRANCH (x: v131|QWORD, y: v131|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B116 -> B117 falseDestination: B116 -> B118 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B120" 
    xhandlers
    flags 
    probability 4557793484962812442
    begin_IR
      LIR
      nr  740  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  742  <|@ instruction v133|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  744  <|@ instruction MOV (x: [v133|QWORD + v131|QWORD * 1 - 8], y: v132|QWORD[*]) size: QWORD <|@ <|@
      nr  746  <|@ instruction v134|QWORD = LEA [v131|QWORD - 8] size: QWORD <|@ <|@
      nr  748  <|@ instruction MOV (x: [r15|QWORD + 72], y: v134|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v208|QWORD = MOVE v202|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  750  <|@ instruction JUMP ~[] destination: B118 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B94" "B95" 
    xhandlers
    flags 
    probability 4554832167497868566
    begin_IR
      LIR
      nr  752  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v185|DWORD = MOVE v169|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  754  <|@ instruction TESTBRANCH (x: v5|DWORD, y: v5|DWORD) trueDestinationProbability: 0.4891304347826087 condition: = trueDestination: B93 -> B94 falseDestination: B93 -> B95 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B96" "B98" 
    xhandlers
    flags 
    probability 4550463275345577801
    begin_IR
      LIR
      nr  756  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v207|QWORD[.] = MOVE v203|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  758  <|@ instruction v114|DWORD[_] = MOV [v0|QWORD[.] + 52] size: DWORD <|@ <|@
      nr  760  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:670) [bci: 292]
locals: v0|QWORD[.] - - - - v5|DWORD - - - - - - - 
>@ <|@ instruction NULLCHECK [v114|DWORD[_] * 8] state [bci:292] <|@ <|@
      nr  762  <|@ instruction v115|DWORD = MOV [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  764  <|@ instruction v117|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr  766  <|@ instruction v116|QWORD = UNCOMPRESSPOINTER (input: v115|DWORD, ~baseRegister: v117|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr  768  <|@ instruction v118|QWORD = MOV [v116|QWORD + 872] size: QWORD <|@ <|@
      nr  770  <|@ instruction v119|QWORD = MOV [v118|QWORD + 64] size: QWORD <|@ <|@
      nr  772  <|@ instruction v120|QWORD[.] = UNCOMPRESSPOINTER (input: v114|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v213|QWORD[.] = MOVE v207|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  774  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v214|QWORD[.] = MOVE v120|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  776  <|@ instruction rdx|QWORD[.] = MOVE v120|QWORD[.] moveKind: QWORD <|@ <|@
      nr  778  <|@ instruction rbx|QWORD = MOVE v118|QWORD moveKind: QWORD <|@ <|@
      nr  780  <|@ instruction rax|QWORD = MOVE v119|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v216|QWORD[.] = MOVE v214|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  782  <|@ st <@st|@live-base-pointers: []
java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 15]
locals: v0|QWORD[.] - v120|QWORD[.] - 
java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
locals: - - - - - - - - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<LinkedHashMap.removeEldestEntry(Map$Entry)> state [bci:15, 295] <|@ <|@
      nr  784  <|@ instruction v121|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  786  <|@ instruction TESTBRANCH (x: v121|DWORD, y: v121|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B95 -> B96 falseDestination: B95 -> B98 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B97" 
    xhandlers
    flags 
    probability 4550463275345577801
    begin_IR
      LIR
      nr  788  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  790  <|@ instruction JUMP ~[] destination: B96 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B97" 
    xhandlers
    flags 
    probability 4550193860395418340
    begin_IR
      LIR
      nr  792  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  794  <|@ instruction JUMP ~[] destination: B94 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B120" 
    xhandlers
    flags 
    probability 4543399067768740112
    begin_IR
      LIR
      nr  796  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  798  <|@ instruction rsi|QWORD = MOVE v132|QWORD[*] moveKind: QWORD <|@ <|@
      nr  800  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction v208|QWORD = MOVE v202|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  802  <|@ instruction JUMP ~[] destination: B117 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B119" "B109" "B117" "B118" "B115" "B113" "B111" 
    successors 
    xhandlers
    flags 
    probability 4589652288651159933
    begin_IR
      LIR
      nr  804  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  806  <|@ instruction v135|QWORD = MOV [v19|QWORD + 688] size: QWORD <|@ <|@
      nr  808  <|@ instruction v136|QWORD = MOV [v135|QWORD + 64] size: QWORD <|@ <|@
      nr  810  <|@ instruction v137|QWORD[.] = UNCOMPRESSPOINTER (input: v122|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  812  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  814  <|@ instruction rdx|QWORD[.] = MOVE v110|QWORD[.] moveKind: QWORD <|@ <|@
      nr  816  <|@ instruction rbx|QWORD = MOVE v135|QWORD moveKind: QWORD <|@ <|@
      nr  818  <|@ instruction rax|QWORD = MOVE v136|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v220|QWORD[.] = MOVE v137|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  820  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:663) [bci: 253]
locals: - - - - - - - - - - - - v137|QWORD[.] 
>@ <|@ instruction - = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<HashMap.afterNodeAccess(HashMap$Node)> state [bci:253] <|@ <|@
      nr  822  <|@ instruction rax|QWORD[.] = MOVE v137|QWORD[.] moveKind: QWORD <|@ <|@
      nr  824  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4542678729597855531
    begin_IR
      LIR
      nr  826  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v156|QWORD[.] = MOVE v70|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  828  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] - v12|DWORD - - - - 
>@ <|@ instruction v73|DWORD = MOV [v2|QWORD[.] + 8] size: DWORD state [bci:29] <|@ <|@
      nr  830  <|@ instruction v75|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr  832  <|@ instruction v74|QWORD = UNCOMPRESSPOINTER (input: v73|DWORD, ~baseRegister: v75|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr  834  <|@ instruction v76|QWORD = MOV [v74|QWORD + 464] size: QWORD <|@ <|@
      nr  836  <|@ instruction v77|QWORD = MOV [v76|QWORD + 64] size: QWORD <|@ <|@
      nr  838  <|@ instruction rsi|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  840  <|@ instruction rdx|QWORD[.] = MOVE v72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  842  <|@ instruction rbx|QWORD = MOVE v76|QWORD moveKind: QWORD <|@ <|@
      nr  844  <|@ instruction rax|QWORD = MOVE v77|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v222|QWORD[.] = STACKMOVE (input: v156|QWORD[.], ~backupSlot: vstack:9|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  846  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:641) [bci: 91]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] v70|QWORD[.] - - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:91] <|@ <|@
      nr  848  <|@ instruction v78|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  850  <|@ instruction TESTBRANCH (x: v78|DWORD, y: v78|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B86" 
    xhandlers
    flags 
    probability 4542678729597855531
    begin_IR
      LIR
      nr  852  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v110|QWORD[.] = MOVE v222|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  854  <|@ instruction JUMP ~[] destination: B53 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B63" 
    xhandlers
    flags 
    probability 4529894057192690854
    begin_IR
      LIR
      nr  856  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v178|QWORD[.] = MOVE v164|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  858  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] v80|QWORD[.] - - - - v81|DWORD 
>@ <|@ instruction v86|DWORD = MOV [v2|QWORD[.] + 8] size: DWORD state [bci:134] <|@ <|@
      nr  860  <|@ instruction v88|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr  862  <|@ instruction v87|QWORD = UNCOMPRESSPOINTER (input: v86|DWORD, ~baseRegister: v88|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr  864  <|@ instruction v89|QWORD = MOV [v87|QWORD + 464] size: QWORD <|@ <|@
      nr  866  <|@ instruction v90|QWORD = MOV [v89|QWORD + 64] size: QWORD <|@ <|@
      nr  868  <|@ instruction rsi|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  870  <|@ instruction rdx|QWORD[.] = MOVE v85|QWORD[.] moveKind: QWORD <|@ <|@
      nr  872  <|@ instruction rbx|QWORD = MOVE v89|QWORD moveKind: QWORD <|@ <|@
      nr  874  <|@ instruction rax|QWORD = MOVE v90|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  876  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:654) [bci: 203]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] - - - v83|QWORD[.] - v81|DWORD 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:203] <|@ <|@
      nr  878  <|@ instruction v91|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  880  <|@ instruction TESTBRANCH (x: v91|DWORD, y: v91|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B86" 
    xhandlers
    flags 
    probability 4529894057192690854
    begin_IR
      LIR
      nr  882  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v110|QWORD[.] = MOVE v163|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  884  <|@ instruction JUMP ~[] destination: B63 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4523100981620127249
    begin_IR
      LIR
      nr  886  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v194|DWORD = MOVE v14|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  888  <|@ instruction v33|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>} <|@ <|@
      nr  890  <|@ instruction rsi|QWORD = MOVE v33|QWORD moveKind: QWORD <|@ <|@
      nr  892  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] - v12|DWORD - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7fba62ccef80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:29] <|@ <|@
      nr  894  <|@ instruction v34|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  896  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] - v12|DWORD - - - - 
>@ <|@ instruction NULLCHECK [v34|QWORD[.]] state [bci:29] <|@ <|@
      nr   -1  <|@ instruction v37|QWORD[.] = MOVE v34|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  898  <|@ instruction JUMP ~[] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" 
    xhandlers
    flags 
    probability 4518403274531071726
    begin_IR
      LIR
      nr  900  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  902  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  904  <|@ instruction rdx|QWORD[.] = MOVE v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  906  <|@ instruction rcx|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr  908  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:650) [bci: 169]
locals: v0|QWORD[.] - - v3|QWORD[.] v4|DWORD v5|DWORD - - - - v83|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<HashMap.treeifyBin(HashMap$Node[], int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:169] <|@ <|@
      nr   -1  <|@ instruction v110|QWORD[.] = MOVE v163|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  910  <|@ instruction JUMP ~[] destination: B85 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B86" 
    xhandlers
    flags 
    probability 4510226010095555986
    begin_IR
      LIR
      nr  912  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v222|QWORD[.] = MOVE v70|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v171|DWORD = MOVE v1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  914  <|@ instruction rsi|QWORD[.] = MOVE v70|QWORD[.] moveKind: QWORD <|@ <|@
      nr  916  <|@ instruction rdx|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  918  <|@ instruction rcx|QWORD[.] = MOVE v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  920  <|@ instruction r8|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr  922  <|@ instruction r9|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  924  <|@ instruction rdi|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  926  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:644) [bci: 123]
locals: v0|QWORD[.] - - v3|QWORD[.] v4|DWORD v5|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|QWORD[.], rdi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap$TreeNode.putTreeVal(HashMap, HashMap$Node[], int, Object, Object)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:123] <|@ <|@
      nr  928  <|@ instruction v79|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v110|QWORD[.] = MOVE v79|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  930  <|@ instruction JUMP ~[] destination: B55 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B120" 
    xhandlers
    flags 
    probability 4508568125070994604
    begin_IR
      LIR
      nr  932  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  934  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:659) [bci: 222]
locals: v0|QWORD[.] - - v3|QWORD[.] v4|DWORD v5|DWORD - - - - v110|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [v122|DWORD[_] * 8] state [bci:222] <|@ <|@
      nr   -1  <|@ instruction v208|QWORD = MOVE v224|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  936  <|@ instruction JUMP ~[] destination: B119 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  938  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v139|QWORD = MOVE input: long[5780|0x1694] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v138|DWORD = MOVE input: int[-51507|0xffffffffffff36cd] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v171|DWORD = MOVE v1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v152|DWORD = MOVE v153|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  940  <|@ instruction JUMP ~[] destination: B47 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  942  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v174|QWORD[.] = MOVE v163|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v182|DWORD = MOVE v166|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  944  <|@ instruction MOV [r15|QWORD + 1156] y: -157971 size: DWORD <|@ <|@
      nr  946  <|@ instruction MOV [r15|QWORD + 1168] y: 1300 size: QWORD <|@ <|@
      nr  948  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:654) [bci: 206]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] - - - v83|QWORD[.] - v81|DWORD 
>@ <|@ instruction DEOPT info [bci:206] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  950  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v139|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v171|DWORD = MOVE v1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v152|DWORD = MOVE v12|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v138|DWORD = MOVE input: int[-75547|0xfffffffffffed8e5] // MoveResolver resolve mapping <|@ <|@
      nr  952  <|@ instruction JUMP ~[] destination: B121 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B121" "B47" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  954  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  956  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v138|DWORD) size: DWORD <|@ <|@
      nr  958  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v139|QWORD) size: QWORD <|@ <|@
      nr  960  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] - v12|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:29] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  962  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v198|DWORD = MOVE v155|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  964  <|@ instruction JUMP ~[] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  966  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  968  <|@ instruction MOV [r15|QWORD + 1156] y: -61235 size: DWORD <|@ <|@
      nr  970  <|@ instruction MOV [r15|QWORD + 1168] y: 8980 size: QWORD <|@ <|@
      nr  972  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:670) [bci: 292]
locals: v0|QWORD[.] - - - - v5|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:292] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  974  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v198|DWORD = MOVE v155|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  976  <|@ instruction JUMP ~[] destination: B26 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B26" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  978  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  980  <|@ instruction MOV [r15|QWORD + 1156] y: -82987 size: DWORD <|@ <|@
      nr  982  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  984  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stack: v11|QWORD[.] v16|DWORD v38|QWORD[.] 
locals: v0|QWORD[.] - - - - v5|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:59] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  986  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v229|QWORD[.] = MOVE v222|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v197|QWORD[.] = MOVE v192|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  988  <|@ instruction MOV [r15|QWORD + 1156] y: -153363 size: DWORD <|@ <|@
      nr  990  <|@ instruction MOV [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  992  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:641) [bci: 94]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v11|QWORD[.] v70|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:94] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  994  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v218|QWORD[.] = MOVE v216|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  996  <|@ instruction MOV [r15|QWORD + 1156] y: -161299 size: DWORD <|@ <|@
      nr  998  <|@ instruction MOV [r15|QWORD + 1168] y: 10260 size: QWORD <|@ <|@
      nr 1000  <|@ st <@st|@live-base-pointers: []
java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 18]
stack: v121|DWORD 
locals: v0|QWORD[.] - v120|QWORD[.] - 
java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
locals: - - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:18, 295] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1002  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1004  <|@ instruction MOV [r15|QWORD + 1156] y: -129299 size: DWORD <|@ <|@
      nr 1006  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 1008  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:634) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #21         // table:java.util.HashMap$Node[]
     4: dup           
     5: astore        6
     7: ifnull        19
    10: aload         6
    12: arraylength   
    13: dup           
    14: istore        8
    16: ifne          29
    19: aload_0       
    20: invokevirtual #23         // resize:()java.util.HashMap$Node[]
    23: dup           
    24: astore        6
    26: arraylength   
    27: istore        8
    29: aload         6
    31: iload         8
    33: iconst_1      
    34: isub          
    35: iload_1       
    36: iand          
    37: dup           
    38: istore        9
    40: aaload        
    41: dup           
    42: astore        7
    44: ifnonnull     63
    47: aload         6
    49: iload         9
    51: aload_0       
    52: iload_1       
    53: aload_2       
    54: aload_3       
    55: aconst_null   
    56: invokevirtual #40         // newNode:(int, java.lang.Object, java.lang.Object, java.util.HashMap$Node)java.util.HashMap$Node
    59: aastore       
    60: goto          259
    63: aload         7
    65: getfield      #35         // java.util.HashMap$Node.hash:int
    68: iload_1       
    69: if_icmpne     104
    72: aload         7
    74: getfield      #36         // java.util.HashMap$Node.key:java.lang.Object
    77: dup           
    78: astore        11
    80: aload_2       
    81: if_acmpeq     97
    84: aload_2       
    85: ifnull        104
    88: aload_2       
    89: aload         11
    91: invokevirtual #37         // java.lang.Object.equals:(java.lang.Object)boolean
    94: ifeq          104
    97: aload         7
    99: astore        10
   101: goto          222
   104: aload         7
   106: instanceof    #180        // java.util.HashMap$TreeNode
   109: ifeq          131
   112: aload         7
   114: checkcast     #180        // java.util.HashMap$TreeNode
   117: aload_0       
   118: aload         6
   120: iload_1       
   121: aload_2       
   122: aload_3       
   123: invokevirtual #41         // java.util.HashMap$TreeNode.putTreeVal:(java.util.HashMap, java.util.HashMap$Node[], int, java.lang.Object, java.lang.Object)java.util.HashMap$TreeNode
   126: astore        10
   128: goto          222
   131: iconst_0      
   132: istore        12
   134: aload         7
   136: getfield      #38         // java.util.HashMap$Node.next:java.util.HashMap$Node
   139: dup           
   140: astore        10
   142: ifnonnull     175
   145: aload         7
   147: aload_0       
   148: iload_1       
   149: aload_2       
   150: aload_3       
   151: aconst_null   
   152: invokevirtual #40         // newNode:(int, java.lang.Object, java.lang.Object, java.util.HashMap$Node)java.util.HashMap$Node
   155: putfield      #38         // java.util.HashMap$Node.next:java.util.HashMap$Node
   158: iload         12
   160: bipush        7
   162: if_icmplt     222
   165: aload_0       
   166: aload         6
   168: iload_1       
   169: invokevirtual #42         // treeifyBin:(java.util.HashMap$Node[], int)void
   172: goto          222
   175: aload         10
   177: getfield      #35         // java.util.HashMap$Node.hash:int
   180: iload_1       
   181: if_icmpne     212
   184: aload         10
   186: getfield      #36         // java.util.HashMap$Node.key:java.lang.Object
   189: dup           
   190: astore        11
   192: aload_2       
   193: if_acmpeq     222
   196: aload_2       
   197: ifnull        212
   200: aload_2       
   201: aload         11
   203: invokevirtual #37         // java.lang.Object.equals:(java.lang.Object)boolean
   206: ifeq          212
   209: goto          222
   212: aload         10
   214: astore        7
   216: iinc          
   219: goto          134
   222: aload         10
   224: ifnull        259
   227: aload         10
   229: getfield      #34         // java.util.HashMap$Node.value:java.lang.Object
   232: astore        12
   234: iload         4
   236: ifeq          244
   239: aload         12
   241: ifnonnull     250
   244: aload         10
   246: aload_3       
   247: putfield      #34         // java.util.HashMap$Node.value:java.lang.Object
   250: aload_0       
   251: aload         10
   253: invokevirtual #43         // afterNodeAccess:(java.util.HashMap$Node)void
   256: aload         12
   258: areturn       
   259: aload_0       
   260: dup           
   261: getfield      #44         // modCount:int
   264: iconst_1      
   265: iadd          
   266: putfield      #44         // modCount:int
   269: aload_0       
   270: dup           
   271: getfield      #32         // size:int
   274: iconst_1      
   275: iadd          
   276: dup_x1        
   277: putfield      #32         // size:int
   280: aload_0       
   281: getfield      #17         // threshold:int
   284: if_icmple     292
   287: aload_0       
   288: invokevirtual #23         // resize:()java.util.HashMap$Node[]
   291: pop           
   292: aload_0       
   293: iload         5
   295: invokevirtual #45         // afterNodeInsertion:(boolean)void
   298: aconst_null   
   299: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScanAssignLocations"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|DWORD, rdi|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@21849dd slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:6|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   -1  <|@ instruction vstack:16|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   -1  <|@ instruction vstack:2|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   -1  <|@ instruction vstack:8|DWORD = MOVE r9|DWORD moveKind: DWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   -1  <|@ instruction vstack:5|DWORD = MOVE rdi|DWORD moveKind: DWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   18  <|@ instruction rbx|DWORD[_] = MOV [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   20  <|@ instruction TESTBRANCH (x: rbx|DWORD[_], y: rbx|DWORD[_]) trueDestinationProbability: 0.0015880438063265454 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607168114973028567
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   24  <|@ instruction rax|DWORD = MOV [rbx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   26  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607168114973028567
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   32  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B1" 
    successors "B6" "B121" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:10|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   36  <|@ instruction rax|DWORD = MOV [rbx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   38  <|@ instruction r11|DWORD = MOV [rbx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   40  <|@ instruction rbp|DWORD = DEC r10|DWORD size: DWORD <|@ <|@
      nr   42  <|@ instruction rbp|DWORD = AND (x: rdx|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr   44  <|@ instruction CMPBRANCH (x: rax|DWORD, y: rbp|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B121 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B48" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:0|DWORD = MOVE r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   48  <|@ instruction rax|DWORD[_] = MOV [rbx|QWORD[.] + rbp|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   50  <|@ instruction r13|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   52  <|@ instruction r14|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr   54  <|@ instruction r13|QWORD = UNCOMPRESSPOINTER (input: r13|DWORD, ~baseRegister: r14|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr   -1  <|@ instruction vstack:15|QWORD = MOVE r13|QWORD moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   56  <|@ instruction r14|QWORD = MOVE input: long[140438306553856|0x7fba57600000] <|@ <|@
      nr   -1  <|@ instruction vstack:12|QWORD = MOVE r14|QWORD moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   58  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction vstack:3|DWORD[_] = MOVE r10|DWORD[_] moveKind: DWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   60  <|@ instruction TESTBRANCH (x: rax|DWORD[_], y: rax|DWORD[_]) trueDestinationProbability: 0.8229115724385652 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B12" "B47" 
    xhandlers
    flags 
    probability 4605587348047262798
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -2  <|@ instruction vstack:1|DWORD = MOVE rbp|DWORD moveKind: DWORD // LSRAOptimizeSpillPos: optimize spill pos <|@ <|@
      nr   64  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~r13|QWORD - keyConstants: [meta{HotSpotType<Ljava/util/HashMap;, resolved>}, meta{HotSpotType<Ljava/util/LinkedHashMap;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/replacements/SnippetTemplate$LRUCache;, resolved>}] keyTargets: [B7 -> B8, B7 -> B12, B7 -> B12] defaultTarget: B7 -> B47 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4605585062831744793
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction rax|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   70  <|@ instruction rbp|QWORD = LEA [rax|QWORD + 32] size: QWORD <|@ <|@
      nr   72  <|@ instruction CMPBRANCH (x: rbp|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4605510964398880109
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction MOV (x: [r15|QWORD + 440], y: rbp|QWORD) size: QWORD <|@ <|@
      nr   78  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 288] instr: 0 <|@ <|@
      nr   80  <|@ instruction MOV [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr   82  <|@ instruction MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>;compressed} <|@ <|@
      nr   84  <|@ instruction MOV [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   86  <|@ instruction MOV [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   88  <|@ instruction MOV [rax|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr   90  <|@ instruction rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   92  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 4605585062831744793
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   96  <|@ instruction MOV (x: [rax|QWORD[.] + 20], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr   98  <|@ instruction rcx|DWORD[_] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  100  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr  102  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  104  <|@ instruction JUMP ~[] destination: B11 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B11" "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4605587348047262798
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  108  <|@ instruction rdx|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr  110  <|@ instruction r11|QWORD = UNCOMPRESSPOINTER (input: r11|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr  112  <|@ instruction rdx|QWORD = MOV [r11|QWORD + 208] size: QWORD <|@ <|@
      nr  114  <|@ instruction rcx|DWORD = MOV [rdx|QWORD + 20] size: DWORD <|@ <|@
      nr  116  <|@ instruction r8|DWORD = MOV [rax|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  118  <|@ instruction r9|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr  120  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: r9|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr  122  <|@ instruction r9|QWORD = MOVSXD rcx|DWORD size: QWORD <|@ <|@
      nr  124  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r8|QWORD + r9|QWORD * 1]) trueDestinationProbability: 0.5 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B45" 
    xhandlers
    flags 
    probability 4601083748419892302
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction CMPCONSTBRANCH rcx|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B45 y: 32 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4601083748419892302
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  132  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: r8|QWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4596580148792521806
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction rcx|QWORD = MOV [r8|QWORD + 40] size: QWORD <|@ <|@
      nr  138  <|@ instruction r9|DWORD = MOV [rcx|QWORD] size: DWORD <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  140  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B24" 
    successors "B23" "B26" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4602807799859017905
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  144  <|@ instruction CMPBRANCH (x: r9|DWORD, y: r10|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602807799859017905
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction r11|DWORD = SHL r10|DWORD y: 3 size: DWORD <|@ <|@
      nr  150  <|@ instruction r11|DWORD = LEA [r11|DWORD + 8] size: DWORD <|@ <|@
      nr  152  <|@ instruction r11|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr  154  <|@ instruction r11|QWORD = MOV [rcx|QWORD + r11|QWORD * 1] size: QWORD <|@ <|@
      nr  156  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: r11|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B23 -> B25 falseDestination: B23 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B22" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4599230716294395707
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction r10|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr  162  <|@ instruction JUMP ~[] destination: B24 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B27" 
    xhandlers
    flags 
    probability 4601083748419892302
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction JUMP ~[] destination: B17 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B27" 
    xhandlers
    flags 
    probability 4596580148792521807
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction MOV (x: [r8|QWORD + 32], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  172  <|@ instruction JUMP ~[] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B27" 
    xhandlers
    flags 
    probability 4596580148792521806
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction JUMP ~[] destination: B20 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B17" "B25" "B20" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4605587348047262798
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" 
    xhandlers
    flags 
    probability 4604846135197064160
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rbp|DWORD = MOVE vstack:1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  184  <|@ instruction JUMP ~[] destination: B28 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B49" "B54" 
    xhandlers
    flags 
    probability 4595548303301553864
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  190  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [rax|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.01987559010066231 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4595421491411700642
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction CMPCONSTBRANCH [rax|DWORD[_] * 8 + 8] trueDestinationProbability: 2.021089053783065E-6 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B56 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4595421478772878611
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rbp|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  198  <|@ instruction JUMP ~[] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B62" 
    successors "B65" "B58" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4595777537596400292
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  202  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] vstack:2|QWORD[.] r9|DWORD rdi|DWORD rbx|QWORD[.] r11|QWORD[.] - - - - rbp|DWORD 
>@ <|@ instruction rax|DWORD[_] = MOV [r11|QWORD[.] + 24] size: DWORD state [bci:134] <|@ <|@
      nr  204  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  206  <|@ instruction TESTBRANCH (x: rax|DWORD[_], y: rax|DWORD[_]) trueDestinationProbability: 0.5880075530332061 condition: = trueDestination: B57 -> B65 falseDestination: B57 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4590110563079390205
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [rax|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.8692436604445373 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B62 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B57" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4576850562957400324
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] vstack:2|QWORD[.] r9|DWORD rdi|DWORD rbx|QWORD[.] r11|QWORD[.] - - - - rbp|DWORD 
>@ <|@ instruction SAFEPOINT rax|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 thread: r15 state [bci:134] <|@ <|@
      nr  216  <|@ instruction rbp|DWORD = INC rbp|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  218  <|@ instruction JUMP ~[] destination: B62 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4592437312858669387
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:7|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:14|DWORD = MOVE rbp|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  222  <|@ instruction r10|QWORD = MOV [r13|QWORD + 680] size: QWORD <|@ <|@
      nr  224  <|@ instruction r11|QWORD = MOV [r10|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  226  <|@ instruction rsi|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  228  <|@ instruction rdx|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  232  <|@ instruction r8|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  234  <|@ instruction r9|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  236  <|@ instruction rbx|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  238  <|@ instruction rax|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:13|DWORD = MOVE rdi|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  240  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:648) [bci: 152]
stack: vstack:4|QWORD[.] 
locals: vstack:6|QWORD[.] vstack:13|DWORD - vstack:2|QWORD[.] vstack:8|DWORD vstack:5|DWORD vstack:10|QWORD[.] - - - vstack:7|QWORD[.] - vstack:14|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.]]) [] callTarget: HotSpotMethod<HashMap.newNode(int, Object, Object, HashMap$Node)> state [bci:152] <|@ <|@
      nr  244  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B67 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B72" 
    xhandlers
    flags 
    probability 4591660023639118941
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r14|QWORD = MOVE vstack:12|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE vstack:10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  248  <|@ instruction JUMP ~[] destination: B66 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4590594123464754032
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rbp|DWORD = MOVE vstack:1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  252  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + rbp|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  254  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  256  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4590001153184595122
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction r10|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  262  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  264  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4589467479932452103
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction r11|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  270  <|@ instruction MOV (x: [r11|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  272  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  274  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  276  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B64" "B60" 
    xhandlers
    flags 
    probability 4589398445432346844
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:7|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:14|DWORD = MOVE rbp|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:13|DWORD = MOVE rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  280  <|@ instruction rsi|DWORD[_] = MOV [rax|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  282  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  284  <|@ instruction CMPBRANCH (x: r10|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.9998932466496128 condition: = trueDestination: B59 -> B64 falseDestination: B59 -> B60 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B86" 
    xhandlers
    flags 
    probability 4589397940059341918
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE vstack:7|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  288  <|@ instruction JUMP ~[] destination: B64 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4577371935537457006
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE vstack:10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  292  <|@ instruction rsi|QWORD[.+] = LEA [r11|QWORD[.] + 24] size: QWORD <|@ <|@
      nr  294  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  296  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B67 -> B68 falseDestination: B67 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" "B71" 
    xhandlers
    flags 
    probability 4576750104161816650
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  300  <|@ instruction r10|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  302  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  304  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    probability 4576190455923740329
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  308  <|@ instruction r8|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  310  <|@ instruction MOV (x: [r8|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  312  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  314  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction r14|QWORD = MOVE vstack:12|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  316  <|@ instruction JUMP ~[] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    probability 4575897384022324722
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  320  <|@ instruction JUMP ~[] destination: B30 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4575895921484393205
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rbp|DWORD = MOVE vstack:1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:13|DWORD = MOVE rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  324  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>} <|@ <|@
      nr  328  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: vstack:6|QWORD[.] vstack:13|DWORD rcx|QWORD[.] vstack:2|QWORD[.] vstack:8|DWORD vstack:5|DWORD rbx|QWORD[.] - vstack:0|DWORD - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7fba62ccef80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:29] <|@ <|@
      nr  332  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: vstack:6|QWORD[.] vstack:13|DWORD rcx|QWORD[.] vstack:2|QWORD[.] vstack:8|DWORD vstack:5|DWORD rbx|QWORD[.] - vstack:0|DWORD - - - - 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:29] <|@ <|@
      nr   -1  <|@ instruction r10|DWORD[_] = MOVE vstack:3|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r14|QWORD = MOVE vstack:12|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r13|QWORD = MOVE vstack:15|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE vstack:5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE vstack:13|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE vstack:6|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  334  <|@ instruction JUMP ~[] destination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4575188794187971253
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  340  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  342  <|@ instruction JUMP ~[] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" "B33" "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4605587348047262798
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  348  <|@ instruction MOV (x: [rbx|QWORD[.] + rbp|DWORD * 4 + 16], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  350  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + rbp|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  352  <|@ instruction rsi|QWORD[*] = XOR (x: rsi|QWORD[.+], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  354  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4604846135197064160
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  358  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4604179043631885386
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r14|QWORD = MOVE vstack:12|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  362  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + rbp|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  364  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.+] y: 9 size: QWORD <|@ <|@
      nr  366  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B88" 
    xhandlers
    flags 
    probability 4603578661223224489
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE vstack:6|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  370  <|@ instruction JUMP ~[] destination: B39 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B88" 
    xhandlers
    flags 
    probability 4590594123464754032
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE vstack:6|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  374  <|@ instruction JUMP ~[] destination: B35 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B88" 
    xhandlers
    flags 
    probability 4590001153184595122
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE vstack:6|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  378  <|@ instruction JUMP ~[] destination: B37 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4589467479932452103
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  382  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  384  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B88" 
    xhandlers
    flags 
    probability 4588806327720511347
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE vstack:6|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  388  <|@ instruction JUMP ~[] destination: B41 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4574334916984542422
    begin_IR
      LIR
      nr  390  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  392  <|@ instruction MOVB [rsi|QWORD[*] + r14|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  394  <|@ instruction r10|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  396  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: r14|QWORD) size: QWORD <|@ <|@
      nr  398  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B88" 
    xhandlers
    flags 
    probability 4573566427501456474
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  402  <|@ instruction r11|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  404  <|@ instruction MOV (x: [r11|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  406  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  408  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE vstack:6|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  410  <|@ instruction JUMP ~[] destination: B44 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4570262383476918658
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:13|DWORD = MOVE rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  414  <|@ instruction rsi|DWORD[_] = MOV [rax|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  416  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  418  <|@ instruction CMPBRANCH (x: r10|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.9854570809572428 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B86" 
    xhandlers
    flags 
    probability 4570144353713859813
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  422  <|@ instruction JUMP ~[] destination: B50 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 4564966382317228292
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:13|DWORD = MOVE rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  426  <|@ instruction rsi|QWORD[.] = MOVE vstack:6|QWORD[.] moveKind: QWORD <|@ <|@
      nr  428  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:635) [bci: 20]
locals: vstack:6|QWORD[.] vstack:13|DWORD vstack:16|QWORD[.] vstack:2|QWORD[.] vstack:8|DWORD vstack:5|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.resize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:20] <|@ <|@
      nr  432  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:635) [bci: 23]
stack: Object[null] 
locals: vstack:6|QWORD[.] vstack:13|DWORD vstack:16|QWORD[.] vstack:2|QWORD[.] vstack:8|DWORD vstack:5|DWORD - - - - - - - 
>@ <|@ instruction rsi|DWORD = MOV [rax|QWORD[.] + 12] size: DWORD state [bci:23] <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE rsi|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE vstack:5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE vstack:8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE vstack:16|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE vstack:13|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE vstack:6|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  434  <|@ instruction JUMP ~[] destination: B1 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B72" 
    xhandlers
    flags 
    probability 4562617473904064804
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r14|QWORD = MOVE vstack:12|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  438  <|@ instruction JUMP ~[] destination: B68 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    probability 4562093595080792590
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r14|QWORD = MOVE vstack:12|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  444  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  446  <|@ instruction JUMP ~[] destination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B66" "B68" "B71" "B70" 
    successors "B73" "B74" 
    xhandlers
    flags 
    probability 4592437312858669387
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  450  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  452  <|@ instruction MOV (x: [r11|QWORD[.] + 24], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  454  <|@ instruction rsi|QWORD[*] = XOR (x: r11|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  456  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    probability 4591660023639118941
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  460  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    probability 4590960463341523540
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  464  <|@ instruction r11|QWORD[*] = SHR r11|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  466  <|@ instruction CMPCONSTBRANCH [r11|QWORD[*] + r14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B83" 
    xhandlers
    flags 
    probability 4590330859073687679
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  470  <|@ instruction JUMP ~[] destination: B77 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B83" 
    xhandlers
    flags 
    probability 4577371935537457006
    begin_IR
      LIR
      nr  472  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  474  <|@ instruction JUMP ~[] destination: B73 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B83" 
    xhandlers
    flags 
    probability 4576750104161816649
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  478  <|@ instruction JUMP ~[] destination: B75 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    probability 4576190455923740328
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  482  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  484  <|@ instruction CMPCONSTBRANCH [r11|QWORD[*] + r14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B83" 
    xhandlers
    flags 
    probability 4575686772509471639
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  488  <|@ instruction JUMP ~[] destination: B79 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    probability 4561198157899870475
    begin_IR
      LIR
      nr  490  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  492  <|@ instruction MOVB [r11|QWORD[*] + r14|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  494  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  496  <|@ instruction r11|QWORD[*] = ADD (x: r11|QWORD[*], y: r14|QWORD) size: QWORD <|@ <|@
      nr  498  <|@ instruction TESTBRANCH (x: rsi|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    probability 4560392264437040573
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  502  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  504  <|@ instruction MOV (x: [rdx|QWORD + rsi|QWORD * 1 - 8], y: r11|QWORD[*]) size: QWORD <|@ <|@
      nr  506  <|@ instruction rsi|QWORD = LEA [rsi|QWORD - 8] size: QWORD <|@ <|@
      nr  508  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  510  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B88" 
    xhandlers
    flags 
    probability 4559287139136259037
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  514  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  516  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE vstack:6|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  518  <|@ instruction JUMP ~[] destination: B43 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4553315745025075769
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:13|DWORD = MOVE rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  522  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  524  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 40] size: QWORD <|@ <|@
      nr  526  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4553268943811267021
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  530  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  532  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 296] instr: 0 <|@ <|@
      nr  534  <|@ instruction MOV [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  536  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>;compressed} <|@ <|@
      nr  538  <|@ instruction MOV [rsi|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  540  <|@ instruction MOV [rsi|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  542  <|@ instruction MOV [rsi|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  544  <|@ instruction MOV [rsi|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  546  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:18|DWORD = MOVE r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  548  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4553315745025075769
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  552  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  554  <|@ instruction rdx|DWORD = MOVE vstack:13|DWORD moveKind: DWORD <|@ <|@
      nr  556  <|@ instruction rcx|QWORD[.] = MOVE vstack:16|QWORD[.] moveKind: QWORD <|@ <|@
      nr  558  <|@ instruction r8|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  560  <|@ instruction r9|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction vstack:17|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  562  <|@ st <@st|@live-base-pointers: []
java.util.LinkedHashMap$Entry.<init>(LinkedHashMap.java:208) [bci: 6]
locals: - - - - - 
java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 9]
stack: vstack:17|QWORD[.] 
locals: vstack:6|QWORD[.] vstack:13|DWORD vstack:16|QWORD[.] vstack:2|QWORD[.] Object[null] - 
java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stack: vstack:10|QWORD[.] vstack:1|DWORD 
locals: vstack:6|QWORD[.] - - - - vstack:5|DWORD - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.]] [] callTarget: HotSpotMethod<HashMap$Node.<init>(int, Object, Object, HashMap$Node)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:6, 9, 56] <|@ <|@
      nr  564  <|@ instruction rsi|QWORD[.] = MOVE vstack:6|QWORD[.] moveKind: QWORD <|@ <|@
      nr  566  <|@ instruction rdx|QWORD[.] = MOVE vstack:17|QWORD[.] moveKind: QWORD <|@ <|@
      nr  568  <|@ st <@st|@live-base-pointers: []
java.util.LinkedHashMap.newNode(LinkedHashMap.java:283) [bci: 17]
locals: - - - - - vstack:17|QWORD[.] 
java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stack: vstack:10|QWORD[.] vstack:1|DWORD 
locals: vstack:6|QWORD[.] - - - - vstack:5|DWORD - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<LinkedHashMap.linkNodeAtEnd(LinkedHashMap$Entry)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:17, 56] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE vstack:17|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r14|QWORD = MOVE vstack:12|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r13|QWORD = MOVE vstack:15|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE vstack:18|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE vstack:10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE vstack:5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE vstack:6|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  570  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    probability 4546075572092099182
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  574  <|@ instruction rsi|QWORD = MOVE r11|QWORD[*] moveKind: QWORD <|@ <|@
      nr  576  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  578  <|@ instruction JUMP ~[] destination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B73" "B75" "B77" "B79" "B82" "B81" 
    successors "B84" "B85" 
    xhandlers
    flags 
    probability 4592437312858669387
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  582  <|@ instruction CMPCONSTBRANCH vstack:14|DWORD trueDestinationProbability: 0.9999886211240704 condition: < trueDestination: B83 -> B84 falseDestination: B83 -> B85 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" 
    xhandlers
    flags 
    probability 4592437224411893480
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE vstack:7|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  586  <|@ instruction JUMP ~[] destination: B84 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B50" "B55" "B64" "B84" "B85" "B63" "B53" 
    successors "B87" "B100" 
    xhandlers
    flags 
    probability 4595548303301553864
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  590  <|@ instruction TESTBRANCH (x: r8|QWORD[.], y: r8|QWORD[.]) trueDestinationProbability: 0.6091185940042786 condition: = trueDestination: B86 -> B87 falseDestination: B86 -> B100 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B88" 
    xhandlers
    flags 
    probability 4592437118697206803
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE vstack:6|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  594  <|@ instruction JUMP ~[] destination: B87 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B35" "B87" "B43" "B44" "B41" "B39" "B37" 
    successors "B89" "B90" 
    xhandlers
    flags 
    probability 4606558935301518032
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  598  <|@ instruction INC [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  600  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  602  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, ~y: [rsi|QWORD[.] + 20]) size: DWORD <|@ <|@
      nr  604  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: rax|DWORD) size: DWORD <|@ <|@
      nr  606  <|@ instruction CMPBRANCH (x: rax|DWORD, y: [rsi|QWORD[.] + 28]) trueDestinationProbability: 7.853038846579175E-4 condition: > trueDestination: B88 -> B89 falseDestination: B88 -> B90 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B91" 
    xhandlers
    flags 
    probability 4606552351536966788
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r13|QWORD = MOVE vstack:15|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  610  <|@ instruction JUMP ~[] destination: B90 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" "B89" 
    successors "B92" "B93" "B99" 
    xhandlers
    flags 
    probability 4606558935301518032
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  614  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~r13|QWORD - keyConstants: [meta{HotSpotType<Ljava/util/HashMap;, resolved>}, meta{HotSpotType<Ljava/util/LinkedHashMap;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/replacements/SnippetTemplate$LRUCache;, resolved>}] keyTargets: [B91 -> B92, B91 -> B93, B91 -> B93] defaultTarget: B91 -> B99 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B97" 
    xhandlers
    flags 
    probability 4606555909645339483
    begin_IR
      LIR
      nr  616  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  618  <|@ instruction JUMP ~[] destination: B92 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B92" "B94" "B96" 
    successors 
    xhandlers
    flags 
    probability 4606558935301518031
    begin_IR
      LIR
      nr  620  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  622  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  624  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B101" "B119" 
    xhandlers
    flags 
    probability 4589652288651159933
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r13|QWORD = MOVE vstack:15|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE vstack:8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE vstack:6|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  628  <|@ instruction r10|DWORD[_] = MOV [r8|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  630  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.9999962001170364 condition: = trueDestination: B100 -> B101 falseDestination: B100 -> B119 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B102" "B103" 
    xhandlers
    flags 
    probability 4589652269697845341
    begin_IR
      LIR
      nr  632  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  634  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B103 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B108" 
    xhandlers
    flags 
    probability 4589138949298219176
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|DWORD[_] = MOVE vstack:3|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  638  <|@ instruction JUMP ~[] destination: B102 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" "B105" 
    xhandlers
    flags 
    probability 4574630580609171603
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  642  <|@ instruction r11|QWORD[.+] = LEA [r8|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  644  <|@ instruction r11|DWORD[_] = MOV [r11|QWORD[.+]] size: DWORD <|@ <|@
      nr  646  <|@ instruction TESTBRANCH (x: r11|DWORD[_], y: r11|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B103 -> B104 falseDestination: B103 -> B105 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B106" "B107" 
    xhandlers
    flags 
    probability 4573832524763622737
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  650  <|@ instruction r9|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  652  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  654  <|@ instruction TESTBRANCH (x: r9|QWORD, y: r9|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B105 -> B106 falseDestination: B105 -> B107 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B108" 
    xhandlers
    flags 
    probability 4573114274502628758
    begin_IR
      LIR
      nr  656  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  658  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  660  <|@ instruction MOV (x: [rcx|QWORD + r9|QWORD * 1 - 8], y: r11|QWORD[.]) size: QWORD <|@ <|@
      nr  662  <|@ instruction r11|QWORD = LEA [r9|QWORD - 8] size: QWORD <|@ <|@
      nr  664  <|@ instruction MOV (x: [r15|QWORD + 40], y: r11|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction r11|DWORD[_] = MOVE vstack:3|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  666  <|@ instruction JUMP ~[] destination: B107 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B91" 
    xhandlers
    flags 
    probability 4559880998172045651
    begin_IR
      LIR
      nr  668  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  670  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  672  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:669) [bci: 288]
locals: vstack:6|QWORD[.] - - - - vstack:5|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.resize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:288] <|@ <|@
      nr   -1  <|@ instruction r13|QWORD = MOVE vstack:15|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE vstack:6|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  676  <|@ instruction JUMP ~[] destination: B89 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B108" 
    xhandlers
    flags 
    probability 4559523670035962382
    begin_IR
      LIR
      nr  678  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|DWORD[_] = MOVE vstack:3|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  680  <|@ instruction JUMP ~[] destination: B104 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B108" 
    xhandlers
    flags 
    probability 4558885225359523289
    begin_IR
      LIR
      nr  682  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  684  <|@ instruction rsi|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  686  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction r11|DWORD[_] = MOVE vstack:3|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  688  <|@ instruction JUMP ~[] destination: B106 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B102" "B104" "B107" "B106" 
    successors "B109" "B110" 
    xhandlers
    flags 
    probability 4589652269697845341
    begin_IR
      LIR
      nr  690  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  692  <|@ instruction MOV (x: [r8|QWORD[.] + 20], y: r11|DWORD[_]) size: DWORD <|@ <|@
      nr  694  <|@ instruction rsi|QWORD[*] = XOR (x: r8|QWORD[.], y: vstack:2|QWORD[.]) size: QWORD <|@ <|@
      nr  696  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B108 -> B109 falseDestination: B108 -> B110 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" "B112" 
    xhandlers
    flags 
    probability 4589138949298219176
    begin_IR
      LIR
      nr  698  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  700  <|@ instruction TESTBRANCH (x: r11|QWORD[.], y: r11|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B110 -> B111 falseDestination: B110 -> B112 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B113" "B114" 
    xhandlers
    flags 
    probability 4588241136471976702
    begin_IR
      LIR
      nr  702  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r14|QWORD = MOVE vstack:12|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  704  <|@ instruction rsi|QWORD[*] = SHR r8|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  706  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B112 -> B113 falseDestination: B112 -> B114 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B120" 
    xhandlers
    flags 
    probability 4587433104928358475
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r13|QWORD = MOVE vstack:15|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  710  <|@ instruction JUMP ~[] destination: B113 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B120" 
    xhandlers
    flags 
    probability 4574630580609171603
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r13|QWORD = MOVE vstack:15|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  714  <|@ instruction JUMP ~[] destination: B109 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B120" 
    xhandlers
    flags 
    probability 4573832524763622738
    begin_IR
      LIR
      nr  716  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r13|QWORD = MOVE vstack:15|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  718  <|@ instruction JUMP ~[] destination: B111 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B115" "B116" 
    xhandlers
    flags 
    probability 4573114274502628759
    begin_IR
      LIR
      nr  720  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  722  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  724  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B114 -> B115 falseDestination: B114 -> B116 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B120" 
    xhandlers
    flags 
    probability 4572467849267734178
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r13|QWORD = MOVE vstack:15|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  728  <|@ instruction JUMP ~[] destination: B115 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B117" "B118" 
    xhandlers
    flags 
    probability 4558310625150728107
    begin_IR
      LIR
      nr  730  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  732  <|@ instruction MOVB [rsi|QWORD[*] + r14|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  734  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  736  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: r14|QWORD) size: QWORD <|@ <|@
      nr  738  <|@ instruction TESTBRANCH (x: rdx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B116 -> B117 falseDestination: B116 -> B118 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B120" 
    xhandlers
    flags 
    probability 4557793484962812442
    begin_IR
      LIR
      nr  740  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  742  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  744  <|@ instruction MOV (x: [rbx|QWORD + rdx|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  746  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr  748  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction r13|QWORD = MOVE vstack:15|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  750  <|@ instruction JUMP ~[] destination: B118 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B94" "B95" 
    xhandlers
    flags 
    probability 4554832167497868566
    begin_IR
      LIR
      nr  752  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE vstack:5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  754  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.4891304347826087 condition: = trueDestination: B93 -> B94 falseDestination: B93 -> B95 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B96" "B98" 
    xhandlers
    flags 
    probability 4550463275345577801
    begin_IR
      LIR
      nr  756  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE vstack:6|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  758  <|@ instruction rdx|DWORD[_] = MOV [rsi|QWORD[.] + 52] size: DWORD <|@ <|@
      nr  760  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:670) [bci: 292]
locals: rsi|QWORD[.] - - - - rdi|DWORD - - - - - - - 
>@ <|@ instruction NULLCHECK [rdx|DWORD[_] * 8] state [bci:292] <|@ <|@
      nr  762  <|@ instruction rbx|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  764  <|@ instruction rax|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr  766  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rax|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr  768  <|@ instruction rbx|QWORD = MOV [rbx|QWORD + 872] size: QWORD <|@ <|@
      nr  770  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  772  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  774  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  776  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:19|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  782  <|@ st <@st|@live-base-pointers: []
java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 15]
locals: vstack:6|QWORD[.] - vstack:19|QWORD[.] - 
java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
locals: - - - - - - - - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<LinkedHashMap.removeEldestEntry(Map$Entry)> state [bci:15, 295] <|@ <|@
      nr  786  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B95 -> B96 falseDestination: B95 -> B98 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B97" 
    xhandlers
    flags 
    probability 4550463275345577801
    begin_IR
      LIR
      nr  788  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  790  <|@ instruction JUMP ~[] destination: B96 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B97" 
    xhandlers
    flags 
    probability 4550193860395418340
    begin_IR
      LIR
      nr  792  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  794  <|@ instruction JUMP ~[] destination: B94 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B120" 
    xhandlers
    flags 
    probability 4543399067768740112
    begin_IR
      LIR
      nr  796  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  798  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  800  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction r13|QWORD = MOVE vstack:15|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  802  <|@ instruction JUMP ~[] destination: B117 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B119" "B109" "B117" "B118" "B115" "B113" "B111" 
    successors 
    xhandlers
    flags 
    probability 4589652288651159933
    begin_IR
      LIR
      nr  804  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  806  <|@ instruction rbx|QWORD = MOV [r13|QWORD + 688] size: QWORD <|@ <|@
      nr  808  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  810  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  812  <|@ instruction rsi|QWORD[.] = MOVE vstack:6|QWORD[.] moveKind: QWORD <|@ <|@
      nr  814  <|@ instruction rdx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:20|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  820  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:663) [bci: 253]
locals: - - - - - - - - - - - - vstack:20|QWORD[.] 
>@ <|@ instruction - = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<HashMap.afterNodeAccess(HashMap$Node)> state [bci:253] <|@ <|@
      nr  822  <|@ instruction rax|QWORD[.] = MOVE vstack:20|QWORD[.] moveKind: QWORD <|@ <|@
      nr  824  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4542678729597855531
    begin_IR
      LIR
      nr  826  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:21|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  828  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: vstack:6|QWORD[.] vstack:13|DWORD rcx|QWORD[.] vstack:2|QWORD[.] vstack:8|DWORD vstack:5|DWORD vstack:10|QWORD[.] - vstack:0|DWORD - - - - 
>@ <|@ instruction rsi|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD state [bci:29] <|@ <|@
      nr  830  <|@ instruction rdx|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr  832  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr  834  <|@ instruction rbx|QWORD = MOV [rsi|QWORD + 464] size: QWORD <|@ <|@
      nr  836  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  838  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  840  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  846  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:641) [bci: 91]
locals: vstack:6|QWORD[.] vstack:13|DWORD vstack:16|QWORD[.] vstack:2|QWORD[.] vstack:8|DWORD vstack:5|DWORD vstack:10|QWORD[.] vstack:21|QWORD[.] - - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:91] <|@ <|@
      nr  850  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B86" 
    xhandlers
    flags 
    probability 4542678729597855531
    begin_IR
      LIR
      nr  852  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE vstack:21|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  854  <|@ instruction JUMP ~[] destination: B53 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B63" 
    xhandlers
    flags 
    probability 4529894057192690854
    begin_IR
      LIR
      nr  856  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  858  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: vstack:6|QWORD[.] vstack:13|DWORD rcx|QWORD[.] vstack:2|QWORD[.] vstack:8|DWORD vstack:5|DWORD vstack:10|QWORD[.] r11|QWORD[.] - - - - vstack:14|DWORD 
>@ <|@ instruction rsi|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD state [bci:134] <|@ <|@
      nr  860  <|@ instruction rdx|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr  862  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr  864  <|@ instruction rbx|QWORD = MOV [rsi|QWORD + 464] size: QWORD <|@ <|@
      nr  866  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  868  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  870  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  876  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:654) [bci: 203]
locals: vstack:6|QWORD[.] vstack:13|DWORD vstack:16|QWORD[.] vstack:2|QWORD[.] vstack:8|DWORD vstack:5|DWORD vstack:10|QWORD[.] - - - vstack:7|QWORD[.] - vstack:14|DWORD 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:203] <|@ <|@
      nr  880  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B86" 
    xhandlers
    flags 
    probability 4529894057192690854
    begin_IR
      LIR
      nr  882  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE vstack:7|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  884  <|@ instruction JUMP ~[] destination: B63 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4523100981620127249
    begin_IR
      LIR
      nr  886  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:18|DWORD = MOVE r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  888  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>} <|@ <|@
      nr  892  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: vstack:6|QWORD[.] vstack:13|DWORD vstack:16|QWORD[.] vstack:2|QWORD[.] vstack:8|DWORD vstack:5|DWORD vstack:10|QWORD[.] - vstack:0|DWORD - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7fba62ccef80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:29] <|@ <|@
      nr  896  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: vstack:6|QWORD[.] vstack:13|DWORD vstack:16|QWORD[.] vstack:2|QWORD[.] vstack:8|DWORD vstack:5|DWORD vstack:10|QWORD[.] - vstack:0|DWORD - - - - 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:29] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  898  <|@ instruction JUMP ~[] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" 
    xhandlers
    flags 
    probability 4518403274531071726
    begin_IR
      LIR
      nr  900  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  902  <|@ instruction rsi|QWORD[.] = MOVE vstack:6|QWORD[.] moveKind: QWORD <|@ <|@
      nr  904  <|@ instruction rdx|QWORD[.] = MOVE vstack:10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  906  <|@ instruction rcx|DWORD = MOVE vstack:13|DWORD moveKind: DWORD <|@ <|@
      nr  908  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:650) [bci: 169]
locals: vstack:6|QWORD[.] - - vstack:2|QWORD[.] vstack:8|DWORD vstack:5|DWORD - - - - vstack:7|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<HashMap.treeifyBin(HashMap$Node[], int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:169] <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE vstack:7|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  910  <|@ instruction JUMP ~[] destination: B85 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B86" 
    xhandlers
    flags 
    probability 4510226010095555986
    begin_IR
      LIR
      nr  912  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:21|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:13|DWORD = MOVE rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  914  <|@ instruction rsi|QWORD[.] = MOVE vstack:21|QWORD[.] moveKind: QWORD <|@ <|@
      nr  916  <|@ instruction rdx|QWORD[.] = MOVE vstack:6|QWORD[.] moveKind: QWORD <|@ <|@
      nr  918  <|@ instruction rcx|QWORD[.] = MOVE vstack:10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  920  <|@ instruction r8|DWORD = MOVE vstack:13|DWORD moveKind: DWORD <|@ <|@
      nr  922  <|@ instruction r9|QWORD[.] = MOVE vstack:16|QWORD[.] moveKind: QWORD <|@ <|@
      nr  924  <|@ instruction rdi|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  926  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:644) [bci: 123]
locals: vstack:6|QWORD[.] - - vstack:2|QWORD[.] vstack:8|DWORD vstack:5|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|QWORD[.], rdi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap$TreeNode.putTreeVal(HashMap, HashMap$Node[], int, Object, Object)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:123] <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  930  <|@ instruction JUMP ~[] destination: B55 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B120" 
    xhandlers
    flags 
    probability 4508568125070994604
    begin_IR
      LIR
      nr  932  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  934  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:659) [bci: 222]
locals: vstack:6|QWORD[.] - - vstack:2|QWORD[.] vstack:8|DWORD vstack:5|DWORD - - - - r8|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r10|DWORD[_] * 8] state [bci:222] <|@ <|@
      nr   -1  <|@ instruction r13|QWORD = MOVE vstack:15|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  936  <|@ instruction JUMP ~[] destination: B119 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  938  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[5780|0x1694] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-51507|0xffffffffffff36cd] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:13|DWORD = MOVE rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE vstack:0|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  940  <|@ instruction JUMP ~[] destination: B47 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  942  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE vstack:7|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbp|DWORD = MOVE vstack:14|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  944  <|@ instruction MOV [r15|QWORD + 1156] y: -157971 size: DWORD <|@ <|@
      nr  946  <|@ instruction MOV [r15|QWORD + 1168] y: 1300 size: QWORD <|@ <|@
      nr  948  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:654) [bci: 206]
stack: int[0|0x0] 
locals: vstack:6|QWORD[.] vstack:13|DWORD vstack:16|QWORD[.] vstack:2|QWORD[.] vstack:8|DWORD vstack:5|DWORD vstack:10|QWORD[.] - - - r8|QWORD[.] - rbp|DWORD 
>@ <|@ instruction DEOPT info [bci:206] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  950  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:13|DWORD = MOVE rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-75547|0xfffffffffffed8e5] // MoveResolver resolve mapping <|@ <|@
      nr  952  <|@ instruction JUMP ~[] destination: B121 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B121" "B47" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  954  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  956  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  958  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  960  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: vstack:6|QWORD[.] vstack:13|DWORD vstack:16|QWORD[.] vstack:2|QWORD[.] vstack:8|DWORD vstack:5|DWORD vstack:10|QWORD[.] - r8|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:29] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  962  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rbp|DWORD = MOVE vstack:1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  964  <|@ instruction JUMP ~[] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  966  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  968  <|@ instruction MOV [r15|QWORD + 1156] y: -61235 size: DWORD <|@ <|@
      nr  970  <|@ instruction MOV [r15|QWORD + 1168] y: 8980 size: QWORD <|@ <|@
      nr  972  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:670) [bci: 292]
locals: vstack:6|QWORD[.] - - - - vstack:5|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:292] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  974  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rbp|DWORD = MOVE vstack:1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  976  <|@ instruction JUMP ~[] destination: B26 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B26" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  978  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  980  <|@ instruction MOV [r15|QWORD + 1156] y: -82987 size: DWORD <|@ <|@
      nr  982  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  984  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stack: vstack:10|QWORD[.] rbp|DWORD rax|QWORD[.] 
locals: vstack:6|QWORD[.] - - - - vstack:5|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:59] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  986  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE vstack:21|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE vstack:10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  988  <|@ instruction MOV [r15|QWORD + 1156] y: -153363 size: DWORD <|@ <|@
      nr  990  <|@ instruction MOV [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  992  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:641) [bci: 94]
stack: int[0|0x0] 
locals: vstack:6|QWORD[.] vstack:13|DWORD vstack:16|QWORD[.] vstack:2|QWORD[.] vstack:8|DWORD vstack:5|DWORD rbx|QWORD[.] r11|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:94] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  994  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE vstack:19|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  996  <|@ instruction MOV [r15|QWORD + 1156] y: -161299 size: DWORD <|@ <|@
      nr  998  <|@ instruction MOV [r15|QWORD + 1168] y: 10260 size: QWORD <|@ <|@
      nr 1000  <|@ st <@st|@live-base-pointers: []
java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 18]
stack: rax|DWORD 
locals: vstack:6|QWORD[.] - rdx|QWORD[.] - 
java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
locals: - - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:18, 295] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1002  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1004  <|@ instruction MOV [r15|QWORD + 1156] y: -129299 size: DWORD <|@ <|@
      nr 1006  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 1008  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:634) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] r8|QWORD[.] r9|DWORD rdi|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #21         // table:java.util.HashMap$Node[]
     4: dup           
     5: astore        6
     7: ifnull        19
    10: aload         6
    12: arraylength   
    13: dup           
    14: istore        8
    16: ifne          29
    19: aload_0       
    20: invokevirtual #23         // resize:()java.util.HashMap$Node[]
    23: dup           
    24: astore        6
    26: arraylength   
    27: istore        8
    29: aload         6
    31: iload         8
    33: iconst_1      
    34: isub          
    35: iload_1       
    36: iand          
    37: dup           
    38: istore        9
    40: aaload        
    41: dup           
    42: astore        7
    44: ifnonnull     63
    47: aload         6
    49: iload         9
    51: aload_0       
    52: iload_1       
    53: aload_2       
    54: aload_3       
    55: aconst_null   
    56: invokevirtual #40         // newNode:(int, java.lang.Object, java.lang.Object, java.util.HashMap$Node)java.util.HashMap$Node
    59: aastore       
    60: goto          259
    63: aload         7
    65: getfield      #35         // java.util.HashMap$Node.hash:int
    68: iload_1       
    69: if_icmpne     104
    72: aload         7
    74: getfield      #36         // java.util.HashMap$Node.key:java.lang.Object
    77: dup           
    78: astore        11
    80: aload_2       
    81: if_acmpeq     97
    84: aload_2       
    85: ifnull        104
    88: aload_2       
    89: aload         11
    91: invokevirtual #37         // java.lang.Object.equals:(java.lang.Object)boolean
    94: ifeq          104
    97: aload         7
    99: astore        10
   101: goto          222
   104: aload         7
   106: instanceof    #180        // java.util.HashMap$TreeNode
   109: ifeq          131
   112: aload         7
   114: checkcast     #180        // java.util.HashMap$TreeNode
   117: aload_0       
   118: aload         6
   120: iload_1       
   121: aload_2       
   122: aload_3       
   123: invokevirtual #41         // java.util.HashMap$TreeNode.putTreeVal:(java.util.HashMap, java.util.HashMap$Node[], int, java.lang.Object, java.lang.Object)java.util.HashMap$TreeNode
   126: astore        10
   128: goto          222
   131: iconst_0      
   132: istore        12
   134: aload         7
   136: getfield      #38         // java.util.HashMap$Node.next:java.util.HashMap$Node
   139: dup           
   140: astore        10
   142: ifnonnull     175
   145: aload         7
   147: aload_0       
   148: iload_1       
   149: aload_2       
   150: aload_3       
   151: aconst_null   
   152: invokevirtual #40         // newNode:(int, java.lang.Object, java.lang.Object, java.util.HashMap$Node)java.util.HashMap$Node
   155: putfield      #38         // java.util.HashMap$Node.next:java.util.HashMap$Node
   158: iload         12
   160: bipush        7
   162: if_icmplt     222
   165: aload_0       
   166: aload         6
   168: iload_1       
   169: invokevirtual #42         // treeifyBin:(java.util.HashMap$Node[], int)void
   172: goto          222
   175: aload         10
   177: getfield      #35         // java.util.HashMap$Node.hash:int
   180: iload_1       
   181: if_icmpne     212
   184: aload         10
   186: getfield      #36         // java.util.HashMap$Node.key:java.lang.Object
   189: dup           
   190: astore        11
   192: aload_2       
   193: if_acmpeq     222
   196: aload_2       
   197: ifnull        212
   200: aload_2       
   201: aload         11
   203: invokevirtual #37         // java.lang.Object.equals:(java.lang.Object)boolean
   206: ifeq          212
   209: goto          222
   212: aload         10
   214: astore        7
   216: iinc          
   219: goto          134
   222: aload         10
   224: ifnull        259
   227: aload         10
   229: getfield      #34         // java.util.HashMap$Node.value:java.lang.Object
   232: astore        12
   234: iload         4
   236: ifeq          244
   239: aload         12
   241: ifnonnull     250
   244: aload         10
   246: aload_3       
   247: putfield      #34         // java.util.HashMap$Node.value:java.lang.Object
   250: aload_0       
   251: aload         10
   253: invokevirtual #43         // afterNodeAccess:(java.util.HashMap$Node)void
   256: aload         12
   258: areturn       
   259: aload_0       
   260: dup           
   261: getfield      #44         // modCount:int
   264: iconst_1      
   265: iadd          
   266: putfield      #44         // modCount:int
   269: aload_0       
   270: dup           
   271: getfield      #32         // size:int
   274: iconst_1      
   275: iadd          
   276: dup_x1        
   277: putfield      #32         // size:int
   280: aload_0       
   281: getfield      #17         // threshold:int
   284: if_icmple     292
   287: aload_0       
   288: invokevirtual #23         // resize:()java.util.HashMap$Node[]
   291: pop           
   292: aload_0       
   293: iload         5
   295: invokevirtual #45         // afterNodeInsertion:(boolean)void
   298: aconst_null   
   299: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScan"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|DWORD, rdi|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@21849dd slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:6|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   -1  <|@ instruction vstack:16|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   -1  <|@ instruction vstack:2|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   -1  <|@ instruction vstack:8|DWORD = MOVE r9|DWORD moveKind: DWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   -1  <|@ instruction vstack:5|DWORD = MOVE rdi|DWORD moveKind: DWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   18  <|@ instruction rbx|DWORD[_] = MOV [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   20  <|@ instruction TESTBRANCH (x: rbx|DWORD[_], y: rbx|DWORD[_]) trueDestinationProbability: 0.0015880438063265454 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607168114973028567
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   24  <|@ instruction rax|DWORD = MOV [rbx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   26  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607168114973028567
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   32  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B1" 
    successors "B6" "B121" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:10|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   36  <|@ instruction rax|DWORD = MOV [rbx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   38  <|@ instruction r11|DWORD = MOV [rbx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   40  <|@ instruction rbp|DWORD = DEC r10|DWORD size: DWORD <|@ <|@
      nr   42  <|@ instruction rbp|DWORD = AND (x: rdx|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr   44  <|@ instruction CMPBRANCH (x: rax|DWORD, y: rbp|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B121 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B48" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:0|DWORD = MOVE r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   48  <|@ instruction rax|DWORD[_] = MOV [rbx|QWORD[.] + rbp|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   50  <|@ instruction r13|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   52  <|@ instruction r14|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr   54  <|@ instruction r13|QWORD = UNCOMPRESSPOINTER (input: r13|DWORD, ~baseRegister: r14|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr   -1  <|@ instruction vstack:15|QWORD = MOVE r13|QWORD moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   56  <|@ instruction r14|QWORD = MOVE input: long[140438306553856|0x7fba57600000] <|@ <|@
      nr   -1  <|@ instruction vstack:12|QWORD = MOVE r14|QWORD moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   58  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction vstack:3|DWORD[_] = MOVE r10|DWORD[_] moveKind: DWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   60  <|@ instruction TESTBRANCH (x: rax|DWORD[_], y: rax|DWORD[_]) trueDestinationProbability: 0.8229115724385652 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B12" "B47" 
    xhandlers
    flags 
    probability 4605587348047262798
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -2  <|@ instruction vstack:1|DWORD = MOVE rbp|DWORD moveKind: DWORD // LSRAOptimizeSpillPos: optimize spill pos <|@ <|@
      nr   64  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~r13|QWORD - keyConstants: [meta{HotSpotType<Ljava/util/HashMap;, resolved>}, meta{HotSpotType<Ljava/util/LinkedHashMap;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/replacements/SnippetTemplate$LRUCache;, resolved>}] keyTargets: [B7 -> B8, B7 -> B12, B7 -> B12] defaultTarget: B7 -> B47 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4605585062831744793
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction rax|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   70  <|@ instruction rbp|QWORD = LEA [rax|QWORD + 32] size: QWORD <|@ <|@
      nr   72  <|@ instruction CMPBRANCH (x: rbp|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4605510964398880109
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction MOV (x: [r15|QWORD + 440], y: rbp|QWORD) size: QWORD <|@ <|@
      nr   78  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 288] instr: 0 <|@ <|@
      nr   80  <|@ instruction MOV [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr   82  <|@ instruction MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>;compressed} <|@ <|@
      nr   84  <|@ instruction MOV [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   86  <|@ instruction MOV [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   88  <|@ instruction MOV [rax|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr   90  <|@ instruction rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   92  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 4605585062831744793
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   96  <|@ instruction MOV (x: [rax|QWORD[.] + 20], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr   98  <|@ instruction rcx|DWORD[_] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  100  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr  102  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  104  <|@ instruction JUMP ~[] destination: B11 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B11" "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4605587348047262798
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  108  <|@ instruction rdx|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr  110  <|@ instruction r11|QWORD = UNCOMPRESSPOINTER (input: r11|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr  112  <|@ instruction rdx|QWORD = MOV [r11|QWORD + 208] size: QWORD <|@ <|@
      nr  114  <|@ instruction rcx|DWORD = MOV [rdx|QWORD + 20] size: DWORD <|@ <|@
      nr  116  <|@ instruction r8|DWORD = MOV [rax|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  118  <|@ instruction r9|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr  120  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: r9|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr  122  <|@ instruction r9|QWORD = MOVSXD rcx|DWORD size: QWORD <|@ <|@
      nr  124  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r8|QWORD + r9|QWORD * 1]) trueDestinationProbability: 0.5 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B45" 
    xhandlers
    flags 
    probability 4601083748419892302
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction CMPCONSTBRANCH rcx|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B45 y: 32 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4601083748419892302
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  132  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: r8|QWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4596580148792521806
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction rcx|QWORD = MOV [r8|QWORD + 40] size: QWORD <|@ <|@
      nr  138  <|@ instruction r9|DWORD = MOV [rcx|QWORD] size: DWORD <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  140  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B24" 
    successors "B23" "B26" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4602807799859017905
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  144  <|@ instruction CMPBRANCH (x: r9|DWORD, y: r10|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602807799859017905
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction r11|DWORD = SHL r10|DWORD y: 3 size: DWORD <|@ <|@
      nr  150  <|@ instruction r11|DWORD = LEA [r11|DWORD + 8] size: DWORD <|@ <|@
      nr  152  <|@ instruction r11|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr  154  <|@ instruction r11|QWORD = MOV [rcx|QWORD + r11|QWORD * 1] size: QWORD <|@ <|@
      nr  156  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: r11|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B23 -> B25 falseDestination: B23 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B22" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4599230716294395707
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction r10|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr  162  <|@ instruction JUMP ~[] destination: B24 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B27" 
    xhandlers
    flags 
    probability 4601083748419892302
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction JUMP ~[] destination: B17 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B27" 
    xhandlers
    flags 
    probability 4596580148792521807
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction MOV (x: [r8|QWORD + 32], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  172  <|@ instruction JUMP ~[] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B27" 
    xhandlers
    flags 
    probability 4596580148792521806
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction JUMP ~[] destination: B20 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B17" "B25" "B20" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4605587348047262798
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" 
    xhandlers
    flags 
    probability 4604846135197064160
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rbp|DWORD = MOVE vstack:1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  184  <|@ instruction JUMP ~[] destination: B28 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B49" "B54" 
    xhandlers
    flags 
    probability 4595548303301553864
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  190  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [rax|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.01987559010066231 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4595421491411700642
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction CMPCONSTBRANCH [rax|DWORD[_] * 8 + 8] trueDestinationProbability: 2.021089053783065E-6 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B56 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4595421478772878611
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rbp|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  198  <|@ instruction JUMP ~[] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B62" 
    successors "B65" "B58" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4595777537596400292
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  202  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] vstack:2|QWORD[.] r9|DWORD rdi|DWORD rbx|QWORD[.] r11|QWORD[.] - - - - rbp|DWORD 
>@ <|@ instruction rax|DWORD[_] = MOV [r11|QWORD[.] + 24] size: DWORD state [bci:134] <|@ <|@
      nr  204  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  206  <|@ instruction TESTBRANCH (x: rax|DWORD[_], y: rax|DWORD[_]) trueDestinationProbability: 0.5880075530332061 condition: = trueDestination: B57 -> B65 falseDestination: B57 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4590110563079390205
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [rax|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.8692436604445373 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B62 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B57" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4576850562957400324
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] vstack:2|QWORD[.] r9|DWORD rdi|DWORD rbx|QWORD[.] r11|QWORD[.] - - - - rbp|DWORD 
>@ <|@ instruction SAFEPOINT rax|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 thread: r15 state [bci:134] <|@ <|@
      nr  216  <|@ instruction rbp|DWORD = INC rbp|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  218  <|@ instruction JUMP ~[] destination: B62 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4592437312858669387
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:7|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:14|DWORD = MOVE rbp|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  222  <|@ instruction r10|QWORD = MOV [r13|QWORD + 680] size: QWORD <|@ <|@
      nr  224  <|@ instruction r11|QWORD = MOV [r10|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  226  <|@ instruction rsi|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  228  <|@ instruction rdx|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  232  <|@ instruction r8|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  234  <|@ instruction r9|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  236  <|@ instruction rbx|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  238  <|@ instruction rax|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:13|DWORD = MOVE rdi|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  240  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:648) [bci: 152]
stack: vstack:4|QWORD[.] 
locals: vstack:6|QWORD[.] vstack:13|DWORD - vstack:2|QWORD[.] vstack:8|DWORD vstack:5|DWORD vstack:10|QWORD[.] - - - vstack:7|QWORD[.] - vstack:14|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.]]) [] callTarget: HotSpotMethod<HashMap.newNode(int, Object, Object, HashMap$Node)> state [bci:152] <|@ <|@
      nr  244  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B67 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B72" 
    xhandlers
    flags 
    probability 4591660023639118941
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r14|QWORD = MOVE vstack:12|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE vstack:10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  248  <|@ instruction JUMP ~[] destination: B66 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4590594123464754032
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rbp|DWORD = MOVE vstack:1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  252  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + rbp|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  254  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  256  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4590001153184595122
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction r10|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  262  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  264  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4589467479932452103
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction r11|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  270  <|@ instruction MOV (x: [r11|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  272  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  274  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  276  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B64" "B60" 
    xhandlers
    flags 
    probability 4589398445432346844
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:7|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:14|DWORD = MOVE rbp|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:13|DWORD = MOVE rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  280  <|@ instruction rsi|DWORD[_] = MOV [rax|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  282  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  284  <|@ instruction CMPBRANCH (x: r10|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.9998932466496128 condition: = trueDestination: B59 -> B64 falseDestination: B59 -> B60 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B86" 
    xhandlers
    flags 
    probability 4589397940059341918
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE vstack:7|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  288  <|@ instruction JUMP ~[] destination: B64 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4577371935537457006
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE vstack:10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  292  <|@ instruction rsi|QWORD[.+] = LEA [r11|QWORD[.] + 24] size: QWORD <|@ <|@
      nr  294  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  296  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B67 -> B68 falseDestination: B67 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" "B71" 
    xhandlers
    flags 
    probability 4576750104161816650
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  300  <|@ instruction r10|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  302  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  304  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    probability 4576190455923740329
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  308  <|@ instruction r8|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  310  <|@ instruction MOV (x: [r8|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  312  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  314  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction r14|QWORD = MOVE vstack:12|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  316  <|@ instruction JUMP ~[] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    probability 4575897384022324722
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  320  <|@ instruction JUMP ~[] destination: B30 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4575895921484393205
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rbp|DWORD = MOVE vstack:1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:13|DWORD = MOVE rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  324  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>} <|@ <|@
      nr  328  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: vstack:6|QWORD[.] vstack:13|DWORD rcx|QWORD[.] vstack:2|QWORD[.] vstack:8|DWORD vstack:5|DWORD rbx|QWORD[.] - vstack:0|DWORD - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7fba62ccef80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:29] <|@ <|@
      nr  332  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: vstack:6|QWORD[.] vstack:13|DWORD rcx|QWORD[.] vstack:2|QWORD[.] vstack:8|DWORD vstack:5|DWORD rbx|QWORD[.] - vstack:0|DWORD - - - - 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:29] <|@ <|@
      nr   -1  <|@ instruction r10|DWORD[_] = MOVE vstack:3|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r14|QWORD = MOVE vstack:12|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r13|QWORD = MOVE vstack:15|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE vstack:5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE vstack:13|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE vstack:6|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  334  <|@ instruction JUMP ~[] destination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4575188794187971253
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  340  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  342  <|@ instruction JUMP ~[] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" "B33" "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4605587348047262798
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  348  <|@ instruction MOV (x: [rbx|QWORD[.] + rbp|DWORD * 4 + 16], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  350  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + rbp|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  352  <|@ instruction rsi|QWORD[*] = XOR (x: rsi|QWORD[.+], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  354  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4604846135197064160
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  358  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4604179043631885386
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r14|QWORD = MOVE vstack:12|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  362  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + rbp|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  364  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.+] y: 9 size: QWORD <|@ <|@
      nr  366  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B88" 
    xhandlers
    flags 
    probability 4603578661223224489
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE vstack:6|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  370  <|@ instruction JUMP ~[] destination: B39 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B88" 
    xhandlers
    flags 
    probability 4590594123464754032
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE vstack:6|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  374  <|@ instruction JUMP ~[] destination: B35 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B88" 
    xhandlers
    flags 
    probability 4590001153184595122
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE vstack:6|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  378  <|@ instruction JUMP ~[] destination: B37 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4589467479932452103
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  382  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  384  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B88" 
    xhandlers
    flags 
    probability 4588806327720511347
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE vstack:6|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  388  <|@ instruction JUMP ~[] destination: B41 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4574334916984542422
    begin_IR
      LIR
      nr  390  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  392  <|@ instruction MOVB [rsi|QWORD[*] + r14|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  394  <|@ instruction r10|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  396  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: r14|QWORD) size: QWORD <|@ <|@
      nr  398  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B88" 
    xhandlers
    flags 
    probability 4573566427501456474
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  402  <|@ instruction r11|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  404  <|@ instruction MOV (x: [r11|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  406  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  408  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE vstack:6|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  410  <|@ instruction JUMP ~[] destination: B44 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4570262383476918658
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:13|DWORD = MOVE rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  414  <|@ instruction rsi|DWORD[_] = MOV [rax|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  416  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  418  <|@ instruction CMPBRANCH (x: r10|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.9854570809572428 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B86" 
    xhandlers
    flags 
    probability 4570144353713859813
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  422  <|@ instruction JUMP ~[] destination: B50 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 4564966382317228292
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:13|DWORD = MOVE rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  426  <|@ instruction rsi|QWORD[.] = MOVE vstack:6|QWORD[.] moveKind: QWORD <|@ <|@
      nr  428  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:635) [bci: 20]
locals: vstack:6|QWORD[.] vstack:13|DWORD vstack:16|QWORD[.] vstack:2|QWORD[.] vstack:8|DWORD vstack:5|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.resize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:20] <|@ <|@
      nr  432  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:635) [bci: 23]
stack: Object[null] 
locals: vstack:6|QWORD[.] vstack:13|DWORD vstack:16|QWORD[.] vstack:2|QWORD[.] vstack:8|DWORD vstack:5|DWORD - - - - - - - 
>@ <|@ instruction rsi|DWORD = MOV [rax|QWORD[.] + 12] size: DWORD state [bci:23] <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE rsi|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE vstack:5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE vstack:8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE vstack:16|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE vstack:13|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE vstack:6|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  434  <|@ instruction JUMP ~[] destination: B1 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B72" 
    xhandlers
    flags 
    probability 4562617473904064804
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r14|QWORD = MOVE vstack:12|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  438  <|@ instruction JUMP ~[] destination: B68 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    probability 4562093595080792590
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r14|QWORD = MOVE vstack:12|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  444  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  446  <|@ instruction JUMP ~[] destination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B66" "B68" "B71" "B70" 
    successors "B73" "B74" 
    xhandlers
    flags 
    probability 4592437312858669387
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  450  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  452  <|@ instruction MOV (x: [r11|QWORD[.] + 24], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  454  <|@ instruction rsi|QWORD[*] = XOR (x: r11|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  456  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    probability 4591660023639118941
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  460  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    probability 4590960463341523540
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  464  <|@ instruction r11|QWORD[*] = SHR r11|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  466  <|@ instruction CMPCONSTBRANCH [r11|QWORD[*] + r14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B83" 
    xhandlers
    flags 
    probability 4590330859073687679
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  470  <|@ instruction JUMP ~[] destination: B77 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B83" 
    xhandlers
    flags 
    probability 4577371935537457006
    begin_IR
      LIR
      nr  472  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  474  <|@ instruction JUMP ~[] destination: B73 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B83" 
    xhandlers
    flags 
    probability 4576750104161816649
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  478  <|@ instruction JUMP ~[] destination: B75 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    probability 4576190455923740328
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  482  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  484  <|@ instruction CMPCONSTBRANCH [r11|QWORD[*] + r14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B83" 
    xhandlers
    flags 
    probability 4575686772509471639
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  488  <|@ instruction JUMP ~[] destination: B79 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    probability 4561198157899870475
    begin_IR
      LIR
      nr  490  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  492  <|@ instruction MOVB [r11|QWORD[*] + r14|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  494  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  496  <|@ instruction r11|QWORD[*] = ADD (x: r11|QWORD[*], y: r14|QWORD) size: QWORD <|@ <|@
      nr  498  <|@ instruction TESTBRANCH (x: rsi|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    probability 4560392264437040573
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  502  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  504  <|@ instruction MOV (x: [rdx|QWORD + rsi|QWORD * 1 - 8], y: r11|QWORD[*]) size: QWORD <|@ <|@
      nr  506  <|@ instruction rsi|QWORD = LEA [rsi|QWORD - 8] size: QWORD <|@ <|@
      nr  508  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  510  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B88" 
    xhandlers
    flags 
    probability 4559287139136259037
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  514  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  516  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE vstack:6|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  518  <|@ instruction JUMP ~[] destination: B43 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4553315745025075769
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:13|DWORD = MOVE rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  522  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  524  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 40] size: QWORD <|@ <|@
      nr  526  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4553268943811267021
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  530  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  532  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 296] instr: 0 <|@ <|@
      nr  534  <|@ instruction MOV [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  536  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>;compressed} <|@ <|@
      nr  538  <|@ instruction MOV [rsi|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  540  <|@ instruction MOV [rsi|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  542  <|@ instruction MOV [rsi|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  544  <|@ instruction MOV [rsi|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  546  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:18|DWORD = MOVE r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  548  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4553315745025075769
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  552  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  554  <|@ instruction rdx|DWORD = MOVE vstack:13|DWORD moveKind: DWORD <|@ <|@
      nr  556  <|@ instruction rcx|QWORD[.] = MOVE vstack:16|QWORD[.] moveKind: QWORD <|@ <|@
      nr  558  <|@ instruction r8|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  560  <|@ instruction r9|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction vstack:17|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  562  <|@ st <@st|@live-base-pointers: []
java.util.LinkedHashMap$Entry.<init>(LinkedHashMap.java:208) [bci: 6]
locals: - - - - - 
java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 9]
stack: vstack:17|QWORD[.] 
locals: vstack:6|QWORD[.] vstack:13|DWORD vstack:16|QWORD[.] vstack:2|QWORD[.] Object[null] - 
java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stack: vstack:10|QWORD[.] vstack:1|DWORD 
locals: vstack:6|QWORD[.] - - - - vstack:5|DWORD - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.]] [] callTarget: HotSpotMethod<HashMap$Node.<init>(int, Object, Object, HashMap$Node)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:6, 9, 56] <|@ <|@
      nr  564  <|@ instruction rsi|QWORD[.] = MOVE vstack:6|QWORD[.] moveKind: QWORD <|@ <|@
      nr  566  <|@ instruction rdx|QWORD[.] = MOVE vstack:17|QWORD[.] moveKind: QWORD <|@ <|@
      nr  568  <|@ st <@st|@live-base-pointers: []
java.util.LinkedHashMap.newNode(LinkedHashMap.java:283) [bci: 17]
locals: - - - - - vstack:17|QWORD[.] 
java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stack: vstack:10|QWORD[.] vstack:1|DWORD 
locals: vstack:6|QWORD[.] - - - - vstack:5|DWORD - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<LinkedHashMap.linkNodeAtEnd(LinkedHashMap$Entry)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:17, 56] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE vstack:17|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r14|QWORD = MOVE vstack:12|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r13|QWORD = MOVE vstack:15|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE vstack:18|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE vstack:10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE vstack:5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE vstack:6|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  570  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    probability 4546075572092099182
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  574  <|@ instruction rsi|QWORD = MOVE r11|QWORD[*] moveKind: QWORD <|@ <|@
      nr  576  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  578  <|@ instruction JUMP ~[] destination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B73" "B75" "B77" "B79" "B82" "B81" 
    successors "B84" "B85" 
    xhandlers
    flags 
    probability 4592437312858669387
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  582  <|@ instruction CMPCONSTBRANCH vstack:14|DWORD trueDestinationProbability: 0.9999886211240704 condition: < trueDestination: B83 -> B84 falseDestination: B83 -> B85 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" 
    xhandlers
    flags 
    probability 4592437224411893480
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE vstack:7|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  586  <|@ instruction JUMP ~[] destination: B84 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B50" "B55" "B64" "B84" "B85" "B63" "B53" 
    successors "B87" "B100" 
    xhandlers
    flags 
    probability 4595548303301553864
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  590  <|@ instruction TESTBRANCH (x: r8|QWORD[.], y: r8|QWORD[.]) trueDestinationProbability: 0.6091185940042786 condition: = trueDestination: B86 -> B87 falseDestination: B86 -> B100 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B88" 
    xhandlers
    flags 
    probability 4592437118697206803
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE vstack:6|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  594  <|@ instruction JUMP ~[] destination: B87 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B35" "B87" "B43" "B44" "B41" "B39" "B37" 
    successors "B89" "B90" 
    xhandlers
    flags 
    probability 4606558935301518032
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  598  <|@ instruction INC [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  600  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  602  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, ~y: [rsi|QWORD[.] + 20]) size: DWORD <|@ <|@
      nr  604  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: rax|DWORD) size: DWORD <|@ <|@
      nr  606  <|@ instruction CMPBRANCH (x: rax|DWORD, y: [rsi|QWORD[.] + 28]) trueDestinationProbability: 7.853038846579175E-4 condition: > trueDestination: B88 -> B89 falseDestination: B88 -> B90 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B91" 
    xhandlers
    flags 
    probability 4606552351536966788
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r13|QWORD = MOVE vstack:15|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  610  <|@ instruction JUMP ~[] destination: B90 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" "B89" 
    successors "B92" "B93" "B99" 
    xhandlers
    flags 
    probability 4606558935301518032
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  614  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~r13|QWORD - keyConstants: [meta{HotSpotType<Ljava/util/HashMap;, resolved>}, meta{HotSpotType<Ljava/util/LinkedHashMap;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/replacements/SnippetTemplate$LRUCache;, resolved>}] keyTargets: [B91 -> B92, B91 -> B93, B91 -> B93] defaultTarget: B91 -> B99 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B97" 
    xhandlers
    flags 
    probability 4606555909645339483
    begin_IR
      LIR
      nr  616  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  618  <|@ instruction JUMP ~[] destination: B92 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B92" "B94" "B96" 
    successors 
    xhandlers
    flags 
    probability 4606558935301518031
    begin_IR
      LIR
      nr  620  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  622  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  624  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B101" "B119" 
    xhandlers
    flags 
    probability 4589652288651159933
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r13|QWORD = MOVE vstack:15|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE vstack:8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE vstack:6|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  628  <|@ instruction r10|DWORD[_] = MOV [r8|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  630  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.9999962001170364 condition: = trueDestination: B100 -> B101 falseDestination: B100 -> B119 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B102" "B103" 
    xhandlers
    flags 
    probability 4589652269697845341
    begin_IR
      LIR
      nr  632  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  634  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B103 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B108" 
    xhandlers
    flags 
    probability 4589138949298219176
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|DWORD[_] = MOVE vstack:3|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  638  <|@ instruction JUMP ~[] destination: B102 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" "B105" 
    xhandlers
    flags 
    probability 4574630580609171603
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  642  <|@ instruction r11|QWORD[.+] = LEA [r8|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  644  <|@ instruction r11|DWORD[_] = MOV [r11|QWORD[.+]] size: DWORD <|@ <|@
      nr  646  <|@ instruction TESTBRANCH (x: r11|DWORD[_], y: r11|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B103 -> B104 falseDestination: B103 -> B105 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B106" "B107" 
    xhandlers
    flags 
    probability 4573832524763622737
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  650  <|@ instruction r9|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  652  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  654  <|@ instruction TESTBRANCH (x: r9|QWORD, y: r9|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B105 -> B106 falseDestination: B105 -> B107 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B108" 
    xhandlers
    flags 
    probability 4573114274502628758
    begin_IR
      LIR
      nr  656  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  658  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  660  <|@ instruction MOV (x: [rcx|QWORD + r9|QWORD * 1 - 8], y: r11|QWORD[.]) size: QWORD <|@ <|@
      nr  662  <|@ instruction r11|QWORD = LEA [r9|QWORD - 8] size: QWORD <|@ <|@
      nr  664  <|@ instruction MOV (x: [r15|QWORD + 40], y: r11|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction r11|DWORD[_] = MOVE vstack:3|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  666  <|@ instruction JUMP ~[] destination: B107 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B91" 
    xhandlers
    flags 
    probability 4559880998172045651
    begin_IR
      LIR
      nr  668  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  670  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  672  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:669) [bci: 288]
locals: vstack:6|QWORD[.] - - - - vstack:5|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.resize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:288] <|@ <|@
      nr   -1  <|@ instruction r13|QWORD = MOVE vstack:15|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE vstack:6|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  676  <|@ instruction JUMP ~[] destination: B89 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B108" 
    xhandlers
    flags 
    probability 4559523670035962382
    begin_IR
      LIR
      nr  678  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|DWORD[_] = MOVE vstack:3|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  680  <|@ instruction JUMP ~[] destination: B104 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B108" 
    xhandlers
    flags 
    probability 4558885225359523289
    begin_IR
      LIR
      nr  682  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  684  <|@ instruction rsi|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  686  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction r11|DWORD[_] = MOVE vstack:3|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  688  <|@ instruction JUMP ~[] destination: B106 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B102" "B104" "B107" "B106" 
    successors "B109" "B110" 
    xhandlers
    flags 
    probability 4589652269697845341
    begin_IR
      LIR
      nr  690  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  692  <|@ instruction MOV (x: [r8|QWORD[.] + 20], y: r11|DWORD[_]) size: DWORD <|@ <|@
      nr  694  <|@ instruction rsi|QWORD[*] = XOR (x: r8|QWORD[.], y: vstack:2|QWORD[.]) size: QWORD <|@ <|@
      nr  696  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B108 -> B109 falseDestination: B108 -> B110 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" "B112" 
    xhandlers
    flags 
    probability 4589138949298219176
    begin_IR
      LIR
      nr  698  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  700  <|@ instruction TESTBRANCH (x: r11|QWORD[.], y: r11|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B110 -> B111 falseDestination: B110 -> B112 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B113" "B114" 
    xhandlers
    flags 
    probability 4588241136471976702
    begin_IR
      LIR
      nr  702  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r14|QWORD = MOVE vstack:12|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  704  <|@ instruction rsi|QWORD[*] = SHR r8|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  706  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B112 -> B113 falseDestination: B112 -> B114 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B120" 
    xhandlers
    flags 
    probability 4587433104928358475
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r13|QWORD = MOVE vstack:15|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  710  <|@ instruction JUMP ~[] destination: B113 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B120" 
    xhandlers
    flags 
    probability 4574630580609171603
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r13|QWORD = MOVE vstack:15|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  714  <|@ instruction JUMP ~[] destination: B109 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B120" 
    xhandlers
    flags 
    probability 4573832524763622738
    begin_IR
      LIR
      nr  716  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r13|QWORD = MOVE vstack:15|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  718  <|@ instruction JUMP ~[] destination: B111 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B115" "B116" 
    xhandlers
    flags 
    probability 4573114274502628759
    begin_IR
      LIR
      nr  720  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  722  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  724  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B114 -> B115 falseDestination: B114 -> B116 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B120" 
    xhandlers
    flags 
    probability 4572467849267734178
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r13|QWORD = MOVE vstack:15|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  728  <|@ instruction JUMP ~[] destination: B115 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B117" "B118" 
    xhandlers
    flags 
    probability 4558310625150728107
    begin_IR
      LIR
      nr  730  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  732  <|@ instruction MOVB [rsi|QWORD[*] + r14|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  734  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  736  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: r14|QWORD) size: QWORD <|@ <|@
      nr  738  <|@ instruction TESTBRANCH (x: rdx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B116 -> B117 falseDestination: B116 -> B118 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B120" 
    xhandlers
    flags 
    probability 4557793484962812442
    begin_IR
      LIR
      nr  740  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  742  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  744  <|@ instruction MOV (x: [rbx|QWORD + rdx|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  746  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr  748  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction r13|QWORD = MOVE vstack:15|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  750  <|@ instruction JUMP ~[] destination: B118 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B94" "B95" 
    xhandlers
    flags 
    probability 4554832167497868566
    begin_IR
      LIR
      nr  752  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE vstack:5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  754  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.4891304347826087 condition: = trueDestination: B93 -> B94 falseDestination: B93 -> B95 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B96" "B98" 
    xhandlers
    flags 
    probability 4550463275345577801
    begin_IR
      LIR
      nr  756  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE vstack:6|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  758  <|@ instruction rdx|DWORD[_] = MOV [rsi|QWORD[.] + 52] size: DWORD <|@ <|@
      nr  760  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:670) [bci: 292]
locals: rsi|QWORD[.] - - - - rdi|DWORD - - - - - - - 
>@ <|@ instruction NULLCHECK [rdx|DWORD[_] * 8] state [bci:292] <|@ <|@
      nr  762  <|@ instruction rbx|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  764  <|@ instruction rax|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr  766  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rax|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr  768  <|@ instruction rbx|QWORD = MOV [rbx|QWORD + 872] size: QWORD <|@ <|@
      nr  770  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  772  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  774  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  776  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:19|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  782  <|@ st <@st|@live-base-pointers: []
java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 15]
locals: vstack:6|QWORD[.] - vstack:19|QWORD[.] - 
java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
locals: - - - - - - - - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<LinkedHashMap.removeEldestEntry(Map$Entry)> state [bci:15, 295] <|@ <|@
      nr  786  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B95 -> B96 falseDestination: B95 -> B98 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B97" 
    xhandlers
    flags 
    probability 4550463275345577801
    begin_IR
      LIR
      nr  788  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  790  <|@ instruction JUMP ~[] destination: B96 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B97" 
    xhandlers
    flags 
    probability 4550193860395418340
    begin_IR
      LIR
      nr  792  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  794  <|@ instruction JUMP ~[] destination: B94 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B120" 
    xhandlers
    flags 
    probability 4543399067768740112
    begin_IR
      LIR
      nr  796  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  798  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  800  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction r13|QWORD = MOVE vstack:15|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  802  <|@ instruction JUMP ~[] destination: B117 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B119" "B109" "B117" "B118" "B115" "B113" "B111" 
    successors 
    xhandlers
    flags 
    probability 4589652288651159933
    begin_IR
      LIR
      nr  804  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  806  <|@ instruction rbx|QWORD = MOV [r13|QWORD + 688] size: QWORD <|@ <|@
      nr  808  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  810  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  812  <|@ instruction rsi|QWORD[.] = MOVE vstack:6|QWORD[.] moveKind: QWORD <|@ <|@
      nr  814  <|@ instruction rdx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:20|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  820  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:663) [bci: 253]
locals: - - - - - - - - - - - - vstack:20|QWORD[.] 
>@ <|@ instruction - = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<HashMap.afterNodeAccess(HashMap$Node)> state [bci:253] <|@ <|@
      nr  822  <|@ instruction rax|QWORD[.] = MOVE vstack:20|QWORD[.] moveKind: QWORD <|@ <|@
      nr  824  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4542678729597855531
    begin_IR
      LIR
      nr  826  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:21|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  828  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: vstack:6|QWORD[.] vstack:13|DWORD rcx|QWORD[.] vstack:2|QWORD[.] vstack:8|DWORD vstack:5|DWORD vstack:10|QWORD[.] - vstack:0|DWORD - - - - 
>@ <|@ instruction rsi|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD state [bci:29] <|@ <|@
      nr  830  <|@ instruction rdx|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr  832  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr  834  <|@ instruction rbx|QWORD = MOV [rsi|QWORD + 464] size: QWORD <|@ <|@
      nr  836  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  838  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  840  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  846  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:641) [bci: 91]
locals: vstack:6|QWORD[.] vstack:13|DWORD vstack:16|QWORD[.] vstack:2|QWORD[.] vstack:8|DWORD vstack:5|DWORD vstack:10|QWORD[.] vstack:21|QWORD[.] - - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:91] <|@ <|@
      nr  850  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B86" 
    xhandlers
    flags 
    probability 4542678729597855531
    begin_IR
      LIR
      nr  852  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE vstack:21|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  854  <|@ instruction JUMP ~[] destination: B53 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B63" 
    xhandlers
    flags 
    probability 4529894057192690854
    begin_IR
      LIR
      nr  856  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  858  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: vstack:6|QWORD[.] vstack:13|DWORD rcx|QWORD[.] vstack:2|QWORD[.] vstack:8|DWORD vstack:5|DWORD vstack:10|QWORD[.] r11|QWORD[.] - - - - vstack:14|DWORD 
>@ <|@ instruction rsi|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD state [bci:134] <|@ <|@
      nr  860  <|@ instruction rdx|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr  862  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr  864  <|@ instruction rbx|QWORD = MOV [rsi|QWORD + 464] size: QWORD <|@ <|@
      nr  866  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  868  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  870  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  876  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:654) [bci: 203]
locals: vstack:6|QWORD[.] vstack:13|DWORD vstack:16|QWORD[.] vstack:2|QWORD[.] vstack:8|DWORD vstack:5|DWORD vstack:10|QWORD[.] - - - vstack:7|QWORD[.] - vstack:14|DWORD 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:203] <|@ <|@
      nr  880  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B86" 
    xhandlers
    flags 
    probability 4529894057192690854
    begin_IR
      LIR
      nr  882  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE vstack:7|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  884  <|@ instruction JUMP ~[] destination: B63 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4523100981620127249
    begin_IR
      LIR
      nr  886  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:18|DWORD = MOVE r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  888  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>} <|@ <|@
      nr  892  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: vstack:6|QWORD[.] vstack:13|DWORD vstack:16|QWORD[.] vstack:2|QWORD[.] vstack:8|DWORD vstack:5|DWORD vstack:10|QWORD[.] - vstack:0|DWORD - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7fba62ccef80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:29] <|@ <|@
      nr  896  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: vstack:6|QWORD[.] vstack:13|DWORD vstack:16|QWORD[.] vstack:2|QWORD[.] vstack:8|DWORD vstack:5|DWORD vstack:10|QWORD[.] - vstack:0|DWORD - - - - 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:29] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  898  <|@ instruction JUMP ~[] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" 
    xhandlers
    flags 
    probability 4518403274531071726
    begin_IR
      LIR
      nr  900  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  902  <|@ instruction rsi|QWORD[.] = MOVE vstack:6|QWORD[.] moveKind: QWORD <|@ <|@
      nr  904  <|@ instruction rdx|QWORD[.] = MOVE vstack:10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  906  <|@ instruction rcx|DWORD = MOVE vstack:13|DWORD moveKind: DWORD <|@ <|@
      nr  908  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:650) [bci: 169]
locals: vstack:6|QWORD[.] - - vstack:2|QWORD[.] vstack:8|DWORD vstack:5|DWORD - - - - vstack:7|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<HashMap.treeifyBin(HashMap$Node[], int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:169] <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE vstack:7|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  910  <|@ instruction JUMP ~[] destination: B85 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B86" 
    xhandlers
    flags 
    probability 4510226010095555986
    begin_IR
      LIR
      nr  912  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:21|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:13|DWORD = MOVE rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  914  <|@ instruction rsi|QWORD[.] = MOVE vstack:21|QWORD[.] moveKind: QWORD <|@ <|@
      nr  916  <|@ instruction rdx|QWORD[.] = MOVE vstack:6|QWORD[.] moveKind: QWORD <|@ <|@
      nr  918  <|@ instruction rcx|QWORD[.] = MOVE vstack:10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  920  <|@ instruction r8|DWORD = MOVE vstack:13|DWORD moveKind: DWORD <|@ <|@
      nr  922  <|@ instruction r9|QWORD[.] = MOVE vstack:16|QWORD[.] moveKind: QWORD <|@ <|@
      nr  924  <|@ instruction rdi|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  926  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:644) [bci: 123]
locals: vstack:6|QWORD[.] - - vstack:2|QWORD[.] vstack:8|DWORD vstack:5|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|QWORD[.], rdi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap$TreeNode.putTreeVal(HashMap, HashMap$Node[], int, Object, Object)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:123] <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  930  <|@ instruction JUMP ~[] destination: B55 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B120" 
    xhandlers
    flags 
    probability 4508568125070994604
    begin_IR
      LIR
      nr  932  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  934  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:659) [bci: 222]
locals: vstack:6|QWORD[.] - - vstack:2|QWORD[.] vstack:8|DWORD vstack:5|DWORD - - - - r8|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r10|DWORD[_] * 8] state [bci:222] <|@ <|@
      nr   -1  <|@ instruction r13|QWORD = MOVE vstack:15|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  936  <|@ instruction JUMP ~[] destination: B119 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  938  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[5780|0x1694] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-51507|0xffffffffffff36cd] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:13|DWORD = MOVE rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE vstack:0|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  940  <|@ instruction JUMP ~[] destination: B47 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  942  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE vstack:7|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbp|DWORD = MOVE vstack:14|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  944  <|@ instruction MOV [r15|QWORD + 1156] y: -157971 size: DWORD <|@ <|@
      nr  946  <|@ instruction MOV [r15|QWORD + 1168] y: 1300 size: QWORD <|@ <|@
      nr  948  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:654) [bci: 206]
stack: int[0|0x0] 
locals: vstack:6|QWORD[.] vstack:13|DWORD vstack:16|QWORD[.] vstack:2|QWORD[.] vstack:8|DWORD vstack:5|DWORD vstack:10|QWORD[.] - - - r8|QWORD[.] - rbp|DWORD 
>@ <|@ instruction DEOPT info [bci:206] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  950  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:13|DWORD = MOVE rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-75547|0xfffffffffffed8e5] // MoveResolver resolve mapping <|@ <|@
      nr  952  <|@ instruction JUMP ~[] destination: B121 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B121" "B47" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  954  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  956  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  958  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  960  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: vstack:6|QWORD[.] vstack:13|DWORD vstack:16|QWORD[.] vstack:2|QWORD[.] vstack:8|DWORD vstack:5|DWORD vstack:10|QWORD[.] - r8|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:29] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  962  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rbp|DWORD = MOVE vstack:1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  964  <|@ instruction JUMP ~[] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  966  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  968  <|@ instruction MOV [r15|QWORD + 1156] y: -61235 size: DWORD <|@ <|@
      nr  970  <|@ instruction MOV [r15|QWORD + 1168] y: 8980 size: QWORD <|@ <|@
      nr  972  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:670) [bci: 292]
locals: vstack:6|QWORD[.] - - - - vstack:5|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:292] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  974  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rbp|DWORD = MOVE vstack:1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  976  <|@ instruction JUMP ~[] destination: B26 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B26" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  978  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  980  <|@ instruction MOV [r15|QWORD + 1156] y: -82987 size: DWORD <|@ <|@
      nr  982  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  984  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stack: vstack:10|QWORD[.] rbp|DWORD rax|QWORD[.] 
locals: vstack:6|QWORD[.] - - - - vstack:5|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:59] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  986  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE vstack:21|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE vstack:10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  988  <|@ instruction MOV [r15|QWORD + 1156] y: -153363 size: DWORD <|@ <|@
      nr  990  <|@ instruction MOV [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  992  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:641) [bci: 94]
stack: int[0|0x0] 
locals: vstack:6|QWORD[.] vstack:13|DWORD vstack:16|QWORD[.] vstack:2|QWORD[.] vstack:8|DWORD vstack:5|DWORD rbx|QWORD[.] r11|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:94] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  994  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE vstack:19|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  996  <|@ instruction MOV [r15|QWORD + 1156] y: -161299 size: DWORD <|@ <|@
      nr  998  <|@ instruction MOV [r15|QWORD + 1168] y: 10260 size: QWORD <|@ <|@
      nr 1000  <|@ st <@st|@live-base-pointers: []
java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 18]
stack: rax|DWORD 
locals: vstack:6|QWORD[.] - rdx|QWORD[.] - 
java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
locals: - - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:18, 295] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1002  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1004  <|@ instruction MOV [r15|QWORD + 1156] y: -129299 size: DWORD <|@ <|@
      nr 1006  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 1008  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:634) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] r8|QWORD[.] r9|DWORD rdi|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #21         // table:java.util.HashMap$Node[]
     4: dup           
     5: astore        6
     7: ifnull        19
    10: aload         6
    12: arraylength   
    13: dup           
    14: istore        8
    16: ifne          29
    19: aload_0       
    20: invokevirtual #23         // resize:()java.util.HashMap$Node[]
    23: dup           
    24: astore        6
    26: arraylength   
    27: istore        8
    29: aload         6
    31: iload         8
    33: iconst_1      
    34: isub          
    35: iload_1       
    36: iand          
    37: dup           
    38: istore        9
    40: aaload        
    41: dup           
    42: astore        7
    44: ifnonnull     63
    47: aload         6
    49: iload         9
    51: aload_0       
    52: iload_1       
    53: aload_2       
    54: aload_3       
    55: aconst_null   
    56: invokevirtual #40         // newNode:(int, java.lang.Object, java.lang.Object, java.util.HashMap$Node)java.util.HashMap$Node
    59: aastore       
    60: goto          259
    63: aload         7
    65: getfield      #35         // java.util.HashMap$Node.hash:int
    68: iload_1       
    69: if_icmpne     104
    72: aload         7
    74: getfield      #36         // java.util.HashMap$Node.key:java.lang.Object
    77: dup           
    78: astore        11
    80: aload_2       
    81: if_acmpeq     97
    84: aload_2       
    85: ifnull        104
    88: aload_2       
    89: aload         11
    91: invokevirtual #37         // java.lang.Object.equals:(java.lang.Object)boolean
    94: ifeq          104
    97: aload         7
    99: astore        10
   101: goto          222
   104: aload         7
   106: instanceof    #180        // java.util.HashMap$TreeNode
   109: ifeq          131
   112: aload         7
   114: checkcast     #180        // java.util.HashMap$TreeNode
   117: aload_0       
   118: aload         6
   120: iload_1       
   121: aload_2       
   122: aload_3       
   123: invokevirtual #41         // java.util.HashMap$TreeNode.putTreeVal:(java.util.HashMap, java.util.HashMap$Node[], int, java.lang.Object, java.lang.Object)java.util.HashMap$TreeNode
   126: astore        10
   128: goto          222
   131: iconst_0      
   132: istore        12
   134: aload         7
   136: getfield      #38         // java.util.HashMap$Node.next:java.util.HashMap$Node
   139: dup           
   140: astore        10
   142: ifnonnull     175
   145: aload         7
   147: aload_0       
   148: iload_1       
   149: aload_2       
   150: aload_3       
   151: aconst_null   
   152: invokevirtual #40         // newNode:(int, java.lang.Object, java.lang.Object, java.util.HashMap$Node)java.util.HashMap$Node
   155: putfield      #38         // java.util.HashMap$Node.next:java.util.HashMap$Node
   158: iload         12
   160: bipush        7
   162: if_icmplt     222
   165: aload_0       
   166: aload         6
   168: iload_1       
   169: invokevirtual #42         // treeifyBin:(java.util.HashMap$Node[], int)void
   172: goto          222
   175: aload         10
   177: getfield      #35         // java.util.HashMap$Node.hash:int
   180: iload_1       
   181: if_icmpne     212
   184: aload         10
   186: getfield      #36         // java.util.HashMap$Node.key:java.lang.Object
   189: dup           
   190: astore        11
   192: aload_2       
   193: if_acmpeq     222
   196: aload_2       
   197: ifnull        212
   200: aload_2       
   201: aload         11
   203: invokevirtual #37         // java.lang.Object.equals:(java.lang.Object)boolean
   206: ifeq          212
   209: goto          222
   212: aload         10
   214: astore        7
   216: iinc          
   219: goto          134
   222: aload         10
   224: ifnull        259
   227: aload         10
   229: getfield      #34         // java.util.HashMap$Node.value:java.lang.Object
   232: astore        12
   234: iload         4
   236: ifeq          244
   239: aload         12
   241: ifnonnull     250
   244: aload         10
   246: aload_3       
   247: putfield      #34         // java.util.HashMap$Node.value:java.lang.Object
   250: aload_0       
   251: aload         10
   253: invokevirtual #43         // afterNodeAccess:(java.util.HashMap$Node)void
   256: aload         12
   258: areturn       
   259: aload_0       
   260: dup           
   261: getfield      #44         // modCount:int
   264: iconst_1      
   265: iadd          
   266: putfield      #44         // modCount:int
   269: aload_0       
   270: dup           
   271: getfield      #32         // size:int
   274: iconst_1      
   275: iadd          
   276: dup_x1        
   277: putfield      #32         // size:int
   280: aload_0       
   281: getfield      #17         // threshold:int
   284: if_icmple     292
   287: aload_0       
   288: invokevirtual #23         // resize:()java.util.HashMap$Node[]
   291: pop           
   292: aload_0       
   293: iload         5
   295: invokevirtual #45         // afterNodeInsertion:(boolean)void
   298: aconst_null   
   299: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After StackSlot numbering"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|DWORD, rdi|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@21849dd slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction vstack:6|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction vstack:16|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction vstack:2|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   12  <|@ instruction vstack:8|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   14  <|@ instruction vstack:5|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr   16  <|@ instruction rbx|DWORD[_] = MOV [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   18  <|@ instruction TESTBRANCH (x: rbx|DWORD[_], y: rbx|DWORD[_]) trueDestinationProbability: 0.0015880438063265454 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607168114973028567
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction rax|DWORD = MOV [rbx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   52  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607168114973028567
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr   66  <|@ instruction r10|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   68  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B1" 
    successors "B6" "B121" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   72  <|@ instruction vstack:10|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   74  <|@ instruction rax|DWORD = MOV [rbx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   76  <|@ instruction r11|DWORD = MOV [rbx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   78  <|@ instruction rbp|DWORD = DEC r10|DWORD size: DWORD <|@ <|@
      nr   80  <|@ instruction rbp|DWORD = AND (x: rdx|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr   82  <|@ instruction CMPBRANCH (x: rax|DWORD, y: rbp|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B121 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B48" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction vstack:0|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   88  <|@ instruction rax|DWORD[_] = MOV [rbx|QWORD[.] + rbp|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   90  <|@ instruction r13|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   92  <|@ instruction r14|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr   94  <|@ instruction r13|QWORD = UNCOMPRESSPOINTER (input: r13|DWORD, ~baseRegister: r14|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr   96  <|@ instruction vstack:15|QWORD = MOVE r13|QWORD moveKind: QWORD <|@ <|@
      nr   98  <|@ instruction r14|QWORD = MOVE input: long[140438306553856|0x7fba57600000] <|@ <|@
      nr  100  <|@ instruction vstack:12|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr  102  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  104  <|@ instruction vstack:3|DWORD[_] = MOVE r10|DWORD[_] moveKind: DWORD <|@ <|@
      nr  106  <|@ instruction TESTBRANCH (x: rax|DWORD[_], y: rax|DWORD[_]) trueDestinationProbability: 0.8229115724385652 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B12" "B47" 
    xhandlers
    flags 
    probability 4605587348047262798
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction vstack:1|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  112  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~r13|QWORD - keyConstants: [meta{HotSpotType<Ljava/util/HashMap;, resolved>}, meta{HotSpotType<Ljava/util/LinkedHashMap;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/replacements/SnippetTemplate$LRUCache;, resolved>}] keyTargets: [B7 -> B8, B7 -> B12, B7 -> B12] defaultTarget: B7 -> B47 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4605585062831744793
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction rax|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  118  <|@ instruction rbp|QWORD = LEA [rax|QWORD + 32] size: QWORD <|@ <|@
      nr  120  <|@ instruction CMPBRANCH (x: rbp|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4605510964398880109
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction MOV (x: [r15|QWORD + 440], y: rbp|QWORD) size: QWORD <|@ <|@
      nr  152  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 288] instr: 0 <|@ <|@
      nr  154  <|@ instruction MOV [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  156  <|@ instruction MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>;compressed} <|@ <|@
      nr  158  <|@ instruction MOV [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  160  <|@ instruction MOV [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  162  <|@ instruction MOV [rax|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  164  <|@ instruction rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  166  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 4605585062831744793
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  170  <|@ instruction MOV (x: [rax|QWORD[.] + 20], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  172  <|@ instruction rcx|DWORD[_] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  174  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr  176  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  178  <|@ instruction JUMP ~[] destination: B11 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B11" "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4605587348047262798
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  270  <|@ instruction rdx|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr  272  <|@ instruction r11|QWORD = UNCOMPRESSPOINTER (input: r11|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr  274  <|@ instruction rdx|QWORD = MOV [r11|QWORD + 208] size: QWORD <|@ <|@
      nr  276  <|@ instruction rcx|DWORD = MOV [rdx|QWORD + 20] size: DWORD <|@ <|@
      nr  278  <|@ instruction r8|DWORD = MOV [rax|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  280  <|@ instruction r9|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr  282  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: r9|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr  284  <|@ instruction r9|QWORD = MOVSXD rcx|DWORD size: QWORD <|@ <|@
      nr  286  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r8|QWORD + r9|QWORD * 1]) trueDestinationProbability: 0.5 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B45" 
    xhandlers
    flags 
    probability 4601083748419892302
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ instruction CMPCONSTBRANCH rcx|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B45 y: 32 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4601083748419892302
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  298  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: r8|QWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4596580148792521806
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction rcx|QWORD = MOV [r8|QWORD + 40] size: QWORD <|@ <|@
      nr  308  <|@ instruction r9|DWORD = MOV [rcx|QWORD] size: DWORD <|@ <|@
      nr  310  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  312  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B24" 
    successors "B23" "B26" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4602807799859017905
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  316  <|@ instruction CMPBRANCH (x: r9|DWORD, y: r10|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602807799859017905
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  320  <|@ instruction r11|DWORD = SHL r10|DWORD y: 3 size: DWORD <|@ <|@
      nr  322  <|@ instruction r11|DWORD = LEA [r11|DWORD + 8] size: DWORD <|@ <|@
      nr  324  <|@ instruction r11|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr  326  <|@ instruction r11|QWORD = MOV [rcx|QWORD + r11|QWORD * 1] size: QWORD <|@ <|@
      nr  328  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: r11|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B23 -> B25 falseDestination: B23 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B22" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4599230716294395707
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  332  <|@ instruction r10|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr  334  <|@ instruction JUMP ~[] destination: B24 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B27" 
    xhandlers
    flags 
    probability 4601083748419892302
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ instruction JUMP ~[] destination: B17 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B27" 
    xhandlers
    flags 
    probability 4596580148792521807
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  338  <|@ instruction MOV (x: [r8|QWORD + 32], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  340  <|@ instruction JUMP ~[] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B27" 
    xhandlers
    flags 
    probability 4596580148792521806
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  302  <|@ instruction JUMP ~[] destination: B20 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B17" "B25" "B20" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4605587348047262798
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" 
    xhandlers
    flags 
    probability 4604846135197064160
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction rbp|DWORD = MOVE vstack:1|DWORD moveKind: DWORD <|@ <|@
      nr  356  <|@ instruction JUMP ~[] destination: B28 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B49" "B54" 
    xhandlers
    flags 
    probability 4595548303301553864
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  518  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [rax|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.01987559010066231 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4595421491411700642
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction CMPCONSTBRANCH [rax|DWORD[_] * 8 + 8] trueDestinationProbability: 2.021089053783065E-6 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B56 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4595421478772878611
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  606  <|@ instruction rbp|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  608  <|@ instruction JUMP ~[] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B62" 
    successors "B65" "B58" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4595777537596400292
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  612  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] vstack:2|QWORD[.] r9|DWORD rdi|DWORD rbx|QWORD[.] r11|QWORD[.] - - - - rbp|DWORD 
>@ <|@ instruction rax|DWORD[_] = MOV [r11|QWORD[.] + 24] size: DWORD state [bci:134] <|@ <|@
      nr  614  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  616  <|@ instruction TESTBRANCH (x: rax|DWORD[_], y: rax|DWORD[_]) trueDestinationProbability: 0.5880075530332061 condition: = trueDestination: B57 -> B65 falseDestination: B57 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4590110563079390205
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  620  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [rax|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.8692436604445373 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B62 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B57" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4576850562957400324
    begin_IR
      LIR
      nr  672  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  674  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] vstack:2|QWORD[.] r9|DWORD rdi|DWORD rbx|QWORD[.] r11|QWORD[.] - - - - rbp|DWORD 
>@ <|@ instruction SAFEPOINT rax|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 thread: r15 state [bci:134] <|@ <|@
      nr  676  <|@ instruction rbp|DWORD = INC rbp|DWORD size: DWORD <|@ <|@
      nr  678  <|@ instruction r11|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  680  <|@ instruction JUMP ~[] destination: B62 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4592437312858669387
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  696  <|@ instruction vstack:7|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  698  <|@ instruction vstack:14|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  700  <|@ instruction vstack:4|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  702  <|@ instruction rax|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  704  <|@ instruction r10|QWORD = MOV [r13|QWORD + 680] size: QWORD <|@ <|@
      nr  706  <|@ instruction r11|QWORD = MOV [r10|QWORD + 64] size: QWORD <|@ <|@
      nr  708  <|@ instruction rdi|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  710  <|@ instruction rsi|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  712  <|@ instruction rdi|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  714  <|@ instruction rdx|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  716  <|@ instruction r8|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  718  <|@ instruction r9|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  720  <|@ instruction rbx|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  722  <|@ instruction rax|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  724  <|@ instruction vstack:13|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  726  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:648) [bci: 152]
stack: vstack:4|QWORD[.] 
locals: vstack:6|QWORD[.] vstack:13|DWORD - vstack:2|QWORD[.] vstack:8|DWORD vstack:5|DWORD vstack:10|QWORD[.] - - - vstack:7|QWORD[.] - vstack:14|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.]]) [] callTarget: HotSpotMethod<HashMap.newNode(int, Object, Object, HashMap$Node)> state [bci:152] <|@ <|@
      nr  728  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B67 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B72" 
    xhandlers
    flags 
    probability 4591660023639118941
    begin_IR
      LIR
      nr  730  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  732  <|@ instruction r11|QWORD[.] = MOVE vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr  734  <|@ instruction r14|QWORD = MOVE vstack:12|QWORD moveKind: QWORD <|@ <|@
      nr  736  <|@ instruction rbx|QWORD[.] = MOVE vstack:10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  738  <|@ instruction JUMP ~[] destination: B66 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4590594123464754032
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction rbp|DWORD = MOVE vstack:1|DWORD moveKind: DWORD <|@ <|@
      nr  362  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + rbp|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  364  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  366  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4590001153184595122
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  374  <|@ instruction r10|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  376  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  378  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4589467479932452103
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction r11|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  390  <|@ instruction MOV (x: [r11|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  392  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  394  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  396  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B64" "B60" 
    xhandlers
    flags 
    probability 4589398445432346844
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction vstack:7|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  626  <|@ instruction vstack:14|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  628  <|@ instruction vstack:4|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  630  <|@ instruction vstack:13|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  632  <|@ instruction rsi|DWORD[_] = MOV [rax|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  634  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  636  <|@ instruction CMPBRANCH (x: r10|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.9998932466496128 condition: = trueDestination: B59 -> B64 falseDestination: B59 -> B60 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B86" 
    xhandlers
    flags 
    probability 4589397940059341918
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  690  <|@ instruction r8|QWORD[.] = MOVE vstack:7|QWORD[.] moveKind: QWORD <|@ <|@
      nr  692  <|@ instruction JUMP ~[] destination: B64 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4577371935537457006
    begin_IR
      LIR
      nr  740  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  742  <|@ instruction r11|QWORD[.] = MOVE vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr  744  <|@ instruction rbx|QWORD[.] = MOVE vstack:10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  746  <|@ instruction rsi|QWORD[.+] = LEA [r11|QWORD[.] + 24] size: QWORD <|@ <|@
      nr  748  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  750  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B67 -> B68 falseDestination: B67 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" "B71" 
    xhandlers
    flags 
    probability 4576750104161816650
    begin_IR
      LIR
      nr  758  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  760  <|@ instruction r10|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  762  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  764  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    probability 4576190455923740329
    begin_IR
      LIR
      nr  774  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  776  <|@ instruction r8|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  778  <|@ instruction MOV (x: [r8|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  780  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  782  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  784  <|@ instruction r14|QWORD = MOVE vstack:12|QWORD moveKind: QWORD <|@ <|@
      nr  786  <|@ instruction JUMP ~[] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    probability 4575897384022324722
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction JUMP ~[] destination: B30 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4575895921484393205
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction rbp|DWORD = MOVE vstack:1|DWORD moveKind: DWORD <|@ <|@
      nr  126  <|@ instruction vstack:13|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  128  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>} <|@ <|@
      nr  130  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: vstack:6|QWORD[.] vstack:13|DWORD rcx|QWORD[.] vstack:2|QWORD[.] vstack:8|DWORD vstack:5|DWORD rbx|QWORD[.] - vstack:0|DWORD - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7fba62ccef80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:29] <|@ <|@
      nr  132  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: vstack:6|QWORD[.] vstack:13|DWORD rcx|QWORD[.] vstack:2|QWORD[.] vstack:8|DWORD vstack:5|DWORD rbx|QWORD[.] - vstack:0|DWORD - - - - 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:29] <|@ <|@
      nr  134  <|@ instruction r10|DWORD[_] = MOVE vstack:3|DWORD[_] moveKind: DWORD <|@ <|@
      nr  136  <|@ instruction r14|QWORD = MOVE vstack:12|QWORD moveKind: QWORD <|@ <|@
      nr  138  <|@ instruction r13|QWORD = MOVE vstack:15|QWORD moveKind: QWORD <|@ <|@
      nr  140  <|@ instruction rdi|DWORD = MOVE vstack:5|DWORD moveKind: DWORD <|@ <|@
      nr  142  <|@ instruction rdx|DWORD = MOVE vstack:13|DWORD moveKind: DWORD <|@ <|@
      nr  144  <|@ instruction rsi|QWORD[.] = MOVE vstack:6|QWORD[.] moveKind: QWORD <|@ <|@
      nr  146  <|@ instruction JUMP ~[] destination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4575188794187971253
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  382  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  384  <|@ instruction JUMP ~[] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" "B33" "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4605587348047262798
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  402  <|@ instruction MOV (x: [rbx|QWORD[.] + rbp|DWORD * 4 + 16], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  404  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + rbp|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  406  <|@ instruction rsi|QWORD[*] = XOR (x: rsi|QWORD[.+], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  408  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4604846135197064160
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  418  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4604179043631885386
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction r14|QWORD = MOVE vstack:12|QWORD moveKind: QWORD <|@ <|@
      nr  430  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + rbp|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  432  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.+] y: 9 size: QWORD <|@ <|@
      nr  434  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B88" 
    xhandlers
    flags 
    probability 4603578661223224489
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction rsi|QWORD[.] = MOVE vstack:6|QWORD[.] moveKind: QWORD <|@ <|@
      nr  440  <|@ instruction JUMP ~[] destination: B39 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B88" 
    xhandlers
    flags 
    probability 4590594123464754032
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction rsi|QWORD[.] = MOVE vstack:6|QWORD[.] moveKind: QWORD <|@ <|@
      nr  414  <|@ instruction JUMP ~[] destination: B35 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B88" 
    xhandlers
    flags 
    probability 4590001153184595122
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  422  <|@ instruction rsi|QWORD[.] = MOVE vstack:6|QWORD[.] moveKind: QWORD <|@ <|@
      nr  424  <|@ instruction JUMP ~[] destination: B37 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4589467479932452103
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  446  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B88" 
    xhandlers
    flags 
    probability 4588806327720511347
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  450  <|@ instruction rsi|QWORD[.] = MOVE vstack:6|QWORD[.] moveKind: QWORD <|@ <|@
      nr  452  <|@ instruction JUMP ~[] destination: B41 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4574334916984542422
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  456  <|@ instruction MOVB [rsi|QWORD[*] + r14|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  458  <|@ instruction r10|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  460  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: r14|QWORD) size: QWORD <|@ <|@
      nr  462  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B88" 
    xhandlers
    flags 
    probability 4573566427501456474
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  476  <|@ instruction r11|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  478  <|@ instruction MOV (x: [r11|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  480  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  482  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  484  <|@ instruction rsi|QWORD[.] = MOVE vstack:6|QWORD[.] moveKind: QWORD <|@ <|@
      nr  486  <|@ instruction JUMP ~[] destination: B44 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4570262383476918658
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  522  <|@ instruction vstack:13|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  524  <|@ instruction rsi|DWORD[_] = MOV [rax|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  526  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  528  <|@ instruction CMPBRANCH (x: r10|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.9854570809572428 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B86" 
    xhandlers
    flags 
    probability 4570144353713859813
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  532  <|@ instruction r8|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  534  <|@ instruction JUMP ~[] destination: B50 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 4564966382317228292
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   22  <|@ instruction vstack:13|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   24  <|@ instruction rsi|QWORD[.] = MOVE vstack:6|QWORD[.] moveKind: QWORD <|@ <|@
      nr   26  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:635) [bci: 20]
locals: vstack:6|QWORD[.] vstack:13|DWORD vstack:16|QWORD[.] vstack:2|QWORD[.] vstack:8|DWORD vstack:5|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.resize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:20] <|@ <|@
      nr   28  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:635) [bci: 23]
stack: Object[null] 
locals: vstack:6|QWORD[.] vstack:13|DWORD vstack:16|QWORD[.] vstack:2|QWORD[.] vstack:8|DWORD vstack:5|DWORD - - - - - - - 
>@ <|@ instruction rsi|DWORD = MOV [rax|QWORD[.] + 12] size: DWORD state [bci:23] <|@ <|@
      nr   30  <|@ instruction r10|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction rbx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction rdi|DWORD = MOVE vstack:5|DWORD moveKind: DWORD <|@ <|@
      nr   36  <|@ instruction r9|DWORD = MOVE vstack:8|DWORD moveKind: DWORD <|@ <|@
      nr   38  <|@ instruction r8|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction rcx|QWORD[.] = MOVE vstack:16|QWORD[.] moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction rdx|DWORD = MOVE vstack:13|DWORD moveKind: DWORD <|@ <|@
      nr   44  <|@ instruction rsi|QWORD[.] = MOVE vstack:6|QWORD[.] moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction JUMP ~[] destination: B1 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B72" 
    xhandlers
    flags 
    probability 4562617473904064804
    begin_IR
      LIR
      nr  752  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  754  <|@ instruction r14|QWORD = MOVE vstack:12|QWORD moveKind: QWORD <|@ <|@
      nr  756  <|@ instruction JUMP ~[] destination: B68 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    probability 4562093595080792590
    begin_IR
      LIR
      nr  766  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  768  <|@ instruction r14|QWORD = MOVE vstack:12|QWORD moveKind: QWORD <|@ <|@
      nr  770  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  772  <|@ instruction JUMP ~[] destination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B66" "B68" "B71" "B70" 
    successors "B73" "B74" 
    xhandlers
    flags 
    probability 4592437312858669387
    begin_IR
      LIR
      nr  788  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  790  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  792  <|@ instruction MOV (x: [r11|QWORD[.] + 24], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  794  <|@ instruction rsi|QWORD[*] = XOR (x: r11|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  796  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    probability 4591660023639118941
    begin_IR
      LIR
      nr  802  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  804  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    probability 4590960463341523540
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  812  <|@ instruction r11|QWORD[*] = SHR r11|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  814  <|@ instruction CMPCONSTBRANCH [r11|QWORD[*] + r14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B83" 
    xhandlers
    flags 
    probability 4590330859073687679
    begin_IR
      LIR
      nr  816  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  818  <|@ instruction JUMP ~[] destination: B77 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B83" 
    xhandlers
    flags 
    probability 4577371935537457006
    begin_IR
      LIR
      nr  798  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  800  <|@ instruction JUMP ~[] destination: B73 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B83" 
    xhandlers
    flags 
    probability 4576750104161816649
    begin_IR
      LIR
      nr  806  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  808  <|@ instruction JUMP ~[] destination: B75 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    probability 4576190455923740328
    begin_IR
      LIR
      nr  820  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  822  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  824  <|@ instruction CMPCONSTBRANCH [r11|QWORD[*] + r14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B83" 
    xhandlers
    flags 
    probability 4575686772509471639
    begin_IR
      LIR
      nr  826  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  828  <|@ instruction JUMP ~[] destination: B79 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    probability 4561198157899870475
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  832  <|@ instruction MOVB [r11|QWORD[*] + r14|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  834  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  836  <|@ instruction r11|QWORD[*] = ADD (x: r11|QWORD[*], y: r14|QWORD) size: QWORD <|@ <|@
      nr  838  <|@ instruction TESTBRANCH (x: rsi|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    probability 4560392264437040573
    begin_IR
      LIR
      nr  848  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  850  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  852  <|@ instruction MOV (x: [rdx|QWORD + rsi|QWORD * 1 - 8], y: r11|QWORD[*]) size: QWORD <|@ <|@
      nr  854  <|@ instruction rsi|QWORD = LEA [rsi|QWORD - 8] size: QWORD <|@ <|@
      nr  856  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  858  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B88" 
    xhandlers
    flags 
    probability 4559287139136259037
    begin_IR
      LIR
      nr  464  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  466  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  468  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  470  <|@ instruction rsi|QWORD[.] = MOVE vstack:6|QWORD[.] moveKind: QWORD <|@ <|@
      nr  472  <|@ instruction JUMP ~[] destination: B43 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4553315745025075769
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  182  <|@ instruction vstack:13|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  184  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  186  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 40] size: QWORD <|@ <|@
      nr  188  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4553268943811267021
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  208  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 296] instr: 0 <|@ <|@
      nr  210  <|@ instruction MOV [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  212  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>;compressed} <|@ <|@
      nr  214  <|@ instruction MOV [rsi|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  216  <|@ instruction MOV [rsi|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  218  <|@ instruction MOV [rsi|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  220  <|@ instruction MOV [rsi|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  222  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  224  <|@ instruction vstack:18|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  226  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4553315745025075769
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  230  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  234  <|@ instruction rdx|DWORD = MOVE vstack:13|DWORD moveKind: DWORD <|@ <|@
      nr  236  <|@ instruction rcx|QWORD[.] = MOVE vstack:16|QWORD[.] moveKind: QWORD <|@ <|@
      nr  238  <|@ instruction r8|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  240  <|@ instruction r9|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  242  <|@ instruction vstack:17|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  244  <|@ st <@st|@live-base-pointers: []
java.util.LinkedHashMap$Entry.<init>(LinkedHashMap.java:208) [bci: 6]
locals: - - - - - 
java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 9]
stack: vstack:17|QWORD[.] 
locals: vstack:6|QWORD[.] vstack:13|DWORD vstack:16|QWORD[.] vstack:2|QWORD[.] Object[null] - 
java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stack: vstack:10|QWORD[.] vstack:1|DWORD 
locals: vstack:6|QWORD[.] - - - - vstack:5|DWORD - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.]] [] callTarget: HotSpotMethod<HashMap$Node.<init>(int, Object, Object, HashMap$Node)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:6, 9, 56] <|@ <|@
      nr  246  <|@ instruction rsi|QWORD[.] = MOVE vstack:6|QWORD[.] moveKind: QWORD <|@ <|@
      nr  248  <|@ instruction rdx|QWORD[.] = MOVE vstack:17|QWORD[.] moveKind: QWORD <|@ <|@
      nr  250  <|@ st <@st|@live-base-pointers: []
java.util.LinkedHashMap.newNode(LinkedHashMap.java:283) [bci: 17]
locals: - - - - - vstack:17|QWORD[.] 
java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stack: vstack:10|QWORD[.] vstack:1|DWORD 
locals: vstack:6|QWORD[.] - - - - vstack:5|DWORD - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<LinkedHashMap.linkNodeAtEnd(LinkedHashMap$Entry)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:17, 56] <|@ <|@
      nr  252  <|@ instruction rax|QWORD[.] = MOVE vstack:17|QWORD[.] moveKind: QWORD <|@ <|@
      nr  254  <|@ instruction r14|QWORD = MOVE vstack:12|QWORD moveKind: QWORD <|@ <|@
      nr  256  <|@ instruction r13|QWORD = MOVE vstack:15|QWORD moveKind: QWORD <|@ <|@
      nr  258  <|@ instruction r11|DWORD = MOVE vstack:18|DWORD moveKind: DWORD <|@ <|@
      nr  260  <|@ instruction rbx|QWORD[.] = MOVE vstack:10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  262  <|@ instruction rdi|DWORD = MOVE vstack:5|DWORD moveKind: DWORD <|@ <|@
      nr  264  <|@ instruction rsi|QWORD[.] = MOVE vstack:6|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    probability 4546075572092099182
    begin_IR
      LIR
      nr  840  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  842  <|@ instruction rsi|QWORD = MOVE r11|QWORD[*] moveKind: QWORD <|@ <|@
      nr  844  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  846  <|@ instruction JUMP ~[] destination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B73" "B75" "B77" "B79" "B82" "B81" 
    successors "B84" "B85" 
    xhandlers
    flags 
    probability 4592437312858669387
    begin_IR
      LIR
      nr  860  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  862  <|@ instruction CMPCONSTBRANCH vstack:14|DWORD trueDestinationProbability: 0.9999886211240704 condition: < trueDestination: B83 -> B84 falseDestination: B83 -> B85 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" 
    xhandlers
    flags 
    probability 4592437224411893480
    begin_IR
      LIR
      nr  864  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  866  <|@ instruction r8|QWORD[.] = MOVE vstack:7|QWORD[.] moveKind: QWORD <|@ <|@
      nr  868  <|@ instruction JUMP ~[] destination: B84 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B50" "B55" "B64" "B84" "B85" "B63" "B53" 
    successors "B87" "B100" 
    xhandlers
    flags 
    probability 4595548303301553864
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  886  <|@ instruction TESTBRANCH (x: r8|QWORD[.], y: r8|QWORD[.]) trueDestinationProbability: 0.6091185940042786 condition: = trueDestination: B86 -> B87 falseDestination: B86 -> B100 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B88" 
    xhandlers
    flags 
    probability 4592437118697206803
    begin_IR
      LIR
      nr  888  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  890  <|@ instruction rsi|QWORD[.] = MOVE vstack:6|QWORD[.] moveKind: QWORD <|@ <|@
      nr  892  <|@ instruction JUMP ~[] destination: B87 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B35" "B87" "B43" "B44" "B41" "B39" "B37" 
    successors "B89" "B90" 
    xhandlers
    flags 
    probability 4606558935301518032
    begin_IR
      LIR
      nr  894  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  896  <|@ instruction INC [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  898  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  900  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, ~y: [rsi|QWORD[.] + 20]) size: DWORD <|@ <|@
      nr  902  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: rax|DWORD) size: DWORD <|@ <|@
      nr  904  <|@ instruction CMPBRANCH (x: rax|DWORD, y: [rsi|QWORD[.] + 28]) trueDestinationProbability: 7.853038846579175E-4 condition: > trueDestination: B88 -> B89 falseDestination: B88 -> B90 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B91" 
    xhandlers
    flags 
    probability 4606552351536966788
    begin_IR
      LIR
      nr  920  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  922  <|@ instruction r13|QWORD = MOVE vstack:15|QWORD moveKind: QWORD <|@ <|@
      nr  924  <|@ instruction JUMP ~[] destination: B90 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" "B89" 
    successors "B92" "B93" "B99" 
    xhandlers
    flags 
    probability 4606558935301518032
    begin_IR
      LIR
      nr  926  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  928  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~r13|QWORD - keyConstants: [meta{HotSpotType<Ljava/util/HashMap;, resolved>}, meta{HotSpotType<Ljava/util/LinkedHashMap;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/replacements/SnippetTemplate$LRUCache;, resolved>}] keyTargets: [B91 -> B92, B91 -> B93, B91 -> B93] defaultTarget: B91 -> B99 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B97" 
    xhandlers
    flags 
    probability 4606555909645339483
    begin_IR
      LIR
      nr  930  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  932  <|@ instruction JUMP ~[] destination: B92 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B92" "B94" "B96" 
    successors 
    xhandlers
    flags 
    probability 4606558935301518031
    begin_IR
      LIR
      nr  982  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  984  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  986  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B101" "B119" 
    xhandlers
    flags 
    probability 4589652288651159933
    begin_IR
      LIR
      nr 1006  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1008  <|@ instruction r13|QWORD = MOVE vstack:15|QWORD moveKind: QWORD <|@ <|@
      nr 1010  <|@ instruction r9|DWORD = MOVE vstack:8|DWORD moveKind: DWORD <|@ <|@
      nr 1012  <|@ instruction rsi|QWORD[.] = MOVE vstack:6|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1014  <|@ instruction r10|DWORD[_] = MOV [r8|QWORD[.] + 20] size: DWORD <|@ <|@
      nr 1016  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.9999962001170364 condition: = trueDestination: B100 -> B101 falseDestination: B100 -> B119 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B102" "B103" 
    xhandlers
    flags 
    probability 4589652269697845341
    begin_IR
      LIR
      nr 1018  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1020  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B103 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B108" 
    xhandlers
    flags 
    probability 4589138949298219176
    begin_IR
      LIR
      nr 1022  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1024  <|@ instruction r11|DWORD[_] = MOVE vstack:3|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1026  <|@ instruction JUMP ~[] destination: B102 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" "B105" 
    xhandlers
    flags 
    probability 4574630580609171603
    begin_IR
      LIR
      nr 1028  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1030  <|@ instruction r11|QWORD[.+] = LEA [r8|QWORD[.] + 20] size: QWORD <|@ <|@
      nr 1032  <|@ instruction r11|DWORD[_] = MOV [r11|QWORD[.+]] size: DWORD <|@ <|@
      nr 1034  <|@ instruction TESTBRANCH (x: r11|DWORD[_], y: r11|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B103 -> B104 falseDestination: B103 -> B105 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B106" "B107" 
    xhandlers
    flags 
    probability 4573832524763622737
    begin_IR
      LIR
      nr 1042  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1044  <|@ instruction r9|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr 1046  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr 1048  <|@ instruction TESTBRANCH (x: r9|QWORD, y: r9|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B105 -> B106 falseDestination: B105 -> B107 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B108" 
    xhandlers
    flags 
    probability 4573114274502628758
    begin_IR
      LIR
      nr 1060  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1062  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr 1064  <|@ instruction MOV (x: [rcx|QWORD + r9|QWORD * 1 - 8], y: r11|QWORD[.]) size: QWORD <|@ <|@
      nr 1066  <|@ instruction r11|QWORD = LEA [r9|QWORD - 8] size: QWORD <|@ <|@
      nr 1068  <|@ instruction MOV (x: [r15|QWORD + 40], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1070  <|@ instruction r11|DWORD[_] = MOVE vstack:3|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1072  <|@ instruction JUMP ~[] destination: B107 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B91" 
    xhandlers
    flags 
    probability 4559880998172045651
    begin_IR
      LIR
      nr  906  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  908  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  910  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  912  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:669) [bci: 288]
locals: vstack:6|QWORD[.] - - - - vstack:5|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.resize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:288] <|@ <|@
      nr  914  <|@ instruction r13|QWORD = MOVE vstack:15|QWORD moveKind: QWORD <|@ <|@
      nr  916  <|@ instruction rsi|QWORD[.] = MOVE vstack:6|QWORD[.] moveKind: QWORD <|@ <|@
      nr  918  <|@ instruction JUMP ~[] destination: B89 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B108" 
    xhandlers
    flags 
    probability 4559523670035962382
    begin_IR
      LIR
      nr 1036  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1038  <|@ instruction r11|DWORD[_] = MOVE vstack:3|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1040  <|@ instruction JUMP ~[] destination: B104 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B108" 
    xhandlers
    flags 
    probability 4558885225359523289
    begin_IR
      LIR
      nr 1050  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1052  <|@ instruction rsi|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1054  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr 1056  <|@ instruction r11|DWORD[_] = MOVE vstack:3|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1058  <|@ instruction JUMP ~[] destination: B106 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B102" "B104" "B107" "B106" 
    successors "B109" "B110" 
    xhandlers
    flags 
    probability 4589652269697845341
    begin_IR
      LIR
      nr 1074  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1076  <|@ instruction MOV (x: [r8|QWORD[.] + 20], y: r11|DWORD[_]) size: DWORD <|@ <|@
      nr 1078  <|@ instruction rsi|QWORD[*] = XOR (x: r8|QWORD[.], y: vstack:2|QWORD[.]) size: QWORD <|@ <|@
      nr 1080  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B108 -> B109 falseDestination: B108 -> B110 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" "B112" 
    xhandlers
    flags 
    probability 4589138949298219176
    begin_IR
      LIR
      nr 1088  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1090  <|@ instruction r11|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1092  <|@ instruction TESTBRANCH (x: r11|QWORD[.], y: r11|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B110 -> B111 falseDestination: B110 -> B112 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B113" "B114" 
    xhandlers
    flags 
    probability 4588241136471976702
    begin_IR
      LIR
      nr 1100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1102  <|@ instruction r14|QWORD = MOVE vstack:12|QWORD moveKind: QWORD <|@ <|@
      nr 1104  <|@ instruction rsi|QWORD[*] = SHR r8|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr 1106  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B112 -> B113 falseDestination: B112 -> B114 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B120" 
    xhandlers
    flags 
    probability 4587433104928358475
    begin_IR
      LIR
      nr 1108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1110  <|@ instruction r13|QWORD = MOVE vstack:15|QWORD moveKind: QWORD <|@ <|@
      nr 1112  <|@ instruction JUMP ~[] destination: B113 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B120" 
    xhandlers
    flags 
    probability 4574630580609171603
    begin_IR
      LIR
      nr 1082  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1084  <|@ instruction r13|QWORD = MOVE vstack:15|QWORD moveKind: QWORD <|@ <|@
      nr 1086  <|@ instruction JUMP ~[] destination: B109 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B120" 
    xhandlers
    flags 
    probability 4573832524763622738
    begin_IR
      LIR
      nr 1094  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1096  <|@ instruction r13|QWORD = MOVE vstack:15|QWORD moveKind: QWORD <|@ <|@
      nr 1098  <|@ instruction JUMP ~[] destination: B111 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B115" "B116" 
    xhandlers
    flags 
    probability 4573114274502628759
    begin_IR
      LIR
      nr 1114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1116  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr 1118  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B114 -> B115 falseDestination: B114 -> B116 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B120" 
    xhandlers
    flags 
    probability 4572467849267734178
    begin_IR
      LIR
      nr 1120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1122  <|@ instruction r13|QWORD = MOVE vstack:15|QWORD moveKind: QWORD <|@ <|@
      nr 1124  <|@ instruction JUMP ~[] destination: B115 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B117" "B118" 
    xhandlers
    flags 
    probability 4558310625150728107
    begin_IR
      LIR
      nr 1126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1128  <|@ instruction MOVB [rsi|QWORD[*] + r14|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr 1130  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr 1132  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: r14|QWORD) size: QWORD <|@ <|@
      nr 1134  <|@ instruction TESTBRANCH (x: rdx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B116 -> B117 falseDestination: B116 -> B118 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B120" 
    xhandlers
    flags 
    probability 4557793484962812442
    begin_IR
      LIR
      nr 1146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1148  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr 1150  <|@ instruction MOV (x: [rbx|QWORD + rdx|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr 1152  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr 1154  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1156  <|@ instruction r13|QWORD = MOVE vstack:15|QWORD moveKind: QWORD <|@ <|@
      nr 1158  <|@ instruction JUMP ~[] destination: B118 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B94" "B95" 
    xhandlers
    flags 
    probability 4554832167497868566
    begin_IR
      LIR
      nr  934  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  936  <|@ instruction rdi|DWORD = MOVE vstack:5|DWORD moveKind: DWORD <|@ <|@
      nr  938  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.4891304347826087 condition: = trueDestination: B93 -> B94 falseDestination: B93 -> B95 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B96" "B98" 
    xhandlers
    flags 
    probability 4550463275345577801
    begin_IR
      LIR
      nr  944  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  946  <|@ instruction rsi|QWORD[.] = MOVE vstack:6|QWORD[.] moveKind: QWORD <|@ <|@
      nr  948  <|@ instruction rdx|DWORD[_] = MOV [rsi|QWORD[.] + 52] size: DWORD <|@ <|@
      nr  950  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:670) [bci: 292]
locals: rsi|QWORD[.] - - - - rdi|DWORD - - - - - - - 
>@ <|@ instruction NULLCHECK [rdx|DWORD[_] * 8] state [bci:292] <|@ <|@
      nr  952  <|@ instruction rbx|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  954  <|@ instruction rax|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr  956  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rax|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr  958  <|@ instruction rbx|QWORD = MOV [rbx|QWORD + 872] size: QWORD <|@ <|@
      nr  960  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  962  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  964  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  966  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  968  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  970  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  972  <|@ instruction vstack:19|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  974  <|@ st <@st|@live-base-pointers: []
java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 15]
locals: vstack:6|QWORD[.] - vstack:19|QWORD[.] - 
java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
locals: - - - - - - - - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<LinkedHashMap.removeEldestEntry(Map$Entry)> state [bci:15, 295] <|@ <|@
      nr  976  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B95 -> B96 falseDestination: B95 -> B98 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B97" 
    xhandlers
    flags 
    probability 4550463275345577801
    begin_IR
      LIR
      nr  978  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  980  <|@ instruction JUMP ~[] destination: B96 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B97" 
    xhandlers
    flags 
    probability 4550193860395418340
    begin_IR
      LIR
      nr  940  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  942  <|@ instruction JUMP ~[] destination: B94 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B120" 
    xhandlers
    flags 
    probability 4543399067768740112
    begin_IR
      LIR
      nr 1136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1138  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1140  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr 1142  <|@ instruction r13|QWORD = MOVE vstack:15|QWORD moveKind: QWORD <|@ <|@
      nr 1144  <|@ instruction JUMP ~[] destination: B117 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B119" "B109" "B117" "B118" "B115" "B113" "B111" 
    successors 
    xhandlers
    flags 
    probability 4589652288651159933
    begin_IR
      LIR
      nr 1168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1170  <|@ instruction rbx|QWORD = MOV [r13|QWORD + 688] size: QWORD <|@ <|@
      nr 1172  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr 1174  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr 1176  <|@ instruction rsi|QWORD[.] = MOVE vstack:6|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1178  <|@ instruction rdx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1180  <|@ instruction vstack:20|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1182  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:663) [bci: 253]
locals: - - - - - - - - - - - - vstack:20|QWORD[.] 
>@ <|@ instruction - = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<HashMap.afterNodeAccess(HashMap$Node)> state [bci:253] <|@ <|@
      nr 1184  <|@ instruction rax|QWORD[.] = MOVE vstack:20|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1186  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4542678729597855531
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  538  <|@ instruction vstack:21|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  540  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: vstack:6|QWORD[.] vstack:13|DWORD rcx|QWORD[.] vstack:2|QWORD[.] vstack:8|DWORD vstack:5|DWORD vstack:10|QWORD[.] - vstack:0|DWORD - - - - 
>@ <|@ instruction rsi|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD state [bci:29] <|@ <|@
      nr  542  <|@ instruction rdx|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr  544  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr  546  <|@ instruction rbx|QWORD = MOV [rsi|QWORD + 464] size: QWORD <|@ <|@
      nr  548  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  550  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  552  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  554  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:641) [bci: 91]
locals: vstack:6|QWORD[.] vstack:13|DWORD vstack:16|QWORD[.] vstack:2|QWORD[.] vstack:8|DWORD vstack:5|DWORD vstack:10|QWORD[.] vstack:21|QWORD[.] - - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:91] <|@ <|@
      nr  556  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B86" 
    xhandlers
    flags 
    probability 4542678729597855531
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  572  <|@ instruction r8|QWORD[.] = MOVE vstack:21|QWORD[.] moveKind: QWORD <|@ <|@
      nr  574  <|@ instruction JUMP ~[] destination: B53 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B63" 
    xhandlers
    flags 
    probability 4529894057192690854
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  640  <|@ instruction r11|QWORD[.] = MOVE vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr  642  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: vstack:6|QWORD[.] vstack:13|DWORD rcx|QWORD[.] vstack:2|QWORD[.] vstack:8|DWORD vstack:5|DWORD vstack:10|QWORD[.] r11|QWORD[.] - - - - vstack:14|DWORD 
>@ <|@ instruction rsi|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD state [bci:134] <|@ <|@
      nr  644  <|@ instruction rdx|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr  646  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr  648  <|@ instruction rbx|QWORD = MOV [rsi|QWORD + 464] size: QWORD <|@ <|@
      nr  650  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  652  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  654  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  656  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:654) [bci: 203]
locals: vstack:6|QWORD[.] vstack:13|DWORD vstack:16|QWORD[.] vstack:2|QWORD[.] vstack:8|DWORD vstack:5|DWORD vstack:10|QWORD[.] - - - vstack:7|QWORD[.] - vstack:14|DWORD 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:203] <|@ <|@
      nr  658  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B86" 
    xhandlers
    flags 
    probability 4529894057192690854
    begin_IR
      LIR
      nr  682  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  684  <|@ instruction r8|QWORD[.] = MOVE vstack:7|QWORD[.] moveKind: QWORD <|@ <|@
      nr  686  <|@ instruction JUMP ~[] destination: B63 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4523100981620127249
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction vstack:18|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  194  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>} <|@ <|@
      nr  196  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: vstack:6|QWORD[.] vstack:13|DWORD vstack:16|QWORD[.] vstack:2|QWORD[.] vstack:8|DWORD vstack:5|DWORD vstack:10|QWORD[.] - vstack:0|DWORD - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7fba62ccef80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:29] <|@ <|@
      nr  198  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: vstack:6|QWORD[.] vstack:13|DWORD vstack:16|QWORD[.] vstack:2|QWORD[.] vstack:8|DWORD vstack:5|DWORD vstack:10|QWORD[.] - vstack:0|DWORD - - - - 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:29] <|@ <|@
      nr  200  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  202  <|@ instruction JUMP ~[] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" 
    xhandlers
    flags 
    probability 4518403274531071726
    begin_IR
      LIR
      nr  870  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  872  <|@ instruction rsi|QWORD[.] = MOVE vstack:6|QWORD[.] moveKind: QWORD <|@ <|@
      nr  874  <|@ instruction rdx|QWORD[.] = MOVE vstack:10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  876  <|@ instruction rcx|DWORD = MOVE vstack:13|DWORD moveKind: DWORD <|@ <|@
      nr  878  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:650) [bci: 169]
locals: vstack:6|QWORD[.] - - vstack:2|QWORD[.] vstack:8|DWORD vstack:5|DWORD - - - - vstack:7|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<HashMap.treeifyBin(HashMap$Node[], int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:169] <|@ <|@
      nr  880  <|@ instruction r8|QWORD[.] = MOVE vstack:7|QWORD[.] moveKind: QWORD <|@ <|@
      nr  882  <|@ instruction JUMP ~[] destination: B85 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B86" 
    xhandlers
    flags 
    probability 4510226010095555986
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  582  <|@ instruction vstack:21|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  584  <|@ instruction vstack:13|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  586  <|@ instruction rsi|QWORD[.] = MOVE vstack:21|QWORD[.] moveKind: QWORD <|@ <|@
      nr  588  <|@ instruction rdx|QWORD[.] = MOVE vstack:6|QWORD[.] moveKind: QWORD <|@ <|@
      nr  590  <|@ instruction rcx|QWORD[.] = MOVE vstack:10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  592  <|@ instruction r8|DWORD = MOVE vstack:13|DWORD moveKind: DWORD <|@ <|@
      nr  594  <|@ instruction r9|QWORD[.] = MOVE vstack:16|QWORD[.] moveKind: QWORD <|@ <|@
      nr  596  <|@ instruction rdi|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  598  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:644) [bci: 123]
locals: vstack:6|QWORD[.] - - vstack:2|QWORD[.] vstack:8|DWORD vstack:5|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|QWORD[.], rdi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap$TreeNode.putTreeVal(HashMap, HashMap$Node[], int, Object, Object)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:123] <|@ <|@
      nr  600  <|@ instruction r8|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  602  <|@ instruction JUMP ~[] destination: B55 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B120" 
    xhandlers
    flags 
    probability 4508568125070994604
    begin_IR
      LIR
      nr 1160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1162  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:659) [bci: 222]
locals: vstack:6|QWORD[.] - - vstack:2|QWORD[.] vstack:8|DWORD vstack:5|DWORD - - - - r8|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r10|DWORD[_] * 8] state [bci:222] <|@ <|@
      nr 1164  <|@ instruction r13|QWORD = MOVE vstack:15|QWORD moveKind: QWORD <|@ <|@
      nr 1166  <|@ instruction JUMP ~[] destination: B119 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction r11|QWORD = MOVE input: long[5780|0x1694] <|@ <|@
      nr  506  <|@ instruction r10|DWORD = MOVE input: int[-51507|0xffffffffffff36cd] <|@ <|@
      nr  508  <|@ instruction vstack:13|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  510  <|@ instruction r8|DWORD = MOVE vstack:0|DWORD moveKind: DWORD <|@ <|@
      nr  512  <|@ instruction JUMP ~[] destination: B47 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  662  <|@ instruction r8|QWORD[.] = MOVE vstack:7|QWORD[.] moveKind: QWORD <|@ <|@
      nr  664  <|@ instruction rbp|DWORD = MOVE vstack:14|DWORD moveKind: DWORD <|@ <|@
      nr  666  <|@ instruction MOV [r15|QWORD + 1156] y: -157971 size: DWORD <|@ <|@
      nr  668  <|@ instruction MOV [r15|QWORD + 1168] y: 1300 size: QWORD <|@ <|@
      nr  670  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:654) [bci: 206]
stack: int[0|0x0] 
locals: vstack:6|QWORD[.] vstack:13|DWORD vstack:16|QWORD[.] vstack:2|QWORD[.] vstack:8|DWORD vstack:5|DWORD vstack:10|QWORD[.] - - - r8|QWORD[.] - rbp|DWORD 
>@ <|@ instruction DEOPT info [bci:206] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1190  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1192  <|@ instruction vstack:13|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr 1194  <|@ instruction r8|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1196  <|@ instruction r10|DWORD = MOVE input: int[-75547|0xfffffffffffed8e5] <|@ <|@
      nr 1198  <|@ instruction JUMP ~[] destination: B121 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B121" "B47" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1202  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1204  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1206  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: vstack:6|QWORD[.] vstack:13|DWORD vstack:16|QWORD[.] vstack:2|QWORD[.] vstack:8|DWORD vstack:5|DWORD vstack:10|QWORD[.] - r8|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:29] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction rbp|DWORD = MOVE vstack:1|DWORD moveKind: DWORD <|@ <|@
      nr  492  <|@ instruction JUMP ~[] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  998  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1000  <|@ instruction MOV [r15|QWORD + 1156] y: -61235 size: DWORD <|@ <|@
      nr 1002  <|@ instruction MOV [r15|QWORD + 1168] y: 8980 size: QWORD <|@ <|@
      nr 1004  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:670) [bci: 292]
locals: vstack:6|QWORD[.] - - - - vstack:5|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:292] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction rbp|DWORD = MOVE vstack:1|DWORD moveKind: DWORD <|@ <|@
      nr  346  <|@ instruction JUMP ~[] destination: B26 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B26" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  496  <|@ instruction MOV [r15|QWORD + 1156] y: -82987 size: DWORD <|@ <|@
      nr  498  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  500  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stack: vstack:10|QWORD[.] rbp|DWORD rax|QWORD[.] 
locals: vstack:6|QWORD[.] - - - - vstack:5|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:59] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  558  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  560  <|@ instruction r11|QWORD[.] = MOVE vstack:21|QWORD[.] moveKind: QWORD <|@ <|@
      nr  562  <|@ instruction rbx|QWORD[.] = MOVE vstack:10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  564  <|@ instruction MOV [r15|QWORD + 1156] y: -153363 size: DWORD <|@ <|@
      nr  566  <|@ instruction MOV [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  568  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:641) [bci: 94]
stack: int[0|0x0] 
locals: vstack:6|QWORD[.] vstack:13|DWORD vstack:16|QWORD[.] vstack:2|QWORD[.] vstack:8|DWORD vstack:5|DWORD rbx|QWORD[.] r11|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:94] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  988  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  990  <|@ instruction rdx|QWORD[.] = MOVE vstack:19|QWORD[.] moveKind: QWORD <|@ <|@
      nr  992  <|@ instruction MOV [r15|QWORD + 1156] y: -161299 size: DWORD <|@ <|@
      nr  994  <|@ instruction MOV [r15|QWORD + 1168] y: 10260 size: QWORD <|@ <|@
      nr  996  <|@ st <@st|@live-base-pointers: []
java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 18]
stack: rax|DWORD 
locals: vstack:6|QWORD[.] - rdx|QWORD[.] - 
java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
locals: - - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:18, 295] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction MOV [r15|QWORD + 1156] y: -129299 size: DWORD <|@ <|@
      nr   58  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:634) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] r8|QWORD[.] r9|DWORD rdi|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #21         // table:java.util.HashMap$Node[]
     4: dup           
     5: astore        6
     7: ifnull        19
    10: aload         6
    12: arraylength   
    13: dup           
    14: istore        8
    16: ifne          29
    19: aload_0       
    20: invokevirtual #23         // resize:()java.util.HashMap$Node[]
    23: dup           
    24: astore        6
    26: arraylength   
    27: istore        8
    29: aload         6
    31: iload         8
    33: iconst_1      
    34: isub          
    35: iload_1       
    36: iand          
    37: dup           
    38: istore        9
    40: aaload        
    41: dup           
    42: astore        7
    44: ifnonnull     63
    47: aload         6
    49: iload         9
    51: aload_0       
    52: iload_1       
    53: aload_2       
    54: aload_3       
    55: aconst_null   
    56: invokevirtual #40         // newNode:(int, java.lang.Object, java.lang.Object, java.util.HashMap$Node)java.util.HashMap$Node
    59: aastore       
    60: goto          259
    63: aload         7
    65: getfield      #35         // java.util.HashMap$Node.hash:int
    68: iload_1       
    69: if_icmpne     104
    72: aload         7
    74: getfield      #36         // java.util.HashMap$Node.key:java.lang.Object
    77: dup           
    78: astore        11
    80: aload_2       
    81: if_acmpeq     97
    84: aload_2       
    85: ifnull        104
    88: aload_2       
    89: aload         11
    91: invokevirtual #37         // java.lang.Object.equals:(java.lang.Object)boolean
    94: ifeq          104
    97: aload         7
    99: astore        10
   101: goto          222
   104: aload         7
   106: instanceof    #180        // java.util.HashMap$TreeNode
   109: ifeq          131
   112: aload         7
   114: checkcast     #180        // java.util.HashMap$TreeNode
   117: aload_0       
   118: aload         6
   120: iload_1       
   121: aload_2       
   122: aload_3       
   123: invokevirtual #41         // java.util.HashMap$TreeNode.putTreeVal:(java.util.HashMap, java.util.HashMap$Node[], int, java.lang.Object, java.lang.Object)java.util.HashMap$TreeNode
   126: astore        10
   128: goto          222
   131: iconst_0      
   132: istore        12
   134: aload         7
   136: getfield      #38         // java.util.HashMap$Node.next:java.util.HashMap$Node
   139: dup           
   140: astore        10
   142: ifnonnull     175
   145: aload         7
   147: aload_0       
   148: iload_1       
   149: aload_2       
   150: aload_3       
   151: aconst_null   
   152: invokevirtual #40         // newNode:(int, java.lang.Object, java.lang.Object, java.util.HashMap$Node)java.util.HashMap$Node
   155: putfield      #38         // java.util.HashMap$Node.next:java.util.HashMap$Node
   158: iload         12
   160: bipush        7
   162: if_icmplt     222
   165: aload_0       
   166: aload         6
   168: iload_1       
   169: invokevirtual #42         // treeifyBin:(java.util.HashMap$Node[], int)void
   172: goto          222
   175: aload         10
   177: getfield      #35         // java.util.HashMap$Node.hash:int
   180: iload_1       
   181: if_icmpne     212
   184: aload         10
   186: getfield      #36         // java.util.HashMap$Node.key:java.lang.Object
   189: dup           
   190: astore        11
   192: aload_2       
   193: if_acmpeq     222
   196: aload_2       
   197: ifnull        212
   200: aload_2       
   201: aload         11
   203: invokevirtual #37         // java.lang.Object.equals:(java.lang.Object)boolean
   206: ifeq          212
   209: goto          222
   212: aload         10
   214: astore        7
   216: iinc          
   219: goto          134
   222: aload         10
   224: ifnull        259
   227: aload         10
   229: getfield      #34         // java.util.HashMap$Node.value:java.lang.Object
   232: astore        12
   234: iload         4
   236: ifeq          244
   239: aload         12
   241: ifnonnull     250
   244: aload         10
   246: aload_3       
   247: putfield      #34         // java.util.HashMap$Node.value:java.lang.Object
   250: aload_0       
   251: aload         10
   253: invokevirtual #43         // afterNodeAccess:(java.util.HashMap$Node)void
   256: aload         12
   258: areturn       
   259: aload_0       
   260: dup           
   261: getfield      #44         // modCount:int
   264: iconst_1      
   265: iadd          
   266: putfield      #44         // modCount:int
   269: aload_0       
   270: dup           
   271: getfield      #32         // size:int
   274: iconst_1      
   275: iadd          
   276: dup_x1        
   277: putfield      #32         // size:int
   280: aload_0       
   281: getfield      #17         // threshold:int
   284: if_icmple     292
   287: aload_0       
   288: invokevirtual #23         // resize:()java.util.HashMap$Node[]
   291: pop           
   292: aload_0       
   293: iload         5
   295: invokevirtual #45         // afterNodeInsertion:(boolean)void
   298: aconst_null   
   299: areturn       
   <|@
end_bytecodes
begin_intervals
  name "Before stack slot allocation"
  vstack:0|d DWORD "[vstack:0|d]" vstack:0|d -1 [86, 540[ "NOT_SUPPORTED"
  vstack:1|d DWORD "[vstack:1|d]" vstack:1|d -1 [110, 490[ "NOT_SUPPORTED"
  vstack:2|q QWORD "[vstack:2|q]" vstack:2|q -1 [10, 1206[ "NOT_SUPPORTED"
  vstack:3|d DWORD "[vstack:3|d]" vstack:3|d -1 [104, 1070[ "NOT_SUPPORTED"
  vstack:4|q QWORD "[vstack:4|q]" vstack:4|q -1 [628, 742[ "NOT_SUPPORTED"
  vstack:5|d DWORD "[vstack:5|d]" vstack:5|d -1 [14, 1206[ "NOT_SUPPORTED"
  vstack:6|q QWORD "[vstack:6|q]" vstack:6|q -1 [6, 1206[ "NOT_SUPPORTED"
  vstack:7|q QWORD "[vstack:7|q]" vstack:7|q -1 [624, 880[ "NOT_SUPPORTED"
  vstack:8|d DWORD "[vstack:8|d]" vstack:8|d -1 [12, 1206[ "NOT_SUPPORTED"
  vstack:10|q QWORD "[vstack:10|q]" vstack:10|q -1 [72, 1206[ "NOT_SUPPORTED"
  vstack:12|q QWORD "[vstack:12|q]" vstack:12|q -1 [100, 1102[ "NOT_SUPPORTED"
  vstack:13|d DWORD "[vstack:13|d]" vstack:13|d -1 [22, 1206[ "NOT_SUPPORTED"
  vstack:14|d DWORD "[vstack:14|d]" vstack:14|d -1 [626, 862[ "NOT_SUPPORTED"
  vstack:15|q QWORD "[vstack:15|q]" vstack:15|q -1 [96, 1164[ "NOT_SUPPORTED"
  vstack:16|q QWORD "[vstack:16|q]" vstack:16|q -1 [8, 1206[ "NOT_SUPPORTED"
  vstack:17|q QWORD "[vstack:17|q]" vstack:17|q -1 [242, 252[ "NOT_SUPPORTED"
  vstack:18|d DWORD "[vstack:18|d]" vstack:18|d -1 [192, 258[ "NOT_SUPPORTED"
  vstack:19|q QWORD "[vstack:19|q]" vstack:19|q -1 [972, 990[ "NOT_SUPPORTED"
  vstack:20|q QWORD "[vstack:20|q]" vstack:20|q -1 [1180, 1184[ "NOT_SUPPORTED"
  vstack:21|q QWORD "[vstack:21|q]" vstack:21|q -1 [538, 586[ "NOT_SUPPORTED"
end_intervals
begin_intervals
  name "After stack slot allocation"
  vstack:0|d DWORD "[stack:40|d]" vstack:0|d -1 [86, 540[ "NOT_SUPPORTED"
  vstack:1|d DWORD "[stack:60|d]" vstack:1|d -1 [110, 490[ "NOT_SUPPORTED"
  vstack:2|q QWORD "[stack:88|q]" vstack:2|q -1 [10, 1206[ "NOT_SUPPORTED"
  vstack:3|d DWORD "[stack:100|d]" vstack:3|d -1 [104, 1070[ "NOT_SUPPORTED"
  vstack:4|q QWORD "[stack:120|q]" vstack:4|q -1 [628, 742[ "NOT_SUPPORTED"
  vstack:5|d DWORD "[stack:32|d]" vstack:5|d -1 [14, 1206[ "NOT_SUPPORTED"
  vstack:6|q QWORD "[stack:72|q]" vstack:6|q -1 [6, 1206[ "NOT_SUPPORTED"
  vstack:7|q QWORD "[stack:112|q]" vstack:7|q -1 [624, 880[ "NOT_SUPPORTED"
  vstack:8|d DWORD "[stack:28|d]" vstack:8|d -1 [12, 1206[ "NOT_SUPPORTED"
  vstack:10|q QWORD "[stack:96|q]" vstack:10|q -1 [72, 1206[ "NOT_SUPPORTED"
  vstack:12|q QWORD "[stack:56|q]" vstack:12|q -1 [100, 1102[ "NOT_SUPPORTED"
  vstack:13|d DWORD "[stack:36|d]" vstack:13|d -1 [22, 1206[ "NOT_SUPPORTED"
  vstack:14|d DWORD "[stack:40|d]" vstack:14|d -1 [626, 862[ "NOT_SUPPORTED"
  vstack:15|q QWORD "[stack:48|q]" vstack:15|q -1 [96, 1164[ "NOT_SUPPORTED"
  vstack:16|q QWORD "[stack:80|q]" vstack:16|q -1 [8, 1206[ "NOT_SUPPORTED"
  vstack:17|q QWORD "[stack:112|q]" vstack:17|q -1 [242, 252[ "NOT_SUPPORTED"
  vstack:18|d DWORD "[stack:64|d]" vstack:18|d -1 [192, 258[ "NOT_SUPPORTED"
  vstack:19|q QWORD "[stack:112|q]" vstack:19|q -1 [972, 990[ "NOT_SUPPORTED"
  vstack:20|q QWORD "[stack:112|q]" vstack:20|q -1 [1180, 1184[ "NOT_SUPPORTED"
  vstack:21|q QWORD "[stack:112|q]" vstack:21|q -1 [538, 586[ "NOT_SUPPORTED"
end_intervals
begin_cfg
  name "After LSStackSlotAllocator"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|DWORD, rdi|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@21849dd slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:72|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction stack:80|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction stack:88|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   12  <|@ instruction stack:28|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   14  <|@ instruction stack:32|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr   16  <|@ instruction rbx|DWORD[_] = MOV [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   18  <|@ instruction TESTBRANCH (x: rbx|DWORD[_], y: rbx|DWORD[_]) trueDestinationProbability: 0.0015880438063265454 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607168114973028567
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction rax|DWORD = MOV [rbx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   52  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607168114973028567
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr   66  <|@ instruction r10|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   68  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B1" 
    successors "B6" "B121" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   72  <|@ instruction stack:96|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   74  <|@ instruction rax|DWORD = MOV [rbx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   76  <|@ instruction r11|DWORD = MOV [rbx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   78  <|@ instruction rbp|DWORD = DEC r10|DWORD size: DWORD <|@ <|@
      nr   80  <|@ instruction rbp|DWORD = AND (x: rdx|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr   82  <|@ instruction CMPBRANCH (x: rax|DWORD, y: rbp|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B121 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B48" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction stack:40|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   88  <|@ instruction rax|DWORD[_] = MOV [rbx|QWORD[.] + rbp|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   90  <|@ instruction r13|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   92  <|@ instruction r14|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr   94  <|@ instruction r13|QWORD = UNCOMPRESSPOINTER (input: r13|DWORD, ~baseRegister: r14|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr   96  <|@ instruction stack:48|QWORD = MOVE r13|QWORD moveKind: QWORD <|@ <|@
      nr   98  <|@ instruction r14|QWORD = MOVE input: long[140438306553856|0x7fba57600000] <|@ <|@
      nr  100  <|@ instruction stack:56|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr  102  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  104  <|@ instruction stack:100|DWORD[_] = MOVE r10|DWORD[_] moveKind: DWORD <|@ <|@
      nr  106  <|@ instruction TESTBRANCH (x: rax|DWORD[_], y: rax|DWORD[_]) trueDestinationProbability: 0.8229115724385652 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B12" "B47" 
    xhandlers
    flags 
    probability 4605587348047262798
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction stack:60|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  112  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~r13|QWORD - keyConstants: [meta{HotSpotType<Ljava/util/HashMap;, resolved>}, meta{HotSpotType<Ljava/util/LinkedHashMap;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/replacements/SnippetTemplate$LRUCache;, resolved>}] keyTargets: [B7 -> B8, B7 -> B12, B7 -> B12] defaultTarget: B7 -> B47 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4605585062831744793
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction rax|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  118  <|@ instruction rbp|QWORD = LEA [rax|QWORD + 32] size: QWORD <|@ <|@
      nr  120  <|@ instruction CMPBRANCH (x: rbp|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4605510964398880109
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction MOV (x: [r15|QWORD + 440], y: rbp|QWORD) size: QWORD <|@ <|@
      nr  152  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 288] instr: 0 <|@ <|@
      nr  154  <|@ instruction MOV [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  156  <|@ instruction MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>;compressed} <|@ <|@
      nr  158  <|@ instruction MOV [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  160  <|@ instruction MOV [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  162  <|@ instruction MOV [rax|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  164  <|@ instruction rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  166  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 4605585062831744793
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  170  <|@ instruction MOV (x: [rax|QWORD[.] + 20], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  172  <|@ instruction rcx|DWORD[_] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  174  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr  176  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  178  <|@ instruction JUMP ~[] destination: B11 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B11" "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4605587348047262798
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  270  <|@ instruction rdx|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr  272  <|@ instruction r11|QWORD = UNCOMPRESSPOINTER (input: r11|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr  274  <|@ instruction rdx|QWORD = MOV [r11|QWORD + 208] size: QWORD <|@ <|@
      nr  276  <|@ instruction rcx|DWORD = MOV [rdx|QWORD + 20] size: DWORD <|@ <|@
      nr  278  <|@ instruction r8|DWORD = MOV [rax|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  280  <|@ instruction r9|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr  282  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: r9|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr  284  <|@ instruction r9|QWORD = MOVSXD rcx|DWORD size: QWORD <|@ <|@
      nr  286  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r8|QWORD + r9|QWORD * 1]) trueDestinationProbability: 0.5 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B45" 
    xhandlers
    flags 
    probability 4601083748419892302
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ instruction CMPCONSTBRANCH rcx|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B45 y: 32 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4601083748419892302
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  298  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: r8|QWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4596580148792521806
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction rcx|QWORD = MOV [r8|QWORD + 40] size: QWORD <|@ <|@
      nr  308  <|@ instruction r9|DWORD = MOV [rcx|QWORD] size: DWORD <|@ <|@
      nr  310  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  312  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B24" 
    successors "B23" "B26" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4602807799859017905
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  316  <|@ instruction CMPBRANCH (x: r9|DWORD, y: r10|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602807799859017905
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  320  <|@ instruction r11|DWORD = SHL r10|DWORD y: 3 size: DWORD <|@ <|@
      nr  322  <|@ instruction r11|DWORD = LEA [r11|DWORD + 8] size: DWORD <|@ <|@
      nr  324  <|@ instruction r11|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr  326  <|@ instruction r11|QWORD = MOV [rcx|QWORD + r11|QWORD * 1] size: QWORD <|@ <|@
      nr  328  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: r11|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B23 -> B25 falseDestination: B23 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B22" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4599230716294395707
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  332  <|@ instruction r10|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr  334  <|@ instruction JUMP ~[] destination: B24 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B27" 
    xhandlers
    flags 
    probability 4601083748419892302
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ instruction JUMP ~[] destination: B17 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B27" 
    xhandlers
    flags 
    probability 4596580148792521807
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  338  <|@ instruction MOV (x: [r8|QWORD + 32], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  340  <|@ instruction JUMP ~[] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B27" 
    xhandlers
    flags 
    probability 4596580148792521806
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  302  <|@ instruction JUMP ~[] destination: B20 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B17" "B25" "B20" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4605587348047262798
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" 
    xhandlers
    flags 
    probability 4604846135197064160
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction rbp|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  356  <|@ instruction JUMP ~[] destination: B28 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B49" "B54" 
    xhandlers
    flags 
    probability 4595548303301553864
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  518  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [rax|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.01987559010066231 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4595421491411700642
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction CMPCONSTBRANCH [rax|DWORD[_] * 8 + 8] trueDestinationProbability: 2.021089053783065E-6 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B56 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4595421478772878611
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  606  <|@ instruction rbp|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  608  <|@ instruction JUMP ~[] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B62" 
    successors "B65" "B58" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4595777537596400292
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  612  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] stack:88|QWORD[.] r9|DWORD rdi|DWORD rbx|QWORD[.] r11|QWORD[.] - - - - rbp|DWORD 
>@ <|@ instruction rax|DWORD[_] = MOV [r11|QWORD[.] + 24] size: DWORD state [bci:134] <|@ <|@
      nr  614  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  616  <|@ instruction TESTBRANCH (x: rax|DWORD[_], y: rax|DWORD[_]) trueDestinationProbability: 0.5880075530332061 condition: = trueDestination: B57 -> B65 falseDestination: B57 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4590110563079390205
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  620  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [rax|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.8692436604445373 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B62 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B57" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4576850562957400324
    begin_IR
      LIR
      nr  672  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  674  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] stack:88|QWORD[.] r9|DWORD rdi|DWORD rbx|QWORD[.] r11|QWORD[.] - - - - rbp|DWORD 
>@ <|@ instruction SAFEPOINT rax|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 thread: r15 state [bci:134] <|@ <|@
      nr  676  <|@ instruction rbp|DWORD = INC rbp|DWORD size: DWORD <|@ <|@
      nr  678  <|@ instruction r11|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  680  <|@ instruction JUMP ~[] destination: B62 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4592437312858669387
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  696  <|@ instruction stack:112|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  698  <|@ instruction stack:40|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  700  <|@ instruction stack:120|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  702  <|@ instruction rax|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  704  <|@ instruction r10|QWORD = MOV [r13|QWORD + 680] size: QWORD <|@ <|@
      nr  706  <|@ instruction r11|QWORD = MOV [r10|QWORD + 64] size: QWORD <|@ <|@
      nr  708  <|@ instruction rdi|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  710  <|@ instruction rsi|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  712  <|@ instruction rdi|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  714  <|@ instruction rdx|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  716  <|@ instruction r8|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  718  <|@ instruction r9|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  720  <|@ instruction rbx|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  722  <|@ instruction rax|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  724  <|@ instruction stack:36|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  726  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:648) [bci: 152]
stack: stack:120|QWORD[.] 
locals: stack:72|QWORD[.] stack:36|DWORD - stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD stack:96|QWORD[.] - - - stack:112|QWORD[.] - stack:40|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.]]) [] callTarget: HotSpotMethod<HashMap.newNode(int, Object, Object, HashMap$Node)> state [bci:152] <|@ <|@
      nr  728  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B67 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B72" 
    xhandlers
    flags 
    probability 4591660023639118941
    begin_IR
      LIR
      nr  730  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  732  <|@ instruction r11|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr  734  <|@ instruction r14|QWORD = MOVE stack:56|QWORD moveKind: QWORD <|@ <|@
      nr  736  <|@ instruction rbx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  738  <|@ instruction JUMP ~[] destination: B66 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4590594123464754032
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction rbp|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  362  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + rbp|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  364  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  366  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4590001153184595122
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  374  <|@ instruction r10|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  376  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  378  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4589467479932452103
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction r11|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  390  <|@ instruction MOV (x: [r11|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  392  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  394  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  396  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B64" "B60" 
    xhandlers
    flags 
    probability 4589398445432346844
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction stack:112|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  626  <|@ instruction stack:40|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  628  <|@ instruction stack:120|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  630  <|@ instruction stack:36|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  632  <|@ instruction rsi|DWORD[_] = MOV [rax|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  634  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  636  <|@ instruction CMPBRANCH (x: r10|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.9998932466496128 condition: = trueDestination: B59 -> B64 falseDestination: B59 -> B60 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B86" 
    xhandlers
    flags 
    probability 4589397940059341918
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  690  <|@ instruction r8|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr  692  <|@ instruction JUMP ~[] destination: B64 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4577371935537457006
    begin_IR
      LIR
      nr  740  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  742  <|@ instruction r11|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr  744  <|@ instruction rbx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  746  <|@ instruction rsi|QWORD[.+] = LEA [r11|QWORD[.] + 24] size: QWORD <|@ <|@
      nr  748  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  750  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B67 -> B68 falseDestination: B67 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" "B71" 
    xhandlers
    flags 
    probability 4576750104161816650
    begin_IR
      LIR
      nr  758  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  760  <|@ instruction r10|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  762  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  764  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    probability 4576190455923740329
    begin_IR
      LIR
      nr  774  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  776  <|@ instruction r8|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  778  <|@ instruction MOV (x: [r8|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  780  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  782  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  784  <|@ instruction r14|QWORD = MOVE stack:56|QWORD moveKind: QWORD <|@ <|@
      nr  786  <|@ instruction JUMP ~[] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    probability 4575897384022324722
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction JUMP ~[] destination: B30 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4575895921484393205
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction rbp|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  126  <|@ instruction stack:36|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  128  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>} <|@ <|@
      nr  130  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: stack:72|QWORD[.] stack:36|DWORD rcx|QWORD[.] stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD rbx|QWORD[.] - stack:40|DWORD - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7fba62ccef80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:29] <|@ <|@
      nr  132  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: stack:72|QWORD[.] stack:36|DWORD rcx|QWORD[.] stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD rbx|QWORD[.] - stack:40|DWORD - - - - 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:29] <|@ <|@
      nr  134  <|@ instruction r10|DWORD[_] = MOVE stack:100|DWORD[_] moveKind: DWORD <|@ <|@
      nr  136  <|@ instruction r14|QWORD = MOVE stack:56|QWORD moveKind: QWORD <|@ <|@
      nr  138  <|@ instruction r13|QWORD = MOVE stack:48|QWORD moveKind: QWORD <|@ <|@
      nr  140  <|@ instruction rdi|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  142  <|@ instruction rdx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  144  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  146  <|@ instruction JUMP ~[] destination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4575188794187971253
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  382  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  384  <|@ instruction JUMP ~[] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" "B33" "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4605587348047262798
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  402  <|@ instruction MOV (x: [rbx|QWORD[.] + rbp|DWORD * 4 + 16], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  404  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + rbp|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  406  <|@ instruction rsi|QWORD[*] = XOR (x: rsi|QWORD[.+], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  408  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4604846135197064160
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  418  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4604179043631885386
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction r14|QWORD = MOVE stack:56|QWORD moveKind: QWORD <|@ <|@
      nr  430  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + rbp|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  432  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.+] y: 9 size: QWORD <|@ <|@
      nr  434  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B88" 
    xhandlers
    flags 
    probability 4603578661223224489
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  440  <|@ instruction JUMP ~[] destination: B39 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B88" 
    xhandlers
    flags 
    probability 4590594123464754032
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  414  <|@ instruction JUMP ~[] destination: B35 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B88" 
    xhandlers
    flags 
    probability 4590001153184595122
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  422  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  424  <|@ instruction JUMP ~[] destination: B37 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4589467479932452103
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  446  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B88" 
    xhandlers
    flags 
    probability 4588806327720511347
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  450  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  452  <|@ instruction JUMP ~[] destination: B41 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4574334916984542422
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  456  <|@ instruction MOVB [rsi|QWORD[*] + r14|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  458  <|@ instruction r10|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  460  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: r14|QWORD) size: QWORD <|@ <|@
      nr  462  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B88" 
    xhandlers
    flags 
    probability 4573566427501456474
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  476  <|@ instruction r11|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  478  <|@ instruction MOV (x: [r11|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  480  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  482  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  484  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  486  <|@ instruction JUMP ~[] destination: B44 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4570262383476918658
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  522  <|@ instruction stack:36|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  524  <|@ instruction rsi|DWORD[_] = MOV [rax|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  526  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  528  <|@ instruction CMPBRANCH (x: r10|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.9854570809572428 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B86" 
    xhandlers
    flags 
    probability 4570144353713859813
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  532  <|@ instruction r8|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  534  <|@ instruction JUMP ~[] destination: B50 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 4564966382317228292
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   22  <|@ instruction stack:36|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   24  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr   26  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:635) [bci: 20]
locals: stack:72|QWORD[.] stack:36|DWORD stack:80|QWORD[.] stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.resize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:20] <|@ <|@
      nr   28  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:635) [bci: 23]
stack: Object[null] 
locals: stack:72|QWORD[.] stack:36|DWORD stack:80|QWORD[.] stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD - - - - - - - 
>@ <|@ instruction rsi|DWORD = MOV [rax|QWORD[.] + 12] size: DWORD state [bci:23] <|@ <|@
      nr   30  <|@ instruction r10|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction rbx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction rdi|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr   36  <|@ instruction r9|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr   38  <|@ instruction r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction rcx|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction rdx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr   44  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction JUMP ~[] destination: B1 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B72" 
    xhandlers
    flags 
    probability 4562617473904064804
    begin_IR
      LIR
      nr  752  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  754  <|@ instruction r14|QWORD = MOVE stack:56|QWORD moveKind: QWORD <|@ <|@
      nr  756  <|@ instruction JUMP ~[] destination: B68 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    probability 4562093595080792590
    begin_IR
      LIR
      nr  766  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  768  <|@ instruction r14|QWORD = MOVE stack:56|QWORD moveKind: QWORD <|@ <|@
      nr  770  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  772  <|@ instruction JUMP ~[] destination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B66" "B68" "B71" "B70" 
    successors "B73" "B74" 
    xhandlers
    flags 
    probability 4592437312858669387
    begin_IR
      LIR
      nr  788  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  790  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  792  <|@ instruction MOV (x: [r11|QWORD[.] + 24], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  794  <|@ instruction rsi|QWORD[*] = XOR (x: r11|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  796  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    probability 4591660023639118941
    begin_IR
      LIR
      nr  802  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  804  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    probability 4590960463341523540
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  812  <|@ instruction r11|QWORD[*] = SHR r11|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  814  <|@ instruction CMPCONSTBRANCH [r11|QWORD[*] + r14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B83" 
    xhandlers
    flags 
    probability 4590330859073687679
    begin_IR
      LIR
      nr  816  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  818  <|@ instruction JUMP ~[] destination: B77 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B83" 
    xhandlers
    flags 
    probability 4577371935537457006
    begin_IR
      LIR
      nr  798  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  800  <|@ instruction JUMP ~[] destination: B73 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B83" 
    xhandlers
    flags 
    probability 4576750104161816649
    begin_IR
      LIR
      nr  806  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  808  <|@ instruction JUMP ~[] destination: B75 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    probability 4576190455923740328
    begin_IR
      LIR
      nr  820  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  822  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  824  <|@ instruction CMPCONSTBRANCH [r11|QWORD[*] + r14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B83" 
    xhandlers
    flags 
    probability 4575686772509471639
    begin_IR
      LIR
      nr  826  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  828  <|@ instruction JUMP ~[] destination: B79 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    probability 4561198157899870475
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  832  <|@ instruction MOVB [r11|QWORD[*] + r14|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  834  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  836  <|@ instruction r11|QWORD[*] = ADD (x: r11|QWORD[*], y: r14|QWORD) size: QWORD <|@ <|@
      nr  838  <|@ instruction TESTBRANCH (x: rsi|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    probability 4560392264437040573
    begin_IR
      LIR
      nr  848  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  850  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  852  <|@ instruction MOV (x: [rdx|QWORD + rsi|QWORD * 1 - 8], y: r11|QWORD[*]) size: QWORD <|@ <|@
      nr  854  <|@ instruction rsi|QWORD = LEA [rsi|QWORD - 8] size: QWORD <|@ <|@
      nr  856  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  858  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B88" 
    xhandlers
    flags 
    probability 4559287139136259037
    begin_IR
      LIR
      nr  464  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  466  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  468  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  470  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  472  <|@ instruction JUMP ~[] destination: B43 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4553315745025075769
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  182  <|@ instruction stack:36|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  184  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  186  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 40] size: QWORD <|@ <|@
      nr  188  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4553268943811267021
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  208  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 296] instr: 0 <|@ <|@
      nr  210  <|@ instruction MOV [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  212  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>;compressed} <|@ <|@
      nr  214  <|@ instruction MOV [rsi|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  216  <|@ instruction MOV [rsi|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  218  <|@ instruction MOV [rsi|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  220  <|@ instruction MOV [rsi|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  222  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  224  <|@ instruction stack:64|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  226  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4553315745025075769
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  230  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  234  <|@ instruction rdx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  236  <|@ instruction rcx|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  238  <|@ instruction r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  240  <|@ instruction r9|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  242  <|@ instruction stack:112|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  244  <|@ st <@st|@live-base-pointers: []
java.util.LinkedHashMap$Entry.<init>(LinkedHashMap.java:208) [bci: 6]
locals: - - - - - 
java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 9]
stack: stack:112|QWORD[.] 
locals: stack:72|QWORD[.] stack:36|DWORD stack:80|QWORD[.] stack:88|QWORD[.] Object[null] - 
java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stack: stack:96|QWORD[.] stack:60|DWORD 
locals: stack:72|QWORD[.] - - - - stack:32|DWORD - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.]] [] callTarget: HotSpotMethod<HashMap$Node.<init>(int, Object, Object, HashMap$Node)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:6, 9, 56] <|@ <|@
      nr  246  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  248  <|@ instruction rdx|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr  250  <|@ st <@st|@live-base-pointers: []
java.util.LinkedHashMap.newNode(LinkedHashMap.java:283) [bci: 17]
locals: - - - - - stack:112|QWORD[.] 
java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stack: stack:96|QWORD[.] stack:60|DWORD 
locals: stack:72|QWORD[.] - - - - stack:32|DWORD - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<LinkedHashMap.linkNodeAtEnd(LinkedHashMap$Entry)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:17, 56] <|@ <|@
      nr  252  <|@ instruction rax|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr  254  <|@ instruction r14|QWORD = MOVE stack:56|QWORD moveKind: QWORD <|@ <|@
      nr  256  <|@ instruction r13|QWORD = MOVE stack:48|QWORD moveKind: QWORD <|@ <|@
      nr  258  <|@ instruction r11|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr  260  <|@ instruction rbx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  262  <|@ instruction rdi|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  264  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    probability 4546075572092099182
    begin_IR
      LIR
      nr  840  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  842  <|@ instruction rsi|QWORD = MOVE r11|QWORD[*] moveKind: QWORD <|@ <|@
      nr  844  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  846  <|@ instruction JUMP ~[] destination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B73" "B75" "B77" "B79" "B82" "B81" 
    successors "B84" "B85" 
    xhandlers
    flags 
    probability 4592437312858669387
    begin_IR
      LIR
      nr  860  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  862  <|@ instruction CMPCONSTBRANCH stack:40|DWORD trueDestinationProbability: 0.9999886211240704 condition: < trueDestination: B83 -> B84 falseDestination: B83 -> B85 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" 
    xhandlers
    flags 
    probability 4592437224411893480
    begin_IR
      LIR
      nr  864  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  866  <|@ instruction r8|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr  868  <|@ instruction JUMP ~[] destination: B84 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B50" "B55" "B64" "B84" "B85" "B63" "B53" 
    successors "B87" "B100" 
    xhandlers
    flags 
    probability 4595548303301553864
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  886  <|@ instruction TESTBRANCH (x: r8|QWORD[.], y: r8|QWORD[.]) trueDestinationProbability: 0.6091185940042786 condition: = trueDestination: B86 -> B87 falseDestination: B86 -> B100 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B88" 
    xhandlers
    flags 
    probability 4592437118697206803
    begin_IR
      LIR
      nr  888  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  890  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  892  <|@ instruction JUMP ~[] destination: B87 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B35" "B87" "B43" "B44" "B41" "B39" "B37" 
    successors "B89" "B90" 
    xhandlers
    flags 
    probability 4606558935301518032
    begin_IR
      LIR
      nr  894  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  896  <|@ instruction INC [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  898  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  900  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, ~y: [rsi|QWORD[.] + 20]) size: DWORD <|@ <|@
      nr  902  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: rax|DWORD) size: DWORD <|@ <|@
      nr  904  <|@ instruction CMPBRANCH (x: rax|DWORD, y: [rsi|QWORD[.] + 28]) trueDestinationProbability: 7.853038846579175E-4 condition: > trueDestination: B88 -> B89 falseDestination: B88 -> B90 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B91" 
    xhandlers
    flags 
    probability 4606552351536966788
    begin_IR
      LIR
      nr  920  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  922  <|@ instruction r13|QWORD = MOVE stack:48|QWORD moveKind: QWORD <|@ <|@
      nr  924  <|@ instruction JUMP ~[] destination: B90 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" "B89" 
    successors "B92" "B93" "B99" 
    xhandlers
    flags 
    probability 4606558935301518032
    begin_IR
      LIR
      nr  926  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  928  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~r13|QWORD - keyConstants: [meta{HotSpotType<Ljava/util/HashMap;, resolved>}, meta{HotSpotType<Ljava/util/LinkedHashMap;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/replacements/SnippetTemplate$LRUCache;, resolved>}] keyTargets: [B91 -> B92, B91 -> B93, B91 -> B93] defaultTarget: B91 -> B99 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B97" 
    xhandlers
    flags 
    probability 4606555909645339483
    begin_IR
      LIR
      nr  930  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  932  <|@ instruction JUMP ~[] destination: B92 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B92" "B94" "B96" 
    successors 
    xhandlers
    flags 
    probability 4606558935301518031
    begin_IR
      LIR
      nr  982  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  984  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  986  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B101" "B119" 
    xhandlers
    flags 
    probability 4589652288651159933
    begin_IR
      LIR
      nr 1006  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1008  <|@ instruction r13|QWORD = MOVE stack:48|QWORD moveKind: QWORD <|@ <|@
      nr 1010  <|@ instruction r9|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1012  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1014  <|@ instruction r10|DWORD[_] = MOV [r8|QWORD[.] + 20] size: DWORD <|@ <|@
      nr 1016  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.9999962001170364 condition: = trueDestination: B100 -> B101 falseDestination: B100 -> B119 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B102" "B103" 
    xhandlers
    flags 
    probability 4589652269697845341
    begin_IR
      LIR
      nr 1018  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1020  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B103 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B108" 
    xhandlers
    flags 
    probability 4589138949298219176
    begin_IR
      LIR
      nr 1022  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1024  <|@ instruction r11|DWORD[_] = MOVE stack:100|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1026  <|@ instruction JUMP ~[] destination: B102 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" "B105" 
    xhandlers
    flags 
    probability 4574630580609171603
    begin_IR
      LIR
      nr 1028  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1030  <|@ instruction r11|QWORD[.+] = LEA [r8|QWORD[.] + 20] size: QWORD <|@ <|@
      nr 1032  <|@ instruction r11|DWORD[_] = MOV [r11|QWORD[.+]] size: DWORD <|@ <|@
      nr 1034  <|@ instruction TESTBRANCH (x: r11|DWORD[_], y: r11|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B103 -> B104 falseDestination: B103 -> B105 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B106" "B107" 
    xhandlers
    flags 
    probability 4573832524763622737
    begin_IR
      LIR
      nr 1042  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1044  <|@ instruction r9|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr 1046  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr 1048  <|@ instruction TESTBRANCH (x: r9|QWORD, y: r9|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B105 -> B106 falseDestination: B105 -> B107 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B108" 
    xhandlers
    flags 
    probability 4573114274502628758
    begin_IR
      LIR
      nr 1060  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1062  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr 1064  <|@ instruction MOV (x: [rcx|QWORD + r9|QWORD * 1 - 8], y: r11|QWORD[.]) size: QWORD <|@ <|@
      nr 1066  <|@ instruction r11|QWORD = LEA [r9|QWORD - 8] size: QWORD <|@ <|@
      nr 1068  <|@ instruction MOV (x: [r15|QWORD + 40], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1070  <|@ instruction r11|DWORD[_] = MOVE stack:100|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1072  <|@ instruction JUMP ~[] destination: B107 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B91" 
    xhandlers
    flags 
    probability 4559880998172045651
    begin_IR
      LIR
      nr  906  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  908  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  910  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  912  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:669) [bci: 288]
locals: stack:72|QWORD[.] - - - - stack:32|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.resize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:288] <|@ <|@
      nr  914  <|@ instruction r13|QWORD = MOVE stack:48|QWORD moveKind: QWORD <|@ <|@
      nr  916  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  918  <|@ instruction JUMP ~[] destination: B89 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B108" 
    xhandlers
    flags 
    probability 4559523670035962382
    begin_IR
      LIR
      nr 1036  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1038  <|@ instruction r11|DWORD[_] = MOVE stack:100|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1040  <|@ instruction JUMP ~[] destination: B104 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B108" 
    xhandlers
    flags 
    probability 4558885225359523289
    begin_IR
      LIR
      nr 1050  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1052  <|@ instruction rsi|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1054  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr 1056  <|@ instruction r11|DWORD[_] = MOVE stack:100|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1058  <|@ instruction JUMP ~[] destination: B106 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B102" "B104" "B107" "B106" 
    successors "B109" "B110" 
    xhandlers
    flags 
    probability 4589652269697845341
    begin_IR
      LIR
      nr 1074  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1076  <|@ instruction MOV (x: [r8|QWORD[.] + 20], y: r11|DWORD[_]) size: DWORD <|@ <|@
      nr 1078  <|@ instruction rsi|QWORD[*] = XOR (x: r8|QWORD[.], y: stack:88|QWORD[.]) size: QWORD <|@ <|@
      nr 1080  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B108 -> B109 falseDestination: B108 -> B110 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" "B112" 
    xhandlers
    flags 
    probability 4589138949298219176
    begin_IR
      LIR
      nr 1088  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1090  <|@ instruction r11|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1092  <|@ instruction TESTBRANCH (x: r11|QWORD[.], y: r11|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B110 -> B111 falseDestination: B110 -> B112 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B113" "B114" 
    xhandlers
    flags 
    probability 4588241136471976702
    begin_IR
      LIR
      nr 1100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1102  <|@ instruction r14|QWORD = MOVE stack:56|QWORD moveKind: QWORD <|@ <|@
      nr 1104  <|@ instruction rsi|QWORD[*] = SHR r8|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr 1106  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B112 -> B113 falseDestination: B112 -> B114 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B120" 
    xhandlers
    flags 
    probability 4587433104928358475
    begin_IR
      LIR
      nr 1108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1110  <|@ instruction r13|QWORD = MOVE stack:48|QWORD moveKind: QWORD <|@ <|@
      nr 1112  <|@ instruction JUMP ~[] destination: B113 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B120" 
    xhandlers
    flags 
    probability 4574630580609171603
    begin_IR
      LIR
      nr 1082  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1084  <|@ instruction r13|QWORD = MOVE stack:48|QWORD moveKind: QWORD <|@ <|@
      nr 1086  <|@ instruction JUMP ~[] destination: B109 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B120" 
    xhandlers
    flags 
    probability 4573832524763622738
    begin_IR
      LIR
      nr 1094  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1096  <|@ instruction r13|QWORD = MOVE stack:48|QWORD moveKind: QWORD <|@ <|@
      nr 1098  <|@ instruction JUMP ~[] destination: B111 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B115" "B116" 
    xhandlers
    flags 
    probability 4573114274502628759
    begin_IR
      LIR
      nr 1114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1116  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr 1118  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B114 -> B115 falseDestination: B114 -> B116 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B120" 
    xhandlers
    flags 
    probability 4572467849267734178
    begin_IR
      LIR
      nr 1120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1122  <|@ instruction r13|QWORD = MOVE stack:48|QWORD moveKind: QWORD <|@ <|@
      nr 1124  <|@ instruction JUMP ~[] destination: B115 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B117" "B118" 
    xhandlers
    flags 
    probability 4558310625150728107
    begin_IR
      LIR
      nr 1126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1128  <|@ instruction MOVB [rsi|QWORD[*] + r14|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr 1130  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr 1132  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: r14|QWORD) size: QWORD <|@ <|@
      nr 1134  <|@ instruction TESTBRANCH (x: rdx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B116 -> B117 falseDestination: B116 -> B118 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B120" 
    xhandlers
    flags 
    probability 4557793484962812442
    begin_IR
      LIR
      nr 1146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1148  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr 1150  <|@ instruction MOV (x: [rbx|QWORD + rdx|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr 1152  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr 1154  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1156  <|@ instruction r13|QWORD = MOVE stack:48|QWORD moveKind: QWORD <|@ <|@
      nr 1158  <|@ instruction JUMP ~[] destination: B118 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B94" "B95" 
    xhandlers
    flags 
    probability 4554832167497868566
    begin_IR
      LIR
      nr  934  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  936  <|@ instruction rdi|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  938  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.4891304347826087 condition: = trueDestination: B93 -> B94 falseDestination: B93 -> B95 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B96" "B98" 
    xhandlers
    flags 
    probability 4550463275345577801
    begin_IR
      LIR
      nr  944  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  946  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  948  <|@ instruction rdx|DWORD[_] = MOV [rsi|QWORD[.] + 52] size: DWORD <|@ <|@
      nr  950  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:670) [bci: 292]
locals: rsi|QWORD[.] - - - - rdi|DWORD - - - - - - - 
>@ <|@ instruction NULLCHECK [rdx|DWORD[_] * 8] state [bci:292] <|@ <|@
      nr  952  <|@ instruction rbx|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  954  <|@ instruction rax|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr  956  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rax|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr  958  <|@ instruction rbx|QWORD = MOV [rbx|QWORD + 872] size: QWORD <|@ <|@
      nr  960  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  962  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  964  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  966  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  968  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  970  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  972  <|@ instruction stack:112|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  974  <|@ st <@st|@live-base-pointers: []
java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 15]
locals: stack:72|QWORD[.] - stack:112|QWORD[.] - 
java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
locals: - - - - - - - - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<LinkedHashMap.removeEldestEntry(Map$Entry)> state [bci:15, 295] <|@ <|@
      nr  976  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B95 -> B96 falseDestination: B95 -> B98 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B97" 
    xhandlers
    flags 
    probability 4550463275345577801
    begin_IR
      LIR
      nr  978  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  980  <|@ instruction JUMP ~[] destination: B96 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B97" 
    xhandlers
    flags 
    probability 4550193860395418340
    begin_IR
      LIR
      nr  940  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  942  <|@ instruction JUMP ~[] destination: B94 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B120" 
    xhandlers
    flags 
    probability 4543399067768740112
    begin_IR
      LIR
      nr 1136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1138  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1140  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr 1142  <|@ instruction r13|QWORD = MOVE stack:48|QWORD moveKind: QWORD <|@ <|@
      nr 1144  <|@ instruction JUMP ~[] destination: B117 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B119" "B109" "B117" "B118" "B115" "B113" "B111" 
    successors 
    xhandlers
    flags 
    probability 4589652288651159933
    begin_IR
      LIR
      nr 1168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1170  <|@ instruction rbx|QWORD = MOV [r13|QWORD + 688] size: QWORD <|@ <|@
      nr 1172  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr 1174  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr 1176  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1178  <|@ instruction rdx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1180  <|@ instruction stack:112|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1182  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:663) [bci: 253]
locals: - - - - - - - - - - - - stack:112|QWORD[.] 
>@ <|@ instruction - = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<HashMap.afterNodeAccess(HashMap$Node)> state [bci:253] <|@ <|@
      nr 1184  <|@ instruction rax|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1186  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4542678729597855531
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  538  <|@ instruction stack:112|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  540  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: stack:72|QWORD[.] stack:36|DWORD rcx|QWORD[.] stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD stack:96|QWORD[.] - stack:40|DWORD - - - - 
>@ <|@ instruction rsi|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD state [bci:29] <|@ <|@
      nr  542  <|@ instruction rdx|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr  544  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr  546  <|@ instruction rbx|QWORD = MOV [rsi|QWORD + 464] size: QWORD <|@ <|@
      nr  548  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  550  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  552  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  554  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:641) [bci: 91]
locals: stack:72|QWORD[.] stack:36|DWORD stack:80|QWORD[.] stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD stack:96|QWORD[.] stack:112|QWORD[.] - - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:91] <|@ <|@
      nr  556  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B86" 
    xhandlers
    flags 
    probability 4542678729597855531
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  572  <|@ instruction r8|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr  574  <|@ instruction JUMP ~[] destination: B53 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B63" 
    xhandlers
    flags 
    probability 4529894057192690854
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  640  <|@ instruction r11|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr  642  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: stack:72|QWORD[.] stack:36|DWORD rcx|QWORD[.] stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD stack:96|QWORD[.] r11|QWORD[.] - - - - stack:40|DWORD 
>@ <|@ instruction rsi|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD state [bci:134] <|@ <|@
      nr  644  <|@ instruction rdx|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr  646  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr  648  <|@ instruction rbx|QWORD = MOV [rsi|QWORD + 464] size: QWORD <|@ <|@
      nr  650  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  652  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  654  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  656  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:654) [bci: 203]
locals: stack:72|QWORD[.] stack:36|DWORD stack:80|QWORD[.] stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD stack:96|QWORD[.] - - - stack:112|QWORD[.] - stack:40|DWORD 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:203] <|@ <|@
      nr  658  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B86" 
    xhandlers
    flags 
    probability 4529894057192690854
    begin_IR
      LIR
      nr  682  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  684  <|@ instruction r8|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr  686  <|@ instruction JUMP ~[] destination: B63 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4523100981620127249
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction stack:64|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  194  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>} <|@ <|@
      nr  196  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: stack:72|QWORD[.] stack:36|DWORD stack:80|QWORD[.] stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD stack:96|QWORD[.] - stack:40|DWORD - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7fba62ccef80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:29] <|@ <|@
      nr  198  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: stack:72|QWORD[.] stack:36|DWORD stack:80|QWORD[.] stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD stack:96|QWORD[.] - stack:40|DWORD - - - - 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:29] <|@ <|@
      nr  200  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  202  <|@ instruction JUMP ~[] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" 
    xhandlers
    flags 
    probability 4518403274531071726
    begin_IR
      LIR
      nr  870  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  872  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  874  <|@ instruction rdx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  876  <|@ instruction rcx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  878  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:650) [bci: 169]
locals: stack:72|QWORD[.] - - stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD - - - - stack:112|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<HashMap.treeifyBin(HashMap$Node[], int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:169] <|@ <|@
      nr  880  <|@ instruction r8|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr  882  <|@ instruction JUMP ~[] destination: B85 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B86" 
    xhandlers
    flags 
    probability 4510226010095555986
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  582  <|@ instruction stack:112|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  584  <|@ instruction stack:36|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  586  <|@ instruction rsi|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr  588  <|@ instruction rdx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  590  <|@ instruction rcx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  592  <|@ instruction r8|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  594  <|@ instruction r9|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  596  <|@ instruction rdi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  598  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:644) [bci: 123]
locals: stack:72|QWORD[.] - - stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|QWORD[.], rdi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap$TreeNode.putTreeVal(HashMap, HashMap$Node[], int, Object, Object)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:123] <|@ <|@
      nr  600  <|@ instruction r8|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  602  <|@ instruction JUMP ~[] destination: B55 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B120" 
    xhandlers
    flags 
    probability 4508568125070994604
    begin_IR
      LIR
      nr 1160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1162  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:659) [bci: 222]
locals: stack:72|QWORD[.] - - stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD - - - - r8|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r10|DWORD[_] * 8] state [bci:222] <|@ <|@
      nr 1164  <|@ instruction r13|QWORD = MOVE stack:48|QWORD moveKind: QWORD <|@ <|@
      nr 1166  <|@ instruction JUMP ~[] destination: B119 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction r11|QWORD = MOVE input: long[5780|0x1694] <|@ <|@
      nr  506  <|@ instruction r10|DWORD = MOVE input: int[-51507|0xffffffffffff36cd] <|@ <|@
      nr  508  <|@ instruction stack:36|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  510  <|@ instruction r8|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  512  <|@ instruction JUMP ~[] destination: B47 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  662  <|@ instruction r8|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr  664  <|@ instruction rbp|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  666  <|@ instruction MOV [r15|QWORD + 1156] y: -157971 size: DWORD <|@ <|@
      nr  668  <|@ instruction MOV [r15|QWORD + 1168] y: 1300 size: QWORD <|@ <|@
      nr  670  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:654) [bci: 206]
stack: int[0|0x0] 
locals: stack:72|QWORD[.] stack:36|DWORD stack:80|QWORD[.] stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD stack:96|QWORD[.] - - - r8|QWORD[.] - rbp|DWORD 
>@ <|@ instruction DEOPT info [bci:206] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1190  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1192  <|@ instruction stack:36|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr 1194  <|@ instruction r8|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1196  <|@ instruction r10|DWORD = MOVE input: int[-75547|0xfffffffffffed8e5] <|@ <|@
      nr 1198  <|@ instruction JUMP ~[] destination: B121 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B121" "B47" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1202  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1204  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1206  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: stack:72|QWORD[.] stack:36|DWORD stack:80|QWORD[.] stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD stack:96|QWORD[.] - r8|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:29] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction rbp|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  492  <|@ instruction JUMP ~[] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  998  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1000  <|@ instruction MOV [r15|QWORD + 1156] y: -61235 size: DWORD <|@ <|@
      nr 1002  <|@ instruction MOV [r15|QWORD + 1168] y: 8980 size: QWORD <|@ <|@
      nr 1004  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:670) [bci: 292]
locals: stack:72|QWORD[.] - - - - stack:32|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:292] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction rbp|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  346  <|@ instruction JUMP ~[] destination: B26 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B26" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  496  <|@ instruction MOV [r15|QWORD + 1156] y: -82987 size: DWORD <|@ <|@
      nr  498  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  500  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stack: stack:96|QWORD[.] rbp|DWORD rax|QWORD[.] 
locals: stack:72|QWORD[.] - - - - stack:32|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:59] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  558  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  560  <|@ instruction r11|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr  562  <|@ instruction rbx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  564  <|@ instruction MOV [r15|QWORD + 1156] y: -153363 size: DWORD <|@ <|@
      nr  566  <|@ instruction MOV [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  568  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:641) [bci: 94]
stack: int[0|0x0] 
locals: stack:72|QWORD[.] stack:36|DWORD stack:80|QWORD[.] stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD rbx|QWORD[.] r11|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:94] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  988  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  990  <|@ instruction rdx|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr  992  <|@ instruction MOV [r15|QWORD + 1156] y: -161299 size: DWORD <|@ <|@
      nr  994  <|@ instruction MOV [r15|QWORD + 1168] y: 10260 size: QWORD <|@ <|@
      nr  996  <|@ st <@st|@live-base-pointers: []
java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 18]
stack: rax|DWORD 
locals: stack:72|QWORD[.] - rdx|QWORD[.] - 
java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
locals: - - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:18, 295] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction MOV [r15|QWORD + 1156] y: -129299 size: DWORD <|@ <|@
      nr   58  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:634) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] r8|QWORD[.] r9|DWORD rdi|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #21         // table:java.util.HashMap$Node[]
     4: dup           
     5: astore        6
     7: ifnull        19
    10: aload         6
    12: arraylength   
    13: dup           
    14: istore        8
    16: ifne          29
    19: aload_0       
    20: invokevirtual #23         // resize:()java.util.HashMap$Node[]
    23: dup           
    24: astore        6
    26: arraylength   
    27: istore        8
    29: aload         6
    31: iload         8
    33: iconst_1      
    34: isub          
    35: iload_1       
    36: iand          
    37: dup           
    38: istore        9
    40: aaload        
    41: dup           
    42: astore        7
    44: ifnonnull     63
    47: aload         6
    49: iload         9
    51: aload_0       
    52: iload_1       
    53: aload_2       
    54: aload_3       
    55: aconst_null   
    56: invokevirtual #40         // newNode:(int, java.lang.Object, java.lang.Object, java.util.HashMap$Node)java.util.HashMap$Node
    59: aastore       
    60: goto          259
    63: aload         7
    65: getfield      #35         // java.util.HashMap$Node.hash:int
    68: iload_1       
    69: if_icmpne     104
    72: aload         7
    74: getfield      #36         // java.util.HashMap$Node.key:java.lang.Object
    77: dup           
    78: astore        11
    80: aload_2       
    81: if_acmpeq     97
    84: aload_2       
    85: ifnull        104
    88: aload_2       
    89: aload         11
    91: invokevirtual #37         // java.lang.Object.equals:(java.lang.Object)boolean
    94: ifeq          104
    97: aload         7
    99: astore        10
   101: goto          222
   104: aload         7
   106: instanceof    #180        // java.util.HashMap$TreeNode
   109: ifeq          131
   112: aload         7
   114: checkcast     #180        // java.util.HashMap$TreeNode
   117: aload_0       
   118: aload         6
   120: iload_1       
   121: aload_2       
   122: aload_3       
   123: invokevirtual #41         // java.util.HashMap$TreeNode.putTreeVal:(java.util.HashMap, java.util.HashMap$Node[], int, java.lang.Object, java.lang.Object)java.util.HashMap$TreeNode
   126: astore        10
   128: goto          222
   131: iconst_0      
   132: istore        12
   134: aload         7
   136: getfield      #38         // java.util.HashMap$Node.next:java.util.HashMap$Node
   139: dup           
   140: astore        10
   142: ifnonnull     175
   145: aload         7
   147: aload_0       
   148: iload_1       
   149: aload_2       
   150: aload_3       
   151: aconst_null   
   152: invokevirtual #40         // newNode:(int, java.lang.Object, java.lang.Object, java.util.HashMap$Node)java.util.HashMap$Node
   155: putfield      #38         // java.util.HashMap$Node.next:java.util.HashMap$Node
   158: iload         12
   160: bipush        7
   162: if_icmplt     222
   165: aload_0       
   166: aload         6
   168: iload_1       
   169: invokevirtual #42         // treeifyBin:(java.util.HashMap$Node[], int)void
   172: goto          222
   175: aload         10
   177: getfield      #35         // java.util.HashMap$Node.hash:int
   180: iload_1       
   181: if_icmpne     212
   184: aload         10
   186: getfield      #36         // java.util.HashMap$Node.key:java.lang.Object
   189: dup           
   190: astore        11
   192: aload_2       
   193: if_acmpeq     222
   196: aload_2       
   197: ifnull        212
   200: aload_2       
   201: aload         11
   203: invokevirtual #37         // java.lang.Object.equals:(java.lang.Object)boolean
   206: ifeq          212
   209: goto          222
   212: aload         10
   214: astore        7
   216: iinc          
   219: goto          134
   222: aload         10
   224: ifnull        259
   227: aload         10
   229: getfield      #34         // java.util.HashMap$Node.value:java.lang.Object
   232: astore        12
   234: iload         4
   236: ifeq          244
   239: aload         12
   241: ifnonnull     250
   244: aload         10
   246: aload_3       
   247: putfield      #34         // java.util.HashMap$Node.value:java.lang.Object
   250: aload_0       
   251: aload         10
   253: invokevirtual #43         // afterNodeAccess:(java.util.HashMap$Node)void
   256: aload         12
   258: areturn       
   259: aload_0       
   260: dup           
   261: getfield      #44         // modCount:int
   264: iconst_1      
   265: iadd          
   266: putfield      #44         // modCount:int
   269: aload_0       
   270: dup           
   271: getfield      #32         // size:int
   274: iconst_1      
   275: iadd          
   276: dup_x1        
   277: putfield      #32         // size:int
   280: aload_0       
   281: getfield      #17         // threshold:int
   284: if_icmple     292
   287: aload_0       
   288: invokevirtual #23         // resize:()java.util.HashMap$Node[]
   291: pop           
   292: aload_0       
   293: iload         5
   295: invokevirtual #45         // afterNodeInsertion:(boolean)void
   298: aconst_null   
   299: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|DWORD, rdi|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@21849dd slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:72|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction stack:80|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction stack:88|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   12  <|@ instruction stack:28|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   14  <|@ instruction stack:32|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr   16  <|@ instruction rbx|DWORD[_] = MOV [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   18  <|@ instruction TESTBRANCH (x: rbx|DWORD[_], y: rbx|DWORD[_]) trueDestinationProbability: 0.0015880438063265454 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607168114973028567
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction rax|DWORD = MOV [rbx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   52  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607168114973028567
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr   66  <|@ instruction r10|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   68  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B1" 
    successors "B6" "B121" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   72  <|@ instruction stack:96|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   74  <|@ instruction rax|DWORD = MOV [rbx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   76  <|@ instruction r11|DWORD = MOV [rbx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   78  <|@ instruction rbp|DWORD = DEC r10|DWORD size: DWORD <|@ <|@
      nr   80  <|@ instruction rbp|DWORD = AND (x: rdx|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr   82  <|@ instruction CMPBRANCH (x: rax|DWORD, y: rbp|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B121 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B48" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction stack:40|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   88  <|@ instruction rax|DWORD[_] = MOV [rbx|QWORD[.] + rbp|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   90  <|@ instruction r13|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   92  <|@ instruction r14|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr   94  <|@ instruction r13|QWORD = UNCOMPRESSPOINTER (input: r13|DWORD, ~baseRegister: r14|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr   96  <|@ instruction stack:48|QWORD = MOVE r13|QWORD moveKind: QWORD <|@ <|@
      nr   98  <|@ instruction r14|QWORD = MOVE input: long[140438306553856|0x7fba57600000] <|@ <|@
      nr  100  <|@ instruction stack:56|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr  102  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  104  <|@ instruction stack:100|DWORD[_] = MOVE r10|DWORD[_] moveKind: DWORD <|@ <|@
      nr  106  <|@ instruction TESTBRANCH (x: rax|DWORD[_], y: rax|DWORD[_]) trueDestinationProbability: 0.8229115724385652 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B12" "B47" 
    xhandlers
    flags 
    probability 4605587348047262798
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction stack:60|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  112  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~r13|QWORD - keyConstants: [meta{HotSpotType<Ljava/util/HashMap;, resolved>}, meta{HotSpotType<Ljava/util/LinkedHashMap;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/replacements/SnippetTemplate$LRUCache;, resolved>}] keyTargets: [B7 -> B8, B7 -> B12, B7 -> B12] defaultTarget: B7 -> B47 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4605585062831744793
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction rax|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  118  <|@ instruction rbp|QWORD = LEA [rax|QWORD + 32] size: QWORD <|@ <|@
      nr  120  <|@ instruction CMPBRANCH (x: rbp|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4605510964398880109
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction MOV (x: [r15|QWORD + 440], y: rbp|QWORD) size: QWORD <|@ <|@
      nr  152  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 288] instr: 0 <|@ <|@
      nr  154  <|@ instruction MOV [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  156  <|@ instruction MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>;compressed} <|@ <|@
      nr  158  <|@ instruction MOV [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  160  <|@ instruction MOV [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  162  <|@ instruction MOV [rax|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  164  <|@ instruction rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  166  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 4605585062831744793
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  170  <|@ instruction MOV (x: [rax|QWORD[.] + 20], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  172  <|@ instruction rcx|DWORD[_] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  174  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr  176  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  178  <|@ instruction JUMP ~[] destination: B11 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B11" "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4605587348047262798
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  270  <|@ instruction rdx|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr  272  <|@ instruction r11|QWORD = UNCOMPRESSPOINTER (input: r11|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr  274  <|@ instruction rdx|QWORD = MOV [r11|QWORD + 208] size: QWORD <|@ <|@
      nr  276  <|@ instruction rcx|DWORD = MOV [rdx|QWORD + 20] size: DWORD <|@ <|@
      nr  278  <|@ instruction r8|DWORD = MOV [rax|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  280  <|@ instruction r9|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr  282  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: r9|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr  284  <|@ instruction r9|QWORD = MOVSXD rcx|DWORD size: QWORD <|@ <|@
      nr  286  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r8|QWORD + r9|QWORD * 1]) trueDestinationProbability: 0.5 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B45" 
    xhandlers
    flags 
    probability 4601083748419892302
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ instruction CMPCONSTBRANCH rcx|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B45 y: 32 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4601083748419892302
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  298  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: r8|QWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4596580148792521806
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction rcx|QWORD = MOV [r8|QWORD + 40] size: QWORD <|@ <|@
      nr  308  <|@ instruction r9|DWORD = MOV [rcx|QWORD] size: DWORD <|@ <|@
      nr  310  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  312  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B24" 
    successors "B23" "B26" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4602807799859017905
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  316  <|@ instruction CMPBRANCH (x: r9|DWORD, y: r10|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602807799859017905
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  320  <|@ instruction r11|DWORD = SHL r10|DWORD y: 3 size: DWORD <|@ <|@
      nr  322  <|@ instruction r11|DWORD = LEA [r11|DWORD + 8] size: DWORD <|@ <|@
      nr  324  <|@ instruction r11|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr  326  <|@ instruction r11|QWORD = MOV [rcx|QWORD + r11|QWORD * 1] size: QWORD <|@ <|@
      nr  328  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: r11|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B23 -> B25 falseDestination: B23 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B22" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4599230716294395707
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  332  <|@ instruction r10|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr  334  <|@ instruction JUMP ~[] destination: B24 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B27" 
    xhandlers
    flags 
    probability 4601083748419892302
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ instruction JUMP ~[] destination: B17 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B27" 
    xhandlers
    flags 
    probability 4596580148792521807
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  338  <|@ instruction MOV (x: [r8|QWORD + 32], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  340  <|@ instruction JUMP ~[] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B27" 
    xhandlers
    flags 
    probability 4596580148792521806
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  302  <|@ instruction JUMP ~[] destination: B20 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B17" "B25" "B20" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4605587348047262798
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" 
    xhandlers
    flags 
    probability 4604846135197064160
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction rbp|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  356  <|@ instruction JUMP ~[] destination: B28 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B49" "B54" 
    xhandlers
    flags 
    probability 4595548303301553864
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  518  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [rax|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.01987559010066231 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4595421491411700642
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction CMPCONSTBRANCH [rax|DWORD[_] * 8 + 8] trueDestinationProbability: 2.021089053783065E-6 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B56 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4595421478772878611
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  606  <|@ instruction rbp|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  608  <|@ instruction JUMP ~[] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B62" 
    successors "B65" "B58" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4595777537596400292
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  612  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] stack:88|QWORD[.] r9|DWORD rdi|DWORD rbx|QWORD[.] r11|QWORD[.] - - - - rbp|DWORD 
>@ <|@ instruction rax|DWORD[_] = MOV [r11|QWORD[.] + 24] size: DWORD state [bci:134] <|@ <|@
      nr  614  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  616  <|@ instruction TESTBRANCH (x: rax|DWORD[_], y: rax|DWORD[_]) trueDestinationProbability: 0.5880075530332061 condition: = trueDestination: B57 -> B65 falseDestination: B57 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4590110563079390205
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  620  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [rax|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.8692436604445373 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B62 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B57" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4576850562957400324
    begin_IR
      LIR
      nr  672  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  674  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] stack:88|QWORD[.] r9|DWORD rdi|DWORD rbx|QWORD[.] r11|QWORD[.] - - - - rbp|DWORD 
>@ <|@ instruction SAFEPOINT rax|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 thread: r15 state [bci:134] <|@ <|@
      nr  676  <|@ instruction rbp|DWORD = INC rbp|DWORD size: DWORD <|@ <|@
      nr  678  <|@ instruction r11|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  680  <|@ instruction JUMP ~[] destination: B62 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4592437312858669387
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  696  <|@ instruction stack:112|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  698  <|@ instruction stack:40|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  700  <|@ instruction stack:120|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  702  <|@ instruction rax|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  704  <|@ instruction r10|QWORD = MOV [r13|QWORD + 680] size: QWORD <|@ <|@
      nr  706  <|@ instruction r11|QWORD = MOV [r10|QWORD + 64] size: QWORD <|@ <|@
      nr  708  <|@ instruction rdi|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  710  <|@ instruction rsi|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  712  <|@ instruction rdi|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  714  <|@ instruction rdx|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  716  <|@ instruction r8|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  718  <|@ instruction r9|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  720  <|@ instruction rbx|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  722  <|@ instruction rax|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  724  <|@ instruction stack:36|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  726  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:648) [bci: 152]
stack: stack:120|QWORD[.] 
locals: stack:72|QWORD[.] stack:36|DWORD - stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD stack:96|QWORD[.] - - - stack:112|QWORD[.] - stack:40|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.]]) [] callTarget: HotSpotMethod<HashMap.newNode(int, Object, Object, HashMap$Node)> state [bci:152] <|@ <|@
      nr  728  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B67 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B72" 
    xhandlers
    flags 
    probability 4591660023639118941
    begin_IR
      LIR
      nr  730  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  732  <|@ instruction r11|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr  734  <|@ instruction r14|QWORD = MOVE stack:56|QWORD moveKind: QWORD <|@ <|@
      nr  736  <|@ instruction rbx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  738  <|@ instruction JUMP ~[] destination: B66 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4590594123464754032
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction rbp|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  362  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + rbp|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  364  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  366  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4590001153184595122
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  374  <|@ instruction r10|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  376  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  378  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4589467479932452103
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction r11|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  390  <|@ instruction MOV (x: [r11|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  392  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  394  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  396  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B64" "B60" 
    xhandlers
    flags 
    probability 4589398445432346844
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction stack:112|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  626  <|@ instruction stack:40|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  628  <|@ instruction stack:120|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  630  <|@ instruction stack:36|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  632  <|@ instruction rsi|DWORD[_] = MOV [rax|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  634  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  636  <|@ instruction CMPBRANCH (x: r10|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.9998932466496128 condition: = trueDestination: B59 -> B64 falseDestination: B59 -> B60 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B86" 
    xhandlers
    flags 
    probability 4589397940059341918
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  690  <|@ instruction r8|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr  692  <|@ instruction JUMP ~[] destination: B64 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4577371935537457006
    begin_IR
      LIR
      nr  740  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  742  <|@ instruction r11|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr  744  <|@ instruction rbx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  746  <|@ instruction rsi|QWORD[.+] = LEA [r11|QWORD[.] + 24] size: QWORD <|@ <|@
      nr  748  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  750  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B67 -> B68 falseDestination: B67 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" "B71" 
    xhandlers
    flags 
    probability 4576750104161816650
    begin_IR
      LIR
      nr  758  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  760  <|@ instruction r10|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  762  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  764  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    probability 4576190455923740329
    begin_IR
      LIR
      nr  774  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  776  <|@ instruction r8|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  778  <|@ instruction MOV (x: [r8|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  780  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  782  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  784  <|@ instruction r14|QWORD = MOVE stack:56|QWORD moveKind: QWORD <|@ <|@
      nr  786  <|@ instruction JUMP ~[] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    probability 4575897384022324722
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction JUMP ~[] destination: B30 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4575895921484393205
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction rbp|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  126  <|@ instruction stack:36|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  128  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>} <|@ <|@
      nr  130  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: stack:72|QWORD[.] stack:36|DWORD rcx|QWORD[.] stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD rbx|QWORD[.] - stack:40|DWORD - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7fba62ccef80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:29] <|@ <|@
      nr  132  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: stack:72|QWORD[.] stack:36|DWORD rcx|QWORD[.] stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD rbx|QWORD[.] - stack:40|DWORD - - - - 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:29] <|@ <|@
      nr  134  <|@ instruction r10|DWORD[_] = MOVE stack:100|DWORD[_] moveKind: DWORD <|@ <|@
      nr  136  <|@ instruction r14|QWORD = MOVE stack:56|QWORD moveKind: QWORD <|@ <|@
      nr  138  <|@ instruction r13|QWORD = MOVE stack:48|QWORD moveKind: QWORD <|@ <|@
      nr  140  <|@ instruction rdi|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  142  <|@ instruction rdx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  144  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  146  <|@ instruction JUMP ~[] destination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4575188794187971253
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  382  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  384  <|@ instruction JUMP ~[] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" "B33" "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4605587348047262798
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  402  <|@ instruction MOV (x: [rbx|QWORD[.] + rbp|DWORD * 4 + 16], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  404  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + rbp|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  406  <|@ instruction rsi|QWORD[*] = XOR (x: rsi|QWORD[.+], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  408  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4604846135197064160
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  418  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4604179043631885386
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction r14|QWORD = MOVE stack:56|QWORD moveKind: QWORD <|@ <|@
      nr  430  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + rbp|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  432  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.+] y: 9 size: QWORD <|@ <|@
      nr  434  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B88" 
    xhandlers
    flags 
    probability 4603578661223224489
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  440  <|@ instruction JUMP ~[] destination: B39 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B88" 
    xhandlers
    flags 
    probability 4590594123464754032
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  414  <|@ instruction JUMP ~[] destination: B35 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B88" 
    xhandlers
    flags 
    probability 4590001153184595122
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  422  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  424  <|@ instruction JUMP ~[] destination: B37 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4589467479932452103
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  446  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B88" 
    xhandlers
    flags 
    probability 4588806327720511347
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  450  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  452  <|@ instruction JUMP ~[] destination: B41 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4574334916984542422
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  456  <|@ instruction MOVB [rsi|QWORD[*] + r14|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  458  <|@ instruction r10|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  460  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: r14|QWORD) size: QWORD <|@ <|@
      nr  462  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B88" 
    xhandlers
    flags 
    probability 4573566427501456474
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  476  <|@ instruction r11|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  478  <|@ instruction MOV (x: [r11|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  480  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  482  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  484  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  486  <|@ instruction JUMP ~[] destination: B44 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4570262383476918658
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  522  <|@ instruction stack:36|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  524  <|@ instruction rsi|DWORD[_] = MOV [rax|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  526  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  528  <|@ instruction CMPBRANCH (x: r10|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.9854570809572428 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B86" 
    xhandlers
    flags 
    probability 4570144353713859813
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  532  <|@ instruction r8|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  534  <|@ instruction JUMP ~[] destination: B50 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 4564966382317228292
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   22  <|@ instruction stack:36|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   24  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr   26  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:635) [bci: 20]
locals: stack:72|QWORD[.] stack:36|DWORD stack:80|QWORD[.] stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.resize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:20] <|@ <|@
      nr   28  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:635) [bci: 23]
stack: Object[null] 
locals: stack:72|QWORD[.] stack:36|DWORD stack:80|QWORD[.] stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD - - - - - - - 
>@ <|@ instruction rsi|DWORD = MOV [rax|QWORD[.] + 12] size: DWORD state [bci:23] <|@ <|@
      nr   30  <|@ instruction r10|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction rbx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction rdi|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr   36  <|@ instruction r9|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr   38  <|@ instruction r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction rcx|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction rdx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr   44  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction JUMP ~[] destination: B1 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B72" 
    xhandlers
    flags 
    probability 4562617473904064804
    begin_IR
      LIR
      nr  752  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  754  <|@ instruction r14|QWORD = MOVE stack:56|QWORD moveKind: QWORD <|@ <|@
      nr  756  <|@ instruction JUMP ~[] destination: B68 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    probability 4562093595080792590
    begin_IR
      LIR
      nr  766  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  768  <|@ instruction r14|QWORD = MOVE stack:56|QWORD moveKind: QWORD <|@ <|@
      nr  770  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  772  <|@ instruction JUMP ~[] destination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B66" "B68" "B71" "B70" 
    successors "B73" "B74" 
    xhandlers
    flags 
    probability 4592437312858669387
    begin_IR
      LIR
      nr  788  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  790  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  792  <|@ instruction MOV (x: [r11|QWORD[.] + 24], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  794  <|@ instruction rsi|QWORD[*] = XOR (x: r11|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  796  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    probability 4591660023639118941
    begin_IR
      LIR
      nr  802  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  804  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    probability 4590960463341523540
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  812  <|@ instruction r11|QWORD[*] = SHR r11|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  814  <|@ instruction CMPCONSTBRANCH [r11|QWORD[*] + r14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B83" 
    xhandlers
    flags 
    probability 4590330859073687679
    begin_IR
      LIR
      nr  816  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  818  <|@ instruction JUMP ~[] destination: B77 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B83" 
    xhandlers
    flags 
    probability 4577371935537457006
    begin_IR
      LIR
      nr  798  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  800  <|@ instruction JUMP ~[] destination: B73 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B83" 
    xhandlers
    flags 
    probability 4576750104161816649
    begin_IR
      LIR
      nr  806  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  808  <|@ instruction JUMP ~[] destination: B75 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    probability 4576190455923740328
    begin_IR
      LIR
      nr  820  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  822  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  824  <|@ instruction CMPCONSTBRANCH [r11|QWORD[*] + r14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B83" 
    xhandlers
    flags 
    probability 4575686772509471639
    begin_IR
      LIR
      nr  826  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  828  <|@ instruction JUMP ~[] destination: B79 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    probability 4561198157899870475
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  832  <|@ instruction MOVB [r11|QWORD[*] + r14|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  834  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  836  <|@ instruction r11|QWORD[*] = ADD (x: r11|QWORD[*], y: r14|QWORD) size: QWORD <|@ <|@
      nr  838  <|@ instruction TESTBRANCH (x: rsi|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    probability 4560392264437040573
    begin_IR
      LIR
      nr  848  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  850  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  852  <|@ instruction MOV (x: [rdx|QWORD + rsi|QWORD * 1 - 8], y: r11|QWORD[*]) size: QWORD <|@ <|@
      nr  854  <|@ instruction rsi|QWORD = LEA [rsi|QWORD - 8] size: QWORD <|@ <|@
      nr  856  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  858  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B88" 
    xhandlers
    flags 
    probability 4559287139136259037
    begin_IR
      LIR
      nr  464  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  466  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  468  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  470  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  472  <|@ instruction JUMP ~[] destination: B43 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4553315745025075769
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  182  <|@ instruction stack:36|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  184  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  186  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 40] size: QWORD <|@ <|@
      nr  188  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4553268943811267021
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  208  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 296] instr: 0 <|@ <|@
      nr  210  <|@ instruction MOV [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  212  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>;compressed} <|@ <|@
      nr  214  <|@ instruction MOV [rsi|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  216  <|@ instruction MOV [rsi|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  218  <|@ instruction MOV [rsi|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  220  <|@ instruction MOV [rsi|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  222  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  224  <|@ instruction stack:64|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  226  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4553315745025075769
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  230  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  234  <|@ instruction rdx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  236  <|@ instruction rcx|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  238  <|@ instruction r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  240  <|@ instruction r9|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  242  <|@ instruction stack:112|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  244  <|@ st <@st|@live-base-pointers: []
java.util.LinkedHashMap$Entry.<init>(LinkedHashMap.java:208) [bci: 6]
locals: - - - - - 
java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 9]
stack: stack:112|QWORD[.] 
locals: stack:72|QWORD[.] stack:36|DWORD stack:80|QWORD[.] stack:88|QWORD[.] Object[null] - 
java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stack: stack:96|QWORD[.] stack:60|DWORD 
locals: stack:72|QWORD[.] - - - - stack:32|DWORD - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.]] [] callTarget: HotSpotMethod<HashMap$Node.<init>(int, Object, Object, HashMap$Node)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:6, 9, 56] <|@ <|@
      nr  246  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  248  <|@ instruction rdx|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr  250  <|@ st <@st|@live-base-pointers: []
java.util.LinkedHashMap.newNode(LinkedHashMap.java:283) [bci: 17]
locals: - - - - - stack:112|QWORD[.] 
java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stack: stack:96|QWORD[.] stack:60|DWORD 
locals: stack:72|QWORD[.] - - - - stack:32|DWORD - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<LinkedHashMap.linkNodeAtEnd(LinkedHashMap$Entry)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:17, 56] <|@ <|@
      nr  252  <|@ instruction rax|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr  254  <|@ instruction r14|QWORD = MOVE stack:56|QWORD moveKind: QWORD <|@ <|@
      nr  256  <|@ instruction r13|QWORD = MOVE stack:48|QWORD moveKind: QWORD <|@ <|@
      nr  258  <|@ instruction r11|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr  260  <|@ instruction rbx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  262  <|@ instruction rdi|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  264  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    probability 4546075572092099182
    begin_IR
      LIR
      nr  840  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  842  <|@ instruction rsi|QWORD = MOVE r11|QWORD[*] moveKind: QWORD <|@ <|@
      nr  844  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  846  <|@ instruction JUMP ~[] destination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B73" "B75" "B77" "B79" "B82" "B81" 
    successors "B84" "B85" 
    xhandlers
    flags 
    probability 4592437312858669387
    begin_IR
      LIR
      nr  860  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  862  <|@ instruction CMPCONSTBRANCH stack:40|DWORD trueDestinationProbability: 0.9999886211240704 condition: < trueDestination: B83 -> B84 falseDestination: B83 -> B85 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" 
    xhandlers
    flags 
    probability 4592437224411893480
    begin_IR
      LIR
      nr  864  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  866  <|@ instruction r8|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr  868  <|@ instruction JUMP ~[] destination: B84 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B50" "B55" "B64" "B84" "B85" "B63" "B53" 
    successors "B87" "B100" 
    xhandlers
    flags 
    probability 4595548303301553864
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  886  <|@ instruction TESTBRANCH (x: r8|QWORD[.], y: r8|QWORD[.]) trueDestinationProbability: 0.6091185940042786 condition: = trueDestination: B86 -> B87 falseDestination: B86 -> B100 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B88" 
    xhandlers
    flags 
    probability 4592437118697206803
    begin_IR
      LIR
      nr  888  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  890  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  892  <|@ instruction JUMP ~[] destination: B87 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B35" "B87" "B43" "B44" "B41" "B39" "B37" 
    successors "B89" "B90" 
    xhandlers
    flags 
    probability 4606558935301518032
    begin_IR
      LIR
      nr  894  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  896  <|@ instruction INC [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  898  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  900  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, ~y: [rsi|QWORD[.] + 20]) size: DWORD <|@ <|@
      nr  902  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: rax|DWORD) size: DWORD <|@ <|@
      nr  904  <|@ instruction CMPBRANCH (x: rax|DWORD, y: [rsi|QWORD[.] + 28]) trueDestinationProbability: 7.853038846579175E-4 condition: > trueDestination: B88 -> B89 falseDestination: B88 -> B90 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B91" 
    xhandlers
    flags 
    probability 4606552351536966788
    begin_IR
      LIR
      nr  920  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  922  <|@ instruction r13|QWORD = MOVE stack:48|QWORD moveKind: QWORD <|@ <|@
      nr  924  <|@ instruction JUMP ~[] destination: B90 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" "B89" 
    successors "B92" "B93" "B99" 
    xhandlers
    flags 
    probability 4606558935301518032
    begin_IR
      LIR
      nr  926  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  928  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~r13|QWORD - keyConstants: [meta{HotSpotType<Ljava/util/HashMap;, resolved>}, meta{HotSpotType<Ljava/util/LinkedHashMap;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/replacements/SnippetTemplate$LRUCache;, resolved>}] keyTargets: [B91 -> B92, B91 -> B93, B91 -> B93] defaultTarget: B91 -> B99 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B97" 
    xhandlers
    flags 
    probability 4606555909645339483
    begin_IR
      LIR
      nr  930  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  932  <|@ instruction JUMP ~[] destination: B92 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B92" "B94" "B96" 
    successors 
    xhandlers
    flags 
    probability 4606558935301518031
    begin_IR
      LIR
      nr  982  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  984  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  986  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B101" "B119" 
    xhandlers
    flags 
    probability 4589652288651159933
    begin_IR
      LIR
      nr 1006  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1008  <|@ instruction r13|QWORD = MOVE stack:48|QWORD moveKind: QWORD <|@ <|@
      nr 1010  <|@ instruction r9|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1012  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1014  <|@ instruction r10|DWORD[_] = MOV [r8|QWORD[.] + 20] size: DWORD <|@ <|@
      nr 1016  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.9999962001170364 condition: = trueDestination: B100 -> B101 falseDestination: B100 -> B119 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B102" "B103" 
    xhandlers
    flags 
    probability 4589652269697845341
    begin_IR
      LIR
      nr 1018  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1020  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B103 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B108" 
    xhandlers
    flags 
    probability 4589138949298219176
    begin_IR
      LIR
      nr 1022  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1024  <|@ instruction r11|DWORD[_] = MOVE stack:100|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1026  <|@ instruction JUMP ~[] destination: B102 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" "B105" 
    xhandlers
    flags 
    probability 4574630580609171603
    begin_IR
      LIR
      nr 1028  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1030  <|@ instruction r11|QWORD[.+] = LEA [r8|QWORD[.] + 20] size: QWORD <|@ <|@
      nr 1032  <|@ instruction r11|DWORD[_] = MOV [r11|QWORD[.+]] size: DWORD <|@ <|@
      nr 1034  <|@ instruction TESTBRANCH (x: r11|DWORD[_], y: r11|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B103 -> B104 falseDestination: B103 -> B105 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B106" "B107" 
    xhandlers
    flags 
    probability 4573832524763622737
    begin_IR
      LIR
      nr 1042  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1044  <|@ instruction r9|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr 1046  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr 1048  <|@ instruction TESTBRANCH (x: r9|QWORD, y: r9|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B105 -> B106 falseDestination: B105 -> B107 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B108" 
    xhandlers
    flags 
    probability 4573114274502628758
    begin_IR
      LIR
      nr 1060  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1062  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr 1064  <|@ instruction MOV (x: [rcx|QWORD + r9|QWORD * 1 - 8], y: r11|QWORD[.]) size: QWORD <|@ <|@
      nr 1066  <|@ instruction r11|QWORD = LEA [r9|QWORD - 8] size: QWORD <|@ <|@
      nr 1068  <|@ instruction MOV (x: [r15|QWORD + 40], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1070  <|@ instruction r11|DWORD[_] = MOVE stack:100|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1072  <|@ instruction JUMP ~[] destination: B107 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B91" 
    xhandlers
    flags 
    probability 4559880998172045651
    begin_IR
      LIR
      nr  906  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  908  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  910  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  912  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:669) [bci: 288]
locals: stack:72|QWORD[.] - - - - stack:32|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.resize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:288] <|@ <|@
      nr  914  <|@ instruction r13|QWORD = MOVE stack:48|QWORD moveKind: QWORD <|@ <|@
      nr  916  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  918  <|@ instruction JUMP ~[] destination: B89 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B108" 
    xhandlers
    flags 
    probability 4559523670035962382
    begin_IR
      LIR
      nr 1036  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1038  <|@ instruction r11|DWORD[_] = MOVE stack:100|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1040  <|@ instruction JUMP ~[] destination: B104 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B108" 
    xhandlers
    flags 
    probability 4558885225359523289
    begin_IR
      LIR
      nr 1050  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1052  <|@ instruction rsi|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1054  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr 1056  <|@ instruction r11|DWORD[_] = MOVE stack:100|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1058  <|@ instruction JUMP ~[] destination: B106 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B102" "B104" "B107" "B106" 
    successors "B109" "B110" 
    xhandlers
    flags 
    probability 4589652269697845341
    begin_IR
      LIR
      nr 1074  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1076  <|@ instruction MOV (x: [r8|QWORD[.] + 20], y: r11|DWORD[_]) size: DWORD <|@ <|@
      nr 1078  <|@ instruction rsi|QWORD[*] = XOR (x: r8|QWORD[.], y: stack:88|QWORD[.]) size: QWORD <|@ <|@
      nr 1080  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B108 -> B109 falseDestination: B108 -> B110 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" "B112" 
    xhandlers
    flags 
    probability 4589138949298219176
    begin_IR
      LIR
      nr 1088  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1090  <|@ instruction r11|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1092  <|@ instruction TESTBRANCH (x: r11|QWORD[.], y: r11|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B110 -> B111 falseDestination: B110 -> B112 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B113" "B114" 
    xhandlers
    flags 
    probability 4588241136471976702
    begin_IR
      LIR
      nr 1100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1102  <|@ instruction r14|QWORD = MOVE stack:56|QWORD moveKind: QWORD <|@ <|@
      nr 1104  <|@ instruction rsi|QWORD[*] = SHR r8|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr 1106  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B112 -> B113 falseDestination: B112 -> B114 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B120" 
    xhandlers
    flags 
    probability 4587433104928358475
    begin_IR
      LIR
      nr 1108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1110  <|@ instruction r13|QWORD = MOVE stack:48|QWORD moveKind: QWORD <|@ <|@
      nr 1112  <|@ instruction JUMP ~[] destination: B113 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B120" 
    xhandlers
    flags 
    probability 4574630580609171603
    begin_IR
      LIR
      nr 1082  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1084  <|@ instruction r13|QWORD = MOVE stack:48|QWORD moveKind: QWORD <|@ <|@
      nr 1086  <|@ instruction JUMP ~[] destination: B109 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B120" 
    xhandlers
    flags 
    probability 4573832524763622738
    begin_IR
      LIR
      nr 1094  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1096  <|@ instruction r13|QWORD = MOVE stack:48|QWORD moveKind: QWORD <|@ <|@
      nr 1098  <|@ instruction JUMP ~[] destination: B111 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B115" "B116" 
    xhandlers
    flags 
    probability 4573114274502628759
    begin_IR
      LIR
      nr 1114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1116  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr 1118  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B114 -> B115 falseDestination: B114 -> B116 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B120" 
    xhandlers
    flags 
    probability 4572467849267734178
    begin_IR
      LIR
      nr 1120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1122  <|@ instruction r13|QWORD = MOVE stack:48|QWORD moveKind: QWORD <|@ <|@
      nr 1124  <|@ instruction JUMP ~[] destination: B115 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B117" "B118" 
    xhandlers
    flags 
    probability 4558310625150728107
    begin_IR
      LIR
      nr 1126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1128  <|@ instruction MOVB [rsi|QWORD[*] + r14|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr 1130  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr 1132  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: r14|QWORD) size: QWORD <|@ <|@
      nr 1134  <|@ instruction TESTBRANCH (x: rdx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B116 -> B117 falseDestination: B116 -> B118 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B120" 
    xhandlers
    flags 
    probability 4557793484962812442
    begin_IR
      LIR
      nr 1146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1148  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr 1150  <|@ instruction MOV (x: [rbx|QWORD + rdx|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr 1152  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr 1154  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1156  <|@ instruction r13|QWORD = MOVE stack:48|QWORD moveKind: QWORD <|@ <|@
      nr 1158  <|@ instruction JUMP ~[] destination: B118 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B94" "B95" 
    xhandlers
    flags 
    probability 4554832167497868566
    begin_IR
      LIR
      nr  934  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  936  <|@ instruction rdi|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  938  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.4891304347826087 condition: = trueDestination: B93 -> B94 falseDestination: B93 -> B95 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B96" "B98" 
    xhandlers
    flags 
    probability 4550463275345577801
    begin_IR
      LIR
      nr  944  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  946  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  948  <|@ instruction rdx|DWORD[_] = MOV [rsi|QWORD[.] + 52] size: DWORD <|@ <|@
      nr  950  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:670) [bci: 292]
locals: rsi|QWORD[.] - - - - rdi|DWORD - - - - - - - 
>@ <|@ instruction NULLCHECK [rdx|DWORD[_] * 8] state [bci:292] <|@ <|@
      nr  952  <|@ instruction rbx|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  954  <|@ instruction rax|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr  956  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rax|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr  958  <|@ instruction rbx|QWORD = MOV [rbx|QWORD + 872] size: QWORD <|@ <|@
      nr  960  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  962  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  964  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  966  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  968  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  970  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  972  <|@ instruction stack:112|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  974  <|@ st <@st|@live-base-pointers: []
java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 15]
locals: stack:72|QWORD[.] - stack:112|QWORD[.] - 
java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
locals: - - - - - - - - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<LinkedHashMap.removeEldestEntry(Map$Entry)> state [bci:15, 295] <|@ <|@
      nr  976  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B95 -> B96 falseDestination: B95 -> B98 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B97" 
    xhandlers
    flags 
    probability 4550463275345577801
    begin_IR
      LIR
      nr  978  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  980  <|@ instruction JUMP ~[] destination: B96 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B97" 
    xhandlers
    flags 
    probability 4550193860395418340
    begin_IR
      LIR
      nr  940  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  942  <|@ instruction JUMP ~[] destination: B94 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B120" 
    xhandlers
    flags 
    probability 4543399067768740112
    begin_IR
      LIR
      nr 1136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1138  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1140  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr 1142  <|@ instruction r13|QWORD = MOVE stack:48|QWORD moveKind: QWORD <|@ <|@
      nr 1144  <|@ instruction JUMP ~[] destination: B117 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B119" "B109" "B117" "B118" "B115" "B113" "B111" 
    successors 
    xhandlers
    flags 
    probability 4589652288651159933
    begin_IR
      LIR
      nr 1168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1170  <|@ instruction rbx|QWORD = MOV [r13|QWORD + 688] size: QWORD <|@ <|@
      nr 1172  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr 1174  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr 1176  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1178  <|@ instruction rdx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1180  <|@ instruction stack:112|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1182  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:663) [bci: 253]
locals: - - - - - - - - - - - - stack:112|QWORD[.] 
>@ <|@ instruction - = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<HashMap.afterNodeAccess(HashMap$Node)> state [bci:253] <|@ <|@
      nr 1184  <|@ instruction rax|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1186  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4542678729597855531
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  538  <|@ instruction stack:112|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  540  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: stack:72|QWORD[.] stack:36|DWORD rcx|QWORD[.] stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD stack:96|QWORD[.] - stack:40|DWORD - - - - 
>@ <|@ instruction rsi|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD state [bci:29] <|@ <|@
      nr  542  <|@ instruction rdx|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr  544  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr  546  <|@ instruction rbx|QWORD = MOV [rsi|QWORD + 464] size: QWORD <|@ <|@
      nr  548  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  550  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  552  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  554  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:641) [bci: 91]
locals: stack:72|QWORD[.] stack:36|DWORD stack:80|QWORD[.] stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD stack:96|QWORD[.] stack:112|QWORD[.] - - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:91] <|@ <|@
      nr  556  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B86" 
    xhandlers
    flags 
    probability 4542678729597855531
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  572  <|@ instruction r8|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr  574  <|@ instruction JUMP ~[] destination: B53 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B63" 
    xhandlers
    flags 
    probability 4529894057192690854
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  640  <|@ instruction r11|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr  642  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: stack:72|QWORD[.] stack:36|DWORD rcx|QWORD[.] stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD stack:96|QWORD[.] r11|QWORD[.] - - - - stack:40|DWORD 
>@ <|@ instruction rsi|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD state [bci:134] <|@ <|@
      nr  644  <|@ instruction rdx|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr  646  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr  648  <|@ instruction rbx|QWORD = MOV [rsi|QWORD + 464] size: QWORD <|@ <|@
      nr  650  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  652  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  654  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  656  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:654) [bci: 203]
locals: stack:72|QWORD[.] stack:36|DWORD stack:80|QWORD[.] stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD stack:96|QWORD[.] - - - stack:112|QWORD[.] - stack:40|DWORD 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:203] <|@ <|@
      nr  658  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B86" 
    xhandlers
    flags 
    probability 4529894057192690854
    begin_IR
      LIR
      nr  682  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  684  <|@ instruction r8|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr  686  <|@ instruction JUMP ~[] destination: B63 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4523100981620127249
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction stack:64|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  194  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>} <|@ <|@
      nr  196  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: stack:72|QWORD[.] stack:36|DWORD stack:80|QWORD[.] stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD stack:96|QWORD[.] - stack:40|DWORD - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7fba62ccef80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:29] <|@ <|@
      nr  198  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: stack:72|QWORD[.] stack:36|DWORD stack:80|QWORD[.] stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD stack:96|QWORD[.] - stack:40|DWORD - - - - 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:29] <|@ <|@
      nr  200  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  202  <|@ instruction JUMP ~[] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" 
    xhandlers
    flags 
    probability 4518403274531071726
    begin_IR
      LIR
      nr  870  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  872  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  874  <|@ instruction rdx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  876  <|@ instruction rcx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  878  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:650) [bci: 169]
locals: stack:72|QWORD[.] - - stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD - - - - stack:112|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<HashMap.treeifyBin(HashMap$Node[], int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:169] <|@ <|@
      nr  880  <|@ instruction r8|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr  882  <|@ instruction JUMP ~[] destination: B85 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B86" 
    xhandlers
    flags 
    probability 4510226010095555986
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  582  <|@ instruction stack:112|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  584  <|@ instruction stack:36|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  586  <|@ instruction rsi|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr  588  <|@ instruction rdx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  590  <|@ instruction rcx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  592  <|@ instruction r8|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  594  <|@ instruction r9|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  596  <|@ instruction rdi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  598  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:644) [bci: 123]
locals: stack:72|QWORD[.] - - stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|QWORD[.], rdi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap$TreeNode.putTreeVal(HashMap, HashMap$Node[], int, Object, Object)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:123] <|@ <|@
      nr  600  <|@ instruction r8|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  602  <|@ instruction JUMP ~[] destination: B55 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B120" 
    xhandlers
    flags 
    probability 4508568125070994604
    begin_IR
      LIR
      nr 1160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1162  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:659) [bci: 222]
locals: stack:72|QWORD[.] - - stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD - - - - r8|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r10|DWORD[_] * 8] state [bci:222] <|@ <|@
      nr 1164  <|@ instruction r13|QWORD = MOVE stack:48|QWORD moveKind: QWORD <|@ <|@
      nr 1166  <|@ instruction JUMP ~[] destination: B119 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction r11|QWORD = MOVE input: long[5780|0x1694] <|@ <|@
      nr  506  <|@ instruction r10|DWORD = MOVE input: int[-51507|0xffffffffffff36cd] <|@ <|@
      nr  508  <|@ instruction stack:36|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  510  <|@ instruction r8|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  512  <|@ instruction JUMP ~[] destination: B47 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  662  <|@ instruction r8|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr  664  <|@ instruction rbp|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  666  <|@ instruction MOV [r15|QWORD + 1156] y: -157971 size: DWORD <|@ <|@
      nr  668  <|@ instruction MOV [r15|QWORD + 1168] y: 1300 size: QWORD <|@ <|@
      nr  670  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:654) [bci: 206]
stack: int[0|0x0] 
locals: stack:72|QWORD[.] stack:36|DWORD stack:80|QWORD[.] stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD stack:96|QWORD[.] - - - r8|QWORD[.] - rbp|DWORD 
>@ <|@ instruction DEOPT info [bci:206] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1190  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1192  <|@ instruction stack:36|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr 1194  <|@ instruction r8|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1196  <|@ instruction r10|DWORD = MOVE input: int[-75547|0xfffffffffffed8e5] <|@ <|@
      nr 1198  <|@ instruction JUMP ~[] destination: B121 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B121" "B47" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1202  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1204  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1206  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: stack:72|QWORD[.] stack:36|DWORD stack:80|QWORD[.] stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD stack:96|QWORD[.] - r8|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:29] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction rbp|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  492  <|@ instruction JUMP ~[] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  998  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1000  <|@ instruction MOV [r15|QWORD + 1156] y: -61235 size: DWORD <|@ <|@
      nr 1002  <|@ instruction MOV [r15|QWORD + 1168] y: 8980 size: QWORD <|@ <|@
      nr 1004  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:670) [bci: 292]
locals: stack:72|QWORD[.] - - - - stack:32|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:292] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction rbp|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  346  <|@ instruction JUMP ~[] destination: B26 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B26" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  496  <|@ instruction MOV [r15|QWORD + 1156] y: -82987 size: DWORD <|@ <|@
      nr  498  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  500  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stack: stack:96|QWORD[.] rbp|DWORD rax|QWORD[.] 
locals: stack:72|QWORD[.] - - - - stack:32|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:59] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  558  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  560  <|@ instruction r11|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr  562  <|@ instruction rbx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  564  <|@ instruction MOV [r15|QWORD + 1156] y: -153363 size: DWORD <|@ <|@
      nr  566  <|@ instruction MOV [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  568  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:641) [bci: 94]
stack: int[0|0x0] 
locals: stack:72|QWORD[.] stack:36|DWORD stack:80|QWORD[.] stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD rbx|QWORD[.] r11|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:94] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  988  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  990  <|@ instruction rdx|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr  992  <|@ instruction MOV [r15|QWORD + 1156] y: -161299 size: DWORD <|@ <|@
      nr  994  <|@ instruction MOV [r15|QWORD + 1168] y: 10260 size: QWORD <|@ <|@
      nr  996  <|@ st <@st|@live-base-pointers: []
java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 18]
stack: rax|DWORD 
locals: stack:72|QWORD[.] - rdx|QWORD[.] - 
java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
locals: - - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:18, 295] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction MOV [r15|QWORD + 1156] y: -129299 size: DWORD <|@ <|@
      nr   58  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:634) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] r8|QWORD[.] r9|DWORD rdi|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #21         // table:java.util.HashMap$Node[]
     4: dup           
     5: astore        6
     7: ifnull        19
    10: aload         6
    12: arraylength   
    13: dup           
    14: istore        8
    16: ifne          29
    19: aload_0       
    20: invokevirtual #23         // resize:()java.util.HashMap$Node[]
    23: dup           
    24: astore        6
    26: arraylength   
    27: istore        8
    29: aload         6
    31: iload         8
    33: iconst_1      
    34: isub          
    35: iload_1       
    36: iand          
    37: dup           
    38: istore        9
    40: aaload        
    41: dup           
    42: astore        7
    44: ifnonnull     63
    47: aload         6
    49: iload         9
    51: aload_0       
    52: iload_1       
    53: aload_2       
    54: aload_3       
    55: aconst_null   
    56: invokevirtual #40         // newNode:(int, java.lang.Object, java.lang.Object, java.util.HashMap$Node)java.util.HashMap$Node
    59: aastore       
    60: goto          259
    63: aload         7
    65: getfield      #35         // java.util.HashMap$Node.hash:int
    68: iload_1       
    69: if_icmpne     104
    72: aload         7
    74: getfield      #36         // java.util.HashMap$Node.key:java.lang.Object
    77: dup           
    78: astore        11
    80: aload_2       
    81: if_acmpeq     97
    84: aload_2       
    85: ifnull        104
    88: aload_2       
    89: aload         11
    91: invokevirtual #37         // java.lang.Object.equals:(java.lang.Object)boolean
    94: ifeq          104
    97: aload         7
    99: astore        10
   101: goto          222
   104: aload         7
   106: instanceof    #180        // java.util.HashMap$TreeNode
   109: ifeq          131
   112: aload         7
   114: checkcast     #180        // java.util.HashMap$TreeNode
   117: aload_0       
   118: aload         6
   120: iload_1       
   121: aload_2       
   122: aload_3       
   123: invokevirtual #41         // java.util.HashMap$TreeNode.putTreeVal:(java.util.HashMap, java.util.HashMap$Node[], int, java.lang.Object, java.lang.Object)java.util.HashMap$TreeNode
   126: astore        10
   128: goto          222
   131: iconst_0      
   132: istore        12
   134: aload         7
   136: getfield      #38         // java.util.HashMap$Node.next:java.util.HashMap$Node
   139: dup           
   140: astore        10
   142: ifnonnull     175
   145: aload         7
   147: aload_0       
   148: iload_1       
   149: aload_2       
   150: aload_3       
   151: aconst_null   
   152: invokevirtual #40         // newNode:(int, java.lang.Object, java.lang.Object, java.util.HashMap$Node)java.util.HashMap$Node
   155: putfield      #38         // java.util.HashMap$Node.next:java.util.HashMap$Node
   158: iload         12
   160: bipush        7
   162: if_icmplt     222
   165: aload_0       
   166: aload         6
   168: iload_1       
   169: invokevirtual #42         // treeifyBin:(java.util.HashMap$Node[], int)void
   172: goto          222
   175: aload         10
   177: getfield      #35         // java.util.HashMap$Node.hash:int
   180: iload_1       
   181: if_icmpne     212
   184: aload         10
   186: getfield      #36         // java.util.HashMap$Node.key:java.lang.Object
   189: dup           
   190: astore        11
   192: aload_2       
   193: if_acmpeq     222
   196: aload_2       
   197: ifnull        212
   200: aload_2       
   201: aload         11
   203: invokevirtual #37         // java.lang.Object.equals:(java.lang.Object)boolean
   206: ifeq          212
   209: goto          222
   212: aload         10
   214: astore        7
   216: iinc          
   219: goto          134
   222: aload         10
   224: ifnull        259
   227: aload         10
   229: getfield      #34         // java.util.HashMap$Node.value:java.lang.Object
   232: astore        12
   234: iload         4
   236: ifeq          244
   239: aload         12
   241: ifnonnull     250
   244: aload         10
   246: aload_3       
   247: putfield      #34         // java.util.HashMap$Node.value:java.lang.Object
   250: aload_0       
   251: aload         10
   253: invokevirtual #43         // afterNodeAccess:(java.util.HashMap$Node)void
   256: aload         12
   258: areturn       
   259: aload_0       
   260: dup           
   261: getfield      #44         // modCount:int
   264: iconst_1      
   265: iadd          
   266: putfield      #44         // modCount:int
   269: aload_0       
   270: dup           
   271: getfield      #32         // size:int
   274: iconst_1      
   275: iadd          
   276: dup_x1        
   277: putfield      #32         // size:int
   280: aload_0       
   281: getfield      #17         // threshold:int
   284: if_icmple     292
   287: aload_0       
   288: invokevirtual #23         // resize:()java.util.HashMap$Node[]
   291: pop           
   292: aload_0       
   293: iload         5
   295: invokevirtual #45         // afterNodeInsertion:(boolean)void
   298: aconst_null   
   299: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After EdgeMoveOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|DWORD, rdi|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@21849dd slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:72|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction stack:80|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction stack:88|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   12  <|@ instruction stack:28|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   14  <|@ instruction stack:32|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr   16  <|@ instruction rbx|DWORD[_] = MOV [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   18  <|@ instruction TESTBRANCH (x: rbx|DWORD[_], y: rbx|DWORD[_]) trueDestinationProbability: 0.0015880438063265454 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607168114973028567
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction rax|DWORD = MOV [rbx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   52  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607168114973028567
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr   66  <|@ instruction r10|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   68  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B1" 
    successors "B6" "B121" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   72  <|@ instruction stack:96|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   74  <|@ instruction rax|DWORD = MOV [rbx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   76  <|@ instruction r11|DWORD = MOV [rbx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   78  <|@ instruction rbp|DWORD = DEC r10|DWORD size: DWORD <|@ <|@
      nr   80  <|@ instruction rbp|DWORD = AND (x: rdx|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr   82  <|@ instruction CMPBRANCH (x: rax|DWORD, y: rbp|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B121 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B48" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction stack:40|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   88  <|@ instruction rax|DWORD[_] = MOV [rbx|QWORD[.] + rbp|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   90  <|@ instruction r13|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   92  <|@ instruction r14|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr   94  <|@ instruction r13|QWORD = UNCOMPRESSPOINTER (input: r13|DWORD, ~baseRegister: r14|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr   96  <|@ instruction stack:48|QWORD = MOVE r13|QWORD moveKind: QWORD <|@ <|@
      nr   98  <|@ instruction r14|QWORD = MOVE input: long[140438306553856|0x7fba57600000] <|@ <|@
      nr  100  <|@ instruction stack:56|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr  102  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  104  <|@ instruction stack:100|DWORD[_] = MOVE r10|DWORD[_] moveKind: DWORD <|@ <|@
      nr  106  <|@ instruction TESTBRANCH (x: rax|DWORD[_], y: rax|DWORD[_]) trueDestinationProbability: 0.8229115724385652 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B12" "B47" 
    xhandlers
    flags 
    probability 4605587348047262798
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction stack:60|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  112  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~r13|QWORD - keyConstants: [meta{HotSpotType<Ljava/util/HashMap;, resolved>}, meta{HotSpotType<Ljava/util/LinkedHashMap;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/replacements/SnippetTemplate$LRUCache;, resolved>}] keyTargets: [B7 -> B8, B7 -> B12, B7 -> B12] defaultTarget: B7 -> B47 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4605585062831744793
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction rax|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  118  <|@ instruction rbp|QWORD = LEA [rax|QWORD + 32] size: QWORD <|@ <|@
      nr  120  <|@ instruction CMPBRANCH (x: rbp|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4605510964398880109
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction MOV (x: [r15|QWORD + 440], y: rbp|QWORD) size: QWORD <|@ <|@
      nr  152  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 288] instr: 0 <|@ <|@
      nr  154  <|@ instruction MOV [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  156  <|@ instruction MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>;compressed} <|@ <|@
      nr  158  <|@ instruction MOV [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  160  <|@ instruction MOV [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  162  <|@ instruction MOV [rax|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  164  <|@ instruction rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  166  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 4605585062831744793
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  170  <|@ instruction MOV (x: [rax|QWORD[.] + 20], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  172  <|@ instruction rcx|DWORD[_] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  174  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr  176  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  178  <|@ instruction JUMP ~[] destination: B11 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B11" "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4605587348047262798
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  270  <|@ instruction rdx|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr  272  <|@ instruction r11|QWORD = UNCOMPRESSPOINTER (input: r11|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr  274  <|@ instruction rdx|QWORD = MOV [r11|QWORD + 208] size: QWORD <|@ <|@
      nr  276  <|@ instruction rcx|DWORD = MOV [rdx|QWORD + 20] size: DWORD <|@ <|@
      nr  278  <|@ instruction r8|DWORD = MOV [rax|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  280  <|@ instruction r9|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr  282  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: r9|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr  284  <|@ instruction r9|QWORD = MOVSXD rcx|DWORD size: QWORD <|@ <|@
      nr  286  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r8|QWORD + r9|QWORD * 1]) trueDestinationProbability: 0.5 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B45" 
    xhandlers
    flags 
    probability 4601083748419892302
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ instruction CMPCONSTBRANCH rcx|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B45 y: 32 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4601083748419892302
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  298  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: r8|QWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4596580148792521806
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction rcx|QWORD = MOV [r8|QWORD + 40] size: QWORD <|@ <|@
      nr  308  <|@ instruction r9|DWORD = MOV [rcx|QWORD] size: DWORD <|@ <|@
      nr  310  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  312  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B24" 
    successors "B23" "B26" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4602807799859017905
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  316  <|@ instruction CMPBRANCH (x: r9|DWORD, y: r10|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602807799859017905
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  320  <|@ instruction r11|DWORD = SHL r10|DWORD y: 3 size: DWORD <|@ <|@
      nr  322  <|@ instruction r11|DWORD = LEA [r11|DWORD + 8] size: DWORD <|@ <|@
      nr  324  <|@ instruction r11|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr  326  <|@ instruction r11|QWORD = MOV [rcx|QWORD + r11|QWORD * 1] size: QWORD <|@ <|@
      nr  328  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: r11|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B23 -> B25 falseDestination: B23 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B22" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4599230716294395707
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  332  <|@ instruction r10|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr  334  <|@ instruction JUMP ~[] destination: B24 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B27" 
    xhandlers
    flags 
    probability 4601083748419892302
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ instruction JUMP ~[] destination: B17 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B27" 
    xhandlers
    flags 
    probability 4596580148792521807
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  338  <|@ instruction MOV (x: [r8|QWORD + 32], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  340  <|@ instruction JUMP ~[] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B27" 
    xhandlers
    flags 
    probability 4596580148792521806
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  302  <|@ instruction JUMP ~[] destination: B20 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B17" "B25" "B20" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4605587348047262798
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" 
    xhandlers
    flags 
    probability 4604846135197064160
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction rbp|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  356  <|@ instruction JUMP ~[] destination: B28 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B49" "B54" 
    xhandlers
    flags 
    probability 4595548303301553864
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  518  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [rax|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.01987559010066231 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4595421491411700642
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction CMPCONSTBRANCH [rax|DWORD[_] * 8 + 8] trueDestinationProbability: 2.021089053783065E-6 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B56 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4595421478772878611
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  606  <|@ instruction rbp|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  608  <|@ instruction JUMP ~[] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B62" 
    successors "B65" "B58" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4595777537596400292
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  612  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] stack:88|QWORD[.] r9|DWORD rdi|DWORD rbx|QWORD[.] r11|QWORD[.] - - - - rbp|DWORD 
>@ <|@ instruction rax|DWORD[_] = MOV [r11|QWORD[.] + 24] size: DWORD state [bci:134] <|@ <|@
      nr  614  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  616  <|@ instruction TESTBRANCH (x: rax|DWORD[_], y: rax|DWORD[_]) trueDestinationProbability: 0.5880075530332061 condition: = trueDestination: B57 -> B65 falseDestination: B57 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4590110563079390205
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  620  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [rax|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.8692436604445373 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B62 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B57" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4576850562957400324
    begin_IR
      LIR
      nr  672  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  674  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] stack:88|QWORD[.] r9|DWORD rdi|DWORD rbx|QWORD[.] r11|QWORD[.] - - - - rbp|DWORD 
>@ <|@ instruction SAFEPOINT rax|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 thread: r15 state [bci:134] <|@ <|@
      nr  676  <|@ instruction rbp|DWORD = INC rbp|DWORD size: DWORD <|@ <|@
      nr  678  <|@ instruction r11|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  680  <|@ instruction JUMP ~[] destination: B62 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4592437312858669387
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  696  <|@ instruction stack:112|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  698  <|@ instruction stack:40|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  700  <|@ instruction stack:120|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  702  <|@ instruction rax|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  704  <|@ instruction r10|QWORD = MOV [r13|QWORD + 680] size: QWORD <|@ <|@
      nr  706  <|@ instruction r11|QWORD = MOV [r10|QWORD + 64] size: QWORD <|@ <|@
      nr  708  <|@ instruction rdi|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  710  <|@ instruction rsi|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  712  <|@ instruction rdi|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  714  <|@ instruction rdx|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  716  <|@ instruction r8|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  718  <|@ instruction r9|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  720  <|@ instruction rbx|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  722  <|@ instruction rax|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  724  <|@ instruction stack:36|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  726  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:648) [bci: 152]
stack: stack:120|QWORD[.] 
locals: stack:72|QWORD[.] stack:36|DWORD - stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD stack:96|QWORD[.] - - - stack:112|QWORD[.] - stack:40|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.]]) [] callTarget: HotSpotMethod<HashMap.newNode(int, Object, Object, HashMap$Node)> state [bci:152] <|@ <|@
      nr  728  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B67 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B72" 
    xhandlers
    flags 
    probability 4591660023639118941
    begin_IR
      LIR
      nr  730  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  732  <|@ instruction r11|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr  734  <|@ instruction r14|QWORD = MOVE stack:56|QWORD moveKind: QWORD <|@ <|@
      nr  736  <|@ instruction rbx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  738  <|@ instruction JUMP ~[] destination: B66 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4590594123464754032
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction rbp|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  362  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + rbp|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  364  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  366  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4590001153184595122
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  374  <|@ instruction r10|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  376  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  378  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4589467479932452103
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction r11|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  390  <|@ instruction MOV (x: [r11|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  392  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  394  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  396  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B64" "B60" 
    xhandlers
    flags 
    probability 4589398445432346844
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction stack:112|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  626  <|@ instruction stack:40|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  628  <|@ instruction stack:120|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  630  <|@ instruction stack:36|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  632  <|@ instruction rsi|DWORD[_] = MOV [rax|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  634  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  636  <|@ instruction CMPBRANCH (x: r10|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.9998932466496128 condition: = trueDestination: B59 -> B64 falseDestination: B59 -> B60 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B86" 
    xhandlers
    flags 
    probability 4589397940059341918
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  690  <|@ instruction r8|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr  692  <|@ instruction JUMP ~[] destination: B64 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4577371935537457006
    begin_IR
      LIR
      nr  740  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  742  <|@ instruction r11|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr  744  <|@ instruction rbx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  746  <|@ instruction rsi|QWORD[.+] = LEA [r11|QWORD[.] + 24] size: QWORD <|@ <|@
      nr  748  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  750  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B67 -> B68 falseDestination: B67 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" "B71" 
    xhandlers
    flags 
    probability 4576750104161816650
    begin_IR
      LIR
      nr  758  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  760  <|@ instruction r10|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  762  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  764  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    probability 4576190455923740329
    begin_IR
      LIR
      nr  774  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  776  <|@ instruction r8|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  778  <|@ instruction MOV (x: [r8|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  780  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  782  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  784  <|@ instruction r14|QWORD = MOVE stack:56|QWORD moveKind: QWORD <|@ <|@
      nr  786  <|@ instruction JUMP ~[] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    probability 4575897384022324722
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction JUMP ~[] destination: B30 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4575895921484393205
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction rbp|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  126  <|@ instruction stack:36|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  128  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>} <|@ <|@
      nr  130  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: stack:72|QWORD[.] stack:36|DWORD rcx|QWORD[.] stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD rbx|QWORD[.] - stack:40|DWORD - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7fba62ccef80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:29] <|@ <|@
      nr  132  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: stack:72|QWORD[.] stack:36|DWORD rcx|QWORD[.] stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD rbx|QWORD[.] - stack:40|DWORD - - - - 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:29] <|@ <|@
      nr  134  <|@ instruction r10|DWORD[_] = MOVE stack:100|DWORD[_] moveKind: DWORD <|@ <|@
      nr  136  <|@ instruction r14|QWORD = MOVE stack:56|QWORD moveKind: QWORD <|@ <|@
      nr  138  <|@ instruction r13|QWORD = MOVE stack:48|QWORD moveKind: QWORD <|@ <|@
      nr  140  <|@ instruction rdi|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  142  <|@ instruction rdx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  144  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  146  <|@ instruction JUMP ~[] destination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4575188794187971253
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  382  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  384  <|@ instruction JUMP ~[] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" "B33" "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4605587348047262798
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  402  <|@ instruction MOV (x: [rbx|QWORD[.] + rbp|DWORD * 4 + 16], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  404  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + rbp|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  406  <|@ instruction rsi|QWORD[*] = XOR (x: rsi|QWORD[.+], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  408  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4604846135197064160
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  418  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4604179043631885386
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction r14|QWORD = MOVE stack:56|QWORD moveKind: QWORD <|@ <|@
      nr  430  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + rbp|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  432  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.+] y: 9 size: QWORD <|@ <|@
      nr  434  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B88" 
    xhandlers
    flags 
    probability 4603578661223224489
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  440  <|@ instruction JUMP ~[] destination: B39 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B88" 
    xhandlers
    flags 
    probability 4590594123464754032
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  414  <|@ instruction JUMP ~[] destination: B35 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B88" 
    xhandlers
    flags 
    probability 4590001153184595122
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction JUMP ~[] destination: B37 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4589467479932452103
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  446  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B88" 
    xhandlers
    flags 
    probability 4588806327720511347
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction JUMP ~[] destination: B41 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4574334916984542422
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  456  <|@ instruction MOVB [rsi|QWORD[*] + r14|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  458  <|@ instruction r10|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  460  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: r14|QWORD) size: QWORD <|@ <|@
      nr  462  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B88" 
    xhandlers
    flags 
    probability 4573566427501456474
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  476  <|@ instruction r11|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  478  <|@ instruction MOV (x: [r11|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  480  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  482  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  486  <|@ instruction JUMP ~[] destination: B44 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4570262383476918658
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  522  <|@ instruction stack:36|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  524  <|@ instruction rsi|DWORD[_] = MOV [rax|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  526  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  528  <|@ instruction CMPBRANCH (x: r10|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.9854570809572428 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B86" 
    xhandlers
    flags 
    probability 4570144353713859813
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  532  <|@ instruction r8|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  534  <|@ instruction JUMP ~[] destination: B50 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 4564966382317228292
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   22  <|@ instruction stack:36|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   24  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr   26  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:635) [bci: 20]
locals: stack:72|QWORD[.] stack:36|DWORD stack:80|QWORD[.] stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.resize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:20] <|@ <|@
      nr   28  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:635) [bci: 23]
stack: Object[null] 
locals: stack:72|QWORD[.] stack:36|DWORD stack:80|QWORD[.] stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD - - - - - - - 
>@ <|@ instruction rsi|DWORD = MOV [rax|QWORD[.] + 12] size: DWORD state [bci:23] <|@ <|@
      nr   30  <|@ instruction r10|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction rbx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction rdi|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr   36  <|@ instruction r9|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr   38  <|@ instruction r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction rcx|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction rdx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr   44  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction JUMP ~[] destination: B1 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B72" 
    xhandlers
    flags 
    probability 4562617473904064804
    begin_IR
      LIR
      nr  752  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  754  <|@ instruction r14|QWORD = MOVE stack:56|QWORD moveKind: QWORD <|@ <|@
      nr  756  <|@ instruction JUMP ~[] destination: B68 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    probability 4562093595080792590
    begin_IR
      LIR
      nr  766  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  768  <|@ instruction r14|QWORD = MOVE stack:56|QWORD moveKind: QWORD <|@ <|@
      nr  770  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  772  <|@ instruction JUMP ~[] destination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B66" "B68" "B71" "B70" 
    successors "B73" "B74" 
    xhandlers
    flags 
    probability 4592437312858669387
    begin_IR
      LIR
      nr  788  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  790  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  792  <|@ instruction MOV (x: [r11|QWORD[.] + 24], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  794  <|@ instruction rsi|QWORD[*] = XOR (x: r11|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  796  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    probability 4591660023639118941
    begin_IR
      LIR
      nr  802  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  804  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    probability 4590960463341523540
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  812  <|@ instruction r11|QWORD[*] = SHR r11|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  814  <|@ instruction CMPCONSTBRANCH [r11|QWORD[*] + r14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B83" 
    xhandlers
    flags 
    probability 4590330859073687679
    begin_IR
      LIR
      nr  816  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  818  <|@ instruction JUMP ~[] destination: B77 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B83" 
    xhandlers
    flags 
    probability 4577371935537457006
    begin_IR
      LIR
      nr  798  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  800  <|@ instruction JUMP ~[] destination: B73 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B83" 
    xhandlers
    flags 
    probability 4576750104161816649
    begin_IR
      LIR
      nr  806  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  808  <|@ instruction JUMP ~[] destination: B75 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    probability 4576190455923740328
    begin_IR
      LIR
      nr  820  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  822  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  824  <|@ instruction CMPCONSTBRANCH [r11|QWORD[*] + r14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B83" 
    xhandlers
    flags 
    probability 4575686772509471639
    begin_IR
      LIR
      nr  826  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  828  <|@ instruction JUMP ~[] destination: B79 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    probability 4561198157899870475
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  832  <|@ instruction MOVB [r11|QWORD[*] + r14|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  834  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  836  <|@ instruction r11|QWORD[*] = ADD (x: r11|QWORD[*], y: r14|QWORD) size: QWORD <|@ <|@
      nr  838  <|@ instruction TESTBRANCH (x: rsi|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    probability 4560392264437040573
    begin_IR
      LIR
      nr  848  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  850  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  852  <|@ instruction MOV (x: [rdx|QWORD + rsi|QWORD * 1 - 8], y: r11|QWORD[*]) size: QWORD <|@ <|@
      nr  854  <|@ instruction rsi|QWORD = LEA [rsi|QWORD - 8] size: QWORD <|@ <|@
      nr  856  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  858  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B88" 
    xhandlers
    flags 
    probability 4559287139136259037
    begin_IR
      LIR
      nr  464  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  466  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  468  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  472  <|@ instruction JUMP ~[] destination: B43 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4553315745025075769
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  182  <|@ instruction stack:36|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  184  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  186  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 40] size: QWORD <|@ <|@
      nr  188  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4553268943811267021
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  208  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 296] instr: 0 <|@ <|@
      nr  210  <|@ instruction MOV [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  212  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>;compressed} <|@ <|@
      nr  214  <|@ instruction MOV [rsi|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  216  <|@ instruction MOV [rsi|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  218  <|@ instruction MOV [rsi|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  220  <|@ instruction MOV [rsi|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  222  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  224  <|@ instruction stack:64|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  226  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4553315745025075769
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  230  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  234  <|@ instruction rdx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  236  <|@ instruction rcx|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  238  <|@ instruction r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  240  <|@ instruction r9|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  242  <|@ instruction stack:112|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  244  <|@ st <@st|@live-base-pointers: []
java.util.LinkedHashMap$Entry.<init>(LinkedHashMap.java:208) [bci: 6]
locals: - - - - - 
java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 9]
stack: stack:112|QWORD[.] 
locals: stack:72|QWORD[.] stack:36|DWORD stack:80|QWORD[.] stack:88|QWORD[.] Object[null] - 
java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stack: stack:96|QWORD[.] stack:60|DWORD 
locals: stack:72|QWORD[.] - - - - stack:32|DWORD - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.]] [] callTarget: HotSpotMethod<HashMap$Node.<init>(int, Object, Object, HashMap$Node)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:6, 9, 56] <|@ <|@
      nr  246  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  248  <|@ instruction rdx|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr  250  <|@ st <@st|@live-base-pointers: []
java.util.LinkedHashMap.newNode(LinkedHashMap.java:283) [bci: 17]
locals: - - - - - stack:112|QWORD[.] 
java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stack: stack:96|QWORD[.] stack:60|DWORD 
locals: stack:72|QWORD[.] - - - - stack:32|DWORD - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<LinkedHashMap.linkNodeAtEnd(LinkedHashMap$Entry)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:17, 56] <|@ <|@
      nr  252  <|@ instruction rax|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr  254  <|@ instruction r14|QWORD = MOVE stack:56|QWORD moveKind: QWORD <|@ <|@
      nr  256  <|@ instruction r13|QWORD = MOVE stack:48|QWORD moveKind: QWORD <|@ <|@
      nr  258  <|@ instruction r11|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr  260  <|@ instruction rbx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  262  <|@ instruction rdi|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  264  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    probability 4546075572092099182
    begin_IR
      LIR
      nr  840  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  842  <|@ instruction rsi|QWORD = MOVE r11|QWORD[*] moveKind: QWORD <|@ <|@
      nr  844  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  846  <|@ instruction JUMP ~[] destination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B73" "B75" "B77" "B79" "B82" "B81" 
    successors "B84" "B85" 
    xhandlers
    flags 
    probability 4592437312858669387
    begin_IR
      LIR
      nr  860  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  862  <|@ instruction CMPCONSTBRANCH stack:40|DWORD trueDestinationProbability: 0.9999886211240704 condition: < trueDestination: B83 -> B84 falseDestination: B83 -> B85 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" 
    xhandlers
    flags 
    probability 4592437224411893480
    begin_IR
      LIR
      nr  864  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  866  <|@ instruction r8|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr  868  <|@ instruction JUMP ~[] destination: B84 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B50" "B55" "B64" "B84" "B85" "B63" "B53" 
    successors "B87" "B100" 
    xhandlers
    flags 
    probability 4595548303301553864
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  886  <|@ instruction TESTBRANCH (x: r8|QWORD[.], y: r8|QWORD[.]) trueDestinationProbability: 0.6091185940042786 condition: = trueDestination: B86 -> B87 falseDestination: B86 -> B100 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B88" 
    xhandlers
    flags 
    probability 4592437118697206803
    begin_IR
      LIR
      nr  888  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  892  <|@ instruction JUMP ~[] destination: B87 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B35" "B87" "B43" "B44" "B41" "B39" "B37" 
    successors "B89" "B90" 
    xhandlers
    flags 
    probability 4606558935301518032
    begin_IR
      LIR
      nr  894  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  896  <|@ instruction INC [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  898  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  900  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, ~y: [rsi|QWORD[.] + 20]) size: DWORD <|@ <|@
      nr  902  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: rax|DWORD) size: DWORD <|@ <|@
      nr  904  <|@ instruction CMPBRANCH (x: rax|DWORD, y: [rsi|QWORD[.] + 28]) trueDestinationProbability: 7.853038846579175E-4 condition: > trueDestination: B88 -> B89 falseDestination: B88 -> B90 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B91" 
    xhandlers
    flags 
    probability 4606552351536966788
    begin_IR
      LIR
      nr  920  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  922  <|@ instruction r13|QWORD = MOVE stack:48|QWORD moveKind: QWORD <|@ <|@
      nr  924  <|@ instruction JUMP ~[] destination: B90 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" "B89" 
    successors "B92" "B93" "B99" 
    xhandlers
    flags 
    probability 4606558935301518032
    begin_IR
      LIR
      nr  926  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  928  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~r13|QWORD - keyConstants: [meta{HotSpotType<Ljava/util/HashMap;, resolved>}, meta{HotSpotType<Ljava/util/LinkedHashMap;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/replacements/SnippetTemplate$LRUCache;, resolved>}] keyTargets: [B91 -> B92, B91 -> B93, B91 -> B93] defaultTarget: B91 -> B99 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B97" 
    xhandlers
    flags 
    probability 4606555909645339483
    begin_IR
      LIR
      nr  930  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  932  <|@ instruction JUMP ~[] destination: B92 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B92" "B94" "B96" 
    successors 
    xhandlers
    flags 
    probability 4606558935301518031
    begin_IR
      LIR
      nr  982  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  984  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  986  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B101" "B119" 
    xhandlers
    flags 
    probability 4589652288651159933
    begin_IR
      LIR
      nr 1006  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1008  <|@ instruction r13|QWORD = MOVE stack:48|QWORD moveKind: QWORD <|@ <|@
      nr 1010  <|@ instruction r9|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1012  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1014  <|@ instruction r10|DWORD[_] = MOV [r8|QWORD[.] + 20] size: DWORD <|@ <|@
      nr 1016  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.9999962001170364 condition: = trueDestination: B100 -> B101 falseDestination: B100 -> B119 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B102" "B103" 
    xhandlers
    flags 
    probability 4589652269697845341
    begin_IR
      LIR
      nr 1018  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1020  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B103 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B108" 
    xhandlers
    flags 
    probability 4589138949298219176
    begin_IR
      LIR
      nr 1022  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1026  <|@ instruction JUMP ~[] destination: B102 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" "B105" 
    xhandlers
    flags 
    probability 4574630580609171603
    begin_IR
      LIR
      nr 1028  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1030  <|@ instruction r11|QWORD[.+] = LEA [r8|QWORD[.] + 20] size: QWORD <|@ <|@
      nr 1032  <|@ instruction r11|DWORD[_] = MOV [r11|QWORD[.+]] size: DWORD <|@ <|@
      nr 1034  <|@ instruction TESTBRANCH (x: r11|DWORD[_], y: r11|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B103 -> B104 falseDestination: B103 -> B105 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B106" "B107" 
    xhandlers
    flags 
    probability 4573832524763622737
    begin_IR
      LIR
      nr 1042  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1044  <|@ instruction r9|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr 1046  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr 1048  <|@ instruction TESTBRANCH (x: r9|QWORD, y: r9|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B105 -> B106 falseDestination: B105 -> B107 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B108" 
    xhandlers
    flags 
    probability 4573114274502628758
    begin_IR
      LIR
      nr 1060  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1062  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr 1064  <|@ instruction MOV (x: [rcx|QWORD + r9|QWORD * 1 - 8], y: r11|QWORD[.]) size: QWORD <|@ <|@
      nr 1066  <|@ instruction r11|QWORD = LEA [r9|QWORD - 8] size: QWORD <|@ <|@
      nr 1068  <|@ instruction MOV (x: [r15|QWORD + 40], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1072  <|@ instruction JUMP ~[] destination: B107 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B91" 
    xhandlers
    flags 
    probability 4559880998172045651
    begin_IR
      LIR
      nr  906  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  908  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  910  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  912  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:669) [bci: 288]
locals: stack:72|QWORD[.] - - - - stack:32|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.resize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:288] <|@ <|@
      nr  914  <|@ instruction r13|QWORD = MOVE stack:48|QWORD moveKind: QWORD <|@ <|@
      nr  916  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  918  <|@ instruction JUMP ~[] destination: B89 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B108" 
    xhandlers
    flags 
    probability 4559523670035962382
    begin_IR
      LIR
      nr 1036  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1040  <|@ instruction JUMP ~[] destination: B104 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B108" 
    xhandlers
    flags 
    probability 4558885225359523289
    begin_IR
      LIR
      nr 1050  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1052  <|@ instruction rsi|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1054  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr 1058  <|@ instruction JUMP ~[] destination: B106 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B102" "B104" "B107" "B106" 
    successors "B109" "B110" 
    xhandlers
    flags 
    probability 4589652269697845341
    begin_IR
      LIR
      nr 1074  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1024  <|@ instruction r11|DWORD[_] = MOVE stack:100|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1076  <|@ instruction MOV (x: [r8|QWORD[.] + 20], y: r11|DWORD[_]) size: DWORD <|@ <|@
      nr 1078  <|@ instruction rsi|QWORD[*] = XOR (x: r8|QWORD[.], y: stack:88|QWORD[.]) size: QWORD <|@ <|@
      nr 1080  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B108 -> B109 falseDestination: B108 -> B110 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" "B112" 
    xhandlers
    flags 
    probability 4589138949298219176
    begin_IR
      LIR
      nr 1088  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1090  <|@ instruction r11|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1092  <|@ instruction TESTBRANCH (x: r11|QWORD[.], y: r11|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B110 -> B111 falseDestination: B110 -> B112 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B113" "B114" 
    xhandlers
    flags 
    probability 4588241136471976702
    begin_IR
      LIR
      nr 1100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1102  <|@ instruction r14|QWORD = MOVE stack:56|QWORD moveKind: QWORD <|@ <|@
      nr 1104  <|@ instruction rsi|QWORD[*] = SHR r8|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr 1106  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B112 -> B113 falseDestination: B112 -> B114 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B120" 
    xhandlers
    flags 
    probability 4587433104928358475
    begin_IR
      LIR
      nr 1108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1112  <|@ instruction JUMP ~[] destination: B113 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B120" 
    xhandlers
    flags 
    probability 4574630580609171603
    begin_IR
      LIR
      nr 1082  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1086  <|@ instruction JUMP ~[] destination: B109 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B120" 
    xhandlers
    flags 
    probability 4573832524763622738
    begin_IR
      LIR
      nr 1094  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1098  <|@ instruction JUMP ~[] destination: B111 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B115" "B116" 
    xhandlers
    flags 
    probability 4573114274502628759
    begin_IR
      LIR
      nr 1114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1116  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr 1118  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B114 -> B115 falseDestination: B114 -> B116 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B120" 
    xhandlers
    flags 
    probability 4572467849267734178
    begin_IR
      LIR
      nr 1120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1124  <|@ instruction JUMP ~[] destination: B115 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B117" "B118" 
    xhandlers
    flags 
    probability 4558310625150728107
    begin_IR
      LIR
      nr 1126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1128  <|@ instruction MOVB [rsi|QWORD[*] + r14|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr 1130  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr 1132  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: r14|QWORD) size: QWORD <|@ <|@
      nr 1134  <|@ instruction TESTBRANCH (x: rdx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B116 -> B117 falseDestination: B116 -> B118 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B120" 
    xhandlers
    flags 
    probability 4557793484962812442
    begin_IR
      LIR
      nr 1146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1148  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr 1150  <|@ instruction MOV (x: [rbx|QWORD + rdx|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr 1152  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr 1154  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1158  <|@ instruction JUMP ~[] destination: B118 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B94" "B95" 
    xhandlers
    flags 
    probability 4554832167497868566
    begin_IR
      LIR
      nr  934  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  936  <|@ instruction rdi|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  938  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.4891304347826087 condition: = trueDestination: B93 -> B94 falseDestination: B93 -> B95 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B96" "B98" 
    xhandlers
    flags 
    probability 4550463275345577801
    begin_IR
      LIR
      nr  944  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  946  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  948  <|@ instruction rdx|DWORD[_] = MOV [rsi|QWORD[.] + 52] size: DWORD <|@ <|@
      nr  950  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:670) [bci: 292]
locals: rsi|QWORD[.] - - - - rdi|DWORD - - - - - - - 
>@ <|@ instruction NULLCHECK [rdx|DWORD[_] * 8] state [bci:292] <|@ <|@
      nr  952  <|@ instruction rbx|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  954  <|@ instruction rax|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr  956  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rax|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr  958  <|@ instruction rbx|QWORD = MOV [rbx|QWORD + 872] size: QWORD <|@ <|@
      nr  960  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  962  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  964  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  966  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  968  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  970  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  972  <|@ instruction stack:112|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  974  <|@ st <@st|@live-base-pointers: []
java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 15]
locals: stack:72|QWORD[.] - stack:112|QWORD[.] - 
java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
locals: - - - - - - - - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<LinkedHashMap.removeEldestEntry(Map$Entry)> state [bci:15, 295] <|@ <|@
      nr  976  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B95 -> B96 falseDestination: B95 -> B98 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B97" 
    xhandlers
    flags 
    probability 4550463275345577801
    begin_IR
      LIR
      nr  978  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  980  <|@ instruction JUMP ~[] destination: B96 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B97" 
    xhandlers
    flags 
    probability 4550193860395418340
    begin_IR
      LIR
      nr  940  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  942  <|@ instruction JUMP ~[] destination: B94 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B120" 
    xhandlers
    flags 
    probability 4543399067768740112
    begin_IR
      LIR
      nr 1136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1138  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1140  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr 1144  <|@ instruction JUMP ~[] destination: B117 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B119" "B109" "B117" "B118" "B115" "B113" "B111" 
    successors 
    xhandlers
    flags 
    probability 4589652288651159933
    begin_IR
      LIR
      nr 1168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1164  <|@ instruction r13|QWORD = MOVE stack:48|QWORD moveKind: QWORD <|@ <|@
      nr 1170  <|@ instruction rbx|QWORD = MOV [r13|QWORD + 688] size: QWORD <|@ <|@
      nr 1172  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr 1174  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr 1176  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1178  <|@ instruction rdx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1180  <|@ instruction stack:112|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1182  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:663) [bci: 253]
locals: - - - - - - - - - - - - stack:112|QWORD[.] 
>@ <|@ instruction - = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<HashMap.afterNodeAccess(HashMap$Node)> state [bci:253] <|@ <|@
      nr 1184  <|@ instruction rax|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1186  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4542678729597855531
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  538  <|@ instruction stack:112|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  540  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: stack:72|QWORD[.] stack:36|DWORD rcx|QWORD[.] stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD stack:96|QWORD[.] - stack:40|DWORD - - - - 
>@ <|@ instruction rsi|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD state [bci:29] <|@ <|@
      nr  542  <|@ instruction rdx|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr  544  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr  546  <|@ instruction rbx|QWORD = MOV [rsi|QWORD + 464] size: QWORD <|@ <|@
      nr  548  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  550  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  552  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  554  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:641) [bci: 91]
locals: stack:72|QWORD[.] stack:36|DWORD stack:80|QWORD[.] stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD stack:96|QWORD[.] stack:112|QWORD[.] - - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:91] <|@ <|@
      nr  556  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B86" 
    xhandlers
    flags 
    probability 4542678729597855531
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  572  <|@ instruction r8|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr  574  <|@ instruction JUMP ~[] destination: B53 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B63" 
    xhandlers
    flags 
    probability 4529894057192690854
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  640  <|@ instruction r11|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr  642  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: stack:72|QWORD[.] stack:36|DWORD rcx|QWORD[.] stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD stack:96|QWORD[.] r11|QWORD[.] - - - - stack:40|DWORD 
>@ <|@ instruction rsi|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD state [bci:134] <|@ <|@
      nr  644  <|@ instruction rdx|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr  646  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr  648  <|@ instruction rbx|QWORD = MOV [rsi|QWORD + 464] size: QWORD <|@ <|@
      nr  650  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  652  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  654  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  656  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:654) [bci: 203]
locals: stack:72|QWORD[.] stack:36|DWORD stack:80|QWORD[.] stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD stack:96|QWORD[.] - - - stack:112|QWORD[.] - stack:40|DWORD 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:203] <|@ <|@
      nr  658  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B86" 
    xhandlers
    flags 
    probability 4529894057192690854
    begin_IR
      LIR
      nr  682  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  684  <|@ instruction r8|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr  686  <|@ instruction JUMP ~[] destination: B63 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4523100981620127249
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction stack:64|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  194  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>} <|@ <|@
      nr  196  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: stack:72|QWORD[.] stack:36|DWORD stack:80|QWORD[.] stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD stack:96|QWORD[.] - stack:40|DWORD - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7fba62ccef80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:29] <|@ <|@
      nr  198  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: stack:72|QWORD[.] stack:36|DWORD stack:80|QWORD[.] stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD stack:96|QWORD[.] - stack:40|DWORD - - - - 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:29] <|@ <|@
      nr  200  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  202  <|@ instruction JUMP ~[] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" 
    xhandlers
    flags 
    probability 4518403274531071726
    begin_IR
      LIR
      nr  870  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  872  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  874  <|@ instruction rdx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  876  <|@ instruction rcx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  878  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:650) [bci: 169]
locals: stack:72|QWORD[.] - - stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD - - - - stack:112|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<HashMap.treeifyBin(HashMap$Node[], int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:169] <|@ <|@
      nr  880  <|@ instruction r8|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr  882  <|@ instruction JUMP ~[] destination: B85 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B86" 
    xhandlers
    flags 
    probability 4510226010095555986
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  582  <|@ instruction stack:112|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  584  <|@ instruction stack:36|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  586  <|@ instruction rsi|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr  588  <|@ instruction rdx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  590  <|@ instruction rcx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  592  <|@ instruction r8|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  594  <|@ instruction r9|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  596  <|@ instruction rdi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  598  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:644) [bci: 123]
locals: stack:72|QWORD[.] - - stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|QWORD[.], rdi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap$TreeNode.putTreeVal(HashMap, HashMap$Node[], int, Object, Object)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:123] <|@ <|@
      nr  600  <|@ instruction r8|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  602  <|@ instruction JUMP ~[] destination: B55 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B120" 
    xhandlers
    flags 
    probability 4508568125070994604
    begin_IR
      LIR
      nr 1160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1162  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:659) [bci: 222]
locals: stack:72|QWORD[.] - - stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD - - - - r8|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r10|DWORD[_] * 8] state [bci:222] <|@ <|@
      nr 1166  <|@ instruction JUMP ~[] destination: B119 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction r11|QWORD = MOVE input: long[5780|0x1694] <|@ <|@
      nr  506  <|@ instruction r10|DWORD = MOVE input: int[-51507|0xffffffffffff36cd] <|@ <|@
      nr  508  <|@ instruction stack:36|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  510  <|@ instruction r8|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  512  <|@ instruction JUMP ~[] destination: B47 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  662  <|@ instruction r8|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr  664  <|@ instruction rbp|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  666  <|@ instruction MOV [r15|QWORD + 1156] y: -157971 size: DWORD <|@ <|@
      nr  668  <|@ instruction MOV [r15|QWORD + 1168] y: 1300 size: QWORD <|@ <|@
      nr  670  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:654) [bci: 206]
stack: int[0|0x0] 
locals: stack:72|QWORD[.] stack:36|DWORD stack:80|QWORD[.] stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD stack:96|QWORD[.] - - - r8|QWORD[.] - rbp|DWORD 
>@ <|@ instruction DEOPT info [bci:206] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1190  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1192  <|@ instruction stack:36|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr 1194  <|@ instruction r8|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1196  <|@ instruction r10|DWORD = MOVE input: int[-75547|0xfffffffffffed8e5] <|@ <|@
      nr 1198  <|@ instruction JUMP ~[] destination: B121 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B121" "B47" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1202  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1204  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1206  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: stack:72|QWORD[.] stack:36|DWORD stack:80|QWORD[.] stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD stack:96|QWORD[.] - r8|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:29] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  492  <|@ instruction JUMP ~[] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  998  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1000  <|@ instruction MOV [r15|QWORD + 1156] y: -61235 size: DWORD <|@ <|@
      nr 1002  <|@ instruction MOV [r15|QWORD + 1168] y: 8980 size: QWORD <|@ <|@
      nr 1004  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:670) [bci: 292]
locals: stack:72|QWORD[.] - - - - stack:32|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:292] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction JUMP ~[] destination: B26 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B26" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction rbp|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  496  <|@ instruction MOV [r15|QWORD + 1156] y: -82987 size: DWORD <|@ <|@
      nr  498  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  500  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stack: stack:96|QWORD[.] rbp|DWORD rax|QWORD[.] 
locals: stack:72|QWORD[.] - - - - stack:32|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:59] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  558  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  560  <|@ instruction r11|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr  562  <|@ instruction rbx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  564  <|@ instruction MOV [r15|QWORD + 1156] y: -153363 size: DWORD <|@ <|@
      nr  566  <|@ instruction MOV [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  568  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:641) [bci: 94]
stack: int[0|0x0] 
locals: stack:72|QWORD[.] stack:36|DWORD stack:80|QWORD[.] stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD rbx|QWORD[.] r11|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:94] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  988  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  990  <|@ instruction rdx|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr  992  <|@ instruction MOV [r15|QWORD + 1156] y: -161299 size: DWORD <|@ <|@
      nr  994  <|@ instruction MOV [r15|QWORD + 1168] y: 10260 size: QWORD <|@ <|@
      nr  996  <|@ st <@st|@live-base-pointers: []
java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 18]
stack: rax|DWORD 
locals: stack:72|QWORD[.] - rdx|QWORD[.] - 
java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
locals: - - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:18, 295] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction MOV [r15|QWORD + 1156] y: -129299 size: DWORD <|@ <|@
      nr   58  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:634) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] r8|QWORD[.] r9|DWORD rdi|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #21         // table:java.util.HashMap$Node[]
     4: dup           
     5: astore        6
     7: ifnull        19
    10: aload         6
    12: arraylength   
    13: dup           
    14: istore        8
    16: ifne          29
    19: aload_0       
    20: invokevirtual #23         // resize:()java.util.HashMap$Node[]
    23: dup           
    24: astore        6
    26: arraylength   
    27: istore        8
    29: aload         6
    31: iload         8
    33: iconst_1      
    34: isub          
    35: iload_1       
    36: iand          
    37: dup           
    38: istore        9
    40: aaload        
    41: dup           
    42: astore        7
    44: ifnonnull     63
    47: aload         6
    49: iload         9
    51: aload_0       
    52: iload_1       
    53: aload_2       
    54: aload_3       
    55: aconst_null   
    56: invokevirtual #40         // newNode:(int, java.lang.Object, java.lang.Object, java.util.HashMap$Node)java.util.HashMap$Node
    59: aastore       
    60: goto          259
    63: aload         7
    65: getfield      #35         // java.util.HashMap$Node.hash:int
    68: iload_1       
    69: if_icmpne     104
    72: aload         7
    74: getfield      #36         // java.util.HashMap$Node.key:java.lang.Object
    77: dup           
    78: astore        11
    80: aload_2       
    81: if_acmpeq     97
    84: aload_2       
    85: ifnull        104
    88: aload_2       
    89: aload         11
    91: invokevirtual #37         // java.lang.Object.equals:(java.lang.Object)boolean
    94: ifeq          104
    97: aload         7
    99: astore        10
   101: goto          222
   104: aload         7
   106: instanceof    #180        // java.util.HashMap$TreeNode
   109: ifeq          131
   112: aload         7
   114: checkcast     #180        // java.util.HashMap$TreeNode
   117: aload_0       
   118: aload         6
   120: iload_1       
   121: aload_2       
   122: aload_3       
   123: invokevirtual #41         // java.util.HashMap$TreeNode.putTreeVal:(java.util.HashMap, java.util.HashMap$Node[], int, java.lang.Object, java.lang.Object)java.util.HashMap$TreeNode
   126: astore        10
   128: goto          222
   131: iconst_0      
   132: istore        12
   134: aload         7
   136: getfield      #38         // java.util.HashMap$Node.next:java.util.HashMap$Node
   139: dup           
   140: astore        10
   142: ifnonnull     175
   145: aload         7
   147: aload_0       
   148: iload_1       
   149: aload_2       
   150: aload_3       
   151: aconst_null   
   152: invokevirtual #40         // newNode:(int, java.lang.Object, java.lang.Object, java.util.HashMap$Node)java.util.HashMap$Node
   155: putfield      #38         // java.util.HashMap$Node.next:java.util.HashMap$Node
   158: iload         12
   160: bipush        7
   162: if_icmplt     222
   165: aload_0       
   166: aload         6
   168: iload_1       
   169: invokevirtual #42         // treeifyBin:(java.util.HashMap$Node[], int)void
   172: goto          222
   175: aload         10
   177: getfield      #35         // java.util.HashMap$Node.hash:int
   180: iload_1       
   181: if_icmpne     212
   184: aload         10
   186: getfield      #36         // java.util.HashMap$Node.key:java.lang.Object
   189: dup           
   190: astore        11
   192: aload_2       
   193: if_acmpeq     222
   196: aload_2       
   197: ifnull        212
   200: aload_2       
   201: aload         11
   203: invokevirtual #37         // java.lang.Object.equals:(java.lang.Object)boolean
   206: ifeq          212
   209: goto          222
   212: aload         10
   214: astore        7
   216: iinc          
   219: goto          134
   222: aload         10
   224: ifnull        259
   227: aload         10
   229: getfield      #34         // java.util.HashMap$Node.value:java.lang.Object
   232: astore        12
   234: iload         4
   236: ifeq          244
   239: aload         12
   241: ifnonnull     250
   244: aload         10
   246: aload_3       
   247: putfield      #34         // java.util.HashMap$Node.value:java.lang.Object
   250: aload_0       
   251: aload         10
   253: invokevirtual #43         // afterNodeAccess:(java.util.HashMap$Node)void
   256: aload         12
   258: areturn       
   259: aload_0       
   260: dup           
   261: getfield      #44         // modCount:int
   264: iconst_1      
   265: iadd          
   266: putfield      #44         // modCount:int
   269: aload_0       
   270: dup           
   271: getfield      #32         // size:int
   274: iconst_1      
   275: iadd          
   276: dup_x1        
   277: putfield      #32         // size:int
   280: aload_0       
   281: getfield      #17         // threshold:int
   284: if_icmple     292
   287: aload_0       
   288: invokevirtual #23         // resize:()java.util.HashMap$Node[]
   291: pop           
   292: aload_0       
   293: iload         5
   295: invokevirtual #45         // afterNodeInsertion:(boolean)void
   298: aconst_null   
   299: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After RedundantMoveElimination"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|DWORD, rdi|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@21849dd slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:72|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction stack:80|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction stack:88|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   12  <|@ instruction stack:28|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   14  <|@ instruction stack:32|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr   16  <|@ instruction rbx|DWORD[_] = MOV [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   18  <|@ instruction TESTBRANCH (x: rbx|DWORD[_], y: rbx|DWORD[_]) trueDestinationProbability: 0.0015880438063265454 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607168114973028567
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction rax|DWORD = MOV [rbx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   52  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607168114973028567
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr   66  <|@ instruction r10|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   68  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B1" 
    successors "B6" "B121" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   72  <|@ instruction stack:96|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   74  <|@ instruction rax|DWORD = MOV [rbx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   76  <|@ instruction r11|DWORD = MOV [rbx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   78  <|@ instruction rbp|DWORD = DEC r10|DWORD size: DWORD <|@ <|@
      nr   80  <|@ instruction rbp|DWORD = AND (x: rdx|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr   82  <|@ instruction CMPBRANCH (x: rax|DWORD, y: rbp|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B121 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B48" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction stack:40|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   88  <|@ instruction rax|DWORD[_] = MOV [rbx|QWORD[.] + rbp|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   90  <|@ instruction r13|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   92  <|@ instruction r14|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr   94  <|@ instruction r13|QWORD = UNCOMPRESSPOINTER (input: r13|DWORD, ~baseRegister: r14|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr   96  <|@ instruction stack:48|QWORD = MOVE r13|QWORD moveKind: QWORD <|@ <|@
      nr   98  <|@ instruction r14|QWORD = MOVE input: long[140438306553856|0x7fba57600000] <|@ <|@
      nr  100  <|@ instruction stack:56|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr  102  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  104  <|@ instruction stack:100|DWORD[_] = MOVE r10|DWORD[_] moveKind: DWORD <|@ <|@
      nr  106  <|@ instruction TESTBRANCH (x: rax|DWORD[_], y: rax|DWORD[_]) trueDestinationProbability: 0.8229115724385652 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B12" "B47" 
    xhandlers
    flags 
    probability 4605587348047262798
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction stack:60|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  112  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~r13|QWORD - keyConstants: [meta{HotSpotType<Ljava/util/HashMap;, resolved>}, meta{HotSpotType<Ljava/util/LinkedHashMap;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/replacements/SnippetTemplate$LRUCache;, resolved>}] keyTargets: [B7 -> B8, B7 -> B12, B7 -> B12] defaultTarget: B7 -> B47 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4605585062831744793
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction rax|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  118  <|@ instruction rbp|QWORD = LEA [rax|QWORD + 32] size: QWORD <|@ <|@
      nr  120  <|@ instruction CMPBRANCH (x: rbp|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4605510964398880109
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction MOV (x: [r15|QWORD + 440], y: rbp|QWORD) size: QWORD <|@ <|@
      nr  152  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 288] instr: 0 <|@ <|@
      nr  154  <|@ instruction MOV [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  156  <|@ instruction MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>;compressed} <|@ <|@
      nr  158  <|@ instruction MOV [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  160  <|@ instruction MOV [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  162  <|@ instruction MOV [rax|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  164  <|@ instruction rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  166  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 4605585062831744793
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  170  <|@ instruction MOV (x: [rax|QWORD[.] + 20], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  172  <|@ instruction rcx|DWORD[_] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  174  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr  176  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  178  <|@ instruction JUMP ~[] destination: B11 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B11" "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4605587348047262798
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  270  <|@ instruction rdx|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr  272  <|@ instruction r11|QWORD = UNCOMPRESSPOINTER (input: r11|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr  274  <|@ instruction rdx|QWORD = MOV [r11|QWORD + 208] size: QWORD <|@ <|@
      nr  276  <|@ instruction rcx|DWORD = MOV [rdx|QWORD + 20] size: DWORD <|@ <|@
      nr  278  <|@ instruction r8|DWORD = MOV [rax|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  280  <|@ instruction r9|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr  282  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: r9|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr  284  <|@ instruction r9|QWORD = MOVSXD rcx|DWORD size: QWORD <|@ <|@
      nr  286  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r8|QWORD + r9|QWORD * 1]) trueDestinationProbability: 0.5 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B45" 
    xhandlers
    flags 
    probability 4601083748419892302
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ instruction CMPCONSTBRANCH rcx|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B45 y: 32 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4601083748419892302
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  298  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: r8|QWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4596580148792521806
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction rcx|QWORD = MOV [r8|QWORD + 40] size: QWORD <|@ <|@
      nr  308  <|@ instruction r9|DWORD = MOV [rcx|QWORD] size: DWORD <|@ <|@
      nr  310  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  312  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B24" 
    successors "B23" "B26" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4602807799859017905
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  316  <|@ instruction CMPBRANCH (x: r9|DWORD, y: r10|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602807799859017905
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  320  <|@ instruction r11|DWORD = SHL r10|DWORD y: 3 size: DWORD <|@ <|@
      nr  322  <|@ instruction r11|DWORD = LEA [r11|DWORD + 8] size: DWORD <|@ <|@
      nr  324  <|@ instruction r11|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr  326  <|@ instruction r11|QWORD = MOV [rcx|QWORD + r11|QWORD * 1] size: QWORD <|@ <|@
      nr  328  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: r11|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B23 -> B25 falseDestination: B23 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B22" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4599230716294395707
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  332  <|@ instruction r10|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr  334  <|@ instruction JUMP ~[] destination: B24 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B27" 
    xhandlers
    flags 
    probability 4601083748419892302
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ instruction JUMP ~[] destination: B17 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B27" 
    xhandlers
    flags 
    probability 4596580148792521807
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  338  <|@ instruction MOV (x: [r8|QWORD + 32], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  340  <|@ instruction JUMP ~[] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B27" 
    xhandlers
    flags 
    probability 4596580148792521806
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  302  <|@ instruction JUMP ~[] destination: B20 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B17" "B25" "B20" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4605587348047262798
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" 
    xhandlers
    flags 
    probability 4604846135197064160
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction rbp|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  356  <|@ instruction JUMP ~[] destination: B28 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B49" "B54" 
    xhandlers
    flags 
    probability 4595548303301553864
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  518  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [rax|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.01987559010066231 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4595421491411700642
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction CMPCONSTBRANCH [rax|DWORD[_] * 8 + 8] trueDestinationProbability: 2.021089053783065E-6 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B56 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4595421478772878611
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  606  <|@ instruction rbp|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  608  <|@ instruction JUMP ~[] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B62" 
    successors "B65" "B58" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4595777537596400292
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  612  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] stack:88|QWORD[.] r9|DWORD rdi|DWORD rbx|QWORD[.] r11|QWORD[.] - - - - rbp|DWORD 
>@ <|@ instruction rax|DWORD[_] = MOV [r11|QWORD[.] + 24] size: DWORD state [bci:134] <|@ <|@
      nr  614  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  616  <|@ instruction TESTBRANCH (x: rax|DWORD[_], y: rax|DWORD[_]) trueDestinationProbability: 0.5880075530332061 condition: = trueDestination: B57 -> B65 falseDestination: B57 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4590110563079390205
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  620  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [rax|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.8692436604445373 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B62 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B57" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4576850562957400324
    begin_IR
      LIR
      nr  672  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  674  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] stack:88|QWORD[.] r9|DWORD rdi|DWORD rbx|QWORD[.] r11|QWORD[.] - - - - rbp|DWORD 
>@ <|@ instruction SAFEPOINT rax|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 thread: r15 state [bci:134] <|@ <|@
      nr  676  <|@ instruction rbp|DWORD = INC rbp|DWORD size: DWORD <|@ <|@
      nr  678  <|@ instruction r11|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  680  <|@ instruction JUMP ~[] destination: B62 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4592437312858669387
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  696  <|@ instruction stack:112|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  698  <|@ instruction stack:40|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  700  <|@ instruction stack:120|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  702  <|@ instruction rax|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  704  <|@ instruction r10|QWORD = MOV [r13|QWORD + 680] size: QWORD <|@ <|@
      nr  706  <|@ instruction r11|QWORD = MOV [r10|QWORD + 64] size: QWORD <|@ <|@
      nr  708  <|@ instruction rdi|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  712  <|@ instruction rdi|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  716  <|@ instruction r8|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  718  <|@ instruction r9|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  720  <|@ instruction rbx|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  722  <|@ instruction rax|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  724  <|@ instruction stack:36|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  726  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:648) [bci: 152]
stack: stack:120|QWORD[.] 
locals: stack:72|QWORD[.] stack:36|DWORD - stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD stack:96|QWORD[.] - - - stack:112|QWORD[.] - stack:40|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.]]) [] callTarget: HotSpotMethod<HashMap.newNode(int, Object, Object, HashMap$Node)> state [bci:152] <|@ <|@
      nr  728  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B67 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B72" 
    xhandlers
    flags 
    probability 4591660023639118941
    begin_IR
      LIR
      nr  730  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  732  <|@ instruction r11|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr  734  <|@ instruction r14|QWORD = MOVE stack:56|QWORD moveKind: QWORD <|@ <|@
      nr  736  <|@ instruction rbx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  738  <|@ instruction JUMP ~[] destination: B66 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4590594123464754032
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction rbp|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  362  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + rbp|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  364  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  366  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4590001153184595122
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  374  <|@ instruction r10|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  376  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  378  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4589467479932452103
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction r11|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  390  <|@ instruction MOV (x: [r11|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  392  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  394  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  396  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B64" "B60" 
    xhandlers
    flags 
    probability 4589398445432346844
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction stack:112|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  626  <|@ instruction stack:40|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  628  <|@ instruction stack:120|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  630  <|@ instruction stack:36|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  632  <|@ instruction rsi|DWORD[_] = MOV [rax|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  634  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  636  <|@ instruction CMPBRANCH (x: r10|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.9998932466496128 condition: = trueDestination: B59 -> B64 falseDestination: B59 -> B60 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B86" 
    xhandlers
    flags 
    probability 4589397940059341918
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  692  <|@ instruction JUMP ~[] destination: B64 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4577371935537457006
    begin_IR
      LIR
      nr  740  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  742  <|@ instruction r11|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr  744  <|@ instruction rbx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  746  <|@ instruction rsi|QWORD[.+] = LEA [r11|QWORD[.] + 24] size: QWORD <|@ <|@
      nr  748  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  750  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B67 -> B68 falseDestination: B67 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" "B71" 
    xhandlers
    flags 
    probability 4576750104161816650
    begin_IR
      LIR
      nr  758  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  760  <|@ instruction r10|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  762  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  764  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    probability 4576190455923740329
    begin_IR
      LIR
      nr  774  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  776  <|@ instruction r8|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  778  <|@ instruction MOV (x: [r8|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  780  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  782  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  784  <|@ instruction r14|QWORD = MOVE stack:56|QWORD moveKind: QWORD <|@ <|@
      nr  786  <|@ instruction JUMP ~[] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    probability 4575897384022324722
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction JUMP ~[] destination: B30 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4575895921484393205
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction rbp|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  126  <|@ instruction stack:36|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  128  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>} <|@ <|@
      nr  130  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: stack:72|QWORD[.] stack:36|DWORD rcx|QWORD[.] stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD rbx|QWORD[.] - stack:40|DWORD - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7fba62ccef80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:29] <|@ <|@
      nr  132  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: stack:72|QWORD[.] stack:36|DWORD rcx|QWORD[.] stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD rbx|QWORD[.] - stack:40|DWORD - - - - 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:29] <|@ <|@
      nr  134  <|@ instruction r10|DWORD[_] = MOVE stack:100|DWORD[_] moveKind: DWORD <|@ <|@
      nr  144  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  146  <|@ instruction JUMP ~[] destination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4575188794187971253
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  382  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  384  <|@ instruction JUMP ~[] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" "B33" "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4605587348047262798
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  402  <|@ instruction MOV (x: [rbx|QWORD[.] + rbp|DWORD * 4 + 16], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  404  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + rbp|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  406  <|@ instruction rsi|QWORD[*] = XOR (x: rsi|QWORD[.+], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  408  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4604846135197064160
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  418  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4604179043631885386
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  430  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + rbp|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  432  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.+] y: 9 size: QWORD <|@ <|@
      nr  434  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B88" 
    xhandlers
    flags 
    probability 4603578661223224489
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  440  <|@ instruction JUMP ~[] destination: B39 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B88" 
    xhandlers
    flags 
    probability 4590594123464754032
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  414  <|@ instruction JUMP ~[] destination: B35 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B88" 
    xhandlers
    flags 
    probability 4590001153184595122
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction JUMP ~[] destination: B37 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4589467479932452103
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  446  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B88" 
    xhandlers
    flags 
    probability 4588806327720511347
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction JUMP ~[] destination: B41 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4574334916984542422
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  456  <|@ instruction MOVB [rsi|QWORD[*] + r14|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  458  <|@ instruction r10|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  460  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: r14|QWORD) size: QWORD <|@ <|@
      nr  462  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B88" 
    xhandlers
    flags 
    probability 4573566427501456474
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  476  <|@ instruction r11|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  478  <|@ instruction MOV (x: [r11|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  480  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  482  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  486  <|@ instruction JUMP ~[] destination: B44 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4570262383476918658
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  522  <|@ instruction stack:36|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  524  <|@ instruction rsi|DWORD[_] = MOV [rax|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  526  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  528  <|@ instruction CMPBRANCH (x: r10|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.9854570809572428 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B86" 
    xhandlers
    flags 
    probability 4570144353713859813
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  532  <|@ instruction r8|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  534  <|@ instruction JUMP ~[] destination: B50 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 4564966382317228292
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   22  <|@ instruction stack:36|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   26  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:635) [bci: 20]
locals: stack:72|QWORD[.] stack:36|DWORD stack:80|QWORD[.] stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.resize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:20] <|@ <|@
      nr   28  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:635) [bci: 23]
stack: Object[null] 
locals: stack:72|QWORD[.] stack:36|DWORD stack:80|QWORD[.] stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD - - - - - - - 
>@ <|@ instruction rsi|DWORD = MOV [rax|QWORD[.] + 12] size: DWORD state [bci:23] <|@ <|@
      nr   30  <|@ instruction r10|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction rbx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction rdi|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr   36  <|@ instruction r9|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr   38  <|@ instruction r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction rcx|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction rdx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr   44  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction JUMP ~[] destination: B1 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B72" 
    xhandlers
    flags 
    probability 4562617473904064804
    begin_IR
      LIR
      nr  752  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  754  <|@ instruction r14|QWORD = MOVE stack:56|QWORD moveKind: QWORD <|@ <|@
      nr  756  <|@ instruction JUMP ~[] destination: B68 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    probability 4562093595080792590
    begin_IR
      LIR
      nr  766  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  768  <|@ instruction r14|QWORD = MOVE stack:56|QWORD moveKind: QWORD <|@ <|@
      nr  770  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  772  <|@ instruction JUMP ~[] destination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B66" "B68" "B71" "B70" 
    successors "B73" "B74" 
    xhandlers
    flags 
    probability 4592437312858669387
    begin_IR
      LIR
      nr  788  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  790  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  792  <|@ instruction MOV (x: [r11|QWORD[.] + 24], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  794  <|@ instruction rsi|QWORD[*] = XOR (x: r11|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  796  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    probability 4591660023639118941
    begin_IR
      LIR
      nr  802  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  804  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    probability 4590960463341523540
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  812  <|@ instruction r11|QWORD[*] = SHR r11|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  814  <|@ instruction CMPCONSTBRANCH [r11|QWORD[*] + r14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B83" 
    xhandlers
    flags 
    probability 4590330859073687679
    begin_IR
      LIR
      nr  816  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  818  <|@ instruction JUMP ~[] destination: B77 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B83" 
    xhandlers
    flags 
    probability 4577371935537457006
    begin_IR
      LIR
      nr  798  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  800  <|@ instruction JUMP ~[] destination: B73 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B83" 
    xhandlers
    flags 
    probability 4576750104161816649
    begin_IR
      LIR
      nr  806  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  808  <|@ instruction JUMP ~[] destination: B75 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    probability 4576190455923740328
    begin_IR
      LIR
      nr  820  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  822  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  824  <|@ instruction CMPCONSTBRANCH [r11|QWORD[*] + r14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B83" 
    xhandlers
    flags 
    probability 4575686772509471639
    begin_IR
      LIR
      nr  826  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  828  <|@ instruction JUMP ~[] destination: B79 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    probability 4561198157899870475
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  832  <|@ instruction MOVB [r11|QWORD[*] + r14|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  834  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  836  <|@ instruction r11|QWORD[*] = ADD (x: r11|QWORD[*], y: r14|QWORD) size: QWORD <|@ <|@
      nr  838  <|@ instruction TESTBRANCH (x: rsi|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    probability 4560392264437040573
    begin_IR
      LIR
      nr  848  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  850  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  852  <|@ instruction MOV (x: [rdx|QWORD + rsi|QWORD * 1 - 8], y: r11|QWORD[*]) size: QWORD <|@ <|@
      nr  854  <|@ instruction rsi|QWORD = LEA [rsi|QWORD - 8] size: QWORD <|@ <|@
      nr  856  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  858  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B88" 
    xhandlers
    flags 
    probability 4559287139136259037
    begin_IR
      LIR
      nr  464  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  466  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  468  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  472  <|@ instruction JUMP ~[] destination: B43 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4553315745025075769
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  182  <|@ instruction stack:36|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  184  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  186  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 40] size: QWORD <|@ <|@
      nr  188  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4553268943811267021
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  208  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 296] instr: 0 <|@ <|@
      nr  210  <|@ instruction MOV [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  212  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>;compressed} <|@ <|@
      nr  214  <|@ instruction MOV [rsi|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  216  <|@ instruction MOV [rsi|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  218  <|@ instruction MOV [rsi|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  220  <|@ instruction MOV [rsi|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  222  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  224  <|@ instruction stack:64|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  226  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4553315745025075769
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  230  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  234  <|@ instruction rdx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  236  <|@ instruction rcx|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  238  <|@ instruction r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  240  <|@ instruction r9|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  242  <|@ instruction stack:112|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  244  <|@ st <@st|@live-base-pointers: []
java.util.LinkedHashMap$Entry.<init>(LinkedHashMap.java:208) [bci: 6]
locals: - - - - - 
java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 9]
stack: stack:112|QWORD[.] 
locals: stack:72|QWORD[.] stack:36|DWORD stack:80|QWORD[.] stack:88|QWORD[.] Object[null] - 
java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stack: stack:96|QWORD[.] stack:60|DWORD 
locals: stack:72|QWORD[.] - - - - stack:32|DWORD - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.]] [] callTarget: HotSpotMethod<HashMap$Node.<init>(int, Object, Object, HashMap$Node)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:6, 9, 56] <|@ <|@
      nr  246  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  248  <|@ instruction rdx|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr  250  <|@ st <@st|@live-base-pointers: []
java.util.LinkedHashMap.newNode(LinkedHashMap.java:283) [bci: 17]
locals: - - - - - stack:112|QWORD[.] 
java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stack: stack:96|QWORD[.] stack:60|DWORD 
locals: stack:72|QWORD[.] - - - - stack:32|DWORD - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<LinkedHashMap.linkNodeAtEnd(LinkedHashMap$Entry)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:17, 56] <|@ <|@
      nr  252  <|@ instruction rax|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr  254  <|@ instruction r14|QWORD = MOVE stack:56|QWORD moveKind: QWORD <|@ <|@
      nr  256  <|@ instruction r13|QWORD = MOVE stack:48|QWORD moveKind: QWORD <|@ <|@
      nr  258  <|@ instruction r11|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr  260  <|@ instruction rbx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  262  <|@ instruction rdi|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  264  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    probability 4546075572092099182
    begin_IR
      LIR
      nr  840  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  842  <|@ instruction rsi|QWORD = MOVE r11|QWORD[*] moveKind: QWORD <|@ <|@
      nr  844  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  846  <|@ instruction JUMP ~[] destination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B73" "B75" "B77" "B79" "B82" "B81" 
    successors "B84" "B85" 
    xhandlers
    flags 
    probability 4592437312858669387
    begin_IR
      LIR
      nr  860  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  862  <|@ instruction CMPCONSTBRANCH stack:40|DWORD trueDestinationProbability: 0.9999886211240704 condition: < trueDestination: B83 -> B84 falseDestination: B83 -> B85 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" 
    xhandlers
    flags 
    probability 4592437224411893480
    begin_IR
      LIR
      nr  864  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  866  <|@ instruction r8|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr  868  <|@ instruction JUMP ~[] destination: B84 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B50" "B55" "B64" "B84" "B85" "B63" "B53" 
    successors "B87" "B100" 
    xhandlers
    flags 
    probability 4595548303301553864
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  886  <|@ instruction TESTBRANCH (x: r8|QWORD[.], y: r8|QWORD[.]) trueDestinationProbability: 0.6091185940042786 condition: = trueDestination: B86 -> B87 falseDestination: B86 -> B100 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B88" 
    xhandlers
    flags 
    probability 4592437118697206803
    begin_IR
      LIR
      nr  888  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  892  <|@ instruction JUMP ~[] destination: B87 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B35" "B87" "B43" "B44" "B41" "B39" "B37" 
    successors "B89" "B90" 
    xhandlers
    flags 
    probability 4606558935301518032
    begin_IR
      LIR
      nr  894  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  896  <|@ instruction INC [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  898  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  900  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, ~y: [rsi|QWORD[.] + 20]) size: DWORD <|@ <|@
      nr  902  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: rax|DWORD) size: DWORD <|@ <|@
      nr  904  <|@ instruction CMPBRANCH (x: rax|DWORD, y: [rsi|QWORD[.] + 28]) trueDestinationProbability: 7.853038846579175E-4 condition: > trueDestination: B88 -> B89 falseDestination: B88 -> B90 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B91" 
    xhandlers
    flags 
    probability 4606552351536966788
    begin_IR
      LIR
      nr  920  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  922  <|@ instruction r13|QWORD = MOVE stack:48|QWORD moveKind: QWORD <|@ <|@
      nr  924  <|@ instruction JUMP ~[] destination: B90 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" "B89" 
    successors "B92" "B93" "B99" 
    xhandlers
    flags 
    probability 4606558935301518032
    begin_IR
      LIR
      nr  926  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  928  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~r13|QWORD - keyConstants: [meta{HotSpotType<Ljava/util/HashMap;, resolved>}, meta{HotSpotType<Ljava/util/LinkedHashMap;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/replacements/SnippetTemplate$LRUCache;, resolved>}] keyTargets: [B91 -> B92, B91 -> B93, B91 -> B93] defaultTarget: B91 -> B99 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B97" 
    xhandlers
    flags 
    probability 4606555909645339483
    begin_IR
      LIR
      nr  930  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  932  <|@ instruction JUMP ~[] destination: B92 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B92" "B94" "B96" 
    successors 
    xhandlers
    flags 
    probability 4606558935301518031
    begin_IR
      LIR
      nr  982  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  984  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  986  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B101" "B119" 
    xhandlers
    flags 
    probability 4589652288651159933
    begin_IR
      LIR
      nr 1006  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1008  <|@ instruction r13|QWORD = MOVE stack:48|QWORD moveKind: QWORD <|@ <|@
      nr 1010  <|@ instruction r9|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1012  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1014  <|@ instruction r10|DWORD[_] = MOV [r8|QWORD[.] + 20] size: DWORD <|@ <|@
      nr 1016  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.9999962001170364 condition: = trueDestination: B100 -> B101 falseDestination: B100 -> B119 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B102" "B103" 
    xhandlers
    flags 
    probability 4589652269697845341
    begin_IR
      LIR
      nr 1018  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1020  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B103 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B108" 
    xhandlers
    flags 
    probability 4589138949298219176
    begin_IR
      LIR
      nr 1022  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1026  <|@ instruction JUMP ~[] destination: B102 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" "B105" 
    xhandlers
    flags 
    probability 4574630580609171603
    begin_IR
      LIR
      nr 1028  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1030  <|@ instruction r11|QWORD[.+] = LEA [r8|QWORD[.] + 20] size: QWORD <|@ <|@
      nr 1032  <|@ instruction r11|DWORD[_] = MOV [r11|QWORD[.+]] size: DWORD <|@ <|@
      nr 1034  <|@ instruction TESTBRANCH (x: r11|DWORD[_], y: r11|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B103 -> B104 falseDestination: B103 -> B105 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B106" "B107" 
    xhandlers
    flags 
    probability 4573832524763622737
    begin_IR
      LIR
      nr 1042  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1044  <|@ instruction r9|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr 1046  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr 1048  <|@ instruction TESTBRANCH (x: r9|QWORD, y: r9|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B105 -> B106 falseDestination: B105 -> B107 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B108" 
    xhandlers
    flags 
    probability 4573114274502628758
    begin_IR
      LIR
      nr 1060  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1062  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr 1064  <|@ instruction MOV (x: [rcx|QWORD + r9|QWORD * 1 - 8], y: r11|QWORD[.]) size: QWORD <|@ <|@
      nr 1066  <|@ instruction r11|QWORD = LEA [r9|QWORD - 8] size: QWORD <|@ <|@
      nr 1068  <|@ instruction MOV (x: [r15|QWORD + 40], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1072  <|@ instruction JUMP ~[] destination: B107 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B91" 
    xhandlers
    flags 
    probability 4559880998172045651
    begin_IR
      LIR
      nr  906  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  908  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  912  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:669) [bci: 288]
locals: stack:72|QWORD[.] - - - - stack:32|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.resize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:288] <|@ <|@
      nr  914  <|@ instruction r13|QWORD = MOVE stack:48|QWORD moveKind: QWORD <|@ <|@
      nr  916  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  918  <|@ instruction JUMP ~[] destination: B89 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B108" 
    xhandlers
    flags 
    probability 4559523670035962382
    begin_IR
      LIR
      nr 1036  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1040  <|@ instruction JUMP ~[] destination: B104 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B108" 
    xhandlers
    flags 
    probability 4558885225359523289
    begin_IR
      LIR
      nr 1050  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1052  <|@ instruction rsi|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1054  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr 1058  <|@ instruction JUMP ~[] destination: B106 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B102" "B104" "B107" "B106" 
    successors "B109" "B110" 
    xhandlers
    flags 
    probability 4589652269697845341
    begin_IR
      LIR
      nr 1074  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1024  <|@ instruction r11|DWORD[_] = MOVE stack:100|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1076  <|@ instruction MOV (x: [r8|QWORD[.] + 20], y: r11|DWORD[_]) size: DWORD <|@ <|@
      nr 1078  <|@ instruction rsi|QWORD[*] = XOR (x: r8|QWORD[.], y: stack:88|QWORD[.]) size: QWORD <|@ <|@
      nr 1080  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B108 -> B109 falseDestination: B108 -> B110 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" "B112" 
    xhandlers
    flags 
    probability 4589138949298219176
    begin_IR
      LIR
      nr 1088  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1090  <|@ instruction r11|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1092  <|@ instruction TESTBRANCH (x: r11|QWORD[.], y: r11|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B110 -> B111 falseDestination: B110 -> B112 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B113" "B114" 
    xhandlers
    flags 
    probability 4588241136471976702
    begin_IR
      LIR
      nr 1100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1102  <|@ instruction r14|QWORD = MOVE stack:56|QWORD moveKind: QWORD <|@ <|@
      nr 1104  <|@ instruction rsi|QWORD[*] = SHR r8|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr 1106  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B112 -> B113 falseDestination: B112 -> B114 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B120" 
    xhandlers
    flags 
    probability 4587433104928358475
    begin_IR
      LIR
      nr 1108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1112  <|@ instruction JUMP ~[] destination: B113 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B120" 
    xhandlers
    flags 
    probability 4574630580609171603
    begin_IR
      LIR
      nr 1082  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1086  <|@ instruction JUMP ~[] destination: B109 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B120" 
    xhandlers
    flags 
    probability 4573832524763622738
    begin_IR
      LIR
      nr 1094  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1098  <|@ instruction JUMP ~[] destination: B111 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B115" "B116" 
    xhandlers
    flags 
    probability 4573114274502628759
    begin_IR
      LIR
      nr 1114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1116  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr 1118  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B114 -> B115 falseDestination: B114 -> B116 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B120" 
    xhandlers
    flags 
    probability 4572467849267734178
    begin_IR
      LIR
      nr 1120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1124  <|@ instruction JUMP ~[] destination: B115 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B117" "B118" 
    xhandlers
    flags 
    probability 4558310625150728107
    begin_IR
      LIR
      nr 1126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1128  <|@ instruction MOVB [rsi|QWORD[*] + r14|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr 1130  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr 1132  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: r14|QWORD) size: QWORD <|@ <|@
      nr 1134  <|@ instruction TESTBRANCH (x: rdx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B116 -> B117 falseDestination: B116 -> B118 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B120" 
    xhandlers
    flags 
    probability 4557793484962812442
    begin_IR
      LIR
      nr 1146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1148  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr 1150  <|@ instruction MOV (x: [rbx|QWORD + rdx|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr 1152  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr 1154  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1158  <|@ instruction JUMP ~[] destination: B118 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B94" "B95" 
    xhandlers
    flags 
    probability 4554832167497868566
    begin_IR
      LIR
      nr  934  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  936  <|@ instruction rdi|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  938  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.4891304347826087 condition: = trueDestination: B93 -> B94 falseDestination: B93 -> B95 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B96" "B98" 
    xhandlers
    flags 
    probability 4550463275345577801
    begin_IR
      LIR
      nr  944  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  946  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  948  <|@ instruction rdx|DWORD[_] = MOV [rsi|QWORD[.] + 52] size: DWORD <|@ <|@
      nr  950  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:670) [bci: 292]
locals: rsi|QWORD[.] - - - - rdi|DWORD - - - - - - - 
>@ <|@ instruction NULLCHECK [rdx|DWORD[_] * 8] state [bci:292] <|@ <|@
      nr  952  <|@ instruction rbx|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  954  <|@ instruction rax|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr  956  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rax|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr  958  <|@ instruction rbx|QWORD = MOV [rbx|QWORD + 872] size: QWORD <|@ <|@
      nr  960  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  962  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  964  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  968  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  972  <|@ instruction stack:112|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  974  <|@ st <@st|@live-base-pointers: []
java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 15]
locals: stack:72|QWORD[.] - stack:112|QWORD[.] - 
java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
locals: - - - - - - - - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<LinkedHashMap.removeEldestEntry(Map$Entry)> state [bci:15, 295] <|@ <|@
      nr  976  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B95 -> B96 falseDestination: B95 -> B98 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B97" 
    xhandlers
    flags 
    probability 4550463275345577801
    begin_IR
      LIR
      nr  978  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  980  <|@ instruction JUMP ~[] destination: B96 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B97" 
    xhandlers
    flags 
    probability 4550193860395418340
    begin_IR
      LIR
      nr  940  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  942  <|@ instruction JUMP ~[] destination: B94 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B120" 
    xhandlers
    flags 
    probability 4543399067768740112
    begin_IR
      LIR
      nr 1136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1138  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1140  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr 1144  <|@ instruction JUMP ~[] destination: B117 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B119" "B109" "B117" "B118" "B115" "B113" "B111" 
    successors 
    xhandlers
    flags 
    probability 4589652288651159933
    begin_IR
      LIR
      nr 1168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1170  <|@ instruction rbx|QWORD = MOV [r13|QWORD + 688] size: QWORD <|@ <|@
      nr 1172  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr 1174  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr 1176  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1178  <|@ instruction rdx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1180  <|@ instruction stack:112|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1182  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:663) [bci: 253]
locals: - - - - - - - - - - - - stack:112|QWORD[.] 
>@ <|@ instruction - = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<HashMap.afterNodeAccess(HashMap$Node)> state [bci:253] <|@ <|@
      nr 1184  <|@ instruction rax|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1186  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4542678729597855531
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  538  <|@ instruction stack:112|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  540  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: stack:72|QWORD[.] stack:36|DWORD rcx|QWORD[.] stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD stack:96|QWORD[.] - stack:40|DWORD - - - - 
>@ <|@ instruction rsi|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD state [bci:29] <|@ <|@
      nr  542  <|@ instruction rdx|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr  544  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr  546  <|@ instruction rbx|QWORD = MOV [rsi|QWORD + 464] size: QWORD <|@ <|@
      nr  548  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  550  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  552  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  554  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:641) [bci: 91]
locals: stack:72|QWORD[.] stack:36|DWORD stack:80|QWORD[.] stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD stack:96|QWORD[.] stack:112|QWORD[.] - - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:91] <|@ <|@
      nr  556  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B86" 
    xhandlers
    flags 
    probability 4542678729597855531
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  572  <|@ instruction r8|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr  574  <|@ instruction JUMP ~[] destination: B53 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B63" 
    xhandlers
    flags 
    probability 4529894057192690854
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  642  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: stack:72|QWORD[.] stack:36|DWORD rcx|QWORD[.] stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD stack:96|QWORD[.] r11|QWORD[.] - - - - stack:40|DWORD 
>@ <|@ instruction rsi|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD state [bci:134] <|@ <|@
      nr  644  <|@ instruction rdx|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr  646  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr  648  <|@ instruction rbx|QWORD = MOV [rsi|QWORD + 464] size: QWORD <|@ <|@
      nr  650  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  652  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  654  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  656  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:654) [bci: 203]
locals: stack:72|QWORD[.] stack:36|DWORD stack:80|QWORD[.] stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD stack:96|QWORD[.] - - - stack:112|QWORD[.] - stack:40|DWORD 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:203] <|@ <|@
      nr  658  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B86" 
    xhandlers
    flags 
    probability 4529894057192690854
    begin_IR
      LIR
      nr  682  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  684  <|@ instruction r8|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr  686  <|@ instruction JUMP ~[] destination: B63 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4523100981620127249
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction stack:64|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  194  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>} <|@ <|@
      nr  196  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: stack:72|QWORD[.] stack:36|DWORD stack:80|QWORD[.] stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD stack:96|QWORD[.] - stack:40|DWORD - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7fba62ccef80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:29] <|@ <|@
      nr  198  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: stack:72|QWORD[.] stack:36|DWORD stack:80|QWORD[.] stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD stack:96|QWORD[.] - stack:40|DWORD - - - - 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:29] <|@ <|@
      nr  200  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  202  <|@ instruction JUMP ~[] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" 
    xhandlers
    flags 
    probability 4518403274531071726
    begin_IR
      LIR
      nr  870  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  872  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  874  <|@ instruction rdx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  876  <|@ instruction rcx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  878  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:650) [bci: 169]
locals: stack:72|QWORD[.] - - stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD - - - - stack:112|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<HashMap.treeifyBin(HashMap$Node[], int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:169] <|@ <|@
      nr  880  <|@ instruction r8|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr  882  <|@ instruction JUMP ~[] destination: B85 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B86" 
    xhandlers
    flags 
    probability 4510226010095555986
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  582  <|@ instruction stack:112|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  584  <|@ instruction stack:36|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  586  <|@ instruction rsi|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr  588  <|@ instruction rdx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  590  <|@ instruction rcx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  592  <|@ instruction r8|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  594  <|@ instruction r9|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  596  <|@ instruction rdi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  598  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:644) [bci: 123]
locals: stack:72|QWORD[.] - - stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|QWORD[.], rdi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap$TreeNode.putTreeVal(HashMap, HashMap$Node[], int, Object, Object)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:123] <|@ <|@
      nr  600  <|@ instruction r8|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  602  <|@ instruction JUMP ~[] destination: B55 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B120" 
    xhandlers
    flags 
    probability 4508568125070994604
    begin_IR
      LIR
      nr 1160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1162  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:659) [bci: 222]
locals: stack:72|QWORD[.] - - stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD - - - - r8|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r10|DWORD[_] * 8] state [bci:222] <|@ <|@
      nr 1166  <|@ instruction JUMP ~[] destination: B119 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction r11|QWORD = MOVE input: long[5780|0x1694] <|@ <|@
      nr  506  <|@ instruction r10|DWORD = MOVE input: int[-51507|0xffffffffffff36cd] <|@ <|@
      nr  508  <|@ instruction stack:36|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  510  <|@ instruction r8|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  512  <|@ instruction JUMP ~[] destination: B47 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  662  <|@ instruction r8|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr  664  <|@ instruction rbp|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  666  <|@ instruction MOV [r15|QWORD + 1156] y: -157971 size: DWORD <|@ <|@
      nr  668  <|@ instruction MOV [r15|QWORD + 1168] y: 1300 size: QWORD <|@ <|@
      nr  670  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:654) [bci: 206]
stack: int[0|0x0] 
locals: stack:72|QWORD[.] stack:36|DWORD stack:80|QWORD[.] stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD stack:96|QWORD[.] - - - r8|QWORD[.] - rbp|DWORD 
>@ <|@ instruction DEOPT info [bci:206] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1190  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1192  <|@ instruction stack:36|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr 1194  <|@ instruction r8|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1196  <|@ instruction r10|DWORD = MOVE input: int[-75547|0xfffffffffffed8e5] <|@ <|@
      nr 1198  <|@ instruction JUMP ~[] destination: B121 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B121" "B47" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1202  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1204  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1206  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: stack:72|QWORD[.] stack:36|DWORD stack:80|QWORD[.] stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD stack:96|QWORD[.] - r8|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:29] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  492  <|@ instruction JUMP ~[] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  998  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1000  <|@ instruction MOV [r15|QWORD + 1156] y: -61235 size: DWORD <|@ <|@
      nr 1002  <|@ instruction MOV [r15|QWORD + 1168] y: 8980 size: QWORD <|@ <|@
      nr 1004  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:670) [bci: 292]
locals: stack:72|QWORD[.] - - - - stack:32|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:292] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction JUMP ~[] destination: B26 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B26" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction rbp|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  496  <|@ instruction MOV [r15|QWORD + 1156] y: -82987 size: DWORD <|@ <|@
      nr  498  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  500  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stack: stack:96|QWORD[.] rbp|DWORD rax|QWORD[.] 
locals: stack:72|QWORD[.] - - - - stack:32|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:59] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  558  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  560  <|@ instruction r11|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr  562  <|@ instruction rbx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  564  <|@ instruction MOV [r15|QWORD + 1156] y: -153363 size: DWORD <|@ <|@
      nr  566  <|@ instruction MOV [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  568  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:641) [bci: 94]
stack: int[0|0x0] 
locals: stack:72|QWORD[.] stack:36|DWORD stack:80|QWORD[.] stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD rbx|QWORD[.] r11|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:94] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  988  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  990  <|@ instruction rdx|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr  992  <|@ instruction MOV [r15|QWORD + 1156] y: -161299 size: DWORD <|@ <|@
      nr  994  <|@ instruction MOV [r15|QWORD + 1168] y: 10260 size: QWORD <|@ <|@
      nr  996  <|@ st <@st|@live-base-pointers: []
java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 18]
stack: rax|DWORD 
locals: stack:72|QWORD[.] - rdx|QWORD[.] - 
java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
locals: - - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:18, 295] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction MOV [r15|QWORD + 1156] y: -129299 size: DWORD <|@ <|@
      nr   58  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:634) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] r8|QWORD[.] r9|DWORD rdi|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #21         // table:java.util.HashMap$Node[]
     4: dup           
     5: astore        6
     7: ifnull        19
    10: aload         6
    12: arraylength   
    13: dup           
    14: istore        8
    16: ifne          29
    19: aload_0       
    20: invokevirtual #23         // resize:()java.util.HashMap$Node[]
    23: dup           
    24: astore        6
    26: arraylength   
    27: istore        8
    29: aload         6
    31: iload         8
    33: iconst_1      
    34: isub          
    35: iload_1       
    36: iand          
    37: dup           
    38: istore        9
    40: aaload        
    41: dup           
    42: astore        7
    44: ifnonnull     63
    47: aload         6
    49: iload         9
    51: aload_0       
    52: iload_1       
    53: aload_2       
    54: aload_3       
    55: aconst_null   
    56: invokevirtual #40         // newNode:(int, java.lang.Object, java.lang.Object, java.util.HashMap$Node)java.util.HashMap$Node
    59: aastore       
    60: goto          259
    63: aload         7
    65: getfield      #35         // java.util.HashMap$Node.hash:int
    68: iload_1       
    69: if_icmpne     104
    72: aload         7
    74: getfield      #36         // java.util.HashMap$Node.key:java.lang.Object
    77: dup           
    78: astore        11
    80: aload_2       
    81: if_acmpeq     97
    84: aload_2       
    85: ifnull        104
    88: aload_2       
    89: aload         11
    91: invokevirtual #37         // java.lang.Object.equals:(java.lang.Object)boolean
    94: ifeq          104
    97: aload         7
    99: astore        10
   101: goto          222
   104: aload         7
   106: instanceof    #180        // java.util.HashMap$TreeNode
   109: ifeq          131
   112: aload         7
   114: checkcast     #180        // java.util.HashMap$TreeNode
   117: aload_0       
   118: aload         6
   120: iload_1       
   121: aload_2       
   122: aload_3       
   123: invokevirtual #41         // java.util.HashMap$TreeNode.putTreeVal:(java.util.HashMap, java.util.HashMap$Node[], int, java.lang.Object, java.lang.Object)java.util.HashMap$TreeNode
   126: astore        10
   128: goto          222
   131: iconst_0      
   132: istore        12
   134: aload         7
   136: getfield      #38         // java.util.HashMap$Node.next:java.util.HashMap$Node
   139: dup           
   140: astore        10
   142: ifnonnull     175
   145: aload         7
   147: aload_0       
   148: iload_1       
   149: aload_2       
   150: aload_3       
   151: aconst_null   
   152: invokevirtual #40         // newNode:(int, java.lang.Object, java.lang.Object, java.util.HashMap$Node)java.util.HashMap$Node
   155: putfield      #38         // java.util.HashMap$Node.next:java.util.HashMap$Node
   158: iload         12
   160: bipush        7
   162: if_icmplt     222
   165: aload_0       
   166: aload         6
   168: iload_1       
   169: invokevirtual #42         // treeifyBin:(java.util.HashMap$Node[], int)void
   172: goto          222
   175: aload         10
   177: getfield      #35         // java.util.HashMap$Node.hash:int
   180: iload_1       
   181: if_icmpne     212
   184: aload         10
   186: getfield      #36         // java.util.HashMap$Node.key:java.lang.Object
   189: dup           
   190: astore        11
   192: aload_2       
   193: if_acmpeq     222
   196: aload_2       
   197: ifnull        212
   200: aload_2       
   201: aload         11
   203: invokevirtual #37         // java.lang.Object.equals:(java.lang.Object)boolean
   206: ifeq          212
   209: goto          222
   212: aload         10
   214: astore        7
   216: iinc          
   219: goto          134
   222: aload         10
   224: ifnull        259
   227: aload         10
   229: getfield      #34         // java.util.HashMap$Node.value:java.lang.Object
   232: astore        12
   234: iload         4
   236: ifeq          244
   239: aload         12
   241: ifnonnull     250
   244: aload         10
   246: aload_3       
   247: putfield      #34         // java.util.HashMap$Node.value:java.lang.Object
   250: aload_0       
   251: aload         10
   253: invokevirtual #43         // afterNodeAccess:(java.util.HashMap$Node)void
   256: aload         12
   258: areturn       
   259: aload_0       
   260: dup           
   261: getfield      #44         // modCount:int
   264: iconst_1      
   265: iadd          
   266: putfield      #44         // modCount:int
   269: aload_0       
   270: dup           
   271: getfield      #32         // size:int
   274: iconst_1      
   275: iadd          
   276: dup_x1        
   277: putfield      #32         // size:int
   280: aload_0       
   281: getfield      #17         // threshold:int
   284: if_icmple     292
   287: aload_0       
   288: invokevirtual #23         // resize:()java.util.HashMap$Node[]
   291: pop           
   292: aload_0       
   293: iload         5
   295: invokevirtual #45         // afterNodeInsertion:(boolean)void
   298: aconst_null   
   299: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After NullCheckOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|DWORD, rdi|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@21849dd slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:72|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction stack:80|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction stack:88|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   12  <|@ instruction stack:28|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   14  <|@ instruction stack:32|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr   16  <|@ instruction rbx|DWORD[_] = MOV [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   18  <|@ instruction TESTBRANCH (x: rbx|DWORD[_], y: rbx|DWORD[_]) trueDestinationProbability: 0.0015880438063265454 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607168114973028567
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction rax|DWORD = MOV [rbx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   52  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607168114973028567
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr   66  <|@ instruction r10|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   68  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B1" 
    successors "B6" "B121" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   72  <|@ instruction stack:96|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   74  <|@ instruction rax|DWORD = MOV [rbx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   76  <|@ instruction r11|DWORD = MOV [rbx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   78  <|@ instruction rbp|DWORD = DEC r10|DWORD size: DWORD <|@ <|@
      nr   80  <|@ instruction rbp|DWORD = AND (x: rdx|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr   82  <|@ instruction CMPBRANCH (x: rax|DWORD, y: rbp|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B121 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B48" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction stack:40|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   88  <|@ instruction rax|DWORD[_] = MOV [rbx|QWORD[.] + rbp|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   90  <|@ instruction r13|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   92  <|@ instruction r14|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr   94  <|@ instruction r13|QWORD = UNCOMPRESSPOINTER (input: r13|DWORD, ~baseRegister: r14|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr   96  <|@ instruction stack:48|QWORD = MOVE r13|QWORD moveKind: QWORD <|@ <|@
      nr   98  <|@ instruction r14|QWORD = MOVE input: long[140438306553856|0x7fba57600000] <|@ <|@
      nr  100  <|@ instruction stack:56|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr  102  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  104  <|@ instruction stack:100|DWORD[_] = MOVE r10|DWORD[_] moveKind: DWORD <|@ <|@
      nr  106  <|@ instruction TESTBRANCH (x: rax|DWORD[_], y: rax|DWORD[_]) trueDestinationProbability: 0.8229115724385652 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B12" "B47" 
    xhandlers
    flags 
    probability 4605587348047262798
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction stack:60|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  112  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~r13|QWORD - keyConstants: [meta{HotSpotType<Ljava/util/HashMap;, resolved>}, meta{HotSpotType<Ljava/util/LinkedHashMap;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/replacements/SnippetTemplate$LRUCache;, resolved>}] keyTargets: [B7 -> B8, B7 -> B12, B7 -> B12] defaultTarget: B7 -> B47 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4605585062831744793
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction rax|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  118  <|@ instruction rbp|QWORD = LEA [rax|QWORD + 32] size: QWORD <|@ <|@
      nr  120  <|@ instruction CMPBRANCH (x: rbp|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4605510964398880109
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction MOV (x: [r15|QWORD + 440], y: rbp|QWORD) size: QWORD <|@ <|@
      nr  152  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 288] instr: 0 <|@ <|@
      nr  154  <|@ instruction MOV [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  156  <|@ instruction MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>;compressed} <|@ <|@
      nr  158  <|@ instruction MOV [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  160  <|@ instruction MOV [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  162  <|@ instruction MOV [rax|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  164  <|@ instruction rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  166  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 4605585062831744793
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  170  <|@ instruction MOV (x: [rax|QWORD[.] + 20], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  172  <|@ instruction rcx|DWORD[_] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  174  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr  176  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  178  <|@ instruction JUMP ~[] destination: B11 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B11" "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4605587348047262798
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  270  <|@ instruction rdx|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr  272  <|@ instruction r11|QWORD = UNCOMPRESSPOINTER (input: r11|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr  274  <|@ instruction rdx|QWORD = MOV [r11|QWORD + 208] size: QWORD <|@ <|@
      nr  276  <|@ instruction rcx|DWORD = MOV [rdx|QWORD + 20] size: DWORD <|@ <|@
      nr  278  <|@ instruction r8|DWORD = MOV [rax|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  280  <|@ instruction r9|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr  282  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: r9|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr  284  <|@ instruction r9|QWORD = MOVSXD rcx|DWORD size: QWORD <|@ <|@
      nr  286  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r8|QWORD + r9|QWORD * 1]) trueDestinationProbability: 0.5 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B45" 
    xhandlers
    flags 
    probability 4601083748419892302
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ instruction CMPCONSTBRANCH rcx|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B45 y: 32 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4601083748419892302
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  298  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: r8|QWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4596580148792521806
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction rcx|QWORD = MOV [r8|QWORD + 40] size: QWORD <|@ <|@
      nr  308  <|@ instruction r9|DWORD = MOV [rcx|QWORD] size: DWORD <|@ <|@
      nr  310  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  312  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B24" 
    successors "B23" "B26" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4602807799859017905
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  316  <|@ instruction CMPBRANCH (x: r9|DWORD, y: r10|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602807799859017905
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  320  <|@ instruction r11|DWORD = SHL r10|DWORD y: 3 size: DWORD <|@ <|@
      nr  322  <|@ instruction r11|DWORD = LEA [r11|DWORD + 8] size: DWORD <|@ <|@
      nr  324  <|@ instruction r11|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr  326  <|@ instruction r11|QWORD = MOV [rcx|QWORD + r11|QWORD * 1] size: QWORD <|@ <|@
      nr  328  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: r11|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B23 -> B25 falseDestination: B23 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B22" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4599230716294395707
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  332  <|@ instruction r10|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr  334  <|@ instruction JUMP ~[] destination: B24 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B27" 
    xhandlers
    flags 
    probability 4601083748419892302
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ instruction JUMP ~[] destination: B17 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B27" 
    xhandlers
    flags 
    probability 4596580148792521807
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  338  <|@ instruction MOV (x: [r8|QWORD + 32], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  340  <|@ instruction JUMP ~[] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B27" 
    xhandlers
    flags 
    probability 4596580148792521806
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  302  <|@ instruction JUMP ~[] destination: B20 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B17" "B25" "B20" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4605587348047262798
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" 
    xhandlers
    flags 
    probability 4604846135197064160
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction rbp|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  356  <|@ instruction JUMP ~[] destination: B28 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B49" "B54" 
    xhandlers
    flags 
    probability 4595548303301553864
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  518  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [rax|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.01987559010066231 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4595421491411700642
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction CMPCONSTBRANCH [rax|DWORD[_] * 8 + 8] trueDestinationProbability: 2.021089053783065E-6 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B56 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4595421478772878611
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  606  <|@ instruction rbp|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  608  <|@ instruction JUMP ~[] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B62" 
    successors "B65" "B58" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4595777537596400292
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  612  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] stack:88|QWORD[.] r9|DWORD rdi|DWORD rbx|QWORD[.] r11|QWORD[.] - - - - rbp|DWORD 
>@ <|@ instruction rax|DWORD[_] = MOV [r11|QWORD[.] + 24] size: DWORD state [bci:134] <|@ <|@
      nr  614  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  616  <|@ instruction TESTBRANCH (x: rax|DWORD[_], y: rax|DWORD[_]) trueDestinationProbability: 0.5880075530332061 condition: = trueDestination: B57 -> B65 falseDestination: B57 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4590110563079390205
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  620  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [rax|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.8692436604445373 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B62 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B57" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4576850562957400324
    begin_IR
      LIR
      nr  672  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  674  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] stack:88|QWORD[.] r9|DWORD rdi|DWORD rbx|QWORD[.] r11|QWORD[.] - - - - rbp|DWORD 
>@ <|@ instruction SAFEPOINT rax|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 thread: r15 state [bci:134] <|@ <|@
      nr  676  <|@ instruction rbp|DWORD = INC rbp|DWORD size: DWORD <|@ <|@
      nr  678  <|@ instruction r11|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  680  <|@ instruction JUMP ~[] destination: B62 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4592437312858669387
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  696  <|@ instruction stack:112|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  698  <|@ instruction stack:40|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  700  <|@ instruction stack:120|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  702  <|@ instruction rax|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  704  <|@ instruction r10|QWORD = MOV [r13|QWORD + 680] size: QWORD <|@ <|@
      nr  706  <|@ instruction r11|QWORD = MOV [r10|QWORD + 64] size: QWORD <|@ <|@
      nr  708  <|@ instruction rdi|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  712  <|@ instruction rdi|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  716  <|@ instruction r8|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  718  <|@ instruction r9|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  720  <|@ instruction rbx|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  722  <|@ instruction rax|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  724  <|@ instruction stack:36|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  726  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:648) [bci: 152]
stack: stack:120|QWORD[.] 
locals: stack:72|QWORD[.] stack:36|DWORD - stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD stack:96|QWORD[.] - - - stack:112|QWORD[.] - stack:40|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.]]) [] callTarget: HotSpotMethod<HashMap.newNode(int, Object, Object, HashMap$Node)> state [bci:152] <|@ <|@
      nr  728  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B67 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B72" 
    xhandlers
    flags 
    probability 4591660023639118941
    begin_IR
      LIR
      nr  730  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  732  <|@ instruction r11|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr  734  <|@ instruction r14|QWORD = MOVE stack:56|QWORD moveKind: QWORD <|@ <|@
      nr  736  <|@ instruction rbx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  738  <|@ instruction JUMP ~[] destination: B66 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4590594123464754032
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction rbp|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  362  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + rbp|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  364  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  366  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4590001153184595122
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  374  <|@ instruction r10|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  376  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  378  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4589467479932452103
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction r11|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  390  <|@ instruction MOV (x: [r11|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  392  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  394  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  396  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B64" "B60" 
    xhandlers
    flags 
    probability 4589398445432346844
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction stack:112|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  626  <|@ instruction stack:40|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  628  <|@ instruction stack:120|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  630  <|@ instruction stack:36|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  632  <|@ instruction rsi|DWORD[_] = MOV [rax|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  634  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  636  <|@ instruction CMPBRANCH (x: r10|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.9998932466496128 condition: = trueDestination: B59 -> B64 falseDestination: B59 -> B60 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B86" 
    xhandlers
    flags 
    probability 4589397940059341918
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  692  <|@ instruction JUMP ~[] destination: B64 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4577371935537457006
    begin_IR
      LIR
      nr  740  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  742  <|@ instruction r11|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr  744  <|@ instruction rbx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  746  <|@ instruction rsi|QWORD[.+] = LEA [r11|QWORD[.] + 24] size: QWORD <|@ <|@
      nr  748  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  750  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B67 -> B68 falseDestination: B67 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" "B71" 
    xhandlers
    flags 
    probability 4576750104161816650
    begin_IR
      LIR
      nr  758  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  760  <|@ instruction r10|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  762  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  764  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    probability 4576190455923740329
    begin_IR
      LIR
      nr  774  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  776  <|@ instruction r8|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  778  <|@ instruction MOV (x: [r8|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  780  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  782  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  784  <|@ instruction r14|QWORD = MOVE stack:56|QWORD moveKind: QWORD <|@ <|@
      nr  786  <|@ instruction JUMP ~[] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    probability 4575897384022324722
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction JUMP ~[] destination: B30 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4575895921484393205
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction rbp|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  126  <|@ instruction stack:36|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  128  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>} <|@ <|@
      nr  130  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: stack:72|QWORD[.] stack:36|DWORD rcx|QWORD[.] stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD rbx|QWORD[.] - stack:40|DWORD - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7fba62ccef80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:29] <|@ <|@
      nr  132  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: stack:72|QWORD[.] stack:36|DWORD rcx|QWORD[.] stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD rbx|QWORD[.] - stack:40|DWORD - - - - 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:29] <|@ <|@
      nr  134  <|@ instruction r10|DWORD[_] = MOVE stack:100|DWORD[_] moveKind: DWORD <|@ <|@
      nr  144  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  146  <|@ instruction JUMP ~[] destination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4575188794187971253
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  382  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  384  <|@ instruction JUMP ~[] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" "B33" "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4605587348047262798
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  402  <|@ instruction MOV (x: [rbx|QWORD[.] + rbp|DWORD * 4 + 16], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  404  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + rbp|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  406  <|@ instruction rsi|QWORD[*] = XOR (x: rsi|QWORD[.+], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  408  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4604846135197064160
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  418  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4604179043631885386
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  430  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + rbp|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  432  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.+] y: 9 size: QWORD <|@ <|@
      nr  434  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B88" 
    xhandlers
    flags 
    probability 4603578661223224489
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  440  <|@ instruction JUMP ~[] destination: B39 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B88" 
    xhandlers
    flags 
    probability 4590594123464754032
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  414  <|@ instruction JUMP ~[] destination: B35 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B88" 
    xhandlers
    flags 
    probability 4590001153184595122
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction JUMP ~[] destination: B37 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4589467479932452103
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  446  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B88" 
    xhandlers
    flags 
    probability 4588806327720511347
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction JUMP ~[] destination: B41 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4574334916984542422
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  456  <|@ instruction MOVB [rsi|QWORD[*] + r14|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  458  <|@ instruction r10|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  460  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: r14|QWORD) size: QWORD <|@ <|@
      nr  462  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B88" 
    xhandlers
    flags 
    probability 4573566427501456474
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  476  <|@ instruction r11|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  478  <|@ instruction MOV (x: [r11|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  480  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  482  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  486  <|@ instruction JUMP ~[] destination: B44 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4570262383476918658
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  522  <|@ instruction stack:36|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  524  <|@ instruction rsi|DWORD[_] = MOV [rax|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  526  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  528  <|@ instruction CMPBRANCH (x: r10|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.9854570809572428 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B86" 
    xhandlers
    flags 
    probability 4570144353713859813
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  532  <|@ instruction r8|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  534  <|@ instruction JUMP ~[] destination: B50 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 4564966382317228292
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   22  <|@ instruction stack:36|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   26  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:635) [bci: 20]
locals: stack:72|QWORD[.] stack:36|DWORD stack:80|QWORD[.] stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.resize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:20] <|@ <|@
      nr   28  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:635) [bci: 23]
stack: Object[null] 
locals: stack:72|QWORD[.] stack:36|DWORD stack:80|QWORD[.] stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD - - - - - - - 
>@ <|@ instruction rsi|DWORD = MOV [rax|QWORD[.] + 12] size: DWORD state [bci:23] <|@ <|@
      nr   30  <|@ instruction r10|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction rbx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction rdi|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr   36  <|@ instruction r9|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr   38  <|@ instruction r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction rcx|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction rdx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr   44  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction JUMP ~[] destination: B1 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B72" 
    xhandlers
    flags 
    probability 4562617473904064804
    begin_IR
      LIR
      nr  752  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  754  <|@ instruction r14|QWORD = MOVE stack:56|QWORD moveKind: QWORD <|@ <|@
      nr  756  <|@ instruction JUMP ~[] destination: B68 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    probability 4562093595080792590
    begin_IR
      LIR
      nr  766  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  768  <|@ instruction r14|QWORD = MOVE stack:56|QWORD moveKind: QWORD <|@ <|@
      nr  770  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  772  <|@ instruction JUMP ~[] destination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B66" "B68" "B71" "B70" 
    successors "B73" "B74" 
    xhandlers
    flags 
    probability 4592437312858669387
    begin_IR
      LIR
      nr  788  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  790  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  792  <|@ instruction MOV (x: [r11|QWORD[.] + 24], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  794  <|@ instruction rsi|QWORD[*] = XOR (x: r11|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  796  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    probability 4591660023639118941
    begin_IR
      LIR
      nr  802  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  804  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    probability 4590960463341523540
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  812  <|@ instruction r11|QWORD[*] = SHR r11|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  814  <|@ instruction CMPCONSTBRANCH [r11|QWORD[*] + r14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B83" 
    xhandlers
    flags 
    probability 4590330859073687679
    begin_IR
      LIR
      nr  816  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  818  <|@ instruction JUMP ~[] destination: B77 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B83" 
    xhandlers
    flags 
    probability 4577371935537457006
    begin_IR
      LIR
      nr  798  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  800  <|@ instruction JUMP ~[] destination: B73 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B83" 
    xhandlers
    flags 
    probability 4576750104161816649
    begin_IR
      LIR
      nr  806  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  808  <|@ instruction JUMP ~[] destination: B75 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    probability 4576190455923740328
    begin_IR
      LIR
      nr  820  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  822  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  824  <|@ instruction CMPCONSTBRANCH [r11|QWORD[*] + r14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B83" 
    xhandlers
    flags 
    probability 4575686772509471639
    begin_IR
      LIR
      nr  826  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  828  <|@ instruction JUMP ~[] destination: B79 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    probability 4561198157899870475
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  832  <|@ instruction MOVB [r11|QWORD[*] + r14|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  834  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  836  <|@ instruction r11|QWORD[*] = ADD (x: r11|QWORD[*], y: r14|QWORD) size: QWORD <|@ <|@
      nr  838  <|@ instruction TESTBRANCH (x: rsi|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    probability 4560392264437040573
    begin_IR
      LIR
      nr  848  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  850  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  852  <|@ instruction MOV (x: [rdx|QWORD + rsi|QWORD * 1 - 8], y: r11|QWORD[*]) size: QWORD <|@ <|@
      nr  854  <|@ instruction rsi|QWORD = LEA [rsi|QWORD - 8] size: QWORD <|@ <|@
      nr  856  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  858  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B88" 
    xhandlers
    flags 
    probability 4559287139136259037
    begin_IR
      LIR
      nr  464  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  466  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  468  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  472  <|@ instruction JUMP ~[] destination: B43 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4553315745025075769
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  182  <|@ instruction stack:36|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  184  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  186  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 40] size: QWORD <|@ <|@
      nr  188  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4553268943811267021
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  208  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 296] instr: 0 <|@ <|@
      nr  210  <|@ instruction MOV [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  212  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>;compressed} <|@ <|@
      nr  214  <|@ instruction MOV [rsi|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  216  <|@ instruction MOV [rsi|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  218  <|@ instruction MOV [rsi|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  220  <|@ instruction MOV [rsi|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  222  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  224  <|@ instruction stack:64|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  226  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4553315745025075769
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  230  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  234  <|@ instruction rdx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  236  <|@ instruction rcx|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  238  <|@ instruction r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  240  <|@ instruction r9|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  242  <|@ instruction stack:112|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  244  <|@ st <@st|@live-base-pointers: []
java.util.LinkedHashMap$Entry.<init>(LinkedHashMap.java:208) [bci: 6]
locals: - - - - - 
java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 9]
stack: stack:112|QWORD[.] 
locals: stack:72|QWORD[.] stack:36|DWORD stack:80|QWORD[.] stack:88|QWORD[.] Object[null] - 
java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stack: stack:96|QWORD[.] stack:60|DWORD 
locals: stack:72|QWORD[.] - - - - stack:32|DWORD - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.]] [] callTarget: HotSpotMethod<HashMap$Node.<init>(int, Object, Object, HashMap$Node)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:6, 9, 56] <|@ <|@
      nr  246  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  248  <|@ instruction rdx|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr  250  <|@ st <@st|@live-base-pointers: []
java.util.LinkedHashMap.newNode(LinkedHashMap.java:283) [bci: 17]
locals: - - - - - stack:112|QWORD[.] 
java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stack: stack:96|QWORD[.] stack:60|DWORD 
locals: stack:72|QWORD[.] - - - - stack:32|DWORD - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<LinkedHashMap.linkNodeAtEnd(LinkedHashMap$Entry)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:17, 56] <|@ <|@
      nr  252  <|@ instruction rax|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr  254  <|@ instruction r14|QWORD = MOVE stack:56|QWORD moveKind: QWORD <|@ <|@
      nr  256  <|@ instruction r13|QWORD = MOVE stack:48|QWORD moveKind: QWORD <|@ <|@
      nr  258  <|@ instruction r11|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr  260  <|@ instruction rbx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  262  <|@ instruction rdi|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  264  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    probability 4546075572092099182
    begin_IR
      LIR
      nr  840  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  842  <|@ instruction rsi|QWORD = MOVE r11|QWORD[*] moveKind: QWORD <|@ <|@
      nr  844  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  846  <|@ instruction JUMP ~[] destination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B73" "B75" "B77" "B79" "B82" "B81" 
    successors "B84" "B85" 
    xhandlers
    flags 
    probability 4592437312858669387
    begin_IR
      LIR
      nr  860  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  862  <|@ instruction CMPCONSTBRANCH stack:40|DWORD trueDestinationProbability: 0.9999886211240704 condition: < trueDestination: B83 -> B84 falseDestination: B83 -> B85 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" 
    xhandlers
    flags 
    probability 4592437224411893480
    begin_IR
      LIR
      nr  864  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  866  <|@ instruction r8|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr  868  <|@ instruction JUMP ~[] destination: B84 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B50" "B55" "B64" "B84" "B85" "B63" "B53" 
    successors "B87" "B100" 
    xhandlers
    flags 
    probability 4595548303301553864
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  886  <|@ instruction TESTBRANCH (x: r8|QWORD[.], y: r8|QWORD[.]) trueDestinationProbability: 0.6091185940042786 condition: = trueDestination: B86 -> B87 falseDestination: B86 -> B100 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B88" 
    xhandlers
    flags 
    probability 4592437118697206803
    begin_IR
      LIR
      nr  888  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  892  <|@ instruction JUMP ~[] destination: B87 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B35" "B87" "B43" "B44" "B41" "B39" "B37" 
    successors "B89" "B90" 
    xhandlers
    flags 
    probability 4606558935301518032
    begin_IR
      LIR
      nr  894  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  896  <|@ instruction INC [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  898  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  900  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, ~y: [rsi|QWORD[.] + 20]) size: DWORD <|@ <|@
      nr  902  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: rax|DWORD) size: DWORD <|@ <|@
      nr  904  <|@ instruction CMPBRANCH (x: rax|DWORD, y: [rsi|QWORD[.] + 28]) trueDestinationProbability: 7.853038846579175E-4 condition: > trueDestination: B88 -> B89 falseDestination: B88 -> B90 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B91" 
    xhandlers
    flags 
    probability 4606552351536966788
    begin_IR
      LIR
      nr  920  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  922  <|@ instruction r13|QWORD = MOVE stack:48|QWORD moveKind: QWORD <|@ <|@
      nr  924  <|@ instruction JUMP ~[] destination: B90 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" "B89" 
    successors "B92" "B93" "B99" 
    xhandlers
    flags 
    probability 4606558935301518032
    begin_IR
      LIR
      nr  926  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  928  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~r13|QWORD - keyConstants: [meta{HotSpotType<Ljava/util/HashMap;, resolved>}, meta{HotSpotType<Ljava/util/LinkedHashMap;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/replacements/SnippetTemplate$LRUCache;, resolved>}] keyTargets: [B91 -> B92, B91 -> B93, B91 -> B93] defaultTarget: B91 -> B99 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B97" 
    xhandlers
    flags 
    probability 4606555909645339483
    begin_IR
      LIR
      nr  930  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  932  <|@ instruction JUMP ~[] destination: B92 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B92" "B94" "B96" 
    successors 
    xhandlers
    flags 
    probability 4606558935301518031
    begin_IR
      LIR
      nr  982  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  984  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  986  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B101" "B119" 
    xhandlers
    flags 
    probability 4589652288651159933
    begin_IR
      LIR
      nr 1006  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1008  <|@ instruction r13|QWORD = MOVE stack:48|QWORD moveKind: QWORD <|@ <|@
      nr 1010  <|@ instruction r9|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1012  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1014  <|@ instruction r10|DWORD[_] = MOV [r8|QWORD[.] + 20] size: DWORD <|@ <|@
      nr 1016  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.9999962001170364 condition: = trueDestination: B100 -> B101 falseDestination: B100 -> B119 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B102" "B103" 
    xhandlers
    flags 
    probability 4589652269697845341
    begin_IR
      LIR
      nr 1018  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1020  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B103 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B108" 
    xhandlers
    flags 
    probability 4589138949298219176
    begin_IR
      LIR
      nr 1022  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1026  <|@ instruction JUMP ~[] destination: B102 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" "B105" 
    xhandlers
    flags 
    probability 4574630580609171603
    begin_IR
      LIR
      nr 1028  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1030  <|@ instruction r11|QWORD[.+] = LEA [r8|QWORD[.] + 20] size: QWORD <|@ <|@
      nr 1032  <|@ instruction r11|DWORD[_] = MOV [r11|QWORD[.+]] size: DWORD <|@ <|@
      nr 1034  <|@ instruction TESTBRANCH (x: r11|DWORD[_], y: r11|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B103 -> B104 falseDestination: B103 -> B105 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B106" "B107" 
    xhandlers
    flags 
    probability 4573832524763622737
    begin_IR
      LIR
      nr 1042  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1044  <|@ instruction r9|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr 1046  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr 1048  <|@ instruction TESTBRANCH (x: r9|QWORD, y: r9|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B105 -> B106 falseDestination: B105 -> B107 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B108" 
    xhandlers
    flags 
    probability 4573114274502628758
    begin_IR
      LIR
      nr 1060  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1062  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr 1064  <|@ instruction MOV (x: [rcx|QWORD + r9|QWORD * 1 - 8], y: r11|QWORD[.]) size: QWORD <|@ <|@
      nr 1066  <|@ instruction r11|QWORD = LEA [r9|QWORD - 8] size: QWORD <|@ <|@
      nr 1068  <|@ instruction MOV (x: [r15|QWORD + 40], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1072  <|@ instruction JUMP ~[] destination: B107 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B91" 
    xhandlers
    flags 
    probability 4559880998172045651
    begin_IR
      LIR
      nr  906  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  908  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  912  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:669) [bci: 288]
locals: stack:72|QWORD[.] - - - - stack:32|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.resize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:288] <|@ <|@
      nr  914  <|@ instruction r13|QWORD = MOVE stack:48|QWORD moveKind: QWORD <|@ <|@
      nr  916  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  918  <|@ instruction JUMP ~[] destination: B89 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B108" 
    xhandlers
    flags 
    probability 4559523670035962382
    begin_IR
      LIR
      nr 1036  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1040  <|@ instruction JUMP ~[] destination: B104 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B108" 
    xhandlers
    flags 
    probability 4558885225359523289
    begin_IR
      LIR
      nr 1050  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1052  <|@ instruction rsi|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1054  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr 1058  <|@ instruction JUMP ~[] destination: B106 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B102" "B104" "B107" "B106" 
    successors "B109" "B110" 
    xhandlers
    flags 
    probability 4589652269697845341
    begin_IR
      LIR
      nr 1074  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1024  <|@ instruction r11|DWORD[_] = MOVE stack:100|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1076  <|@ instruction MOV (x: [r8|QWORD[.] + 20], y: r11|DWORD[_]) size: DWORD <|@ <|@
      nr 1078  <|@ instruction rsi|QWORD[*] = XOR (x: r8|QWORD[.], y: stack:88|QWORD[.]) size: QWORD <|@ <|@
      nr 1080  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B108 -> B109 falseDestination: B108 -> B110 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" "B112" 
    xhandlers
    flags 
    probability 4589138949298219176
    begin_IR
      LIR
      nr 1088  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1090  <|@ instruction r11|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1092  <|@ instruction TESTBRANCH (x: r11|QWORD[.], y: r11|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B110 -> B111 falseDestination: B110 -> B112 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B113" "B114" 
    xhandlers
    flags 
    probability 4588241136471976702
    begin_IR
      LIR
      nr 1100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1102  <|@ instruction r14|QWORD = MOVE stack:56|QWORD moveKind: QWORD <|@ <|@
      nr 1104  <|@ instruction rsi|QWORD[*] = SHR r8|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr 1106  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B112 -> B113 falseDestination: B112 -> B114 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B120" 
    xhandlers
    flags 
    probability 4587433104928358475
    begin_IR
      LIR
      nr 1108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1112  <|@ instruction JUMP ~[] destination: B113 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B120" 
    xhandlers
    flags 
    probability 4574630580609171603
    begin_IR
      LIR
      nr 1082  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1086  <|@ instruction JUMP ~[] destination: B109 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B120" 
    xhandlers
    flags 
    probability 4573832524763622738
    begin_IR
      LIR
      nr 1094  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1098  <|@ instruction JUMP ~[] destination: B111 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B115" "B116" 
    xhandlers
    flags 
    probability 4573114274502628759
    begin_IR
      LIR
      nr 1114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1116  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr 1118  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B114 -> B115 falseDestination: B114 -> B116 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B120" 
    xhandlers
    flags 
    probability 4572467849267734178
    begin_IR
      LIR
      nr 1120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1124  <|@ instruction JUMP ~[] destination: B115 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B117" "B118" 
    xhandlers
    flags 
    probability 4558310625150728107
    begin_IR
      LIR
      nr 1126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1128  <|@ instruction MOVB [rsi|QWORD[*] + r14|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr 1130  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr 1132  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: r14|QWORD) size: QWORD <|@ <|@
      nr 1134  <|@ instruction TESTBRANCH (x: rdx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B116 -> B117 falseDestination: B116 -> B118 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B120" 
    xhandlers
    flags 
    probability 4557793484962812442
    begin_IR
      LIR
      nr 1146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1148  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr 1150  <|@ instruction MOV (x: [rbx|QWORD + rdx|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr 1152  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr 1154  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1158  <|@ instruction JUMP ~[] destination: B118 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B94" "B95" 
    xhandlers
    flags 
    probability 4554832167497868566
    begin_IR
      LIR
      nr  934  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  936  <|@ instruction rdi|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  938  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.4891304347826087 condition: = trueDestination: B93 -> B94 falseDestination: B93 -> B95 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B96" "B98" 
    xhandlers
    flags 
    probability 4550463275345577801
    begin_IR
      LIR
      nr  944  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  946  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  948  <|@ instruction rdx|DWORD[_] = MOV [rsi|QWORD[.] + 52] size: DWORD <|@ <|@
      nr  950  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:670) [bci: 292]
locals: rsi|QWORD[.] - - - - rdi|DWORD - - - - - - - 
>@ <|@ instruction NULLCHECK [rdx|DWORD[_] * 8] state [bci:292] <|@ <|@
      nr  952  <|@ instruction rbx|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  954  <|@ instruction rax|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr  956  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rax|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr  958  <|@ instruction rbx|QWORD = MOV [rbx|QWORD + 872] size: QWORD <|@ <|@
      nr  960  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  962  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  964  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  968  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  972  <|@ instruction stack:112|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  974  <|@ st <@st|@live-base-pointers: []
java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 15]
locals: stack:72|QWORD[.] - stack:112|QWORD[.] - 
java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
locals: - - - - - - - - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<LinkedHashMap.removeEldestEntry(Map$Entry)> state [bci:15, 295] <|@ <|@
      nr  976  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B95 -> B96 falseDestination: B95 -> B98 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B97" 
    xhandlers
    flags 
    probability 4550463275345577801
    begin_IR
      LIR
      nr  978  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  980  <|@ instruction JUMP ~[] destination: B96 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B97" 
    xhandlers
    flags 
    probability 4550193860395418340
    begin_IR
      LIR
      nr  940  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  942  <|@ instruction JUMP ~[] destination: B94 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B120" 
    xhandlers
    flags 
    probability 4543399067768740112
    begin_IR
      LIR
      nr 1136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1138  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1140  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr 1144  <|@ instruction JUMP ~[] destination: B117 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B119" "B109" "B117" "B118" "B115" "B113" "B111" 
    successors 
    xhandlers
    flags 
    probability 4589652288651159933
    begin_IR
      LIR
      nr 1168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1170  <|@ instruction rbx|QWORD = MOV [r13|QWORD + 688] size: QWORD <|@ <|@
      nr 1172  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr 1174  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr 1176  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1178  <|@ instruction rdx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1180  <|@ instruction stack:112|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1182  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:663) [bci: 253]
locals: - - - - - - - - - - - - stack:112|QWORD[.] 
>@ <|@ instruction - = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<HashMap.afterNodeAccess(HashMap$Node)> state [bci:253] <|@ <|@
      nr 1184  <|@ instruction rax|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1186  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4542678729597855531
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  538  <|@ instruction stack:112|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  540  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: stack:72|QWORD[.] stack:36|DWORD rcx|QWORD[.] stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD stack:96|QWORD[.] - stack:40|DWORD - - - - 
>@ <|@ instruction rsi|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD state [bci:29] <|@ <|@
      nr  542  <|@ instruction rdx|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr  544  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr  546  <|@ instruction rbx|QWORD = MOV [rsi|QWORD + 464] size: QWORD <|@ <|@
      nr  548  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  550  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  552  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  554  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:641) [bci: 91]
locals: stack:72|QWORD[.] stack:36|DWORD stack:80|QWORD[.] stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD stack:96|QWORD[.] stack:112|QWORD[.] - - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:91] <|@ <|@
      nr  556  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B86" 
    xhandlers
    flags 
    probability 4542678729597855531
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  572  <|@ instruction r8|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr  574  <|@ instruction JUMP ~[] destination: B53 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B63" 
    xhandlers
    flags 
    probability 4529894057192690854
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  642  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: stack:72|QWORD[.] stack:36|DWORD rcx|QWORD[.] stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD stack:96|QWORD[.] r11|QWORD[.] - - - - stack:40|DWORD 
>@ <|@ instruction rsi|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD state [bci:134] <|@ <|@
      nr  644  <|@ instruction rdx|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr  646  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr  648  <|@ instruction rbx|QWORD = MOV [rsi|QWORD + 464] size: QWORD <|@ <|@
      nr  650  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  652  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  654  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  656  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:654) [bci: 203]
locals: stack:72|QWORD[.] stack:36|DWORD stack:80|QWORD[.] stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD stack:96|QWORD[.] - - - stack:112|QWORD[.] - stack:40|DWORD 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:203] <|@ <|@
      nr  658  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B86" 
    xhandlers
    flags 
    probability 4529894057192690854
    begin_IR
      LIR
      nr  682  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  684  <|@ instruction r8|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr  686  <|@ instruction JUMP ~[] destination: B63 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4523100981620127249
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction stack:64|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  194  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>} <|@ <|@
      nr  196  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: stack:72|QWORD[.] stack:36|DWORD stack:80|QWORD[.] stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD stack:96|QWORD[.] - stack:40|DWORD - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7fba62ccef80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:29] <|@ <|@
      nr  198  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: stack:72|QWORD[.] stack:36|DWORD stack:80|QWORD[.] stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD stack:96|QWORD[.] - stack:40|DWORD - - - - 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:29] <|@ <|@
      nr  200  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  202  <|@ instruction JUMP ~[] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" 
    xhandlers
    flags 
    probability 4518403274531071726
    begin_IR
      LIR
      nr  870  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  872  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  874  <|@ instruction rdx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  876  <|@ instruction rcx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  878  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:650) [bci: 169]
locals: stack:72|QWORD[.] - - stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD - - - - stack:112|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<HashMap.treeifyBin(HashMap$Node[], int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:169] <|@ <|@
      nr  880  <|@ instruction r8|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr  882  <|@ instruction JUMP ~[] destination: B85 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B86" 
    xhandlers
    flags 
    probability 4510226010095555986
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  582  <|@ instruction stack:112|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  584  <|@ instruction stack:36|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  586  <|@ instruction rsi|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr  588  <|@ instruction rdx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  590  <|@ instruction rcx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  592  <|@ instruction r8|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  594  <|@ instruction r9|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  596  <|@ instruction rdi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  598  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:644) [bci: 123]
locals: stack:72|QWORD[.] - - stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|QWORD[.], rdi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap$TreeNode.putTreeVal(HashMap, HashMap$Node[], int, Object, Object)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:123] <|@ <|@
      nr  600  <|@ instruction r8|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  602  <|@ instruction JUMP ~[] destination: B55 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B120" 
    xhandlers
    flags 
    probability 4508568125070994604
    begin_IR
      LIR
      nr 1160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1162  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:659) [bci: 222]
locals: stack:72|QWORD[.] - - stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD - - - - r8|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r10|DWORD[_] * 8] state [bci:222] <|@ <|@
      nr 1166  <|@ instruction JUMP ~[] destination: B119 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction r11|QWORD = MOVE input: long[5780|0x1694] <|@ <|@
      nr  506  <|@ instruction r10|DWORD = MOVE input: int[-51507|0xffffffffffff36cd] <|@ <|@
      nr  508  <|@ instruction stack:36|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  510  <|@ instruction r8|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  512  <|@ instruction JUMP ~[] destination: B47 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  662  <|@ instruction r8|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr  664  <|@ instruction rbp|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  666  <|@ instruction MOV [r15|QWORD + 1156] y: -157971 size: DWORD <|@ <|@
      nr  668  <|@ instruction MOV [r15|QWORD + 1168] y: 1300 size: QWORD <|@ <|@
      nr  670  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:654) [bci: 206]
stack: int[0|0x0] 
locals: stack:72|QWORD[.] stack:36|DWORD stack:80|QWORD[.] stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD stack:96|QWORD[.] - - - r8|QWORD[.] - rbp|DWORD 
>@ <|@ instruction DEOPT info [bci:206] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1190  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1192  <|@ instruction stack:36|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr 1194  <|@ instruction r8|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1196  <|@ instruction r10|DWORD = MOVE input: int[-75547|0xfffffffffffed8e5] <|@ <|@
      nr 1198  <|@ instruction JUMP ~[] destination: B121 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B121" "B47" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1202  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1204  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1206  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: stack:72|QWORD[.] stack:36|DWORD stack:80|QWORD[.] stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD stack:96|QWORD[.] - r8|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:29] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  492  <|@ instruction JUMP ~[] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  998  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1000  <|@ instruction MOV [r15|QWORD + 1156] y: -61235 size: DWORD <|@ <|@
      nr 1002  <|@ instruction MOV [r15|QWORD + 1168] y: 8980 size: QWORD <|@ <|@
      nr 1004  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:670) [bci: 292]
locals: stack:72|QWORD[.] - - - - stack:32|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:292] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction JUMP ~[] destination: B26 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B26" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction rbp|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  496  <|@ instruction MOV [r15|QWORD + 1156] y: -82987 size: DWORD <|@ <|@
      nr  498  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  500  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stack: stack:96|QWORD[.] rbp|DWORD rax|QWORD[.] 
locals: stack:72|QWORD[.] - - - - stack:32|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:59] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  558  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  560  <|@ instruction r11|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr  562  <|@ instruction rbx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  564  <|@ instruction MOV [r15|QWORD + 1156] y: -153363 size: DWORD <|@ <|@
      nr  566  <|@ instruction MOV [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  568  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:641) [bci: 94]
stack: int[0|0x0] 
locals: stack:72|QWORD[.] stack:36|DWORD stack:80|QWORD[.] stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD rbx|QWORD[.] r11|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:94] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  988  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  990  <|@ instruction rdx|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr  992  <|@ instruction MOV [r15|QWORD + 1156] y: -161299 size: DWORD <|@ <|@
      nr  994  <|@ instruction MOV [r15|QWORD + 1168] y: 10260 size: QWORD <|@ <|@
      nr  996  <|@ st <@st|@live-base-pointers: []
java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 18]
stack: rax|DWORD 
locals: stack:72|QWORD[.] - rdx|QWORD[.] - 
java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
locals: - - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:18, 295] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction MOV [r15|QWORD + 1156] y: -129299 size: DWORD <|@ <|@
      nr   58  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:634) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] r8|QWORD[.] r9|DWORD rdi|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #21         // table:java.util.HashMap$Node[]
     4: dup           
     5: astore        6
     7: ifnull        19
    10: aload         6
    12: arraylength   
    13: dup           
    14: istore        8
    16: ifne          29
    19: aload_0       
    20: invokevirtual #23         // resize:()java.util.HashMap$Node[]
    23: dup           
    24: astore        6
    26: arraylength   
    27: istore        8
    29: aload         6
    31: iload         8
    33: iconst_1      
    34: isub          
    35: iload_1       
    36: iand          
    37: dup           
    38: istore        9
    40: aaload        
    41: dup           
    42: astore        7
    44: ifnonnull     63
    47: aload         6
    49: iload         9
    51: aload_0       
    52: iload_1       
    53: aload_2       
    54: aload_3       
    55: aconst_null   
    56: invokevirtual #40         // newNode:(int, java.lang.Object, java.lang.Object, java.util.HashMap$Node)java.util.HashMap$Node
    59: aastore       
    60: goto          259
    63: aload         7
    65: getfield      #35         // java.util.HashMap$Node.hash:int
    68: iload_1       
    69: if_icmpne     104
    72: aload         7
    74: getfield      #36         // java.util.HashMap$Node.key:java.lang.Object
    77: dup           
    78: astore        11
    80: aload_2       
    81: if_acmpeq     97
    84: aload_2       
    85: ifnull        104
    88: aload_2       
    89: aload         11
    91: invokevirtual #37         // java.lang.Object.equals:(java.lang.Object)boolean
    94: ifeq          104
    97: aload         7
    99: astore        10
   101: goto          222
   104: aload         7
   106: instanceof    #180        // java.util.HashMap$TreeNode
   109: ifeq          131
   112: aload         7
   114: checkcast     #180        // java.util.HashMap$TreeNode
   117: aload_0       
   118: aload         6
   120: iload_1       
   121: aload_2       
   122: aload_3       
   123: invokevirtual #41         // java.util.HashMap$TreeNode.putTreeVal:(java.util.HashMap, java.util.HashMap$Node[], int, java.lang.Object, java.lang.Object)java.util.HashMap$TreeNode
   126: astore        10
   128: goto          222
   131: iconst_0      
   132: istore        12
   134: aload         7
   136: getfield      #38         // java.util.HashMap$Node.next:java.util.HashMap$Node
   139: dup           
   140: astore        10
   142: ifnonnull     175
   145: aload         7
   147: aload_0       
   148: iload_1       
   149: aload_2       
   150: aload_3       
   151: aconst_null   
   152: invokevirtual #40         // newNode:(int, java.lang.Object, java.lang.Object, java.util.HashMap$Node)java.util.HashMap$Node
   155: putfield      #38         // java.util.HashMap$Node.next:java.util.HashMap$Node
   158: iload         12
   160: bipush        7
   162: if_icmplt     222
   165: aload_0       
   166: aload         6
   168: iload_1       
   169: invokevirtual #42         // treeifyBin:(java.util.HashMap$Node[], int)void
   172: goto          222
   175: aload         10
   177: getfield      #35         // java.util.HashMap$Node.hash:int
   180: iload_1       
   181: if_icmpne     212
   184: aload         10
   186: getfield      #36         // java.util.HashMap$Node.key:java.lang.Object
   189: dup           
   190: astore        11
   192: aload_2       
   193: if_acmpeq     222
   196: aload_2       
   197: ifnull        212
   200: aload_2       
   201: aload         11
   203: invokevirtual #37         // java.lang.Object.equals:(java.lang.Object)boolean
   206: ifeq          212
   209: goto          222
   212: aload         10
   214: astore        7
   216: iinc          
   219: goto          134
   222: aload         10
   224: ifnull        259
   227: aload         10
   229: getfield      #34         // java.util.HashMap$Node.value:java.lang.Object
   232: astore        12
   234: iload         4
   236: ifeq          244
   239: aload         12
   241: ifnonnull     250
   244: aload         10
   246: aload_3       
   247: putfield      #34         // java.util.HashMap$Node.value:java.lang.Object
   250: aload_0       
   251: aload         10
   253: invokevirtual #43         // afterNodeAccess:(java.util.HashMap$Node)void
   256: aload         12
   258: areturn       
   259: aload_0       
   260: dup           
   261: getfield      #44         // modCount:int
   264: iconst_1      
   265: iadd          
   266: putfield      #44         // modCount:int
   269: aload_0       
   270: dup           
   271: getfield      #32         // size:int
   274: iconst_1      
   275: iadd          
   276: dup_x1        
   277: putfield      #32         // size:int
   280: aload_0       
   281: getfield      #17         // threshold:int
   284: if_icmple     292
   287: aload_0       
   288: invokevirtual #23         // resize:()java.util.HashMap$Node[]
   291: pop           
   292: aload_0       
   293: iload         5
   295: invokevirtual #45         // afterNodeInsertion:(boolean)void
   298: aconst_null   
   299: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After ControlFlowOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|DWORD, rdi|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@21849dd slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:72|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction stack:80|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction stack:88|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   12  <|@ instruction stack:28|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   14  <|@ instruction stack:32|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr   16  <|@ instruction rbx|DWORD[_] = MOV [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   18  <|@ instruction TESTBRANCH (x: rbx|DWORD[_], y: rbx|DWORD[_]) trueDestinationProbability: 0.0015880438063265454 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607168114973028567
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction rax|DWORD = MOV [rbx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   52  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607168114973028567
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr   66  <|@ instruction r10|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   68  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B1" 
    successors "B6" "B121" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   72  <|@ instruction stack:96|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   74  <|@ instruction rax|DWORD = MOV [rbx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   76  <|@ instruction r11|DWORD = MOV [rbx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   78  <|@ instruction rbp|DWORD = DEC r10|DWORD size: DWORD <|@ <|@
      nr   80  <|@ instruction rbp|DWORD = AND (x: rdx|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr   82  <|@ instruction CMPBRANCH (x: rax|DWORD, y: rbp|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B121 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B48" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction stack:40|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   88  <|@ instruction rax|DWORD[_] = MOV [rbx|QWORD[.] + rbp|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   90  <|@ instruction r13|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   92  <|@ instruction r14|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr   94  <|@ instruction r13|QWORD = UNCOMPRESSPOINTER (input: r13|DWORD, ~baseRegister: r14|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr   96  <|@ instruction stack:48|QWORD = MOVE r13|QWORD moveKind: QWORD <|@ <|@
      nr   98  <|@ instruction r14|QWORD = MOVE input: long[140438306553856|0x7fba57600000] <|@ <|@
      nr  100  <|@ instruction stack:56|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr  102  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  104  <|@ instruction stack:100|DWORD[_] = MOVE r10|DWORD[_] moveKind: DWORD <|@ <|@
      nr  106  <|@ instruction TESTBRANCH (x: rax|DWORD[_], y: rax|DWORD[_]) trueDestinationProbability: 0.8229115724385652 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B12" "B47" 
    xhandlers
    flags 
    probability 4605587348047262798
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction stack:60|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  112  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~r13|QWORD - keyConstants: [meta{HotSpotType<Ljava/util/HashMap;, resolved>}, meta{HotSpotType<Ljava/util/LinkedHashMap;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/replacements/SnippetTemplate$LRUCache;, resolved>}] keyTargets: [B7 -> B8, B7 -> B12, B7 -> B12] defaultTarget: B7 -> B47 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4605585062831744793
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction rax|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  118  <|@ instruction rbp|QWORD = LEA [rax|QWORD + 32] size: QWORD <|@ <|@
      nr  120  <|@ instruction CMPBRANCH (x: rbp|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4605510964398880109
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction MOV (x: [r15|QWORD + 440], y: rbp|QWORD) size: QWORD <|@ <|@
      nr  152  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 288] instr: 0 <|@ <|@
      nr  154  <|@ instruction MOV [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  156  <|@ instruction MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>;compressed} <|@ <|@
      nr  158  <|@ instruction MOV [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  160  <|@ instruction MOV [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  162  <|@ instruction MOV [rax|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  164  <|@ instruction rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  166  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 4605585062831744793
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  170  <|@ instruction MOV (x: [rax|QWORD[.] + 20], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  172  <|@ instruction rcx|DWORD[_] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  174  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr  176  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  178  <|@ instruction JUMP ~[] destination: B11 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B11" "B15" 
    successors "B27" "B18" 
    xhandlers
    flags 
    probability 4605587348047262798
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  270  <|@ instruction rdx|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr  272  <|@ instruction r11|QWORD = UNCOMPRESSPOINTER (input: r11|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr  274  <|@ instruction rdx|QWORD = MOV [r11|QWORD + 208] size: QWORD <|@ <|@
      nr  276  <|@ instruction rcx|DWORD = MOV [rdx|QWORD + 20] size: DWORD <|@ <|@
      nr  278  <|@ instruction r8|DWORD = MOV [rax|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  280  <|@ instruction r9|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr  282  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: r9|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr  284  <|@ instruction r9|QWORD = MOVSXD rcx|DWORD size: QWORD <|@ <|@
      nr  286  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r8|QWORD + r9|QWORD * 1]) trueDestinationProbability: 0.5 condition: = trueDestination: B16 -> B27 falseDestination: B16 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B46" 
    xhandlers
    flags 
    probability 4601083748419892302
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ instruction CMPCONSTBRANCH rcx|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B46 y: 32 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B27" "B21" 
    xhandlers
    flags 
    probability 4601083748419892302
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  298  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: r8|QWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B19 -> B27 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4596580148792521806
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction rcx|QWORD = MOV [r8|QWORD + 40] size: QWORD <|@ <|@
      nr  308  <|@ instruction r9|DWORD = MOV [rcx|QWORD] size: DWORD <|@ <|@
      nr  310  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  312  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B24" 
    successors "B23" "B46" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4602807799859017905
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  316  <|@ instruction CMPBRANCH (x: r9|DWORD, y: r10|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602807799859017905
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  320  <|@ instruction r11|DWORD = SHL r10|DWORD y: 3 size: DWORD <|@ <|@
      nr  322  <|@ instruction r11|DWORD = LEA [r11|DWORD + 8] size: DWORD <|@ <|@
      nr  324  <|@ instruction r11|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr  326  <|@ instruction r11|QWORD = MOV [rcx|QWORD + r11|QWORD * 1] size: QWORD <|@ <|@
      nr  328  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: r11|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B23 -> B25 falseDestination: B23 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B22" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4599230716294395707
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  332  <|@ instruction r10|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr  334  <|@ instruction JUMP ~[] destination: B24 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B27" 
    xhandlers
    flags 
    probability 4596580148792521807
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  338  <|@ instruction MOV (x: [r8|QWORD + 32], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  340  <|@ instruction JUMP ~[] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B16" "B25" "B19" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4605587348047262798
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" 
    xhandlers
    flags 
    probability 4604846135197064160
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction rbp|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  356  <|@ instruction JUMP ~[] destination: B28 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B49" "B54" 
    xhandlers
    flags 
    probability 4595548303301553864
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  518  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [rax|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.01987559010066231 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4595421491411700642
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction CMPCONSTBRANCH [rax|DWORD[_] * 8 + 8] trueDestinationProbability: 2.021089053783065E-6 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B56 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4595421478772878611
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  606  <|@ instruction rbp|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  608  <|@ instruction JUMP ~[] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B62" 
    successors "B65" "B58" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4595777537596400292
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  612  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] stack:88|QWORD[.] r9|DWORD rdi|DWORD rbx|QWORD[.] r11|QWORD[.] - - - - rbp|DWORD 
>@ <|@ instruction rax|DWORD[_] = MOV [r11|QWORD[.] + 24] size: DWORD state [bci:134] <|@ <|@
      nr  614  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  616  <|@ instruction TESTBRANCH (x: rax|DWORD[_], y: rax|DWORD[_]) trueDestinationProbability: 0.5880075530332061 condition: = trueDestination: B57 -> B65 falseDestination: B57 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4590110563079390205
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  620  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [rax|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.8692436604445373 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B62 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B57" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4576850562957400324
    begin_IR
      LIR
      nr  672  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  674  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] stack:88|QWORD[.] r9|DWORD rdi|DWORD rbx|QWORD[.] r11|QWORD[.] - - - - rbp|DWORD 
>@ <|@ instruction SAFEPOINT rax|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 thread: r15 state [bci:134] <|@ <|@
      nr  676  <|@ instruction rbp|DWORD = INC rbp|DWORD size: DWORD <|@ <|@
      nr  678  <|@ instruction r11|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  680  <|@ instruction JUMP ~[] destination: B62 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4592437312858669387
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  696  <|@ instruction stack:112|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  698  <|@ instruction stack:40|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  700  <|@ instruction stack:120|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  702  <|@ instruction rax|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  704  <|@ instruction r10|QWORD = MOV [r13|QWORD + 680] size: QWORD <|@ <|@
      nr  706  <|@ instruction r11|QWORD = MOV [r10|QWORD + 64] size: QWORD <|@ <|@
      nr  708  <|@ instruction rdi|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  712  <|@ instruction rdi|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  716  <|@ instruction r8|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  718  <|@ instruction r9|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  720  <|@ instruction rbx|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  722  <|@ instruction rax|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  724  <|@ instruction stack:36|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  726  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:648) [bci: 152]
stack: stack:120|QWORD[.] 
locals: stack:72|QWORD[.] stack:36|DWORD - stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD stack:96|QWORD[.] - - - stack:112|QWORD[.] - stack:40|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.]]) [] callTarget: HotSpotMethod<HashMap.newNode(int, Object, Object, HashMap$Node)> state [bci:152] <|@ <|@
      nr  728  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B67 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B72" 
    xhandlers
    flags 
    probability 4591660023639118941
    begin_IR
      LIR
      nr  730  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  732  <|@ instruction r11|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr  734  <|@ instruction r14|QWORD = MOVE stack:56|QWORD moveKind: QWORD <|@ <|@
      nr  736  <|@ instruction rbx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  738  <|@ instruction JUMP ~[] destination: B66 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" "B31" 
    xhandlers
    flags 
    probability 4590594123464754032
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction rbp|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  362  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + rbp|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  364  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  366  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B34 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4590001153184595122
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  374  <|@ instruction r10|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  376  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  378  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4589467479932452103
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction r11|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  390  <|@ instruction MOV (x: [r11|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  392  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  394  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  396  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B86" "B60" 
    xhandlers
    flags 
    probability 4589398445432346844
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction stack:112|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  626  <|@ instruction stack:40|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  628  <|@ instruction stack:120|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  630  <|@ instruction stack:36|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  632  <|@ instruction rsi|DWORD[_] = MOV [rax|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  634  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  636  <|@ instruction CMPBRANCH (x: r10|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.9998932466496128 condition: = trueDestination: B59 -> B86 falseDestination: B59 -> B60 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4577371935537457006
    begin_IR
      LIR
      nr  740  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  742  <|@ instruction r11|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr  744  <|@ instruction rbx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  746  <|@ instruction rsi|QWORD[.+] = LEA [r11|QWORD[.] + 24] size: QWORD <|@ <|@
      nr  748  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  750  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B67 -> B68 falseDestination: B67 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" "B71" 
    xhandlers
    flags 
    probability 4576750104161816650
    begin_IR
      LIR
      nr  758  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  760  <|@ instruction r10|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  762  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  764  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    probability 4576190455923740329
    begin_IR
      LIR
      nr  774  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  776  <|@ instruction r8|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  778  <|@ instruction MOV (x: [r8|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  780  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  782  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  784  <|@ instruction r14|QWORD = MOVE stack:56|QWORD moveKind: QWORD <|@ <|@
      nr  786  <|@ instruction JUMP ~[] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4575895921484393205
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction rbp|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  126  <|@ instruction stack:36|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  128  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>} <|@ <|@
      nr  130  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: stack:72|QWORD[.] stack:36|DWORD rcx|QWORD[.] stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD rbx|QWORD[.] - stack:40|DWORD - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7fba62ccef80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:29] <|@ <|@
      nr  132  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: stack:72|QWORD[.] stack:36|DWORD rcx|QWORD[.] stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD rbx|QWORD[.] - stack:40|DWORD - - - - 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:29] <|@ <|@
      nr  134  <|@ instruction r10|DWORD[_] = MOVE stack:100|DWORD[_] moveKind: DWORD <|@ <|@
      nr  144  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  146  <|@ instruction JUMP ~[] destination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4575188794187971253
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  382  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  384  <|@ instruction JUMP ~[] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B28" "B29" "B33" "B32" 
    successors "B88" "B36" 
    xhandlers
    flags 
    probability 4605587348047262798
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  402  <|@ instruction MOV (x: [rbx|QWORD[.] + rbp|DWORD * 4 + 16], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  404  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + rbp|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  406  <|@ instruction rsi|QWORD[*] = XOR (x: rsi|QWORD[.+], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  408  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B34 -> B88 falseDestination: B34 -> B36 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B88" "B38" 
    xhandlers
    flags 
    probability 4604846135197064160
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  418  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B36 -> B88 falseDestination: B36 -> B38 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B88" "B40" 
    xhandlers
    flags 
    probability 4604179043631885386
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  430  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + rbp|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  432  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.+] y: 9 size: QWORD <|@ <|@
      nr  434  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B38 -> B88 falseDestination: B38 -> B40 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B88" "B42" 
    xhandlers
    flags 
    probability 4589467479932452103
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  446  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B40 -> B88 falseDestination: B40 -> B42 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4574334916984542422
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  456  <|@ instruction MOVB [rsi|QWORD[*] + r14|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  458  <|@ instruction r10|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  460  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: r14|QWORD) size: QWORD <|@ <|@
      nr  462  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B88" 
    xhandlers
    flags 
    probability 4573566427501456474
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  476  <|@ instruction r11|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  478  <|@ instruction MOV (x: [r11|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  480  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  482  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  486  <|@ instruction JUMP ~[] destination: B44 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4570262383476918658
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  522  <|@ instruction stack:36|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  524  <|@ instruction rsi|DWORD[_] = MOV [rax|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  526  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  528  <|@ instruction CMPBRANCH (x: r10|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.9854570809572428 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B86" 
    xhandlers
    flags 
    probability 4570144353713859813
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  532  <|@ instruction r8|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  534  <|@ instruction JUMP ~[] destination: B50 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 4564966382317228292
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   22  <|@ instruction stack:36|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   26  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:635) [bci: 20]
locals: stack:72|QWORD[.] stack:36|DWORD stack:80|QWORD[.] stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.resize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:20] <|@ <|@
      nr   28  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:635) [bci: 23]
stack: Object[null] 
locals: stack:72|QWORD[.] stack:36|DWORD stack:80|QWORD[.] stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD - - - - - - - 
>@ <|@ instruction rsi|DWORD = MOV [rax|QWORD[.] + 12] size: DWORD state [bci:23] <|@ <|@
      nr   30  <|@ instruction r10|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction rbx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction rdi|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr   36  <|@ instruction r9|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr   38  <|@ instruction r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction rcx|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction rdx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr   44  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction JUMP ~[] destination: B1 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B72" 
    xhandlers
    flags 
    probability 4562617473904064804
    begin_IR
      LIR
      nr  752  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  754  <|@ instruction r14|QWORD = MOVE stack:56|QWORD moveKind: QWORD <|@ <|@
      nr  756  <|@ instruction JUMP ~[] destination: B68 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    probability 4562093595080792590
    begin_IR
      LIR
      nr  766  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  768  <|@ instruction r14|QWORD = MOVE stack:56|QWORD moveKind: QWORD <|@ <|@
      nr  770  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  772  <|@ instruction JUMP ~[] destination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B66" "B68" "B71" "B70" 
    successors "B83" "B74" 
    xhandlers
    flags 
    probability 4592437312858669387
    begin_IR
      LIR
      nr  788  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  790  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  792  <|@ instruction MOV (x: [r11|QWORD[.] + 24], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  794  <|@ instruction rsi|QWORD[*] = XOR (x: r11|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  796  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B72 -> B83 falseDestination: B72 -> B74 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B83" "B76" 
    xhandlers
    flags 
    probability 4591660023639118941
    begin_IR
      LIR
      nr  802  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  804  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B83 falseDestination: B74 -> B76 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B83" "B78" 
    xhandlers
    flags 
    probability 4590960463341523540
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  812  <|@ instruction r11|QWORD[*] = SHR r11|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  814  <|@ instruction CMPCONSTBRANCH [r11|QWORD[*] + r14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B76 -> B83 falseDestination: B76 -> B78 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B83" "B80" 
    xhandlers
    flags 
    probability 4576190455923740328
    begin_IR
      LIR
      nr  820  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  822  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  824  <|@ instruction CMPCONSTBRANCH [r11|QWORD[*] + r14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B78 -> B83 falseDestination: B78 -> B80 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    probability 4561198157899870475
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  832  <|@ instruction MOVB [r11|QWORD[*] + r14|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  834  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  836  <|@ instruction r11|QWORD[*] = ADD (x: r11|QWORD[*], y: r14|QWORD) size: QWORD <|@ <|@
      nr  838  <|@ instruction TESTBRANCH (x: rsi|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    probability 4560392264437040573
    begin_IR
      LIR
      nr  848  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  850  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  852  <|@ instruction MOV (x: [rdx|QWORD + rsi|QWORD * 1 - 8], y: r11|QWORD[*]) size: QWORD <|@ <|@
      nr  854  <|@ instruction rsi|QWORD = LEA [rsi|QWORD - 8] size: QWORD <|@ <|@
      nr  856  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  858  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B88" 
    xhandlers
    flags 
    probability 4559287139136259037
    begin_IR
      LIR
      nr  464  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  466  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  468  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  472  <|@ instruction JUMP ~[] destination: B43 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4553315745025075769
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  182  <|@ instruction stack:36|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  184  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  186  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 40] size: QWORD <|@ <|@
      nr  188  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4553268943811267021
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  208  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 296] instr: 0 <|@ <|@
      nr  210  <|@ instruction MOV [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  212  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>;compressed} <|@ <|@
      nr  214  <|@ instruction MOV [rsi|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  216  <|@ instruction MOV [rsi|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  218  <|@ instruction MOV [rsi|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  220  <|@ instruction MOV [rsi|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  222  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  224  <|@ instruction stack:64|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  226  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4553315745025075769
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  230  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  234  <|@ instruction rdx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  236  <|@ instruction rcx|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  238  <|@ instruction r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  240  <|@ instruction r9|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  242  <|@ instruction stack:112|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  244  <|@ st <@st|@live-base-pointers: []
java.util.LinkedHashMap$Entry.<init>(LinkedHashMap.java:208) [bci: 6]
locals: - - - - - 
java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 9]
stack: stack:112|QWORD[.] 
locals: stack:72|QWORD[.] stack:36|DWORD stack:80|QWORD[.] stack:88|QWORD[.] Object[null] - 
java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stack: stack:96|QWORD[.] stack:60|DWORD 
locals: stack:72|QWORD[.] - - - - stack:32|DWORD - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.]] [] callTarget: HotSpotMethod<HashMap$Node.<init>(int, Object, Object, HashMap$Node)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:6, 9, 56] <|@ <|@
      nr  246  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  248  <|@ instruction rdx|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr  250  <|@ st <@st|@live-base-pointers: []
java.util.LinkedHashMap.newNode(LinkedHashMap.java:283) [bci: 17]
locals: - - - - - stack:112|QWORD[.] 
java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stack: stack:96|QWORD[.] stack:60|DWORD 
locals: stack:72|QWORD[.] - - - - stack:32|DWORD - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<LinkedHashMap.linkNodeAtEnd(LinkedHashMap$Entry)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:17, 56] <|@ <|@
      nr  252  <|@ instruction rax|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr  254  <|@ instruction r14|QWORD = MOVE stack:56|QWORD moveKind: QWORD <|@ <|@
      nr  256  <|@ instruction r13|QWORD = MOVE stack:48|QWORD moveKind: QWORD <|@ <|@
      nr  258  <|@ instruction r11|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr  260  <|@ instruction rbx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  262  <|@ instruction rdi|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  264  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    probability 4546075572092099182
    begin_IR
      LIR
      nr  840  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  842  <|@ instruction rsi|QWORD = MOVE r11|QWORD[*] moveKind: QWORD <|@ <|@
      nr  844  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  846  <|@ instruction JUMP ~[] destination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B72" "B74" "B76" "B78" "B82" "B81" 
    successors "B84" "B85" 
    xhandlers
    flags 
    probability 4592437312858669387
    begin_IR
      LIR
      nr  860  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  862  <|@ instruction CMPCONSTBRANCH stack:40|DWORD trueDestinationProbability: 0.9999886211240704 condition: < trueDestination: B83 -> B84 falseDestination: B83 -> B85 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" 
    xhandlers
    flags 
    probability 4592437224411893480
    begin_IR
      LIR
      nr  864  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  866  <|@ instruction r8|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr  868  <|@ instruction JUMP ~[] destination: B84 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B50" "B55" "B59" "B84" "B85" "B63" "B53" 
    successors "B88" "B100" 
    xhandlers
    flags 
    probability 4595548303301553864
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  886  <|@ instruction TESTBRANCH (x: r8|QWORD[.], y: r8|QWORD[.]) trueDestinationProbability: 0.6091185940042786 condition: = trueDestination: B86 -> B88 falseDestination: B86 -> B100 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B34" "B86" "B43" "B44" "B40" "B38" "B36" 
    successors "B89" "B90" 
    xhandlers
    flags 
    probability 4606558935301518032
    begin_IR
      LIR
      nr  894  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  896  <|@ instruction INC [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  898  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  900  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, ~y: [rsi|QWORD[.] + 20]) size: DWORD <|@ <|@
      nr  902  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: rax|DWORD) size: DWORD <|@ <|@
      nr  904  <|@ instruction CMPBRANCH (x: rax|DWORD, y: [rsi|QWORD[.] + 28]) trueDestinationProbability: 7.853038846579175E-4 condition: > trueDestination: B88 -> B89 falseDestination: B88 -> B90 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B91" 
    xhandlers
    flags 
    probability 4606552351536966788
    begin_IR
      LIR
      nr  920  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  922  <|@ instruction r13|QWORD = MOVE stack:48|QWORD moveKind: QWORD <|@ <|@
      nr  924  <|@ instruction JUMP ~[] destination: B90 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" "B89" 
    successors "B97" "B93" "B99" 
    xhandlers
    flags 
    probability 4606558935301518032
    begin_IR
      LIR
      nr  926  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  928  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~r13|QWORD - keyConstants: [meta{HotSpotType<Ljava/util/HashMap;, resolved>}, meta{HotSpotType<Ljava/util/LinkedHashMap;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/replacements/SnippetTemplate$LRUCache;, resolved>}] keyTargets: [B91 -> B97, B91 -> B93, B91 -> B93] defaultTarget: B91 -> B99 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B91" "B93" "B95" 
    successors 
    xhandlers
    flags 
    probability 4606558935301518031
    begin_IR
      LIR
      nr  982  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  984  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  986  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B101" "B119" 
    xhandlers
    flags 
    probability 4589652288651159933
    begin_IR
      LIR
      nr 1006  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1008  <|@ instruction r13|QWORD = MOVE stack:48|QWORD moveKind: QWORD <|@ <|@
      nr 1010  <|@ instruction r9|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1012  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1014  <|@ instruction r10|DWORD[_] = MOV [r8|QWORD[.] + 20] size: DWORD <|@ <|@
      nr 1016  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.9999962001170364 condition: = trueDestination: B100 -> B101 falseDestination: B100 -> B119 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B108" "B103" 
    xhandlers
    flags 
    probability 4589652269697845341
    begin_IR
      LIR
      nr 1018  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1020  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B101 -> B108 falseDestination: B101 -> B103 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B108" "B105" 
    xhandlers
    flags 
    probability 4574630580609171603
    begin_IR
      LIR
      nr 1028  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1030  <|@ instruction r11|QWORD[.+] = LEA [r8|QWORD[.] + 20] size: QWORD <|@ <|@
      nr 1032  <|@ instruction r11|DWORD[_] = MOV [r11|QWORD[.+]] size: DWORD <|@ <|@
      nr 1034  <|@ instruction TESTBRANCH (x: r11|DWORD[_], y: r11|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B103 -> B108 falseDestination: B103 -> B105 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B106" "B107" 
    xhandlers
    flags 
    probability 4573832524763622737
    begin_IR
      LIR
      nr 1042  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1044  <|@ instruction r9|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr 1046  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr 1048  <|@ instruction TESTBRANCH (x: r9|QWORD, y: r9|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B105 -> B106 falseDestination: B105 -> B107 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B108" 
    xhandlers
    flags 
    probability 4573114274502628758
    begin_IR
      LIR
      nr 1060  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1062  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr 1064  <|@ instruction MOV (x: [rcx|QWORD + r9|QWORD * 1 - 8], y: r11|QWORD[.]) size: QWORD <|@ <|@
      nr 1066  <|@ instruction r11|QWORD = LEA [r9|QWORD - 8] size: QWORD <|@ <|@
      nr 1068  <|@ instruction MOV (x: [r15|QWORD + 40], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1072  <|@ instruction JUMP ~[] destination: B107 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B91" 
    xhandlers
    flags 
    probability 4559880998172045651
    begin_IR
      LIR
      nr  906  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  908  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  912  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:669) [bci: 288]
locals: stack:72|QWORD[.] - - - - stack:32|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.resize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:288] <|@ <|@
      nr  914  <|@ instruction r13|QWORD = MOVE stack:48|QWORD moveKind: QWORD <|@ <|@
      nr  916  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  918  <|@ instruction JUMP ~[] destination: B89 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B108" 
    xhandlers
    flags 
    probability 4558885225359523289
    begin_IR
      LIR
      nr 1050  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1052  <|@ instruction rsi|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1054  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr 1058  <|@ instruction JUMP ~[] destination: B106 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B101" "B103" "B107" "B106" 
    successors "B120" "B110" 
    xhandlers
    flags 
    probability 4589652269697845341
    begin_IR
      LIR
      nr 1074  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1024  <|@ instruction r11|DWORD[_] = MOVE stack:100|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1076  <|@ instruction MOV (x: [r8|QWORD[.] + 20], y: r11|DWORD[_]) size: DWORD <|@ <|@
      nr 1078  <|@ instruction rsi|QWORD[*] = XOR (x: r8|QWORD[.], y: stack:88|QWORD[.]) size: QWORD <|@ <|@
      nr 1080  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B108 -> B120 falseDestination: B108 -> B110 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B120" "B112" 
    xhandlers
    flags 
    probability 4589138949298219176
    begin_IR
      LIR
      nr 1088  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1090  <|@ instruction r11|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1092  <|@ instruction TESTBRANCH (x: r11|QWORD[.], y: r11|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B110 -> B120 falseDestination: B110 -> B112 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B120" "B114" 
    xhandlers
    flags 
    probability 4588241136471976702
    begin_IR
      LIR
      nr 1100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1102  <|@ instruction r14|QWORD = MOVE stack:56|QWORD moveKind: QWORD <|@ <|@
      nr 1104  <|@ instruction rsi|QWORD[*] = SHR r8|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr 1106  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B112 -> B120 falseDestination: B112 -> B114 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B120" "B116" 
    xhandlers
    flags 
    probability 4573114274502628759
    begin_IR
      LIR
      nr 1114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1116  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr 1118  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B114 -> B120 falseDestination: B114 -> B116 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B117" "B118" 
    xhandlers
    flags 
    probability 4558310625150728107
    begin_IR
      LIR
      nr 1126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1128  <|@ instruction MOVB [rsi|QWORD[*] + r14|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr 1130  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr 1132  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: r14|QWORD) size: QWORD <|@ <|@
      nr 1134  <|@ instruction TESTBRANCH (x: rdx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B116 -> B117 falseDestination: B116 -> B118 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B120" 
    xhandlers
    flags 
    probability 4557793484962812442
    begin_IR
      LIR
      nr 1146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1148  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr 1150  <|@ instruction MOV (x: [rbx|QWORD + rdx|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr 1152  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr 1154  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1158  <|@ instruction JUMP ~[] destination: B118 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B97" "B95" 
    xhandlers
    flags 
    probability 4554832167497868566
    begin_IR
      LIR
      nr  934  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  936  <|@ instruction rdi|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  938  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.4891304347826087 condition: = trueDestination: B93 -> B97 falseDestination: B93 -> B95 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B97" "B98" 
    xhandlers
    flags 
    probability 4550463275345577801
    begin_IR
      LIR
      nr  944  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  946  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  948  <|@ instruction rdx|DWORD[_] = MOV [rsi|QWORD[.] + 52] size: DWORD <|@ <|@
      nr  950  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:670) [bci: 292]
locals: rsi|QWORD[.] - - - - rdi|DWORD - - - - - - - 
>@ <|@ instruction NULLCHECK [rdx|DWORD[_] * 8] state [bci:292] <|@ <|@
      nr  952  <|@ instruction rbx|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  954  <|@ instruction rax|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr  956  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rax|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr  958  <|@ instruction rbx|QWORD = MOV [rbx|QWORD + 872] size: QWORD <|@ <|@
      nr  960  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  962  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  964  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  968  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  972  <|@ instruction stack:112|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  974  <|@ st <@st|@live-base-pointers: []
java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 15]
locals: stack:72|QWORD[.] - stack:112|QWORD[.] - 
java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
locals: - - - - - - - - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<LinkedHashMap.removeEldestEntry(Map$Entry)> state [bci:15, 295] <|@ <|@
      nr  976  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B95 -> B97 falseDestination: B95 -> B98 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B120" 
    xhandlers
    flags 
    probability 4543399067768740112
    begin_IR
      LIR
      nr 1136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1138  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1140  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr 1144  <|@ instruction JUMP ~[] destination: B117 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B119" "B108" "B117" "B118" "B114" "B112" "B110" 
    successors 
    xhandlers
    flags 
    probability 4589652288651159933
    begin_IR
      LIR
      nr 1168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1170  <|@ instruction rbx|QWORD = MOV [r13|QWORD + 688] size: QWORD <|@ <|@
      nr 1172  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr 1174  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr 1176  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1178  <|@ instruction rdx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1180  <|@ instruction stack:112|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1182  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:663) [bci: 253]
locals: - - - - - - - - - - - - stack:112|QWORD[.] 
>@ <|@ instruction - = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<HashMap.afterNodeAccess(HashMap$Node)> state [bci:253] <|@ <|@
      nr 1184  <|@ instruction rax|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1186  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4542678729597855531
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  538  <|@ instruction stack:112|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  540  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: stack:72|QWORD[.] stack:36|DWORD rcx|QWORD[.] stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD stack:96|QWORD[.] - stack:40|DWORD - - - - 
>@ <|@ instruction rsi|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD state [bci:29] <|@ <|@
      nr  542  <|@ instruction rdx|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr  544  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr  546  <|@ instruction rbx|QWORD = MOV [rsi|QWORD + 464] size: QWORD <|@ <|@
      nr  548  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  550  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  552  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  554  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:641) [bci: 91]
locals: stack:72|QWORD[.] stack:36|DWORD stack:80|QWORD[.] stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD stack:96|QWORD[.] stack:112|QWORD[.] - - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:91] <|@ <|@
      nr  556  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B86" 
    xhandlers
    flags 
    probability 4542678729597855531
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  572  <|@ instruction r8|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr  574  <|@ instruction JUMP ~[] destination: B53 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B63" 
    xhandlers
    flags 
    probability 4529894057192690854
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  642  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: stack:72|QWORD[.] stack:36|DWORD rcx|QWORD[.] stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD stack:96|QWORD[.] r11|QWORD[.] - - - - stack:40|DWORD 
>@ <|@ instruction rsi|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD state [bci:134] <|@ <|@
      nr  644  <|@ instruction rdx|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr  646  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr  648  <|@ instruction rbx|QWORD = MOV [rsi|QWORD + 464] size: QWORD <|@ <|@
      nr  650  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  652  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  654  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  656  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:654) [bci: 203]
locals: stack:72|QWORD[.] stack:36|DWORD stack:80|QWORD[.] stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD stack:96|QWORD[.] - - - stack:112|QWORD[.] - stack:40|DWORD 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:203] <|@ <|@
      nr  658  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B86" 
    xhandlers
    flags 
    probability 4529894057192690854
    begin_IR
      LIR
      nr  682  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  684  <|@ instruction r8|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr  686  <|@ instruction JUMP ~[] destination: B63 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4523100981620127249
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction stack:64|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  194  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>} <|@ <|@
      nr  196  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: stack:72|QWORD[.] stack:36|DWORD stack:80|QWORD[.] stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD stack:96|QWORD[.] - stack:40|DWORD - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7fba62ccef80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:29] <|@ <|@
      nr  198  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: stack:72|QWORD[.] stack:36|DWORD stack:80|QWORD[.] stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD stack:96|QWORD[.] - stack:40|DWORD - - - - 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:29] <|@ <|@
      nr  200  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  202  <|@ instruction JUMP ~[] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" 
    xhandlers
    flags 
    probability 4518403274531071726
    begin_IR
      LIR
      nr  870  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  872  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  874  <|@ instruction rdx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  876  <|@ instruction rcx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  878  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:650) [bci: 169]
locals: stack:72|QWORD[.] - - stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD - - - - stack:112|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<HashMap.treeifyBin(HashMap$Node[], int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:169] <|@ <|@
      nr  880  <|@ instruction r8|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr  882  <|@ instruction JUMP ~[] destination: B85 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B86" 
    xhandlers
    flags 
    probability 4510226010095555986
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  582  <|@ instruction stack:112|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  584  <|@ instruction stack:36|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  586  <|@ instruction rsi|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr  588  <|@ instruction rdx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  590  <|@ instruction rcx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  592  <|@ instruction r8|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  594  <|@ instruction r9|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  596  <|@ instruction rdi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  598  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:644) [bci: 123]
locals: stack:72|QWORD[.] - - stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|QWORD[.], rdi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap$TreeNode.putTreeVal(HashMap, HashMap$Node[], int, Object, Object)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:123] <|@ <|@
      nr  600  <|@ instruction r8|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  602  <|@ instruction JUMP ~[] destination: B55 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B120" 
    xhandlers
    flags 
    probability 4508568125070994604
    begin_IR
      LIR
      nr 1160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1162  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:659) [bci: 222]
locals: stack:72|QWORD[.] - - stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD - - - - r8|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r10|DWORD[_] * 8] state [bci:222] <|@ <|@
      nr 1166  <|@ instruction JUMP ~[] destination: B119 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction r11|QWORD = MOVE input: long[5780|0x1694] <|@ <|@
      nr  506  <|@ instruction r10|DWORD = MOVE input: int[-51507|0xffffffffffff36cd] <|@ <|@
      nr  508  <|@ instruction stack:36|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  510  <|@ instruction r8|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  512  <|@ instruction JUMP ~[] destination: B47 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  662  <|@ instruction r8|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr  664  <|@ instruction rbp|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  666  <|@ instruction MOV [r15|QWORD + 1156] y: -157971 size: DWORD <|@ <|@
      nr  668  <|@ instruction MOV [r15|QWORD + 1168] y: 1300 size: QWORD <|@ <|@
      nr  670  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:654) [bci: 206]
stack: int[0|0x0] 
locals: stack:72|QWORD[.] stack:36|DWORD stack:80|QWORD[.] stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD stack:96|QWORD[.] - - - r8|QWORD[.] - rbp|DWORD 
>@ <|@ instruction DEOPT info [bci:206] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1190  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1192  <|@ instruction stack:36|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr 1194  <|@ instruction r8|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1196  <|@ instruction r10|DWORD = MOVE input: int[-75547|0xfffffffffffed8e5] <|@ <|@
      nr 1198  <|@ instruction JUMP ~[] destination: B121 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B121" "B47" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1202  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1204  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1206  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: stack:72|QWORD[.] stack:36|DWORD stack:80|QWORD[.] stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD stack:96|QWORD[.] - r8|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:29] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  998  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1000  <|@ instruction MOV [r15|QWORD + 1156] y: -61235 size: DWORD <|@ <|@
      nr 1002  <|@ instruction MOV [r15|QWORD + 1168] y: 8980 size: QWORD <|@ <|@
      nr 1004  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:670) [bci: 292]
locals: stack:72|QWORD[.] - - - - stack:32|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:292] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B18" "B22" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction rbp|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  496  <|@ instruction MOV [r15|QWORD + 1156] y: -82987 size: DWORD <|@ <|@
      nr  498  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  500  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stack: stack:96|QWORD[.] rbp|DWORD rax|QWORD[.] 
locals: stack:72|QWORD[.] - - - - stack:32|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:59] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  558  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  560  <|@ instruction r11|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr  562  <|@ instruction rbx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  564  <|@ instruction MOV [r15|QWORD + 1156] y: -153363 size: DWORD <|@ <|@
      nr  566  <|@ instruction MOV [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  568  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:641) [bci: 94]
stack: int[0|0x0] 
locals: stack:72|QWORD[.] stack:36|DWORD stack:80|QWORD[.] stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD rbx|QWORD[.] r11|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:94] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  988  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  990  <|@ instruction rdx|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr  992  <|@ instruction MOV [r15|QWORD + 1156] y: -161299 size: DWORD <|@ <|@
      nr  994  <|@ instruction MOV [r15|QWORD + 1168] y: 10260 size: QWORD <|@ <|@
      nr  996  <|@ st <@st|@live-base-pointers: []
java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 18]
stack: rax|DWORD 
locals: stack:72|QWORD[.] - rdx|QWORD[.] - 
java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
locals: - - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:18, 295] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction MOV [r15|QWORD + 1156] y: -129299 size: DWORD <|@ <|@
      nr   58  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:634) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] r8|QWORD[.] r9|DWORD rdi|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #21         // table:java.util.HashMap$Node[]
     4: dup           
     5: astore        6
     7: ifnull        19
    10: aload         6
    12: arraylength   
    13: dup           
    14: istore        8
    16: ifne          29
    19: aload_0       
    20: invokevirtual #23         // resize:()java.util.HashMap$Node[]
    23: dup           
    24: astore        6
    26: arraylength   
    27: istore        8
    29: aload         6
    31: iload         8
    33: iconst_1      
    34: isub          
    35: iload_1       
    36: iand          
    37: dup           
    38: istore        9
    40: aaload        
    41: dup           
    42: astore        7
    44: ifnonnull     63
    47: aload         6
    49: iload         9
    51: aload_0       
    52: iload_1       
    53: aload_2       
    54: aload_3       
    55: aconst_null   
    56: invokevirtual #40         // newNode:(int, java.lang.Object, java.lang.Object, java.util.HashMap$Node)java.util.HashMap$Node
    59: aastore       
    60: goto          259
    63: aload         7
    65: getfield      #35         // java.util.HashMap$Node.hash:int
    68: iload_1       
    69: if_icmpne     104
    72: aload         7
    74: getfield      #36         // java.util.HashMap$Node.key:java.lang.Object
    77: dup           
    78: astore        11
    80: aload_2       
    81: if_acmpeq     97
    84: aload_2       
    85: ifnull        104
    88: aload_2       
    89: aload         11
    91: invokevirtual #37         // java.lang.Object.equals:(java.lang.Object)boolean
    94: ifeq          104
    97: aload         7
    99: astore        10
   101: goto          222
   104: aload         7
   106: instanceof    #180        // java.util.HashMap$TreeNode
   109: ifeq          131
   112: aload         7
   114: checkcast     #180        // java.util.HashMap$TreeNode
   117: aload_0       
   118: aload         6
   120: iload_1       
   121: aload_2       
   122: aload_3       
   123: invokevirtual #41         // java.util.HashMap$TreeNode.putTreeVal:(java.util.HashMap, java.util.HashMap$Node[], int, java.lang.Object, java.lang.Object)java.util.HashMap$TreeNode
   126: astore        10
   128: goto          222
   131: iconst_0      
   132: istore        12
   134: aload         7
   136: getfield      #38         // java.util.HashMap$Node.next:java.util.HashMap$Node
   139: dup           
   140: astore        10
   142: ifnonnull     175
   145: aload         7
   147: aload_0       
   148: iload_1       
   149: aload_2       
   150: aload_3       
   151: aconst_null   
   152: invokevirtual #40         // newNode:(int, java.lang.Object, java.lang.Object, java.util.HashMap$Node)java.util.HashMap$Node
   155: putfield      #38         // java.util.HashMap$Node.next:java.util.HashMap$Node
   158: iload         12
   160: bipush        7
   162: if_icmplt     222
   165: aload_0       
   166: aload         6
   168: iload_1       
   169: invokevirtual #42         // treeifyBin:(java.util.HashMap$Node[], int)void
   172: goto          222
   175: aload         10
   177: getfield      #35         // java.util.HashMap$Node.hash:int
   180: iload_1       
   181: if_icmpne     212
   184: aload         10
   186: getfield      #36         // java.util.HashMap$Node.key:java.lang.Object
   189: dup           
   190: astore        11
   192: aload_2       
   193: if_acmpeq     222
   196: aload_2       
   197: ifnull        212
   200: aload_2       
   201: aload         11
   203: invokevirtual #37         // java.lang.Object.equals:(java.lang.Object)boolean
   206: ifeq          212
   209: goto          222
   212: aload         10
   214: astore        7
   216: iinc          
   219: goto          134
   222: aload         10
   224: ifnull        259
   227: aload         10
   229: getfield      #34         // java.util.HashMap$Node.value:java.lang.Object
   232: astore        12
   234: iload         4
   236: ifeq          244
   239: aload         12
   241: ifnonnull     250
   244: aload         10
   246: aload_3       
   247: putfield      #34         // java.util.HashMap$Node.value:java.lang.Object
   250: aload_0       
   251: aload         10
   253: invokevirtual #43         // afterNodeAccess:(java.util.HashMap$Node)void
   256: aload         12
   258: areturn       
   259: aload_0       
   260: dup           
   261: getfield      #44         // modCount:int
   264: iconst_1      
   265: iadd          
   266: putfield      #44         // modCount:int
   269: aload_0       
   270: dup           
   271: getfield      #32         // size:int
   274: iconst_1      
   275: iadd          
   276: dup_x1        
   277: putfield      #32         // size:int
   280: aload_0       
   281: getfield      #17         // threshold:int
   284: if_icmple     292
   287: aload_0       
   288: invokevirtual #23         // resize:()java.util.HashMap$Node[]
   291: pop           
   292: aload_0       
   293: iload         5
   295: invokevirtual #45         // afterNodeInsertion:(boolean)void
   298: aconst_null   
   299: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After ComputeCodeEmissionOrder"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|DWORD, rdi|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@21849dd slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:72|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction stack:80|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction stack:88|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   12  <|@ instruction stack:28|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   14  <|@ instruction stack:32|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr   16  <|@ instruction rbx|DWORD[_] = MOV [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   18  <|@ instruction TESTBRANCH (x: rbx|DWORD[_], y: rbx|DWORD[_]) trueDestinationProbability: 0.0015880438063265454 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607168114973028567
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction rax|DWORD = MOV [rbx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   52  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607168114973028567
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr   66  <|@ instruction r10|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   68  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B1" 
    successors "B6" "B121" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   72  <|@ instruction stack:96|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   74  <|@ instruction rax|DWORD = MOV [rbx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   76  <|@ instruction r11|DWORD = MOV [rbx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   78  <|@ instruction rbp|DWORD = DEC r10|DWORD size: DWORD <|@ <|@
      nr   80  <|@ instruction rbp|DWORD = AND (x: rdx|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr   82  <|@ instruction CMPBRANCH (x: rax|DWORD, y: rbp|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B121 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B48" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction stack:40|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   88  <|@ instruction rax|DWORD[_] = MOV [rbx|QWORD[.] + rbp|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   90  <|@ instruction r13|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   92  <|@ instruction r14|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr   94  <|@ instruction r13|QWORD = UNCOMPRESSPOINTER (input: r13|DWORD, ~baseRegister: r14|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr   96  <|@ instruction stack:48|QWORD = MOVE r13|QWORD moveKind: QWORD <|@ <|@
      nr   98  <|@ instruction r14|QWORD = MOVE input: long[140438306553856|0x7fba57600000] <|@ <|@
      nr  100  <|@ instruction stack:56|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr  102  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  104  <|@ instruction stack:100|DWORD[_] = MOVE r10|DWORD[_] moveKind: DWORD <|@ <|@
      nr  106  <|@ instruction TESTBRANCH (x: rax|DWORD[_], y: rax|DWORD[_]) trueDestinationProbability: 0.8229115724385652 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B12" "B47" 
    xhandlers
    flags 
    probability 4605587348047262798
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction stack:60|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  112  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~r13|QWORD - keyConstants: [meta{HotSpotType<Ljava/util/HashMap;, resolved>}, meta{HotSpotType<Ljava/util/LinkedHashMap;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/replacements/SnippetTemplate$LRUCache;, resolved>}] keyTargets: [B7 -> B8, B7 -> B12, B7 -> B12] defaultTarget: B7 -> B47 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4605585062831744793
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction rax|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  118  <|@ instruction rbp|QWORD = LEA [rax|QWORD + 32] size: QWORD <|@ <|@
      nr  120  <|@ instruction CMPBRANCH (x: rbp|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4605510964398880109
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction MOV (x: [r15|QWORD + 440], y: rbp|QWORD) size: QWORD <|@ <|@
      nr  152  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 288] instr: 0 <|@ <|@
      nr  154  <|@ instruction MOV [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  156  <|@ instruction MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>;compressed} <|@ <|@
      nr  158  <|@ instruction MOV [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  160  <|@ instruction MOV [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  162  <|@ instruction MOV [rax|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  164  <|@ instruction rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  166  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 4605585062831744793
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  170  <|@ instruction MOV (x: [rax|QWORD[.] + 20], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  172  <|@ instruction rcx|DWORD[_] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  174  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr  176  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  178  <|@ instruction JUMP ~[] destination: B11 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B11" "B15" 
    successors "B27" "B18" 
    xhandlers
    flags 
    probability 4605587348047262798
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  270  <|@ instruction rdx|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr  272  <|@ instruction r11|QWORD = UNCOMPRESSPOINTER (input: r11|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr  274  <|@ instruction rdx|QWORD = MOV [r11|QWORD + 208] size: QWORD <|@ <|@
      nr  276  <|@ instruction rcx|DWORD = MOV [rdx|QWORD + 20] size: DWORD <|@ <|@
      nr  278  <|@ instruction r8|DWORD = MOV [rax|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  280  <|@ instruction r9|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr  282  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: r9|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr  284  <|@ instruction r9|QWORD = MOVSXD rcx|DWORD size: QWORD <|@ <|@
      nr  286  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r8|QWORD + r9|QWORD * 1]) trueDestinationProbability: 0.5 condition: = trueDestination: B16 -> B27 falseDestination: B16 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B46" 
    xhandlers
    flags 
    probability 4601083748419892302
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ instruction CMPCONSTBRANCH rcx|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B46 y: 32 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B27" "B21" 
    xhandlers
    flags 
    probability 4601083748419892302
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  298  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: r8|QWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B19 -> B27 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B16" "B25" "B19" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4605587348047262798
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" 
    xhandlers
    flags 
    probability 4604846135197064160
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction rbp|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  356  <|@ instruction JUMP ~[] destination: B28 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B28" "B29" "B33" "B32" 
    successors "B88" "B36" 
    xhandlers
    flags 
    probability 4605587348047262798
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  402  <|@ instruction MOV (x: [rbx|QWORD[.] + rbp|DWORD * 4 + 16], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  404  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + rbp|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  406  <|@ instruction rsi|QWORD[*] = XOR (x: rsi|QWORD[.+], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  408  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B34 -> B88 falseDestination: B34 -> B36 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B88" "B38" 
    xhandlers
    flags 
    probability 4604846135197064160
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  418  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B36 -> B88 falseDestination: B36 -> B38 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B88" "B40" 
    xhandlers
    flags 
    probability 4604179043631885386
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  430  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + rbp|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  432  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.+] y: 9 size: QWORD <|@ <|@
      nr  434  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B38 -> B88 falseDestination: B38 -> B40 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B34" "B86" "B43" "B44" "B40" "B38" "B36" 
    successors "B89" "B90" 
    xhandlers
    flags 
    probability 4606558935301518032
    begin_IR
      LIR
      nr  894  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  896  <|@ instruction INC [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  898  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  900  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, ~y: [rsi|QWORD[.] + 20]) size: DWORD <|@ <|@
      nr  902  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: rax|DWORD) size: DWORD <|@ <|@
      nr  904  <|@ instruction CMPBRANCH (x: rax|DWORD, y: [rsi|QWORD[.] + 28]) trueDestinationProbability: 7.853038846579175E-4 condition: > trueDestination: B88 -> B89 falseDestination: B88 -> B90 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B91" 
    xhandlers
    flags 
    probability 4606552351536966788
    begin_IR
      LIR
      nr  920  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  922  <|@ instruction r13|QWORD = MOVE stack:48|QWORD moveKind: QWORD <|@ <|@
      nr  924  <|@ instruction JUMP ~[] destination: B90 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" "B89" 
    successors "B97" "B93" "B99" 
    xhandlers
    flags 
    probability 4606558935301518032
    begin_IR
      LIR
      nr  926  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  928  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~r13|QWORD - keyConstants: [meta{HotSpotType<Ljava/util/HashMap;, resolved>}, meta{HotSpotType<Ljava/util/LinkedHashMap;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/replacements/SnippetTemplate$LRUCache;, resolved>}] keyTargets: [B91 -> B97, B91 -> B93, B91 -> B93] defaultTarget: B91 -> B99 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B91" "B93" "B95" 
    successors 
    xhandlers
    flags 
    probability 4606558935301518031
    begin_IR
      LIR
      nr  982  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  984  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  986  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4596580148792521806
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction rcx|QWORD = MOV [r8|QWORD + 40] size: QWORD <|@ <|@
      nr  308  <|@ instruction r9|DWORD = MOV [rcx|QWORD] size: DWORD <|@ <|@
      nr  310  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  312  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602807799859017905
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  320  <|@ instruction r11|DWORD = SHL r10|DWORD y: 3 size: DWORD <|@ <|@
      nr  322  <|@ instruction r11|DWORD = LEA [r11|DWORD + 8] size: DWORD <|@ <|@
      nr  324  <|@ instruction r11|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr  326  <|@ instruction r11|QWORD = MOV [rcx|QWORD + r11|QWORD * 1] size: QWORD <|@ <|@
      nr  328  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: r11|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B23 -> B25 falseDestination: B23 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B22" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4599230716294395707
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  332  <|@ instruction r10|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr  334  <|@ instruction JUMP ~[] destination: B24 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B24" 
    successors "B23" "B46" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4602807799859017905
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  316  <|@ instruction CMPBRANCH (x: r9|DWORD, y: r10|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B27" 
    xhandlers
    flags 
    probability 4596580148792521807
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  338  <|@ instruction MOV (x: [r8|QWORD + 32], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  340  <|@ instruction JUMP ~[] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B49" "B54" 
    xhandlers
    flags 
    probability 4595548303301553864
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  518  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [rax|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.01987559010066231 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4595421491411700642
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction CMPCONSTBRANCH [rax|DWORD[_] * 8 + 8] trueDestinationProbability: 2.021089053783065E-6 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B56 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4595421478772878611
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  606  <|@ instruction rbp|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  608  <|@ instruction JUMP ~[] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4590110563079390205
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  620  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [rax|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.8692436604445373 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B62 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B57" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4576850562957400324
    begin_IR
      LIR
      nr  672  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  674  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] stack:88|QWORD[.] r9|DWORD rdi|DWORD rbx|QWORD[.] r11|QWORD[.] - - - - rbp|DWORD 
>@ <|@ instruction SAFEPOINT rax|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 thread: r15 state [bci:134] <|@ <|@
      nr  676  <|@ instruction rbp|DWORD = INC rbp|DWORD size: DWORD <|@ <|@
      nr  678  <|@ instruction r11|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  680  <|@ instruction JUMP ~[] destination: B62 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B62" 
    successors "B65" "B58" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4595777537596400292
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  612  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] stack:88|QWORD[.] r9|DWORD rdi|DWORD rbx|QWORD[.] r11|QWORD[.] - - - - rbp|DWORD 
>@ <|@ instruction rax|DWORD[_] = MOV [r11|QWORD[.] + 24] size: DWORD state [bci:134] <|@ <|@
      nr  614  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  616  <|@ instruction TESTBRANCH (x: rax|DWORD[_], y: rax|DWORD[_]) trueDestinationProbability: 0.5880075530332061 condition: = trueDestination: B57 -> B65 falseDestination: B57 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4592437312858669387
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  696  <|@ instruction stack:112|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  698  <|@ instruction stack:40|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  700  <|@ instruction stack:120|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  702  <|@ instruction rax|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  704  <|@ instruction r10|QWORD = MOV [r13|QWORD + 680] size: QWORD <|@ <|@
      nr  706  <|@ instruction r11|QWORD = MOV [r10|QWORD + 64] size: QWORD <|@ <|@
      nr  708  <|@ instruction rdi|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  712  <|@ instruction rdi|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  716  <|@ instruction r8|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  718  <|@ instruction r9|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  720  <|@ instruction rbx|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  722  <|@ instruction rax|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  724  <|@ instruction stack:36|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  726  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:648) [bci: 152]
stack: stack:120|QWORD[.] 
locals: stack:72|QWORD[.] stack:36|DWORD - stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD stack:96|QWORD[.] - - - stack:112|QWORD[.] - stack:40|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.]]) [] callTarget: HotSpotMethod<HashMap.newNode(int, Object, Object, HashMap$Node)> state [bci:152] <|@ <|@
      nr  728  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B67 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B72" 
    xhandlers
    flags 
    probability 4591660023639118941
    begin_IR
      LIR
      nr  730  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  732  <|@ instruction r11|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr  734  <|@ instruction r14|QWORD = MOVE stack:56|QWORD moveKind: QWORD <|@ <|@
      nr  736  <|@ instruction rbx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  738  <|@ instruction JUMP ~[] destination: B66 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B66" "B68" "B71" "B70" 
    successors "B83" "B74" 
    xhandlers
    flags 
    probability 4592437312858669387
    begin_IR
      LIR
      nr  788  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  790  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  792  <|@ instruction MOV (x: [r11|QWORD[.] + 24], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  794  <|@ instruction rsi|QWORD[*] = XOR (x: r11|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  796  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B72 -> B83 falseDestination: B72 -> B74 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B83" "B76" 
    xhandlers
    flags 
    probability 4591660023639118941
    begin_IR
      LIR
      nr  802  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  804  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B83 falseDestination: B74 -> B76 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B83" "B78" 
    xhandlers
    flags 
    probability 4590960463341523540
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  812  <|@ instruction r11|QWORD[*] = SHR r11|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  814  <|@ instruction CMPCONSTBRANCH [r11|QWORD[*] + r14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B76 -> B83 falseDestination: B76 -> B78 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B72" "B74" "B76" "B78" "B82" "B81" 
    successors "B84" "B85" 
    xhandlers
    flags 
    probability 4592437312858669387
    begin_IR
      LIR
      nr  860  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  862  <|@ instruction CMPCONSTBRANCH stack:40|DWORD trueDestinationProbability: 0.9999886211240704 condition: < trueDestination: B83 -> B84 falseDestination: B83 -> B85 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" 
    xhandlers
    flags 
    probability 4592437224411893480
    begin_IR
      LIR
      nr  864  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  866  <|@ instruction r8|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr  868  <|@ instruction JUMP ~[] destination: B84 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B50" "B55" "B59" "B84" "B85" "B63" "B53" 
    successors "B88" "B100" 
    xhandlers
    flags 
    probability 4595548303301553864
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  886  <|@ instruction TESTBRANCH (x: r8|QWORD[.], y: r8|QWORD[.]) trueDestinationProbability: 0.6091185940042786 condition: = trueDestination: B86 -> B88 falseDestination: B86 -> B100 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B101" "B119" 
    xhandlers
    flags 
    probability 4589652288651159933
    begin_IR
      LIR
      nr 1006  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1008  <|@ instruction r13|QWORD = MOVE stack:48|QWORD moveKind: QWORD <|@ <|@
      nr 1010  <|@ instruction r9|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1012  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1014  <|@ instruction r10|DWORD[_] = MOV [r8|QWORD[.] + 20] size: DWORD <|@ <|@
      nr 1016  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.9999962001170364 condition: = trueDestination: B100 -> B101 falseDestination: B100 -> B119 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B108" "B103" 
    xhandlers
    flags 
    probability 4589652269697845341
    begin_IR
      LIR
      nr 1018  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1020  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B101 -> B108 falseDestination: B101 -> B103 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B101" "B103" "B107" "B106" 
    successors "B120" "B110" 
    xhandlers
    flags 
    probability 4589652269697845341
    begin_IR
      LIR
      nr 1074  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1024  <|@ instruction r11|DWORD[_] = MOVE stack:100|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1076  <|@ instruction MOV (x: [r8|QWORD[.] + 20], y: r11|DWORD[_]) size: DWORD <|@ <|@
      nr 1078  <|@ instruction rsi|QWORD[*] = XOR (x: r8|QWORD[.], y: stack:88|QWORD[.]) size: QWORD <|@ <|@
      nr 1080  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B108 -> B120 falseDestination: B108 -> B110 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B120" "B112" 
    xhandlers
    flags 
    probability 4589138949298219176
    begin_IR
      LIR
      nr 1088  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1090  <|@ instruction r11|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1092  <|@ instruction TESTBRANCH (x: r11|QWORD[.], y: r11|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B110 -> B120 falseDestination: B110 -> B112 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B120" "B114" 
    xhandlers
    flags 
    probability 4588241136471976702
    begin_IR
      LIR
      nr 1100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1102  <|@ instruction r14|QWORD = MOVE stack:56|QWORD moveKind: QWORD <|@ <|@
      nr 1104  <|@ instruction rsi|QWORD[*] = SHR r8|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr 1106  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B112 -> B120 falseDestination: B112 -> B114 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B119" "B108" "B117" "B118" "B114" "B112" "B110" 
    successors 
    xhandlers
    flags 
    probability 4589652288651159933
    begin_IR
      LIR
      nr 1168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1170  <|@ instruction rbx|QWORD = MOV [r13|QWORD + 688] size: QWORD <|@ <|@
      nr 1172  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr 1174  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr 1176  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1178  <|@ instruction rdx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1180  <|@ instruction stack:112|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1182  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:663) [bci: 253]
locals: - - - - - - - - - - - - stack:112|QWORD[.] 
>@ <|@ instruction - = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<HashMap.afterNodeAccess(HashMap$Node)> state [bci:253] <|@ <|@
      nr 1184  <|@ instruction rax|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1186  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" "B31" 
    xhandlers
    flags 
    probability 4590594123464754032
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction rbp|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  362  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + rbp|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  364  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  366  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B34 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4590001153184595122
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  374  <|@ instruction r10|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  376  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  378  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4589467479932452103
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction r11|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  390  <|@ instruction MOV (x: [r11|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  392  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  394  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  396  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B88" "B42" 
    xhandlers
    flags 
    probability 4589467479932452103
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  446  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B40 -> B88 falseDestination: B40 -> B42 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B86" "B60" 
    xhandlers
    flags 
    probability 4589398445432346844
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction stack:112|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  626  <|@ instruction stack:40|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  628  <|@ instruction stack:120|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  630  <|@ instruction stack:36|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  632  <|@ instruction rsi|DWORD[_] = MOV [rax|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  634  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  636  <|@ instruction CMPBRANCH (x: r10|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.9998932466496128 condition: = trueDestination: B59 -> B86 falseDestination: B59 -> B60 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4577371935537457006
    begin_IR
      LIR
      nr  740  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  742  <|@ instruction r11|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr  744  <|@ instruction rbx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  746  <|@ instruction rsi|QWORD[.+] = LEA [r11|QWORD[.] + 24] size: QWORD <|@ <|@
      nr  748  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  750  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B67 -> B68 falseDestination: B67 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" "B71" 
    xhandlers
    flags 
    probability 4576750104161816650
    begin_IR
      LIR
      nr  758  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  760  <|@ instruction r10|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  762  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  764  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    probability 4576190455923740329
    begin_IR
      LIR
      nr  774  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  776  <|@ instruction r8|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  778  <|@ instruction MOV (x: [r8|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  780  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  782  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  784  <|@ instruction r14|QWORD = MOVE stack:56|QWORD moveKind: QWORD <|@ <|@
      nr  786  <|@ instruction JUMP ~[] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B83" "B80" 
    xhandlers
    flags 
    probability 4576190455923740328
    begin_IR
      LIR
      nr  820  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  822  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  824  <|@ instruction CMPCONSTBRANCH [r11|QWORD[*] + r14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B78 -> B83 falseDestination: B78 -> B80 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4575895921484393205
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction rbp|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  126  <|@ instruction stack:36|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  128  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>} <|@ <|@
      nr  130  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: stack:72|QWORD[.] stack:36|DWORD rcx|QWORD[.] stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD rbx|QWORD[.] - stack:40|DWORD - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7fba62ccef80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:29] <|@ <|@
      nr  132  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: stack:72|QWORD[.] stack:36|DWORD rcx|QWORD[.] stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD rbx|QWORD[.] - stack:40|DWORD - - - - 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:29] <|@ <|@
      nr  134  <|@ instruction r10|DWORD[_] = MOVE stack:100|DWORD[_] moveKind: DWORD <|@ <|@
      nr  144  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  146  <|@ instruction JUMP ~[] destination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4575188794187971253
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  382  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  384  <|@ instruction JUMP ~[] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B108" "B105" 
    xhandlers
    flags 
    probability 4574630580609171603
    begin_IR
      LIR
      nr 1028  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1030  <|@ instruction r11|QWORD[.+] = LEA [r8|QWORD[.] + 20] size: QWORD <|@ <|@
      nr 1032  <|@ instruction r11|DWORD[_] = MOV [r11|QWORD[.+]] size: DWORD <|@ <|@
      nr 1034  <|@ instruction TESTBRANCH (x: r11|DWORD[_], y: r11|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B103 -> B108 falseDestination: B103 -> B105 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B106" "B107" 
    xhandlers
    flags 
    probability 4573832524763622737
    begin_IR
      LIR
      nr 1042  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1044  <|@ instruction r9|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr 1046  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr 1048  <|@ instruction TESTBRANCH (x: r9|QWORD, y: r9|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B105 -> B106 falseDestination: B105 -> B107 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B108" 
    xhandlers
    flags 
    probability 4573114274502628758
    begin_IR
      LIR
      nr 1060  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1062  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr 1064  <|@ instruction MOV (x: [rcx|QWORD + r9|QWORD * 1 - 8], y: r11|QWORD[.]) size: QWORD <|@ <|@
      nr 1066  <|@ instruction r11|QWORD = LEA [r9|QWORD - 8] size: QWORD <|@ <|@
      nr 1068  <|@ instruction MOV (x: [r15|QWORD + 40], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1072  <|@ instruction JUMP ~[] destination: B107 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4574334916984542422
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  456  <|@ instruction MOVB [rsi|QWORD[*] + r14|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  458  <|@ instruction r10|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  460  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: r14|QWORD) size: QWORD <|@ <|@
      nr  462  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B88" 
    xhandlers
    flags 
    probability 4573566427501456474
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  476  <|@ instruction r11|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  478  <|@ instruction MOV (x: [r11|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  480  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  482  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  486  <|@ instruction JUMP ~[] destination: B44 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B120" "B116" 
    xhandlers
    flags 
    probability 4573114274502628759
    begin_IR
      LIR
      nr 1114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1116  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr 1118  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B114 -> B120 falseDestination: B114 -> B116 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4570262383476918658
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  522  <|@ instruction stack:36|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  524  <|@ instruction rsi|DWORD[_] = MOV [rax|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  526  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  528  <|@ instruction CMPBRANCH (x: r10|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.9854570809572428 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B86" 
    xhandlers
    flags 
    probability 4570144353713859813
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  532  <|@ instruction r8|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  534  <|@ instruction JUMP ~[] destination: B50 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 4564966382317228292
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   22  <|@ instruction stack:36|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   26  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:635) [bci: 20]
locals: stack:72|QWORD[.] stack:36|DWORD stack:80|QWORD[.] stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.resize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:20] <|@ <|@
      nr   28  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:635) [bci: 23]
stack: Object[null] 
locals: stack:72|QWORD[.] stack:36|DWORD stack:80|QWORD[.] stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD - - - - - - - 
>@ <|@ instruction rsi|DWORD = MOV [rax|QWORD[.] + 12] size: DWORD state [bci:23] <|@ <|@
      nr   30  <|@ instruction r10|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction rbx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction rdi|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr   36  <|@ instruction r9|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr   38  <|@ instruction r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction rcx|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction rdx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr   44  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction JUMP ~[] destination: B1 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B72" 
    xhandlers
    flags 
    probability 4562617473904064804
    begin_IR
      LIR
      nr  752  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  754  <|@ instruction r14|QWORD = MOVE stack:56|QWORD moveKind: QWORD <|@ <|@
      nr  756  <|@ instruction JUMP ~[] destination: B68 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    probability 4562093595080792590
    begin_IR
      LIR
      nr  766  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  768  <|@ instruction r14|QWORD = MOVE stack:56|QWORD moveKind: QWORD <|@ <|@
      nr  770  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  772  <|@ instruction JUMP ~[] destination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    probability 4561198157899870475
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  832  <|@ instruction MOVB [r11|QWORD[*] + r14|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  834  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  836  <|@ instruction r11|QWORD[*] = ADD (x: r11|QWORD[*], y: r14|QWORD) size: QWORD <|@ <|@
      nr  838  <|@ instruction TESTBRANCH (x: rsi|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    probability 4560392264437040573
    begin_IR
      LIR
      nr  848  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  850  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  852  <|@ instruction MOV (x: [rdx|QWORD + rsi|QWORD * 1 - 8], y: r11|QWORD[*]) size: QWORD <|@ <|@
      nr  854  <|@ instruction rsi|QWORD = LEA [rsi|QWORD - 8] size: QWORD <|@ <|@
      nr  856  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  858  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B91" 
    xhandlers
    flags 
    probability 4559880998172045651
    begin_IR
      LIR
      nr  906  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  908  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  912  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:669) [bci: 288]
locals: stack:72|QWORD[.] - - - - stack:32|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.resize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:288] <|@ <|@
      nr  914  <|@ instruction r13|QWORD = MOVE stack:48|QWORD moveKind: QWORD <|@ <|@
      nr  916  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  918  <|@ instruction JUMP ~[] destination: B89 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B88" 
    xhandlers
    flags 
    probability 4559287139136259037
    begin_IR
      LIR
      nr  464  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  466  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  468  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  472  <|@ instruction JUMP ~[] destination: B43 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B108" 
    xhandlers
    flags 
    probability 4558885225359523289
    begin_IR
      LIR
      nr 1050  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1052  <|@ instruction rsi|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1054  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr 1058  <|@ instruction JUMP ~[] destination: B106 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B117" "B118" 
    xhandlers
    flags 
    probability 4558310625150728107
    begin_IR
      LIR
      nr 1126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1128  <|@ instruction MOVB [rsi|QWORD[*] + r14|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr 1130  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr 1132  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: r14|QWORD) size: QWORD <|@ <|@
      nr 1134  <|@ instruction TESTBRANCH (x: rdx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B116 -> B117 falseDestination: B116 -> B118 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B120" 
    xhandlers
    flags 
    probability 4557793484962812442
    begin_IR
      LIR
      nr 1146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1148  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr 1150  <|@ instruction MOV (x: [rbx|QWORD + rdx|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr 1152  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr 1154  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1158  <|@ instruction JUMP ~[] destination: B118 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B97" "B95" 
    xhandlers
    flags 
    probability 4554832167497868566
    begin_IR
      LIR
      nr  934  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  936  <|@ instruction rdi|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  938  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.4891304347826087 condition: = trueDestination: B93 -> B97 falseDestination: B93 -> B95 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B97" "B98" 
    xhandlers
    flags 
    probability 4550463275345577801
    begin_IR
      LIR
      nr  944  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  946  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  948  <|@ instruction rdx|DWORD[_] = MOV [rsi|QWORD[.] + 52] size: DWORD <|@ <|@
      nr  950  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:670) [bci: 292]
locals: rsi|QWORD[.] - - - - rdi|DWORD - - - - - - - 
>@ <|@ instruction NULLCHECK [rdx|DWORD[_] * 8] state [bci:292] <|@ <|@
      nr  952  <|@ instruction rbx|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  954  <|@ instruction rax|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr  956  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rax|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr  958  <|@ instruction rbx|QWORD = MOV [rbx|QWORD + 872] size: QWORD <|@ <|@
      nr  960  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  962  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  964  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  968  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  972  <|@ instruction stack:112|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  974  <|@ st <@st|@live-base-pointers: []
java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 15]
locals: stack:72|QWORD[.] - stack:112|QWORD[.] - 
java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
locals: - - - - - - - - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<LinkedHashMap.removeEldestEntry(Map$Entry)> state [bci:15, 295] <|@ <|@
      nr  976  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B95 -> B97 falseDestination: B95 -> B98 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4553315745025075769
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  182  <|@ instruction stack:36|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  184  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  186  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 40] size: QWORD <|@ <|@
      nr  188  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4553268943811267021
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  208  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 296] instr: 0 <|@ <|@
      nr  210  <|@ instruction MOV [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  212  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>;compressed} <|@ <|@
      nr  214  <|@ instruction MOV [rsi|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  216  <|@ instruction MOV [rsi|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  218  <|@ instruction MOV [rsi|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  220  <|@ instruction MOV [rsi|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  222  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  224  <|@ instruction stack:64|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  226  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4553315745025075769
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  230  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  234  <|@ instruction rdx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  236  <|@ instruction rcx|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  238  <|@ instruction r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  240  <|@ instruction r9|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  242  <|@ instruction stack:112|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  244  <|@ st <@st|@live-base-pointers: []
java.util.LinkedHashMap$Entry.<init>(LinkedHashMap.java:208) [bci: 6]
locals: - - - - - 
java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 9]
stack: stack:112|QWORD[.] 
locals: stack:72|QWORD[.] stack:36|DWORD stack:80|QWORD[.] stack:88|QWORD[.] Object[null] - 
java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stack: stack:96|QWORD[.] stack:60|DWORD 
locals: stack:72|QWORD[.] - - - - stack:32|DWORD - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.]] [] callTarget: HotSpotMethod<HashMap$Node.<init>(int, Object, Object, HashMap$Node)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:6, 9, 56] <|@ <|@
      nr  246  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  248  <|@ instruction rdx|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr  250  <|@ st <@st|@live-base-pointers: []
java.util.LinkedHashMap.newNode(LinkedHashMap.java:283) [bci: 17]
locals: - - - - - stack:112|QWORD[.] 
java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stack: stack:96|QWORD[.] stack:60|DWORD 
locals: stack:72|QWORD[.] - - - - stack:32|DWORD - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<LinkedHashMap.linkNodeAtEnd(LinkedHashMap$Entry)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:17, 56] <|@ <|@
      nr  252  <|@ instruction rax|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr  254  <|@ instruction r14|QWORD = MOVE stack:56|QWORD moveKind: QWORD <|@ <|@
      nr  256  <|@ instruction r13|QWORD = MOVE stack:48|QWORD moveKind: QWORD <|@ <|@
      nr  258  <|@ instruction r11|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr  260  <|@ instruction rbx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  262  <|@ instruction rdi|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  264  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    probability 4546075572092099182
    begin_IR
      LIR
      nr  840  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  842  <|@ instruction rsi|QWORD = MOVE r11|QWORD[*] moveKind: QWORD <|@ <|@
      nr  844  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  846  <|@ instruction JUMP ~[] destination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B120" 
    xhandlers
    flags 
    probability 4543399067768740112
    begin_IR
      LIR
      nr 1136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1138  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1140  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr 1144  <|@ instruction JUMP ~[] destination: B117 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4542678729597855531
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  538  <|@ instruction stack:112|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  540  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: stack:72|QWORD[.] stack:36|DWORD rcx|QWORD[.] stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD stack:96|QWORD[.] - stack:40|DWORD - - - - 
>@ <|@ instruction rsi|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD state [bci:29] <|@ <|@
      nr  542  <|@ instruction rdx|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr  544  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr  546  <|@ instruction rbx|QWORD = MOV [rsi|QWORD + 464] size: QWORD <|@ <|@
      nr  548  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  550  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  552  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  554  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:641) [bci: 91]
locals: stack:72|QWORD[.] stack:36|DWORD stack:80|QWORD[.] stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD stack:96|QWORD[.] stack:112|QWORD[.] - - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:91] <|@ <|@
      nr  556  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B86" 
    xhandlers
    flags 
    probability 4542678729597855531
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  572  <|@ instruction r8|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr  574  <|@ instruction JUMP ~[] destination: B53 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B63" 
    xhandlers
    flags 
    probability 4529894057192690854
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  642  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: stack:72|QWORD[.] stack:36|DWORD rcx|QWORD[.] stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD stack:96|QWORD[.] r11|QWORD[.] - - - - stack:40|DWORD 
>@ <|@ instruction rsi|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD state [bci:134] <|@ <|@
      nr  644  <|@ instruction rdx|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr  646  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr  648  <|@ instruction rbx|QWORD = MOV [rsi|QWORD + 464] size: QWORD <|@ <|@
      nr  650  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  652  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  654  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  656  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:654) [bci: 203]
locals: stack:72|QWORD[.] stack:36|DWORD stack:80|QWORD[.] stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD stack:96|QWORD[.] - - - stack:112|QWORD[.] - stack:40|DWORD 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:203] <|@ <|@
      nr  658  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B86" 
    xhandlers
    flags 
    probability 4529894057192690854
    begin_IR
      LIR
      nr  682  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  684  <|@ instruction r8|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr  686  <|@ instruction JUMP ~[] destination: B63 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4523100981620127249
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction stack:64|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  194  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>} <|@ <|@
      nr  196  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: stack:72|QWORD[.] stack:36|DWORD stack:80|QWORD[.] stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD stack:96|QWORD[.] - stack:40|DWORD - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7fba62ccef80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:29] <|@ <|@
      nr  198  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: stack:72|QWORD[.] stack:36|DWORD stack:80|QWORD[.] stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD stack:96|QWORD[.] - stack:40|DWORD - - - - 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:29] <|@ <|@
      nr  200  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  202  <|@ instruction JUMP ~[] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" 
    xhandlers
    flags 
    probability 4518403274531071726
    begin_IR
      LIR
      nr  870  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  872  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  874  <|@ instruction rdx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  876  <|@ instruction rcx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  878  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:650) [bci: 169]
locals: stack:72|QWORD[.] - - stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD - - - - stack:112|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<HashMap.treeifyBin(HashMap$Node[], int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:169] <|@ <|@
      nr  880  <|@ instruction r8|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr  882  <|@ instruction JUMP ~[] destination: B85 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B86" 
    xhandlers
    flags 
    probability 4510226010095555986
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  582  <|@ instruction stack:112|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  584  <|@ instruction stack:36|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  586  <|@ instruction rsi|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr  588  <|@ instruction rdx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  590  <|@ instruction rcx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  592  <|@ instruction r8|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  594  <|@ instruction r9|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  596  <|@ instruction rdi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  598  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:644) [bci: 123]
locals: stack:72|QWORD[.] - - stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|QWORD[.], rdi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap$TreeNode.putTreeVal(HashMap, HashMap$Node[], int, Object, Object)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:123] <|@ <|@
      nr  600  <|@ instruction r8|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  602  <|@ instruction JUMP ~[] destination: B55 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B120" 
    xhandlers
    flags 
    probability 4508568125070994604
    begin_IR
      LIR
      nr 1160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1162  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:659) [bci: 222]
locals: stack:72|QWORD[.] - - stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD - - - - r8|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r10|DWORD[_] * 8] state [bci:222] <|@ <|@
      nr 1166  <|@ instruction JUMP ~[] destination: B119 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B18" "B22" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction rbp|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  496  <|@ instruction MOV [r15|QWORD + 1156] y: -82987 size: DWORD <|@ <|@
      nr  498  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  500  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stack: stack:96|QWORD[.] rbp|DWORD rax|QWORD[.] 
locals: stack:72|QWORD[.] - - - - stack:32|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:59] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction r11|QWORD = MOVE input: long[5780|0x1694] <|@ <|@
      nr  506  <|@ instruction r10|DWORD = MOVE input: int[-51507|0xffffffffffff36cd] <|@ <|@
      nr  508  <|@ instruction stack:36|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  510  <|@ instruction r8|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  512  <|@ instruction JUMP ~[] destination: B47 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B121" "B47" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1202  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1204  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1206  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: stack:72|QWORD[.] stack:36|DWORD stack:80|QWORD[.] stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD stack:96|QWORD[.] - r8|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:29] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  988  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  990  <|@ instruction rdx|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr  992  <|@ instruction MOV [r15|QWORD + 1156] y: -161299 size: DWORD <|@ <|@
      nr  994  <|@ instruction MOV [r15|QWORD + 1168] y: 10260 size: QWORD <|@ <|@
      nr  996  <|@ st <@st|@live-base-pointers: []
java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 18]
stack: rax|DWORD 
locals: stack:72|QWORD[.] - rdx|QWORD[.] - 
java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
locals: - - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:18, 295] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  558  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  560  <|@ instruction r11|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr  562  <|@ instruction rbx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  564  <|@ instruction MOV [r15|QWORD + 1156] y: -153363 size: DWORD <|@ <|@
      nr  566  <|@ instruction MOV [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  568  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:641) [bci: 94]
stack: int[0|0x0] 
locals: stack:72|QWORD[.] stack:36|DWORD stack:80|QWORD[.] stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD rbx|QWORD[.] r11|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:94] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1190  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1192  <|@ instruction stack:36|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr 1194  <|@ instruction r8|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1196  <|@ instruction r10|DWORD = MOVE input: int[-75547|0xfffffffffffed8e5] <|@ <|@
      nr 1198  <|@ instruction JUMP ~[] destination: B121 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  662  <|@ instruction r8|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr  664  <|@ instruction rbp|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  666  <|@ instruction MOV [r15|QWORD + 1156] y: -157971 size: DWORD <|@ <|@
      nr  668  <|@ instruction MOV [r15|QWORD + 1168] y: 1300 size: QWORD <|@ <|@
      nr  670  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:654) [bci: 206]
stack: int[0|0x0] 
locals: stack:72|QWORD[.] stack:36|DWORD stack:80|QWORD[.] stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD stack:96|QWORD[.] - - - r8|QWORD[.] - rbp|DWORD 
>@ <|@ instruction DEOPT info [bci:206] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  998  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1000  <|@ instruction MOV [r15|QWORD + 1156] y: -61235 size: DWORD <|@ <|@
      nr 1002  <|@ instruction MOV [r15|QWORD + 1168] y: 8980 size: QWORD <|@ <|@
      nr 1004  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:670) [bci: 292]
locals: stack:72|QWORD[.] - - - - stack:32|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:292] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction MOV [r15|QWORD + 1156] y: -129299 size: DWORD <|@ <|@
      nr   58  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:634) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] r8|QWORD[.] r9|DWORD rdi|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #21         // table:java.util.HashMap$Node[]
     4: dup           
     5: astore        6
     7: ifnull        19
    10: aload         6
    12: arraylength   
    13: dup           
    14: istore        8
    16: ifne          29
    19: aload_0       
    20: invokevirtual #23         // resize:()java.util.HashMap$Node[]
    23: dup           
    24: astore        6
    26: arraylength   
    27: istore        8
    29: aload         6
    31: iload         8
    33: iconst_1      
    34: isub          
    35: iload_1       
    36: iand          
    37: dup           
    38: istore        9
    40: aaload        
    41: dup           
    42: astore        7
    44: ifnonnull     63
    47: aload         6
    49: iload         9
    51: aload_0       
    52: iload_1       
    53: aload_2       
    54: aload_3       
    55: aconst_null   
    56: invokevirtual #40         // newNode:(int, java.lang.Object, java.lang.Object, java.util.HashMap$Node)java.util.HashMap$Node
    59: aastore       
    60: goto          259
    63: aload         7
    65: getfield      #35         // java.util.HashMap$Node.hash:int
    68: iload_1       
    69: if_icmpne     104
    72: aload         7
    74: getfield      #36         // java.util.HashMap$Node.key:java.lang.Object
    77: dup           
    78: astore        11
    80: aload_2       
    81: if_acmpeq     97
    84: aload_2       
    85: ifnull        104
    88: aload_2       
    89: aload         11
    91: invokevirtual #37         // java.lang.Object.equals:(java.lang.Object)boolean
    94: ifeq          104
    97: aload         7
    99: astore        10
   101: goto          222
   104: aload         7
   106: instanceof    #180        // java.util.HashMap$TreeNode
   109: ifeq          131
   112: aload         7
   114: checkcast     #180        // java.util.HashMap$TreeNode
   117: aload_0       
   118: aload         6
   120: iload_1       
   121: aload_2       
   122: aload_3       
   123: invokevirtual #41         // java.util.HashMap$TreeNode.putTreeVal:(java.util.HashMap, java.util.HashMap$Node[], int, java.lang.Object, java.lang.Object)java.util.HashMap$TreeNode
   126: astore        10
   128: goto          222
   131: iconst_0      
   132: istore        12
   134: aload         7
   136: getfield      #38         // java.util.HashMap$Node.next:java.util.HashMap$Node
   139: dup           
   140: astore        10
   142: ifnonnull     175
   145: aload         7
   147: aload_0       
   148: iload_1       
   149: aload_2       
   150: aload_3       
   151: aconst_null   
   152: invokevirtual #40         // newNode:(int, java.lang.Object, java.lang.Object, java.util.HashMap$Node)java.util.HashMap$Node
   155: putfield      #38         // java.util.HashMap$Node.next:java.util.HashMap$Node
   158: iload         12
   160: bipush        7
   162: if_icmplt     222
   165: aload_0       
   166: aload         6
   168: iload_1       
   169: invokevirtual #42         // treeifyBin:(java.util.HashMap$Node[], int)void
   172: goto          222
   175: aload         10
   177: getfield      #35         // java.util.HashMap$Node.hash:int
   180: iload_1       
   181: if_icmpne     212
   184: aload         10
   186: getfield      #36         // java.util.HashMap$Node.key:java.lang.Object
   189: dup           
   190: astore        11
   192: aload_2       
   193: if_acmpeq     222
   196: aload_2       
   197: ifnull        212
   200: aload_2       
   201: aload         11
   203: invokevirtual #37         // java.lang.Object.equals:(java.lang.Object)boolean
   206: ifeq          212
   209: goto          222
   212: aload         10
   214: astore        7
   216: iinc          
   219: goto          134
   222: aload         10
   224: ifnull        259
   227: aload         10
   229: getfield      #34         // java.util.HashMap$Node.value:java.lang.Object
   232: astore        12
   234: iload         4
   236: ifeq          244
   239: aload         12
   241: ifnonnull     250
   244: aload         10
   246: aload_3       
   247: putfield      #34         // java.util.HashMap$Node.value:java.lang.Object
   250: aload_0       
   251: aload         10
   253: invokevirtual #43         // afterNodeAccess:(java.util.HashMap$Node)void
   256: aload         12
   258: areturn       
   259: aload_0       
   260: dup           
   261: getfield      #44         // modCount:int
   264: iconst_1      
   265: iadd          
   266: putfield      #44         // modCount:int
   269: aload_0       
   270: dup           
   271: getfield      #32         // size:int
   274: iconst_1      
   275: iadd          
   276: dup_x1        
   277: putfield      #32         // size:int
   280: aload_0       
   281: getfield      #17         // threshold:int
   284: if_icmple     292
   287: aload_0       
   288: invokevirtual #23         // resize:()java.util.HashMap$Node[]
   291: pop           
   292: aload_0       
   293: iload         5
   295: invokevirtual #45         // afterNodeInsertion:(boolean)void
   298: aconst_null   
   299: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After StackMoveOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|DWORD, rdi|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@21849dd slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:72|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction stack:80|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction stack:88|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   12  <|@ instruction stack:28|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   14  <|@ instruction stack:32|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr   16  <|@ instruction rbx|DWORD[_] = MOV [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   18  <|@ instruction TESTBRANCH (x: rbx|DWORD[_], y: rbx|DWORD[_]) trueDestinationProbability: 0.0015880438063265454 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607168114973028567
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction rax|DWORD = MOV [rbx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   52  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607168114973028567
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr   66  <|@ instruction r10|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   68  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B1" 
    successors "B6" "B121" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   72  <|@ instruction stack:96|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   74  <|@ instruction rax|DWORD = MOV [rbx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   76  <|@ instruction r11|DWORD = MOV [rbx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   78  <|@ instruction rbp|DWORD = DEC r10|DWORD size: DWORD <|@ <|@
      nr   80  <|@ instruction rbp|DWORD = AND (x: rdx|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr   82  <|@ instruction CMPBRANCH (x: rax|DWORD, y: rbp|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B121 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B48" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction stack:40|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   88  <|@ instruction rax|DWORD[_] = MOV [rbx|QWORD[.] + rbp|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   90  <|@ instruction r13|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   92  <|@ instruction r14|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr   94  <|@ instruction r13|QWORD = UNCOMPRESSPOINTER (input: r13|DWORD, ~baseRegister: r14|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr   96  <|@ instruction stack:48|QWORD = MOVE r13|QWORD moveKind: QWORD <|@ <|@
      nr   98  <|@ instruction r14|QWORD = MOVE input: long[140438306553856|0x7fba57600000] <|@ <|@
      nr  100  <|@ instruction stack:56|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr  102  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  104  <|@ instruction stack:100|DWORD[_] = MOVE r10|DWORD[_] moveKind: DWORD <|@ <|@
      nr  106  <|@ instruction TESTBRANCH (x: rax|DWORD[_], y: rax|DWORD[_]) trueDestinationProbability: 0.8229115724385652 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B12" "B47" 
    xhandlers
    flags 
    probability 4605587348047262798
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction stack:60|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  112  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~r13|QWORD - keyConstants: [meta{HotSpotType<Ljava/util/HashMap;, resolved>}, meta{HotSpotType<Ljava/util/LinkedHashMap;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/replacements/SnippetTemplate$LRUCache;, resolved>}] keyTargets: [B7 -> B8, B7 -> B12, B7 -> B12] defaultTarget: B7 -> B47 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4605585062831744793
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction rax|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  118  <|@ instruction rbp|QWORD = LEA [rax|QWORD + 32] size: QWORD <|@ <|@
      nr  120  <|@ instruction CMPBRANCH (x: rbp|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4605510964398880109
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction MOV (x: [r15|QWORD + 440], y: rbp|QWORD) size: QWORD <|@ <|@
      nr  152  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 288] instr: 0 <|@ <|@
      nr  154  <|@ instruction MOV [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  156  <|@ instruction MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>;compressed} <|@ <|@
      nr  158  <|@ instruction MOV [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  160  <|@ instruction MOV [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  162  <|@ instruction MOV [rax|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  164  <|@ instruction rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  166  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 4605585062831744793
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  170  <|@ instruction MOV (x: [rax|QWORD[.] + 20], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  172  <|@ instruction rcx|DWORD[_] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  174  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr  176  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  178  <|@ instruction JUMP ~[] destination: B11 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B11" "B15" 
    successors "B27" "B18" 
    xhandlers
    flags 
    probability 4605587348047262798
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  270  <|@ instruction rdx|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr  272  <|@ instruction r11|QWORD = UNCOMPRESSPOINTER (input: r11|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr  274  <|@ instruction rdx|QWORD = MOV [r11|QWORD + 208] size: QWORD <|@ <|@
      nr  276  <|@ instruction rcx|DWORD = MOV [rdx|QWORD + 20] size: DWORD <|@ <|@
      nr  278  <|@ instruction r8|DWORD = MOV [rax|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  280  <|@ instruction r9|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr  282  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: r9|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr  284  <|@ instruction r9|QWORD = MOVSXD rcx|DWORD size: QWORD <|@ <|@
      nr  286  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r8|QWORD + r9|QWORD * 1]) trueDestinationProbability: 0.5 condition: = trueDestination: B16 -> B27 falseDestination: B16 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B46" 
    xhandlers
    flags 
    probability 4601083748419892302
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ instruction CMPCONSTBRANCH rcx|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B46 y: 32 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B27" "B21" 
    xhandlers
    flags 
    probability 4601083748419892302
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  298  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: r8|QWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B19 -> B27 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B16" "B25" "B19" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4605587348047262798
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" 
    xhandlers
    flags 
    probability 4604846135197064160
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction rbp|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  356  <|@ instruction JUMP ~[] destination: B28 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B28" "B29" "B33" "B32" 
    successors "B88" "B36" 
    xhandlers
    flags 
    probability 4605587348047262798
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  402  <|@ instruction MOV (x: [rbx|QWORD[.] + rbp|DWORD * 4 + 16], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  404  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + rbp|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  406  <|@ instruction rsi|QWORD[*] = XOR (x: rsi|QWORD[.+], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  408  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B34 -> B88 falseDestination: B34 -> B36 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B88" "B38" 
    xhandlers
    flags 
    probability 4604846135197064160
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  418  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B36 -> B88 falseDestination: B36 -> B38 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B88" "B40" 
    xhandlers
    flags 
    probability 4604179043631885386
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  430  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + rbp|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  432  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.+] y: 9 size: QWORD <|@ <|@
      nr  434  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B38 -> B88 falseDestination: B38 -> B40 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B34" "B86" "B43" "B44" "B40" "B38" "B36" 
    successors "B89" "B90" 
    xhandlers
    flags 
    probability 4606558935301518032
    begin_IR
      LIR
      nr  894  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  896  <|@ instruction INC [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  898  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  900  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, ~y: [rsi|QWORD[.] + 20]) size: DWORD <|@ <|@
      nr  902  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: rax|DWORD) size: DWORD <|@ <|@
      nr  904  <|@ instruction CMPBRANCH (x: rax|DWORD, y: [rsi|QWORD[.] + 28]) trueDestinationProbability: 7.853038846579175E-4 condition: > trueDestination: B88 -> B89 falseDestination: B88 -> B90 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B91" 
    xhandlers
    flags 
    probability 4606552351536966788
    begin_IR
      LIR
      nr  920  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  922  <|@ instruction r13|QWORD = MOVE stack:48|QWORD moveKind: QWORD <|@ <|@
      nr  924  <|@ instruction JUMP ~[] destination: B90 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" "B89" 
    successors "B97" "B93" "B99" 
    xhandlers
    flags 
    probability 4606558935301518032
    begin_IR
      LIR
      nr  926  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  928  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~r13|QWORD - keyConstants: [meta{HotSpotType<Ljava/util/HashMap;, resolved>}, meta{HotSpotType<Ljava/util/LinkedHashMap;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/replacements/SnippetTemplate$LRUCache;, resolved>}] keyTargets: [B91 -> B97, B91 -> B93, B91 -> B93] defaultTarget: B91 -> B99 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B91" "B93" "B95" 
    successors 
    xhandlers
    flags 
    probability 4606558935301518031
    begin_IR
      LIR
      nr  982  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  984  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  986  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4596580148792521806
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction rcx|QWORD = MOV [r8|QWORD + 40] size: QWORD <|@ <|@
      nr  308  <|@ instruction r9|DWORD = MOV [rcx|QWORD] size: DWORD <|@ <|@
      nr  310  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  312  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602807799859017905
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  320  <|@ instruction r11|DWORD = SHL r10|DWORD y: 3 size: DWORD <|@ <|@
      nr  322  <|@ instruction r11|DWORD = LEA [r11|DWORD + 8] size: DWORD <|@ <|@
      nr  324  <|@ instruction r11|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr  326  <|@ instruction r11|QWORD = MOV [rcx|QWORD + r11|QWORD * 1] size: QWORD <|@ <|@
      nr  328  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: r11|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B23 -> B25 falseDestination: B23 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B22" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4599230716294395707
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  332  <|@ instruction r10|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr  334  <|@ instruction JUMP ~[] destination: B24 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B24" 
    successors "B23" "B46" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4602807799859017905
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  316  <|@ instruction CMPBRANCH (x: r9|DWORD, y: r10|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B27" 
    xhandlers
    flags 
    probability 4596580148792521807
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  338  <|@ instruction MOV (x: [r8|QWORD + 32], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  340  <|@ instruction JUMP ~[] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B49" "B54" 
    xhandlers
    flags 
    probability 4595548303301553864
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  518  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [rax|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.01987559010066231 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4595421491411700642
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction CMPCONSTBRANCH [rax|DWORD[_] * 8 + 8] trueDestinationProbability: 2.021089053783065E-6 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B56 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4595421478772878611
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  606  <|@ instruction rbp|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  608  <|@ instruction JUMP ~[] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4590110563079390205
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  620  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [rax|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.8692436604445373 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B62 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B57" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4576850562957400324
    begin_IR
      LIR
      nr  672  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  674  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] stack:88|QWORD[.] r9|DWORD rdi|DWORD rbx|QWORD[.] r11|QWORD[.] - - - - rbp|DWORD 
>@ <|@ instruction SAFEPOINT rax|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 thread: r15 state [bci:134] <|@ <|@
      nr  676  <|@ instruction rbp|DWORD = INC rbp|DWORD size: DWORD <|@ <|@
      nr  678  <|@ instruction r11|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  680  <|@ instruction JUMP ~[] destination: B62 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B62" 
    successors "B65" "B58" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4595777537596400292
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  612  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] stack:88|QWORD[.] r9|DWORD rdi|DWORD rbx|QWORD[.] r11|QWORD[.] - - - - rbp|DWORD 
>@ <|@ instruction rax|DWORD[_] = MOV [r11|QWORD[.] + 24] size: DWORD state [bci:134] <|@ <|@
      nr  614  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  616  <|@ instruction TESTBRANCH (x: rax|DWORD[_], y: rax|DWORD[_]) trueDestinationProbability: 0.5880075530332061 condition: = trueDestination: B57 -> B65 falseDestination: B57 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4592437312858669387
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  696  <|@ instruction stack:112|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  698  <|@ instruction stack:40|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  700  <|@ instruction stack:120|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  702  <|@ instruction rax|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  704  <|@ instruction r10|QWORD = MOV [r13|QWORD + 680] size: QWORD <|@ <|@
      nr  706  <|@ instruction r11|QWORD = MOV [r10|QWORD + 64] size: QWORD <|@ <|@
      nr  708  <|@ instruction rdi|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  712  <|@ instruction rdi|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  716  <|@ instruction r8|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  718  <|@ instruction r9|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  720  <|@ instruction rbx|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  722  <|@ instruction rax|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  724  <|@ instruction stack:36|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  726  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:648) [bci: 152]
stack: stack:120|QWORD[.] 
locals: stack:72|QWORD[.] stack:36|DWORD - stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD stack:96|QWORD[.] - - - stack:112|QWORD[.] - stack:40|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.]]) [] callTarget: HotSpotMethod<HashMap.newNode(int, Object, Object, HashMap$Node)> state [bci:152] <|@ <|@
      nr  728  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B67 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B72" 
    xhandlers
    flags 
    probability 4591660023639118941
    begin_IR
      LIR
      nr  730  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  732  <|@ instruction r11|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr  734  <|@ instruction r14|QWORD = MOVE stack:56|QWORD moveKind: QWORD <|@ <|@
      nr  736  <|@ instruction rbx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  738  <|@ instruction JUMP ~[] destination: B66 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B66" "B68" "B71" "B70" 
    successors "B83" "B74" 
    xhandlers
    flags 
    probability 4592437312858669387
    begin_IR
      LIR
      nr  788  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  790  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  792  <|@ instruction MOV (x: [r11|QWORD[.] + 24], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  794  <|@ instruction rsi|QWORD[*] = XOR (x: r11|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  796  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B72 -> B83 falseDestination: B72 -> B74 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B83" "B76" 
    xhandlers
    flags 
    probability 4591660023639118941
    begin_IR
      LIR
      nr  802  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  804  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B83 falseDestination: B74 -> B76 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B83" "B78" 
    xhandlers
    flags 
    probability 4590960463341523540
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  812  <|@ instruction r11|QWORD[*] = SHR r11|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  814  <|@ instruction CMPCONSTBRANCH [r11|QWORD[*] + r14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B76 -> B83 falseDestination: B76 -> B78 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B72" "B74" "B76" "B78" "B82" "B81" 
    successors "B84" "B85" 
    xhandlers
    flags 
    probability 4592437312858669387
    begin_IR
      LIR
      nr  860  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  862  <|@ instruction CMPCONSTBRANCH stack:40|DWORD trueDestinationProbability: 0.9999886211240704 condition: < trueDestination: B83 -> B84 falseDestination: B83 -> B85 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" 
    xhandlers
    flags 
    probability 4592437224411893480
    begin_IR
      LIR
      nr  864  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  866  <|@ instruction r8|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr  868  <|@ instruction JUMP ~[] destination: B84 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B50" "B55" "B59" "B84" "B85" "B63" "B53" 
    successors "B88" "B100" 
    xhandlers
    flags 
    probability 4595548303301553864
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  886  <|@ instruction TESTBRANCH (x: r8|QWORD[.], y: r8|QWORD[.]) trueDestinationProbability: 0.6091185940042786 condition: = trueDestination: B86 -> B88 falseDestination: B86 -> B100 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B101" "B119" 
    xhandlers
    flags 
    probability 4589652288651159933
    begin_IR
      LIR
      nr 1006  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1008  <|@ instruction r13|QWORD = MOVE stack:48|QWORD moveKind: QWORD <|@ <|@
      nr 1010  <|@ instruction r9|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1012  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1014  <|@ instruction r10|DWORD[_] = MOV [r8|QWORD[.] + 20] size: DWORD <|@ <|@
      nr 1016  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.9999962001170364 condition: = trueDestination: B100 -> B101 falseDestination: B100 -> B119 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B108" "B103" 
    xhandlers
    flags 
    probability 4589652269697845341
    begin_IR
      LIR
      nr 1018  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1020  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B101 -> B108 falseDestination: B101 -> B103 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B101" "B103" "B107" "B106" 
    successors "B120" "B110" 
    xhandlers
    flags 
    probability 4589652269697845341
    begin_IR
      LIR
      nr 1074  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1024  <|@ instruction r11|DWORD[_] = MOVE stack:100|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1076  <|@ instruction MOV (x: [r8|QWORD[.] + 20], y: r11|DWORD[_]) size: DWORD <|@ <|@
      nr 1078  <|@ instruction rsi|QWORD[*] = XOR (x: r8|QWORD[.], y: stack:88|QWORD[.]) size: QWORD <|@ <|@
      nr 1080  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B108 -> B120 falseDestination: B108 -> B110 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B120" "B112" 
    xhandlers
    flags 
    probability 4589138949298219176
    begin_IR
      LIR
      nr 1088  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1090  <|@ instruction r11|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1092  <|@ instruction TESTBRANCH (x: r11|QWORD[.], y: r11|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B110 -> B120 falseDestination: B110 -> B112 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B120" "B114" 
    xhandlers
    flags 
    probability 4588241136471976702
    begin_IR
      LIR
      nr 1100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1102  <|@ instruction r14|QWORD = MOVE stack:56|QWORD moveKind: QWORD <|@ <|@
      nr 1104  <|@ instruction rsi|QWORD[*] = SHR r8|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr 1106  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B112 -> B120 falseDestination: B112 -> B114 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B119" "B108" "B117" "B118" "B114" "B112" "B110" 
    successors 
    xhandlers
    flags 
    probability 4589652288651159933
    begin_IR
      LIR
      nr 1168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1170  <|@ instruction rbx|QWORD = MOV [r13|QWORD + 688] size: QWORD <|@ <|@
      nr 1172  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr 1174  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr 1176  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1178  <|@ instruction rdx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1180  <|@ instruction stack:112|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1182  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:663) [bci: 253]
locals: - - - - - - - - - - - - stack:112|QWORD[.] 
>@ <|@ instruction - = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<HashMap.afterNodeAccess(HashMap$Node)> state [bci:253] <|@ <|@
      nr 1184  <|@ instruction rax|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1186  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" "B31" 
    xhandlers
    flags 
    probability 4590594123464754032
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction rbp|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  362  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + rbp|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  364  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  366  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B34 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4590001153184595122
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  374  <|@ instruction r10|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  376  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  378  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4589467479932452103
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction r11|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  390  <|@ instruction MOV (x: [r11|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  392  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  394  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  396  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B88" "B42" 
    xhandlers
    flags 
    probability 4589467479932452103
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  446  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B40 -> B88 falseDestination: B40 -> B42 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B86" "B60" 
    xhandlers
    flags 
    probability 4589398445432346844
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction stack:112|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  626  <|@ instruction stack:40|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  628  <|@ instruction stack:120|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  630  <|@ instruction stack:36|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  632  <|@ instruction rsi|DWORD[_] = MOV [rax|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  634  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  636  <|@ instruction CMPBRANCH (x: r10|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.9998932466496128 condition: = trueDestination: B59 -> B86 falseDestination: B59 -> B60 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4577371935537457006
    begin_IR
      LIR
      nr  740  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  742  <|@ instruction r11|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr  744  <|@ instruction rbx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  746  <|@ instruction rsi|QWORD[.+] = LEA [r11|QWORD[.] + 24] size: QWORD <|@ <|@
      nr  748  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  750  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B67 -> B68 falseDestination: B67 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" "B71" 
    xhandlers
    flags 
    probability 4576750104161816650
    begin_IR
      LIR
      nr  758  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  760  <|@ instruction r10|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  762  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  764  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    probability 4576190455923740329
    begin_IR
      LIR
      nr  774  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  776  <|@ instruction r8|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  778  <|@ instruction MOV (x: [r8|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  780  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  782  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  784  <|@ instruction r14|QWORD = MOVE stack:56|QWORD moveKind: QWORD <|@ <|@
      nr  786  <|@ instruction JUMP ~[] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B83" "B80" 
    xhandlers
    flags 
    probability 4576190455923740328
    begin_IR
      LIR
      nr  820  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  822  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  824  <|@ instruction CMPCONSTBRANCH [r11|QWORD[*] + r14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B78 -> B83 falseDestination: B78 -> B80 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4575895921484393205
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction rbp|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  126  <|@ instruction stack:36|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  128  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>} <|@ <|@
      nr  130  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: stack:72|QWORD[.] stack:36|DWORD rcx|QWORD[.] stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD rbx|QWORD[.] - stack:40|DWORD - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7fba62ccef80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:29] <|@ <|@
      nr  132  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: stack:72|QWORD[.] stack:36|DWORD rcx|QWORD[.] stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD rbx|QWORD[.] - stack:40|DWORD - - - - 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:29] <|@ <|@
      nr  134  <|@ instruction r10|DWORD[_] = MOVE stack:100|DWORD[_] moveKind: DWORD <|@ <|@
      nr  144  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  146  <|@ instruction JUMP ~[] destination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4575188794187971253
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  382  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  384  <|@ instruction JUMP ~[] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B108" "B105" 
    xhandlers
    flags 
    probability 4574630580609171603
    begin_IR
      LIR
      nr 1028  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1030  <|@ instruction r11|QWORD[.+] = LEA [r8|QWORD[.] + 20] size: QWORD <|@ <|@
      nr 1032  <|@ instruction r11|DWORD[_] = MOV [r11|QWORD[.+]] size: DWORD <|@ <|@
      nr 1034  <|@ instruction TESTBRANCH (x: r11|DWORD[_], y: r11|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B103 -> B108 falseDestination: B103 -> B105 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B106" "B107" 
    xhandlers
    flags 
    probability 4573832524763622737
    begin_IR
      LIR
      nr 1042  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1044  <|@ instruction r9|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr 1046  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr 1048  <|@ instruction TESTBRANCH (x: r9|QWORD, y: r9|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B105 -> B106 falseDestination: B105 -> B107 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B108" 
    xhandlers
    flags 
    probability 4573114274502628758
    begin_IR
      LIR
      nr 1060  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1062  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr 1064  <|@ instruction MOV (x: [rcx|QWORD + r9|QWORD * 1 - 8], y: r11|QWORD[.]) size: QWORD <|@ <|@
      nr 1066  <|@ instruction r11|QWORD = LEA [r9|QWORD - 8] size: QWORD <|@ <|@
      nr 1068  <|@ instruction MOV (x: [r15|QWORD + 40], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1072  <|@ instruction JUMP ~[] destination: B107 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4574334916984542422
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  456  <|@ instruction MOVB [rsi|QWORD[*] + r14|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  458  <|@ instruction r10|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  460  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: r14|QWORD) size: QWORD <|@ <|@
      nr  462  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B88" 
    xhandlers
    flags 
    probability 4573566427501456474
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  476  <|@ instruction r11|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  478  <|@ instruction MOV (x: [r11|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  480  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  482  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  486  <|@ instruction JUMP ~[] destination: B44 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B120" "B116" 
    xhandlers
    flags 
    probability 4573114274502628759
    begin_IR
      LIR
      nr 1114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1116  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr 1118  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B114 -> B120 falseDestination: B114 -> B116 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4570262383476918658
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  522  <|@ instruction stack:36|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  524  <|@ instruction rsi|DWORD[_] = MOV [rax|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  526  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  528  <|@ instruction CMPBRANCH (x: r10|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.9854570809572428 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B86" 
    xhandlers
    flags 
    probability 4570144353713859813
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  532  <|@ instruction r8|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  534  <|@ instruction JUMP ~[] destination: B50 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 4564966382317228292
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   22  <|@ instruction stack:36|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   26  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:635) [bci: 20]
locals: stack:72|QWORD[.] stack:36|DWORD stack:80|QWORD[.] stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.resize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:20] <|@ <|@
      nr   28  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:635) [bci: 23]
stack: Object[null] 
locals: stack:72|QWORD[.] stack:36|DWORD stack:80|QWORD[.] stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD - - - - - - - 
>@ <|@ instruction rsi|DWORD = MOV [rax|QWORD[.] + 12] size: DWORD state [bci:23] <|@ <|@
      nr   30  <|@ instruction r10|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction rbx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction rdi|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr   36  <|@ instruction r9|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr   38  <|@ instruction r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction rcx|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction rdx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr   44  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction JUMP ~[] destination: B1 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B72" 
    xhandlers
    flags 
    probability 4562617473904064804
    begin_IR
      LIR
      nr  752  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  754  <|@ instruction r14|QWORD = MOVE stack:56|QWORD moveKind: QWORD <|@ <|@
      nr  756  <|@ instruction JUMP ~[] destination: B68 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    probability 4562093595080792590
    begin_IR
      LIR
      nr  766  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  768  <|@ instruction r14|QWORD = MOVE stack:56|QWORD moveKind: QWORD <|@ <|@
      nr  770  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  772  <|@ instruction JUMP ~[] destination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    probability 4561198157899870475
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  832  <|@ instruction MOVB [r11|QWORD[*] + r14|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  834  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  836  <|@ instruction r11|QWORD[*] = ADD (x: r11|QWORD[*], y: r14|QWORD) size: QWORD <|@ <|@
      nr  838  <|@ instruction TESTBRANCH (x: rsi|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    probability 4560392264437040573
    begin_IR
      LIR
      nr  848  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  850  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  852  <|@ instruction MOV (x: [rdx|QWORD + rsi|QWORD * 1 - 8], y: r11|QWORD[*]) size: QWORD <|@ <|@
      nr  854  <|@ instruction rsi|QWORD = LEA [rsi|QWORD - 8] size: QWORD <|@ <|@
      nr  856  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  858  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B91" 
    xhandlers
    flags 
    probability 4559880998172045651
    begin_IR
      LIR
      nr  906  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  908  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  912  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:669) [bci: 288]
locals: stack:72|QWORD[.] - - - - stack:32|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.resize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:288] <|@ <|@
      nr  914  <|@ instruction r13|QWORD = MOVE stack:48|QWORD moveKind: QWORD <|@ <|@
      nr  916  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  918  <|@ instruction JUMP ~[] destination: B89 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B88" 
    xhandlers
    flags 
    probability 4559287139136259037
    begin_IR
      LIR
      nr  464  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  466  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  468  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  472  <|@ instruction JUMP ~[] destination: B43 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B108" 
    xhandlers
    flags 
    probability 4558885225359523289
    begin_IR
      LIR
      nr 1050  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1052  <|@ instruction rsi|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1054  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr 1058  <|@ instruction JUMP ~[] destination: B106 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B117" "B118" 
    xhandlers
    flags 
    probability 4558310625150728107
    begin_IR
      LIR
      nr 1126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1128  <|@ instruction MOVB [rsi|QWORD[*] + r14|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr 1130  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr 1132  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: r14|QWORD) size: QWORD <|@ <|@
      nr 1134  <|@ instruction TESTBRANCH (x: rdx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B116 -> B117 falseDestination: B116 -> B118 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B120" 
    xhandlers
    flags 
    probability 4557793484962812442
    begin_IR
      LIR
      nr 1146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1148  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr 1150  <|@ instruction MOV (x: [rbx|QWORD + rdx|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr 1152  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr 1154  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1158  <|@ instruction JUMP ~[] destination: B118 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B97" "B95" 
    xhandlers
    flags 
    probability 4554832167497868566
    begin_IR
      LIR
      nr  934  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  936  <|@ instruction rdi|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  938  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.4891304347826087 condition: = trueDestination: B93 -> B97 falseDestination: B93 -> B95 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B97" "B98" 
    xhandlers
    flags 
    probability 4550463275345577801
    begin_IR
      LIR
      nr  944  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  946  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  948  <|@ instruction rdx|DWORD[_] = MOV [rsi|QWORD[.] + 52] size: DWORD <|@ <|@
      nr  950  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:670) [bci: 292]
locals: rsi|QWORD[.] - - - - rdi|DWORD - - - - - - - 
>@ <|@ instruction NULLCHECK [rdx|DWORD[_] * 8] state [bci:292] <|@ <|@
      nr  952  <|@ instruction rbx|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  954  <|@ instruction rax|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr  956  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rax|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr  958  <|@ instruction rbx|QWORD = MOV [rbx|QWORD + 872] size: QWORD <|@ <|@
      nr  960  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  962  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  964  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  968  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  972  <|@ instruction stack:112|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  974  <|@ st <@st|@live-base-pointers: []
java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 15]
locals: stack:72|QWORD[.] - stack:112|QWORD[.] - 
java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
locals: - - - - - - - - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<LinkedHashMap.removeEldestEntry(Map$Entry)> state [bci:15, 295] <|@ <|@
      nr  976  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B95 -> B97 falseDestination: B95 -> B98 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4553315745025075769
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  182  <|@ instruction stack:36|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  184  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  186  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 40] size: QWORD <|@ <|@
      nr  188  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4553268943811267021
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  208  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 296] instr: 0 <|@ <|@
      nr  210  <|@ instruction MOV [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  212  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>;compressed} <|@ <|@
      nr  214  <|@ instruction MOV [rsi|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  216  <|@ instruction MOV [rsi|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  218  <|@ instruction MOV [rsi|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  220  <|@ instruction MOV [rsi|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  222  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  224  <|@ instruction stack:64|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  226  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4553315745025075769
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  230  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  234  <|@ instruction rdx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  236  <|@ instruction rcx|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  238  <|@ instruction r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  240  <|@ instruction r9|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  242  <|@ instruction stack:112|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  244  <|@ st <@st|@live-base-pointers: []
java.util.LinkedHashMap$Entry.<init>(LinkedHashMap.java:208) [bci: 6]
locals: - - - - - 
java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 9]
stack: stack:112|QWORD[.] 
locals: stack:72|QWORD[.] stack:36|DWORD stack:80|QWORD[.] stack:88|QWORD[.] Object[null] - 
java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stack: stack:96|QWORD[.] stack:60|DWORD 
locals: stack:72|QWORD[.] - - - - stack:32|DWORD - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.]] [] callTarget: HotSpotMethod<HashMap$Node.<init>(int, Object, Object, HashMap$Node)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:6, 9, 56] <|@ <|@
      nr  246  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  248  <|@ instruction rdx|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr  250  <|@ st <@st|@live-base-pointers: []
java.util.LinkedHashMap.newNode(LinkedHashMap.java:283) [bci: 17]
locals: - - - - - stack:112|QWORD[.] 
java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stack: stack:96|QWORD[.] stack:60|DWORD 
locals: stack:72|QWORD[.] - - - - stack:32|DWORD - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<LinkedHashMap.linkNodeAtEnd(LinkedHashMap$Entry)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:17, 56] <|@ <|@
      nr  252  <|@ instruction rax|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr  254  <|@ instruction r14|QWORD = MOVE stack:56|QWORD moveKind: QWORD <|@ <|@
      nr  256  <|@ instruction r13|QWORD = MOVE stack:48|QWORD moveKind: QWORD <|@ <|@
      nr  258  <|@ instruction r11|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr  260  <|@ instruction rbx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  262  <|@ instruction rdi|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  264  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    probability 4546075572092099182
    begin_IR
      LIR
      nr  840  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  842  <|@ instruction rsi|QWORD = MOVE r11|QWORD[*] moveKind: QWORD <|@ <|@
      nr  844  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  846  <|@ instruction JUMP ~[] destination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B120" 
    xhandlers
    flags 
    probability 4543399067768740112
    begin_IR
      LIR
      nr 1136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1138  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1140  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr 1144  <|@ instruction JUMP ~[] destination: B117 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4542678729597855531
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  538  <|@ instruction stack:112|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  540  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: stack:72|QWORD[.] stack:36|DWORD rcx|QWORD[.] stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD stack:96|QWORD[.] - stack:40|DWORD - - - - 
>@ <|@ instruction rsi|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD state [bci:29] <|@ <|@
      nr  542  <|@ instruction rdx|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr  544  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr  546  <|@ instruction rbx|QWORD = MOV [rsi|QWORD + 464] size: QWORD <|@ <|@
      nr  548  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  550  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  552  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  554  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:641) [bci: 91]
locals: stack:72|QWORD[.] stack:36|DWORD stack:80|QWORD[.] stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD stack:96|QWORD[.] stack:112|QWORD[.] - - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:91] <|@ <|@
      nr  556  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B86" 
    xhandlers
    flags 
    probability 4542678729597855531
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  572  <|@ instruction r8|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr  574  <|@ instruction JUMP ~[] destination: B53 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B63" 
    xhandlers
    flags 
    probability 4529894057192690854
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  642  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: stack:72|QWORD[.] stack:36|DWORD rcx|QWORD[.] stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD stack:96|QWORD[.] r11|QWORD[.] - - - - stack:40|DWORD 
>@ <|@ instruction rsi|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD state [bci:134] <|@ <|@
      nr  644  <|@ instruction rdx|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr  646  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr  648  <|@ instruction rbx|QWORD = MOV [rsi|QWORD + 464] size: QWORD <|@ <|@
      nr  650  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  652  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  654  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  656  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:654) [bci: 203]
locals: stack:72|QWORD[.] stack:36|DWORD stack:80|QWORD[.] stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD stack:96|QWORD[.] - - - stack:112|QWORD[.] - stack:40|DWORD 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:203] <|@ <|@
      nr  658  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B86" 
    xhandlers
    flags 
    probability 4529894057192690854
    begin_IR
      LIR
      nr  682  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  684  <|@ instruction r8|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr  686  <|@ instruction JUMP ~[] destination: B63 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4523100981620127249
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction stack:64|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  194  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>} <|@ <|@
      nr  196  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: stack:72|QWORD[.] stack:36|DWORD stack:80|QWORD[.] stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD stack:96|QWORD[.] - stack:40|DWORD - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7fba62ccef80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:29] <|@ <|@
      nr  198  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: stack:72|QWORD[.] stack:36|DWORD stack:80|QWORD[.] stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD stack:96|QWORD[.] - stack:40|DWORD - - - - 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:29] <|@ <|@
      nr  200  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  202  <|@ instruction JUMP ~[] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" 
    xhandlers
    flags 
    probability 4518403274531071726
    begin_IR
      LIR
      nr  870  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  872  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  874  <|@ instruction rdx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  876  <|@ instruction rcx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  878  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:650) [bci: 169]
locals: stack:72|QWORD[.] - - stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD - - - - stack:112|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<HashMap.treeifyBin(HashMap$Node[], int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:169] <|@ <|@
      nr  880  <|@ instruction r8|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr  882  <|@ instruction JUMP ~[] destination: B85 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B86" 
    xhandlers
    flags 
    probability 4510226010095555986
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  582  <|@ instruction stack:112|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  584  <|@ instruction stack:36|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  586  <|@ instruction rsi|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr  588  <|@ instruction rdx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  590  <|@ instruction rcx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  592  <|@ instruction r8|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  594  <|@ instruction r9|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  596  <|@ instruction rdi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  598  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:644) [bci: 123]
locals: stack:72|QWORD[.] - - stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|QWORD[.], rdi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap$TreeNode.putTreeVal(HashMap, HashMap$Node[], int, Object, Object)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:123] <|@ <|@
      nr  600  <|@ instruction r8|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  602  <|@ instruction JUMP ~[] destination: B55 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B120" 
    xhandlers
    flags 
    probability 4508568125070994604
    begin_IR
      LIR
      nr 1160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1162  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:659) [bci: 222]
locals: stack:72|QWORD[.] - - stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD - - - - r8|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r10|DWORD[_] * 8] state [bci:222] <|@ <|@
      nr 1166  <|@ instruction JUMP ~[] destination: B119 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B18" "B22" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction rbp|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  496  <|@ instruction MOV [r15|QWORD + 1156] y: -82987 size: DWORD <|@ <|@
      nr  498  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  500  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stack: stack:96|QWORD[.] rbp|DWORD rax|QWORD[.] 
locals: stack:72|QWORD[.] - - - - stack:32|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:59] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction r11|QWORD = MOVE input: long[5780|0x1694] <|@ <|@
      nr  506  <|@ instruction r10|DWORD = MOVE input: int[-51507|0xffffffffffff36cd] <|@ <|@
      nr  508  <|@ instruction stack:36|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  510  <|@ instruction r8|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  512  <|@ instruction JUMP ~[] destination: B47 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B121" "B47" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1202  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1204  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1206  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: stack:72|QWORD[.] stack:36|DWORD stack:80|QWORD[.] stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD stack:96|QWORD[.] - r8|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:29] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  988  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  990  <|@ instruction rdx|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr  992  <|@ instruction MOV [r15|QWORD + 1156] y: -161299 size: DWORD <|@ <|@
      nr  994  <|@ instruction MOV [r15|QWORD + 1168] y: 10260 size: QWORD <|@ <|@
      nr  996  <|@ st <@st|@live-base-pointers: []
java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 18]
stack: rax|DWORD 
locals: stack:72|QWORD[.] - rdx|QWORD[.] - 
java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
locals: - - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:18, 295] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  558  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  560  <|@ instruction r11|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr  562  <|@ instruction rbx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  564  <|@ instruction MOV [r15|QWORD + 1156] y: -153363 size: DWORD <|@ <|@
      nr  566  <|@ instruction MOV [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  568  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:641) [bci: 94]
stack: int[0|0x0] 
locals: stack:72|QWORD[.] stack:36|DWORD stack:80|QWORD[.] stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD rbx|QWORD[.] r11|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:94] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1190  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1192  <|@ instruction stack:36|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr 1194  <|@ instruction r8|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1196  <|@ instruction r10|DWORD = MOVE input: int[-75547|0xfffffffffffed8e5] <|@ <|@
      nr 1198  <|@ instruction JUMP ~[] destination: B121 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  662  <|@ instruction r8|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr  664  <|@ instruction rbp|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  666  <|@ instruction MOV [r15|QWORD + 1156] y: -157971 size: DWORD <|@ <|@
      nr  668  <|@ instruction MOV [r15|QWORD + 1168] y: 1300 size: QWORD <|@ <|@
      nr  670  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:654) [bci: 206]
stack: int[0|0x0] 
locals: stack:72|QWORD[.] stack:36|DWORD stack:80|QWORD[.] stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD stack:96|QWORD[.] - - - r8|QWORD[.] - rbp|DWORD 
>@ <|@ instruction DEOPT info [bci:206] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  998  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1000  <|@ instruction MOV [r15|QWORD + 1156] y: -61235 size: DWORD <|@ <|@
      nr 1002  <|@ instruction MOV [r15|QWORD + 1168] y: 8980 size: QWORD <|@ <|@
      nr 1004  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:670) [bci: 292]
locals: stack:72|QWORD[.] - - - - stack:32|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:292] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction MOV [r15|QWORD + 1156] y: -129299 size: DWORD <|@ <|@
      nr   58  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:634) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] r8|QWORD[.] r9|DWORD rdi|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #21         // table:java.util.HashMap$Node[]
     4: dup           
     5: astore        6
     7: ifnull        19
    10: aload         6
    12: arraylength   
    13: dup           
    14: istore        8
    16: ifne          29
    19: aload_0       
    20: invokevirtual #23         // resize:()java.util.HashMap$Node[]
    23: dup           
    24: astore        6
    26: arraylength   
    27: istore        8
    29: aload         6
    31: iload         8
    33: iconst_1      
    34: isub          
    35: iload_1       
    36: iand          
    37: dup           
    38: istore        9
    40: aaload        
    41: dup           
    42: astore        7
    44: ifnonnull     63
    47: aload         6
    49: iload         9
    51: aload_0       
    52: iload_1       
    53: aload_2       
    54: aload_3       
    55: aconst_null   
    56: invokevirtual #40         // newNode:(int, java.lang.Object, java.lang.Object, java.util.HashMap$Node)java.util.HashMap$Node
    59: aastore       
    60: goto          259
    63: aload         7
    65: getfield      #35         // java.util.HashMap$Node.hash:int
    68: iload_1       
    69: if_icmpne     104
    72: aload         7
    74: getfield      #36         // java.util.HashMap$Node.key:java.lang.Object
    77: dup           
    78: astore        11
    80: aload_2       
    81: if_acmpeq     97
    84: aload_2       
    85: ifnull        104
    88: aload_2       
    89: aload         11
    91: invokevirtual #37         // java.lang.Object.equals:(java.lang.Object)boolean
    94: ifeq          104
    97: aload         7
    99: astore        10
   101: goto          222
   104: aload         7
   106: instanceof    #180        // java.util.HashMap$TreeNode
   109: ifeq          131
   112: aload         7
   114: checkcast     #180        // java.util.HashMap$TreeNode
   117: aload_0       
   118: aload         6
   120: iload_1       
   121: aload_2       
   122: aload_3       
   123: invokevirtual #41         // java.util.HashMap$TreeNode.putTreeVal:(java.util.HashMap, java.util.HashMap$Node[], int, java.lang.Object, java.lang.Object)java.util.HashMap$TreeNode
   126: astore        10
   128: goto          222
   131: iconst_0      
   132: istore        12
   134: aload         7
   136: getfield      #38         // java.util.HashMap$Node.next:java.util.HashMap$Node
   139: dup           
   140: astore        10
   142: ifnonnull     175
   145: aload         7
   147: aload_0       
   148: iload_1       
   149: aload_2       
   150: aload_3       
   151: aconst_null   
   152: invokevirtual #40         // newNode:(int, java.lang.Object, java.lang.Object, java.util.HashMap$Node)java.util.HashMap$Node
   155: putfield      #38         // java.util.HashMap$Node.next:java.util.HashMap$Node
   158: iload         12
   160: bipush        7
   162: if_icmplt     222
   165: aload_0       
   166: aload         6
   168: iload_1       
   169: invokevirtual #42         // treeifyBin:(java.util.HashMap$Node[], int)void
   172: goto          222
   175: aload         10
   177: getfield      #35         // java.util.HashMap$Node.hash:int
   180: iload_1       
   181: if_icmpne     212
   184: aload         10
   186: getfield      #36         // java.util.HashMap$Node.key:java.lang.Object
   189: dup           
   190: astore        11
   192: aload_2       
   193: if_acmpeq     222
   196: aload_2       
   197: ifnull        212
   200: aload_2       
   201: aload         11
   203: invokevirtual #37         // java.lang.Object.equals:(java.lang.Object)boolean
   206: ifeq          212
   209: goto          222
   212: aload         10
   214: astore        7
   216: iinc          
   219: goto          134
   222: aload         10
   224: ifnull        259
   227: aload         10
   229: getfield      #34         // java.util.HashMap$Node.value:java.lang.Object
   232: astore        12
   234: iload         4
   236: ifeq          244
   239: aload         12
   241: ifnonnull     250
   244: aload         10
   246: aload_3       
   247: putfield      #34         // java.util.HashMap$Node.value:java.lang.Object
   250: aload_0       
   251: aload         10
   253: invokevirtual #43         // afterNodeAccess:(java.util.HashMap$Node)void
   256: aload         12
   258: areturn       
   259: aload_0       
   260: dup           
   261: getfield      #44         // modCount:int
   264: iconst_1      
   265: iadd          
   266: putfield      #44         // modCount:int
   269: aload_0       
   270: dup           
   271: getfield      #32         // size:int
   274: iconst_1      
   275: iadd          
   276: dup_x1        
   277: putfield      #32         // size:int
   280: aload_0       
   281: getfield      #17         // threshold:int
   284: if_icmple     292
   287: aload_0       
   288: invokevirtual #23         // resize:()java.util.HashMap$Node[]
   291: pop           
   292: aload_0       
   293: iload         5
   295: invokevirtual #45         // afterNodeInsertion:(boolean)void
   298: aconst_null   
   299: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|DWORD, rdi|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@21849dd slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:72|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction stack:80|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction stack:88|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   12  <|@ instruction stack:28|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   14  <|@ instruction stack:32|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr   16  <|@ instruction rbx|DWORD[_] = MOV [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   18  <|@ instruction TESTBRANCH (x: rbx|DWORD[_], y: rbx|DWORD[_]) trueDestinationProbability: 0.0015880438063265454 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607168114973028567
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction rax|DWORD = MOV [rbx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   52  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607168114973028567
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr   66  <|@ instruction r10|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   68  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B1" 
    successors "B6" "B121" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   72  <|@ instruction stack:96|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   74  <|@ instruction rax|DWORD = MOV [rbx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   76  <|@ instruction r11|DWORD = MOV [rbx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   78  <|@ instruction rbp|DWORD = DEC r10|DWORD size: DWORD <|@ <|@
      nr   80  <|@ instruction rbp|DWORD = AND (x: rdx|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr   82  <|@ instruction CMPBRANCH (x: rax|DWORD, y: rbp|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B121 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B48" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction stack:40|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   88  <|@ instruction rax|DWORD[_] = MOV [rbx|QWORD[.] + rbp|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   90  <|@ instruction r13|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   92  <|@ instruction r14|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr   94  <|@ instruction r13|QWORD = UNCOMPRESSPOINTER (input: r13|DWORD, ~baseRegister: r14|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr   96  <|@ instruction stack:48|QWORD = MOVE r13|QWORD moveKind: QWORD <|@ <|@
      nr   98  <|@ instruction r14|QWORD = MOVE input: long[140438306553856|0x7fba57600000] <|@ <|@
      nr  100  <|@ instruction stack:56|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr  102  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  104  <|@ instruction stack:100|DWORD[_] = MOVE r10|DWORD[_] moveKind: DWORD <|@ <|@
      nr  106  <|@ instruction TESTBRANCH (x: rax|DWORD[_], y: rax|DWORD[_]) trueDestinationProbability: 0.8229115724385652 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B12" "B47" 
    xhandlers
    flags 
    probability 4605587348047262798
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction stack:60|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  112  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~r13|QWORD - keyConstants: [meta{HotSpotType<Ljava/util/HashMap;, resolved>}, meta{HotSpotType<Ljava/util/LinkedHashMap;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/replacements/SnippetTemplate$LRUCache;, resolved>}] keyTargets: [B7 -> B8, B7 -> B12, B7 -> B12] defaultTarget: B7 -> B47 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4605585062831744793
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction rax|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  118  <|@ instruction rbp|QWORD = LEA [rax|QWORD + 32] size: QWORD <|@ <|@
      nr  120  <|@ instruction CMPBRANCH (x: rbp|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4605510964398880109
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction MOV (x: [r15|QWORD + 440], y: rbp|QWORD) size: QWORD <|@ <|@
      nr  152  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 288] instr: 0 <|@ <|@
      nr  154  <|@ instruction MOV [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  156  <|@ instruction MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>;compressed} <|@ <|@
      nr  158  <|@ instruction MOV [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  160  <|@ instruction MOV [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  162  <|@ instruction MOV [rax|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  164  <|@ instruction rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  166  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 4605585062831744793
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  170  <|@ instruction MOV (x: [rax|QWORD[.] + 20], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  172  <|@ instruction rcx|DWORD[_] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  174  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr  176  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  178  <|@ instruction JUMP ~[] destination: B11 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B11" "B15" 
    successors "B27" "B18" 
    xhandlers
    flags 
    probability 4605587348047262798
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  270  <|@ instruction rdx|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr  272  <|@ instruction r11|QWORD = UNCOMPRESSPOINTER (input: r11|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr  274  <|@ instruction rdx|QWORD = MOV [r11|QWORD + 208] size: QWORD <|@ <|@
      nr  276  <|@ instruction rcx|DWORD = MOV [rdx|QWORD + 20] size: DWORD <|@ <|@
      nr  278  <|@ instruction r8|DWORD = MOV [rax|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  280  <|@ instruction r9|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr  282  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: r9|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr  284  <|@ instruction r9|QWORD = MOVSXD rcx|DWORD size: QWORD <|@ <|@
      nr  286  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r8|QWORD + r9|QWORD * 1]) trueDestinationProbability: 0.5 condition: = trueDestination: B16 -> B27 falseDestination: B16 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B46" 
    xhandlers
    flags 
    probability 4601083748419892302
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ instruction CMPCONSTBRANCH rcx|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B46 y: 32 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B27" "B21" 
    xhandlers
    flags 
    probability 4601083748419892302
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  298  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: r8|QWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B19 -> B27 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B16" "B25" "B19" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4605587348047262798
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" 
    xhandlers
    flags 
    probability 4604846135197064160
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction rbp|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  356  <|@ instruction JUMP ~[] destination: B28 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B28" "B29" "B33" "B32" 
    successors "B88" "B36" 
    xhandlers
    flags 
    probability 4605587348047262798
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  402  <|@ instruction MOV (x: [rbx|QWORD[.] + rbp|DWORD * 4 + 16], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  404  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + rbp|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  406  <|@ instruction rsi|QWORD[*] = XOR (x: rsi|QWORD[.+], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  408  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B34 -> B88 falseDestination: B34 -> B36 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B88" "B38" 
    xhandlers
    flags 
    probability 4604846135197064160
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  418  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B36 -> B88 falseDestination: B36 -> B38 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B88" "B40" 
    xhandlers
    flags 
    probability 4604179043631885386
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  430  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + rbp|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  432  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.+] y: 9 size: QWORD <|@ <|@
      nr  434  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B38 -> B88 falseDestination: B38 -> B40 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B34" "B86" "B43" "B44" "B40" "B38" "B36" 
    successors "B89" "B90" 
    xhandlers
    flags 
    probability 4606558935301518032
    begin_IR
      LIR
      nr  894  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  896  <|@ instruction INC [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  898  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  900  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, ~y: [rsi|QWORD[.] + 20]) size: DWORD <|@ <|@
      nr  902  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: rax|DWORD) size: DWORD <|@ <|@
      nr  904  <|@ instruction CMPBRANCH (x: rax|DWORD, y: [rsi|QWORD[.] + 28]) trueDestinationProbability: 7.853038846579175E-4 condition: > trueDestination: B88 -> B89 falseDestination: B88 -> B90 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B91" 
    xhandlers
    flags 
    probability 4606552351536966788
    begin_IR
      LIR
      nr  920  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  922  <|@ instruction r13|QWORD = MOVE stack:48|QWORD moveKind: QWORD <|@ <|@
      nr  924  <|@ instruction JUMP ~[] destination: B90 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" "B89" 
    successors "B97" "B93" "B99" 
    xhandlers
    flags 
    probability 4606558935301518032
    begin_IR
      LIR
      nr  926  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  928  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~r13|QWORD - keyConstants: [meta{HotSpotType<Ljava/util/HashMap;, resolved>}, meta{HotSpotType<Ljava/util/LinkedHashMap;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/replacements/SnippetTemplate$LRUCache;, resolved>}] keyTargets: [B91 -> B97, B91 -> B93, B91 -> B93] defaultTarget: B91 -> B99 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B91" "B93" "B95" 
    successors 
    xhandlers
    flags 
    probability 4606558935301518031
    begin_IR
      LIR
      nr  982  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  984  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  986  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4596580148792521806
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction rcx|QWORD = MOV [r8|QWORD + 40] size: QWORD <|@ <|@
      nr  308  <|@ instruction r9|DWORD = MOV [rcx|QWORD] size: DWORD <|@ <|@
      nr  310  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  312  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602807799859017905
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  320  <|@ instruction r11|DWORD = SHL r10|DWORD y: 3 size: DWORD <|@ <|@
      nr  322  <|@ instruction r11|DWORD = LEA [r11|DWORD + 8] size: DWORD <|@ <|@
      nr  324  <|@ instruction r11|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr  326  <|@ instruction r11|QWORD = MOV [rcx|QWORD + r11|QWORD * 1] size: QWORD <|@ <|@
      nr  328  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: r11|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B23 -> B25 falseDestination: B23 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B22" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4599230716294395707
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  332  <|@ instruction r10|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr  334  <|@ instruction JUMP ~[] destination: B24 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B24" 
    successors "B23" "B46" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4602807799859017905
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  316  <|@ instruction CMPBRANCH (x: r9|DWORD, y: r10|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B27" 
    xhandlers
    flags 
    probability 4596580148792521807
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  338  <|@ instruction MOV (x: [r8|QWORD + 32], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  340  <|@ instruction JUMP ~[] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B49" "B54" 
    xhandlers
    flags 
    probability 4595548303301553864
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  518  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [rax|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.01987559010066231 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4595421491411700642
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction CMPCONSTBRANCH [rax|DWORD[_] * 8 + 8] trueDestinationProbability: 2.021089053783065E-6 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B56 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4595421478772878611
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  606  <|@ instruction rbp|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  608  <|@ instruction JUMP ~[] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4590110563079390205
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  620  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [rax|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.8692436604445373 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B62 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B57" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4576850562957400324
    begin_IR
      LIR
      nr  672  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  674  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] stack:88|QWORD[.] r9|DWORD rdi|DWORD rbx|QWORD[.] r11|QWORD[.] - - - - rbp|DWORD 
>@ <|@ instruction SAFEPOINT rax|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 thread: r15 state [bci:134] <|@ <|@
      nr  676  <|@ instruction rbp|DWORD = INC rbp|DWORD size: DWORD <|@ <|@
      nr  678  <|@ instruction r11|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  680  <|@ instruction JUMP ~[] destination: B62 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B62" 
    successors "B65" "B58" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4595777537596400292
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  612  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] stack:88|QWORD[.] r9|DWORD rdi|DWORD rbx|QWORD[.] r11|QWORD[.] - - - - rbp|DWORD 
>@ <|@ instruction rax|DWORD[_] = MOV [r11|QWORD[.] + 24] size: DWORD state [bci:134] <|@ <|@
      nr  614  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  616  <|@ instruction TESTBRANCH (x: rax|DWORD[_], y: rax|DWORD[_]) trueDestinationProbability: 0.5880075530332061 condition: = trueDestination: B57 -> B65 falseDestination: B57 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4592437312858669387
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  696  <|@ instruction stack:112|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  698  <|@ instruction stack:40|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  700  <|@ instruction stack:120|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  702  <|@ instruction rax|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  704  <|@ instruction r10|QWORD = MOV [r13|QWORD + 680] size: QWORD <|@ <|@
      nr  706  <|@ instruction r11|QWORD = MOV [r10|QWORD + 64] size: QWORD <|@ <|@
      nr  708  <|@ instruction rdi|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  712  <|@ instruction rdi|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  716  <|@ instruction r8|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  718  <|@ instruction r9|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  720  <|@ instruction rbx|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  722  <|@ instruction rax|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  724  <|@ instruction stack:36|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  726  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:648) [bci: 152]
stack: stack:120|QWORD[.] 
locals: stack:72|QWORD[.] stack:36|DWORD - stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD stack:96|QWORD[.] - - - stack:112|QWORD[.] - stack:40|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.]]) [] callTarget: HotSpotMethod<HashMap.newNode(int, Object, Object, HashMap$Node)> state [bci:152] <|@ <|@
      nr  728  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B67 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B72" 
    xhandlers
    flags 
    probability 4591660023639118941
    begin_IR
      LIR
      nr  730  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  732  <|@ instruction r11|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr  734  <|@ instruction r14|QWORD = MOVE stack:56|QWORD moveKind: QWORD <|@ <|@
      nr  736  <|@ instruction rbx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  738  <|@ instruction JUMP ~[] destination: B66 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B66" "B68" "B71" "B70" 
    successors "B83" "B74" 
    xhandlers
    flags 
    probability 4592437312858669387
    begin_IR
      LIR
      nr  788  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  790  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  792  <|@ instruction MOV (x: [r11|QWORD[.] + 24], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  794  <|@ instruction rsi|QWORD[*] = XOR (x: r11|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  796  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B72 -> B83 falseDestination: B72 -> B74 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B83" "B76" 
    xhandlers
    flags 
    probability 4591660023639118941
    begin_IR
      LIR
      nr  802  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  804  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B83 falseDestination: B74 -> B76 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B83" "B78" 
    xhandlers
    flags 
    probability 4590960463341523540
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  812  <|@ instruction r11|QWORD[*] = SHR r11|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  814  <|@ instruction CMPCONSTBRANCH [r11|QWORD[*] + r14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B76 -> B83 falseDestination: B76 -> B78 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B72" "B74" "B76" "B78" "B82" "B81" 
    successors "B84" "B85" 
    xhandlers
    flags 
    probability 4592437312858669387
    begin_IR
      LIR
      nr  860  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  862  <|@ instruction CMPCONSTBRANCH stack:40|DWORD trueDestinationProbability: 0.9999886211240704 condition: < trueDestination: B83 -> B84 falseDestination: B83 -> B85 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" 
    xhandlers
    flags 
    probability 4592437224411893480
    begin_IR
      LIR
      nr  864  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  866  <|@ instruction r8|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr  868  <|@ instruction JUMP ~[] destination: B84 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B50" "B55" "B59" "B84" "B85" "B63" "B53" 
    successors "B88" "B100" 
    xhandlers
    flags 
    probability 4595548303301553864
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  886  <|@ instruction TESTBRANCH (x: r8|QWORD[.], y: r8|QWORD[.]) trueDestinationProbability: 0.6091185940042786 condition: = trueDestination: B86 -> B88 falseDestination: B86 -> B100 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B101" "B119" 
    xhandlers
    flags 
    probability 4589652288651159933
    begin_IR
      LIR
      nr 1006  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1008  <|@ instruction r13|QWORD = MOVE stack:48|QWORD moveKind: QWORD <|@ <|@
      nr 1010  <|@ instruction r9|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1012  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1014  <|@ instruction r10|DWORD[_] = MOV [r8|QWORD[.] + 20] size: DWORD <|@ <|@
      nr 1016  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.9999962001170364 condition: = trueDestination: B100 -> B101 falseDestination: B100 -> B119 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B108" "B103" 
    xhandlers
    flags 
    probability 4589652269697845341
    begin_IR
      LIR
      nr 1018  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1020  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B101 -> B108 falseDestination: B101 -> B103 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B101" "B103" "B107" "B106" 
    successors "B120" "B110" 
    xhandlers
    flags 
    probability 4589652269697845341
    begin_IR
      LIR
      nr 1074  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1024  <|@ instruction r11|DWORD[_] = MOVE stack:100|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1076  <|@ instruction MOV (x: [r8|QWORD[.] + 20], y: r11|DWORD[_]) size: DWORD <|@ <|@
      nr 1078  <|@ instruction rsi|QWORD[*] = XOR (x: r8|QWORD[.], y: stack:88|QWORD[.]) size: QWORD <|@ <|@
      nr 1080  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B108 -> B120 falseDestination: B108 -> B110 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B120" "B112" 
    xhandlers
    flags 
    probability 4589138949298219176
    begin_IR
      LIR
      nr 1088  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1090  <|@ instruction r11|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1092  <|@ instruction TESTBRANCH (x: r11|QWORD[.], y: r11|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B110 -> B120 falseDestination: B110 -> B112 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B120" "B114" 
    xhandlers
    flags 
    probability 4588241136471976702
    begin_IR
      LIR
      nr 1100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1102  <|@ instruction r14|QWORD = MOVE stack:56|QWORD moveKind: QWORD <|@ <|@
      nr 1104  <|@ instruction rsi|QWORD[*] = SHR r8|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr 1106  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B112 -> B120 falseDestination: B112 -> B114 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B119" "B108" "B117" "B118" "B114" "B112" "B110" 
    successors 
    xhandlers
    flags 
    probability 4589652288651159933
    begin_IR
      LIR
      nr 1168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1170  <|@ instruction rbx|QWORD = MOV [r13|QWORD + 688] size: QWORD <|@ <|@
      nr 1172  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr 1174  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr 1176  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1178  <|@ instruction rdx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1180  <|@ instruction stack:112|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1182  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:663) [bci: 253]
locals: - - - - - - - - - - - - stack:112|QWORD[.] 
>@ <|@ instruction - = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<HashMap.afterNodeAccess(HashMap$Node)> state [bci:253] <|@ <|@
      nr 1184  <|@ instruction rax|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1186  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" "B31" 
    xhandlers
    flags 
    probability 4590594123464754032
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction rbp|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  362  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + rbp|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  364  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  366  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B34 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4590001153184595122
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  374  <|@ instruction r10|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  376  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  378  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4589467479932452103
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction r11|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  390  <|@ instruction MOV (x: [r11|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  392  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  394  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  396  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B88" "B42" 
    xhandlers
    flags 
    probability 4589467479932452103
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  446  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B40 -> B88 falseDestination: B40 -> B42 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B86" "B60" 
    xhandlers
    flags 
    probability 4589398445432346844
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction stack:112|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  626  <|@ instruction stack:40|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  628  <|@ instruction stack:120|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  630  <|@ instruction stack:36|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  632  <|@ instruction rsi|DWORD[_] = MOV [rax|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  634  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  636  <|@ instruction CMPBRANCH (x: r10|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.9998932466496128 condition: = trueDestination: B59 -> B86 falseDestination: B59 -> B60 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4577371935537457006
    begin_IR
      LIR
      nr  740  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  742  <|@ instruction r11|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr  744  <|@ instruction rbx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  746  <|@ instruction rsi|QWORD[.+] = LEA [r11|QWORD[.] + 24] size: QWORD <|@ <|@
      nr  748  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  750  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B67 -> B68 falseDestination: B67 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" "B71" 
    xhandlers
    flags 
    probability 4576750104161816650
    begin_IR
      LIR
      nr  758  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  760  <|@ instruction r10|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  762  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  764  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    probability 4576190455923740329
    begin_IR
      LIR
      nr  774  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  776  <|@ instruction r8|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  778  <|@ instruction MOV (x: [r8|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  780  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  782  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  784  <|@ instruction r14|QWORD = MOVE stack:56|QWORD moveKind: QWORD <|@ <|@
      nr  786  <|@ instruction JUMP ~[] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B83" "B80" 
    xhandlers
    flags 
    probability 4576190455923740328
    begin_IR
      LIR
      nr  820  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  822  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  824  <|@ instruction CMPCONSTBRANCH [r11|QWORD[*] + r14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B78 -> B83 falseDestination: B78 -> B80 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4575895921484393205
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction rbp|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  126  <|@ instruction stack:36|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  128  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>} <|@ <|@
      nr  130  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: stack:72|QWORD[.] stack:36|DWORD rcx|QWORD[.] stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD rbx|QWORD[.] - stack:40|DWORD - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7fba62ccef80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:29] <|@ <|@
      nr  132  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: stack:72|QWORD[.] stack:36|DWORD rcx|QWORD[.] stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD rbx|QWORD[.] - stack:40|DWORD - - - - 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:29] <|@ <|@
      nr  134  <|@ instruction r10|DWORD[_] = MOVE stack:100|DWORD[_] moveKind: DWORD <|@ <|@
      nr  144  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  146  <|@ instruction JUMP ~[] destination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4575188794187971253
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  382  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  384  <|@ instruction JUMP ~[] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B108" "B105" 
    xhandlers
    flags 
    probability 4574630580609171603
    begin_IR
      LIR
      nr 1028  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1030  <|@ instruction r11|QWORD[.+] = LEA [r8|QWORD[.] + 20] size: QWORD <|@ <|@
      nr 1032  <|@ instruction r11|DWORD[_] = MOV [r11|QWORD[.+]] size: DWORD <|@ <|@
      nr 1034  <|@ instruction TESTBRANCH (x: r11|DWORD[_], y: r11|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B103 -> B108 falseDestination: B103 -> B105 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B106" "B107" 
    xhandlers
    flags 
    probability 4573832524763622737
    begin_IR
      LIR
      nr 1042  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1044  <|@ instruction r9|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr 1046  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr 1048  <|@ instruction TESTBRANCH (x: r9|QWORD, y: r9|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B105 -> B106 falseDestination: B105 -> B107 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B108" 
    xhandlers
    flags 
    probability 4573114274502628758
    begin_IR
      LIR
      nr 1060  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1062  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr 1064  <|@ instruction MOV (x: [rcx|QWORD + r9|QWORD * 1 - 8], y: r11|QWORD[.]) size: QWORD <|@ <|@
      nr 1066  <|@ instruction r11|QWORD = LEA [r9|QWORD - 8] size: QWORD <|@ <|@
      nr 1068  <|@ instruction MOV (x: [r15|QWORD + 40], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1072  <|@ instruction JUMP ~[] destination: B107 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4574334916984542422
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  456  <|@ instruction MOVB [rsi|QWORD[*] + r14|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  458  <|@ instruction r10|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  460  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: r14|QWORD) size: QWORD <|@ <|@
      nr  462  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B88" 
    xhandlers
    flags 
    probability 4573566427501456474
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  476  <|@ instruction r11|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  478  <|@ instruction MOV (x: [r11|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  480  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  482  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  486  <|@ instruction JUMP ~[] destination: B44 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B120" "B116" 
    xhandlers
    flags 
    probability 4573114274502628759
    begin_IR
      LIR
      nr 1114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1116  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr 1118  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B114 -> B120 falseDestination: B114 -> B116 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4570262383476918658
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  522  <|@ instruction stack:36|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  524  <|@ instruction rsi|DWORD[_] = MOV [rax|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  526  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  528  <|@ instruction CMPBRANCH (x: r10|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.9854570809572428 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B86" 
    xhandlers
    flags 
    probability 4570144353713859813
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  532  <|@ instruction r8|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  534  <|@ instruction JUMP ~[] destination: B50 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 4564966382317228292
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   22  <|@ instruction stack:36|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   26  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:635) [bci: 20]
locals: stack:72|QWORD[.] stack:36|DWORD stack:80|QWORD[.] stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.resize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:20] <|@ <|@
      nr   28  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:635) [bci: 23]
stack: Object[null] 
locals: stack:72|QWORD[.] stack:36|DWORD stack:80|QWORD[.] stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD - - - - - - - 
>@ <|@ instruction rsi|DWORD = MOV [rax|QWORD[.] + 12] size: DWORD state [bci:23] <|@ <|@
      nr   30  <|@ instruction r10|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction rbx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction rdi|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr   36  <|@ instruction r9|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr   38  <|@ instruction r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction rcx|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction rdx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr   44  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction JUMP ~[] destination: B1 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B72" 
    xhandlers
    flags 
    probability 4562617473904064804
    begin_IR
      LIR
      nr  752  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  754  <|@ instruction r14|QWORD = MOVE stack:56|QWORD moveKind: QWORD <|@ <|@
      nr  756  <|@ instruction JUMP ~[] destination: B68 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    probability 4562093595080792590
    begin_IR
      LIR
      nr  766  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  768  <|@ instruction r14|QWORD = MOVE stack:56|QWORD moveKind: QWORD <|@ <|@
      nr  770  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  772  <|@ instruction JUMP ~[] destination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    probability 4561198157899870475
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  832  <|@ instruction MOVB [r11|QWORD[*] + r14|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  834  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  836  <|@ instruction r11|QWORD[*] = ADD (x: r11|QWORD[*], y: r14|QWORD) size: QWORD <|@ <|@
      nr  838  <|@ instruction TESTBRANCH (x: rsi|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    probability 4560392264437040573
    begin_IR
      LIR
      nr  848  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  850  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  852  <|@ instruction MOV (x: [rdx|QWORD + rsi|QWORD * 1 - 8], y: r11|QWORD[*]) size: QWORD <|@ <|@
      nr  854  <|@ instruction rsi|QWORD = LEA [rsi|QWORD - 8] size: QWORD <|@ <|@
      nr  856  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  858  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B91" 
    xhandlers
    flags 
    probability 4559880998172045651
    begin_IR
      LIR
      nr  906  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  908  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  912  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:669) [bci: 288]
locals: stack:72|QWORD[.] - - - - stack:32|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.resize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:288] <|@ <|@
      nr  914  <|@ instruction r13|QWORD = MOVE stack:48|QWORD moveKind: QWORD <|@ <|@
      nr  916  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  918  <|@ instruction JUMP ~[] destination: B89 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B88" 
    xhandlers
    flags 
    probability 4559287139136259037
    begin_IR
      LIR
      nr  464  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  466  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  468  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  472  <|@ instruction JUMP ~[] destination: B43 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B108" 
    xhandlers
    flags 
    probability 4558885225359523289
    begin_IR
      LIR
      nr 1050  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1052  <|@ instruction rsi|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1054  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr 1058  <|@ instruction JUMP ~[] destination: B106 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B117" "B118" 
    xhandlers
    flags 
    probability 4558310625150728107
    begin_IR
      LIR
      nr 1126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1128  <|@ instruction MOVB [rsi|QWORD[*] + r14|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr 1130  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr 1132  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: r14|QWORD) size: QWORD <|@ <|@
      nr 1134  <|@ instruction TESTBRANCH (x: rdx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B116 -> B117 falseDestination: B116 -> B118 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B120" 
    xhandlers
    flags 
    probability 4557793484962812442
    begin_IR
      LIR
      nr 1146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1148  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr 1150  <|@ instruction MOV (x: [rbx|QWORD + rdx|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr 1152  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr 1154  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1158  <|@ instruction JUMP ~[] destination: B118 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B97" "B95" 
    xhandlers
    flags 
    probability 4554832167497868566
    begin_IR
      LIR
      nr  934  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  936  <|@ instruction rdi|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  938  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.4891304347826087 condition: = trueDestination: B93 -> B97 falseDestination: B93 -> B95 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B97" "B98" 
    xhandlers
    flags 
    probability 4550463275345577801
    begin_IR
      LIR
      nr  944  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  946  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  948  <|@ instruction rdx|DWORD[_] = MOV [rsi|QWORD[.] + 52] size: DWORD <|@ <|@
      nr  950  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:670) [bci: 292]
locals: rsi|QWORD[.] - - - - rdi|DWORD - - - - - - - 
>@ <|@ instruction NULLCHECK [rdx|DWORD[_] * 8] state [bci:292] <|@ <|@
      nr  952  <|@ instruction rbx|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  954  <|@ instruction rax|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr  956  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rax|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr  958  <|@ instruction rbx|QWORD = MOV [rbx|QWORD + 872] size: QWORD <|@ <|@
      nr  960  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  962  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  964  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  968  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  972  <|@ instruction stack:112|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  974  <|@ st <@st|@live-base-pointers: []
java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 15]
locals: stack:72|QWORD[.] - stack:112|QWORD[.] - 
java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
locals: - - - - - - - - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<LinkedHashMap.removeEldestEntry(Map$Entry)> state [bci:15, 295] <|@ <|@
      nr  976  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B95 -> B97 falseDestination: B95 -> B98 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4553315745025075769
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  182  <|@ instruction stack:36|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  184  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  186  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 40] size: QWORD <|@ <|@
      nr  188  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4553268943811267021
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  208  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 296] instr: 0 <|@ <|@
      nr  210  <|@ instruction MOV [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  212  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>;compressed} <|@ <|@
      nr  214  <|@ instruction MOV [rsi|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  216  <|@ instruction MOV [rsi|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  218  <|@ instruction MOV [rsi|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  220  <|@ instruction MOV [rsi|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  222  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  224  <|@ instruction stack:64|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  226  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4553315745025075769
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  230  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  234  <|@ instruction rdx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  236  <|@ instruction rcx|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  238  <|@ instruction r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  240  <|@ instruction r9|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  242  <|@ instruction stack:112|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  244  <|@ st <@st|@live-base-pointers: []
java.util.LinkedHashMap$Entry.<init>(LinkedHashMap.java:208) [bci: 6]
locals: - - - - - 
java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 9]
stack: stack:112|QWORD[.] 
locals: stack:72|QWORD[.] stack:36|DWORD stack:80|QWORD[.] stack:88|QWORD[.] Object[null] - 
java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stack: stack:96|QWORD[.] stack:60|DWORD 
locals: stack:72|QWORD[.] - - - - stack:32|DWORD - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.]] [] callTarget: HotSpotMethod<HashMap$Node.<init>(int, Object, Object, HashMap$Node)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:6, 9, 56] <|@ <|@
      nr  246  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  248  <|@ instruction rdx|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr  250  <|@ st <@st|@live-base-pointers: []
java.util.LinkedHashMap.newNode(LinkedHashMap.java:283) [bci: 17]
locals: - - - - - stack:112|QWORD[.] 
java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stack: stack:96|QWORD[.] stack:60|DWORD 
locals: stack:72|QWORD[.] - - - - stack:32|DWORD - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<LinkedHashMap.linkNodeAtEnd(LinkedHashMap$Entry)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:17, 56] <|@ <|@
      nr  252  <|@ instruction rax|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr  254  <|@ instruction r14|QWORD = MOVE stack:56|QWORD moveKind: QWORD <|@ <|@
      nr  256  <|@ instruction r13|QWORD = MOVE stack:48|QWORD moveKind: QWORD <|@ <|@
      nr  258  <|@ instruction r11|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr  260  <|@ instruction rbx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  262  <|@ instruction rdi|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  264  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    probability 4546075572092099182
    begin_IR
      LIR
      nr  840  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  842  <|@ instruction rsi|QWORD = MOVE r11|QWORD[*] moveKind: QWORD <|@ <|@
      nr  844  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  846  <|@ instruction JUMP ~[] destination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B120" 
    xhandlers
    flags 
    probability 4543399067768740112
    begin_IR
      LIR
      nr 1136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1138  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1140  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr 1144  <|@ instruction JUMP ~[] destination: B117 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4542678729597855531
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  538  <|@ instruction stack:112|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  540  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: stack:72|QWORD[.] stack:36|DWORD rcx|QWORD[.] stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD stack:96|QWORD[.] - stack:40|DWORD - - - - 
>@ <|@ instruction rsi|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD state [bci:29] <|@ <|@
      nr  542  <|@ instruction rdx|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr  544  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr  546  <|@ instruction rbx|QWORD = MOV [rsi|QWORD + 464] size: QWORD <|@ <|@
      nr  548  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  550  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  552  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  554  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:641) [bci: 91]
locals: stack:72|QWORD[.] stack:36|DWORD stack:80|QWORD[.] stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD stack:96|QWORD[.] stack:112|QWORD[.] - - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:91] <|@ <|@
      nr  556  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B86" 
    xhandlers
    flags 
    probability 4542678729597855531
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  572  <|@ instruction r8|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr  574  <|@ instruction JUMP ~[] destination: B53 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B63" 
    xhandlers
    flags 
    probability 4529894057192690854
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  642  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: stack:72|QWORD[.] stack:36|DWORD rcx|QWORD[.] stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD stack:96|QWORD[.] r11|QWORD[.] - - - - stack:40|DWORD 
>@ <|@ instruction rsi|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD state [bci:134] <|@ <|@
      nr  644  <|@ instruction rdx|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr  646  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr  648  <|@ instruction rbx|QWORD = MOV [rsi|QWORD + 464] size: QWORD <|@ <|@
      nr  650  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  652  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  654  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  656  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:654) [bci: 203]
locals: stack:72|QWORD[.] stack:36|DWORD stack:80|QWORD[.] stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD stack:96|QWORD[.] - - - stack:112|QWORD[.] - stack:40|DWORD 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:203] <|@ <|@
      nr  658  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B86" 
    xhandlers
    flags 
    probability 4529894057192690854
    begin_IR
      LIR
      nr  682  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  684  <|@ instruction r8|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr  686  <|@ instruction JUMP ~[] destination: B63 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4523100981620127249
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction stack:64|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  194  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>} <|@ <|@
      nr  196  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: stack:72|QWORD[.] stack:36|DWORD stack:80|QWORD[.] stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD stack:96|QWORD[.] - stack:40|DWORD - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7fba62ccef80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:29] <|@ <|@
      nr  198  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: stack:72|QWORD[.] stack:36|DWORD stack:80|QWORD[.] stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD stack:96|QWORD[.] - stack:40|DWORD - - - - 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:29] <|@ <|@
      nr  200  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  202  <|@ instruction JUMP ~[] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" 
    xhandlers
    flags 
    probability 4518403274531071726
    begin_IR
      LIR
      nr  870  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  872  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  874  <|@ instruction rdx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  876  <|@ instruction rcx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  878  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:650) [bci: 169]
locals: stack:72|QWORD[.] - - stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD - - - - stack:112|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<HashMap.treeifyBin(HashMap$Node[], int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:169] <|@ <|@
      nr  880  <|@ instruction r8|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr  882  <|@ instruction JUMP ~[] destination: B85 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B86" 
    xhandlers
    flags 
    probability 4510226010095555986
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  582  <|@ instruction stack:112|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  584  <|@ instruction stack:36|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  586  <|@ instruction rsi|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr  588  <|@ instruction rdx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  590  <|@ instruction rcx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  592  <|@ instruction r8|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  594  <|@ instruction r9|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  596  <|@ instruction rdi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  598  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:644) [bci: 123]
locals: stack:72|QWORD[.] - - stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|QWORD[.], rdi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap$TreeNode.putTreeVal(HashMap, HashMap$Node[], int, Object, Object)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:123] <|@ <|@
      nr  600  <|@ instruction r8|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  602  <|@ instruction JUMP ~[] destination: B55 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B120" 
    xhandlers
    flags 
    probability 4508568125070994604
    begin_IR
      LIR
      nr 1160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1162  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:659) [bci: 222]
locals: stack:72|QWORD[.] - - stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD - - - - r8|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r10|DWORD[_] * 8] state [bci:222] <|@ <|@
      nr 1166  <|@ instruction JUMP ~[] destination: B119 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B18" "B22" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction rbp|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  496  <|@ instruction MOV [r15|QWORD + 1156] y: -82987 size: DWORD <|@ <|@
      nr  498  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  500  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stack: stack:96|QWORD[.] rbp|DWORD rax|QWORD[.] 
locals: stack:72|QWORD[.] - - - - stack:32|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:59] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction r11|QWORD = MOVE input: long[5780|0x1694] <|@ <|@
      nr  506  <|@ instruction r10|DWORD = MOVE input: int[-51507|0xffffffffffff36cd] <|@ <|@
      nr  508  <|@ instruction stack:36|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  510  <|@ instruction r8|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  512  <|@ instruction JUMP ~[] destination: B47 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B121" "B47" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1202  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1204  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1206  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: stack:72|QWORD[.] stack:36|DWORD stack:80|QWORD[.] stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD stack:96|QWORD[.] - r8|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:29] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  988  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  990  <|@ instruction rdx|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr  992  <|@ instruction MOV [r15|QWORD + 1156] y: -161299 size: DWORD <|@ <|@
      nr  994  <|@ instruction MOV [r15|QWORD + 1168] y: 10260 size: QWORD <|@ <|@
      nr  996  <|@ st <@st|@live-base-pointers: []
java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 18]
stack: rax|DWORD 
locals: stack:72|QWORD[.] - rdx|QWORD[.] - 
java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
locals: - - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:18, 295] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  558  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  560  <|@ instruction r11|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr  562  <|@ instruction rbx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  564  <|@ instruction MOV [r15|QWORD + 1156] y: -153363 size: DWORD <|@ <|@
      nr  566  <|@ instruction MOV [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  568  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:641) [bci: 94]
stack: int[0|0x0] 
locals: stack:72|QWORD[.] stack:36|DWORD stack:80|QWORD[.] stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD rbx|QWORD[.] r11|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:94] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1190  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1192  <|@ instruction stack:36|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr 1194  <|@ instruction r8|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1196  <|@ instruction r10|DWORD = MOVE input: int[-75547|0xfffffffffffed8e5] <|@ <|@
      nr 1198  <|@ instruction JUMP ~[] destination: B121 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  662  <|@ instruction r8|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr  664  <|@ instruction rbp|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  666  <|@ instruction MOV [r15|QWORD + 1156] y: -157971 size: DWORD <|@ <|@
      nr  668  <|@ instruction MOV [r15|QWORD + 1168] y: 1300 size: QWORD <|@ <|@
      nr  670  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:654) [bci: 206]
stack: int[0|0x0] 
locals: stack:72|QWORD[.] stack:36|DWORD stack:80|QWORD[.] stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD stack:96|QWORD[.] - - - r8|QWORD[.] - rbp|DWORD 
>@ <|@ instruction DEOPT info [bci:206] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  998  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1000  <|@ instruction MOV [r15|QWORD + 1156] y: -61235 size: DWORD <|@ <|@
      nr 1002  <|@ instruction MOV [r15|QWORD + 1168] y: 8980 size: QWORD <|@ <|@
      nr 1004  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:670) [bci: 292]
locals: stack:72|QWORD[.] - - - - stack:32|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:292] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction MOV [r15|QWORD + 1156] y: -129299 size: DWORD <|@ <|@
      nr   58  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:634) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] r8|QWORD[.] r9|DWORD rdi|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #21         // table:java.util.HashMap$Node[]
     4: dup           
     5: astore        6
     7: ifnull        19
    10: aload         6
    12: arraylength   
    13: dup           
    14: istore        8
    16: ifne          29
    19: aload_0       
    20: invokevirtual #23         // resize:()java.util.HashMap$Node[]
    23: dup           
    24: astore        6
    26: arraylength   
    27: istore        8
    29: aload         6
    31: iload         8
    33: iconst_1      
    34: isub          
    35: iload_1       
    36: iand          
    37: dup           
    38: istore        9
    40: aaload        
    41: dup           
    42: astore        7
    44: ifnonnull     63
    47: aload         6
    49: iload         9
    51: aload_0       
    52: iload_1       
    53: aload_2       
    54: aload_3       
    55: aconst_null   
    56: invokevirtual #40         // newNode:(int, java.lang.Object, java.lang.Object, java.util.HashMap$Node)java.util.HashMap$Node
    59: aastore       
    60: goto          259
    63: aload         7
    65: getfield      #35         // java.util.HashMap$Node.hash:int
    68: iload_1       
    69: if_icmpne     104
    72: aload         7
    74: getfield      #36         // java.util.HashMap$Node.key:java.lang.Object
    77: dup           
    78: astore        11
    80: aload_2       
    81: if_acmpeq     97
    84: aload_2       
    85: ifnull        104
    88: aload_2       
    89: aload         11
    91: invokevirtual #37         // java.lang.Object.equals:(java.lang.Object)boolean
    94: ifeq          104
    97: aload         7
    99: astore        10
   101: goto          222
   104: aload         7
   106: instanceof    #180        // java.util.HashMap$TreeNode
   109: ifeq          131
   112: aload         7
   114: checkcast     #180        // java.util.HashMap$TreeNode
   117: aload_0       
   118: aload         6
   120: iload_1       
   121: aload_2       
   122: aload_3       
   123: invokevirtual #41         // java.util.HashMap$TreeNode.putTreeVal:(java.util.HashMap, java.util.HashMap$Node[], int, java.lang.Object, java.lang.Object)java.util.HashMap$TreeNode
   126: astore        10
   128: goto          222
   131: iconst_0      
   132: istore        12
   134: aload         7
   136: getfield      #38         // java.util.HashMap$Node.next:java.util.HashMap$Node
   139: dup           
   140: astore        10
   142: ifnonnull     175
   145: aload         7
   147: aload_0       
   148: iload_1       
   149: aload_2       
   150: aload_3       
   151: aconst_null   
   152: invokevirtual #40         // newNode:(int, java.lang.Object, java.lang.Object, java.util.HashMap$Node)java.util.HashMap$Node
   155: putfield      #38         // java.util.HashMap$Node.next:java.util.HashMap$Node
   158: iload         12
   160: bipush        7
   162: if_icmplt     222
   165: aload_0       
   166: aload         6
   168: iload_1       
   169: invokevirtual #42         // treeifyBin:(java.util.HashMap$Node[], int)void
   172: goto          222
   175: aload         10
   177: getfield      #35         // java.util.HashMap$Node.hash:int
   180: iload_1       
   181: if_icmpne     212
   184: aload         10
   186: getfield      #36         // java.util.HashMap$Node.key:java.lang.Object
   189: dup           
   190: astore        11
   192: aload_2       
   193: if_acmpeq     222
   196: aload_2       
   197: ifnull        212
   200: aload_2       
   201: aload         11
   203: invokevirtual #37         // java.lang.Object.equals:(java.lang.Object)boolean
   206: ifeq          212
   209: goto          222
   212: aload         10
   214: astore        7
   216: iinc          
   219: goto          134
   222: aload         10
   224: ifnull        259
   227: aload         10
   229: getfield      #34         // java.util.HashMap$Node.value:java.lang.Object
   232: astore        12
   234: iload         4
   236: ifeq          244
   239: aload         12
   241: ifnonnull     250
   244: aload         10
   246: aload_3       
   247: putfield      #34         // java.util.HashMap$Node.value:java.lang.Object
   250: aload_0       
   251: aload         10
   253: invokevirtual #43         // afterNodeAccess:(java.util.HashMap$Node)void
   256: aload         12
   258: areturn       
   259: aload_0       
   260: dup           
   261: getfield      #44         // modCount:int
   264: iconst_1      
   265: iadd          
   266: putfield      #44         // modCount:int
   269: aload_0       
   270: dup           
   271: getfield      #32         // size:int
   274: iconst_1      
   275: iadd          
   276: dup_x1        
   277: putfield      #32         // size:int
   280: aload_0       
   281: getfield      #17         // threshold:int
   284: if_icmple     292
   287: aload_0       
   288: invokevirtual #23         // resize:()java.util.HashMap$Node[]
   291: pop           
   292: aload_0       
   293: iload         5
   295: invokevirtual #45         // afterNodeInsertion:(boolean)void
   298: aconst_null   
   299: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LocationMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|DWORD, rdi|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@21849dd slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:72|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction stack:80|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction stack:88|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   12  <|@ instruction stack:28|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   14  <|@ instruction stack:32|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr   16  <|@ instruction rbx|DWORD[_] = MOV [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   18  <|@ instruction TESTBRANCH (x: rbx|DWORD[_], y: rbx|DWORD[_]) trueDestinationProbability: 0.0015880438063265454 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607168114973028567
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction rax|DWORD = MOV [rbx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   52  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607168114973028567
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr   66  <|@ instruction r10|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   68  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B1" 
    successors "B6" "B121" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   72  <|@ instruction stack:96|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   74  <|@ instruction rax|DWORD = MOV [rbx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   76  <|@ instruction r11|DWORD = MOV [rbx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   78  <|@ instruction rbp|DWORD = DEC r10|DWORD size: DWORD <|@ <|@
      nr   80  <|@ instruction rbp|DWORD = AND (x: rdx|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr   82  <|@ instruction CMPBRANCH (x: rax|DWORD, y: rbp|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B121 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B48" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction stack:40|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   88  <|@ instruction rax|DWORD[_] = MOV [rbx|QWORD[.] + rbp|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   90  <|@ instruction r13|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   92  <|@ instruction r14|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr   94  <|@ instruction r13|QWORD = UNCOMPRESSPOINTER (input: r13|DWORD, ~baseRegister: r14|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr   96  <|@ instruction stack:48|QWORD = MOVE r13|QWORD moveKind: QWORD <|@ <|@
      nr   98  <|@ instruction r14|QWORD = MOVE input: long[140438306553856|0x7fba57600000] <|@ <|@
      nr  100  <|@ instruction stack:56|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr  102  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  104  <|@ instruction stack:100|DWORD[_] = MOVE r10|DWORD[_] moveKind: DWORD <|@ <|@
      nr  106  <|@ instruction TESTBRANCH (x: rax|DWORD[_], y: rax|DWORD[_]) trueDestinationProbability: 0.8229115724385652 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B12" "B47" 
    xhandlers
    flags 
    probability 4605587348047262798
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction stack:60|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  112  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~r13|QWORD - keyConstants: [meta{HotSpotType<Ljava/util/HashMap;, resolved>}, meta{HotSpotType<Ljava/util/LinkedHashMap;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/replacements/SnippetTemplate$LRUCache;, resolved>}] keyTargets: [B7 -> B8, B7 -> B12, B7 -> B12] defaultTarget: B7 -> B47 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4605585062831744793
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction rax|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  118  <|@ instruction rbp|QWORD = LEA [rax|QWORD + 32] size: QWORD <|@ <|@
      nr  120  <|@ instruction CMPBRANCH (x: rbp|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4605510964398880109
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction MOV (x: [r15|QWORD + 440], y: rbp|QWORD) size: QWORD <|@ <|@
      nr  152  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 288] instr: 0 <|@ <|@
      nr  154  <|@ instruction MOV [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  156  <|@ instruction MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>;compressed} <|@ <|@
      nr  158  <|@ instruction MOV [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  160  <|@ instruction MOV [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  162  <|@ instruction MOV [rax|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  164  <|@ instruction rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  166  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 4605585062831744793
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  170  <|@ instruction MOV (x: [rax|QWORD[.] + 20], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  172  <|@ instruction rcx|DWORD[_] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  174  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr  176  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  178  <|@ instruction JUMP ~[] destination: B11 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B11" "B15" 
    successors "B27" "B18" 
    xhandlers
    flags 
    probability 4605587348047262798
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  270  <|@ instruction rdx|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr  272  <|@ instruction r11|QWORD = UNCOMPRESSPOINTER (input: r11|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr  274  <|@ instruction rdx|QWORD = MOV [r11|QWORD + 208] size: QWORD <|@ <|@
      nr  276  <|@ instruction rcx|DWORD = MOV [rdx|QWORD + 20] size: DWORD <|@ <|@
      nr  278  <|@ instruction r8|DWORD = MOV [rax|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  280  <|@ instruction r9|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr  282  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: r9|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr  284  <|@ instruction r9|QWORD = MOVSXD rcx|DWORD size: QWORD <|@ <|@
      nr  286  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r8|QWORD + r9|QWORD * 1]) trueDestinationProbability: 0.5 condition: = trueDestination: B16 -> B27 falseDestination: B16 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B46" 
    xhandlers
    flags 
    probability 4601083748419892302
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ instruction CMPCONSTBRANCH rcx|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B46 y: 32 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B27" "B21" 
    xhandlers
    flags 
    probability 4601083748419892302
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  298  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: r8|QWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B19 -> B27 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B16" "B25" "B19" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4605587348047262798
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" 
    xhandlers
    flags 
    probability 4604846135197064160
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction rbp|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  356  <|@ instruction JUMP ~[] destination: B28 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B28" "B29" "B33" "B32" 
    successors "B88" "B36" 
    xhandlers
    flags 
    probability 4605587348047262798
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  402  <|@ instruction MOV (x: [rbx|QWORD[.] + rbp|DWORD * 4 + 16], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  404  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + rbp|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  406  <|@ instruction rsi|QWORD[*] = XOR (x: rsi|QWORD[.+], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  408  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B34 -> B88 falseDestination: B34 -> B36 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B88" "B38" 
    xhandlers
    flags 
    probability 4604846135197064160
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  418  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B36 -> B88 falseDestination: B36 -> B38 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B88" "B40" 
    xhandlers
    flags 
    probability 4604179043631885386
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  430  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + rbp|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  432  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.+] y: 9 size: QWORD <|@ <|@
      nr  434  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B38 -> B88 falseDestination: B38 -> B40 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B34" "B86" "B43" "B44" "B40" "B38" "B36" 
    successors "B89" "B90" 
    xhandlers
    flags 
    probability 4606558935301518032
    begin_IR
      LIR
      nr  894  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  896  <|@ instruction INC [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  898  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  900  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, ~y: [rsi|QWORD[.] + 20]) size: DWORD <|@ <|@
      nr  902  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: rax|DWORD) size: DWORD <|@ <|@
      nr  904  <|@ instruction CMPBRANCH (x: rax|DWORD, y: [rsi|QWORD[.] + 28]) trueDestinationProbability: 7.853038846579175E-4 condition: > trueDestination: B88 -> B89 falseDestination: B88 -> B90 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B91" 
    xhandlers
    flags 
    probability 4606552351536966788
    begin_IR
      LIR
      nr  920  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  922  <|@ instruction r13|QWORD = MOVE stack:48|QWORD moveKind: QWORD <|@ <|@
      nr  924  <|@ instruction JUMP ~[] destination: B90 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" "B89" 
    successors "B97" "B93" "B99" 
    xhandlers
    flags 
    probability 4606558935301518032
    begin_IR
      LIR
      nr  926  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  928  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~r13|QWORD - keyConstants: [meta{HotSpotType<Ljava/util/HashMap;, resolved>}, meta{HotSpotType<Ljava/util/LinkedHashMap;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/replacements/SnippetTemplate$LRUCache;, resolved>}] keyTargets: [B91 -> B97, B91 -> B93, B91 -> B93] defaultTarget: B91 -> B99 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B91" "B93" "B95" 
    successors 
    xhandlers
    flags 
    probability 4606558935301518031
    begin_IR
      LIR
      nr  982  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  984  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  986  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4596580148792521806
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction rcx|QWORD = MOV [r8|QWORD + 40] size: QWORD <|@ <|@
      nr  308  <|@ instruction r9|DWORD = MOV [rcx|QWORD] size: DWORD <|@ <|@
      nr  310  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  312  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602807799859017905
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  320  <|@ instruction r11|DWORD = SHL r10|DWORD y: 3 size: DWORD <|@ <|@
      nr  322  <|@ instruction r11|DWORD = LEA [r11|DWORD + 8] size: DWORD <|@ <|@
      nr  324  <|@ instruction r11|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr  326  <|@ instruction r11|QWORD = MOV [rcx|QWORD + r11|QWORD * 1] size: QWORD <|@ <|@
      nr  328  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: r11|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B23 -> B25 falseDestination: B23 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B22" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4599230716294395707
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  332  <|@ instruction r10|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr  334  <|@ instruction JUMP ~[] destination: B24 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B24" 
    successors "B23" "B46" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4602807799859017905
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  316  <|@ instruction CMPBRANCH (x: r9|DWORD, y: r10|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B27" 
    xhandlers
    flags 
    probability 4596580148792521807
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  338  <|@ instruction MOV (x: [r8|QWORD + 32], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  340  <|@ instruction JUMP ~[] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B49" "B54" 
    xhandlers
    flags 
    probability 4595548303301553864
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  518  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [rax|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.01987559010066231 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4595421491411700642
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction CMPCONSTBRANCH [rax|DWORD[_] * 8 + 8] trueDestinationProbability: 2.021089053783065E-6 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B56 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4595421478772878611
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  606  <|@ instruction rbp|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  608  <|@ instruction JUMP ~[] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4590110563079390205
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  620  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [rax|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.8692436604445373 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B62 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B57" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4576850562957400324
    begin_IR
      LIR
      nr  672  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  674  <|@ st <@st|@reference-map: [rcx:0, rbx:0, rsi:0, r8:0, r11:0, stack:28, stack:32, stack:40, stack:48, stack:56]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] stack:88|QWORD[.] r9|DWORD rdi|DWORD rbx|QWORD[.] r11|QWORD[.] - - - - rbp|DWORD 
>@ <|@ instruction SAFEPOINT rax|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 thread: r15 state [bci:134] <|@ <|@
      nr  676  <|@ instruction rbp|DWORD = INC rbp|DWORD size: DWORD <|@ <|@
      nr  678  <|@ instruction r11|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  680  <|@ instruction JUMP ~[] destination: B62 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B62" 
    successors "B65" "B58" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4595777537596400292
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  612  <|@ st <@st|@reference-map: [rcx:0, rbx:0, rsi:0, r11:0, stack:28, stack:32, stack:40, stack:48, stack:56]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] stack:88|QWORD[.] r9|DWORD rdi|DWORD rbx|QWORD[.] r11|QWORD[.] - - - - rbp|DWORD 
>@ <|@ instruction rax|DWORD[_] = MOV [r11|QWORD[.] + 24] size: DWORD state [bci:134] <|@ <|@
      nr  614  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  616  <|@ instruction TESTBRANCH (x: rax|DWORD[_], y: rax|DWORD[_]) trueDestinationProbability: 0.5880075530332061 condition: = trueDestination: B57 -> B65 falseDestination: B57 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4592437312858669387
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  696  <|@ instruction stack:112|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  698  <|@ instruction stack:40|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  700  <|@ instruction stack:120|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  702  <|@ instruction rax|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  704  <|@ instruction r10|QWORD = MOV [r13|QWORD + 680] size: QWORD <|@ <|@
      nr  706  <|@ instruction r11|QWORD = MOV [r10|QWORD + 64] size: QWORD <|@ <|@
      nr  708  <|@ instruction rdi|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  712  <|@ instruction rdi|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  716  <|@ instruction r8|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  718  <|@ instruction r9|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  720  <|@ instruction rbx|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  722  <|@ instruction rax|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  724  <|@ instruction stack:36|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  726  <|@ st <@st|@reference-map: [stack:8, stack:16, stack:28, stack:32, stack:40, stack:56]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:648) [bci: 152]
stack: stack:120|QWORD[.] 
locals: stack:72|QWORD[.] stack:36|DWORD - stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD stack:96|QWORD[.] - - - stack:112|QWORD[.] - stack:40|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.]]) [] callTarget: HotSpotMethod<HashMap.newNode(int, Object, Object, HashMap$Node)> state [bci:152] <|@ <|@
      nr  728  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B67 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B72" 
    xhandlers
    flags 
    probability 4591660023639118941
    begin_IR
      LIR
      nr  730  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  732  <|@ instruction r11|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr  734  <|@ instruction r14|QWORD = MOVE stack:56|QWORD moveKind: QWORD <|@ <|@
      nr  736  <|@ instruction rbx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  738  <|@ instruction JUMP ~[] destination: B66 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B66" "B68" "B71" "B70" 
    successors "B83" "B74" 
    xhandlers
    flags 
    probability 4592437312858669387
    begin_IR
      LIR
      nr  788  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  790  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  792  <|@ instruction MOV (x: [r11|QWORD[.] + 24], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  794  <|@ instruction rsi|QWORD[*] = XOR (x: r11|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  796  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B72 -> B83 falseDestination: B72 -> B74 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B83" "B76" 
    xhandlers
    flags 
    probability 4591660023639118941
    begin_IR
      LIR
      nr  802  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  804  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B83 falseDestination: B74 -> B76 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B83" "B78" 
    xhandlers
    flags 
    probability 4590960463341523540
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  812  <|@ instruction r11|QWORD[*] = SHR r11|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  814  <|@ instruction CMPCONSTBRANCH [r11|QWORD[*] + r14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B76 -> B83 falseDestination: B76 -> B78 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B72" "B74" "B76" "B78" "B82" "B81" 
    successors "B84" "B85" 
    xhandlers
    flags 
    probability 4592437312858669387
    begin_IR
      LIR
      nr  860  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  862  <|@ instruction CMPCONSTBRANCH stack:40|DWORD trueDestinationProbability: 0.9999886211240704 condition: < trueDestination: B83 -> B84 falseDestination: B83 -> B85 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" 
    xhandlers
    flags 
    probability 4592437224411893480
    begin_IR
      LIR
      nr  864  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  866  <|@ instruction r8|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr  868  <|@ instruction JUMP ~[] destination: B84 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B50" "B55" "B59" "B84" "B85" "B63" "B53" 
    successors "B88" "B100" 
    xhandlers
    flags 
    probability 4595548303301553864
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  886  <|@ instruction TESTBRANCH (x: r8|QWORD[.], y: r8|QWORD[.]) trueDestinationProbability: 0.6091185940042786 condition: = trueDestination: B86 -> B88 falseDestination: B86 -> B100 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B101" "B119" 
    xhandlers
    flags 
    probability 4589652288651159933
    begin_IR
      LIR
      nr 1006  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1008  <|@ instruction r13|QWORD = MOVE stack:48|QWORD moveKind: QWORD <|@ <|@
      nr 1010  <|@ instruction r9|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1012  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1014  <|@ instruction r10|DWORD[_] = MOV [r8|QWORD[.] + 20] size: DWORD <|@ <|@
      nr 1016  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.9999962001170364 condition: = trueDestination: B100 -> B101 falseDestination: B100 -> B119 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B108" "B103" 
    xhandlers
    flags 
    probability 4589652269697845341
    begin_IR
      LIR
      nr 1018  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1020  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B101 -> B108 falseDestination: B101 -> B103 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B101" "B103" "B107" "B106" 
    successors "B120" "B110" 
    xhandlers
    flags 
    probability 4589652269697845341
    begin_IR
      LIR
      nr 1074  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1024  <|@ instruction r11|DWORD[_] = MOVE stack:100|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1076  <|@ instruction MOV (x: [r8|QWORD[.] + 20], y: r11|DWORD[_]) size: DWORD <|@ <|@
      nr 1078  <|@ instruction rsi|QWORD[*] = XOR (x: r8|QWORD[.], y: stack:88|QWORD[.]) size: QWORD <|@ <|@
      nr 1080  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B108 -> B120 falseDestination: B108 -> B110 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B120" "B112" 
    xhandlers
    flags 
    probability 4589138949298219176
    begin_IR
      LIR
      nr 1088  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1090  <|@ instruction r11|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1092  <|@ instruction TESTBRANCH (x: r11|QWORD[.], y: r11|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B110 -> B120 falseDestination: B110 -> B112 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B120" "B114" 
    xhandlers
    flags 
    probability 4588241136471976702
    begin_IR
      LIR
      nr 1100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1102  <|@ instruction r14|QWORD = MOVE stack:56|QWORD moveKind: QWORD <|@ <|@
      nr 1104  <|@ instruction rsi|QWORD[*] = SHR r8|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr 1106  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B112 -> B120 falseDestination: B112 -> B114 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B119" "B108" "B117" "B118" "B114" "B112" "B110" 
    successors 
    xhandlers
    flags 
    probability 4589652288651159933
    begin_IR
      LIR
      nr 1168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1170  <|@ instruction rbx|QWORD = MOV [r13|QWORD + 688] size: QWORD <|@ <|@
      nr 1172  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr 1174  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr 1176  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1178  <|@ instruction rdx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1180  <|@ instruction stack:112|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1182  <|@ st <@st|@reference-map: [stack:16]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:663) [bci: 253]
locals: - - - - - - - - - - - - stack:112|QWORD[.] 
>@ <|@ instruction - = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<HashMap.afterNodeAccess(HashMap$Node)> state [bci:253] <|@ <|@
      nr 1184  <|@ instruction rax|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1186  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" "B31" 
    xhandlers
    flags 
    probability 4590594123464754032
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction rbp|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  362  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + rbp|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  364  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  366  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B34 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4590001153184595122
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  374  <|@ instruction r10|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  376  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  378  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4589467479932452103
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction r11|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  390  <|@ instruction MOV (x: [r11|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  392  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  394  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  396  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B88" "B42" 
    xhandlers
    flags 
    probability 4589467479932452103
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  446  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B40 -> B88 falseDestination: B40 -> B42 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B86" "B60" 
    xhandlers
    flags 
    probability 4589398445432346844
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction stack:112|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  626  <|@ instruction stack:40|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  628  <|@ instruction stack:120|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  630  <|@ instruction stack:36|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  632  <|@ instruction rsi|DWORD[_] = MOV [rax|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  634  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  636  <|@ instruction CMPBRANCH (x: r10|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.9998932466496128 condition: = trueDestination: B59 -> B86 falseDestination: B59 -> B60 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4577371935537457006
    begin_IR
      LIR
      nr  740  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  742  <|@ instruction r11|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr  744  <|@ instruction rbx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  746  <|@ instruction rsi|QWORD[.+] = LEA [r11|QWORD[.] + 24] size: QWORD <|@ <|@
      nr  748  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  750  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B67 -> B68 falseDestination: B67 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" "B71" 
    xhandlers
    flags 
    probability 4576750104161816650
    begin_IR
      LIR
      nr  758  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  760  <|@ instruction r10|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  762  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  764  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    probability 4576190455923740329
    begin_IR
      LIR
      nr  774  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  776  <|@ instruction r8|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  778  <|@ instruction MOV (x: [r8|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  780  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  782  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  784  <|@ instruction r14|QWORD = MOVE stack:56|QWORD moveKind: QWORD <|@ <|@
      nr  786  <|@ instruction JUMP ~[] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B83" "B80" 
    xhandlers
    flags 
    probability 4576190455923740328
    begin_IR
      LIR
      nr  820  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  822  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  824  <|@ instruction CMPCONSTBRANCH [r11|QWORD[*] + r14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B78 -> B83 falseDestination: B78 -> B80 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4575895921484393205
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction rbp|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  126  <|@ instruction stack:36|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  128  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>} <|@ <|@
      nr  130  <|@ st <@st|@reference-map: [rcx:0, rbx:0, stack:28, stack:32, stack:40, stack:56]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: stack:72|QWORD[.] stack:36|DWORD rcx|QWORD[.] stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD rbx|QWORD[.] - stack:40|DWORD - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7fba62ccef80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:29] <|@ <|@
      nr  132  <|@ st <@st|@reference-map: [rax:0, rcx:0, rbx:0, stack:28, stack:32, stack:40, stack:56]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: stack:72|QWORD[.] stack:36|DWORD rcx|QWORD[.] stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD rbx|QWORD[.] - stack:40|DWORD - - - - 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:29] <|@ <|@
      nr  134  <|@ instruction r10|DWORD[_] = MOVE stack:100|DWORD[_] moveKind: DWORD <|@ <|@
      nr  144  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  146  <|@ instruction JUMP ~[] destination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4575188794187971253
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  382  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  384  <|@ instruction JUMP ~[] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B108" "B105" 
    xhandlers
    flags 
    probability 4574630580609171603
    begin_IR
      LIR
      nr 1028  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1030  <|@ instruction r11|QWORD[.+] = LEA [r8|QWORD[.] + 20] size: QWORD <|@ <|@
      nr 1032  <|@ instruction r11|DWORD[_] = MOV [r11|QWORD[.+]] size: DWORD <|@ <|@
      nr 1034  <|@ instruction TESTBRANCH (x: r11|DWORD[_], y: r11|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B103 -> B108 falseDestination: B103 -> B105 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B106" "B107" 
    xhandlers
    flags 
    probability 4573832524763622737
    begin_IR
      LIR
      nr 1042  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1044  <|@ instruction r9|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr 1046  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr 1048  <|@ instruction TESTBRANCH (x: r9|QWORD, y: r9|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B105 -> B106 falseDestination: B105 -> B107 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B108" 
    xhandlers
    flags 
    probability 4573114274502628758
    begin_IR
      LIR
      nr 1060  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1062  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr 1064  <|@ instruction MOV (x: [rcx|QWORD + r9|QWORD * 1 - 8], y: r11|QWORD[.]) size: QWORD <|@ <|@
      nr 1066  <|@ instruction r11|QWORD = LEA [r9|QWORD - 8] size: QWORD <|@ <|@
      nr 1068  <|@ instruction MOV (x: [r15|QWORD + 40], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1072  <|@ instruction JUMP ~[] destination: B107 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4574334916984542422
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  456  <|@ instruction MOVB [rsi|QWORD[*] + r14|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  458  <|@ instruction r10|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  460  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: r14|QWORD) size: QWORD <|@ <|@
      nr  462  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B88" 
    xhandlers
    flags 
    probability 4573566427501456474
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  476  <|@ instruction r11|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  478  <|@ instruction MOV (x: [r11|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  480  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  482  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  486  <|@ instruction JUMP ~[] destination: B44 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B120" "B116" 
    xhandlers
    flags 
    probability 4573114274502628759
    begin_IR
      LIR
      nr 1114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1116  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr 1118  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B114 -> B120 falseDestination: B114 -> B116 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4570262383476918658
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  522  <|@ instruction stack:36|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  524  <|@ instruction rsi|DWORD[_] = MOV [rax|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  526  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  528  <|@ instruction CMPBRANCH (x: r10|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.9854570809572428 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B86" 
    xhandlers
    flags 
    probability 4570144353713859813
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  532  <|@ instruction r8|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  534  <|@ instruction JUMP ~[] destination: B50 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 4564966382317228292
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   22  <|@ instruction stack:36|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   26  <|@ st <@st|@reference-map: [stack:40, stack:48, stack:56]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:635) [bci: 20]
locals: stack:72|QWORD[.] stack:36|DWORD stack:80|QWORD[.] stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.resize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:20] <|@ <|@
      nr   28  <|@ st <@st|@reference-map: [rax:0, stack:40, stack:48, stack:56]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:635) [bci: 23]
stack: Object[null] 
locals: stack:72|QWORD[.] stack:36|DWORD stack:80|QWORD[.] stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD - - - - - - - 
>@ <|@ instruction rsi|DWORD = MOV [rax|QWORD[.] + 12] size: DWORD state [bci:23] <|@ <|@
      nr   30  <|@ instruction r10|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction rbx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction rdi|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr   36  <|@ instruction r9|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr   38  <|@ instruction r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction rcx|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction rdx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr   44  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction JUMP ~[] destination: B1 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B72" 
    xhandlers
    flags 
    probability 4562617473904064804
    begin_IR
      LIR
      nr  752  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  754  <|@ instruction r14|QWORD = MOVE stack:56|QWORD moveKind: QWORD <|@ <|@
      nr  756  <|@ instruction JUMP ~[] destination: B68 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    probability 4562093595080792590
    begin_IR
      LIR
      nr  766  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  768  <|@ instruction r14|QWORD = MOVE stack:56|QWORD moveKind: QWORD <|@ <|@
      nr  770  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  772  <|@ instruction JUMP ~[] destination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    probability 4561198157899870475
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  832  <|@ instruction MOVB [r11|QWORD[*] + r14|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  834  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  836  <|@ instruction r11|QWORD[*] = ADD (x: r11|QWORD[*], y: r14|QWORD) size: QWORD <|@ <|@
      nr  838  <|@ instruction TESTBRANCH (x: rsi|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    probability 4560392264437040573
    begin_IR
      LIR
      nr  848  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  850  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  852  <|@ instruction MOV (x: [rdx|QWORD + rsi|QWORD * 1 - 8], y: r11|QWORD[*]) size: QWORD <|@ <|@
      nr  854  <|@ instruction rsi|QWORD = LEA [rsi|QWORD - 8] size: QWORD <|@ <|@
      nr  856  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  858  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B91" 
    xhandlers
    flags 
    probability 4559880998172045651
    begin_IR
      LIR
      nr  906  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  908  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  912  <|@ st <@st|@reference-map: [stack:56]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:669) [bci: 288]
locals: stack:72|QWORD[.] - - - - stack:32|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.resize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:288] <|@ <|@
      nr  914  <|@ instruction r13|QWORD = MOVE stack:48|QWORD moveKind: QWORD <|@ <|@
      nr  916  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  918  <|@ instruction JUMP ~[] destination: B89 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B88" 
    xhandlers
    flags 
    probability 4559287139136259037
    begin_IR
      LIR
      nr  464  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  466  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  468  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  472  <|@ instruction JUMP ~[] destination: B43 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B108" 
    xhandlers
    flags 
    probability 4558885225359523289
    begin_IR
      LIR
      nr 1050  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1052  <|@ instruction rsi|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1054  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr 1058  <|@ instruction JUMP ~[] destination: B106 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B117" "B118" 
    xhandlers
    flags 
    probability 4558310625150728107
    begin_IR
      LIR
      nr 1126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1128  <|@ instruction MOVB [rsi|QWORD[*] + r14|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr 1130  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr 1132  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: r14|QWORD) size: QWORD <|@ <|@
      nr 1134  <|@ instruction TESTBRANCH (x: rdx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B116 -> B117 falseDestination: B116 -> B118 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B120" 
    xhandlers
    flags 
    probability 4557793484962812442
    begin_IR
      LIR
      nr 1146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1148  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr 1150  <|@ instruction MOV (x: [rbx|QWORD + rdx|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr 1152  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr 1154  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1158  <|@ instruction JUMP ~[] destination: B118 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B97" "B95" 
    xhandlers
    flags 
    probability 4554832167497868566
    begin_IR
      LIR
      nr  934  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  936  <|@ instruction rdi|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  938  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.4891304347826087 condition: = trueDestination: B93 -> B97 falseDestination: B93 -> B95 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B97" "B98" 
    xhandlers
    flags 
    probability 4550463275345577801
    begin_IR
      LIR
      nr  944  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  946  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  948  <|@ instruction rdx|DWORD[_] = MOV [rsi|QWORD[.] + 52] size: DWORD <|@ <|@
      nr  950  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:56]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:670) [bci: 292]
locals: rsi|QWORD[.] - - - - rdi|DWORD - - - - - - - 
>@ <|@ instruction NULLCHECK [rdx|DWORD[_] * 8] state [bci:292] <|@ <|@
      nr  952  <|@ instruction rbx|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  954  <|@ instruction rax|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr  956  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rax|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr  958  <|@ instruction rbx|QWORD = MOV [rbx|QWORD + 872] size: QWORD <|@ <|@
      nr  960  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  962  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  964  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  968  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  972  <|@ instruction stack:112|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  974  <|@ st <@st|@reference-map: [stack:16, stack:56]
live-base-pointers: []
java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 15]
locals: stack:72|QWORD[.] - stack:112|QWORD[.] - 
java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
locals: - - - - - - - - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<LinkedHashMap.removeEldestEntry(Map$Entry)> state [bci:15, 295] <|@ <|@
      nr  976  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B95 -> B97 falseDestination: B95 -> B98 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4553315745025075769
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  182  <|@ instruction stack:36|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  184  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  186  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 40] size: QWORD <|@ <|@
      nr  188  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4553268943811267021
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  208  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 296] instr: 0 <|@ <|@
      nr  210  <|@ instruction MOV [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  212  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>;compressed} <|@ <|@
      nr  214  <|@ instruction MOV [rsi|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  216  <|@ instruction MOV [rsi|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  218  <|@ instruction MOV [rsi|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  220  <|@ instruction MOV [rsi|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  222  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  224  <|@ instruction stack:64|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  226  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4553315745025075769
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  230  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  234  <|@ instruction rdx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  236  <|@ instruction rcx|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  238  <|@ instruction r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  240  <|@ instruction r9|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  242  <|@ instruction stack:112|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  244  <|@ st <@st|@reference-map: [stack:16, stack:32, stack:40, stack:48, stack:56]
live-base-pointers: []
java.util.LinkedHashMap$Entry.<init>(LinkedHashMap.java:208) [bci: 6]
locals: - - - - - 
java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 9]
stack: stack:112|QWORD[.] 
locals: stack:72|QWORD[.] stack:36|DWORD stack:80|QWORD[.] stack:88|QWORD[.] Object[null] - 
java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stack: stack:96|QWORD[.] stack:60|DWORD 
locals: stack:72|QWORD[.] - - - - stack:32|DWORD - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.]] [] callTarget: HotSpotMethod<HashMap$Node.<init>(int, Object, Object, HashMap$Node)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:6, 9, 56] <|@ <|@
      nr  246  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  248  <|@ instruction rdx|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr  250  <|@ st <@st|@reference-map: [stack:16, stack:32, stack:56]
live-base-pointers: []
java.util.LinkedHashMap.newNode(LinkedHashMap.java:283) [bci: 17]
locals: - - - - - stack:112|QWORD[.] 
java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stack: stack:96|QWORD[.] stack:60|DWORD 
locals: stack:72|QWORD[.] - - - - stack:32|DWORD - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<LinkedHashMap.linkNodeAtEnd(LinkedHashMap$Entry)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:17, 56] <|@ <|@
      nr  252  <|@ instruction rax|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr  254  <|@ instruction r14|QWORD = MOVE stack:56|QWORD moveKind: QWORD <|@ <|@
      nr  256  <|@ instruction r13|QWORD = MOVE stack:48|QWORD moveKind: QWORD <|@ <|@
      nr  258  <|@ instruction r11|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr  260  <|@ instruction rbx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  262  <|@ instruction rdi|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  264  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    probability 4546075572092099182
    begin_IR
      LIR
      nr  840  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  842  <|@ instruction rsi|QWORD = MOVE r11|QWORD[*] moveKind: QWORD <|@ <|@
      nr  844  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  846  <|@ instruction JUMP ~[] destination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B120" 
    xhandlers
    flags 
    probability 4543399067768740112
    begin_IR
      LIR
      nr 1136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1138  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1140  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr 1144  <|@ instruction JUMP ~[] destination: B117 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4542678729597855531
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  538  <|@ instruction stack:112|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  540  <|@ st <@st|@reference-map: [rcx:0, r10:0, stack:16, stack:28, stack:32, stack:40, stack:48, stack:56]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: stack:72|QWORD[.] stack:36|DWORD rcx|QWORD[.] stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD stack:96|QWORD[.] - stack:40|DWORD - - - - 
>@ <|@ instruction rsi|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD state [bci:29] <|@ <|@
      nr  542  <|@ instruction rdx|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr  544  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr  546  <|@ instruction rbx|QWORD = MOV [rsi|QWORD + 464] size: QWORD <|@ <|@
      nr  548  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  550  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  552  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  554  <|@ st <@st|@reference-map: [stack:16, stack:28, stack:32, stack:40, stack:48, stack:56]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:641) [bci: 91]
locals: stack:72|QWORD[.] stack:36|DWORD stack:80|QWORD[.] stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD stack:96|QWORD[.] stack:112|QWORD[.] - - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:91] <|@ <|@
      nr  556  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B86" 
    xhandlers
    flags 
    probability 4542678729597855531
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  572  <|@ instruction r8|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr  574  <|@ instruction JUMP ~[] destination: B53 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B63" 
    xhandlers
    flags 
    probability 4529894057192690854
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  642  <|@ st <@st|@reference-map: [rcx:0, r10:0, r11:0, stack:16, stack:28, stack:32, stack:40, stack:48, stack:56]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: stack:72|QWORD[.] stack:36|DWORD rcx|QWORD[.] stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD stack:96|QWORD[.] r11|QWORD[.] - - - - stack:40|DWORD 
>@ <|@ instruction rsi|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD state [bci:134] <|@ <|@
      nr  644  <|@ instruction rdx|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr  646  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr  648  <|@ instruction rbx|QWORD = MOV [rsi|QWORD + 464] size: QWORD <|@ <|@
      nr  650  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  652  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  654  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  656  <|@ st <@st|@reference-map: [stack:16, stack:28, stack:32, stack:40, stack:48, stack:56]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:654) [bci: 203]
locals: stack:72|QWORD[.] stack:36|DWORD stack:80|QWORD[.] stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD stack:96|QWORD[.] - - - stack:112|QWORD[.] - stack:40|DWORD 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:203] <|@ <|@
      nr  658  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B86" 
    xhandlers
    flags 
    probability 4529894057192690854
    begin_IR
      LIR
      nr  682  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  684  <|@ instruction r8|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr  686  <|@ instruction JUMP ~[] destination: B63 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4523100981620127249
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction stack:64|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  194  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>} <|@ <|@
      nr  196  <|@ st <@st|@reference-map: [stack:32, stack:40, stack:48, stack:56]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: stack:72|QWORD[.] stack:36|DWORD stack:80|QWORD[.] stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD stack:96|QWORD[.] - stack:40|DWORD - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7fba62ccef80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:29] <|@ <|@
      nr  198  <|@ st <@st|@reference-map: [rax:0, stack:32, stack:40, stack:48, stack:56]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: stack:72|QWORD[.] stack:36|DWORD stack:80|QWORD[.] stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD stack:96|QWORD[.] - stack:40|DWORD - - - - 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:29] <|@ <|@
      nr  200  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  202  <|@ instruction JUMP ~[] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" 
    xhandlers
    flags 
    probability 4518403274531071726
    begin_IR
      LIR
      nr  870  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  872  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  874  <|@ instruction rdx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  876  <|@ instruction rcx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  878  <|@ st <@st|@reference-map: [stack:16, stack:28, stack:40, stack:56]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:650) [bci: 169]
locals: stack:72|QWORD[.] - - stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD - - - - stack:112|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<HashMap.treeifyBin(HashMap$Node[], int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:169] <|@ <|@
      nr  880  <|@ instruction r8|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr  882  <|@ instruction JUMP ~[] destination: B85 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B86" 
    xhandlers
    flags 
    probability 4510226010095555986
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  582  <|@ instruction stack:112|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  584  <|@ instruction stack:36|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  586  <|@ instruction rsi|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr  588  <|@ instruction rdx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  590  <|@ instruction rcx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  592  <|@ instruction r8|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  594  <|@ instruction r9|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  596  <|@ instruction rdi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  598  <|@ st <@st|@reference-map: [stack:28, stack:40, stack:56]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:644) [bci: 123]
locals: stack:72|QWORD[.] - - stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|QWORD[.], rdi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap$TreeNode.putTreeVal(HashMap, HashMap$Node[], int, Object, Object)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:123] <|@ <|@
      nr  600  <|@ instruction r8|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  602  <|@ instruction JUMP ~[] destination: B55 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B120" 
    xhandlers
    flags 
    probability 4508568125070994604
    begin_IR
      LIR
      nr 1160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1162  <|@ st <@st|@reference-map: [r8:0, r10:0, stack:40, stack:56]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:659) [bci: 222]
locals: stack:72|QWORD[.] - - stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD - - - - r8|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r10|DWORD[_] * 8] state [bci:222] <|@ <|@
      nr 1166  <|@ instruction JUMP ~[] destination: B119 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B18" "B22" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction rbp|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  496  <|@ instruction MOV [r15|QWORD + 1156] y: -82987 size: DWORD <|@ <|@
      nr  498  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  500  <|@ st <@st|@reference-map: [rax:0, stack:32, stack:56]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stack: stack:96|QWORD[.] rbp|DWORD rax|QWORD[.] 
locals: stack:72|QWORD[.] - - - - stack:32|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:59] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction r11|QWORD = MOVE input: long[5780|0x1694] <|@ <|@
      nr  506  <|@ instruction r10|DWORD = MOVE input: int[-51507|0xffffffffffff36cd] <|@ <|@
      nr  508  <|@ instruction stack:36|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  510  <|@ instruction r8|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  512  <|@ instruction JUMP ~[] destination: B47 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B121" "B47" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1202  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1204  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1206  <|@ st <@st|@reference-map: [stack:32, stack:40, stack:48, stack:56]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: stack:72|QWORD[.] stack:36|DWORD stack:80|QWORD[.] stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD stack:96|QWORD[.] - r8|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:29] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  988  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  990  <|@ instruction rdx|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr  992  <|@ instruction MOV [r15|QWORD + 1156] y: -161299 size: DWORD <|@ <|@
      nr  994  <|@ instruction MOV [r15|QWORD + 1168] y: 10260 size: QWORD <|@ <|@
      nr  996  <|@ st <@st|@reference-map: [rdx:0, stack:56]
live-base-pointers: []
java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 18]
stack: rax|DWORD 
locals: stack:72|QWORD[.] - rdx|QWORD[.] - 
java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
locals: - - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:18, 295] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  558  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  560  <|@ instruction r11|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr  562  <|@ instruction rbx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  564  <|@ instruction MOV [r15|QWORD + 1156] y: -153363 size: DWORD <|@ <|@
      nr  566  <|@ instruction MOV [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  568  <|@ st <@st|@reference-map: [rbx:0, r11:0, stack:40, stack:48, stack:56]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:641) [bci: 94]
stack: int[0|0x0] 
locals: stack:72|QWORD[.] stack:36|DWORD stack:80|QWORD[.] stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD rbx|QWORD[.] r11|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:94] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1190  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1192  <|@ instruction stack:36|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr 1194  <|@ instruction r8|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1196  <|@ instruction r10|DWORD = MOVE input: int[-75547|0xfffffffffffed8e5] <|@ <|@
      nr 1198  <|@ instruction JUMP ~[] destination: B121 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  662  <|@ instruction r8|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr  664  <|@ instruction rbp|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  666  <|@ instruction MOV [r15|QWORD + 1156] y: -157971 size: DWORD <|@ <|@
      nr  668  <|@ instruction MOV [r15|QWORD + 1168] y: 1300 size: QWORD <|@ <|@
      nr  670  <|@ st <@st|@reference-map: [r8:0, stack:32, stack:40, stack:48, stack:56]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:654) [bci: 206]
stack: int[0|0x0] 
locals: stack:72|QWORD[.] stack:36|DWORD stack:80|QWORD[.] stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD stack:96|QWORD[.] - - - r8|QWORD[.] - rbp|DWORD 
>@ <|@ instruction DEOPT info [bci:206] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  998  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1000  <|@ instruction MOV [r15|QWORD + 1156] y: -61235 size: DWORD <|@ <|@
      nr 1002  <|@ instruction MOV [r15|QWORD + 1168] y: 8980 size: QWORD <|@ <|@
      nr 1004  <|@ st <@st|@reference-map: [stack:56]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:670) [bci: 292]
locals: stack:72|QWORD[.] - - - - stack:32|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:292] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction MOV [r15|QWORD + 1156] y: -129299 size: DWORD <|@ <|@
      nr   58  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   60  <|@ st <@st|@reference-map: [rcx:0, rsi:0, r8:0]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:634) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] r8|QWORD[.] r9|DWORD rdi|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #21         // table:java.util.HashMap$Node[]
     4: dup           
     5: astore        6
     7: ifnull        19
    10: aload         6
    12: arraylength   
    13: dup           
    14: istore        8
    16: ifne          29
    19: aload_0       
    20: invokevirtual #23         // resize:()java.util.HashMap$Node[]
    23: dup           
    24: astore        6
    26: arraylength   
    27: istore        8
    29: aload         6
    31: iload         8
    33: iconst_1      
    34: isub          
    35: iload_1       
    36: iand          
    37: dup           
    38: istore        9
    40: aaload        
    41: dup           
    42: astore        7
    44: ifnonnull     63
    47: aload         6
    49: iload         9
    51: aload_0       
    52: iload_1       
    53: aload_2       
    54: aload_3       
    55: aconst_null   
    56: invokevirtual #40         // newNode:(int, java.lang.Object, java.lang.Object, java.util.HashMap$Node)java.util.HashMap$Node
    59: aastore       
    60: goto          259
    63: aload         7
    65: getfield      #35         // java.util.HashMap$Node.hash:int
    68: iload_1       
    69: if_icmpne     104
    72: aload         7
    74: getfield      #36         // java.util.HashMap$Node.key:java.lang.Object
    77: dup           
    78: astore        11
    80: aload_2       
    81: if_acmpeq     97
    84: aload_2       
    85: ifnull        104
    88: aload_2       
    89: aload         11
    91: invokevirtual #37         // java.lang.Object.equals:(java.lang.Object)boolean
    94: ifeq          104
    97: aload         7
    99: astore        10
   101: goto          222
   104: aload         7
   106: instanceof    #180        // java.util.HashMap$TreeNode
   109: ifeq          131
   112: aload         7
   114: checkcast     #180        // java.util.HashMap$TreeNode
   117: aload_0       
   118: aload         6
   120: iload_1       
   121: aload_2       
   122: aload_3       
   123: invokevirtual #41         // java.util.HashMap$TreeNode.putTreeVal:(java.util.HashMap, java.util.HashMap$Node[], int, java.lang.Object, java.lang.Object)java.util.HashMap$TreeNode
   126: astore        10
   128: goto          222
   131: iconst_0      
   132: istore        12
   134: aload         7
   136: getfield      #38         // java.util.HashMap$Node.next:java.util.HashMap$Node
   139: dup           
   140: astore        10
   142: ifnonnull     175
   145: aload         7
   147: aload_0       
   148: iload_1       
   149: aload_2       
   150: aload_3       
   151: aconst_null   
   152: invokevirtual #40         // newNode:(int, java.lang.Object, java.lang.Object, java.util.HashMap$Node)java.util.HashMap$Node
   155: putfield      #38         // java.util.HashMap$Node.next:java.util.HashMap$Node
   158: iload         12
   160: bipush        7
   162: if_icmplt     222
   165: aload_0       
   166: aload         6
   168: iload_1       
   169: invokevirtual #42         // treeifyBin:(java.util.HashMap$Node[], int)void
   172: goto          222
   175: aload         10
   177: getfield      #35         // java.util.HashMap$Node.hash:int
   180: iload_1       
   181: if_icmpne     212
   184: aload         10
   186: getfield      #36         // java.util.HashMap$Node.key:java.lang.Object
   189: dup           
   190: astore        11
   192: aload_2       
   193: if_acmpeq     222
   196: aload_2       
   197: ifnull        212
   200: aload_2       
   201: aload         11
   203: invokevirtual #37         // java.lang.Object.equals:(java.lang.Object)boolean
   206: ifeq          212
   209: goto          222
   212: aload         10
   214: astore        7
   216: iinc          
   219: goto          134
   222: aload         10
   224: ifnull        259
   227: aload         10
   229: getfield      #34         // java.util.HashMap$Node.value:java.lang.Object
   232: astore        12
   234: iload         4
   236: ifeq          244
   239: aload         12
   241: ifnonnull     250
   244: aload         10
   246: aload_3       
   247: putfield      #34         // java.util.HashMap$Node.value:java.lang.Object
   250: aload_0       
   251: aload         10
   253: invokevirtual #43         // afterNodeAccess:(java.util.HashMap$Node)void
   256: aload         12
   258: areturn       
   259: aload_0       
   260: dup           
   261: getfield      #44         // modCount:int
   264: iconst_1      
   265: iadd          
   266: putfield      #44         // modCount:int
   269: aload_0       
   270: dup           
   271: getfield      #32         // size:int
   274: iconst_1      
   275: iadd          
   276: dup_x1        
   277: putfield      #32         // size:int
   280: aload_0       
   281: getfield      #17         // threshold:int
   284: if_icmple     292
   287: aload_0       
   288: invokevirtual #23         // resize:()java.util.HashMap$Node[]
   291: pop           
   292: aload_0       
   293: iload         5
   295: invokevirtual #45         // afterNodeInsertion:(boolean)void
   298: aconst_null   
   299: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After FinalCodeAnalysisStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|DWORD, rdi|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@21849dd slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:72|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction stack:80|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction stack:88|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   12  <|@ instruction stack:28|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   14  <|@ instruction stack:32|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr   16  <|@ instruction rbx|DWORD[_] = MOV [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   18  <|@ instruction TESTBRANCH (x: rbx|DWORD[_], y: rbx|DWORD[_]) trueDestinationProbability: 0.0015880438063265454 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607168114973028567
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction rax|DWORD = MOV [rbx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   52  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607168114973028567
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr   66  <|@ instruction r10|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   68  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B1" 
    successors "B6" "B121" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   72  <|@ instruction stack:96|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   74  <|@ instruction rax|DWORD = MOV [rbx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   76  <|@ instruction r11|DWORD = MOV [rbx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   78  <|@ instruction rbp|DWORD = DEC r10|DWORD size: DWORD <|@ <|@
      nr   80  <|@ instruction rbp|DWORD = AND (x: rdx|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr   82  <|@ instruction CMPBRANCH (x: rax|DWORD, y: rbp|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B121 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B48" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction stack:40|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   88  <|@ instruction rax|DWORD[_] = MOV [rbx|QWORD[.] + rbp|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   90  <|@ instruction r13|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   92  <|@ instruction r14|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr   94  <|@ instruction r13|QWORD = UNCOMPRESSPOINTER (input: r13|DWORD, ~baseRegister: r14|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr   96  <|@ instruction stack:48|QWORD = MOVE r13|QWORD moveKind: QWORD <|@ <|@
      nr   98  <|@ instruction r14|QWORD = MOVE input: long[140438306553856|0x7fba57600000] <|@ <|@
      nr  100  <|@ instruction stack:56|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr  102  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  104  <|@ instruction stack:100|DWORD[_] = MOVE r10|DWORD[_] moveKind: DWORD <|@ <|@
      nr  106  <|@ instruction TESTBRANCH (x: rax|DWORD[_], y: rax|DWORD[_]) trueDestinationProbability: 0.8229115724385652 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B12" "B47" 
    xhandlers
    flags 
    probability 4605587348047262798
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction stack:60|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  112  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~r13|QWORD - keyConstants: [meta{HotSpotType<Ljava/util/HashMap;, resolved>}, meta{HotSpotType<Ljava/util/LinkedHashMap;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/replacements/SnippetTemplate$LRUCache;, resolved>}] keyTargets: [B7 -> B8, B7 -> B12, B7 -> B12] defaultTarget: B7 -> B47 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4605585062831744793
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction rax|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  118  <|@ instruction rbp|QWORD = LEA [rax|QWORD + 32] size: QWORD <|@ <|@
      nr  120  <|@ instruction CMPBRANCH (x: rbp|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4605510964398880109
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction MOV (x: [r15|QWORD + 440], y: rbp|QWORD) size: QWORD <|@ <|@
      nr  152  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 288] instr: 0 <|@ <|@
      nr  154  <|@ instruction MOV [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  156  <|@ instruction MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>;compressed} <|@ <|@
      nr  158  <|@ instruction MOV [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  160  <|@ instruction MOV [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  162  <|@ instruction MOV [rax|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  164  <|@ instruction rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  166  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 4605585062831744793
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  170  <|@ instruction MOV (x: [rax|QWORD[.] + 20], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  172  <|@ instruction rcx|DWORD[_] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  174  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr  176  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  178  <|@ instruction JUMP ~[] destination: B11 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B11" "B15" 
    successors "B27" "B18" 
    xhandlers
    flags 
    probability 4605587348047262798
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  270  <|@ instruction rdx|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr  272  <|@ instruction r11|QWORD = UNCOMPRESSPOINTER (input: r11|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr  274  <|@ instruction rdx|QWORD = MOV [r11|QWORD + 208] size: QWORD <|@ <|@
      nr  276  <|@ instruction rcx|DWORD = MOV [rdx|QWORD + 20] size: DWORD <|@ <|@
      nr  278  <|@ instruction r8|DWORD = MOV [rax|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  280  <|@ instruction r9|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr  282  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: r9|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr  284  <|@ instruction r9|QWORD = MOVSXD rcx|DWORD size: QWORD <|@ <|@
      nr  286  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r8|QWORD + r9|QWORD * 1]) trueDestinationProbability: 0.5 condition: = trueDestination: B16 -> B27 falseDestination: B16 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B46" 
    xhandlers
    flags 
    probability 4601083748419892302
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ instruction CMPCONSTBRANCH rcx|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B46 y: 32 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B27" "B21" 
    xhandlers
    flags 
    probability 4601083748419892302
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  298  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: r8|QWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B19 -> B27 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B16" "B25" "B19" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4605587348047262798
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" 
    xhandlers
    flags 
    probability 4604846135197064160
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction rbp|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  356  <|@ instruction JUMP ~[] destination: B28 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B28" "B29" "B33" "B32" 
    successors "B88" "B36" 
    xhandlers
    flags 
    probability 4605587348047262798
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  402  <|@ instruction MOV (x: [rbx|QWORD[.] + rbp|DWORD * 4 + 16], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  404  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + rbp|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  406  <|@ instruction rsi|QWORD[*] = XOR (x: rsi|QWORD[.+], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  408  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B34 -> B88 falseDestination: B34 -> B36 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B88" "B38" 
    xhandlers
    flags 
    probability 4604846135197064160
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  418  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B36 -> B88 falseDestination: B36 -> B38 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B88" "B40" 
    xhandlers
    flags 
    probability 4604179043631885386
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  430  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + rbp|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  432  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.+] y: 9 size: QWORD <|@ <|@
      nr  434  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B38 -> B88 falseDestination: B38 -> B40 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B34" "B86" "B43" "B44" "B40" "B38" "B36" 
    successors "B89" "B90" 
    xhandlers
    flags 
    probability 4606558935301518032
    begin_IR
      LIR
      nr  894  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  896  <|@ instruction INC [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  898  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  900  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, ~y: [rsi|QWORD[.] + 20]) size: DWORD <|@ <|@
      nr  902  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: rax|DWORD) size: DWORD <|@ <|@
      nr  904  <|@ instruction CMPBRANCH (x: rax|DWORD, y: [rsi|QWORD[.] + 28]) trueDestinationProbability: 7.853038846579175E-4 condition: > trueDestination: B88 -> B89 falseDestination: B88 -> B90 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B91" 
    xhandlers
    flags 
    probability 4606552351536966788
    begin_IR
      LIR
      nr  920  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  922  <|@ instruction r13|QWORD = MOVE stack:48|QWORD moveKind: QWORD <|@ <|@
      nr  924  <|@ instruction JUMP ~[] destination: B90 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" "B89" 
    successors "B97" "B93" "B99" 
    xhandlers
    flags 
    probability 4606558935301518032
    begin_IR
      LIR
      nr  926  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  928  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~r13|QWORD - keyConstants: [meta{HotSpotType<Ljava/util/HashMap;, resolved>}, meta{HotSpotType<Ljava/util/LinkedHashMap;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/replacements/SnippetTemplate$LRUCache;, resolved>}] keyTargets: [B91 -> B97, B91 -> B93, B91 -> B93] defaultTarget: B91 -> B99 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B91" "B93" "B95" 
    successors 
    xhandlers
    flags 
    probability 4606558935301518031
    begin_IR
      LIR
      nr  982  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  984  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  986  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4596580148792521806
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction rcx|QWORD = MOV [r8|QWORD + 40] size: QWORD <|@ <|@
      nr  308  <|@ instruction r9|DWORD = MOV [rcx|QWORD] size: DWORD <|@ <|@
      nr  310  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  312  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602807799859017905
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  320  <|@ instruction r11|DWORD = SHL r10|DWORD y: 3 size: DWORD <|@ <|@
      nr  322  <|@ instruction r11|DWORD = LEA [r11|DWORD + 8] size: DWORD <|@ <|@
      nr  324  <|@ instruction r11|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr  326  <|@ instruction r11|QWORD = MOV [rcx|QWORD + r11|QWORD * 1] size: QWORD <|@ <|@
      nr  328  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: r11|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B23 -> B25 falseDestination: B23 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B22" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4599230716294395707
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  332  <|@ instruction r10|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr  334  <|@ instruction JUMP ~[] destination: B24 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B24" 
    successors "B23" "B46" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4602807799859017905
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  316  <|@ instruction CMPBRANCH (x: r9|DWORD, y: r10|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B27" 
    xhandlers
    flags 
    probability 4596580148792521807
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  338  <|@ instruction MOV (x: [r8|QWORD + 32], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  340  <|@ instruction JUMP ~[] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B49" "B54" 
    xhandlers
    flags 
    probability 4595548303301553864
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  518  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [rax|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.01987559010066231 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4595421491411700642
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction CMPCONSTBRANCH [rax|DWORD[_] * 8 + 8] trueDestinationProbability: 2.021089053783065E-6 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B56 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4595421478772878611
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  606  <|@ instruction rbp|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  608  <|@ instruction JUMP ~[] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4590110563079390205
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  620  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [rax|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.8692436604445373 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B62 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B57" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4576850562957400324
    begin_IR
      LIR
      nr  672  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  674  <|@ st <@st|@reference-map: [rcx:0, rbx:0, rsi:0, r8:0, r11:0, stack:28, stack:32, stack:40, stack:48, stack:56]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] stack:88|QWORD[.] r9|DWORD rdi|DWORD rbx|QWORD[.] r11|QWORD[.] - - - - rbp|DWORD 
>@ <|@ instruction SAFEPOINT rax|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 thread: r15 state [bci:134] <|@ <|@
      nr  676  <|@ instruction rbp|DWORD = INC rbp|DWORD size: DWORD <|@ <|@
      nr  678  <|@ instruction r11|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  680  <|@ instruction JUMP ~[] destination: B62 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B62" 
    successors "B65" "B58" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4595777537596400292
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  612  <|@ st <@st|@reference-map: [rcx:0, rbx:0, rsi:0, r11:0, stack:28, stack:32, stack:40, stack:48, stack:56]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] stack:88|QWORD[.] r9|DWORD rdi|DWORD rbx|QWORD[.] r11|QWORD[.] - - - - rbp|DWORD 
>@ <|@ instruction rax|DWORD[_] = MOV [r11|QWORD[.] + 24] size: DWORD state [bci:134] <|@ <|@
      nr  614  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  616  <|@ instruction TESTBRANCH (x: rax|DWORD[_], y: rax|DWORD[_]) trueDestinationProbability: 0.5880075530332061 condition: = trueDestination: B57 -> B65 falseDestination: B57 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4592437312858669387
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  696  <|@ instruction stack:112|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  698  <|@ instruction stack:40|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  700  <|@ instruction stack:120|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  702  <|@ instruction rax|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  704  <|@ instruction r10|QWORD = MOV [r13|QWORD + 680] size: QWORD <|@ <|@
      nr  706  <|@ instruction r11|QWORD = MOV [r10|QWORD + 64] size: QWORD <|@ <|@
      nr  708  <|@ instruction rdi|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  712  <|@ instruction rdi|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  716  <|@ instruction r8|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  718  <|@ instruction r9|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  720  <|@ instruction rbx|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  722  <|@ instruction rax|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  724  <|@ instruction stack:36|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  726  <|@ st <@st|@reference-map: [stack:8, stack:16, stack:28, stack:32, stack:40, stack:56]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:648) [bci: 152]
stack: stack:120|QWORD[.] 
locals: stack:72|QWORD[.] stack:36|DWORD - stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD stack:96|QWORD[.] - - - stack:112|QWORD[.] - stack:40|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.]]) [] callTarget: HotSpotMethod<HashMap.newNode(int, Object, Object, HashMap$Node)> state [bci:152] <|@ <|@
      nr  728  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B67 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B72" 
    xhandlers
    flags 
    probability 4591660023639118941
    begin_IR
      LIR
      nr  730  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  732  <|@ instruction r11|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr  734  <|@ instruction r14|QWORD = MOVE stack:56|QWORD moveKind: QWORD <|@ <|@
      nr  736  <|@ instruction rbx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  738  <|@ instruction JUMP ~[] destination: B66 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B66" "B68" "B71" "B70" 
    successors "B83" "B74" 
    xhandlers
    flags 
    probability 4592437312858669387
    begin_IR
      LIR
      nr  788  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  790  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  792  <|@ instruction MOV (x: [r11|QWORD[.] + 24], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  794  <|@ instruction rsi|QWORD[*] = XOR (x: r11|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  796  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B72 -> B83 falseDestination: B72 -> B74 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B83" "B76" 
    xhandlers
    flags 
    probability 4591660023639118941
    begin_IR
      LIR
      nr  802  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  804  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B83 falseDestination: B74 -> B76 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B83" "B78" 
    xhandlers
    flags 
    probability 4590960463341523540
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  812  <|@ instruction r11|QWORD[*] = SHR r11|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  814  <|@ instruction CMPCONSTBRANCH [r11|QWORD[*] + r14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B76 -> B83 falseDestination: B76 -> B78 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B72" "B74" "B76" "B78" "B82" "B81" 
    successors "B84" "B85" 
    xhandlers
    flags 
    probability 4592437312858669387
    begin_IR
      LIR
      nr  860  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  862  <|@ instruction CMPCONSTBRANCH stack:40|DWORD trueDestinationProbability: 0.9999886211240704 condition: < trueDestination: B83 -> B84 falseDestination: B83 -> B85 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" 
    xhandlers
    flags 
    probability 4592437224411893480
    begin_IR
      LIR
      nr  864  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  866  <|@ instruction r8|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr  868  <|@ instruction JUMP ~[] destination: B84 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B50" "B55" "B59" "B84" "B85" "B63" "B53" 
    successors "B88" "B100" 
    xhandlers
    flags 
    probability 4595548303301553864
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  886  <|@ instruction TESTBRANCH (x: r8|QWORD[.], y: r8|QWORD[.]) trueDestinationProbability: 0.6091185940042786 condition: = trueDestination: B86 -> B88 falseDestination: B86 -> B100 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B101" "B119" 
    xhandlers
    flags 
    probability 4589652288651159933
    begin_IR
      LIR
      nr 1006  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1008  <|@ instruction r13|QWORD = MOVE stack:48|QWORD moveKind: QWORD <|@ <|@
      nr 1010  <|@ instruction r9|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1012  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1014  <|@ instruction r10|DWORD[_] = MOV [r8|QWORD[.] + 20] size: DWORD <|@ <|@
      nr 1016  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.9999962001170364 condition: = trueDestination: B100 -> B101 falseDestination: B100 -> B119 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B108" "B103" 
    xhandlers
    flags 
    probability 4589652269697845341
    begin_IR
      LIR
      nr 1018  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1020  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B101 -> B108 falseDestination: B101 -> B103 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B101" "B103" "B107" "B106" 
    successors "B120" "B110" 
    xhandlers
    flags 
    probability 4589652269697845341
    begin_IR
      LIR
      nr 1074  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1024  <|@ instruction r11|DWORD[_] = MOVE stack:100|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1076  <|@ instruction MOV (x: [r8|QWORD[.] + 20], y: r11|DWORD[_]) size: DWORD <|@ <|@
      nr 1078  <|@ instruction rsi|QWORD[*] = XOR (x: r8|QWORD[.], y: stack:88|QWORD[.]) size: QWORD <|@ <|@
      nr 1080  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B108 -> B120 falseDestination: B108 -> B110 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B120" "B112" 
    xhandlers
    flags 
    probability 4589138949298219176
    begin_IR
      LIR
      nr 1088  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1090  <|@ instruction r11|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1092  <|@ instruction TESTBRANCH (x: r11|QWORD[.], y: r11|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B110 -> B120 falseDestination: B110 -> B112 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B120" "B114" 
    xhandlers
    flags 
    probability 4588241136471976702
    begin_IR
      LIR
      nr 1100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1102  <|@ instruction r14|QWORD = MOVE stack:56|QWORD moveKind: QWORD <|@ <|@
      nr 1104  <|@ instruction rsi|QWORD[*] = SHR r8|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr 1106  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B112 -> B120 falseDestination: B112 -> B114 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B119" "B108" "B117" "B118" "B114" "B112" "B110" 
    successors 
    xhandlers
    flags 
    probability 4589652288651159933
    begin_IR
      LIR
      nr 1168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1170  <|@ instruction rbx|QWORD = MOV [r13|QWORD + 688] size: QWORD <|@ <|@
      nr 1172  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr 1174  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr 1176  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1178  <|@ instruction rdx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1180  <|@ instruction stack:112|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1182  <|@ st <@st|@reference-map: [stack:16]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:663) [bci: 253]
locals: - - - - - - - - - - - - stack:112|QWORD[.] 
>@ <|@ instruction - = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<HashMap.afterNodeAccess(HashMap$Node)> state [bci:253] <|@ <|@
      nr 1184  <|@ instruction rax|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1186  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" "B31" 
    xhandlers
    flags 
    probability 4590594123464754032
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction rbp|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  362  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + rbp|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  364  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  366  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B34 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4590001153184595122
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  374  <|@ instruction r10|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  376  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  378  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4589467479932452103
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction r11|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  390  <|@ instruction MOV (x: [r11|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  392  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  394  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  396  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B88" "B42" 
    xhandlers
    flags 
    probability 4589467479932452103
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  446  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B40 -> B88 falseDestination: B40 -> B42 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B86" "B60" 
    xhandlers
    flags 
    probability 4589398445432346844
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction stack:112|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  626  <|@ instruction stack:40|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  628  <|@ instruction stack:120|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  630  <|@ instruction stack:36|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  632  <|@ instruction rsi|DWORD[_] = MOV [rax|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  634  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  636  <|@ instruction CMPBRANCH (x: r10|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.9998932466496128 condition: = trueDestination: B59 -> B86 falseDestination: B59 -> B60 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4577371935537457006
    begin_IR
      LIR
      nr  740  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  742  <|@ instruction r11|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr  744  <|@ instruction rbx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  746  <|@ instruction rsi|QWORD[.+] = LEA [r11|QWORD[.] + 24] size: QWORD <|@ <|@
      nr  748  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  750  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B67 -> B68 falseDestination: B67 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" "B71" 
    xhandlers
    flags 
    probability 4576750104161816650
    begin_IR
      LIR
      nr  758  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  760  <|@ instruction r10|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  762  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  764  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    probability 4576190455923740329
    begin_IR
      LIR
      nr  774  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  776  <|@ instruction r8|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  778  <|@ instruction MOV (x: [r8|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  780  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  782  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  784  <|@ instruction r14|QWORD = MOVE stack:56|QWORD moveKind: QWORD <|@ <|@
      nr  786  <|@ instruction JUMP ~[] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B83" "B80" 
    xhandlers
    flags 
    probability 4576190455923740328
    begin_IR
      LIR
      nr  820  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  822  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  824  <|@ instruction CMPCONSTBRANCH [r11|QWORD[*] + r14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B78 -> B83 falseDestination: B78 -> B80 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4575895921484393205
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction rbp|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  126  <|@ instruction stack:36|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  128  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>} <|@ <|@
      nr  130  <|@ st <@st|@reference-map: [rcx:0, rbx:0, stack:28, stack:32, stack:40, stack:56]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: stack:72|QWORD[.] stack:36|DWORD rcx|QWORD[.] stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD rbx|QWORD[.] - stack:40|DWORD - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7fba62ccef80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:29] <|@ <|@
      nr  132  <|@ st <@st|@reference-map: [rax:0, rcx:0, rbx:0, stack:28, stack:32, stack:40, stack:56]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: stack:72|QWORD[.] stack:36|DWORD rcx|QWORD[.] stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD rbx|QWORD[.] - stack:40|DWORD - - - - 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:29] <|@ <|@
      nr  134  <|@ instruction r10|DWORD[_] = MOVE stack:100|DWORD[_] moveKind: DWORD <|@ <|@
      nr  144  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  146  <|@ instruction JUMP ~[] destination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4575188794187971253
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  382  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  384  <|@ instruction JUMP ~[] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B108" "B105" 
    xhandlers
    flags 
    probability 4574630580609171603
    begin_IR
      LIR
      nr 1028  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1030  <|@ instruction r11|QWORD[.+] = LEA [r8|QWORD[.] + 20] size: QWORD <|@ <|@
      nr 1032  <|@ instruction r11|DWORD[_] = MOV [r11|QWORD[.+]] size: DWORD <|@ <|@
      nr 1034  <|@ instruction TESTBRANCH (x: r11|DWORD[_], y: r11|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B103 -> B108 falseDestination: B103 -> B105 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B106" "B107" 
    xhandlers
    flags 
    probability 4573832524763622737
    begin_IR
      LIR
      nr 1042  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1044  <|@ instruction r9|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr 1046  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr 1048  <|@ instruction TESTBRANCH (x: r9|QWORD, y: r9|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B105 -> B106 falseDestination: B105 -> B107 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B108" 
    xhandlers
    flags 
    probability 4573114274502628758
    begin_IR
      LIR
      nr 1060  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1062  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr 1064  <|@ instruction MOV (x: [rcx|QWORD + r9|QWORD * 1 - 8], y: r11|QWORD[.]) size: QWORD <|@ <|@
      nr 1066  <|@ instruction r11|QWORD = LEA [r9|QWORD - 8] size: QWORD <|@ <|@
      nr 1068  <|@ instruction MOV (x: [r15|QWORD + 40], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1072  <|@ instruction JUMP ~[] destination: B107 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4574334916984542422
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  456  <|@ instruction MOVB [rsi|QWORD[*] + r14|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  458  <|@ instruction r10|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  460  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: r14|QWORD) size: QWORD <|@ <|@
      nr  462  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B88" 
    xhandlers
    flags 
    probability 4573566427501456474
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  476  <|@ instruction r11|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  478  <|@ instruction MOV (x: [r11|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  480  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  482  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  486  <|@ instruction JUMP ~[] destination: B44 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B120" "B116" 
    xhandlers
    flags 
    probability 4573114274502628759
    begin_IR
      LIR
      nr 1114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1116  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr 1118  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B114 -> B120 falseDestination: B114 -> B116 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4570262383476918658
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  522  <|@ instruction stack:36|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  524  <|@ instruction rsi|DWORD[_] = MOV [rax|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  526  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  528  <|@ instruction CMPBRANCH (x: r10|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.9854570809572428 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B86" 
    xhandlers
    flags 
    probability 4570144353713859813
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  532  <|@ instruction r8|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  534  <|@ instruction JUMP ~[] destination: B50 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 4564966382317228292
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   22  <|@ instruction stack:36|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   26  <|@ st <@st|@reference-map: [stack:40, stack:48, stack:56]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:635) [bci: 20]
locals: stack:72|QWORD[.] stack:36|DWORD stack:80|QWORD[.] stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.resize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:20] <|@ <|@
      nr   28  <|@ st <@st|@reference-map: [rax:0, stack:40, stack:48, stack:56]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:635) [bci: 23]
stack: Object[null] 
locals: stack:72|QWORD[.] stack:36|DWORD stack:80|QWORD[.] stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD - - - - - - - 
>@ <|@ instruction rsi|DWORD = MOV [rax|QWORD[.] + 12] size: DWORD state [bci:23] <|@ <|@
      nr   30  <|@ instruction r10|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction rbx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction rdi|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr   36  <|@ instruction r9|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr   38  <|@ instruction r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction rcx|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction rdx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr   44  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction JUMP ~[] destination: B1 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B72" 
    xhandlers
    flags 
    probability 4562617473904064804
    begin_IR
      LIR
      nr  752  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  754  <|@ instruction r14|QWORD = MOVE stack:56|QWORD moveKind: QWORD <|@ <|@
      nr  756  <|@ instruction JUMP ~[] destination: B68 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    probability 4562093595080792590
    begin_IR
      LIR
      nr  766  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  768  <|@ instruction r14|QWORD = MOVE stack:56|QWORD moveKind: QWORD <|@ <|@
      nr  770  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  772  <|@ instruction JUMP ~[] destination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    probability 4561198157899870475
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  832  <|@ instruction MOVB [r11|QWORD[*] + r14|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  834  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  836  <|@ instruction r11|QWORD[*] = ADD (x: r11|QWORD[*], y: r14|QWORD) size: QWORD <|@ <|@
      nr  838  <|@ instruction TESTBRANCH (x: rsi|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    probability 4560392264437040573
    begin_IR
      LIR
      nr  848  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  850  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  852  <|@ instruction MOV (x: [rdx|QWORD + rsi|QWORD * 1 - 8], y: r11|QWORD[*]) size: QWORD <|@ <|@
      nr  854  <|@ instruction rsi|QWORD = LEA [rsi|QWORD - 8] size: QWORD <|@ <|@
      nr  856  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  858  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B91" 
    xhandlers
    flags 
    probability 4559880998172045651
    begin_IR
      LIR
      nr  906  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  908  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  912  <|@ st <@st|@reference-map: [stack:56]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:669) [bci: 288]
locals: stack:72|QWORD[.] - - - - stack:32|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.resize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:288] <|@ <|@
      nr  914  <|@ instruction r13|QWORD = MOVE stack:48|QWORD moveKind: QWORD <|@ <|@
      nr  916  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  918  <|@ instruction JUMP ~[] destination: B89 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B88" 
    xhandlers
    flags 
    probability 4559287139136259037
    begin_IR
      LIR
      nr  464  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  466  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  468  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  472  <|@ instruction JUMP ~[] destination: B43 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B108" 
    xhandlers
    flags 
    probability 4558885225359523289
    begin_IR
      LIR
      nr 1050  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1052  <|@ instruction rsi|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1054  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr 1058  <|@ instruction JUMP ~[] destination: B106 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B117" "B118" 
    xhandlers
    flags 
    probability 4558310625150728107
    begin_IR
      LIR
      nr 1126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1128  <|@ instruction MOVB [rsi|QWORD[*] + r14|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr 1130  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr 1132  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: r14|QWORD) size: QWORD <|@ <|@
      nr 1134  <|@ instruction TESTBRANCH (x: rdx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B116 -> B117 falseDestination: B116 -> B118 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B120" 
    xhandlers
    flags 
    probability 4557793484962812442
    begin_IR
      LIR
      nr 1146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1148  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr 1150  <|@ instruction MOV (x: [rbx|QWORD + rdx|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr 1152  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr 1154  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1158  <|@ instruction JUMP ~[] destination: B118 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B97" "B95" 
    xhandlers
    flags 
    probability 4554832167497868566
    begin_IR
      LIR
      nr  934  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  936  <|@ instruction rdi|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  938  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.4891304347826087 condition: = trueDestination: B93 -> B97 falseDestination: B93 -> B95 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B97" "B98" 
    xhandlers
    flags 
    probability 4550463275345577801
    begin_IR
      LIR
      nr  944  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  946  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  948  <|@ instruction rdx|DWORD[_] = MOV [rsi|QWORD[.] + 52] size: DWORD <|@ <|@
      nr  950  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:56]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:670) [bci: 292]
locals: rsi|QWORD[.] - - - - rdi|DWORD - - - - - - - 
>@ <|@ instruction NULLCHECK [rdx|DWORD[_] * 8] state [bci:292] <|@ <|@
      nr  952  <|@ instruction rbx|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  954  <|@ instruction rax|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr  956  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rax|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr  958  <|@ instruction rbx|QWORD = MOV [rbx|QWORD + 872] size: QWORD <|@ <|@
      nr  960  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  962  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3 <|@ <|@
      nr  964  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  968  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  972  <|@ instruction stack:112|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  974  <|@ st <@st|@reference-map: [stack:16, stack:56]
live-base-pointers: []
java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 15]
locals: stack:72|QWORD[.] - stack:112|QWORD[.] - 
java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
locals: - - - - - - - - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<LinkedHashMap.removeEldestEntry(Map$Entry)> state [bci:15, 295] <|@ <|@
      nr  976  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B95 -> B97 falseDestination: B95 -> B98 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4553315745025075769
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  182  <|@ instruction stack:36|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  184  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  186  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 40] size: QWORD <|@ <|@
      nr  188  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4553268943811267021
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  208  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 296] instr: 0 <|@ <|@
      nr  210  <|@ instruction MOV [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  212  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>;compressed} <|@ <|@
      nr  214  <|@ instruction MOV [rsi|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  216  <|@ instruction MOV [rsi|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  218  <|@ instruction MOV [rsi|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  220  <|@ instruction MOV [rsi|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  222  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  224  <|@ instruction stack:64|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  226  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4553315745025075769
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  230  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  234  <|@ instruction rdx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  236  <|@ instruction rcx|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  238  <|@ instruction r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  240  <|@ instruction r9|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  242  <|@ instruction stack:112|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  244  <|@ st <@st|@reference-map: [stack:16, stack:32, stack:40, stack:48, stack:56]
live-base-pointers: []
java.util.LinkedHashMap$Entry.<init>(LinkedHashMap.java:208) [bci: 6]
locals: - - - - - 
java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 9]
stack: stack:112|QWORD[.] 
locals: stack:72|QWORD[.] stack:36|DWORD stack:80|QWORD[.] stack:88|QWORD[.] Object[null] - 
java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stack: stack:96|QWORD[.] stack:60|DWORD 
locals: stack:72|QWORD[.] - - - - stack:32|DWORD - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.]] [] callTarget: HotSpotMethod<HashMap$Node.<init>(int, Object, Object, HashMap$Node)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:6, 9, 56] <|@ <|@
      nr  246  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  248  <|@ instruction rdx|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr  250  <|@ st <@st|@reference-map: [stack:16, stack:32, stack:56]
live-base-pointers: []
java.util.LinkedHashMap.newNode(LinkedHashMap.java:283) [bci: 17]
locals: - - - - - stack:112|QWORD[.] 
java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stack: stack:96|QWORD[.] stack:60|DWORD 
locals: stack:72|QWORD[.] - - - - stack:32|DWORD - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<LinkedHashMap.linkNodeAtEnd(LinkedHashMap$Entry)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:17, 56] <|@ <|@
      nr  252  <|@ instruction rax|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr  254  <|@ instruction r14|QWORD = MOVE stack:56|QWORD moveKind: QWORD <|@ <|@
      nr  256  <|@ instruction r13|QWORD = MOVE stack:48|QWORD moveKind: QWORD <|@ <|@
      nr  258  <|@ instruction r11|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr  260  <|@ instruction rbx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  262  <|@ instruction rdi|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  264  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    probability 4546075572092099182
    begin_IR
      LIR
      nr  840  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  842  <|@ instruction rsi|QWORD = MOVE r11|QWORD[*] moveKind: QWORD <|@ <|@
      nr  844  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  846  <|@ instruction JUMP ~[] destination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B120" 
    xhandlers
    flags 
    probability 4543399067768740112
    begin_IR
      LIR
      nr 1136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1138  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1140  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr 1144  <|@ instruction JUMP ~[] destination: B117 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4542678729597855531
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  538  <|@ instruction stack:112|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  540  <|@ st <@st|@reference-map: [rcx:0, r10:0, stack:16, stack:28, stack:32, stack:40, stack:48, stack:56]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: stack:72|QWORD[.] stack:36|DWORD rcx|QWORD[.] stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD stack:96|QWORD[.] - stack:40|DWORD - - - - 
>@ <|@ instruction rsi|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD state [bci:29] <|@ <|@
      nr  542  <|@ instruction rdx|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr  544  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr  546  <|@ instruction rbx|QWORD = MOV [rsi|QWORD + 464] size: QWORD <|@ <|@
      nr  548  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  550  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  552  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  554  <|@ st <@st|@reference-map: [stack:16, stack:28, stack:32, stack:40, stack:48, stack:56]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:641) [bci: 91]
locals: stack:72|QWORD[.] stack:36|DWORD stack:80|QWORD[.] stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD stack:96|QWORD[.] stack:112|QWORD[.] - - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:91] <|@ <|@
      nr  556  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B86" 
    xhandlers
    flags 
    probability 4542678729597855531
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  572  <|@ instruction r8|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr  574  <|@ instruction JUMP ~[] destination: B53 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B63" 
    xhandlers
    flags 
    probability 4529894057192690854
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  642  <|@ st <@st|@reference-map: [rcx:0, r10:0, r11:0, stack:16, stack:28, stack:32, stack:40, stack:48, stack:56]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: stack:72|QWORD[.] stack:36|DWORD rcx|QWORD[.] stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD stack:96|QWORD[.] r11|QWORD[.] - - - - stack:40|DWORD 
>@ <|@ instruction rsi|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD state [bci:134] <|@ <|@
      nr  644  <|@ instruction rdx|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr  646  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr  648  <|@ instruction rbx|QWORD = MOV [rsi|QWORD + 464] size: QWORD <|@ <|@
      nr  650  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  652  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  654  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  656  <|@ st <@st|@reference-map: [stack:16, stack:28, stack:32, stack:40, stack:48, stack:56]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:654) [bci: 203]
locals: stack:72|QWORD[.] stack:36|DWORD stack:80|QWORD[.] stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD stack:96|QWORD[.] - - - stack:112|QWORD[.] - stack:40|DWORD 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:203] <|@ <|@
      nr  658  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B86" 
    xhandlers
    flags 
    probability 4529894057192690854
    begin_IR
      LIR
      nr  682  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  684  <|@ instruction r8|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr  686  <|@ instruction JUMP ~[] destination: B63 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4523100981620127249
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction stack:64|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  194  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>} <|@ <|@
      nr  196  <|@ st <@st|@reference-map: [stack:32, stack:40, stack:48, stack:56]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: stack:72|QWORD[.] stack:36|DWORD stack:80|QWORD[.] stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD stack:96|QWORD[.] - stack:40|DWORD - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7fba62ccef80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:29] <|@ <|@
      nr  198  <|@ st <@st|@reference-map: [rax:0, stack:32, stack:40, stack:48, stack:56]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: stack:72|QWORD[.] stack:36|DWORD stack:80|QWORD[.] stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD stack:96|QWORD[.] - stack:40|DWORD - - - - 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:29] <|@ <|@
      nr  200  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  202  <|@ instruction JUMP ~[] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" 
    xhandlers
    flags 
    probability 4518403274531071726
    begin_IR
      LIR
      nr  870  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  872  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  874  <|@ instruction rdx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  876  <|@ instruction rcx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  878  <|@ st <@st|@reference-map: [stack:16, stack:28, stack:40, stack:56]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:650) [bci: 169]
locals: stack:72|QWORD[.] - - stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD - - - - stack:112|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<HashMap.treeifyBin(HashMap$Node[], int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:169] <|@ <|@
      nr  880  <|@ instruction r8|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr  882  <|@ instruction JUMP ~[] destination: B85 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B86" 
    xhandlers
    flags 
    probability 4510226010095555986
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  582  <|@ instruction stack:112|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  584  <|@ instruction stack:36|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  586  <|@ instruction rsi|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr  588  <|@ instruction rdx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  590  <|@ instruction rcx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  592  <|@ instruction r8|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  594  <|@ instruction r9|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  596  <|@ instruction rdi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  598  <|@ st <@st|@reference-map: [stack:28, stack:40, stack:56]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:644) [bci: 123]
locals: stack:72|QWORD[.] - - stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|QWORD[.], rdi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap$TreeNode.putTreeVal(HashMap, HashMap$Node[], int, Object, Object)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:123] <|@ <|@
      nr  600  <|@ instruction r8|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  602  <|@ instruction JUMP ~[] destination: B55 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B120" 
    xhandlers
    flags 
    probability 4508568125070994604
    begin_IR
      LIR
      nr 1160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1162  <|@ st <@st|@reference-map: [r8:0, r10:0, stack:40, stack:56]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:659) [bci: 222]
locals: stack:72|QWORD[.] - - stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD - - - - r8|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r10|DWORD[_] * 8] state [bci:222] <|@ <|@
      nr 1166  <|@ instruction JUMP ~[] destination: B119 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B18" "B22" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction rbp|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  496  <|@ instruction MOV [r15|QWORD + 1156] y: -82987 size: DWORD <|@ <|@
      nr  498  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  500  <|@ st <@st|@reference-map: [rax:0, stack:32, stack:56]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stack: stack:96|QWORD[.] rbp|DWORD rax|QWORD[.] 
locals: stack:72|QWORD[.] - - - - stack:32|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:59] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction r11|QWORD = MOVE input: long[5780|0x1694] <|@ <|@
      nr  506  <|@ instruction r10|DWORD = MOVE input: int[-51507|0xffffffffffff36cd] <|@ <|@
      nr  508  <|@ instruction stack:36|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  510  <|@ instruction r8|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  512  <|@ instruction JUMP ~[] destination: B47 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B121" "B47" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1202  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1204  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1206  <|@ st <@st|@reference-map: [stack:32, stack:40, stack:48, stack:56]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: stack:72|QWORD[.] stack:36|DWORD stack:80|QWORD[.] stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD stack:96|QWORD[.] - r8|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:29] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  988  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  990  <|@ instruction rdx|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr  992  <|@ instruction MOV [r15|QWORD + 1156] y: -161299 size: DWORD <|@ <|@
      nr  994  <|@ instruction MOV [r15|QWORD + 1168] y: 10260 size: QWORD <|@ <|@
      nr  996  <|@ st <@st|@reference-map: [rdx:0, stack:56]
live-base-pointers: []
java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 18]
stack: rax|DWORD 
locals: stack:72|QWORD[.] - rdx|QWORD[.] - 
java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
locals: - - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:18, 295] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  558  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  560  <|@ instruction r11|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr  562  <|@ instruction rbx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  564  <|@ instruction MOV [r15|QWORD + 1156] y: -153363 size: DWORD <|@ <|@
      nr  566  <|@ instruction MOV [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  568  <|@ st <@st|@reference-map: [rbx:0, r11:0, stack:40, stack:48, stack:56]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:641) [bci: 94]
stack: int[0|0x0] 
locals: stack:72|QWORD[.] stack:36|DWORD stack:80|QWORD[.] stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD rbx|QWORD[.] r11|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:94] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1190  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1192  <|@ instruction stack:36|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr 1194  <|@ instruction r8|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1196  <|@ instruction r10|DWORD = MOVE input: int[-75547|0xfffffffffffed8e5] <|@ <|@
      nr 1198  <|@ instruction JUMP ~[] destination: B121 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  662  <|@ instruction r8|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr  664  <|@ instruction rbp|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  666  <|@ instruction MOV [r15|QWORD + 1156] y: -157971 size: DWORD <|@ <|@
      nr  668  <|@ instruction MOV [r15|QWORD + 1168] y: 1300 size: QWORD <|@ <|@
      nr  670  <|@ st <@st|@reference-map: [r8:0, stack:32, stack:40, stack:48, stack:56]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:654) [bci: 206]
stack: int[0|0x0] 
locals: stack:72|QWORD[.] stack:36|DWORD stack:80|QWORD[.] stack:88|QWORD[.] stack:28|DWORD stack:32|DWORD stack:96|QWORD[.] - - - r8|QWORD[.] - rbp|DWORD 
>@ <|@ instruction DEOPT info [bci:206] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  998  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1000  <|@ instruction MOV [r15|QWORD + 1156] y: -61235 size: DWORD <|@ <|@
      nr 1002  <|@ instruction MOV [r15|QWORD + 1168] y: 8980 size: QWORD <|@ <|@
      nr 1004  <|@ st <@st|@reference-map: [stack:56]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:670) [bci: 292]
locals: stack:72|QWORD[.] - - - - stack:32|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:292] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction MOV [r15|QWORD + 1156] y: -129299 size: DWORD <|@ <|@
      nr   58  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   60  <|@ st <@st|@reference-map: [rcx:0, rsi:0, r8:0]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:634) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] r8|QWORD[.] r9|DWORD rdi|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #21         // table:java.util.HashMap$Node[]
     4: dup           
     5: astore        6
     7: ifnull        19
    10: aload         6
    12: arraylength   
    13: dup           
    14: istore        8
    16: ifne          29
    19: aload_0       
    20: invokevirtual #23         // resize:()java.util.HashMap$Node[]
    23: dup           
    24: astore        6
    26: arraylength   
    27: istore        8
    29: aload         6
    31: iload         8
    33: iconst_1      
    34: isub          
    35: iload_1       
    36: iand          
    37: dup           
    38: istore        9
    40: aaload        
    41: dup           
    42: astore        7
    44: ifnonnull     63
    47: aload         6
    49: iload         9
    51: aload_0       
    52: iload_1       
    53: aload_2       
    54: aload_3       
    55: aconst_null   
    56: invokevirtual #40         // newNode:(int, java.lang.Object, java.lang.Object, java.util.HashMap$Node)java.util.HashMap$Node
    59: aastore       
    60: goto          259
    63: aload         7
    65: getfield      #35         // java.util.HashMap$Node.hash:int
    68: iload_1       
    69: if_icmpne     104
    72: aload         7
    74: getfield      #36         // java.util.HashMap$Node.key:java.lang.Object
    77: dup           
    78: astore        11
    80: aload_2       
    81: if_acmpeq     97
    84: aload_2       
    85: ifnull        104
    88: aload_2       
    89: aload         11
    91: invokevirtual #37         // java.lang.Object.equals:(java.lang.Object)boolean
    94: ifeq          104
    97: aload         7
    99: astore        10
   101: goto          222
   104: aload         7
   106: instanceof    #180        // java.util.HashMap$TreeNode
   109: ifeq          131
   112: aload         7
   114: checkcast     #180        // java.util.HashMap$TreeNode
   117: aload_0       
   118: aload         6
   120: iload_1       
   121: aload_2       
   122: aload_3       
   123: invokevirtual #41         // java.util.HashMap$TreeNode.putTreeVal:(java.util.HashMap, java.util.HashMap$Node[], int, java.lang.Object, java.lang.Object)java.util.HashMap$TreeNode
   126: astore        10
   128: goto          222
   131: iconst_0      
   132: istore        12
   134: aload         7
   136: getfield      #38         // java.util.HashMap$Node.next:java.util.HashMap$Node
   139: dup           
   140: astore        10
   142: ifnonnull     175
   145: aload         7
   147: aload_0       
   148: iload_1       
   149: aload_2       
   150: aload_3       
   151: aconst_null   
   152: invokevirtual #40         // newNode:(int, java.lang.Object, java.lang.Object, java.util.HashMap$Node)java.util.HashMap$Node
   155: putfield      #38         // java.util.HashMap$Node.next:java.util.HashMap$Node
   158: iload         12
   160: bipush        7
   162: if_icmplt     222
   165: aload_0       
   166: aload         6
   168: iload_1       
   169: invokevirtual #42         // treeifyBin:(java.util.HashMap$Node[], int)void
   172: goto          222
   175: aload         10
   177: getfield      #35         // java.util.HashMap$Node.hash:int
   180: iload_1       
   181: if_icmpne     212
   184: aload         10
   186: getfield      #36         // java.util.HashMap$Node.key:java.lang.Object
   189: dup           
   190: astore        11
   192: aload_2       
   193: if_acmpeq     222
   196: aload_2       
   197: ifnull        212
   200: aload_2       
   201: aload         11
   203: invokevirtual #37         // java.lang.Object.equals:(java.lang.Object)boolean
   206: ifeq          212
   209: goto          222
   212: aload         10
   214: astore        7
   216: iinc          
   219: goto          134
   222: aload         10
   224: ifnull        259
   227: aload         10
   229: getfield      #34         // java.util.HashMap$Node.value:java.lang.Object
   232: astore        12
   234: iload         4
   236: ifeq          244
   239: aload         12
   241: ifnonnull     250
   244: aload         10
   246: aload_3       
   247: putfield      #34         // java.util.HashMap$Node.value:java.lang.Object
   250: aload_0       
   251: aload         10
   253: invokevirtual #43         // afterNodeAccess:(java.util.HashMap$Node)void
   256: aload         12
   258: areturn       
   259: aload_0       
   260: dup           
   261: getfield      #44         // modCount:int
   264: iconst_1      
   265: iadd          
   266: putfield      #44         // modCount:int
   269: aload_0       
   270: dup           
   271: getfield      #32         // size:int
   274: iconst_1      
   275: iadd          
   276: dup_x1        
   277: putfield      #32         // size:int
   280: aload_0       
   281: getfield      #17         // threshold:int
   284: if_icmple     292
   287: aload_0       
   288: invokevirtual #23         // resize:()java.util.HashMap$Node[]
   291: pop           
   292: aload_0       
   293: iload         5
   295: invokevirtual #45         // afterNodeInsertion:(boolean)void
   298: aconst_null   
   299: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849bc000000fbb97f00004d03d44d33e4493bc20f85e3ffffff66669089842400c0feff4883ec789041817f20000000000f853f0a000048896c2470488974243848894c24304c8944242844894c2464897c24608b5e2485db0f84ab0500008b04dd0c00000085c00f84e509000048c1e303448bd048895c24208b430c448b5b08418beaffcd23ea3bc50f865b09000044895424588b44ab10448b6e0849be000000fbb97f00004f8d2c2e4c896c245049be00006057ba7f00004c897424484d8bd049c1ea03448954241c85c00f85db010000896c24444c3b2d000000000f841f0000004c3b2d000000000f845a0600004c3b2d000000000f844d060000e962080000498b87b8010000488d6820493bafc80100000f871b0400004989afb80100000f18802001000048c70001000000c74008addeaddec7400c0000000048c740100000000048c74018000000004489501448c1e90389481089500c48ba000000fbb97f00004e8d1c1a498b93d00000008b4a14448b400849b9000000fbb97f00004f8d04014c63c94b3b14080f841200000083f9200f85a2070000493bd00f85ba00000041807f40000f85b00200008b6c2444488bf048c1ee038974ab10488d74ab104833f048f7c60000c0ff0f841d0000004885c00f8414000000488d74ab1048c1ee0942803c36020f85a9020000488b742438ff4618b8010000000346148946143b461c0f8f7e0400004c8b6c24504c3b2d000000000f841f0000004c3b2d000000000f84c20400004c3b2d000000000f84b5040000e9f207000048c7c000000000488b6c24704883c478493ba7500400000f872b080000c5f877c3498b4828448b0941ba00000000e92a0000000f1f84000000000066666690458bda41c1e303458d5b084d63db4e8b1c19493bd30f840d00000041ffc2453bca7fdde99906000049895020e9f7feffff448bd849c1e3033b14c50c0000000f8425030000813cc508000000addeadde0f8420060000bd00000000e91b0000003b14c50c0000000f84c5010000498b87580400008500ffc54d8bd8418b4318448bc049c1e00385c075d64c89442410896c24584c895c2408488b4424284d8b95a80200004d8b5a40488bfe8bfa4c8bc049c7c100000000498bda498bc3897c245cffd00f1f84000000000041807f40000f858a0100004c8b5c24084c8b742448488b5c2420488bf048c1ee0341897318498bf34833f048f7c60000c0ff0f84180000004885c00f840f00000049c1eb0943803c33020f8589010000837c2458070f8d2b0500004c8b4424104d85c00f8440feffff4c8b6c2450448b4c2464488b742438458b50144585c90f856405000041807f40000f8598010000448b5c241c45895814498bf0483374242848f7c60000c0ff0f84250000004c8b5c24284d85db0f84170000004c8b742448498bf048c1ee0942803c36020f85b7010000498b9db0020000488b434049c1e203488b742438498bd04c89542410ffd00f1f840000000000488b442410488b6c24704883c478493ba7500400000f873e060000c5f877c38b6c2444488d74ab108b3685f60f8441fdffff4d8b572848c1e6034d85d20f84e20000004d8b5f384b897413f8498d72f849897728e91afdfffff08304240042803c36000f8447fdffffe9f80000004c89442410896c24584c895c24088954245c8b34c510000000448bd649c1e2034c3bd10f84d0feffffe98d0300004c8b5c2408488b5c2420498d73188b3685f60f84520100004d8b572848c1e6034d85d20f844b0100004d8b47384b897410f8498d72f8498977284c8b742448e941fefffff08304240043803c33000f8467feffffe92a0100008b6c24448954245c48beaddeaddeaddeaddee8000000000f1f8400000000008500448b54241c488b742438e9e8fbffffe800000000e944fcffff4d8d5814458b1b4585db0f8458feffff4d8b4f2849c1e3034d85c90f8425010000498b4f384e895c09f84d8d59f84d895f28e931feffff42c60436004d8b57484903f64d85d20f84f00000004d8b5f584b897413f8498d72f849897748e91ffcfffff08304240042803c36000f8439feffffe9dc0000008954245c8b34c510000000448bd649c1e2034c3bd10f85250200004d8bc3e99efdffff8954245c6690e8000000000f1f8400000000008b700c448bd6488bd88b7c2460448b4c24644c8b442428488b4c24308b54245c488b742438e92efaffff4c8b742448e911fdffff4c8b742448e800000000e902fdffff43c6043300498b77484d03de4885f60f849b010000498b57584c895c32f8488d76f849897748e90dfdffff4c8bd66690e8000000000f1f8400000000004c8b6c2450488b742438e966fbffffe800000000e93bfbffff498bf3e800000000e915fdffff42c6043600498b57484903f64885d20f8445010000498b5f5848897413f8488d72f849897748e92dfdffff8b7c246085ff0f8444fbffff488b7424388b56348504d5000000008b5e0848b8000000fbb97f0000488d1c18488b9b68030000488b434048c1e2034c8bd64c8bda4c895c2410ffd00f1f84000000000085c00f84f8faffffe94b0200008954245c498bb7b8010000488d5628493b97c80100000f8741010000498997b80100000f18862801000048c70601000000c74608addeaddec7460c0000000048c746100000000048c746180000000048c746200000000044895c24404c8bd68b54245c488b4c24304c8b44242849c7c1000000004c89542410e8000000000f1f840000000000488b742438488b54241090e8000000000f1f840000000000488b4424104c8b7424484c8b6c2450448b5c2440488b5c24208b7c2460488b742438e94cf9ffff498bf3e800000000e97bfbffffe800000000e9f4fbffff4c895c24108b710848ba000000fbb97f0000488d3432488b9ed0010000488b4340488bf1498bd2ffd00f1f84000000000085c00f845e0100004c8b442410e93efbffff8b710848ba000000fbb97f0000488d3432488b9ed0010000488b4340488bf1498bd2ffd00f1f84000000000085c00f84660100004c8b442410e900fbffff44895c244048beaddeaddeaddeaddee8000000000f1f8400000000008500488bf0e9d9feffff488b742438488b5424208b4c245ce8000000000f1f8400000000004c8b442410e9b5faffff4c895c24108954245c488b742410488b542438488b4c2420448b44245c4c8b4c2430488b7c24286690e8000000000f1f8400000000004c8bc0e977faffff428504d500000000e9ddfaffff8b6c244441c78784040000d5bbfeff49c7879004000000000000e8000000000f1f84000000000049c7c39416000041bacd36ffff8954245c448b442458458997840400004d899f90040000e8000000000f1f840000000000488b54241041c78784040000ed89fdff49c7879004000014280000e8000000000f1f8400000000004c8b5c2410488b5c242041c78784040000eda8fdff49c7879004000094020000e8000000000f1f84000000000049c7c3000000008954245c458bc241bae5d8feffe977ffffff4c8b4424108b6c245841c78784040000ed96fdff49c7879004000014050000e8000000000f1f84000000000041c78784040000cd10ffff49c7879004000014230000e8000000000f1f84000000000041c78784040000ed06feff49c7879004000014000000e8000000000f1f84000000000048896c2470e800000000e9b2f5fffff4488d0dc1f7ffff49898f68040000e964f5fffff4488d0daef9ffff49898f68040000e950f5fffff441c78784040000f5a3feff49c7879004000000000000e8000000000f1f84000000000041c787840400008f19fdff49c7879004000000000000e8000000000f1f84000000000041c78784040000f559feff49c7879004000000000000e8000000000f1f84000000000041c78784040000f5b2feff49c7879004000000000000e8000000000f1f84000000000041c78784040000f595feff49c7879004000000000000e8000000000f1f84000000000041c787840400008fe8fcff49c7879004000000000000e8000000000f1f840000000000e800000000f4e800000000f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7fba7b6335c8, value=140438496891008]:0x7fba62b85080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|DWORD, rdi|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 63 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@21849dd slotKind: QWORD  <||@
  Comment 63 6 stack:72|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 68 8 stack:80|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 73 10 stack:88|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 78 12 stack:28|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 83 14 stack:32|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 87 16 rbx|DWORD[_] = MOV [rsi|QWORD[.] + 36] size: DWORD  <||@
  Comment 90 18 TESTBRANCH (x: rbx|DWORD[_], y: rbx|DWORD[_]) trueDestinationProbability: 0.0015880438063265454 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD  <||@
  Comment 98 block B2 null  <||@
  Comment 98 48 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 98 50 rax|DWORD = MOV [rbx|DWORD[_] * 8 + 12] size: DWORD  <||@
  Comment 105 52 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD  <||@
  Comment 113 block B4 null  <||@
  Comment 113 62 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 113 64 rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3  <||@
  Comment 117 66 r10|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 120 68 JUMP ~[] destination: B4 -> B5  <||@
  Comment 120 block B5 null  <||@
  Comment 120 70 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 120 72 stack:96|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 125 74 rax|DWORD = MOV [rbx|QWORD[.] + 12] size: DWORD  <||@
  Comment 128 76 r11|DWORD = MOV [rbx|QWORD[.] + 8] size: DWORD  <||@
  Comment 132 78 rbp|DWORD = DEC r10|DWORD size: DWORD  <||@
  Comment 137 80 rbp|DWORD = AND (x: rdx|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 139 82 CMPBRANCH (x: rax|DWORD, y: rbp|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B121 size: DWORD  <||@
  Comment 147 block B6 null  <||@
  Comment 147 84 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 147 86 stack:40|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 152 88 rax|DWORD[_] = MOV [rbx|QWORD[.] + rbp|DWORD * 4 + 16] size: DWORD  <||@
  Comment 156 90 r13|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD  <||@
  Comment 160 92 r14|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000]  <||@
  Comment 170 94 r13|QWORD = UNCOMPRESSPOINTER (input: r13|DWORD, ~baseRegister: r14|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0  <||@
  Comment 174 96 stack:48|QWORD = MOVE r13|QWORD moveKind: QWORD  <||@
  Comment 179 98 r14|QWORD = MOVE input: long[140438306553856|0x7fba57600000]  <||@
  Comment 189 100 stack:56|QWORD = MOVE r14|QWORD moveKind: QWORD  <||@
  Comment 194 102 r10|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3  <||@
  Comment 201 104 stack:100|DWORD[_] = MOVE r10|DWORD[_] moveKind: DWORD  <||@
  Comment 206 106 TESTBRANCH (x: rax|DWORD[_], y: rax|DWORD[_]) trueDestinationProbability: 0.8229115724385652 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B48 size: DWORD  <||@
  Comment 214 block B7 null  <||@
  Comment 214 108 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 214 110 stack:60|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 218 112 AMD64HOTSPOTSTRATEGYSWITCH ~r13|QWORD - keyConstants: [meta{HotSpotType<Ljava/util/HashMap;, resolved>}, meta{HotSpotType<Ljava/util/LinkedHashMap;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/replacements/SnippetTemplate$LRUCache;, resolved>}] keyTargets: [B7 -> B8, B7 -> B12, B7 -> B12] defaultTarget: B7 -> B47 strategy: SequentialStrategy[avgEffort=-1.0]  <||@
  Comment 218 {DataSection[0x0]}  <||@
  Comment 231 {DataSection[0x8]}  <||@
  Comment 244 {DataSection[0x10]}  <||@
  Comment 262 block B8 null  <||@
  Comment 262 114 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 262 116 rax|QWORD = MOV [r15|QWORD + 440] size: QWORD  <||@
  Comment 269 118 rbp|QWORD = LEA [rax|QWORD + 32] size: QWORD  <||@
  Comment 273 120 CMPBRANCH (x: rbp|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: QWORD  <||@
  Comment 286 block B10 null  <||@
  Comment 286 148 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 286 150 MOV (x: [r15|QWORD + 440], y: rbp|QWORD) size: QWORD  <||@
  Comment 293 152 AMD64PREFETCH ~[rax|QWORD + 288] instr: 0  <||@
  Comment 300 154 MOV [rax|QWORD] y: 1 size: QWORD  <||@
  Comment 307 156 MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>;compressed}  <||@
  Comment 307 {meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>;compressed}}  <||@
  Comment 314 158 MOV [rax|QWORD + 12] y: 0 size: DWORD  <||@
  Comment 321 160 MOV [rax|QWORD + 16] y: 0 size: QWORD  <||@
  Comment 329 162 MOV [rax|QWORD + 24] y: 0 size: QWORD  <||@
  Comment 337 164 rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 337 166 JUMP ~[] destination: B10 -> B11  <||@
  Comment 337 block B11 null  <||@
  Comment 337 168 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 337 170 MOV (x: [rax|QWORD[.] + 20], y: r10|DWORD[_]) size: DWORD  <||@
  Comment 341 172 rcx|DWORD[_] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3  <||@
  Comment 345 174 MOV (x: [rax|QWORD[.] + 16], y: rcx|DWORD[_]) size: DWORD  <||@
  Comment 348 176 MOV (x: [rax|QWORD[.] + 12], y: rdx|DWORD) size: DWORD  <||@
  Comment 351 178 JUMP ~[] destination: B11 -> B16  <||@
  Comment 351 block B16 null  <||@
  Comment 351 268 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 351 270 rdx|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000]  <||@
  Comment 361 272 r11|QWORD = UNCOMPRESSPOINTER (input: r11|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0  <||@
  Comment 365 274 rdx|QWORD = MOV [r11|QWORD + 208] size: QWORD  <||@
  Comment 372 276 rcx|DWORD = MOV [rdx|QWORD + 20] size: DWORD  <||@
  Comment 375 278 r8|DWORD = MOV [rax|QWORD[.] + 8] size: DWORD  <||@
  Comment 379 280 r9|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000]  <||@
  Comment 389 282 r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: r9|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0  <||@
  Comment 393 284 r9|QWORD = MOVSXD rcx|DWORD size: QWORD  <||@
  Comment 396 286 CMPBRANCH (x: rdx|QWORD, y: [r8|QWORD + r9|QWORD * 1]) trueDestinationProbability: 0.5 condition: = trueDestination: B16 -> B27 falseDestination: B16 -> B18 size: QWORD  <||@
  Comment 406 block B18 null  <||@
  Comment 406 292 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 406 294 CMPCONSTBRANCH rcx|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B46 y: 32 size: DWORD inlinedY: null  <||@
  Comment 415 block B19 null  <||@
  Comment 415 296 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 415 298 CMPBRANCH (x: rdx|QWORD, y: r8|QWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B19 -> B27 falseDestination: B19 -> B21 size: QWORD  <||@
  Comment 424 block B27 null  <||@
  Comment 424 348 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 424 350 CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 0 size: BYTE inlinedY: null  <||@
  Comment 435 block B28 null  <||@
  Comment 435 352 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 435 354 rbp|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 439 356 JUMP ~[] destination: B28 -> B34  <||@
  Comment 439 block B34 null  <||@
  Comment 439 398 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 439 400 rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3  <||@
  Comment 446 402 MOV (x: [rbx|QWORD[.] + rbp|DWORD * 4 + 16], y: rsi|DWORD[_]) size: DWORD  <||@
  Comment 450 404 rsi|QWORD[.+] = LEA [rbx|QWORD[.] + rbp|DWORD * 4 + 16] size: QWORD  <||@
  Comment 455 406 rsi|QWORD[*] = XOR (x: rsi|QWORD[.+], y: rax|QWORD[.]) size: QWORD  <||@
  Comment 458 408 TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B34 -> B88 falseDestination: B34 -> B36 y: -4194304 size: QWORD  <||@
  Comment 471 block B36 null  <||@
  Comment 471 416 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 471 418 TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B36 -> B88 falseDestination: B36 -> B38 size: QWORD  <||@
  Comment 480 block B38 null  <||@
  Comment 480 426 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 480 430 rsi|QWORD[.+] = LEA [rbx|QWORD[.] + rbp|DWORD * 4 + 16] size: QWORD  <||@
  Comment 485 432 rsi|QWORD[*] = SHR rsi|QWORD[.+] y: 9 size: QWORD  <||@
  Comment 489 434 CMPCONSTBRANCH [rsi|QWORD[*] + r14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B38 -> B88 falseDestination: B38 -> B40 y: 2 size: BYTE inlinedY: null  <||@
  Comment 500 block B88 null  <||@
  Comment 500 894 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 500 412 rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 505 896 INC [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 508 898 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 513 900 rax|DWORD = ADD (x: rax|DWORD, ~y: [rsi|QWORD[.] + 20]) size: DWORD  <||@
  Comment 516 902 MOV (x: [rsi|QWORD[.] + 20], y: rax|DWORD) size: DWORD  <||@
  Comment 519 904 CMPBRANCH (x: rax|DWORD, y: [rsi|QWORD[.] + 28]) trueDestinationProbability: 7.853038846579175E-4 condition: > trueDestination: B88 -> B89 falseDestination: B88 -> B90 size: DWORD  <||@
  Comment 528 block B90 null  <||@
  Comment 528 920 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 528 922 r13|QWORD = MOVE stack:48|QWORD moveKind: QWORD  <||@
  Comment 533 924 JUMP ~[] destination: B90 -> B91  <||@
  Comment 533 block B91 null  <||@
  Comment 533 926 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 533 928 AMD64HOTSPOTSTRATEGYSWITCH ~r13|QWORD - keyConstants: [meta{HotSpotType<Ljava/util/HashMap;, resolved>}, meta{HotSpotType<Ljava/util/LinkedHashMap;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/replacements/SnippetTemplate$LRUCache;, resolved>}] keyTargets: [B91 -> B97, B91 -> B93, B91 -> B93] defaultTarget: B91 -> B99 strategy: SequentialStrategy[avgEffort=-1.0]  <||@
  Comment 533 {DataSection[0x0]}  <||@
  Comment 546 {DataSection[0x8]}  <||@
  Comment 559 {DataSection[0x10]}  <||@
  Comment 577 block B97 null  <||@
  Comment 577 982 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 577 984 rax|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 584 986 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9  <||@
  Comment 593 POLL_RETURN_FAR  <||@
  Comment 610 block B21 null  <||@
  Comment 610 304 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 610 306 rcx|QWORD = MOV [r8|QWORD + 40] size: QWORD  <||@
  Comment 614 308 r9|DWORD = MOV [rcx|QWORD] size: DWORD  <||@
  Comment 617 310 r10|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 623 312 JUMP ~[] destination: B21 -> B22  <||@
  Comment 628 block B23 loop 0 depth 1 header:551|LoopBegin  <||@
  Comment 628 318 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 640 320 r11|DWORD = SHL r10|DWORD y: 3 size: DWORD  <||@
  Comment 647 322 r11|DWORD = LEA [r11|DWORD + 8] size: DWORD  <||@
  Comment 651 324 r11|QWORD = MOVSXD r11|DWORD size: QWORD  <||@
  Comment 654 326 r11|QWORD = MOV [rcx|QWORD + r11|QWORD * 1] size: QWORD  <||@
  Comment 658 328 CMPBRANCH (x: rdx|QWORD, y: r11|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B23 -> B25 falseDestination: B23 -> B24 size: QWORD  <||@
  Comment 667 block B24 loop 0 depth 1 header:551|LoopBegin  <||@
  Comment 667 330 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 667 332 r10|DWORD = INC r10|DWORD size: DWORD  <||@
  Comment 670 334 JUMP ~[] destination: B24 -> B22  <||@
  Comment 670 block B22 loop 0 depth 1 header:551|LoopBegin  <||@
  Comment 670 314 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 670 316 CMPBRANCH (x: r9|DWORD, y: r10|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B46 size: DWORD  <||@
  Comment 680 block B25 null  <||@
  Comment 680 336 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 680 338 MOV (x: [r8|QWORD + 32], y: rdx|QWORD) size: QWORD  <||@
  Comment 684 340 JUMP ~[] destination: B25 -> B27  <||@
  Comment 689 block B48 null  <||@
  Comment 689 514 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 689 516 r11|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3  <||@
  Comment 696 518 CMPBRANCH (x: rdx|DWORD, y: [rax|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.01987559010066231 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B54 size: DWORD  <||@
  Comment 709 block B54 null  <||@
  Comment 709 576 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 709 578 CMPCONSTBRANCH [rax|DWORD[_] * 8 + 8] trueDestinationProbability: 2.021089053783065E-6 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B56 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed}  <||@
  Comment 709 {meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed}}  <||@
  Comment 726 block B56 null  <||@
  Comment 726 604 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 726 606 rbp|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 731 608 JUMP ~[] destination: B56 -> B57  <||@
  Comment 736 block B58 loop 1 depth 1 header:82|LoopBegin  <||@
  Comment 736 618 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 736 620 CMPBRANCH (x: rdx|DWORD, y: [rax|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.8692436604445373 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B62 size: DWORD  <||@
  Comment 749 block B62 loop 1 depth 1 header:82|LoopBegin  <||@
  Comment 749 672 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 749 674 SAFEPOINT rax|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 thread: r15 state [bci:134]  <||@
  Comment 756 [rcx:0, rbx:0, rsi:0, r8:0, r11:0, stack:28, stack:32, stack:40, stack:48, stack:56]at java.util.HashMap.putVal(HashMap.java:647) [bci: 134, duringCall: false, rethrow: false]
              |0             |1          |2             |3                  |4         |5          |6             |7             |8  |9  |10  |11  |12        
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |rcx|QWORD[.]  |stack:88|QWORD[.]  |r9|DWORD  |rdi|DWORD  |rbx|QWORD[.]  |r11|QWORD[.]  |-  |-  |-   |-   |rbp|DWORD   <||@
  Comment 756 {infopoint: SAFEPOINT}  <||@
  Comment 756 POLL_FAR  <||@
  Comment 758 676 rbp|DWORD = INC rbp|DWORD size: DWORD  <||@
  Comment 760 678 r11|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 763 680 JUMP ~[] destination: B62 -> B57  <||@
  Comment 763 block B57 loop 1 depth 1 header:82|LoopBegin  <||@
  Comment 763 610 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 763 612 rax|DWORD[_] = MOV [r11|QWORD[.] + 24] size: DWORD state [bci:134]  <||@
  Comment 763 [rcx:0, rbx:0, rsi:0, r11:0, stack:28, stack:32, stack:40, stack:48, stack:56]at java.util.HashMap.putVal(HashMap.java:647) [bci: 134, duringCall: false, rethrow: false]
              |0             |1          |2             |3                  |4         |5          |6             |7             |8  |9  |10  |11  |12        
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |rcx|QWORD[.]  |stack:88|QWORD[.]  |r9|DWORD  |rdi|DWORD  |rbx|QWORD[.]  |r11|QWORD[.]  |-  |-  |-   |-   |rbp|DWORD   <||@
  Comment 763 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 767 614 r8|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3  <||@
  Comment 774 616 TESTBRANCH (x: rax|DWORD[_], y: rax|DWORD[_]) trueDestinationProbability: 0.5880075530332061 condition: = trueDestination: B57 -> B65 falseDestination: B57 -> B58 size: DWORD  <||@
  Comment 778 block B65 null  <||@
  Comment 778 694 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 778 696 stack:112|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 783 698 stack:40|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 787 700 stack:120|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 792 702 rax|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 797 704 r10|QWORD = MOV [r13|QWORD + 680] size: QWORD  <||@
  Comment 804 706 r11|QWORD = MOV [r10|QWORD + 64] size: QWORD  <||@
  Comment 808 708 rdi|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 811 712 rdi|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 813 716 r8|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 816 718 r9|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 823 720 rbx|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 826 722 rax|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 829 724 stack:36|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 833 726 rax|QWORD[.] = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.]]) [] callTarget: HotSpotMethod<HashMap.newNode(int, Object, Object, HashMap$Node)> state [bci:152]  <||@
  Comment 833 {HotSpotMethod<HashMap.newNode(int, Object, Object, HashMap$Node)>}  <||@
  Comment 833 INLINE_INVOKE  <||@
  Comment 835 [stack:8, stack:16, stack:28, stack:32, stack:40, stack:56]at java.util.HashMap.putVal(HashMap.java:648) [bci: 152, duringCall: true, rethrow: false]
              |0                   |1               |2  |3                  |4               |5               |6                  |7  |8  |9  |10                  |11  |12             
     locals:  |stack:72|QWORD[.]   |stack:36|DWORD  |-  |stack:88|QWORD[.]  |stack:28|DWORD  |stack:32|DWORD  |stack:96|QWORD[.]  |-  |-  |-  |stack:112|QWORD[.]  |-   |stack:40|DWORD 
     stack:   |stack:120|QWORD[.]  |                |   |                   |                |                |                   |   |   |   |                    |    |                 <||@
  Comment 843 728 CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B67 y: 0 size: BYTE inlinedY: null  <||@
  Comment 854 block B66 null  <||@
  Comment 854 730 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 854 732 r11|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD  <||@
  Comment 859 734 r14|QWORD = MOVE stack:56|QWORD moveKind: QWORD  <||@
  Comment 864 736 rbx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD  <||@
  Comment 869 738 JUMP ~[] destination: B66 -> B72  <||@
  Comment 869 block B72 null  <||@
  Comment 869 788 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 869 790 rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3  <||@
  Comment 876 792 MOV (x: [r11|QWORD[.] + 24], y: rsi|DWORD[_]) size: DWORD  <||@
  Comment 880 794 rsi|QWORD[*] = XOR (x: r11|QWORD[.], y: rax|QWORD[.]) size: QWORD  <||@
  Comment 886 796 TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B72 -> B83 falseDestination: B72 -> B74 y: -4194304 size: QWORD  <||@
  Comment 899 block B74 null  <||@
  Comment 899 802 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 899 804 TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B83 falseDestination: B74 -> B76 size: QWORD  <||@
  Comment 908 block B76 null  <||@
  Comment 908 810 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 908 812 r11|QWORD[*] = SHR r11|QWORD[.] y: 9 size: QWORD  <||@
  Comment 912 814 CMPCONSTBRANCH [r11|QWORD[*] + r14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B76 -> B83 falseDestination: B76 -> B78 y: 2 size: BYTE inlinedY: null  <||@
  Comment 923 block B83 null  <||@
  Comment 923 860 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 923 862 CMPCONSTBRANCH stack:40|DWORD trueDestinationProbability: 0.9999886211240704 condition: < trueDestination: B83 -> B84 falseDestination: B83 -> B85 y: 7 size: DWORD inlinedY: null  <||@
  Comment 934 block B84 null  <||@
  Comment 934 864 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 934 866 r8|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD  <||@
  Comment 939 868 JUMP ~[] destination: B84 -> B86  <||@
  Comment 939 block B86 null  <||@
  Comment 939 884 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 939 886 TESTBRANCH (x: r8|QWORD[.], y: r8|QWORD[.]) trueDestinationProbability: 0.6091185940042786 condition: = trueDestination: B86 -> B88 falseDestination: B86 -> B100 size: QWORD  <||@
  Comment 948 block B100 null  <||@
  Comment 948 1006 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 948 1008 r13|QWORD = MOVE stack:48|QWORD moveKind: QWORD  <||@
  Comment 953 1010 r9|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 958 1012 rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 963 1014 r10|DWORD[_] = MOV [r8|QWORD[.] + 20] size: DWORD  <||@
  Comment 967 1016 TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.9999962001170364 condition: = trueDestination: B100 -> B101 falseDestination: B100 -> B119 size: DWORD  <||@
  Comment 976 block B101 null  <||@
  Comment 976 1018 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 976 1020 CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B101 -> B108 falseDestination: B101 -> B103 y: 0 size: BYTE inlinedY: null  <||@
  Comment 987 block B108 null  <||@
  Comment 987 1074 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 987 1024 r11|DWORD[_] = MOVE stack:100|DWORD[_] moveKind: DWORD  <||@
  Comment 992 1076 MOV (x: [r8|QWORD[.] + 20], y: r11|DWORD[_]) size: DWORD  <||@
  Comment 996 1078 rsi|QWORD[*] = XOR (x: r8|QWORD[.], y: stack:88|QWORD[.]) size: QWORD  <||@
  Comment 1004 1080 TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B108 -> B120 falseDestination: B108 -> B110 y: -4194304 size: QWORD  <||@
  Comment 1017 block B110 null  <||@
  Comment 1017 1088 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1017 1090 r11|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 1022 1092 TESTBRANCH (x: r11|QWORD[.], y: r11|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B110 -> B120 falseDestination: B110 -> B112 size: QWORD  <||@
  Comment 1031 block B112 null  <||@
  Comment 1031 1100 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1031 1102 r14|QWORD = MOVE stack:56|QWORD moveKind: QWORD  <||@
  Comment 1036 1104 rsi|QWORD[*] = SHR r8|QWORD[.] y: 9 size: QWORD  <||@
  Comment 1043 1106 CMPCONSTBRANCH [rsi|QWORD[*] + r14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B112 -> B120 falseDestination: B112 -> B114 y: 2 size: BYTE inlinedY: null  <||@
  Comment 1054 block B120 null  <||@
  Comment 1054 1168 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1054 1170 rbx|QWORD = MOV [r13|QWORD + 688] size: QWORD  <||@
  Comment 1061 1172 rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD  <||@
  Comment 1065 1174 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3  <||@
  Comment 1069 1176 rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1074 1178 rdx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1077 1180 stack:112|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1082 1182 - = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<HashMap.afterNodeAccess(HashMap$Node)> state [bci:253]  <||@
  Comment 1082 {HotSpotMethod<HashMap.afterNodeAccess(HashMap$Node)>}  <||@
  Comment 1082 INLINE_INVOKE  <||@
  Comment 1084 [stack:16]at java.util.HashMap.putVal(HashMap.java:663) [bci: 253, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7  |8  |9  |10  |11  |12                 
     locals:  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-   |-   |stack:112|QWORD[.]   <||@
  Comment 1092 1184 rax|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD  <||@
  Comment 1097 1186 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9  <||@
  Comment 1106 POLL_RETURN_FAR  <||@
  Comment 1123 block B29 null  <||@
  Comment 1123 358 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1123 360 rbp|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 1127 362 rsi|QWORD[.+] = LEA [rbx|QWORD[.] + rbp|DWORD * 4 + 16] size: QWORD  <||@
  Comment 1132 364 rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD  <||@
  Comment 1134 366 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B34 falseDestination: B29 -> B31 size: DWORD  <||@
  Comment 1142 block B31 null  <||@
  Comment 1142 372 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1142 374 r10|QWORD = MOV [r15|QWORD + 40] size: QWORD  <||@
  Comment 1146 376 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3  <||@
  Comment 1150 378 TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: QWORD  <||@
  Comment 1159 block B33 null  <||@
  Comment 1159 386 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1159 388 r11|QWORD = MOV [r15|QWORD + 56] size: QWORD  <||@
  Comment 1163 390 MOV (x: [r11|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 1168 392 rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD  <||@
  Comment 1172 394 MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD  <||@
  Comment 1176 396 JUMP ~[] destination: B33 -> B34  <||@
  Comment 1181 block B40 null  <||@
  Comment 1181 442 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1181 444 MEMBAR barriers: 4  <||@
  Comment 1186 446 CMPCONSTBRANCH [rsi|QWORD[*] + r14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B40 -> B88 falseDestination: B40 -> B42 y: 0 size: BYTE inlinedY: null  <||@
  Comment 1202 block B59 null  <||@
  Comment 1202 622 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1202 624 stack:112|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1207 626 stack:40|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 1211 628 stack:120|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 1216 630 stack:36|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 1220 632 rsi|DWORD[_] = MOV [rax|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 1227 634 r10|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3  <||@
  Comment 1234 636 CMPBRANCH (x: r10|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.9998932466496128 condition: = trueDestination: B59 -> B86 falseDestination: B59 -> B60 size: QWORD  <||@
  Comment 1248 block B67 null  <||@
  Comment 1248 740 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1248 742 r11|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD  <||@
  Comment 1253 744 rbx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD  <||@
  Comment 1258 746 rsi|QWORD[.+] = LEA [r11|QWORD[.] + 24] size: QWORD  <||@
  Comment 1262 748 rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD  <||@
  Comment 1264 750 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B67 -> B68 falseDestination: B67 -> B69 size: DWORD  <||@
  Comment 1272 block B69 null  <||@
  Comment 1272 758 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1272 760 r10|QWORD = MOV [r15|QWORD + 40] size: QWORD  <||@
  Comment 1276 762 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3  <||@
  Comment 1280 764 TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 size: QWORD  <||@
  Comment 1289 block B71 null  <||@
  Comment 1289 774 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1289 776 r8|QWORD = MOV [r15|QWORD + 56] size: QWORD  <||@
  Comment 1293 778 MOV (x: [r8|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 1298 780 rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD  <||@
  Comment 1302 782 MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD  <||@
  Comment 1306 784 r14|QWORD = MOVE stack:56|QWORD moveKind: QWORD  <||@
  Comment 1311 786 JUMP ~[] destination: B71 -> B72  <||@
  Comment 1316 block B78 null  <||@
  Comment 1316 820 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1316 822 MEMBAR barriers: 4  <||@
  Comment 1321 824 CMPCONSTBRANCH [r11|QWORD[*] + r14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B78 -> B83 falseDestination: B78 -> B80 y: 0 size: BYTE inlinedY: null  <||@
  Comment 1337 block B9 null  <||@
  Comment 1337 122 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1337 124 rbp|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 1341 126 stack:36|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 1345 128 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>}  <||@
  Comment 1345 {meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>}}  <||@
  Comment 1355 130 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7fba62ccef80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:29]  <||@
  Comment 1355 {Stub<new_instance_or_null(KlassPointer)Object>@0x7fba62ccef80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 1360 [rcx:0, rbx:0, stack:28, stack:32, stack:40, stack:56]at java.util.HashMap.putVal(HashMap.java:636) [bci: 29, duringCall: false, rethrow: false]
              |0                  |1               |2             |3                  |4               |5               |6             |7  |8               |9  |10  |11  |12 
     locals:  |stack:72|QWORD[.]  |stack:36|DWORD  |rcx|QWORD[.]  |stack:88|QWORD[.]  |stack:28|DWORD  |stack:32|DWORD  |rbx|QWORD[.]  |-  |stack:40|DWORD  |-  |-   |-   |-    <||@
  Comment 1368 132 NULLCHECK [rax|QWORD[.]] state [bci:29]  <||@
  Comment 1368 [rax:0, rcx:0, rbx:0, stack:28, stack:32, stack:40, stack:56]at java.util.HashMap.putVal(HashMap.java:636) [bci: 29, duringCall: false, rethrow: false]
              |0                  |1               |2             |3                  |4               |5               |6             |7  |8               |9  |10  |11  |12 
     locals:  |stack:72|QWORD[.]  |stack:36|DWORD  |rcx|QWORD[.]  |stack:88|QWORD[.]  |stack:28|DWORD  |stack:32|DWORD  |rbx|QWORD[.]  |-  |stack:40|DWORD  |-  |-   |-   |-    <||@
  Comment 1368 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1370 134 r10|DWORD[_] = MOVE stack:100|DWORD[_] moveKind: DWORD  <||@
  Comment 1375 144 rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1380 146 JUMP ~[] destination: B9 -> B11  <||@
  Comment 1385 block B32 null  <||@
  Comment 1385 380 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1385 382 - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]  <||@
  Comment 1385 {Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]}  <||@
  Comment 1390 384 JUMP ~[] destination: B32 -> B34  <||@
  Comment 1395 block B103 null  <||@
  Comment 1395 1028 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1395 1030 r11|QWORD[.+] = LEA [r8|QWORD[.] + 20] size: QWORD  <||@
  Comment 1399 1032 r11|DWORD[_] = MOV [r11|QWORD[.+]] size: DWORD  <||@
  Comment 1402 1034 TESTBRANCH (x: r11|DWORD[_], y: r11|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B103 -> B108 falseDestination: B103 -> B105 size: DWORD  <||@
  Comment 1411 block B105 null  <||@
  Comment 1411 1042 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1411 1044 r9|QWORD = MOV [r15|QWORD + 40] size: QWORD  <||@
  Comment 1415 1046 r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3  <||@
  Comment 1419 1048 TESTBRANCH (x: r9|QWORD, y: r9|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B105 -> B106 falseDestination: B105 -> B107 size: QWORD  <||@
  Comment 1428 block B107 null  <||@
  Comment 1428 1060 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1428 1062 rcx|QWORD = MOV [r15|QWORD + 56] size: QWORD  <||@
  Comment 1432 1064 MOV (x: [rcx|QWORD + r9|QWORD * 1 - 8], y: r11|QWORD[.]) size: QWORD  <||@
  Comment 1437 1066 r11|QWORD = LEA [r9|QWORD - 8] size: QWORD  <||@
  Comment 1441 1068 MOV (x: [r15|QWORD + 40], y: r11|QWORD) size: QWORD  <||@
  Comment 1445 1072 JUMP ~[] destination: B107 -> B108  <||@
  Comment 1450 block B42 null  <||@
  Comment 1450 454 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1450 456 MOVB [rsi|QWORD[*] + r14|QWORD * 1] y: 0 size: BYTE  <||@
  Comment 1455 458 r10|QWORD = MOV [r15|QWORD + 72] size: QWORD  <||@
  Comment 1459 460 rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: r14|QWORD) size: QWORD  <||@
  Comment 1462 462 TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: QWORD  <||@
  Comment 1471 block B44 null  <||@
  Comment 1471 474 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1471 476 r11|QWORD = MOV [r15|QWORD + 88] size: QWORD  <||@
  Comment 1475 478 MOV (x: [r11|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD  <||@
  Comment 1480 480 rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD  <||@
  Comment 1484 482 MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD  <||@
  Comment 1488 486 JUMP ~[] destination: B44 -> B88  <||@
  Comment 1493 block B114 null  <||@
  Comment 1493 1114 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1493 1116 MEMBAR barriers: 4  <||@
  Comment 1498 1118 CMPCONSTBRANCH [rsi|QWORD[*] + r14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B114 -> B120 falseDestination: B114 -> B116 y: 0 size: BYTE inlinedY: null  <||@
  Comment 1514 block B49 null  <||@
  Comment 1514 520 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1514 522 stack:36|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 1518 524 rsi|DWORD[_] = MOV [rax|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 1525 526 r10|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3  <||@
  Comment 1532 528 CMPBRANCH (x: r10|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.9854570809572428 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD  <||@
  Comment 1541 block B50 null  <||@
  Comment 1541 530 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1541 532 r8|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 1544 534 JUMP ~[] destination: B50 -> B86  <||@
  Comment 1549 block B1 null  <||@
  Comment 1549 20 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1549 22 stack:36|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 1553 26 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.resize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:20]  <||@
  Comment 1555 {HotSpotMethod<HashMap.resize()>}  <||@
  Comment 1555 INVOKESPECIAL  <||@
  Comment 1560 [stack:40, stack:48, stack:56]at java.util.HashMap.putVal(HashMap.java:635) [bci: 20, duringCall: true, rethrow: false]
              |0                  |1               |2                  |3                  |4               |5               |6  |7  |8  |9  |10  |11  |12 
     locals:  |stack:72|QWORD[.]  |stack:36|DWORD  |stack:80|QWORD[.]  |stack:88|QWORD[.]  |stack:28|DWORD  |stack:32|DWORD  |-  |-  |-  |-  |-   |-   |-    <||@
  Comment 1568 28 rsi|DWORD = MOV [rax|QWORD[.] + 12] size: DWORD state [bci:23]  <||@
  Comment 1568 [rax:0, stack:40, stack:48, stack:56]at java.util.HashMap.putVal(HashMap.java:635) [bci: 23, duringCall: false, rethrow: false]
              |0                  |1               |2                  |3                  |4               |5               |6  |7  |8  |9  |10  |11  |12 
     locals:  |stack:72|QWORD[.]  |stack:36|DWORD  |stack:80|QWORD[.]  |stack:88|QWORD[.]  |stack:28|DWORD  |stack:32|DWORD  |-  |-  |-  |-  |-   |-   |-  
     stack:   |Object[null]       |                |                   |                   |                |                |   |   |   |   |    |    |     <||@
  Comment 1568 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1571 30 r10|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 1574 32 rbx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1577 34 rdi|DWORD = MOVE stack:32|DWORD moveKind: DWORD  <||@
  Comment 1581 36 r9|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 1586 38 r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 1591 40 rcx|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 1596 42 rdx|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1600 44 rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1605 46 JUMP ~[] destination: B1 -> B5  <||@
  Comment 1610 block B68 null  <||@
  Comment 1610 752 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1610 754 r14|QWORD = MOVE stack:56|QWORD moveKind: QWORD  <||@
  Comment 1615 756 JUMP ~[] destination: B68 -> B72  <||@
  Comment 1620 block B70 null  <||@
  Comment 1620 766 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1620 768 r14|QWORD = MOVE stack:56|QWORD moveKind: QWORD  <||@
  Comment 1625 770 - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]  <||@
  Comment 1625 {Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]}  <||@
  Comment 1630 772 JUMP ~[] destination: B70 -> B72  <||@
  Comment 1635 block B80 null  <||@
  Comment 1635 830 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1635 832 MOVB [r11|QWORD[*] + r14|QWORD * 1] y: 0 size: BYTE  <||@
  Comment 1640 834 rsi|QWORD = MOV [r15|QWORD + 72] size: QWORD  <||@
  Comment 1644 836 r11|QWORD[*] = ADD (x: r11|QWORD[*], y: r14|QWORD) size: QWORD  <||@
  Comment 1647 838 TESTBRANCH (x: rsi|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 size: QWORD  <||@
  Comment 1656 block B82 null  <||@
  Comment 1656 848 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1656 850 rdx|QWORD = MOV [r15|QWORD + 88] size: QWORD  <||@
  Comment 1660 852 MOV (x: [rdx|QWORD + rsi|QWORD * 1 - 8], y: r11|QWORD[*]) size: QWORD  <||@
  Comment 1665 854 rsi|QWORD = LEA [rsi|QWORD - 8] size: QWORD  <||@
  Comment 1669 856 MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD  <||@
  Comment 1673 858 JUMP ~[] destination: B82 -> B83  <||@
  Comment 1678 block B89 null  <||@
  Comment 1678 906 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1678 908 r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1681 912 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.resize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:288]  <||@
  Comment 1683 {HotSpotMethod<HashMap.resize()>}  <||@
  Comment 1683 INVOKESPECIAL  <||@
  Comment 1688 [stack:56]at java.util.HashMap.putVal(HashMap.java:669) [bci: 288, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5               |6  |7  |8  |9  |10  |11  |12 
     locals:  |stack:72|QWORD[.]  |-  |-  |-  |-  |stack:32|DWORD  |-  |-  |-  |-  |-   |-   |-    <||@
  Comment 1696 914 r13|QWORD = MOVE stack:48|QWORD moveKind: QWORD  <||@
  Comment 1701 916 rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1706 918 JUMP ~[] destination: B89 -> B91  <||@
  Comment 1711 block B43 null  <||@
  Comment 1711 464 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1711 466 rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 1711 468 - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]  <||@
  Comment 1711 {Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]}  <||@
  Comment 1716 472 JUMP ~[] destination: B43 -> B88  <||@
  Comment 1721 block B106 null  <||@
  Comment 1721 1050 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1721 1052 rsi|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 1724 1054 - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]  <||@
  Comment 1724 {Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]}  <||@
  Comment 1729 1058 JUMP ~[] destination: B106 -> B108  <||@
  Comment 1734 block B116 null  <||@
  Comment 1734 1126 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1734 1128 MOVB [rsi|QWORD[*] + r14|QWORD * 1] y: 0 size: BYTE  <||@
  Comment 1739 1130 rdx|QWORD = MOV [r15|QWORD + 72] size: QWORD  <||@
  Comment 1743 1132 rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: r14|QWORD) size: QWORD  <||@
  Comment 1746 1134 TESTBRANCH (x: rdx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B116 -> B117 falseDestination: B116 -> B118 size: QWORD  <||@
  Comment 1755 block B118 null  <||@
  Comment 1755 1146 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1755 1148 rbx|QWORD = MOV [r15|QWORD + 88] size: QWORD  <||@
  Comment 1759 1150 MOV (x: [rbx|QWORD + rdx|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD  <||@
  Comment 1764 1152 rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD  <||@
  Comment 1768 1154 MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD  <||@
  Comment 1772 1158 JUMP ~[] destination: B118 -> B120  <||@
  Comment 1777 block B93 null  <||@
  Comment 1777 934 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1777 936 rdi|DWORD = MOVE stack:32|DWORD moveKind: DWORD  <||@
  Comment 1781 938 TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.4891304347826087 condition: = trueDestination: B93 -> B97 falseDestination: B93 -> B95 size: DWORD  <||@
  Comment 1789 block B95 null  <||@
  Comment 1789 944 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1789 946 rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1794 948 rdx|DWORD[_] = MOV [rsi|QWORD[.] + 52] size: DWORD  <||@
  Comment 1797 950 NULLCHECK [rdx|DWORD[_] * 8] state [bci:292]  <||@
  Comment 1797 [rdx:0, rsi:0, stack:56]at java.util.HashMap.putVal(HashMap.java:670) [bci: 292, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5          |6  |7  |8  |9  |10  |11  |12 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |-  |rdi|DWORD  |-  |-  |-  |-  |-   |-   |-    <||@
  Comment 1797 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1804 952 rbx|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD  <||@
  Comment 1807 954 rax|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000]  <||@
  Comment 1817 956 rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rax|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0  <||@
  Comment 1821 958 rbx|QWORD = MOV [rbx|QWORD + 872] size: QWORD  <||@
  Comment 1828 960 rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD  <||@
  Comment 1832 962 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3  <||@
  Comment 1836 964 r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1839 968 r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1842 972 stack:112|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 1847 974 rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<LinkedHashMap.removeEldestEntry(Map$Entry)> state [bci:15, 295]  <||@
  Comment 1847 {HotSpotMethod<LinkedHashMap.removeEldestEntry(Map$Entry)>}  <||@
  Comment 1847 INLINE_INVOKE  <||@
  Comment 1849 [stack:16, stack:56]at java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 15, duringCall: true, rethrow: false]
              |0                  |1  |2                   |3 
     locals:  |stack:72|QWORD[.]  |-  |stack:112|QWORD[.]  |- 
  at java.util.HashMap.putVal(HashMap.java:670) [bci: 295, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7  |8  |9  |10  |11  |12 
     locals:  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-   |-   |-    <||@
  Comment 1857 976 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B95 -> B97 falseDestination: B95 -> B98 size: DWORD  <||@
  Comment 1870 block B12 null  <||@
  Comment 1870 180 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1870 182 stack:36|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 1874 184 rsi|QWORD = MOV [r15|QWORD + 440] size: QWORD  <||@
  Comment 1881 186 rdx|QWORD = LEA [rsi|QWORD + 40] size: QWORD  <||@
  Comment 1885 188 CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD  <||@
  Comment 1898 block B14 null  <||@
  Comment 1898 204 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1898 206 MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD  <||@
  Comment 1905 208 AMD64PREFETCH ~[rsi|QWORD + 296] instr: 0  <||@
  Comment 1912 210 MOV [rsi|QWORD] y: 1 size: QWORD  <||@
  Comment 1919 212 MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>;compressed}  <||@
  Comment 1919 {meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>;compressed}}  <||@
  Comment 1926 214 MOV [rsi|QWORD + 12] y: 0 size: DWORD  <||@
  Comment 1933 216 MOV [rsi|QWORD + 16] y: 0 size: QWORD  <||@
  Comment 1941 218 MOV [rsi|QWORD + 24] y: 0 size: QWORD  <||@
  Comment 1949 220 MOV [rsi|QWORD + 32] y: 0 size: QWORD  <||@
  Comment 1957 222 rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 1957 224 stack:64|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1962 226 JUMP ~[] destination: B14 -> B15  <||@
  Comment 1962 block B15 null  <||@
  Comment 1962 228 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 1962 230 r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1965 234 rdx|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1969 236 rcx|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 1974 238 r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 1979 240 r9|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1986 242 stack:112|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1991 244 - = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.]] [] callTarget: HotSpotMethod<HashMap$Node.<init>(int, Object, Object, HashMap$Node)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:6, 9, 56]  <||@
  Comment 1991 {HotSpotMethod<HashMap$Node.<init>(int, Object, Object, HashMap$Node)>}  <||@
  Comment 1991 INVOKESPECIAL  <||@
  Comment 1996 [stack:16, stack:32, stack:40, stack:48, stack:56]at java.util.LinkedHashMap$Entry.<init>(LinkedHashMap.java:208) [bci: 6, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 9, duringCall: true, rethrow: false]
              |0                   |1               |2                  |3                  |4             |5 
     locals:  |stack:72|QWORD[.]   |stack:36|DWORD  |stack:80|QWORD[.]  |stack:88|QWORD[.]  |Object[null]  |- 
     stack:   |stack:112|QWORD[.]  |                |                   |                   |              |  
  at java.util.HashMap.putVal(HashMap.java:637) [bci: 56, duringCall: true, rethrow: false]
              |0                  |1               |2  |3  |4  |5               |6  |7  |8  |9  |10  |11  |12 
     locals:  |stack:72|QWORD[.]  |-               |-  |-  |-  |stack:32|DWORD  |-  |-  |-  |-  |-   |-   |-  
     stack:   |stack:96|QWORD[.]  |stack:60|DWORD  |   |   |   |                |   |   |   |   |    |    |     <||@
  Comment 2004 246 rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 2009 248 rdx|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD  <||@
  Comment 2014 250 - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<LinkedHashMap.linkNodeAtEnd(LinkedHashMap$Entry)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:17, 56]  <||@
  Comment 2015 {HotSpotMethod<LinkedHashMap.linkNodeAtEnd(LinkedHashMap$Entry)>}  <||@
  Comment 2015 INVOKESPECIAL  <||@
  Comment 2020 [stack:16, stack:32, stack:56]at java.util.LinkedHashMap.newNode(LinkedHashMap.java:283) [bci: 17, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5                  
     locals:  |-  |-  |-  |-  |-  |stack:112|QWORD[.] 
  at java.util.HashMap.putVal(HashMap.java:637) [bci: 56, duringCall: true, rethrow: false]
              |0                  |1               |2  |3  |4  |5               |6  |7  |8  |9  |10  |11  |12 
     locals:  |stack:72|QWORD[.]  |-               |-  |-  |-  |stack:32|DWORD  |-  |-  |-  |-  |-   |-   |-  
     stack:   |stack:96|QWORD[.]  |stack:60|DWORD  |   |   |   |                |   |   |   |   |    |    |     <||@
  Comment 2028 252 rax|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD  <||@
  Comment 2033 254 r14|QWORD = MOVE stack:56|QWORD moveKind: QWORD  <||@
  Comment 2038 256 r13|QWORD = MOVE stack:48|QWORD moveKind: QWORD  <||@
  Comment 2043 258 r11|DWORD = MOVE stack:64|DWORD moveKind: DWORD  <||@
  Comment 2048 260 rbx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD  <||@
  Comment 2053 262 rdi|DWORD = MOVE stack:32|DWORD moveKind: DWORD  <||@
  Comment 2057 264 rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 2062 266 JUMP ~[] destination: B15 -> B16  <||@
  Comment 2067 block B81 null  <||@
  Comment 2067 840 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2067 842 rsi|QWORD = MOVE r11|QWORD[*] moveKind: QWORD  <||@
  Comment 2070 844 - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]  <||@
  Comment 2070 {Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]}  <||@
  Comment 2075 846 JUMP ~[] destination: B81 -> B83  <||@
  Comment 2080 block B117 null  <||@
  Comment 2080 1136 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2080 1138 rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 2080 1140 - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]  <||@
  Comment 2080 {Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]}  <||@
  Comment 2085 1144 JUMP ~[] destination: B117 -> B120  <||@
  Comment 2090 block B51 null  <||@
  Comment 2090 536 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2090 538 stack:112|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 2095 540 rsi|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD state [bci:29]  <||@
  Comment 2095 [rcx:0, r10:0, stack:16, stack:28, stack:32, stack:40, stack:48, stack:56]at java.util.HashMap.putVal(HashMap.java:636) [bci: 29, duringCall: false, rethrow: false]
              |0                  |1               |2             |3                  |4               |5               |6                  |7  |8               |9  |10  |11  |12 
     locals:  |stack:72|QWORD[.]  |stack:36|DWORD  |rcx|QWORD[.]  |stack:88|QWORD[.]  |stack:28|DWORD  |stack:32|DWORD  |stack:96|QWORD[.]  |-  |stack:40|DWORD  |-  |-   |-   |-    <||@
  Comment 2095 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2098 542 rdx|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000]  <||@
  Comment 2108 544 rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0  <||@
  Comment 2112 546 rbx|QWORD = MOV [rsi|QWORD + 464] size: QWORD  <||@
  Comment 2119 548 rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD  <||@
  Comment 2123 550 rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 2126 552 rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2129 554 rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:91]  <||@
  Comment 2129 {HotSpotMethod<Object.equals(Object)>}  <||@
  Comment 2129 INLINE_INVOKE  <||@
  Comment 2131 [stack:16, stack:28, stack:32, stack:40, stack:48, stack:56]at java.util.HashMap.putVal(HashMap.java:641) [bci: 91, duringCall: true, rethrow: false]
              |0                  |1               |2                  |3                  |4               |5               |6                  |7                   |8  |9  |10  |11  |12 
     locals:  |stack:72|QWORD[.]  |stack:36|DWORD  |stack:80|QWORD[.]  |stack:88|QWORD[.]  |stack:28|DWORD  |stack:32|DWORD  |stack:96|QWORD[.]  |stack:112|QWORD[.]  |-  |-  |-   |-   |-    <||@
  Comment 2139 556 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: DWORD  <||@
  Comment 2147 block B53 null  <||@
  Comment 2147 570 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2147 572 r8|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD  <||@
  Comment 2152 574 JUMP ~[] destination: B53 -> B86  <||@
  Comment 2157 block B60 null  <||@
  Comment 2157 638 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2157 642 rsi|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD state [bci:134]  <||@
  Comment 2157 [rcx:0, r10:0, r11:0, stack:16, stack:28, stack:32, stack:40, stack:48, stack:56]at java.util.HashMap.putVal(HashMap.java:647) [bci: 134, duringCall: false, rethrow: false]
              |0                  |1               |2             |3                  |4               |5               |6                  |7             |8  |9  |10  |11  |12             
     locals:  |stack:72|QWORD[.]  |stack:36|DWORD  |rcx|QWORD[.]  |stack:88|QWORD[.]  |stack:28|DWORD  |stack:32|DWORD  |stack:96|QWORD[.]  |r11|QWORD[.]  |-  |-  |-   |-   |stack:40|DWORD   <||@
  Comment 2157 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2160 644 rdx|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000]  <||@
  Comment 2170 646 rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0  <||@
  Comment 2174 648 rbx|QWORD = MOV [rsi|QWORD + 464] size: QWORD  <||@
  Comment 2181 650 rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD  <||@
  Comment 2185 652 rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 2188 654 rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2191 656 rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:203]  <||@
  Comment 2191 {HotSpotMethod<Object.equals(Object)>}  <||@
  Comment 2191 INLINE_INVOKE  <||@
  Comment 2193 [stack:16, stack:28, stack:32, stack:40, stack:48, stack:56]at java.util.HashMap.putVal(HashMap.java:654) [bci: 203, duringCall: true, rethrow: false]
              |0                  |1               |2                  |3                  |4               |5               |6                  |7  |8  |9  |10                  |11  |12             
     locals:  |stack:72|QWORD[.]  |stack:36|DWORD  |stack:80|QWORD[.]  |stack:88|QWORD[.]  |stack:28|DWORD  |stack:32|DWORD  |stack:96|QWORD[.]  |-  |-  |-  |stack:112|QWORD[.]  |-   |stack:40|DWORD   <||@
  Comment 2201 658 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B63 size: DWORD  <||@
  Comment 2209 block B63 null  <||@
  Comment 2209 682 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2209 684 r8|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD  <||@
  Comment 2214 686 JUMP ~[] destination: B63 -> B86  <||@
  Comment 2219 block B13 null  <||@
  Comment 2219 190 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2219 192 stack:64|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2224 194 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>}  <||@
  Comment 2224 {meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>}}  <||@
  Comment 2234 196 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7fba62ccef80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:29]  <||@
  Comment 2234 {Stub<new_instance_or_null(KlassPointer)Object>@0x7fba62ccef80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 2239 [stack:32, stack:40, stack:48, stack:56]at java.util.HashMap.putVal(HashMap.java:636) [bci: 29, duringCall: false, rethrow: false]
              |0                  |1               |2                  |3                  |4               |5               |6                  |7  |8               |9  |10  |11  |12 
     locals:  |stack:72|QWORD[.]  |stack:36|DWORD  |stack:80|QWORD[.]  |stack:88|QWORD[.]  |stack:28|DWORD  |stack:32|DWORD  |stack:96|QWORD[.]  |-  |stack:40|DWORD  |-  |-   |-   |-    <||@
  Comment 2247 198 NULLCHECK [rax|QWORD[.]] state [bci:29]  <||@
  Comment 2247 [rax:0, stack:32, stack:40, stack:48, stack:56]at java.util.HashMap.putVal(HashMap.java:636) [bci: 29, duringCall: false, rethrow: false]
              |0                  |1               |2                  |3                  |4               |5               |6                  |7  |8               |9  |10  |11  |12 
     locals:  |stack:72|QWORD[.]  |stack:36|DWORD  |stack:80|QWORD[.]  |stack:88|QWORD[.]  |stack:28|DWORD  |stack:32|DWORD  |stack:96|QWORD[.]  |-  |stack:40|DWORD  |-  |-   |-   |-    <||@
  Comment 2247 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2249 200 rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2252 202 JUMP ~[] destination: B13 -> B15  <||@
  Comment 2257 block B85 null  <||@
  Comment 2257 870 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2257 872 rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 2262 874 rdx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD  <||@
  Comment 2267 876 rcx|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 2271 878 - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<HashMap.treeifyBin(HashMap$Node[], int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:169]  <||@
  Comment 2271 {HotSpotMethod<HashMap.treeifyBin(HashMap$Node[], int)>}  <||@
  Comment 2271 INVOKESPECIAL  <||@
  Comment 2276 [stack:16, stack:28, stack:40, stack:56]at java.util.HashMap.putVal(HashMap.java:650) [bci: 169, duringCall: true, rethrow: false]
              |0                  |1  |2  |3                  |4               |5               |6  |7  |8  |9  |10                  |11  |12 
     locals:  |stack:72|QWORD[.]  |-  |-  |stack:88|QWORD[.]  |stack:28|DWORD  |stack:32|DWORD  |-  |-  |-  |-  |stack:112|QWORD[.]  |-   |-    <||@
  Comment 2284 880 r8|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD  <||@
  Comment 2289 882 JUMP ~[] destination: B85 -> B86  <||@
  Comment 2294 block B55 null  <||@
  Comment 2294 580 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2294 582 stack:112|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 2299 584 stack:36|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 2303 586 rsi|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD  <||@
  Comment 2308 588 rdx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 2313 590 rcx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD  <||@
  Comment 2318 592 r8|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 2323 594 r9|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 2328 596 rdi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 2333 598 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|QWORD[.], rdi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap$TreeNode.putTreeVal(HashMap, HashMap$Node[], int, Object, Object)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:123]  <||@
  Comment 2335 {HotSpotMethod<HashMap$TreeNode.putTreeVal(HashMap, HashMap$Node[], int, Object, Object)>}  <||@
  Comment 2335 INVOKESPECIAL  <||@
  Comment 2340 [stack:28, stack:40, stack:56]at java.util.HashMap.putVal(HashMap.java:644) [bci: 123, duringCall: true, rethrow: false]
              |0                  |1  |2  |3                  |4               |5               |6  |7  |8  |9  |10  |11  |12 
     locals:  |stack:72|QWORD[.]  |-  |-  |stack:88|QWORD[.]  |stack:28|DWORD  |stack:32|DWORD  |-  |-  |-  |-  |-   |-   |-    <||@
  Comment 2348 600 r8|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2351 602 JUMP ~[] destination: B55 -> B86  <||@
  Comment 2356 block B119 null  <||@
  Comment 2356 1160 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2356 1162 NULLCHECK [r10|DWORD[_] * 8] state [bci:222]  <||@
  Comment 2356 [r8:0, r10:0, stack:40, stack:56]at java.util.HashMap.putVal(HashMap.java:659) [bci: 222, duringCall: false, rethrow: false]
              |0                  |1  |2  |3                  |4               |5               |6  |7  |8  |9  |10           |11  |12 
     locals:  |stack:72|QWORD[.]  |-  |-  |stack:88|QWORD[.]  |stack:28|DWORD  |stack:32|DWORD  |-  |-  |-  |-  |r8|QWORD[.]  |-   |-    <||@
  Comment 2356 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2364 1166 JUMP ~[] destination: B119 -> B120  <||@
  Comment 2369 block B46 null  <||@
  Comment 2369 494 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2369 490 rbp|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 2373 496 MOV [r15|QWORD + 1156] y: -82987 size: DWORD  <||@
  Comment 2384 498 MOV [r15|QWORD + 1168] y: 0 size: QWORD  <||@
  Comment 2395 500 DEOPT info [bci:59]  <||@
  Comment 2395 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7fba7b6335a8, value=140438496915834]:0x7fba62b8b17a}  <||@
  Comment 2400 [rax:0, stack:32, stack:56]at java.util.HashMap.putVal(HashMap.java:637) [bci: 59, duringCall: false, rethrow: false]
              |0                  |1          |2             |3  |4  |5               |6  |7  |8  |9  |10  |11  |12 
     locals:  |stack:72|QWORD[.]  |-          |-             |-  |-  |stack:32|DWORD  |-  |-  |-  |-  |-   |-   |-  
     stack:   |stack:96|QWORD[.]  |rbp|DWORD  |rax|QWORD[.]  |   |   |                |   |   |   |   |    |    |     <||@
  Comment 2408 block B47 null  <||@
  Comment 2408 502 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2408 504 r11|QWORD = MOVE input: long[5780|0x1694]  <||@
  Comment 2415 506 r10|DWORD = MOVE input: int[-51507|0xffffffffffff36cd]  <||@
  Comment 2421 508 stack:36|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 2425 510 r8|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 2430 512 JUMP ~[] destination: B47 -> B122  <||@
  Comment 2430 block B122 null  <||@
  Comment 2430 1200 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 2430 1202 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 2437 1204 MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD  <||@
  Comment 2444 1206 DEOPT info [bci:29]  <||@
  Comment 2444 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7fba7b6335a8, value=140438496915834]:0x7fba62b8b17a}  <||@
  Comment 2449 [stack:32, stack:40, stack:48, stack:56]at java.util.HashMap.putVal(HashMap.java:636) [bci: 29, duringCall: false, rethrow: false]
              |0                  |1               |2                  |3                  |4               |5               |6                  |7  |8         |9  |10  |11  |12 
     locals:  |stack:72|QWORD[.]  |stack:36|DWORD  |stack:80|QWORD[.]  |stack:88|QWORD[.]  |stack:28|DWORD  |stack:32|DWORD  |stack:96|QWORD[.]  |-  |r8|DWORD  |-  |-   |-   |-    <||@
  Comment 2457 block B98 null  <||@
  Comment 2457 988 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2457 990 rdx|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD  <||@
  Comment 2462 992 MOV [r15|QWORD + 1156] y: -161299 size: DWORD  <||@
  Comment 2473 994 MOV [r15|QWORD + 1168] y: 10260 size: QWORD  <||@
  Comment 2484 996 DEOPT info [bci:18, 295]  <||@
  Comment 2484 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7fba7b6335a8, value=140438496915834]:0x7fba62b8b17a}  <||@
  Comment 2489 [rdx:0, stack:56]at java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 18, duringCall: false, rethrow: false]
              |0                  |1  |2             |3 
     locals:  |stack:72|QWORD[.]  |-  |rdx|QWORD[.]  |- 
     stack:   |rax|DWORD          |   |              |  
  at java.util.HashMap.putVal(HashMap.java:670) [bci: 295, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7  |8  |9  |10  |11  |12 
     locals:  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-   |-   |-    <||@
  Comment 2497 block B52 null  <||@
  Comment 2497 558 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2497 560 r11|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD  <||@
  Comment 2502 562 rbx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD  <||@
  Comment 2507 564 MOV [r15|QWORD + 1156] y: -153363 size: DWORD  <||@
  Comment 2518 566 MOV [r15|QWORD + 1168] y: 660 size: QWORD  <||@
  Comment 2529 568 DEOPT info [bci:94]  <||@
  Comment 2529 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7fba7b6335a8, value=140438496915834]:0x7fba62b8b17a}  <||@
  Comment 2534 [rbx:0, r11:0, stack:40, stack:48, stack:56]at java.util.HashMap.putVal(HashMap.java:641) [bci: 94, duringCall: false, rethrow: false]
              |0                  |1               |2                  |3                  |4               |5               |6             |7             |8  |9  |10  |11  |12 
     locals:  |stack:72|QWORD[.]  |stack:36|DWORD  |stack:80|QWORD[.]  |stack:88|QWORD[.]  |stack:28|DWORD  |stack:32|DWORD  |rbx|QWORD[.]  |r11|QWORD[.]  |-  |-  |-   |-   |-  
     stack:   |int[0|0x0]         |                |                   |                   |                |                |              |              |   |   |    |    |     <||@
  Comment 2542 block B121 null  <||@
  Comment 2542 1188 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2542 1190 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 2549 1192 stack:36|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 2553 1194 r8|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2556 1196 r10|DWORD = MOVE input: int[-75547|0xfffffffffffed8e5]  <||@
  Comment 2562 1198 JUMP ~[] destination: B121 -> B122  <||@
  Comment 2567 block B61 null  <||@
  Comment 2567 660 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2567 662 r8|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD  <||@
  Comment 2572 664 rbp|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 2576 666 MOV [r15|QWORD + 1156] y: -157971 size: DWORD  <||@
  Comment 2587 668 MOV [r15|QWORD + 1168] y: 1300 size: QWORD  <||@
  Comment 2598 670 DEOPT info [bci:206]  <||@
  Comment 2598 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7fba7b6335a8, value=140438496915834]:0x7fba62b8b17a}  <||@
  Comment 2603 [r8:0, stack:32, stack:40, stack:48, stack:56]at java.util.HashMap.putVal(HashMap.java:654) [bci: 206, duringCall: false, rethrow: false]
              |0                  |1               |2                  |3                  |4               |5               |6                  |7  |8  |9  |10           |11  |12        
     locals:  |stack:72|QWORD[.]  |stack:36|DWORD  |stack:80|QWORD[.]  |stack:88|QWORD[.]  |stack:28|DWORD  |stack:32|DWORD  |stack:96|QWORD[.]  |-  |-  |-  |r8|QWORD[.]  |-   |rbp|DWORD 
     stack:   |int[0|0x0]         |                |                   |                   |                |                |                   |   |   |   |             |    |            <||@
  Comment 2611 block B99 null  <||@
  Comment 2611 998 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2611 1000 MOV [r15|QWORD + 1156] y: -61235 size: DWORD  <||@
  Comment 2622 1002 MOV [r15|QWORD + 1168] y: 8980 size: QWORD  <||@
  Comment 2633 1004 DEOPT info [bci:292]  <||@
  Comment 2633 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7fba7b6335a8, value=140438496915834]:0x7fba62b8b17a}  <||@
  Comment 2638 [stack:56]at java.util.HashMap.putVal(HashMap.java:670) [bci: 292, duringCall: false, rethrow: false]
              |0                  |1  |2  |3  |4  |5               |6  |7  |8  |9  |10  |11  |12 
     locals:  |stack:72|QWORD[.]  |-  |-  |-  |-  |stack:32|DWORD  |-  |-  |-  |-  |-   |-   |-    <||@
  Comment 2646 block B3 null  <||@
  Comment 2646 54 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2646 56 MOV [r15|QWORD + 1156] y: -129299 size: DWORD  <||@
  Comment 2657 58 MOV [r15|QWORD + 1168] y: 20 size: QWORD  <||@
  Comment 2668 60 DEOPT info [bci:0]  <||@
  Comment 2668 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7fba7b6335a8, value=140438496915834]:0x7fba62b8b17a}  <||@
  Comment 2673 [rcx:0, rsi:0, r8:0]at java.util.HashMap.putVal(HashMap.java:634) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2             |3            |4         |5          |6  |7  |8  |9  |10  |11  |12 
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |rcx|QWORD[.]  |r8|QWORD[.]  |r9|DWORD  |rdi|DWORD  |-  |-  |-  |-  |-   |-   |-    <||@
  Comment 2686 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7fba7b633598, value=140438496784928]:0x7fba62b6b220}  <||@
  Comment 2711 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7fba7b6335a0, value=140438496919552]:0x7fba62b8c000}  <||@
  Comment 2731 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7fba7b6335a0, value=140438496919552]:0x7fba62b8c000}  <||@
  Comment 2759 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7fba7b6335a8, value=140438496915834]:0x7fba62b8b17a}  <||@
  Comment 2764 [rcx:0, rbx:0, rsi:0, r11:0, stack:28, stack:32, stack:40, stack:48, stack:56]at java.util.HashMap.putVal(HashMap.java:647) [bci: 134, duringCall: false, rethrow: false]
              |0             |1          |2             |3                  |4         |5          |6             |7             |8  |9  |10  |11  |12        
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |rcx|QWORD[.]  |stack:88|QWORD[.]  |r9|DWORD  |rdi|DWORD  |rbx|QWORD[.]  |r11|QWORD[.]  |-  |-  |-   |-   |rbp|DWORD   <||@
  Comment 2794 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7fba7b6335a8, value=140438496915834]:0x7fba62b8b17a}  <||@
  Comment 2799 [rax:0, rcx:0, rbx:0, stack:28, stack:32, stack:40, stack:56]at java.util.HashMap.putVal(HashMap.java:636) [bci: 29, duringCall: false, rethrow: false]
              |0                  |1               |2             |3                  |4               |5               |6             |7  |8               |9  |10  |11  |12 
     locals:  |stack:72|QWORD[.]  |stack:36|DWORD  |rcx|QWORD[.]  |stack:88|QWORD[.]  |stack:28|DWORD  |stack:32|DWORD  |rbx|QWORD[.]  |-  |stack:40|DWORD  |-  |-   |-   |-    <||@
  Comment 2829 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7fba7b6335a8, value=140438496915834]:0x7fba62b8b17a}  <||@
  Comment 2834 [rax:0, stack:40, stack:48, stack:56]at java.util.HashMap.putVal(HashMap.java:635) [bci: 23, duringCall: false, rethrow: false]
              |0                  |1               |2                  |3                  |4               |5               |6  |7  |8  |9  |10  |11  |12 
     locals:  |stack:72|QWORD[.]  |stack:36|DWORD  |stack:80|QWORD[.]  |stack:88|QWORD[.]  |stack:28|DWORD  |stack:32|DWORD  |-  |-  |-  |-  |-   |-   |-  
     stack:   |Object[null]       |                |                   |                   |                |                |   |   |   |   |    |    |     <||@
  Comment 2864 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7fba7b6335a8, value=140438496915834]:0x7fba62b8b17a}  <||@
  Comment 2869 [rcx:0, r10:0, stack:16, stack:28, stack:32, stack:40, stack:48, stack:56]at java.util.HashMap.putVal(HashMap.java:636) [bci: 29, duringCall: false, rethrow: false]
              |0                  |1               |2             |3                  |4               |5               |6                  |7  |8               |9  |10  |11  |12 
     locals:  |stack:72|QWORD[.]  |stack:36|DWORD  |rcx|QWORD[.]  |stack:88|QWORD[.]  |stack:28|DWORD  |stack:32|DWORD  |stack:96|QWORD[.]  |-  |stack:40|DWORD  |-  |-   |-   |-    <||@
  Comment 2899 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7fba7b6335a8, value=140438496915834]:0x7fba62b8b17a}  <||@
  Comment 2904 [rcx:0, r10:0, r11:0, stack:16, stack:28, stack:32, stack:40, stack:48, stack:56]at java.util.HashMap.putVal(HashMap.java:647) [bci: 134, duringCall: false, rethrow: false]
              |0                  |1               |2             |3                  |4               |5               |6                  |7             |8  |9  |10  |11  |12             
     locals:  |stack:72|QWORD[.]  |stack:36|DWORD  |rcx|QWORD[.]  |stack:88|QWORD[.]  |stack:28|DWORD  |stack:32|DWORD  |stack:96|QWORD[.]  |r11|QWORD[.]  |-  |-  |-   |-   |stack:40|DWORD   <||@
  Comment 2934 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7fba7b6335a8, value=140438496915834]:0x7fba62b8b17a}  <||@
  Comment 2939 [rax:0, stack:32, stack:40, stack:48, stack:56]at java.util.HashMap.putVal(HashMap.java:636) [bci: 29, duringCall: false, rethrow: false]
              |0                  |1               |2                  |3                  |4               |5               |6                  |7  |8               |9  |10  |11  |12 
     locals:  |stack:72|QWORD[.]  |stack:36|DWORD  |stack:80|QWORD[.]  |stack:88|QWORD[.]  |stack:28|DWORD  |stack:32|DWORD  |stack:96|QWORD[.]  |-  |stack:40|DWORD  |-  |-   |-   |-    <||@
  Comment 2947 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7fba62cc5f00:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 2947 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 2953 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7fba7b6335b8, value=140438496915232]:0x7fba62b8af20}  <||@
  Comment 2953 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-208[java.util.HashMap.putVal(int, Object, Object, boolean, boolean)]"
  method "HotSpotCompilation-208[java.util.HashMap.putVal(int, Object, Object, boolean, boolean)]"
  date 1714038194280
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 7fba63a89360 448b560849bc000000fbb97f00004d03d44d33e4493bc20f8503bd0fff66669089842400c0feff4883ec789041817f20030000000f853f0a000048896c2470488974243848894c24304c8944242844894c2464897c24608b5e2485db0f84ab0500008b04dd0c00000085c00f84e509000048c1e303448bd048895c24208b430c448b5b08418beaffcd23ea3bc50f865b09000044895424588b44ab10448b6e0849be000000fbb97f00004f8d2c2e4c896c245049be00006057ba7f00004c897424484d8bd049c1ea03448954241c85c00f85db010000896c24444c3b2dfffeffff0f841f0000004c3b2dfafeffff0f845a0600004c3b2df5feffff0f844d060000e962080000498b87b8010000488d6820493bafc80100000f871b0400004989afb80100000f18802001000048c70001000000c7400888791a00c7400c0000000048c740100000000048c74018000000004489501448c1e90389481089500c48ba000000fbb97f00004e8d1c1a498b93d00000008b4a14448b400849b9000000fbb97f00004f8d04014c63c94b3b14080f841200000083f9200f85a2070000493bd00f85ba00000041807f40000f85b00200008b6c2444488bf048c1ee038974ab10488d74ab104833f048f7c60000c0ff0f841d0000004885c00f8414000000488d74ab1048c1ee0942803c36020f85a9020000488b742438ff4618b8010000000346148946143b461c0f8f7e0400004c8b6c24504c3b2dc4fdffff0f841f0000004c3b2dbffdffff0f84c20400004c3b2dbafdffff0f84b5040000e9f207000048c7c000000000488b6c24704883c478493ba7500400000f872b080000c5f877c3498b4828448b0941ba00000000e92a0000000f1f84000000000066666690458bda41c1e303458d5b084d63db4e8b1c19493bd30f840d00000041ffc2453bca7fdde99906000049895020e9f7feffff448bd849c1e3033b14c50c0000000f8425030000813cc508000000487e1a000f8420060000bd00000000e91b0000003b14c50c0000000f84c5010000498b87580400008500ffc54d8bd8418b4318448bc049c1e00385c075d64c89442410896c24584c895c2408488b4424284d8b95a80200004d8b5a40488bfe8bfa4c8bc049c7c100000000498bda498bc3897c245cffd00f1f84000000000041807f40000f858a0100004c8b5c24084c8b742448488b5c2420488bf048c1ee0341897318498bf34833f048f7c60000c0ff0f84180000004885c00f840f00000049c1eb0943803c33020f8589010000837c2458070f8d2b0500004c8b4424104d85c00f8440feffff4c8b6c2450448b4c2464488b742438458b50144585c90f856405000041807f40000f8598010000448b5c241c45895814498bf0483374242848f7c60000c0ff0f84250000004c8b5c24284d85db0f84170000004c8b742448498bf048c1ee0942803c36020f85b7010000498b9db0020000488b434049c1e203488b742438498bd04c89542410ffd00f1f840000000000488b442410488b6c24704883c478493ba7500400000f873e060000c5f877c38b6c2444488d74ab108b3685f60f8441fdffff4d8b572848c1e6034d85d20f84e20000004d8b5f384b897413f8498d72f849897728e91afdfffff08304240042803c36000f8447fdffffe9f80000004c89442410896c24584c895c24088954245c8b34c510000000448bd649c1e2034c3bd10f84d0feffffe98d0300004c8b5c2408488b5c2420498d73188b3685f60f84520100004d8b572848c1e6034d85d20f844b0100004d8b47384b897410f8498d72f8498977284c8b742448e941fefffff08304240043803c33000f8467feffffe92a0100008b6c24448954245c48be88791afbb97f0000e8d05624ff0f1f8400000000008500448b54241c488b742438e9e8fbffffe832c923ffe944fcffff4d8d5814458b1b4585db0f8458feffff4d8b4f2849c1e3034d85c90f8425010000498b4f384e895c09f84d8d59f84d895f28e931feffff42c60436004d8b57484903f64d85d20f84f00000004d8b5f584b897413f8498d72f849897748e91ffcfffff08304240042803c36000f8439feffffe9dc0000008954245c8b34c510000000448bd649c1e2034c3bd10f85250200004d8bc3e99efdffff8954245c6690e888b2b9f70f1f8400680800068b700c448bd6488bd88b7c2460448b4c24644c8b442428488b4c24308b54245c488b742438e92efaffff4c8b742448e911fdffff4c8b742448e842c823ffe902fdffff43c6043300498b77484d03de4885f60f849b010000498b57584c895c32f8488d76f849897748e90dfdffff4c8bd66690e888b90fff0f1f8400e80800084c8b6c2450488b742438e966fbffffe8ec0524ffe93bfbffff498bf3e8dfc723ffe915fdffff42c6043600498b57484903f64885d20f8445010000498b5f5848897413f8488d72f849897748e92dfdffff8b7c246085ff0f8444fbffff488b7424388b56348504d5000000008b5e0848b8000000fbb97f0000488d1c18488b9b68030000488b434048c1e2034c8bd64c8bda4c895c2410ffd00f1f84000000000085c00f84f8faffffe94b0200008954245c498bb7b8010000488d5628493b97c80100000f8741010000498997b80100000f18862801000048c70601000000c7460898801a00c7460c0000000048c746100000000048c746180000000048c746200000000044895c24404c8bd68b54245c488b4c24304c8b44242849c7c1000000004c89542410e854b80fff0f1f84001c0a000b488b742438488b54241090e83cb80fff0f1f8400340a000c488b4424104c8b7424484c8b6c2450448b5c2440488b5c24208b7c2460488b742438e94cf9ffff498bf3e8850424ffe97bfbffffe87b0424ffe9f4fbffff4c895c24108b710848ba000000fbb97f0000488d3432488b9ed0010000488b4340488bf1498bd2ffd00f1f84000000000085c00f845e0100004c8b442410e93efbffff8b710848ba000000fbb97f0000488d3432488b9ed0010000488b4340488bf1498bd2ffd00f1f84000000000085c00f84660100004c8b442410e900fbffff44895c244048be98801afbb97f0000e8615324ff0f1f8400000000008500488bf0e9d9feffff488b742438488b5424208b4c245ce83cb70fff0f1f8400340b00134c8b442410e9b5faffff4c895c24108954245c488b742410488b542438488b4c2420448b44245c4c8b4c2430488b7c24286690e8fcb60fff0f1f8400740b00144c8bc0e977faffff428504d500000000e9ddfaffff8b6c244441c78784040000d5bbfeff49c7879004000000000000e8ba1410ff0f1f84000000000049c7c39416000041bacd36ffff8954245c448b442458458997840400004d899f90040000e8891410ff0f1f840000000000488b54241041c78784040000ed89fdff49c7879004000014280000e8611410ff0f1f8400000000004c8b5c2410488b5c242041c78784040000eda8fdff49c7879004000094020000e8341410ff0f1f84000000000049c7c3000000008954245c458bc241bae5d8feffe977ffffff4c8b4424108b6c245841c78784040000ed96fdff49c7879004000014050000e8ef1310ff0f1f84000000000041c78784040000cd10ffff49c7879004000014230000e8cc1310ff0f1f84000000000041c78784040000ed06feff49c7879004000014000000e8a91310ff0f1f84000000000048896c2470e83d140effe9b2f5fffff4488d0dc1f7ffff49898f68040000e9042210fff4488d0daef9ffff49898f68040000e9f02110fff441c78784040000f5a3feff49c7879004000000000000e84e1310ff0f1f84000000000041c787840400008f19fdff49c7879004000000000000e82b1310ff0f1f84000000000041c78784040000f559feff49c7879004000000000000e8081310ff0f1f84000000000041c78784040000f5b2feff49c7879004000000000000e8e51210ff0f1f84000000000041c78784040000f595feff49c7879004000000000000e8c21210ff0f1f84000000000041c787840400008fe8fcff49c7879004000000000000e89f1210ff0f1f840000000000e818c023fff4e8321010fff4f448bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbfffffff4f4f4f4f4f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7fba7b6335c8, value=140438496891008]:0x7fba62b85080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|DWORD, rdi|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 63 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@21849dd slotKind: QWORD  <||@
  Comment 63 6 stack:72|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 68 8 stack:80|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 73 10 stack:88|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 78 12 stack:28|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 83 14 stack:32|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 87 16 rbx|DWORD[_] = MOV [rsi|QWORD[.] + 36] size: DWORD  <||@
  Comment 90 18 TESTBRANCH (x: rbx|DWORD[_], y: rbx|DWORD[_]) trueDestinationProbability: 0.0015880438063265454 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD  <||@
  Comment 98 block B2 null  <||@
  Comment 98 48 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 98 50 rax|DWORD = MOV [rbx|DWORD[_] * 8 + 12] size: DWORD  <||@
  Comment 105 52 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD  <||@
  Comment 113 block B4 null  <||@
  Comment 113 62 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 113 64 rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3  <||@
  Comment 117 66 r10|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 120 68 JUMP ~[] destination: B4 -> B5  <||@
  Comment 120 block B5 null  <||@
  Comment 120 70 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 120 72 stack:96|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 125 74 rax|DWORD = MOV [rbx|QWORD[.] + 12] size: DWORD  <||@
  Comment 128 76 r11|DWORD = MOV [rbx|QWORD[.] + 8] size: DWORD  <||@
  Comment 132 78 rbp|DWORD = DEC r10|DWORD size: DWORD  <||@
  Comment 137 80 rbp|DWORD = AND (x: rdx|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 139 82 CMPBRANCH (x: rax|DWORD, y: rbp|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B121 size: DWORD  <||@
  Comment 147 block B6 null  <||@
  Comment 147 84 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 147 86 stack:40|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 152 88 rax|DWORD[_] = MOV [rbx|QWORD[.] + rbp|DWORD * 4 + 16] size: DWORD  <||@
  Comment 156 90 r13|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD  <||@
  Comment 160 92 r14|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000]  <||@
  Comment 170 94 r13|QWORD = UNCOMPRESSPOINTER (input: r13|DWORD, ~baseRegister: r14|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0  <||@
  Comment 174 96 stack:48|QWORD = MOVE r13|QWORD moveKind: QWORD  <||@
  Comment 179 98 r14|QWORD = MOVE input: long[140438306553856|0x7fba57600000]  <||@
  Comment 189 100 stack:56|QWORD = MOVE r14|QWORD moveKind: QWORD  <||@
  Comment 194 102 r10|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3  <||@
  Comment 201 104 stack:100|DWORD[_] = MOVE r10|DWORD[_] moveKind: DWORD  <||@
  Comment 206 106 TESTBRANCH (x: rax|DWORD[_], y: rax|DWORD[_]) trueDestinationProbability: 0.8229115724385652 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B48 size: DWORD  <||@
  Comment 214 block B7 null  <||@
  Comment 214 108 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 214 110 stack:60|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 218 112 AMD64HOTSPOTSTRATEGYSWITCH ~r13|QWORD - keyConstants: [meta{HotSpotType<Ljava/util/HashMap;, resolved>}, meta{HotSpotType<Ljava/util/LinkedHashMap;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/replacements/SnippetTemplate$LRUCache;, resolved>}] keyTargets: [B7 -> B8, B7 -> B12, B7 -> B12] defaultTarget: B7 -> B47 strategy: SequentialStrategy[avgEffort=-1.0]  <||@
  Comment 218 {DataSection[0x0]}  <||@
  Comment 231 {DataSection[0x8]}  <||@
  Comment 244 {DataSection[0x10]}  <||@
  Comment 262 block B8 null  <||@
  Comment 262 114 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 262 116 rax|QWORD = MOV [r15|QWORD + 440] size: QWORD  <||@
  Comment 269 118 rbp|QWORD = LEA [rax|QWORD + 32] size: QWORD  <||@
  Comment 273 120 CMPBRANCH (x: rbp|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: QWORD  <||@
  Comment 286 block B10 null  <||@
  Comment 286 148 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 286 150 MOV (x: [r15|QWORD + 440], y: rbp|QWORD) size: QWORD  <||@
  Comment 293 152 AMD64PREFETCH ~[rax|QWORD + 288] instr: 0  <||@
  Comment 300 154 MOV [rax|QWORD] y: 1 size: QWORD  <||@
  Comment 307 156 MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>;compressed}  <||@
  Comment 307 {meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>;compressed}}  <||@
  Comment 314 158 MOV [rax|QWORD + 12] y: 0 size: DWORD  <||@
  Comment 321 160 MOV [rax|QWORD + 16] y: 0 size: QWORD  <||@
  Comment 329 162 MOV [rax|QWORD + 24] y: 0 size: QWORD  <||@
  Comment 337 164 rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 337 166 JUMP ~[] destination: B10 -> B11  <||@
  Comment 337 block B11 null  <||@
  Comment 337 168 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 337 170 MOV (x: [rax|QWORD[.] + 20], y: r10|DWORD[_]) size: DWORD  <||@
  Comment 341 172 rcx|DWORD[_] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3  <||@
  Comment 345 174 MOV (x: [rax|QWORD[.] + 16], y: rcx|DWORD[_]) size: DWORD  <||@
  Comment 348 176 MOV (x: [rax|QWORD[.] + 12], y: rdx|DWORD) size: DWORD  <||@
  Comment 351 178 JUMP ~[] destination: B11 -> B16  <||@
  Comment 351 block B16 null  <||@
  Comment 351 268 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 351 270 rdx|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000]  <||@
  Comment 361 272 r11|QWORD = UNCOMPRESSPOINTER (input: r11|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0  <||@
  Comment 365 274 rdx|QWORD = MOV [r11|QWORD + 208] size: QWORD  <||@
  Comment 372 276 rcx|DWORD = MOV [rdx|QWORD + 20] size: DWORD  <||@
  Comment 375 278 r8|DWORD = MOV [rax|QWORD[.] + 8] size: DWORD  <||@
  Comment 379 280 r9|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000]  <||@
  Comment 389 282 r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: r9|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0  <||@
  Comment 393 284 r9|QWORD = MOVSXD rcx|DWORD size: QWORD  <||@
  Comment 396 286 CMPBRANCH (x: rdx|QWORD, y: [r8|QWORD + r9|QWORD * 1]) trueDestinationProbability: 0.5 condition: = trueDestination: B16 -> B27 falseDestination: B16 -> B18 size: QWORD  <||@
  Comment 406 block B18 null  <||@
  Comment 406 292 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 406 294 CMPCONSTBRANCH rcx|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B46 y: 32 size: DWORD inlinedY: null  <||@
  Comment 415 block B19 null  <||@
  Comment 415 296 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 415 298 CMPBRANCH (x: rdx|QWORD, y: r8|QWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B19 -> B27 falseDestination: B19 -> B21 size: QWORD  <||@
  Comment 424 block B27 null  <||@
  Comment 424 348 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 424 350 CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 0 size: BYTE inlinedY: null  <||@
  Comment 435 block B28 null  <||@
  Comment 435 352 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 435 354 rbp|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 439 356 JUMP ~[] destination: B28 -> B34  <||@
  Comment 439 block B34 null  <||@
  Comment 439 398 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 439 400 rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3  <||@
  Comment 446 402 MOV (x: [rbx|QWORD[.] + rbp|DWORD * 4 + 16], y: rsi|DWORD[_]) size: DWORD  <||@
  Comment 450 404 rsi|QWORD[.+] = LEA [rbx|QWORD[.] + rbp|DWORD * 4 + 16] size: QWORD  <||@
  Comment 455 406 rsi|QWORD[*] = XOR (x: rsi|QWORD[.+], y: rax|QWORD[.]) size: QWORD  <||@
  Comment 458 408 TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B34 -> B88 falseDestination: B34 -> B36 y: -4194304 size: QWORD  <||@
  Comment 471 block B36 null  <||@
  Comment 471 416 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 471 418 TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B36 -> B88 falseDestination: B36 -> B38 size: QWORD  <||@
  Comment 480 block B38 null  <||@
  Comment 480 426 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 480 430 rsi|QWORD[.+] = LEA [rbx|QWORD[.] + rbp|DWORD * 4 + 16] size: QWORD  <||@
  Comment 485 432 rsi|QWORD[*] = SHR rsi|QWORD[.+] y: 9 size: QWORD  <||@
  Comment 489 434 CMPCONSTBRANCH [rsi|QWORD[*] + r14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B38 -> B88 falseDestination: B38 -> B40 y: 2 size: BYTE inlinedY: null  <||@
  Comment 500 block B88 null  <||@
  Comment 500 894 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 500 412 rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 505 896 INC [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 508 898 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 513 900 rax|DWORD = ADD (x: rax|DWORD, ~y: [rsi|QWORD[.] + 20]) size: DWORD  <||@
  Comment 516 902 MOV (x: [rsi|QWORD[.] + 20], y: rax|DWORD) size: DWORD  <||@
  Comment 519 904 CMPBRANCH (x: rax|DWORD, y: [rsi|QWORD[.] + 28]) trueDestinationProbability: 7.853038846579175E-4 condition: > trueDestination: B88 -> B89 falseDestination: B88 -> B90 size: DWORD  <||@
  Comment 528 block B90 null  <||@
  Comment 528 920 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 528 922 r13|QWORD = MOVE stack:48|QWORD moveKind: QWORD  <||@
  Comment 533 924 JUMP ~[] destination: B90 -> B91  <||@
  Comment 533 block B91 null  <||@
  Comment 533 926 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 533 928 AMD64HOTSPOTSTRATEGYSWITCH ~r13|QWORD - keyConstants: [meta{HotSpotType<Ljava/util/HashMap;, resolved>}, meta{HotSpotType<Ljava/util/LinkedHashMap;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/replacements/SnippetTemplate$LRUCache;, resolved>}] keyTargets: [B91 -> B97, B91 -> B93, B91 -> B93] defaultTarget: B91 -> B99 strategy: SequentialStrategy[avgEffort=-1.0]  <||@
  Comment 533 {DataSection[0x0]}  <||@
  Comment 546 {DataSection[0x8]}  <||@
  Comment 559 {DataSection[0x10]}  <||@
  Comment 577 block B97 null  <||@
  Comment 577 982 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 577 984 rax|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 584 986 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9  <||@
  Comment 593 POLL_RETURN_FAR  <||@
  Comment 610 block B21 null  <||@
  Comment 610 304 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 610 306 rcx|QWORD = MOV [r8|QWORD + 40] size: QWORD  <||@
  Comment 614 308 r9|DWORD = MOV [rcx|QWORD] size: DWORD  <||@
  Comment 617 310 r10|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 623 312 JUMP ~[] destination: B21 -> B22  <||@
  Comment 628 block B23 loop 0 depth 1 header:551|LoopBegin  <||@
  Comment 628 318 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 640 320 r11|DWORD = SHL r10|DWORD y: 3 size: DWORD  <||@
  Comment 647 322 r11|DWORD = LEA [r11|DWORD + 8] size: DWORD  <||@
  Comment 651 324 r11|QWORD = MOVSXD r11|DWORD size: QWORD  <||@
  Comment 654 326 r11|QWORD = MOV [rcx|QWORD + r11|QWORD * 1] size: QWORD  <||@
  Comment 658 328 CMPBRANCH (x: rdx|QWORD, y: r11|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B23 -> B25 falseDestination: B23 -> B24 size: QWORD  <||@
  Comment 667 block B24 loop 0 depth 1 header:551|LoopBegin  <||@
  Comment 667 330 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 667 332 r10|DWORD = INC r10|DWORD size: DWORD  <||@
  Comment 670 334 JUMP ~[] destination: B24 -> B22  <||@
  Comment 670 block B22 loop 0 depth 1 header:551|LoopBegin  <||@
  Comment 670 314 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 670 316 CMPBRANCH (x: r9|DWORD, y: r10|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B46 size: DWORD  <||@
  Comment 680 block B25 null  <||@
  Comment 680 336 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 680 338 MOV (x: [r8|QWORD + 32], y: rdx|QWORD) size: QWORD  <||@
  Comment 684 340 JUMP ~[] destination: B25 -> B27  <||@
  Comment 689 block B48 null  <||@
  Comment 689 514 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 689 516 r11|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3  <||@
  Comment 696 518 CMPBRANCH (x: rdx|DWORD, y: [rax|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.01987559010066231 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B54 size: DWORD  <||@
  Comment 709 block B54 null  <||@
  Comment 709 576 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 709 578 CMPCONSTBRANCH [rax|DWORD[_] * 8 + 8] trueDestinationProbability: 2.021089053783065E-6 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B56 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed}  <||@
  Comment 709 {meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed}}  <||@
  Comment 726 block B56 null  <||@
  Comment 726 604 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 726 606 rbp|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 731 608 JUMP ~[] destination: B56 -> B57  <||@
  Comment 736 block B58 loop 1 depth 1 header:82|LoopBegin  <||@
  Comment 736 618 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 736 620 CMPBRANCH (x: rdx|DWORD, y: [rax|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.8692436604445373 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B62 size: DWORD  <||@
  Comment 749 block B62 loop 1 depth 1 header:82|LoopBegin  <||@
  Comment 749 672 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 749 674 SAFEPOINT rax|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 thread: r15 state [bci:134]  <||@
  Comment 756 [rcx:0, rbx:0, rsi:0, r8:0, r11:0, stack:28, stack:32, stack:40, stack:48, stack:56]at java.util.HashMap.putVal(HashMap.java:647) [bci: 134, duringCall: false, rethrow: false]
              |0             |1          |2             |3                  |4         |5          |6             |7             |8  |9  |10  |11  |12        
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |rcx|QWORD[.]  |stack:88|QWORD[.]  |r9|DWORD  |rdi|DWORD  |rbx|QWORD[.]  |r11|QWORD[.]  |-  |-  |-   |-   |rbp|DWORD   <||@
  Comment 756 {infopoint: SAFEPOINT}  <||@
  Comment 756 POLL_FAR  <||@
  Comment 758 676 rbp|DWORD = INC rbp|DWORD size: DWORD  <||@
  Comment 760 678 r11|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 763 680 JUMP ~[] destination: B62 -> B57  <||@
  Comment 763 block B57 loop 1 depth 1 header:82|LoopBegin  <||@
  Comment 763 610 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 763 612 rax|DWORD[_] = MOV [r11|QWORD[.] + 24] size: DWORD state [bci:134]  <||@
  Comment 763 [rcx:0, rbx:0, rsi:0, r11:0, stack:28, stack:32, stack:40, stack:48, stack:56]at java.util.HashMap.putVal(HashMap.java:647) [bci: 134, duringCall: false, rethrow: false]
              |0             |1          |2             |3                  |4         |5          |6             |7             |8  |9  |10  |11  |12        
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |rcx|QWORD[.]  |stack:88|QWORD[.]  |r9|DWORD  |rdi|DWORD  |rbx|QWORD[.]  |r11|QWORD[.]  |-  |-  |-   |-   |rbp|DWORD   <||@
  Comment 763 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 767 614 r8|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3  <||@
  Comment 774 616 TESTBRANCH (x: rax|DWORD[_], y: rax|DWORD[_]) trueDestinationProbability: 0.5880075530332061 condition: = trueDestination: B57 -> B65 falseDestination: B57 -> B58 size: DWORD  <||@
  Comment 778 block B65 null  <||@
  Comment 778 694 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 778 696 stack:112|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 783 698 stack:40|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 787 700 stack:120|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 792 702 rax|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 797 704 r10|QWORD = MOV [r13|QWORD + 680] size: QWORD  <||@
  Comment 804 706 r11|QWORD = MOV [r10|QWORD + 64] size: QWORD  <||@
  Comment 808 708 rdi|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 811 712 rdi|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 813 716 r8|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 816 718 r9|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 823 720 rbx|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 826 722 rax|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 829 724 stack:36|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 833 726 rax|QWORD[.] = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.]]) [] callTarget: HotSpotMethod<HashMap.newNode(int, Object, Object, HashMap$Node)> state [bci:152]  <||@
  Comment 833 {HotSpotMethod<HashMap.newNode(int, Object, Object, HashMap$Node)>}  <||@
  Comment 833 INLINE_INVOKE  <||@
  Comment 835 [stack:8, stack:16, stack:28, stack:32, stack:40, stack:56]at java.util.HashMap.putVal(HashMap.java:648) [bci: 152, duringCall: true, rethrow: false]
              |0                   |1               |2  |3                  |4               |5               |6                  |7  |8  |9  |10                  |11  |12             
     locals:  |stack:72|QWORD[.]   |stack:36|DWORD  |-  |stack:88|QWORD[.]  |stack:28|DWORD  |stack:32|DWORD  |stack:96|QWORD[.]  |-  |-  |-  |stack:112|QWORD[.]  |-   |stack:40|DWORD 
     stack:   |stack:120|QWORD[.]  |                |   |                   |                |                |                   |   |   |   |                    |    |                 <||@
  Comment 843 728 CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B67 y: 0 size: BYTE inlinedY: null  <||@
  Comment 854 block B66 null  <||@
  Comment 854 730 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 854 732 r11|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD  <||@
  Comment 859 734 r14|QWORD = MOVE stack:56|QWORD moveKind: QWORD  <||@
  Comment 864 736 rbx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD  <||@
  Comment 869 738 JUMP ~[] destination: B66 -> B72  <||@
  Comment 869 block B72 null  <||@
  Comment 869 788 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 869 790 rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3  <||@
  Comment 876 792 MOV (x: [r11|QWORD[.] + 24], y: rsi|DWORD[_]) size: DWORD  <||@
  Comment 880 794 rsi|QWORD[*] = XOR (x: r11|QWORD[.], y: rax|QWORD[.]) size: QWORD  <||@
  Comment 886 796 TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B72 -> B83 falseDestination: B72 -> B74 y: -4194304 size: QWORD  <||@
  Comment 899 block B74 null  <||@
  Comment 899 802 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 899 804 TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B83 falseDestination: B74 -> B76 size: QWORD  <||@
  Comment 908 block B76 null  <||@
  Comment 908 810 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 908 812 r11|QWORD[*] = SHR r11|QWORD[.] y: 9 size: QWORD  <||@
  Comment 912 814 CMPCONSTBRANCH [r11|QWORD[*] + r14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B76 -> B83 falseDestination: B76 -> B78 y: 2 size: BYTE inlinedY: null  <||@
  Comment 923 block B83 null  <||@
  Comment 923 860 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 923 862 CMPCONSTBRANCH stack:40|DWORD trueDestinationProbability: 0.9999886211240704 condition: < trueDestination: B83 -> B84 falseDestination: B83 -> B85 y: 7 size: DWORD inlinedY: null  <||@
  Comment 934 block B84 null  <||@
  Comment 934 864 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 934 866 r8|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD  <||@
  Comment 939 868 JUMP ~[] destination: B84 -> B86  <||@
  Comment 939 block B86 null  <||@
  Comment 939 884 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 939 886 TESTBRANCH (x: r8|QWORD[.], y: r8|QWORD[.]) trueDestinationProbability: 0.6091185940042786 condition: = trueDestination: B86 -> B88 falseDestination: B86 -> B100 size: QWORD  <||@
  Comment 948 block B100 null  <||@
  Comment 948 1006 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 948 1008 r13|QWORD = MOVE stack:48|QWORD moveKind: QWORD  <||@
  Comment 953 1010 r9|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 958 1012 rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 963 1014 r10|DWORD[_] = MOV [r8|QWORD[.] + 20] size: DWORD  <||@
  Comment 967 1016 TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.9999962001170364 condition: = trueDestination: B100 -> B101 falseDestination: B100 -> B119 size: DWORD  <||@
  Comment 976 block B101 null  <||@
  Comment 976 1018 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 976 1020 CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B101 -> B108 falseDestination: B101 -> B103 y: 0 size: BYTE inlinedY: null  <||@
  Comment 987 block B108 null  <||@
  Comment 987 1074 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 987 1024 r11|DWORD[_] = MOVE stack:100|DWORD[_] moveKind: DWORD  <||@
  Comment 992 1076 MOV (x: [r8|QWORD[.] + 20], y: r11|DWORD[_]) size: DWORD  <||@
  Comment 996 1078 rsi|QWORD[*] = XOR (x: r8|QWORD[.], y: stack:88|QWORD[.]) size: QWORD  <||@
  Comment 1004 1080 TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B108 -> B120 falseDestination: B108 -> B110 y: -4194304 size: QWORD  <||@
  Comment 1017 block B110 null  <||@
  Comment 1017 1088 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1017 1090 r11|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 1022 1092 TESTBRANCH (x: r11|QWORD[.], y: r11|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B110 -> B120 falseDestination: B110 -> B112 size: QWORD  <||@
  Comment 1031 block B112 null  <||@
  Comment 1031 1100 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1031 1102 r14|QWORD = MOVE stack:56|QWORD moveKind: QWORD  <||@
  Comment 1036 1104 rsi|QWORD[*] = SHR r8|QWORD[.] y: 9 size: QWORD  <||@
  Comment 1043 1106 CMPCONSTBRANCH [rsi|QWORD[*] + r14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B112 -> B120 falseDestination: B112 -> B114 y: 2 size: BYTE inlinedY: null  <||@
  Comment 1054 block B120 null  <||@
  Comment 1054 1168 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1054 1170 rbx|QWORD = MOV [r13|QWORD + 688] size: QWORD  <||@
  Comment 1061 1172 rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD  <||@
  Comment 1065 1174 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3  <||@
  Comment 1069 1176 rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1074 1178 rdx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1077 1180 stack:112|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1082 1182 - = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<HashMap.afterNodeAccess(HashMap$Node)> state [bci:253]  <||@
  Comment 1082 {HotSpotMethod<HashMap.afterNodeAccess(HashMap$Node)>}  <||@
  Comment 1082 INLINE_INVOKE  <||@
  Comment 1084 [stack:16]at java.util.HashMap.putVal(HashMap.java:663) [bci: 253, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7  |8  |9  |10  |11  |12                 
     locals:  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-   |-   |stack:112|QWORD[.]   <||@
  Comment 1092 1184 rax|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD  <||@
  Comment 1097 1186 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9  <||@
  Comment 1106 POLL_RETURN_FAR  <||@
  Comment 1123 block B29 null  <||@
  Comment 1123 358 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1123 360 rbp|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 1127 362 rsi|QWORD[.+] = LEA [rbx|QWORD[.] + rbp|DWORD * 4 + 16] size: QWORD  <||@
  Comment 1132 364 rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD  <||@
  Comment 1134 366 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B34 falseDestination: B29 -> B31 size: DWORD  <||@
  Comment 1142 block B31 null  <||@
  Comment 1142 372 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1142 374 r10|QWORD = MOV [r15|QWORD + 40] size: QWORD  <||@
  Comment 1146 376 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3  <||@
  Comment 1150 378 TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: QWORD  <||@
  Comment 1159 block B33 null  <||@
  Comment 1159 386 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1159 388 r11|QWORD = MOV [r15|QWORD + 56] size: QWORD  <||@
  Comment 1163 390 MOV (x: [r11|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 1168 392 rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD  <||@
  Comment 1172 394 MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD  <||@
  Comment 1176 396 JUMP ~[] destination: B33 -> B34  <||@
  Comment 1181 block B40 null  <||@
  Comment 1181 442 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1181 444 MEMBAR barriers: 4  <||@
  Comment 1186 446 CMPCONSTBRANCH [rsi|QWORD[*] + r14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B40 -> B88 falseDestination: B40 -> B42 y: 0 size: BYTE inlinedY: null  <||@
  Comment 1202 block B59 null  <||@
  Comment 1202 622 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1202 624 stack:112|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1207 626 stack:40|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 1211 628 stack:120|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 1216 630 stack:36|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 1220 632 rsi|DWORD[_] = MOV [rax|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 1227 634 r10|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3  <||@
  Comment 1234 636 CMPBRANCH (x: r10|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.9998932466496128 condition: = trueDestination: B59 -> B86 falseDestination: B59 -> B60 size: QWORD  <||@
  Comment 1248 block B67 null  <||@
  Comment 1248 740 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1248 742 r11|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD  <||@
  Comment 1253 744 rbx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD  <||@
  Comment 1258 746 rsi|QWORD[.+] = LEA [r11|QWORD[.] + 24] size: QWORD  <||@
  Comment 1262 748 rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD  <||@
  Comment 1264 750 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B67 -> B68 falseDestination: B67 -> B69 size: DWORD  <||@
  Comment 1272 block B69 null  <||@
  Comment 1272 758 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1272 760 r10|QWORD = MOV [r15|QWORD + 40] size: QWORD  <||@
  Comment 1276 762 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3  <||@
  Comment 1280 764 TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 size: QWORD  <||@
  Comment 1289 block B71 null  <||@
  Comment 1289 774 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1289 776 r8|QWORD = MOV [r15|QWORD + 56] size: QWORD  <||@
  Comment 1293 778 MOV (x: [r8|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 1298 780 rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD  <||@
  Comment 1302 782 MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD  <||@
  Comment 1306 784 r14|QWORD = MOVE stack:56|QWORD moveKind: QWORD  <||@
  Comment 1311 786 JUMP ~[] destination: B71 -> B72  <||@
  Comment 1316 block B78 null  <||@
  Comment 1316 820 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1316 822 MEMBAR barriers: 4  <||@
  Comment 1321 824 CMPCONSTBRANCH [r11|QWORD[*] + r14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B78 -> B83 falseDestination: B78 -> B80 y: 0 size: BYTE inlinedY: null  <||@
  Comment 1337 block B9 null  <||@
  Comment 1337 122 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1337 124 rbp|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 1341 126 stack:36|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 1345 128 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>}  <||@
  Comment 1345 {meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>}}  <||@
  Comment 1355 130 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7fba62ccef80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:29]  <||@
  Comment 1355 {Stub<new_instance_or_null(KlassPointer)Object>@0x7fba62ccef80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 1360 [rcx:0, rbx:0, stack:28, stack:32, stack:40, stack:56]at java.util.HashMap.putVal(HashMap.java:636) [bci: 29, duringCall: false, rethrow: false]
              |0                  |1               |2             |3                  |4               |5               |6             |7  |8               |9  |10  |11  |12 
     locals:  |stack:72|QWORD[.]  |stack:36|DWORD  |rcx|QWORD[.]  |stack:88|QWORD[.]  |stack:28|DWORD  |stack:32|DWORD  |rbx|QWORD[.]  |-  |stack:40|DWORD  |-  |-   |-   |-    <||@
  Comment 1368 132 NULLCHECK [rax|QWORD[.]] state [bci:29]  <||@
  Comment 1368 [rax:0, rcx:0, rbx:0, stack:28, stack:32, stack:40, stack:56]at java.util.HashMap.putVal(HashMap.java:636) [bci: 29, duringCall: false, rethrow: false]
              |0                  |1               |2             |3                  |4               |5               |6             |7  |8               |9  |10  |11  |12 
     locals:  |stack:72|QWORD[.]  |stack:36|DWORD  |rcx|QWORD[.]  |stack:88|QWORD[.]  |stack:28|DWORD  |stack:32|DWORD  |rbx|QWORD[.]  |-  |stack:40|DWORD  |-  |-   |-   |-    <||@
  Comment 1368 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1370 134 r10|DWORD[_] = MOVE stack:100|DWORD[_] moveKind: DWORD  <||@
  Comment 1375 144 rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1380 146 JUMP ~[] destination: B9 -> B11  <||@
  Comment 1385 block B32 null  <||@
  Comment 1385 380 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1385 382 - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]  <||@
  Comment 1385 {Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]}  <||@
  Comment 1390 384 JUMP ~[] destination: B32 -> B34  <||@
  Comment 1395 block B103 null  <||@
  Comment 1395 1028 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1395 1030 r11|QWORD[.+] = LEA [r8|QWORD[.] + 20] size: QWORD  <||@
  Comment 1399 1032 r11|DWORD[_] = MOV [r11|QWORD[.+]] size: DWORD  <||@
  Comment 1402 1034 TESTBRANCH (x: r11|DWORD[_], y: r11|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B103 -> B108 falseDestination: B103 -> B105 size: DWORD  <||@
  Comment 1411 block B105 null  <||@
  Comment 1411 1042 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1411 1044 r9|QWORD = MOV [r15|QWORD + 40] size: QWORD  <||@
  Comment 1415 1046 r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3  <||@
  Comment 1419 1048 TESTBRANCH (x: r9|QWORD, y: r9|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B105 -> B106 falseDestination: B105 -> B107 size: QWORD  <||@
  Comment 1428 block B107 null  <||@
  Comment 1428 1060 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1428 1062 rcx|QWORD = MOV [r15|QWORD + 56] size: QWORD  <||@
  Comment 1432 1064 MOV (x: [rcx|QWORD + r9|QWORD * 1 - 8], y: r11|QWORD[.]) size: QWORD  <||@
  Comment 1437 1066 r11|QWORD = LEA [r9|QWORD - 8] size: QWORD  <||@
  Comment 1441 1068 MOV (x: [r15|QWORD + 40], y: r11|QWORD) size: QWORD  <||@
  Comment 1445 1072 JUMP ~[] destination: B107 -> B108  <||@
  Comment 1450 block B42 null  <||@
  Comment 1450 454 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1450 456 MOVB [rsi|QWORD[*] + r14|QWORD * 1] y: 0 size: BYTE  <||@
  Comment 1455 458 r10|QWORD = MOV [r15|QWORD + 72] size: QWORD  <||@
  Comment 1459 460 rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: r14|QWORD) size: QWORD  <||@
  Comment 1462 462 TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: QWORD  <||@
  Comment 1471 block B44 null  <||@
  Comment 1471 474 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1471 476 r11|QWORD = MOV [r15|QWORD + 88] size: QWORD  <||@
  Comment 1475 478 MOV (x: [r11|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD  <||@
  Comment 1480 480 rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD  <||@
  Comment 1484 482 MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD  <||@
  Comment 1488 486 JUMP ~[] destination: B44 -> B88  <||@
  Comment 1493 block B114 null  <||@
  Comment 1493 1114 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1493 1116 MEMBAR barriers: 4  <||@
  Comment 1498 1118 CMPCONSTBRANCH [rsi|QWORD[*] + r14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B114 -> B120 falseDestination: B114 -> B116 y: 0 size: BYTE inlinedY: null  <||@
  Comment 1514 block B49 null  <||@
  Comment 1514 520 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1514 522 stack:36|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 1518 524 rsi|DWORD[_] = MOV [rax|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 1525 526 r10|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3  <||@
  Comment 1532 528 CMPBRANCH (x: r10|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.9854570809572428 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD  <||@
  Comment 1541 block B50 null  <||@
  Comment 1541 530 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1541 532 r8|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 1544 534 JUMP ~[] destination: B50 -> B86  <||@
  Comment 1549 block B1 null  <||@
  Comment 1549 20 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1549 22 stack:36|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 1553 26 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.resize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:20]  <||@
  Comment 1555 {HotSpotMethod<HashMap.resize()>}  <||@
  Comment 1555 INVOKESPECIAL  <||@
  Comment 1560 [stack:40, stack:48, stack:56]at java.util.HashMap.putVal(HashMap.java:635) [bci: 20, duringCall: true, rethrow: false]
              |0                  |1               |2                  |3                  |4               |5               |6  |7  |8  |9  |10  |11  |12 
     locals:  |stack:72|QWORD[.]  |stack:36|DWORD  |stack:80|QWORD[.]  |stack:88|QWORD[.]  |stack:28|DWORD  |stack:32|DWORD  |-  |-  |-  |-  |-   |-   |-    <||@
  Comment 1568 28 rsi|DWORD = MOV [rax|QWORD[.] + 12] size: DWORD state [bci:23]  <||@
  Comment 1568 [rax:0, stack:40, stack:48, stack:56]at java.util.HashMap.putVal(HashMap.java:635) [bci: 23, duringCall: false, rethrow: false]
              |0                  |1               |2                  |3                  |4               |5               |6  |7  |8  |9  |10  |11  |12 
     locals:  |stack:72|QWORD[.]  |stack:36|DWORD  |stack:80|QWORD[.]  |stack:88|QWORD[.]  |stack:28|DWORD  |stack:32|DWORD  |-  |-  |-  |-  |-   |-   |-  
     stack:   |Object[null]       |                |                   |                   |                |                |   |   |   |   |    |    |     <||@
  Comment 1568 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1571 30 r10|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 1574 32 rbx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1577 34 rdi|DWORD = MOVE stack:32|DWORD moveKind: DWORD  <||@
  Comment 1581 36 r9|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 1586 38 r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 1591 40 rcx|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 1596 42 rdx|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1600 44 rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1605 46 JUMP ~[] destination: B1 -> B5  <||@
  Comment 1610 block B68 null  <||@
  Comment 1610 752 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1610 754 r14|QWORD = MOVE stack:56|QWORD moveKind: QWORD  <||@
  Comment 1615 756 JUMP ~[] destination: B68 -> B72  <||@
  Comment 1620 block B70 null  <||@
  Comment 1620 766 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1620 768 r14|QWORD = MOVE stack:56|QWORD moveKind: QWORD  <||@
  Comment 1625 770 - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]  <||@
  Comment 1625 {Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]}  <||@
  Comment 1630 772 JUMP ~[] destination: B70 -> B72  <||@
  Comment 1635 block B80 null  <||@
  Comment 1635 830 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1635 832 MOVB [r11|QWORD[*] + r14|QWORD * 1] y: 0 size: BYTE  <||@
  Comment 1640 834 rsi|QWORD = MOV [r15|QWORD + 72] size: QWORD  <||@
  Comment 1644 836 r11|QWORD[*] = ADD (x: r11|QWORD[*], y: r14|QWORD) size: QWORD  <||@
  Comment 1647 838 TESTBRANCH (x: rsi|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 size: QWORD  <||@
  Comment 1656 block B82 null  <||@
  Comment 1656 848 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1656 850 rdx|QWORD = MOV [r15|QWORD + 88] size: QWORD  <||@
  Comment 1660 852 MOV (x: [rdx|QWORD + rsi|QWORD * 1 - 8], y: r11|QWORD[*]) size: QWORD  <||@
  Comment 1665 854 rsi|QWORD = LEA [rsi|QWORD - 8] size: QWORD  <||@
  Comment 1669 856 MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD  <||@
  Comment 1673 858 JUMP ~[] destination: B82 -> B83  <||@
  Comment 1678 block B89 null  <||@
  Comment 1678 906 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1678 908 r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1681 912 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.resize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:288]  <||@
  Comment 1683 {HotSpotMethod<HashMap.resize()>}  <||@
  Comment 1683 INVOKESPECIAL  <||@
  Comment 1688 [stack:56]at java.util.HashMap.putVal(HashMap.java:669) [bci: 288, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5               |6  |7  |8  |9  |10  |11  |12 
     locals:  |stack:72|QWORD[.]  |-  |-  |-  |-  |stack:32|DWORD  |-  |-  |-  |-  |-   |-   |-    <||@
  Comment 1696 914 r13|QWORD = MOVE stack:48|QWORD moveKind: QWORD  <||@
  Comment 1701 916 rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1706 918 JUMP ~[] destination: B89 -> B91  <||@
  Comment 1711 block B43 null  <||@
  Comment 1711 464 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1711 466 rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 1711 468 - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]  <||@
  Comment 1711 {Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]}  <||@
  Comment 1716 472 JUMP ~[] destination: B43 -> B88  <||@
  Comment 1721 block B106 null  <||@
  Comment 1721 1050 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1721 1052 rsi|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 1724 1054 - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]  <||@
  Comment 1724 {Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]}  <||@
  Comment 1729 1058 JUMP ~[] destination: B106 -> B108  <||@
  Comment 1734 block B116 null  <||@
  Comment 1734 1126 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1734 1128 MOVB [rsi|QWORD[*] + r14|QWORD * 1] y: 0 size: BYTE  <||@
  Comment 1739 1130 rdx|QWORD = MOV [r15|QWORD + 72] size: QWORD  <||@
  Comment 1743 1132 rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: r14|QWORD) size: QWORD  <||@
  Comment 1746 1134 TESTBRANCH (x: rdx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B116 -> B117 falseDestination: B116 -> B118 size: QWORD  <||@
  Comment 1755 block B118 null  <||@
  Comment 1755 1146 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1755 1148 rbx|QWORD = MOV [r15|QWORD + 88] size: QWORD  <||@
  Comment 1759 1150 MOV (x: [rbx|QWORD + rdx|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD  <||@
  Comment 1764 1152 rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD  <||@
  Comment 1768 1154 MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD  <||@
  Comment 1772 1158 JUMP ~[] destination: B118 -> B120  <||@
  Comment 1777 block B93 null  <||@
  Comment 1777 934 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1777 936 rdi|DWORD = MOVE stack:32|DWORD moveKind: DWORD  <||@
  Comment 1781 938 TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.4891304347826087 condition: = trueDestination: B93 -> B97 falseDestination: B93 -> B95 size: DWORD  <||@
  Comment 1789 block B95 null  <||@
  Comment 1789 944 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1789 946 rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1794 948 rdx|DWORD[_] = MOV [rsi|QWORD[.] + 52] size: DWORD  <||@
  Comment 1797 950 NULLCHECK [rdx|DWORD[_] * 8] state [bci:292]  <||@
  Comment 1797 [rdx:0, rsi:0, stack:56]at java.util.HashMap.putVal(HashMap.java:670) [bci: 292, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5          |6  |7  |8  |9  |10  |11  |12 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |-  |rdi|DWORD  |-  |-  |-  |-  |-   |-   |-    <||@
  Comment 1797 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1804 952 rbx|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD  <||@
  Comment 1807 954 rax|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000]  <||@
  Comment 1817 956 rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rax|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0  <||@
  Comment 1821 958 rbx|QWORD = MOV [rbx|QWORD + 872] size: QWORD  <||@
  Comment 1828 960 rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD  <||@
  Comment 1832 962 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 0 shift: 3  <||@
  Comment 1836 964 r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1839 968 r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1842 972 stack:112|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 1847 974 rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<LinkedHashMap.removeEldestEntry(Map$Entry)> state [bci:15, 295]  <||@
  Comment 1847 {HotSpotMethod<LinkedHashMap.removeEldestEntry(Map$Entry)>}  <||@
  Comment 1847 INLINE_INVOKE  <||@
  Comment 1849 [stack:16, stack:56]at java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 15, duringCall: true, rethrow: false]
              |0                  |1  |2                   |3 
     locals:  |stack:72|QWORD[.]  |-  |stack:112|QWORD[.]  |- 
  at java.util.HashMap.putVal(HashMap.java:670) [bci: 295, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7  |8  |9  |10  |11  |12 
     locals:  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-   |-   |-    <||@
  Comment 1857 976 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B95 -> B97 falseDestination: B95 -> B98 size: DWORD  <||@
  Comment 1870 block B12 null  <||@
  Comment 1870 180 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1870 182 stack:36|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 1874 184 rsi|QWORD = MOV [r15|QWORD + 440] size: QWORD  <||@
  Comment 1881 186 rdx|QWORD = LEA [rsi|QWORD + 40] size: QWORD  <||@
  Comment 1885 188 CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD  <||@
  Comment 1898 block B14 null  <||@
  Comment 1898 204 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1898 206 MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD  <||@
  Comment 1905 208 AMD64PREFETCH ~[rsi|QWORD + 296] instr: 0  <||@
  Comment 1912 210 MOV [rsi|QWORD] y: 1 size: QWORD  <||@
  Comment 1919 212 MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>;compressed}  <||@
  Comment 1919 {meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>;compressed}}  <||@
  Comment 1926 214 MOV [rsi|QWORD + 12] y: 0 size: DWORD  <||@
  Comment 1933 216 MOV [rsi|QWORD + 16] y: 0 size: QWORD  <||@
  Comment 1941 218 MOV [rsi|QWORD + 24] y: 0 size: QWORD  <||@
  Comment 1949 220 MOV [rsi|QWORD + 32] y: 0 size: QWORD  <||@
  Comment 1957 222 rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 1957 224 stack:64|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1962 226 JUMP ~[] destination: B14 -> B15  <||@
  Comment 1962 block B15 null  <||@
  Comment 1962 228 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 1962 230 r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1965 234 rdx|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1969 236 rcx|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 1974 238 r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 1979 240 r9|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1986 242 stack:112|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1991 244 - = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.]] [] callTarget: HotSpotMethod<HashMap$Node.<init>(int, Object, Object, HashMap$Node)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:6, 9, 56]  <||@
  Comment 1991 {HotSpotMethod<HashMap$Node.<init>(int, Object, Object, HashMap$Node)>}  <||@
  Comment 1991 INVOKESPECIAL  <||@
  Comment 1996 [stack:16, stack:32, stack:40, stack:48, stack:56]at java.util.LinkedHashMap$Entry.<init>(LinkedHashMap.java:208) [bci: 6, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 9, duringCall: true, rethrow: false]
              |0                   |1               |2                  |3                  |4             |5 
     locals:  |stack:72|QWORD[.]   |stack:36|DWORD  |stack:80|QWORD[.]  |stack:88|QWORD[.]  |Object[null]  |- 
     stack:   |stack:112|QWORD[.]  |                |                   |                   |              |  
  at java.util.HashMap.putVal(HashMap.java:637) [bci: 56, duringCall: true, rethrow: false]
              |0                  |1               |2  |3  |4  |5               |6  |7  |8  |9  |10  |11  |12 
     locals:  |stack:72|QWORD[.]  |-               |-  |-  |-  |stack:32|DWORD  |-  |-  |-  |-  |-   |-   |-  
     stack:   |stack:96|QWORD[.]  |stack:60|DWORD  |   |   |   |                |   |   |   |   |    |    |     <||@
  Comment 2004 246 rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 2009 248 rdx|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD  <||@
  Comment 2014 250 - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<LinkedHashMap.linkNodeAtEnd(LinkedHashMap$Entry)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:17, 56]  <||@
  Comment 2015 {HotSpotMethod<LinkedHashMap.linkNodeAtEnd(LinkedHashMap$Entry)>}  <||@
  Comment 2015 INVOKESPECIAL  <||@
  Comment 2020 [stack:16, stack:32, stack:56]at java.util.LinkedHashMap.newNode(LinkedHashMap.java:283) [bci: 17, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5                  
     locals:  |-  |-  |-  |-  |-  |stack:112|QWORD[.] 
  at java.util.HashMap.putVal(HashMap.java:637) [bci: 56, duringCall: true, rethrow: false]
              |0                  |1               |2  |3  |4  |5               |6  |7  |8  |9  |10  |11  |12 
     locals:  |stack:72|QWORD[.]  |-               |-  |-  |-  |stack:32|DWORD  |-  |-  |-  |-  |-   |-   |-  
     stack:   |stack:96|QWORD[.]  |stack:60|DWORD  |   |   |   |                |   |   |   |   |    |    |     <||@
  Comment 2028 252 rax|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD  <||@
  Comment 2033 254 r14|QWORD = MOVE stack:56|QWORD moveKind: QWORD  <||@
  Comment 2038 256 r13|QWORD = MOVE stack:48|QWORD moveKind: QWORD  <||@
  Comment 2043 258 r11|DWORD = MOVE stack:64|DWORD moveKind: DWORD  <||@
  Comment 2048 260 rbx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD  <||@
  Comment 2053 262 rdi|DWORD = MOVE stack:32|DWORD moveKind: DWORD  <||@
  Comment 2057 264 rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 2062 266 JUMP ~[] destination: B15 -> B16  <||@
  Comment 2067 block B81 null  <||@
  Comment 2067 840 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2067 842 rsi|QWORD = MOVE r11|QWORD[*] moveKind: QWORD  <||@
  Comment 2070 844 - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]  <||@
  Comment 2070 {Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]}  <||@
  Comment 2075 846 JUMP ~[] destination: B81 -> B83  <||@
  Comment 2080 block B117 null  <||@
  Comment 2080 1136 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2080 1138 rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 2080 1140 - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]  <||@
  Comment 2080 {Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]}  <||@
  Comment 2085 1144 JUMP ~[] destination: B117 -> B120  <||@
  Comment 2090 block B51 null  <||@
  Comment 2090 536 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2090 538 stack:112|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 2095 540 rsi|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD state [bci:29]  <||@
  Comment 2095 [rcx:0, r10:0, stack:16, stack:28, stack:32, stack:40, stack:48, stack:56]at java.util.HashMap.putVal(HashMap.java:636) [bci: 29, duringCall: false, rethrow: false]
              |0                  |1               |2             |3                  |4               |5               |6                  |7  |8               |9  |10  |11  |12 
     locals:  |stack:72|QWORD[.]  |stack:36|DWORD  |rcx|QWORD[.]  |stack:88|QWORD[.]  |stack:28|DWORD  |stack:32|DWORD  |stack:96|QWORD[.]  |-  |stack:40|DWORD  |-  |-   |-   |-    <||@
  Comment 2095 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2098 542 rdx|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000]  <||@
  Comment 2108 544 rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0  <||@
  Comment 2112 546 rbx|QWORD = MOV [rsi|QWORD + 464] size: QWORD  <||@
  Comment 2119 548 rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD  <||@
  Comment 2123 550 rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 2126 552 rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2129 554 rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:91]  <||@
  Comment 2129 {HotSpotMethod<Object.equals(Object)>}  <||@
  Comment 2129 INLINE_INVOKE  <||@
  Comment 2131 [stack:16, stack:28, stack:32, stack:40, stack:48, stack:56]at java.util.HashMap.putVal(HashMap.java:641) [bci: 91, duringCall: true, rethrow: false]
              |0                  |1               |2                  |3                  |4               |5               |6                  |7                   |8  |9  |10  |11  |12 
     locals:  |stack:72|QWORD[.]  |stack:36|DWORD  |stack:80|QWORD[.]  |stack:88|QWORD[.]  |stack:28|DWORD  |stack:32|DWORD  |stack:96|QWORD[.]  |stack:112|QWORD[.]  |-  |-  |-   |-   |-    <||@
  Comment 2139 556 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: DWORD  <||@
  Comment 2147 block B53 null  <||@
  Comment 2147 570 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2147 572 r8|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD  <||@
  Comment 2152 574 JUMP ~[] destination: B53 -> B86  <||@
  Comment 2157 block B60 null  <||@
  Comment 2157 638 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2157 642 rsi|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD state [bci:134]  <||@
  Comment 2157 [rcx:0, r10:0, r11:0, stack:16, stack:28, stack:32, stack:40, stack:48, stack:56]at java.util.HashMap.putVal(HashMap.java:647) [bci: 134, duringCall: false, rethrow: false]
              |0                  |1               |2             |3                  |4               |5               |6                  |7             |8  |9  |10  |11  |12             
     locals:  |stack:72|QWORD[.]  |stack:36|DWORD  |rcx|QWORD[.]  |stack:88|QWORD[.]  |stack:28|DWORD  |stack:32|DWORD  |stack:96|QWORD[.]  |r11|QWORD[.]  |-  |-  |-   |-   |stack:40|DWORD   <||@
  Comment 2157 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2160 644 rdx|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000]  <||@
  Comment 2170 646 rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2f21df61 encoding: base: 140436756758528 shift: 0  <||@
  Comment 2174 648 rbx|QWORD = MOV [rsi|QWORD + 464] size: QWORD  <||@
  Comment 2181 650 rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD  <||@
  Comment 2185 652 rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 2188 654 rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2191 656 rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:203]  <||@
  Comment 2191 {HotSpotMethod<Object.equals(Object)>}  <||@
  Comment 2191 INLINE_INVOKE  <||@
  Comment 2193 [stack:16, stack:28, stack:32, stack:40, stack:48, stack:56]at java.util.HashMap.putVal(HashMap.java:654) [bci: 203, duringCall: true, rethrow: false]
              |0                  |1               |2                  |3                  |4               |5               |6                  |7  |8  |9  |10                  |11  |12             
     locals:  |stack:72|QWORD[.]  |stack:36|DWORD  |stack:80|QWORD[.]  |stack:88|QWORD[.]  |stack:28|DWORD  |stack:32|DWORD  |stack:96|QWORD[.]  |-  |-  |-  |stack:112|QWORD[.]  |-   |stack:40|DWORD   <||@
  Comment 2201 658 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B63 size: DWORD  <||@
  Comment 2209 block B63 null  <||@
  Comment 2209 682 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2209 684 r8|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD  <||@
  Comment 2214 686 JUMP ~[] destination: B63 -> B86  <||@
  Comment 2219 block B13 null  <||@
  Comment 2219 190 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2219 192 stack:64|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2224 194 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>}  <||@
  Comment 2224 {meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>}}  <||@
  Comment 2234 196 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7fba62ccef80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:29]  <||@
  Comment 2234 {Stub<new_instance_or_null(KlassPointer)Object>@0x7fba62ccef80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 2239 [stack:32, stack:40, stack:48, stack:56]at java.util.HashMap.putVal(HashMap.java:636) [bci: 29, duringCall: false, rethrow: false]
              |0                  |1               |2                  |3                  |4               |5               |6                  |7  |8               |9  |10  |11  |12 
     locals:  |stack:72|QWORD[.]  |stack:36|DWORD  |stack:80|QWORD[.]  |stack:88|QWORD[.]  |stack:28|DWORD  |stack:32|DWORD  |stack:96|QWORD[.]  |-  |stack:40|DWORD  |-  |-   |-   |-    <||@
  Comment 2247 198 NULLCHECK [rax|QWORD[.]] state [bci:29]  <||@
  Comment 2247 [rax:0, stack:32, stack:40, stack:48, stack:56]at java.util.HashMap.putVal(HashMap.java:636) [bci: 29, duringCall: false, rethrow: false]
              |0                  |1               |2                  |3                  |4               |5               |6                  |7  |8               |9  |10  |11  |12 
     locals:  |stack:72|QWORD[.]  |stack:36|DWORD  |stack:80|QWORD[.]  |stack:88|QWORD[.]  |stack:28|DWORD  |stack:32|DWORD  |stack:96|QWORD[.]  |-  |stack:40|DWORD  |-  |-   |-   |-    <||@
  Comment 2247 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2249 200 rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2252 202 JUMP ~[] destination: B13 -> B15  <||@
  Comment 2257 block B85 null  <||@
  Comment 2257 870 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2257 872 rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 2262 874 rdx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD  <||@
  Comment 2267 876 rcx|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 2271 878 - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<HashMap.treeifyBin(HashMap$Node[], int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:169]  <||@
  Comment 2271 {HotSpotMethod<HashMap.treeifyBin(HashMap$Node[], int)>}  <||@
  Comment 2271 INVOKESPECIAL  <||@
  Comment 2276 [stack:16, stack:28, stack:40, stack:56]at java.util.HashMap.putVal(HashMap.java:650) [bci: 169, duringCall: true, rethrow: false]
              |0                  |1  |2  |3                  |4               |5               |6  |7  |8  |9  |10                  |11  |12 
     locals:  |stack:72|QWORD[.]  |-  |-  |stack:88|QWORD[.]  |stack:28|DWORD  |stack:32|DWORD  |-  |-  |-  |-  |stack:112|QWORD[.]  |-   |-    <||@
  Comment 2284 880 r8|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD  <||@
  Comment 2289 882 JUMP ~[] destination: B85 -> B86  <||@
  Comment 2294 block B55 null  <||@
  Comment 2294 580 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2294 582 stack:112|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 2299 584 stack:36|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 2303 586 rsi|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD  <||@
  Comment 2308 588 rdx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 2313 590 rcx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD  <||@
  Comment 2318 592 r8|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 2323 594 r9|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 2328 596 rdi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 2333 598 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|QWORD[.], rdi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap$TreeNode.putTreeVal(HashMap, HashMap$Node[], int, Object, Object)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:123]  <||@
  Comment 2335 {HotSpotMethod<HashMap$TreeNode.putTreeVal(HashMap, HashMap$Node[], int, Object, Object)>}  <||@
  Comment 2335 INVOKESPECIAL  <||@
  Comment 2340 [stack:28, stack:40, stack:56]at java.util.HashMap.putVal(HashMap.java:644) [bci: 123, duringCall: true, rethrow: false]
              |0                  |1  |2  |3                  |4               |5               |6  |7  |8  |9  |10  |11  |12 
     locals:  |stack:72|QWORD[.]  |-  |-  |stack:88|QWORD[.]  |stack:28|DWORD  |stack:32|DWORD  |-  |-  |-  |-  |-   |-   |-    <||@
  Comment 2348 600 r8|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2351 602 JUMP ~[] destination: B55 -> B86  <||@
  Comment 2356 block B119 null  <||@
  Comment 2356 1160 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2356 1162 NULLCHECK [r10|DWORD[_] * 8] state [bci:222]  <||@
  Comment 2356 [r8:0, r10:0, stack:40, stack:56]at java.util.HashMap.putVal(HashMap.java:659) [bci: 222, duringCall: false, rethrow: false]
              |0                  |1  |2  |3                  |4               |5               |6  |7  |8  |9  |10           |11  |12 
     locals:  |stack:72|QWORD[.]  |-  |-  |stack:88|QWORD[.]  |stack:28|DWORD  |stack:32|DWORD  |-  |-  |-  |-  |r8|QWORD[.]  |-   |-    <||@
  Comment 2356 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2364 1166 JUMP ~[] destination: B119 -> B120  <||@
  Comment 2369 block B46 null  <||@
  Comment 2369 494 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2369 490 rbp|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 2373 496 MOV [r15|QWORD + 1156] y: -82987 size: DWORD  <||@
  Comment 2384 498 MOV [r15|QWORD + 1168] y: 0 size: QWORD  <||@
  Comment 2395 500 DEOPT info [bci:59]  <||@
  Comment 2395 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7fba7b6335a8, value=140438496915834]:0x7fba62b8b17a}  <||@
  Comment 2400 [rax:0, stack:32, stack:56]at java.util.HashMap.putVal(HashMap.java:637) [bci: 59, duringCall: false, rethrow: false]
              |0                  |1          |2             |3  |4  |5               |6  |7  |8  |9  |10  |11  |12 
     locals:  |stack:72|QWORD[.]  |-          |-             |-  |-  |stack:32|DWORD  |-  |-  |-  |-  |-   |-   |-  
     stack:   |stack:96|QWORD[.]  |rbp|DWORD  |rax|QWORD[.]  |   |   |                |   |   |   |   |    |    |     <||@
  Comment 2408 block B47 null  <||@
  Comment 2408 502 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2408 504 r11|QWORD = MOVE input: long[5780|0x1694]  <||@
  Comment 2415 506 r10|DWORD = MOVE input: int[-51507|0xffffffffffff36cd]  <||@
  Comment 2421 508 stack:36|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 2425 510 r8|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 2430 512 JUMP ~[] destination: B47 -> B122  <||@
  Comment 2430 block B122 null  <||@
  Comment 2430 1200 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 2430 1202 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 2437 1204 MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD  <||@
  Comment 2444 1206 DEOPT info [bci:29]  <||@
  Comment 2444 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7fba7b6335a8, value=140438496915834]:0x7fba62b8b17a}  <||@
  Comment 2449 [stack:32, stack:40, stack:48, stack:56]at java.util.HashMap.putVal(HashMap.java:636) [bci: 29, duringCall: false, rethrow: false]
              |0                  |1               |2                  |3                  |4               |5               |6                  |7  |8         |9  |10  |11  |12 
     locals:  |stack:72|QWORD[.]  |stack:36|DWORD  |stack:80|QWORD[.]  |stack:88|QWORD[.]  |stack:28|DWORD  |stack:32|DWORD  |stack:96|QWORD[.]  |-  |r8|DWORD  |-  |-   |-   |-    <||@
  Comment 2457 block B98 null  <||@
  Comment 2457 988 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2457 990 rdx|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD  <||@
  Comment 2462 992 MOV [r15|QWORD + 1156] y: -161299 size: DWORD  <||@
  Comment 2473 994 MOV [r15|QWORD + 1168] y: 10260 size: QWORD  <||@
  Comment 2484 996 DEOPT info [bci:18, 295]  <||@
  Comment 2484 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7fba7b6335a8, value=140438496915834]:0x7fba62b8b17a}  <||@
  Comment 2489 [rdx:0, stack:56]at java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 18, duringCall: false, rethrow: false]
              |0                  |1  |2             |3 
     locals:  |stack:72|QWORD[.]  |-  |rdx|QWORD[.]  |- 
     stack:   |rax|DWORD          |   |              |  
  at java.util.HashMap.putVal(HashMap.java:670) [bci: 295, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7  |8  |9  |10  |11  |12 
     locals:  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-   |-   |-    <||@
  Comment 2497 block B52 null  <||@
  Comment 2497 558 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2497 560 r11|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD  <||@
  Comment 2502 562 rbx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD  <||@
  Comment 2507 564 MOV [r15|QWORD + 1156] y: -153363 size: DWORD  <||@
  Comment 2518 566 MOV [r15|QWORD + 1168] y: 660 size: QWORD  <||@
  Comment 2529 568 DEOPT info [bci:94]  <||@
  Comment 2529 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7fba7b6335a8, value=140438496915834]:0x7fba62b8b17a}  <||@
  Comment 2534 [rbx:0, r11:0, stack:40, stack:48, stack:56]at java.util.HashMap.putVal(HashMap.java:641) [bci: 94, duringCall: false, rethrow: false]
              |0                  |1               |2                  |3                  |4               |5               |6             |7             |8  |9  |10  |11  |12 
     locals:  |stack:72|QWORD[.]  |stack:36|DWORD  |stack:80|QWORD[.]  |stack:88|QWORD[.]  |stack:28|DWORD  |stack:32|DWORD  |rbx|QWORD[.]  |r11|QWORD[.]  |-  |-  |-   |-   |-  
     stack:   |int[0|0x0]         |                |                   |                   |                |                |              |              |   |   |    |    |     <||@
  Comment 2542 block B121 null  <||@
  Comment 2542 1188 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2542 1190 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 2549 1192 stack:36|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 2553 1194 r8|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2556 1196 r10|DWORD = MOVE input: int[-75547|0xfffffffffffed8e5]  <||@
  Comment 2562 1198 JUMP ~[] destination: B121 -> B122  <||@
  Comment 2567 block B61 null  <||@
  Comment 2567 660 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2567 662 r8|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD  <||@
  Comment 2572 664 rbp|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 2576 666 MOV [r15|QWORD + 1156] y: -157971 size: DWORD  <||@
  Comment 2587 668 MOV [r15|QWORD + 1168] y: 1300 size: QWORD  <||@
  Comment 2598 670 DEOPT info [bci:206]  <||@
  Comment 2598 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7fba7b6335a8, value=140438496915834]:0x7fba62b8b17a}  <||@
  Comment 2603 [r8:0, stack:32, stack:40, stack:48, stack:56]at java.util.HashMap.putVal(HashMap.java:654) [bci: 206, duringCall: false, rethrow: false]
              |0                  |1               |2                  |3                  |4               |5               |6                  |7  |8  |9  |10           |11  |12        
     locals:  |stack:72|QWORD[.]  |stack:36|DWORD  |stack:80|QWORD[.]  |stack:88|QWORD[.]  |stack:28|DWORD  |stack:32|DWORD  |stack:96|QWORD[.]  |-  |-  |-  |r8|QWORD[.]  |-   |rbp|DWORD 
     stack:   |int[0|0x0]         |                |                   |                   |                |                |                   |   |   |   |             |    |            <||@
  Comment 2611 block B99 null  <||@
  Comment 2611 998 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2611 1000 MOV [r15|QWORD + 1156] y: -61235 size: DWORD  <||@
  Comment 2622 1002 MOV [r15|QWORD + 1168] y: 8980 size: QWORD  <||@
  Comment 2633 1004 DEOPT info [bci:292]  <||@
  Comment 2633 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7fba7b6335a8, value=140438496915834]:0x7fba62b8b17a}  <||@
  Comment 2638 [stack:56]at java.util.HashMap.putVal(HashMap.java:670) [bci: 292, duringCall: false, rethrow: false]
              |0                  |1  |2  |3  |4  |5               |6  |7  |8  |9  |10  |11  |12 
     locals:  |stack:72|QWORD[.]  |-  |-  |-  |-  |stack:32|DWORD  |-  |-  |-  |-  |-   |-   |-    <||@
  Comment 2646 block B3 null  <||@
  Comment 2646 54 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2646 56 MOV [r15|QWORD + 1156] y: -129299 size: DWORD  <||@
  Comment 2657 58 MOV [r15|QWORD + 1168] y: 20 size: QWORD  <||@
  Comment 2668 60 DEOPT info [bci:0]  <||@
  Comment 2668 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7fba7b6335a8, value=140438496915834]:0x7fba62b8b17a}  <||@
  Comment 2673 [rcx:0, rsi:0, r8:0]at java.util.HashMap.putVal(HashMap.java:634) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2             |3            |4         |5          |6  |7  |8  |9  |10  |11  |12 
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |rcx|QWORD[.]  |r8|QWORD[.]  |r9|DWORD  |rdi|DWORD  |-  |-  |-  |-  |-   |-   |-    <||@
  Comment 2686 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7fba7b633598, value=140438496784928]:0x7fba62b6b220}  <||@
  Comment 2711 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7fba7b6335a0, value=140438496919552]:0x7fba62b8c000}  <||@
  Comment 2731 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7fba7b6335a0, value=140438496919552]:0x7fba62b8c000}  <||@
  Comment 2759 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7fba7b6335a8, value=140438496915834]:0x7fba62b8b17a}  <||@
  Comment 2764 [rcx:0, rbx:0, rsi:0, r11:0, stack:28, stack:32, stack:40, stack:48, stack:56]at java.util.HashMap.putVal(HashMap.java:647) [bci: 134, duringCall: false, rethrow: false]
              |0             |1          |2             |3                  |4         |5          |6             |7             |8  |9  |10  |11  |12        
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |rcx|QWORD[.]  |stack:88|QWORD[.]  |r9|DWORD  |rdi|DWORD  |rbx|QWORD[.]  |r11|QWORD[.]  |-  |-  |-   |-   |rbp|DWORD   <||@
  Comment 2794 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7fba7b6335a8, value=140438496915834]:0x7fba62b8b17a}  <||@
  Comment 2799 [rax:0, rcx:0, rbx:0, stack:28, stack:32, stack:40, stack:56]at java.util.HashMap.putVal(HashMap.java:636) [bci: 29, duringCall: false, rethrow: false]
              |0                  |1               |2             |3                  |4               |5               |6             |7  |8               |9  |10  |11  |12 
     locals:  |stack:72|QWORD[.]  |stack:36|DWORD  |rcx|QWORD[.]  |stack:88|QWORD[.]  |stack:28|DWORD  |stack:32|DWORD  |rbx|QWORD[.]  |-  |stack:40|DWORD  |-  |-   |-   |-    <||@
  Comment 2829 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7fba7b6335a8, value=140438496915834]:0x7fba62b8b17a}  <||@
  Comment 2834 [rax:0, stack:40, stack:48, stack:56]at java.util.HashMap.putVal(HashMap.java:635) [bci: 23, duringCall: false, rethrow: false]
              |0                  |1               |2                  |3                  |4               |5               |6  |7  |8  |9  |10  |11  |12 
     locals:  |stack:72|QWORD[.]  |stack:36|DWORD  |stack:80|QWORD[.]  |stack:88|QWORD[.]  |stack:28|DWORD  |stack:32|DWORD  |-  |-  |-  |-  |-   |-   |-  
     stack:   |Object[null]       |                |                   |                   |                |                |   |   |   |   |    |    |     <||@
  Comment 2864 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7fba7b6335a8, value=140438496915834]:0x7fba62b8b17a}  <||@
  Comment 2869 [rcx:0, r10:0, stack:16, stack:28, stack:32, stack:40, stack:48, stack:56]at java.util.HashMap.putVal(HashMap.java:636) [bci: 29, duringCall: false, rethrow: false]
              |0                  |1               |2             |3                  |4               |5               |6                  |7  |8               |9  |10  |11  |12 
     locals:  |stack:72|QWORD[.]  |stack:36|DWORD  |rcx|QWORD[.]  |stack:88|QWORD[.]  |stack:28|DWORD  |stack:32|DWORD  |stack:96|QWORD[.]  |-  |stack:40|DWORD  |-  |-   |-   |-    <||@
  Comment 2899 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7fba7b6335a8, value=140438496915834]:0x7fba62b8b17a}  <||@
  Comment 2904 [rcx:0, r10:0, r11:0, stack:16, stack:28, stack:32, stack:40, stack:48, stack:56]at java.util.HashMap.putVal(HashMap.java:647) [bci: 134, duringCall: false, rethrow: false]
              |0                  |1               |2             |3                  |4               |5               |6                  |7             |8  |9  |10  |11  |12             
     locals:  |stack:72|QWORD[.]  |stack:36|DWORD  |rcx|QWORD[.]  |stack:88|QWORD[.]  |stack:28|DWORD  |stack:32|DWORD  |stack:96|QWORD[.]  |r11|QWORD[.]  |-  |-  |-   |-   |stack:40|DWORD   <||@
  Comment 2934 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7fba7b6335a8, value=140438496915834]:0x7fba62b8b17a}  <||@
  Comment 2939 [rax:0, stack:32, stack:40, stack:48, stack:56]at java.util.HashMap.putVal(HashMap.java:636) [bci: 29, duringCall: false, rethrow: false]
              |0                  |1               |2                  |3                  |4               |5               |6                  |7  |8               |9  |10  |11  |12 
     locals:  |stack:72|QWORD[.]  |stack:36|DWORD  |stack:80|QWORD[.]  |stack:88|QWORD[.]  |stack:28|DWORD  |stack:32|DWORD  |stack:96|QWORD[.]  |-  |stack:40|DWORD  |-  |-   |-   |-    <||@
  Comment 2947 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7fba62cc5f00:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 2947 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 2953 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7fba7b6335b8, value=140438496915232]:0x7fba62b8af20}  <||@
  Comment 2953 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
