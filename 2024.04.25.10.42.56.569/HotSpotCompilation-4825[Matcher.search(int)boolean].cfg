begin_compilation
  name " HotSpotCompilation-4825[java.util.regex.Matcher.search(int)]"
  method "HotSpotCompilation-4825[java.util.regex.Matcher.search(int)]"
  date 1714038241822
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a509 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: a509  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# java.util.regex.Matcher
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v557 v570 v558 ?9 v559 v181 v560 v572 v565 ?263 v567 ?27 v571 v561 ?103 v568 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v561 <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a509 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a509 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# int[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Matcher.groups
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 48]
stamp: n# int[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v561 
lastLocationAccess: - 
=== Succesors ===
next: i510 
=== Usages ===
a124 v562 v563 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v561 lastLocationAccess: - #next: i510  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 ?27 ?9 v10 v116 v181 i519 ?103 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_0
code: ResolvedJavaMethodBytecode<Matcher.search(int)>
localsSize: 3
locksSize: 0
sourceFile: Matcher.java
sourceLine: 1755
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i2 
=== Succesors ===
=== Usages ===
i510 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2  <|@  <|@
f <@~|@floating>@ <|@
tid v562 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a509 
=== Succesors ===
=== Usages ===
i510 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a509  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i510 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-32267|0xffffffffffff81f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 51]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v562 
lastLocationAccess: - 
=== Succesors ===
next: v110 
=== Usages ===
i308 v223 v132 j214 i231 i483 v286 v307 
=== Predecessor ===
a509 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v562 lastLocationAccess: - #next: v110  <|@  <|@
f <@~|@floating>@ <|@
tid v557 <|@
d <@d|@=== Debug Properties ===
displacement: 48
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v110 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i191 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1755) [bci: 2]
rawvalue: 0
stableDimension: 0
stamp: i8 [0]
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v110 v113 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v110 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Matcher.hitEnd
location: Matcher.hitEnd
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1755) [bci: 2]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v557 
lastLocationAccess: - 
value: i191 
stateAfter: - 
=== Succesors ===
next: v113 
=== Usages ===
=== Predecessor ===
i510 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v557 lastLocationAccess: - value: i191 stateAfter: - #next: v113  <|@  <|@
f <@~|@floating>@ <|@
tid v558 <|@
d <@d|@=== Debug Properties ===
displacement: 49
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v113 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v113 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Matcher.requireEnd
location: Matcher.requireEnd
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1756) [bci: 7]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v558 
lastLocationAccess: - 
value: i191 
stateAfter: - 
=== Succesors ===
next: v257 
=== Usages ===
=== Predecessor ===
v110 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v558 lastLocationAccess: - value: i191 stateAfter: - #next: v257  <|@  <|@
f <@~|@floating>@ <|@
tid i4 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1755) [bci: 1]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v132 v68 v10 v15 v163 v87 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v10 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1757) [bci: 11]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@4dc6bd49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i4 
=== Succesors ===
=== Usages ===
v257 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i2 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v257 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1757) [bci: 11]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v10 
=== Succesors ===
trueSuccessor: v255 
falseSuccessor: v256 
=== Usages ===
=== Predecessor ===
v113 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v10 #trueSuccessor: v255 #falseSuccessor: v256  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v255 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1757) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v254 
=== Usages ===
=== Predecessor ===
v257 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v254  <|@  <|@
tid ?9 <|@
d <@d|@=== Debug Properties ===
bci: 10
bytecode: iload_1
code: ResolvedJavaMethodBytecode<Matcher.search(int)>
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1756) [bci: 7]
sourceFile: Matcher.java
sourceLine: 1757
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i2 
=== Succesors ===
=== Usages ===
v254 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2  <|@  <|@
f <@*|@fixed>@ <|@
tid v254 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 0
mayConvertToGuard: true
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1757) [bci: 11]
reason: UnreachedCode
speculation: {0x0000000000000014[index: 0, len: 20, hash: 0xd8afd925]: UnreachedCode@5[HotSpotMethod<Matcher.search(int)>, 14]}
stamp: void
=== Inputs ===
stateBefore: ?9 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v255 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?9  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v256 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1757) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v116 
=== Usages ===
=== Predecessor ===
v257 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v116  <|@  <|@
f <@~|@floating>@ <|@
tid v559 <|@
d <@d|@=== Debug Properties ===
displacement: 28
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v116 v190 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v116 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Matcher.first
location: Matcher.first
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1758) [bci: 22]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v559 
lastLocationAccess: - 
value: i2 
stateAfter: - 
=== Succesors ===
next: i511 
=== Usages ===
=== Predecessor ===
v256 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v559 lastLocationAccess: - value: i2 stateAfter: - #next: i511  <|@  <|@
f <@~|@floating>@ <|@
tid v560 <|@
d <@d|@=== Debug Properties ===
displacement: 36
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i511 v120 v185 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i511 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Matcher.oldLast
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1759) [bci: 27]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v560 
lastLocationAccess: - 
=== Succesors ===
next: v120 
=== Usages ===
v15 i519 
=== Predecessor ===
v116 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v560 lastLocationAccess: - #next: v120  <|@  <|@
f <@~|@floating>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1759) [bci: 30]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@4dc6bd49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i511 
y: i4 
=== Succesors ===
=== Usages ===
i519 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i511 y: i4  <|@  <|@
f <@~|@floating>@ <|@
tid i519 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1759) [bci: 30]
stamp: i32
=== Inputs ===
condition: v15 
trueValue: i2 
falseValue: i511 
=== Succesors ===
=== Usages ===
v120 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v15 trueValue: i2 falseValue: i511  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v120 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Matcher.oldLast
location: Matcher.oldLast
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1759) [bci: 41]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v560 
lastLocationAccess: - 
value: i519 
stateAfter: - 
=== Succesors ===
next: v93 
=== Usages ===
=== Predecessor ===
i511 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v560 lastLocationAccess: - value: i519 stateAfter: - #next: v93  <|@  <|@
f <@~|@floating>@ <|@
tid v132 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i510 
y: i4 
=== Succesors ===
=== Usages ===
v93 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i510 y: i4  <|@  <|@
f <@~|@floating>@ <|@
tid i45 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 62]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i46 i82 i104 i290 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i42 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 60]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1]
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v150 v190 v141 i231 v277 v297 v321 v343 v350 v368 v375 v382 v388 v412 v419 v426 v432 v440 v446 v452 v458 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v93 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 52]
profileData: PROFILED designatedSuccessorProbability: 0.04762108250417496
stamp: void
=== Inputs ===
condition: v132 
=== Succesors ===
trueSuccessor: v91 
falseSuccessor: v92 
=== Usages ===
=== Predecessor ===
v120 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v132 #trueSuccessor: v91 #falseSuccessor: v92  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B18" 
    xhandlers
    flags 
    probability 4587023742297259456
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v91 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
stamp: void
=== Inputs ===
=== Succesors ===
next: v101 
=== Usages ===
=== Predecessor ===
v93 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v101  <|@  <|@
f <@*|@fixed>@ <|@
tid v101 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v99 
=== Predecessor ===
v91 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606753486221175844
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v92 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 55]
stamp: void
=== Inputs ===
=== Succesors ===
next: v508 
=== Usages ===
v141 
=== Predecessor ===
v93 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v508  <|@  <|@
f <@~|@floating>@ <|@
tid i231 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-1 - 2147483646]
=== Inputs ===
x: i510 
y: i42 
=== Succesors ===
=== Usages ===
j221 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i510 y: i42  <|@  <|@
f <@~|@floating>@ <|@
tid j221 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [-1 - 2147483646]
=== Inputs ===
value: i231 
=== Succesors ===
=== Usages ===
v222 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i231  <|@  <|@
f <@~|@floating>@ <|@
tid j214 <|@
d <@d|@=== Debug Properties ===
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i510 
=== Succesors ===
=== Usages ===
v222 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i510  <|@  <|@
f <@~|@floating>@ <|@
tid v222 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@40aab068
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j221 
y: j214 
=== Succesors ===
=== Usages ===
v508 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j221 y: j214  <|@  <|@
f <@~|@floating>@ <|@
tid i136 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
rawvalue: 2
stableDimension: 0
stamp: i32 [2]
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i308 v223 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v508 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
profileData: INJECTED designatedSuccessorProbability: 0.5
stamp: void
=== Inputs ===
condition: v222 
=== Succesors ===
trueSuccessor: v504 
falseSuccessor: v507 
=== Usages ===
=== Predecessor ===
v92 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v222 #trueSuccessor: v504 #falseSuccessor: v507  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602249886593805348
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v504 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
=== Inputs ===
=== Succesors ===
next: v502 
=== Usages ===
=== Predecessor ===
v508 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v502  <|@  <|@
f <@*|@fixed>@ <|@
tid v502 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v501 
=== Predecessor ===
v504 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B24" 
    xhandlers
    flags 
    probability 4602249886593805348
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v507 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
=== Inputs ===
=== Succesors ===
next: v506 
=== Usages ===
=== Predecessor ===
v508 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v506  <|@  <|@
f <@~|@floating>@ <|@
tid v223 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@40aab068
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i510 
y: i136 
=== Succesors ===
=== Usages ===
v506 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i510 y: i136  <|@  <|@
f <@*|@fixed>@ <|@
tid v506 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v223 
=== Succesors ===
trueSuccessor: v505 
falseSuccessor: v239 
=== Usages ===
=== Predecessor ===
v507 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v223 #trueSuccessor: v505 #falseSuccessor: v239  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602249886593805348
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v505 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
=== Inputs ===
=== Succesors ===
next: v503 
=== Usages ===
=== Predecessor ===
v506 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v503  <|@  <|@
f <@*|@fixed>@ <|@
tid v503 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v501 
=== Predecessor ===
v505 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606753486221175844
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v501 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v502 v503 
=== Succesors ===
next: v141 
=== Usages ===
v228 v300 v280 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v502 v503 #next: v141  <|@  <|@
f <@~|@floating>@ <|@
tid v563 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a509 
=== Succesors ===
=== Usages ===
v141 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a509  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v141 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v92 
address: v563 
lastLocationAccess: - 
value: i42 
stateAfter: - 
=== Succesors ===
next: v29 
=== Usages ===
=== Predecessor ===
v501 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v92 address: v563 lastLocationAccess: - value: i42 stateAfter: - #next: v29  <|@  <|@
f <@~|@floating>@ <|@
tid i306 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 3
stableDimension: 0
stamp: i32 [3]
stampKind: i32
value: int[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
v307 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v307 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@40aab068
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i510 
y: i306 
=== Succesors ===
=== Usages ===
i308 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i510 y: i306  <|@  <|@
f <@~|@floating>@ <|@
tid i308 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 2] bits:0...0xx
=== Inputs ===
condition: v307 
trueValue: i510 
falseValue: i136 
=== Succesors ===
=== Usages ===
v35 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v307 trueValue: i510 falseValue: i136  <|@  <|@
f <@~|@floating>@ <|@
tid a124 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 48]
op: Uncompress
stamp: a# int[]
=== Inputs ===
value: a509 
=== Succesors ===
=== Usages ===
v589 v588 v587 v564 v573 v574 v575 v576 v577 v578 v579 v580 v581 v582 v583 v584 v585 v586 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a509  <|@  <|@
f <@*|@fixed>@ <|@
tid v29 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 46]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v30 
=== Predecessor ===
v141 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" 
    successors "B10" "B11" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606840135379518263
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i104 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 46]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v30 
values: i45 i46 
=== Succesors ===
=== Usages ===
i46 v35 v564 i272 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v30 values: i45 i46  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: -1
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 19.999102654004776
loopType: PRE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 46]
osrLoop: false
peelings: 1
rotated: false
splits: 2
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v29 
=== Succesors ===
next: v40 
=== Usages ===
i104 v37 v47 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v29 #next: v40  <|@  <|@
f <@~|@floating>@ <|@
tid v35 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 52]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@4dc6bd49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i104 
y: i308 
=== Succesors ===
=== Usages ===
v40 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i104 y: i308  <|@  <|@
f <@*|@fixed>@ <|@
tid v40 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 52]
profileData: INJECTED designatedSuccessorProbability: 0.01
stamp: void
=== Inputs ===
condition: v35 
=== Succesors ===
trueSuccessor: v39 
falseSuccessor: v37 
=== Usages ===
=== Predecessor ===
v30 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v35 #trueSuccessor: v39 #falseSuccessor: v37  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699167914968222
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v39 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 55]
stamp: void
=== Inputs ===
=== Succesors ===
next: v150 
=== Usages ===
v228 
=== Predecessor ===
v40 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v150  <|@  <|@
f <@~|@floating>@ <|@
tid v228 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
=== Inputs ===
guards: v501 v39 
=== Succesors ===
=== Usages ===
v150 
=== Predecessor ===
- >@ <|@
instruction <@MultiGuard|@jdk.graal.compiler.nodes.extended.MultiGuardNode>@ guards: v501 v39  <|@  <|@
f <@~|@floating>@ <|@
tid v564 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a124 
index: i104 
=== Succesors ===
=== Usages ===
v150 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a124 index: i104  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v150 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v228 
address: v564 
lastLocationAccess: - 
value: i42 
stateAfter: - 
=== Succesors ===
next: v47 
=== Usages ===
=== Predecessor ===
v39 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v228 address: v564 lastLocationAccess: - value: i42 stateAfter: - #next: v47  <|@  <|@
f <@~|@floating>@ <|@
tid i46 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 62]
stamp: i32
=== Inputs ===
x: i104 
y: i45 
=== Succesors ===
=== Usages ===
i104 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i104 y: i45  <|@  <|@
f <@*|@fixed>@ <|@
tid v47 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 46]
stamp: void
=== Inputs ===
loopBegin: v30 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v150 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v30  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4606753486221175844
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v281 
=== Usages ===
=== Predecessor ===
v40 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v281  <|@  <|@
f <@~|@floating>@ <|@
tid i482 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -16
stableDimension: 0
stamp: i32 [-16]
stampKind: i32
value: int[-16|0xfffffffffffffff0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i483 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i483 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-16 - 2147483631]
=== Inputs ===
x: i510 
y: i482 
=== Succesors ===
=== Usages ===
v266 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i510 y: i482  <|@  <|@
f <@*|@fixed>@ <|@
tid v281 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v265 
=== Predecessor ===
v37 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B13" "B14" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608039995292795068
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i272 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 46]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v265 
values: i104 i479 
=== Succesors ===
=== Usages ===
v266 j528 v573 i292 i479 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v265 values: i104 i479  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v265 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 30
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 19.999102654004776
loopType: MAIN_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 46]
osrLoop: false
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 16
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v281 
=== Succesors ===
next: v269 
=== Usages ===
v267 v271 i272 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v281 #next: v269  <|@  <|@
f <@~|@floating>@ <|@
tid v266 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 52]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@4dc6bd49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i272 
y: i483 
=== Succesors ===
=== Usages ===
v269 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i272 y: i483  <|@  <|@
f <@*|@fixed>@ <|@
tid v269 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 52]
profileData: INJECTED designatedSuccessorProbability: 0.19996410454965907
stamp: void
=== Inputs ===
condition: v266 
=== Succesors ===
trueSuccessor: v268 
falseSuccessor: v267 
=== Usages ===
=== Predecessor ===
v265 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v266 #trueSuccessor: v268 #falseSuccessor: v267  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597744362548122956
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v268 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 55]
stamp: void
=== Inputs ===
=== Succesors ===
next: v277 
=== Usages ===
v280 
=== Predecessor ===
v269 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v277  <|@  <|@
f <@~|@floating>@ <|@
tid v280 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
=== Inputs ===
guards: v501 v268 
=== Succesors ===
=== Usages ===
v458 v277 v432 v321 v452 v343 v412 v350 v446 v368 v426 v375 v440 v382 v419 v388 
=== Predecessor ===
- >@ <|@
instruction <@MultiGuard|@jdk.graal.compiler.nodes.extended.MultiGuardNode>@ guards: v501 v268  <|@  <|@
f <@~|@floating>@ <|@
tid v573 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a124 
index: i272 
=== Succesors ===
=== Usages ===
v277 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a124 index: i272  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v277 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v280 
address: v573 
lastLocationAccess: - 
value: i42 
stateAfter: - 
=== Succesors ===
next: v321 
=== Usages ===
=== Predecessor ===
v268 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v280 address: v573 lastLocationAccess: - value: i42 stateAfter: - #next: v321  <|@  <|@
f <@~|@floating>@ <|@
tid j528 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i272 
=== Succesors ===
=== Usages ===
v575 v576 v577 v578 v579 v580 v581 v582 v583 v584 v585 v586 v587 v588 v589 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i272  <|@  <|@
f <@~|@floating>@ <|@
tid v575 <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S4
=== Inputs ===
base: a124 
index: j528 
=== Succesors ===
=== Usages ===
v321 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a124 index: j528  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v321 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v280 
address: v575 
lastLocationAccess: - 
value: i42 
stateAfter: - 
=== Succesors ===
next: v343 
=== Usages ===
=== Predecessor ===
v277 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v280 address: v575 lastLocationAccess: - value: i42 stateAfter: - #next: v343  <|@  <|@
f <@~|@floating>@ <|@
tid v576 <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S4
=== Inputs ===
base: a124 
index: j528 
=== Succesors ===
=== Usages ===
v343 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a124 index: j528  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v343 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v280 
address: v576 
lastLocationAccess: - 
value: i42 
stateAfter: - 
=== Succesors ===
next: v350 
=== Usages ===
=== Predecessor ===
v321 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v280 address: v576 lastLocationAccess: - value: i42 stateAfter: - #next: v350  <|@  <|@
f <@~|@floating>@ <|@
tid v577 <|@
d <@d|@=== Debug Properties ===
displacement: 28
stamp: void*
stride: S4
=== Inputs ===
base: a124 
index: j528 
=== Succesors ===
=== Usages ===
v350 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a124 index: j528  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v350 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v280 
address: v577 
lastLocationAccess: - 
value: i42 
stateAfter: - 
=== Succesors ===
next: v368 
=== Usages ===
=== Predecessor ===
v343 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v280 address: v577 lastLocationAccess: - value: i42 stateAfter: - #next: v368  <|@  <|@
f <@~|@floating>@ <|@
tid v578 <|@
d <@d|@=== Debug Properties ===
displacement: 32
stamp: void*
stride: S4
=== Inputs ===
base: a124 
index: j528 
=== Succesors ===
=== Usages ===
v368 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a124 index: j528  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v368 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v280 
address: v578 
lastLocationAccess: - 
value: i42 
stateAfter: - 
=== Succesors ===
next: v375 
=== Usages ===
=== Predecessor ===
v350 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v280 address: v578 lastLocationAccess: - value: i42 stateAfter: - #next: v375  <|@  <|@
f <@~|@floating>@ <|@
tid v579 <|@
d <@d|@=== Debug Properties ===
displacement: 36
stamp: void*
stride: S4
=== Inputs ===
base: a124 
index: j528 
=== Succesors ===
=== Usages ===
v375 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a124 index: j528  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v375 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v280 
address: v579 
lastLocationAccess: - 
value: i42 
stateAfter: - 
=== Succesors ===
next: v382 
=== Usages ===
=== Predecessor ===
v368 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v280 address: v579 lastLocationAccess: - value: i42 stateAfter: - #next: v382  <|@  <|@
f <@~|@floating>@ <|@
tid v580 <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S4
=== Inputs ===
base: a124 
index: j528 
=== Succesors ===
=== Usages ===
v382 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a124 index: j528  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v382 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v280 
address: v580 
lastLocationAccess: - 
value: i42 
stateAfter: - 
=== Succesors ===
next: v388 
=== Usages ===
=== Predecessor ===
v375 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v280 address: v580 lastLocationAccess: - value: i42 stateAfter: - #next: v388  <|@  <|@
f <@~|@floating>@ <|@
tid v581 <|@
d <@d|@=== Debug Properties ===
displacement: 44
stamp: void*
stride: S4
=== Inputs ===
base: a124 
index: j528 
=== Succesors ===
=== Usages ===
v388 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a124 index: j528  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v388 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v280 
address: v581 
lastLocationAccess: - 
value: i42 
stateAfter: - 
=== Succesors ===
next: v412 
=== Usages ===
=== Predecessor ===
v382 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v280 address: v581 lastLocationAccess: - value: i42 stateAfter: - #next: v412  <|@  <|@
f <@~|@floating>@ <|@
tid v582 <|@
d <@d|@=== Debug Properties ===
displacement: 48
stamp: void*
stride: S4
=== Inputs ===
base: a124 
index: j528 
=== Succesors ===
=== Usages ===
v412 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a124 index: j528  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v412 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v280 
address: v582 
lastLocationAccess: - 
value: i42 
stateAfter: - 
=== Succesors ===
next: v419 
=== Usages ===
=== Predecessor ===
v388 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v280 address: v582 lastLocationAccess: - value: i42 stateAfter: - #next: v419  <|@  <|@
f <@~|@floating>@ <|@
tid v583 <|@
d <@d|@=== Debug Properties ===
displacement: 52
stamp: void*
stride: S4
=== Inputs ===
base: a124 
index: j528 
=== Succesors ===
=== Usages ===
v419 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a124 index: j528  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v419 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v280 
address: v583 
lastLocationAccess: - 
value: i42 
stateAfter: - 
=== Succesors ===
next: v426 
=== Usages ===
=== Predecessor ===
v412 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v280 address: v583 lastLocationAccess: - value: i42 stateAfter: - #next: v426  <|@  <|@
f <@~|@floating>@ <|@
tid v584 <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S4
=== Inputs ===
base: a124 
index: j528 
=== Succesors ===
=== Usages ===
v426 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a124 index: j528  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v426 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v280 
address: v584 
lastLocationAccess: - 
value: i42 
stateAfter: - 
=== Succesors ===
next: v432 
=== Usages ===
=== Predecessor ===
v419 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v280 address: v584 lastLocationAccess: - value: i42 stateAfter: - #next: v432  <|@  <|@
f <@~|@floating>@ <|@
tid v585 <|@
d <@d|@=== Debug Properties ===
displacement: 60
stamp: void*
stride: S4
=== Inputs ===
base: a124 
index: j528 
=== Succesors ===
=== Usages ===
v432 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a124 index: j528  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v432 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v280 
address: v585 
lastLocationAccess: - 
value: i42 
stateAfter: - 
=== Succesors ===
next: v440 
=== Usages ===
=== Predecessor ===
v426 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v280 address: v585 lastLocationAccess: - value: i42 stateAfter: - #next: v440  <|@  <|@
f <@~|@floating>@ <|@
tid v586 <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S4
=== Inputs ===
base: a124 
index: j528 
=== Succesors ===
=== Usages ===
v440 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a124 index: j528  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v440 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v280 
address: v586 
lastLocationAccess: - 
value: i42 
stateAfter: - 
=== Succesors ===
next: v446 
=== Usages ===
=== Predecessor ===
v432 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v280 address: v586 lastLocationAccess: - value: i42 stateAfter: - #next: v446  <|@  <|@
f <@~|@floating>@ <|@
tid v587 <|@
d <@d|@=== Debug Properties ===
displacement: 68
stamp: void*
stride: S4
=== Inputs ===
base: a124 
index: j528 
=== Succesors ===
=== Usages ===
v446 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a124 index: j528  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v446 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v280 
address: v587 
lastLocationAccess: - 
value: i42 
stateAfter: - 
=== Succesors ===
next: v452 
=== Usages ===
=== Predecessor ===
v440 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v280 address: v587 lastLocationAccess: - value: i42 stateAfter: - #next: v452  <|@  <|@
f <@~|@floating>@ <|@
tid v588 <|@
d <@d|@=== Debug Properties ===
displacement: 72
stamp: void*
stride: S4
=== Inputs ===
base: a124 
index: j528 
=== Succesors ===
=== Usages ===
v452 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a124 index: j528  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v452 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v280 
address: v588 
lastLocationAccess: - 
value: i42 
stateAfter: - 
=== Succesors ===
next: v458 
=== Usages ===
=== Predecessor ===
v446 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v280 address: v588 lastLocationAccess: - value: i42 stateAfter: - #next: v458  <|@  <|@
f <@~|@floating>@ <|@
tid v589 <|@
d <@d|@=== Debug Properties ===
displacement: 76
stamp: void*
stride: S4
=== Inputs ===
base: a124 
index: j528 
=== Succesors ===
=== Usages ===
v458 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a124 index: j528  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v458 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v280 
address: v589 
lastLocationAccess: - 
value: i42 
stateAfter: - 
=== Succesors ===
next: v271 
=== Usages ===
=== Predecessor ===
v452 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v280 address: v589 lastLocationAccess: - value: i42 stateAfter: - #next: v271  <|@  <|@
f <@~|@floating>@ <|@
tid i464 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 16
stableDimension: 0
stamp: i32 [16]
stampKind: i32
value: int[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
i479 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i479 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 62]
stamp: i32
=== Inputs ===
x: i272 
y: i464 
=== Succesors ===
=== Usages ===
i272 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i272 y: i464  <|@  <|@
f <@*|@fixed>@ <|@
tid v271 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 46]
stamp: void
=== Inputs ===
loopBegin: v265 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v458 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v265  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606753486221175845
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v267 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v265 
=== Succesors ===
next: v301 
=== Usages ===
=== Predecessor ===
v269 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v265 #next: v301  <|@  <|@
f <@*|@fixed>@ <|@
tid v301 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v285 
=== Predecessor ===
v267 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606840135379518264
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i292 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 46]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v285 
values: i272 i290 
=== Succesors ===
=== Usages ===
v286 i290 v574 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v285 values: i272 i290  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v285 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 30
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 19.999102654004776
loopType: POST_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 46]
osrLoop: false
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v301 
=== Succesors ===
next: v289 
=== Usages ===
v287 v291 i292 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v301 #next: v289  <|@  <|@
f <@~|@floating>@ <|@
tid v286 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 52]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@4dc6bd49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i292 
y: i510 
=== Succesors ===
=== Usages ===
v289 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i292 y: i510  <|@  <|@
f <@*|@fixed>@ <|@
tid v289 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 52]
profileData: INJECTED designatedSuccessorProbability: 0.01
stamp: void
=== Inputs ===
condition: v286 
=== Succesors ===
trueSuccessor: v288 
falseSuccessor: v287 
=== Usages ===
=== Predecessor ===
v285 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v286 #trueSuccessor: v288 #falseSuccessor: v287  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699167914968223
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v288 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 55]
stamp: void
=== Inputs ===
=== Succesors ===
next: v297 
=== Usages ===
v300 
=== Predecessor ===
v289 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v297  <|@  <|@
f <@~|@floating>@ <|@
tid v300 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
=== Inputs ===
guards: v501 v288 
=== Succesors ===
=== Usages ===
v297 
=== Predecessor ===
- >@ <|@
instruction <@MultiGuard|@jdk.graal.compiler.nodes.extended.MultiGuardNode>@ guards: v501 v288  <|@  <|@
f <@~|@floating>@ <|@
tid v574 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a124 
index: i292 
=== Succesors ===
=== Usages ===
v297 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a124 index: i292  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v297 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v300 
address: v574 
lastLocationAccess: - 
value: i42 
stateAfter: - 
=== Succesors ===
next: v291 
=== Usages ===
=== Predecessor ===
v288 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v300 address: v574 lastLocationAccess: - value: i42 stateAfter: - #next: v291  <|@  <|@
f <@~|@floating>@ <|@
tid i290 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 62]
stamp: i32
=== Inputs ===
x: i292 
y: i45 
=== Succesors ===
=== Usages ===
i292 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i292 y: i45  <|@  <|@
f <@*|@fixed>@ <|@
tid v291 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 46]
stamp: void
=== Inputs ===
loopBegin: v285 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v297 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v285  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606753486221175845
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v287 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v285 
=== Succesors ===
next: v100 
=== Usages ===
=== Predecessor ===
v289 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v285 #next: v100  <|@  <|@
f <@*|@fixed>@ <|@
tid v100 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v99 
=== Predecessor ===
v287 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B3" 
    successors "B19" "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v99 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v100 v101 
=== Succesors ===
next: a512 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v100 v101 #next: a512  <|@  <|@
f <@~|@floating>@ <|@
tid v565 <|@
d <@d|@=== Debug Properties ===
displacement: 68
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a512 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a512 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# java.util.regex.IntHashSet[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Matcher.localsPos
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1762) [bci: 72]
stamp: n# java.util.regex.IntHashSet[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v565 
lastLocationAccess: - 
=== Succesors ===
next: i513 
=== Usages ===
v566 
=== Predecessor ===
v99 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v565 lastLocationAccess: - #next: i513  <|@  <|@
tid ?103 <|@
d <@d|@=== Debug Properties ===
bci: 68
bytecode: iconst_0
code: ResolvedJavaMethodBytecode<Matcher.search(int)>
localsSize: 3
locksSize: 0
sourceFile: Matcher.java
sourceLine: 1762
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i2 
=== Succesors ===
=== Usages ===
v591 i513 a515 v526 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2  <|@  <|@
f <@~|@floating>@ <|@
tid v566 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a512 
=== Succesors ===
=== Usages ===
i513 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a512  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i513 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-40203|0xffffffffffff62f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1762) [bci: 75]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?103 
guard: - 
address: v566 
lastLocationAccess: - 
=== Succesors ===
next: a514 
=== Usages ===
v87 
=== Predecessor ===
a512 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?103 guard: - address: v566 lastLocationAccess: - #next: a514  <|@  <|@
f <@~|@floating>@ <|@
tid v568 <|@
d <@d|@=== Debug Properties ===
displacement: 52
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a514 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a514 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# java.util.regex.Pattern
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Matcher.parentPattern
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 109]
stamp: n# java.util.regex.Pattern
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v568 
lastLocationAccess: - 
=== Succesors ===
next: a515 
=== Usages ===
v569 
=== Predecessor ===
i513 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v568 lastLocationAccess: - #next: a515  <|@  <|@
f <@~|@floating>@ <|@
tid v569 <|@
d <@d|@=== Debug Properties ===
displacement: 52
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a514 
=== Succesors ===
=== Usages ===
a515 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a514  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a515 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.regex.Pattern$Node
barrierType: NONE
deoptReasonAndAction: int[-43275|0xffffffffffff56f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern.root
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 112]
stamp: n java.util.regex.Pattern$Node
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?103 
guard: - 
address: v569 
lastLocationAccess: - 
=== Succesors ===
next: v526 
=== Usages ===
a173 v590 
=== Predecessor ===
a514 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?103 guard: - address: v569 lastLocationAccess: - #next: v526  <|@  <|@
f <@~|@floating>@ <|@
tid v590 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a515 
=== Succesors ===
=== Usages ===
v526 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a515  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v526 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: [null]
deoptSpeculation: [null]
stamp: void
=== Inputs ===
stateBefore: ?103 
object: v590 
=== Succesors ===
next: v262 
=== Usages ===
=== Predecessor ===
a515 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?103 object: v590 #next: v262  <|@  <|@
f <@~|@floating>@ <|@
tid v87 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1762) [bci: 76]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i513 
y: i4 
=== Succesors ===
=== Usages ===
v262 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i513 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v262 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1762) [bci: 76]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v87 
=== Succesors ===
trueSuccessor: v260 
falseSuccessor: v261 
=== Usages ===
=== Predecessor ===
v526 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v87 #trueSuccessor: v260 #falseSuccessor: v261  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v260 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1766) [bci: 103]
stamp: void
=== Inputs ===
=== Succesors ===
next: v163 
=== Usages ===
=== Predecessor ===
v262 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v163  <|@  <|@
f <@~|@floating>@ <|@
tid v567 <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v163 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v163 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Matcher.acceptMode
location: Matcher.acceptMode
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1766) [bci: 105]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v567 
lastLocationAccess: - 
value: i4 
stateAfter: - 
=== Succesors ===
next: a516 
=== Usages ===
=== Predecessor ===
v260 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v567 lastLocationAccess: - value: i4 stateAfter: - #next: a516  <|@  <|@
f <@~|@floating>@ <|@
tid v570 <|@
d <@d|@=== Debug Properties ===
displacement: 60
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a516 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a516 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Matcher.text
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 118]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v570 
lastLocationAccess: - 
=== Succesors ===
next: i66 
=== Usages ===
a177 
=== Predecessor ===
v163 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v570 lastLocationAccess: - #next: i66  <|@  <|@
f <@~|@floating>@ <|@
tid a173 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 112]
op: Uncompress
stamp: a java.util.regex.Pattern$Node
=== Inputs ===
value: a515 
=== Succesors ===
=== Usages ===
v181 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a515  <|@  <|@
f <@~|@floating>@ <|@
tid a177 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 118]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a516 
=== Succesors ===
=== Usages ===
v181 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a516  <|@  <|@
tid v181 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
referencedType: [null]
returnStamp: i32 [0 - 1] bits:0...0x
signature: [HotSpotType<Ljava/util/regex/Pattern$Node;, resolved>, UnresolvedJavaType<Ljava/util/regex/Matcher;>, HotSpotResolvedPrimitiveType<int>, UnresolvedJavaType<Ljava/lang/CharSequence;>]
stamp: void
targetMethod: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>
=== Inputs ===
arguments: a173 a1 i2 a177 
=== Succesors ===
=== Usages ===
i66 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a173 a1 i2 a177  <|@  <|@
tid ?263 <|@
d <@d|@=== Debug Properties ===
bci: 121
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<Matcher.search(int)>
localsSize: 3
locksSize: 0
sourceFile: Matcher.java
sourceLine: 1767
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
i66 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i66 <|@
d <@d|@=== Debug Properties ===
bci: 121
identity: ANY_LOCATION
inlineControl: Normal
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
polymorphic: false
stamp: i32 [0 - 1] bits:0...0x
targetMethod: Direct#Pattern$Node.match
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v181 
stateDuring: ?263 
=== Succesors ===
next: v71 
=== Usages ===
v85 v68 
=== Predecessor ===
a516 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v181 stateDuring: ?263 #next: v71  <|@  <|@
f <@~|@floating>@ <|@
tid v68 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1768) [bci: 126]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i66 
y: i4 
=== Succesors ===
=== Usages ===
v71 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i66 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v71 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1768) [bci: 126]
profileData: PROFILED designatedSuccessorProbability: 3.0308973238957204E-4
stamp: void
=== Inputs ===
condition: v68 
=== Succesors ===
trueSuccessor: v70 
falseSuccessor: v69 
=== Usages ===
=== Predecessor ===
i66 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v68 #trueSuccessor: v70 #falseSuccessor: v69  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4554226642368960512
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v70 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1769) [bci: 129]
stamp: void
=== Inputs ===
=== Succesors ===
next: v190 
=== Usages ===
=== Predecessor ===
v71 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v190  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v190 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Matcher.first
location: Matcher.first
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1769) [bci: 131]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v559 
lastLocationAccess: - 
value: i42 
stateAfter: - 
=== Succesors ===
next: v76 
=== Usages ===
=== Predecessor ===
v70 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v559 lastLocationAccess: - value: i42 stateAfter: - #next: v76  <|@  <|@
f <@*|@fixed>@ <|@
tid v76 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1770) [bci: 134]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v75 
=== Predecessor ===
v190 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4607179688810405709
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v69 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1770) [bci: 134]
stamp: void
=== Inputs ===
=== Succesors ===
next: v74 
=== Usages ===
=== Predecessor ===
v71 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v74  <|@  <|@
f <@*|@fixed>@ <|@
tid v74 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1770) [bci: 134]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v75 
=== Predecessor ===
v69 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B20" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v75 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1770) [bci: 134]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v74 v76 
=== Succesors ===
next: i517 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v74 v76 #next: i517  <|@  <|@
f <@~|@floating>@ <|@
tid v571 <|@
d <@d|@=== Debug Properties ===
displacement: 32
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i517 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i517 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Matcher.last
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1770) [bci: 136]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v571 
lastLocationAccess: - 
=== Succesors ===
next: v185 
=== Usages ===
v185 
=== Predecessor ===
v75 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v571 lastLocationAccess: - #next: v185  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v185 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Matcher.oldLast
location: Matcher.oldLast
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1770) [bci: 139]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v560 
lastLocationAccess: - 
value: i517 
stateAfter: - 
=== Succesors ===
next: i518 
=== Usages ===
=== Predecessor ===
i517 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v560 lastLocationAccess: - value: i517 stateAfter: - #next: i518  <|@  <|@
f <@~|@floating>@ <|@
tid v572 <|@
d <@d|@=== Debug Properties ===
displacement: 44
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i518 v189 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i518 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Matcher.modCount
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1771) [bci: 144]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v572 
lastLocationAccess: - 
=== Succesors ===
next: v189 
=== Usages ===
i82 
=== Predecessor ===
v185 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v572 lastLocationAccess: - #next: v189  <|@  <|@
f <@~|@floating>@ <|@
tid i82 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1771) [bci: 148]
stamp: i32
=== Inputs ===
x: i518 
y: i45 
=== Succesors ===
=== Usages ===
v189 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i518 y: i45  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v189 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Matcher.modCount
location: Matcher.modCount
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1771) [bci: 149]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v572 
lastLocationAccess: - 
value: i82 
stateAfter: - 
=== Succesors ===
next: v85 
=== Usages ===
=== Predecessor ===
i518 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v572 lastLocationAccess: - value: i82 stateAfter: - #next: v85  <|@  <|@
f <@*|@fixed>@ <|@
tid v85 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1772) [bci: 153]
stamp: void
=== Inputs ===
memoryMap: - 
result: i66 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v189 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: i66  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v261 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1762) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v591 
=== Usages ===
=== Predecessor ===
v262 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v591  <|@  <|@
f <@*|@fixed>@ <|@
tid v591 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 259
mayConvertToGuard: true
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1762) [bci: 75]
reason: UnreachedCode
speculation: {0x0000000000000294[index: 20, len: 20, hash: 0xd8afd966]: UnreachedCode@5[HotSpotMethod<Matcher.search(int)>, 79]}
stamp: void
=== Inputs ===
stateBefore: ?103 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v261 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?103  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v239 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
=== Inputs ===
=== Succesors ===
next: v238 
=== Usages ===
=== Predecessor ===
v506 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v238  <|@  <|@
tid ?27 <|@
d <@d|@=== Debug Properties ===
bci: 44
bytecode: iconst_0
code: ResolvedJavaMethodBytecode<Matcher.search(int)>
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1759) [bci: 41]
sourceFile: Matcher.java
sourceLine: 1760
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i2 
=== Succesors ===
=== Usages ===
v238 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2  <|@  <|@
f <@*|@fixed>@ <|@
tid v238 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 144
mayConvertToGuard: true
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
reason: BoundsCheckException
speculation: {0x0000000000004618[index: 560, len: 24, hash: 0x4cda229b]: GuardMovement@2[HotSpotMethod<Matcher.search(int)>, 46, BoundsCheckException]}
stamp: void
=== Inputs ===
stateBefore: ?27 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v239 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?27  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGeneration"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@bf3c5e0 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV [v0|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.search(Matcher.java:1755) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction v3|DWORD = MOV [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction MOVB [v0|QWORD[.] + 48] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction MOVB [v0|QWORD[.] + 49] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 28], y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v4|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = CMOVE (falseValue: v4|DWORD, ~trueValue: v1|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 36], y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v3|DWORD, y: v3|DWORD) trueDestinationProbability: 0.04762108250417496 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606753486221175844
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = DEC v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOVSXD v6|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOV v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|QWORD, y: v7|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B24" 
    xhandlers
    flags 
    probability 4602249886593805348
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v3|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B24 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602249886593805348
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602249886593805348
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606753486221175844
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v2|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v3|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v3|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@16d1397a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" 
    successors "B10" "B11" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606840135379518263
    begin_IR
      LIR
      nr   -1  <|@ instruction [v11|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v9|DWORD, y: v11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699167914968222
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v10|QWORD[.] + v11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = INC v11|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v12|DWORD] destination: B10 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4606753486221175844
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = LEA [v3|DWORD - 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v11|DWORD] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B13" "B14" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608039995292795068
    begin_IR
      LIR
      nr   -1  <|@ instruction [v14|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v14|DWORD) trueDestinationProbability: 0.19996410454965907 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597744362548122956
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v10|QWORD[.] + v14|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOVSXD v14|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 20] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 24] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 28] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 32] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 36] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 40] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 44] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 48] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 52] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 56] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 60] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 64] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 68] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 72] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 76] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = LEA [v14|DWORD + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v16|DWORD] destination: B13 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606753486221175845
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v14|DWORD] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606840135379518264
    begin_IR
      LIR
      nr   -1  <|@ instruction [v17|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v17|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699167914968223
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v10|QWORD[.] + v17|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = INC v17|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v18|DWORD] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606753486221175845
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B3" 
    successors "B19" "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v19|DWORD[_] = MOV [v0|QWORD[.] + 68] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction v20|DWORD = MOV [v19|DWORD[_] * 8 + 12] size: DWORD state [bci:68] <|@ <|@
      nr   -1  <|@ instruction v21|DWORD[_] = MOV [v0|QWORD[.] + 52] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction v22|DWORD[_] = MOV [v21|DWORD[_] * 8 + 52] size: DWORD state [bci:68] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction NULLCHECK [v22|DWORD[_] * 8] state [bci:68] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v20|DWORD, y: v20|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|DWORD[_] = MOV [v0|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v24|QWORD[.] = UNCOMPRESSPOINTER (input: v22|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@16d1397a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v25|QWORD[.] = UNCOMPRESSPOINTER (input: v23|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@16d1397a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v24|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE v25|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:121] <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v26|DWORD, y: v26|DWORD) trueDestinationProbability: 3.0308973238957204E-4 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4607179688810405709
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B20" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = MOV [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 36], y: v27|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction INC [v0|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v26|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B18" 
    xhandlers
    flags 
    probability 4587023742297259456
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4554226642368960512
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -36891 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 17944 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.search(Matcher.java:1760) [bci: 44]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:44] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -66323 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:68] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -65043 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.search(Matcher.java:1757) [bci: 10]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_0      
     2: putfield      #86         // hitEnd:boolean
     5: aload_0       
     6: iconst_0      
     7: putfield      #87         // requireEnd:boolean
    10: iload_1       
    11: ifge          18
    14: iconst_0      
    15: goto          19
    18: iload_1       
    19: istore_1      
    20: aload_0       
    21: iload_1       
    22: putfield      #2          // first:int
    25: aload_0       
    26: aload_0       
    27: getfield      #4          // oldLast:int
    30: ifge          37
    33: iload_1       
    34: goto          41
    37: aload_0       
    38: getfield      #4          // oldLast:int
    41: putfield      #4          // oldLast:int
    44: iconst_0      
    45: istore_2      
    46: iload_2       
    47: aload_0       
    48: getfield      #12         // groups:int[]
    51: arraylength   
    52: if_icmpge     68
    55: aload_0       
    56: getfield      #12         // groups:int[]
    59: iload_2       
    60: iconst_m1     
    61: iastore       
    62: iinc          
    65: goto          46
    68: iconst_0      
    69: istore_2      
    70: iload_2       
    71: aload_0       
    72: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    75: arraylength   
    76: if_icmpge     103
    79: aload_0       
    80: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    83: iload_2       
    84: aaload        
    85: ifnull        97
    88: aload_0       
    89: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    92: iload_2       
    93: aaload        
    94: invokevirtual #32         // java.util.regex.IntHashSet.clear:()void
    97: iinc          
   100: goto          70
   103: aload_0       
   104: iconst_0      
   105: putfield      #1          // acceptMode:int
   108: aload_0       
   109: getfield      #8          // parentPattern:java.util.regex.Pattern
   112: getfield      #88         // java.util.regex.Pattern.root:java.util.regex.Pattern$Node
   115: aload_0       
   116: iload_1       
   117: aload_0       
   118: getfield      #9          // text:java.lang.CharSequence
   121: invokevirtual #89         // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
   124: istore_2      
   125: iload_2       
   126: ifne          134
   129: aload_0       
   130: iconst_m1     
   131: putfield      #2          // first:int
   134: aload_0       
   135: aload_0       
   136: getfield      #3          // last:int
   139: putfield      #4          // oldLast:int
   142: aload_0       
   143: dup           
   144: getfield      #31         // modCount:int
   147: iconst_1      
   148: iadd          
   149: putfield      #31         // modCount:int
   152: iload_2       
   153: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a509 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: a509  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# java.util.regex.Matcher
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v557 v570 v558 ?9 v559 v181 v560 v572 v565 ?263 v567 ?27 v571 v561 ?103 v568 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v561 <|@
result [v0|QWORD[.] + 56] <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a509 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a509 <|@
result v2|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# int[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Matcher.groups
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 48]
stamp: n# int[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v561 
lastLocationAccess: - 
=== Succesors ===
next: i510 
=== Usages ===
a124 v562 v563 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v561 lastLocationAccess: - #next: i510  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
result v1|DWORD <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 ?27 ?9 v10 v116 v181 i519 ?103 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_0
code: ResolvedJavaMethodBytecode<Matcher.search(int)>
localsSize: 3
locksSize: 0
sourceFile: Matcher.java
sourceLine: 1755
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i2 
=== Succesors ===
=== Usages ===
i510 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2  <|@  <|@
f <@~|@floating>@ <|@
tid v562 <|@
result [v2|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a509 
=== Succesors ===
=== Usages ===
i510 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a509  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i510 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-32267|0xffffffffffff81f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 51]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v562 
lastLocationAccess: - 
=== Succesors ===
next: v110 
=== Usages ===
i308 v223 v132 j214 i231 i483 v286 v307 
=== Predecessor ===
a509 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v562 lastLocationAccess: - #next: v110  <|@  <|@
f <@~|@floating>@ <|@
tid v557 <|@
result [v0|QWORD[.] + 48] <|@
d <@d|@=== Debug Properties ===
displacement: 48
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v110 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i191 <|@
result byte[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1755) [bci: 2]
rawvalue: 0
stableDimension: 0
stamp: i8 [0]
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v110 v113 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v110 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Matcher.hitEnd
location: Matcher.hitEnd
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1755) [bci: 2]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v557 
lastLocationAccess: - 
value: i191 
stateAfter: - 
=== Succesors ===
next: v113 
=== Usages ===
=== Predecessor ===
i510 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v557 lastLocationAccess: - value: i191 stateAfter: - #next: v113  <|@  <|@
f <@~|@floating>@ <|@
tid v558 <|@
result [v0|QWORD[.] + 49] <|@
d <@d|@=== Debug Properties ===
displacement: 49
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v113 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v113 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Matcher.requireEnd
location: Matcher.requireEnd
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1756) [bci: 7]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v558 
lastLocationAccess: - 
value: i191 
stateAfter: - 
=== Succesors ===
next: v257 
=== Usages ===
=== Predecessor ===
v110 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v558 lastLocationAccess: - value: i191 stateAfter: - #next: v257  <|@  <|@
f <@~|@floating>@ <|@
tid i4 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1755) [bci: 1]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v132 v68 v10 v15 v163 v87 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v10 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1757) [bci: 11]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@4dc6bd49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i4 
=== Succesors ===
=== Usages ===
v257 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i2 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v257 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1757) [bci: 11]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v10 
=== Succesors ===
trueSuccessor: v255 
falseSuccessor: v256 
=== Usages ===
=== Predecessor ===
v113 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v10 #trueSuccessor: v255 #falseSuccessor: v256  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@bf3c5e0 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV [v0|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.search(Matcher.java:1755) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction v3|DWORD = MOV [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction MOVB [v0|QWORD[.] + 48] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction MOVB [v0|QWORD[.] + 49] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v255 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1757) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v254 
=== Usages ===
=== Predecessor ===
v257 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v254  <|@  <|@
tid ?9 <|@
d <@d|@=== Debug Properties ===
bci: 10
bytecode: iload_1
code: ResolvedJavaMethodBytecode<Matcher.search(int)>
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1756) [bci: 7]
sourceFile: Matcher.java
sourceLine: 1757
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i2 
=== Succesors ===
=== Usages ===
v254 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2  <|@  <|@
f <@*|@fixed>@ <|@
tid v254 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 0
mayConvertToGuard: true
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1757) [bci: 11]
reason: UnreachedCode
speculation: {0x0000000000000014[index: 0, len: 20, hash: 0xd8afd925]: UnreachedCode@5[HotSpotMethod<Matcher.search(int)>, 14]}
stamp: void
=== Inputs ===
stateBefore: ?9 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v255 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?9  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -65043 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.search(Matcher.java:1757) [bci: 10]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v256 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1757) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v116 
=== Usages ===
=== Predecessor ===
v257 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v116  <|@  <|@
f <@~|@floating>@ <|@
tid v559 <|@
result [v0|QWORD[.] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v116 v190 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v116 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Matcher.first
location: Matcher.first
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1758) [bci: 22]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v559 
lastLocationAccess: - 
value: i2 
stateAfter: - 
=== Succesors ===
next: i511 
=== Usages ===
=== Predecessor ===
v256 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v559 lastLocationAccess: - value: i2 stateAfter: - #next: i511  <|@  <|@
f <@~|@floating>@ <|@
tid v560 <|@
result [v0|QWORD[.] + 36] <|@
d <@d|@=== Debug Properties ===
displacement: 36
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i511 v120 v185 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i511 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Matcher.oldLast
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1759) [bci: 27]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v560 
lastLocationAccess: - 
=== Succesors ===
next: v120 
=== Usages ===
v15 i519 
=== Predecessor ===
v116 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v560 lastLocationAccess: - #next: v120  <|@  <|@
f <@~|@floating>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1759) [bci: 30]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@4dc6bd49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i511 
y: i4 
=== Succesors ===
=== Usages ===
i519 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i511 y: i4  <|@  <|@
f <@~|@floating>@ <|@
tid i519 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1759) [bci: 30]
stamp: i32
=== Inputs ===
condition: v15 
trueValue: i2 
falseValue: i511 
=== Succesors ===
=== Usages ===
v120 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v15 trueValue: i2 falseValue: i511  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v120 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Matcher.oldLast
location: Matcher.oldLast
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1759) [bci: 41]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v560 
lastLocationAccess: - 
value: i519 
stateAfter: - 
=== Succesors ===
next: v93 
=== Usages ===
=== Predecessor ===
i511 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v560 lastLocationAccess: - value: i519 stateAfter: - #next: v93  <|@  <|@
f <@~|@floating>@ <|@
tid v132 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i510 
y: i4 
=== Succesors ===
=== Usages ===
v93 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i510 y: i4  <|@  <|@
f <@~|@floating>@ <|@
tid i45 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 62]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i46 i82 i104 i290 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i42 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 60]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1]
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v150 v190 v141 i231 v277 v297 v321 v343 v350 v368 v375 v382 v388 v412 v419 v426 v432 v440 v446 v452 v458 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v93 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 52]
profileData: PROFILED designatedSuccessorProbability: 0.04762108250417496
stamp: void
=== Inputs ===
condition: v132 
=== Succesors ===
trueSuccessor: v91 
falseSuccessor: v92 
=== Usages ===
=== Predecessor ===
v120 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v132 #trueSuccessor: v91 #falseSuccessor: v92  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 28], y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v4|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = CMOVE (falseValue: v4|DWORD, ~trueValue: v1|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 36], y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v3|DWORD, y: v3|DWORD) trueDestinationProbability: 0.04762108250417496 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B18" 
    xhandlers
    flags 
    probability 4587023742297259456
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v91 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
stamp: void
=== Inputs ===
=== Succesors ===
next: v101 
=== Usages ===
=== Predecessor ===
v93 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v101  <|@  <|@
f <@*|@fixed>@ <|@
tid v101 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v99 
=== Predecessor ===
v91 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606753486221175844
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v92 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 55]
stamp: void
=== Inputs ===
=== Succesors ===
next: v508 
=== Usages ===
v141 
=== Predecessor ===
v93 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v508  <|@  <|@
f <@~|@floating>@ <|@
tid i231 <|@
result v6|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-1 - 2147483646]
=== Inputs ===
x: i510 
y: i42 
=== Succesors ===
=== Usages ===
j221 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i510 y: i42  <|@  <|@
f <@~|@floating>@ <|@
tid j221 <|@
result v7|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [-1 - 2147483646]
=== Inputs ===
value: i231 
=== Succesors ===
=== Usages ===
v222 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i231  <|@  <|@
f <@~|@floating>@ <|@
tid j214 <|@
result v8|QWORD <|@
d <@d|@=== Debug Properties ===
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i510 
=== Succesors ===
=== Usages ===
v222 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i510  <|@  <|@
f <@~|@floating>@ <|@
tid v222 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@40aab068
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j221 
y: j214 
=== Succesors ===
=== Usages ===
v508 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j221 y: j214  <|@  <|@
f <@~|@floating>@ <|@
tid i136 <|@
result int[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
rawvalue: 2
stableDimension: 0
stamp: i32 [2]
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i308 v223 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v508 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
profileData: INJECTED designatedSuccessorProbability: 0.5
stamp: void
=== Inputs ===
condition: v222 
=== Succesors ===
trueSuccessor: v504 
falseSuccessor: v507 
=== Usages ===
=== Predecessor ===
v92 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v222 #trueSuccessor: v504 #falseSuccessor: v507  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = DEC v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOVSXD v6|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOV v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|QWORD, y: v7|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602249886593805348
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v504 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
=== Inputs ===
=== Succesors ===
next: v502 
=== Usages ===
=== Predecessor ===
v508 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v502  <|@  <|@
f <@*|@fixed>@ <|@
tid v502 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v501 
=== Predecessor ===
v504 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B24" 
    xhandlers
    flags 
    probability 4602249886593805348
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v507 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
=== Inputs ===
=== Succesors ===
next: v506 
=== Usages ===
=== Predecessor ===
v508 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v506  <|@  <|@
f <@~|@floating>@ <|@
tid v223 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@40aab068
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i510 
y: i136 
=== Succesors ===
=== Usages ===
v506 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i510 y: i136  <|@  <|@
f <@*|@fixed>@ <|@
tid v506 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v223 
=== Succesors ===
trueSuccessor: v505 
falseSuccessor: v239 
=== Usages ===
=== Predecessor ===
v507 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v223 #trueSuccessor: v505 #falseSuccessor: v239  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v3|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B24 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602249886593805348
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v505 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
=== Inputs ===
=== Succesors ===
next: v503 
=== Usages ===
=== Predecessor ===
v506 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v503  <|@  <|@
f <@*|@fixed>@ <|@
tid v503 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v501 
=== Predecessor ===
v505 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606753486221175844
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v501 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v502 v503 
=== Succesors ===
next: v141 
=== Usages ===
v228 v300 v280 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v502 v503 #next: v141  <|@  <|@
f <@~|@floating>@ <|@
tid v563 <|@
result [v2|DWORD[_] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a509 
=== Succesors ===
=== Usages ===
v141 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a509  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v141 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v92 
address: v563 
lastLocationAccess: - 
value: i42 
stateAfter: - 
=== Succesors ===
next: v29 
=== Usages ===
=== Predecessor ===
v501 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v92 address: v563 lastLocationAccess: - value: i42 stateAfter: - #next: v29  <|@  <|@
f <@~|@floating>@ <|@
tid i306 <|@
result int[3|0x3] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 3
stableDimension: 0
stamp: i32 [3]
stampKind: i32
value: int[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
v307 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v307 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@40aab068
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i510 
y: i306 
=== Succesors ===
=== Usages ===
i308 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i510 y: i306  <|@  <|@
f <@~|@floating>@ <|@
tid i308 <|@
result v9|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 2] bits:0...0xx
=== Inputs ===
condition: v307 
trueValue: i510 
falseValue: i136 
=== Succesors ===
=== Usages ===
v35 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v307 trueValue: i510 falseValue: i136  <|@  <|@
f <@~|@floating>@ <|@
tid a124 <|@
result v10|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 48]
op: Uncompress
stamp: a# int[]
=== Inputs ===
value: a509 
=== Succesors ===
=== Usages ===
v589 v588 v587 v564 v573 v574 v575 v576 v577 v578 v579 v580 v581 v582 v583 v584 v585 v586 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a509  <|@  <|@
f <@*|@fixed>@ <|@
tid v29 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 46]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v30 
=== Predecessor ===
v141 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v2|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v3|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v3|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@16d1397a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" 
    successors "B10" "B11" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606840135379518263
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i104 <|@
result v11|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 46]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v30 
values: i45 i46 
=== Succesors ===
=== Usages ===
i46 v35 v564 i272 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v30 values: i45 i46  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: -1
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 19.999102654004776
loopType: PRE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 46]
osrLoop: false
peelings: 1
rotated: false
splits: 2
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v29 
=== Succesors ===
next: v40 
=== Usages ===
i104 v37 v47 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v29 #next: v40  <|@  <|@
f <@~|@floating>@ <|@
tid v35 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 52]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@4dc6bd49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i104 
y: i308 
=== Succesors ===
=== Usages ===
v40 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i104 y: i308  <|@  <|@
f <@*|@fixed>@ <|@
tid v40 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 52]
profileData: INJECTED designatedSuccessorProbability: 0.01
stamp: void
=== Inputs ===
condition: v35 
=== Succesors ===
trueSuccessor: v39 
falseSuccessor: v37 
=== Usages ===
=== Predecessor ===
v30 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v35 #trueSuccessor: v39 #falseSuccessor: v37  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v11|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v9|DWORD, y: v11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699167914968222
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v39 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 55]
stamp: void
=== Inputs ===
=== Succesors ===
next: v150 
=== Usages ===
v228 
=== Predecessor ===
v40 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v150  <|@  <|@
f <@~|@floating>@ <|@
tid v228 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
=== Inputs ===
guards: v501 v39 
=== Succesors ===
=== Usages ===
v150 
=== Predecessor ===
- >@ <|@
instruction <@MultiGuard|@jdk.graal.compiler.nodes.extended.MultiGuardNode>@ guards: v501 v39  <|@  <|@
f <@~|@floating>@ <|@
tid v564 <|@
result [v10|QWORD[.] + v11|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a124 
index: i104 
=== Succesors ===
=== Usages ===
v150 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a124 index: i104  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v150 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v228 
address: v564 
lastLocationAccess: - 
value: i42 
stateAfter: - 
=== Succesors ===
next: v47 
=== Usages ===
=== Predecessor ===
v39 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v228 address: v564 lastLocationAccess: - value: i42 stateAfter: - #next: v47  <|@  <|@
f <@~|@floating>@ <|@
tid i46 <|@
result v12|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 62]
stamp: i32
=== Inputs ===
x: i104 
y: i45 
=== Succesors ===
=== Usages ===
i104 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i104 y: i45  <|@  <|@
f <@*|@fixed>@ <|@
tid v47 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 46]
stamp: void
=== Inputs ===
loopBegin: v30 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v150 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v30  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v10|QWORD[.] + v11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = INC v11|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v12|DWORD] destination: B10 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4606753486221175844
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v281 
=== Usages ===
=== Predecessor ===
v40 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v281  <|@  <|@
f <@~|@floating>@ <|@
tid i482 <|@
result int[-16|0xfffffffffffffff0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -16
stableDimension: 0
stamp: i32 [-16]
stampKind: i32
value: int[-16|0xfffffffffffffff0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i483 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i483 <|@
result v13|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-16 - 2147483631]
=== Inputs ===
x: i510 
y: i482 
=== Succesors ===
=== Usages ===
v266 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i510 y: i482  <|@  <|@
f <@*|@fixed>@ <|@
tid v281 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v265 
=== Predecessor ===
v37 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = LEA [v3|DWORD - 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v11|DWORD] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B13" "B14" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608039995292795068
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i272 <|@
result v14|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 46]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v265 
values: i104 i479 
=== Succesors ===
=== Usages ===
v266 j528 v573 i292 i479 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v265 values: i104 i479  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v265 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 30
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 19.999102654004776
loopType: MAIN_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 46]
osrLoop: false
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 16
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v281 
=== Succesors ===
next: v269 
=== Usages ===
v267 v271 i272 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v281 #next: v269  <|@  <|@
f <@~|@floating>@ <|@
tid v266 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 52]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@4dc6bd49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i272 
y: i483 
=== Succesors ===
=== Usages ===
v269 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i272 y: i483  <|@  <|@
f <@*|@fixed>@ <|@
tid v269 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 52]
profileData: INJECTED designatedSuccessorProbability: 0.19996410454965907
stamp: void
=== Inputs ===
condition: v266 
=== Succesors ===
trueSuccessor: v268 
falseSuccessor: v267 
=== Usages ===
=== Predecessor ===
v265 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v266 #trueSuccessor: v268 #falseSuccessor: v267  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v14|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v14|DWORD) trueDestinationProbability: 0.19996410454965907 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597744362548122956
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v268 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 55]
stamp: void
=== Inputs ===
=== Succesors ===
next: v277 
=== Usages ===
v280 
=== Predecessor ===
v269 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v277  <|@  <|@
f <@~|@floating>@ <|@
tid v280 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
=== Inputs ===
guards: v501 v268 
=== Succesors ===
=== Usages ===
v458 v277 v432 v321 v452 v343 v412 v350 v446 v368 v426 v375 v440 v382 v419 v388 
=== Predecessor ===
- >@ <|@
instruction <@MultiGuard|@jdk.graal.compiler.nodes.extended.MultiGuardNode>@ guards: v501 v268  <|@  <|@
f <@~|@floating>@ <|@
tid v573 <|@
result [v10|QWORD[.] + v14|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a124 
index: i272 
=== Succesors ===
=== Usages ===
v277 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a124 index: i272  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v277 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v280 
address: v573 
lastLocationAccess: - 
value: i42 
stateAfter: - 
=== Succesors ===
next: v321 
=== Usages ===
=== Predecessor ===
v268 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v280 address: v573 lastLocationAccess: - value: i42 stateAfter: - #next: v321  <|@  <|@
f <@~|@floating>@ <|@
tid j528 <|@
result v15|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i272 
=== Succesors ===
=== Usages ===
v575 v576 v577 v578 v579 v580 v581 v582 v583 v584 v585 v586 v587 v588 v589 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i272  <|@  <|@
f <@~|@floating>@ <|@
tid v575 <|@
result [v10|QWORD[.] + v15|QWORD * 4 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S4
=== Inputs ===
base: a124 
index: j528 
=== Succesors ===
=== Usages ===
v321 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a124 index: j528  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v321 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v280 
address: v575 
lastLocationAccess: - 
value: i42 
stateAfter: - 
=== Succesors ===
next: v343 
=== Usages ===
=== Predecessor ===
v277 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v280 address: v575 lastLocationAccess: - value: i42 stateAfter: - #next: v343  <|@  <|@
f <@~|@floating>@ <|@
tid v576 <|@
result [v10|QWORD[.] + v15|QWORD * 4 + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S4
=== Inputs ===
base: a124 
index: j528 
=== Succesors ===
=== Usages ===
v343 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a124 index: j528  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v343 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v280 
address: v576 
lastLocationAccess: - 
value: i42 
stateAfter: - 
=== Succesors ===
next: v350 
=== Usages ===
=== Predecessor ===
v321 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v280 address: v576 lastLocationAccess: - value: i42 stateAfter: - #next: v350  <|@  <|@
f <@~|@floating>@ <|@
tid v577 <|@
result [v10|QWORD[.] + v15|QWORD * 4 + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
stamp: void*
stride: S4
=== Inputs ===
base: a124 
index: j528 
=== Succesors ===
=== Usages ===
v350 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a124 index: j528  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v350 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v280 
address: v577 
lastLocationAccess: - 
value: i42 
stateAfter: - 
=== Succesors ===
next: v368 
=== Usages ===
=== Predecessor ===
v343 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v280 address: v577 lastLocationAccess: - value: i42 stateAfter: - #next: v368  <|@  <|@
f <@~|@floating>@ <|@
tid v578 <|@
result [v10|QWORD[.] + v15|QWORD * 4 + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
stamp: void*
stride: S4
=== Inputs ===
base: a124 
index: j528 
=== Succesors ===
=== Usages ===
v368 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a124 index: j528  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v368 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v280 
address: v578 
lastLocationAccess: - 
value: i42 
stateAfter: - 
=== Succesors ===
next: v375 
=== Usages ===
=== Predecessor ===
v350 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v280 address: v578 lastLocationAccess: - value: i42 stateAfter: - #next: v375  <|@  <|@
f <@~|@floating>@ <|@
tid v579 <|@
result [v10|QWORD[.] + v15|QWORD * 4 + 36] <|@
d <@d|@=== Debug Properties ===
displacement: 36
stamp: void*
stride: S4
=== Inputs ===
base: a124 
index: j528 
=== Succesors ===
=== Usages ===
v375 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a124 index: j528  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v375 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v280 
address: v579 
lastLocationAccess: - 
value: i42 
stateAfter: - 
=== Succesors ===
next: v382 
=== Usages ===
=== Predecessor ===
v368 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v280 address: v579 lastLocationAccess: - value: i42 stateAfter: - #next: v382  <|@  <|@
f <@~|@floating>@ <|@
tid v580 <|@
result [v10|QWORD[.] + v15|QWORD * 4 + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S4
=== Inputs ===
base: a124 
index: j528 
=== Succesors ===
=== Usages ===
v382 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a124 index: j528  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v382 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v280 
address: v580 
lastLocationAccess: - 
value: i42 
stateAfter: - 
=== Succesors ===
next: v388 
=== Usages ===
=== Predecessor ===
v375 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v280 address: v580 lastLocationAccess: - value: i42 stateAfter: - #next: v388  <|@  <|@
f <@~|@floating>@ <|@
tid v581 <|@
result [v10|QWORD[.] + v15|QWORD * 4 + 44] <|@
d <@d|@=== Debug Properties ===
displacement: 44
stamp: void*
stride: S4
=== Inputs ===
base: a124 
index: j528 
=== Succesors ===
=== Usages ===
v388 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a124 index: j528  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v388 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v280 
address: v581 
lastLocationAccess: - 
value: i42 
stateAfter: - 
=== Succesors ===
next: v412 
=== Usages ===
=== Predecessor ===
v382 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v280 address: v581 lastLocationAccess: - value: i42 stateAfter: - #next: v412  <|@  <|@
f <@~|@floating>@ <|@
tid v582 <|@
result [v10|QWORD[.] + v15|QWORD * 4 + 48] <|@
d <@d|@=== Debug Properties ===
displacement: 48
stamp: void*
stride: S4
=== Inputs ===
base: a124 
index: j528 
=== Succesors ===
=== Usages ===
v412 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a124 index: j528  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v412 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v280 
address: v582 
lastLocationAccess: - 
value: i42 
stateAfter: - 
=== Succesors ===
next: v419 
=== Usages ===
=== Predecessor ===
v388 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v280 address: v582 lastLocationAccess: - value: i42 stateAfter: - #next: v419  <|@  <|@
f <@~|@floating>@ <|@
tid v583 <|@
result [v10|QWORD[.] + v15|QWORD * 4 + 52] <|@
d <@d|@=== Debug Properties ===
displacement: 52
stamp: void*
stride: S4
=== Inputs ===
base: a124 
index: j528 
=== Succesors ===
=== Usages ===
v419 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a124 index: j528  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v419 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v280 
address: v583 
lastLocationAccess: - 
value: i42 
stateAfter: - 
=== Succesors ===
next: v426 
=== Usages ===
=== Predecessor ===
v412 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v280 address: v583 lastLocationAccess: - value: i42 stateAfter: - #next: v426  <|@  <|@
f <@~|@floating>@ <|@
tid v584 <|@
result [v10|QWORD[.] + v15|QWORD * 4 + 56] <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S4
=== Inputs ===
base: a124 
index: j528 
=== Succesors ===
=== Usages ===
v426 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a124 index: j528  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v426 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v280 
address: v584 
lastLocationAccess: - 
value: i42 
stateAfter: - 
=== Succesors ===
next: v432 
=== Usages ===
=== Predecessor ===
v419 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v280 address: v584 lastLocationAccess: - value: i42 stateAfter: - #next: v432  <|@  <|@
f <@~|@floating>@ <|@
tid v585 <|@
result [v10|QWORD[.] + v15|QWORD * 4 + 60] <|@
d <@d|@=== Debug Properties ===
displacement: 60
stamp: void*
stride: S4
=== Inputs ===
base: a124 
index: j528 
=== Succesors ===
=== Usages ===
v432 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a124 index: j528  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v432 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v280 
address: v585 
lastLocationAccess: - 
value: i42 
stateAfter: - 
=== Succesors ===
next: v440 
=== Usages ===
=== Predecessor ===
v426 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v280 address: v585 lastLocationAccess: - value: i42 stateAfter: - #next: v440  <|@  <|@
f <@~|@floating>@ <|@
tid v586 <|@
result [v10|QWORD[.] + v15|QWORD * 4 + 64] <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S4
=== Inputs ===
base: a124 
index: j528 
=== Succesors ===
=== Usages ===
v440 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a124 index: j528  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v440 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v280 
address: v586 
lastLocationAccess: - 
value: i42 
stateAfter: - 
=== Succesors ===
next: v446 
=== Usages ===
=== Predecessor ===
v432 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v280 address: v586 lastLocationAccess: - value: i42 stateAfter: - #next: v446  <|@  <|@
f <@~|@floating>@ <|@
tid v587 <|@
result [v10|QWORD[.] + v15|QWORD * 4 + 68] <|@
d <@d|@=== Debug Properties ===
displacement: 68
stamp: void*
stride: S4
=== Inputs ===
base: a124 
index: j528 
=== Succesors ===
=== Usages ===
v446 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a124 index: j528  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v446 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v280 
address: v587 
lastLocationAccess: - 
value: i42 
stateAfter: - 
=== Succesors ===
next: v452 
=== Usages ===
=== Predecessor ===
v440 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v280 address: v587 lastLocationAccess: - value: i42 stateAfter: - #next: v452  <|@  <|@
f <@~|@floating>@ <|@
tid v588 <|@
result [v10|QWORD[.] + v15|QWORD * 4 + 72] <|@
d <@d|@=== Debug Properties ===
displacement: 72
stamp: void*
stride: S4
=== Inputs ===
base: a124 
index: j528 
=== Succesors ===
=== Usages ===
v452 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a124 index: j528  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v452 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v280 
address: v588 
lastLocationAccess: - 
value: i42 
stateAfter: - 
=== Succesors ===
next: v458 
=== Usages ===
=== Predecessor ===
v446 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v280 address: v588 lastLocationAccess: - value: i42 stateAfter: - #next: v458  <|@  <|@
f <@~|@floating>@ <|@
tid v589 <|@
result [v10|QWORD[.] + v15|QWORD * 4 + 76] <|@
d <@d|@=== Debug Properties ===
displacement: 76
stamp: void*
stride: S4
=== Inputs ===
base: a124 
index: j528 
=== Succesors ===
=== Usages ===
v458 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a124 index: j528  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v458 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v280 
address: v589 
lastLocationAccess: - 
value: i42 
stateAfter: - 
=== Succesors ===
next: v271 
=== Usages ===
=== Predecessor ===
v452 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v280 address: v589 lastLocationAccess: - value: i42 stateAfter: - #next: v271  <|@  <|@
f <@~|@floating>@ <|@
tid i464 <|@
result int[16|0x10] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 16
stableDimension: 0
stamp: i32 [16]
stampKind: i32
value: int[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
i479 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i479 <|@
result v16|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 62]
stamp: i32
=== Inputs ===
x: i272 
y: i464 
=== Succesors ===
=== Usages ===
i272 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i272 y: i464  <|@  <|@
f <@*|@fixed>@ <|@
tid v271 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 46]
stamp: void
=== Inputs ===
loopBegin: v265 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v458 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v265  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v10|QWORD[.] + v14|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOVSXD v14|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 20] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 24] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 28] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 32] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 36] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 40] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 44] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 48] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 52] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 56] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 60] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 64] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 68] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 72] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 76] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = LEA [v14|DWORD + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v16|DWORD] destination: B13 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606753486221175845
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v267 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v265 
=== Succesors ===
next: v301 
=== Usages ===
=== Predecessor ===
v269 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v265 #next: v301  <|@  <|@
f <@*|@fixed>@ <|@
tid v301 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v285 
=== Predecessor ===
v267 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v14|DWORD] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606840135379518264
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i292 <|@
result v17|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 46]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v285 
values: i272 i290 
=== Succesors ===
=== Usages ===
v286 i290 v574 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v285 values: i272 i290  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v285 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 30
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 19.999102654004776
loopType: POST_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 46]
osrLoop: false
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v301 
=== Succesors ===
next: v289 
=== Usages ===
v287 v291 i292 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v301 #next: v289  <|@  <|@
f <@~|@floating>@ <|@
tid v286 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 52]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@4dc6bd49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i292 
y: i510 
=== Succesors ===
=== Usages ===
v289 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i292 y: i510  <|@  <|@
f <@*|@fixed>@ <|@
tid v289 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 52]
profileData: INJECTED designatedSuccessorProbability: 0.01
stamp: void
=== Inputs ===
condition: v286 
=== Succesors ===
trueSuccessor: v288 
falseSuccessor: v287 
=== Usages ===
=== Predecessor ===
v285 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v286 #trueSuccessor: v288 #falseSuccessor: v287  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v17|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v17|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699167914968223
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v288 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 55]
stamp: void
=== Inputs ===
=== Succesors ===
next: v297 
=== Usages ===
v300 
=== Predecessor ===
v289 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v297  <|@  <|@
f <@~|@floating>@ <|@
tid v300 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
=== Inputs ===
guards: v501 v288 
=== Succesors ===
=== Usages ===
v297 
=== Predecessor ===
- >@ <|@
instruction <@MultiGuard|@jdk.graal.compiler.nodes.extended.MultiGuardNode>@ guards: v501 v288  <|@  <|@
f <@~|@floating>@ <|@
tid v574 <|@
result [v10|QWORD[.] + v17|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a124 
index: i292 
=== Succesors ===
=== Usages ===
v297 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a124 index: i292  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v297 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v300 
address: v574 
lastLocationAccess: - 
value: i42 
stateAfter: - 
=== Succesors ===
next: v291 
=== Usages ===
=== Predecessor ===
v288 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v300 address: v574 lastLocationAccess: - value: i42 stateAfter: - #next: v291  <|@  <|@
f <@~|@floating>@ <|@
tid i290 <|@
result v18|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 62]
stamp: i32
=== Inputs ===
x: i292 
y: i45 
=== Succesors ===
=== Usages ===
i292 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i292 y: i45  <|@  <|@
f <@*|@fixed>@ <|@
tid v291 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 46]
stamp: void
=== Inputs ===
loopBegin: v285 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v297 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v285  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v10|QWORD[.] + v17|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = INC v17|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v18|DWORD] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606753486221175845
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v287 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v285 
=== Succesors ===
next: v100 
=== Usages ===
=== Predecessor ===
v289 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v285 #next: v100  <|@  <|@
f <@*|@fixed>@ <|@
tid v100 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v99 
=== Predecessor ===
v287 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B3" 
    successors "B19" "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v99 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v100 v101 
=== Succesors ===
next: a512 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v100 v101 #next: a512  <|@  <|@
f <@~|@floating>@ <|@
tid v565 <|@
result [v0|QWORD[.] + 68] <|@
d <@d|@=== Debug Properties ===
displacement: 68
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a512 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a512 <|@
result v19|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# java.util.regex.IntHashSet[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Matcher.localsPos
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1762) [bci: 72]
stamp: n# java.util.regex.IntHashSet[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v565 
lastLocationAccess: - 
=== Succesors ===
next: i513 
=== Usages ===
v566 
=== Predecessor ===
v99 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v565 lastLocationAccess: - #next: i513  <|@  <|@
tid ?103 <|@
d <@d|@=== Debug Properties ===
bci: 68
bytecode: iconst_0
code: ResolvedJavaMethodBytecode<Matcher.search(int)>
localsSize: 3
locksSize: 0
sourceFile: Matcher.java
sourceLine: 1762
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i2 
=== Succesors ===
=== Usages ===
v591 i513 a515 v526 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2  <|@  <|@
f <@~|@floating>@ <|@
tid v566 <|@
result [v19|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a512 
=== Succesors ===
=== Usages ===
i513 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a512  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i513 <|@
result v20|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-40203|0xffffffffffff62f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1762) [bci: 75]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?103 
guard: - 
address: v566 
lastLocationAccess: - 
=== Succesors ===
next: a514 
=== Usages ===
v87 
=== Predecessor ===
a512 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?103 guard: - address: v566 lastLocationAccess: - #next: a514  <|@  <|@
f <@~|@floating>@ <|@
tid v568 <|@
result [v0|QWORD[.] + 52] <|@
d <@d|@=== Debug Properties ===
displacement: 52
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a514 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a514 <|@
result v21|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# java.util.regex.Pattern
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Matcher.parentPattern
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 109]
stamp: n# java.util.regex.Pattern
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v568 
lastLocationAccess: - 
=== Succesors ===
next: a515 
=== Usages ===
v569 
=== Predecessor ===
i513 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v568 lastLocationAccess: - #next: a515  <|@  <|@
f <@~|@floating>@ <|@
tid v569 <|@
result [v21|DWORD[_] * 8 + 52] <|@
d <@d|@=== Debug Properties ===
displacement: 52
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a514 
=== Succesors ===
=== Usages ===
a515 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a514  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a515 <|@
result v22|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.regex.Pattern$Node
barrierType: NONE
deoptReasonAndAction: int[-43275|0xffffffffffff56f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern.root
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 112]
stamp: n java.util.regex.Pattern$Node
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?103 
guard: - 
address: v569 
lastLocationAccess: - 
=== Succesors ===
next: v526 
=== Usages ===
a173 v590 
=== Predecessor ===
a514 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?103 guard: - address: v569 lastLocationAccess: - #next: v526  <|@  <|@
f <@~|@floating>@ <|@
tid v590 <|@
result [v22|DWORD[_] * 8] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a515 
=== Succesors ===
=== Usages ===
v526 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a515  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v526 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: [null]
deoptSpeculation: [null]
stamp: void
=== Inputs ===
stateBefore: ?103 
object: v590 
=== Succesors ===
next: v262 
=== Usages ===
=== Predecessor ===
a515 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?103 object: v590 #next: v262  <|@  <|@
f <@~|@floating>@ <|@
tid v87 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1762) [bci: 76]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i513 
y: i4 
=== Succesors ===
=== Usages ===
v262 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i513 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v262 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1762) [bci: 76]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v87 
=== Succesors ===
trueSuccessor: v260 
falseSuccessor: v261 
=== Usages ===
=== Predecessor ===
v526 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v87 #trueSuccessor: v260 #falseSuccessor: v261  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v19|DWORD[_] = MOV [v0|QWORD[.] + 68] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction v20|DWORD = MOV [v19|DWORD[_] * 8 + 12] size: DWORD state [bci:68] <|@ <|@
      nr   -1  <|@ instruction v21|DWORD[_] = MOV [v0|QWORD[.] + 52] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction v22|DWORD[_] = MOV [v21|DWORD[_] * 8 + 52] size: DWORD state [bci:68] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction NULLCHECK [v22|DWORD[_] * 8] state [bci:68] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v20|DWORD, y: v20|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v260 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1766) [bci: 103]
stamp: void
=== Inputs ===
=== Succesors ===
next: v163 
=== Usages ===
=== Predecessor ===
v262 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v163  <|@  <|@
f <@~|@floating>@ <|@
tid v567 <|@
result [v0|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v163 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v163 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Matcher.acceptMode
location: Matcher.acceptMode
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1766) [bci: 105]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v567 
lastLocationAccess: - 
value: i4 
stateAfter: - 
=== Succesors ===
next: a516 
=== Usages ===
=== Predecessor ===
v260 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v567 lastLocationAccess: - value: i4 stateAfter: - #next: a516  <|@  <|@
f <@~|@floating>@ <|@
tid v570 <|@
result [v0|QWORD[.] + 60] <|@
d <@d|@=== Debug Properties ===
displacement: 60
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a516 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a516 <|@
result v23|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Matcher.text
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 118]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v570 
lastLocationAccess: - 
=== Succesors ===
next: i66 
=== Usages ===
a177 
=== Predecessor ===
v163 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v570 lastLocationAccess: - #next: i66  <|@  <|@
f <@~|@floating>@ <|@
tid a173 <|@
result v24|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 112]
op: Uncompress
stamp: a java.util.regex.Pattern$Node
=== Inputs ===
value: a515 
=== Succesors ===
=== Usages ===
v181 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a515  <|@  <|@
f <@~|@floating>@ <|@
tid a177 <|@
result v25|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 118]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a516 
=== Succesors ===
=== Usages ===
v181 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a516  <|@  <|@
tid v181 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
referencedType: [null]
returnStamp: i32 [0 - 1] bits:0...0x
signature: [HotSpotType<Ljava/util/regex/Pattern$Node;, resolved>, UnresolvedJavaType<Ljava/util/regex/Matcher;>, HotSpotResolvedPrimitiveType<int>, UnresolvedJavaType<Ljava/lang/CharSequence;>]
stamp: void
targetMethod: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>
=== Inputs ===
arguments: a173 a1 i2 a177 
=== Succesors ===
=== Usages ===
i66 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a173 a1 i2 a177  <|@  <|@
tid ?263 <|@
d <@d|@=== Debug Properties ===
bci: 121
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<Matcher.search(int)>
localsSize: 3
locksSize: 0
sourceFile: Matcher.java
sourceLine: 1767
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
i66 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i66 <|@
result v26|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 121
identity: ANY_LOCATION
inlineControl: Normal
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
polymorphic: false
stamp: i32 [0 - 1] bits:0...0x
targetMethod: Direct#Pattern$Node.match
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v181 
stateDuring: ?263 
=== Succesors ===
next: v71 
=== Usages ===
v85 v68 
=== Predecessor ===
a516 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v181 stateDuring: ?263 #next: v71  <|@  <|@
f <@~|@floating>@ <|@
tid v68 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1768) [bci: 126]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i66 
y: i4 
=== Succesors ===
=== Usages ===
v71 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i66 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v71 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1768) [bci: 126]
profileData: PROFILED designatedSuccessorProbability: 3.0308973238957204E-4
stamp: void
=== Inputs ===
condition: v68 
=== Succesors ===
trueSuccessor: v70 
falseSuccessor: v69 
=== Usages ===
=== Predecessor ===
i66 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v68 #trueSuccessor: v70 #falseSuccessor: v69  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|DWORD[_] = MOV [v0|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v24|QWORD[.] = UNCOMPRESSPOINTER (input: v22|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@16d1397a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v25|QWORD[.] = UNCOMPRESSPOINTER (input: v23|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@16d1397a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v24|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE v25|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:121] <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v26|DWORD, y: v26|DWORD) trueDestinationProbability: 3.0308973238957204E-4 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4554226642368960512
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v70 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1769) [bci: 129]
stamp: void
=== Inputs ===
=== Succesors ===
next: v190 
=== Usages ===
=== Predecessor ===
v71 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v190  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v190 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Matcher.first
location: Matcher.first
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1769) [bci: 131]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v559 
lastLocationAccess: - 
value: i42 
stateAfter: - 
=== Succesors ===
next: v76 
=== Usages ===
=== Predecessor ===
v70 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v559 lastLocationAccess: - value: i42 stateAfter: - #next: v76  <|@  <|@
f <@*|@fixed>@ <|@
tid v76 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1770) [bci: 134]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v75 
=== Predecessor ===
v190 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4607179688810405709
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v69 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1770) [bci: 134]
stamp: void
=== Inputs ===
=== Succesors ===
next: v74 
=== Usages ===
=== Predecessor ===
v71 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v74  <|@  <|@
f <@*|@fixed>@ <|@
tid v74 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1770) [bci: 134]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v75 
=== Predecessor ===
v69 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B20" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v75 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1770) [bci: 134]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v74 v76 
=== Succesors ===
next: i517 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v74 v76 #next: i517  <|@  <|@
f <@~|@floating>@ <|@
tid v571 <|@
result [v0|QWORD[.] + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i517 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i517 <|@
result v27|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Matcher.last
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1770) [bci: 136]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v571 
lastLocationAccess: - 
=== Succesors ===
next: v185 
=== Usages ===
v185 
=== Predecessor ===
v75 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v571 lastLocationAccess: - #next: v185  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v185 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Matcher.oldLast
location: Matcher.oldLast
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1770) [bci: 139]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v560 
lastLocationAccess: - 
value: i517 
stateAfter: - 
=== Succesors ===
next: i518 
=== Usages ===
=== Predecessor ===
i517 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v560 lastLocationAccess: - value: i517 stateAfter: - #next: i518  <|@  <|@
f <@~|@floating>@ <|@
tid v572 <|@
result [v0|QWORD[.] + 44] <|@
d <@d|@=== Debug Properties ===
displacement: 44
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i518 v189 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i518 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Matcher.modCount
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1771) [bci: 144]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v572 
lastLocationAccess: - 
=== Succesors ===
next: v189 
=== Usages ===
i82 
=== Predecessor ===
v185 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v572 lastLocationAccess: - #next: v189  <|@  <|@
f <@~|@floating>@ <|@
tid i82 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1771) [bci: 148]
stamp: i32
=== Inputs ===
x: i518 
y: i45 
=== Succesors ===
=== Usages ===
v189 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i518 y: i45  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v189 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Matcher.modCount
location: Matcher.modCount
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1771) [bci: 149]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v572 
lastLocationAccess: - 
value: i82 
stateAfter: - 
=== Succesors ===
next: v85 
=== Usages ===
=== Predecessor ===
i518 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v572 lastLocationAccess: - value: i82 stateAfter: - #next: v85  <|@  <|@
f <@*|@fixed>@ <|@
tid v85 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1772) [bci: 153]
stamp: void
=== Inputs ===
memoryMap: - 
result: i66 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v189 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: i66  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = MOV [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 36], y: v27|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction INC [v0|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v26|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v261 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1762) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v591 
=== Usages ===
=== Predecessor ===
v262 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v591  <|@  <|@
f <@*|@fixed>@ <|@
tid v591 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 259
mayConvertToGuard: true
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1762) [bci: 75]
reason: UnreachedCode
speculation: {0x0000000000000294[index: 20, len: 20, hash: 0xd8afd966]: UnreachedCode@5[HotSpotMethod<Matcher.search(int)>, 79]}
stamp: void
=== Inputs ===
stateBefore: ?103 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v261 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?103  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -66323 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:68] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v239 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
=== Inputs ===
=== Succesors ===
next: v238 
=== Usages ===
=== Predecessor ===
v506 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v238  <|@  <|@
tid ?27 <|@
d <@d|@=== Debug Properties ===
bci: 44
bytecode: iconst_0
code: ResolvedJavaMethodBytecode<Matcher.search(int)>
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1759) [bci: 41]
sourceFile: Matcher.java
sourceLine: 1760
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i2 
=== Succesors ===
=== Usages ===
v238 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2  <|@  <|@
f <@*|@fixed>@ <|@
tid v238 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 144
mayConvertToGuard: true
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
reason: BoundsCheckException
speculation: {0x0000000000004618[index: 560, len: 24, hash: 0x4cda229b]: GuardMovement@2[HotSpotMethod<Matcher.search(int)>, 46, BoundsCheckException]}
stamp: void
=== Inputs ===
stateBefore: ?27 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v239 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?27  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -36891 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 17944 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.search(Matcher.java:1760) [bci: 44]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:44] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After ConstantLoadOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@bf3c5e0 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV [v0|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.search(Matcher.java:1755) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction v3|DWORD = MOV [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction MOVB [v0|QWORD[.] + 48] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction MOVB [v0|QWORD[.] + 49] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 28], y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v4|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = CMOVE (falseValue: v4|DWORD, ~trueValue: v1|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 36], y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v3|DWORD, y: v3|DWORD) trueDestinationProbability: 0.04762108250417496 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606753486221175844
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = DEC v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOVSXD v6|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOV v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|QWORD, y: v7|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B24" 
    xhandlers
    flags 
    probability 4602249886593805348
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v3|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B24 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602249886593805348
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602249886593805348
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606753486221175844
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v2|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v3|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v3|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@16d1397a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" 
    successors "B10" "B11" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606840135379518263
    begin_IR
      LIR
      nr   -1  <|@ instruction [v11|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v9|DWORD, y: v11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699167914968222
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v10|QWORD[.] + v11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = INC v11|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v12|DWORD] destination: B10 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4606753486221175844
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = LEA [v3|DWORD - 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v11|DWORD] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B13" "B14" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608039995292795068
    begin_IR
      LIR
      nr   -1  <|@ instruction [v14|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v14|DWORD) trueDestinationProbability: 0.19996410454965907 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597744362548122956
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v10|QWORD[.] + v14|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOVSXD v14|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 20] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 24] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 28] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 32] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 36] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 40] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 44] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 48] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 52] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 56] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 60] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 64] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 68] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 72] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 76] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = LEA [v14|DWORD + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v16|DWORD] destination: B13 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606753486221175845
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v14|DWORD] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606840135379518264
    begin_IR
      LIR
      nr   -1  <|@ instruction [v17|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v17|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699167914968223
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v10|QWORD[.] + v17|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = INC v17|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v18|DWORD] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606753486221175845
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B3" 
    successors "B19" "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v19|DWORD[_] = MOV [v0|QWORD[.] + 68] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction v20|DWORD = MOV [v19|DWORD[_] * 8 + 12] size: DWORD state [bci:68] <|@ <|@
      nr   -1  <|@ instruction v21|DWORD[_] = MOV [v0|QWORD[.] + 52] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction v22|DWORD[_] = MOV [v21|DWORD[_] * 8 + 52] size: DWORD state [bci:68] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction NULLCHECK [v22|DWORD[_] * 8] state [bci:68] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v20|DWORD, y: v20|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|DWORD[_] = MOV [v0|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v24|QWORD[.] = UNCOMPRESSPOINTER (input: v22|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@16d1397a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v25|QWORD[.] = UNCOMPRESSPOINTER (input: v23|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@16d1397a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v24|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE v25|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:121] <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v26|DWORD, y: v26|DWORD) trueDestinationProbability: 3.0308973238957204E-4 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4607179688810405709
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B20" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = MOV [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 36], y: v27|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction INC [v0|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v26|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B18" 
    xhandlers
    flags 
    probability 4587023742297259456
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4554226642368960512
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -36891 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 17944 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.search(Matcher.java:1760) [bci: 44]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:44] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -66323 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:68] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -65043 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.search(Matcher.java:1757) [bci: 10]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_0      
     2: putfield      #86         // hitEnd:boolean
     5: aload_0       
     6: iconst_0      
     7: putfield      #87         // requireEnd:boolean
    10: iload_1       
    11: ifge          18
    14: iconst_0      
    15: goto          19
    18: iload_1       
    19: istore_1      
    20: aload_0       
    21: iload_1       
    22: putfield      #2          // first:int
    25: aload_0       
    26: aload_0       
    27: getfield      #4          // oldLast:int
    30: ifge          37
    33: iload_1       
    34: goto          41
    37: aload_0       
    38: getfield      #4          // oldLast:int
    41: putfield      #4          // oldLast:int
    44: iconst_0      
    45: istore_2      
    46: iload_2       
    47: aload_0       
    48: getfield      #12         // groups:int[]
    51: arraylength   
    52: if_icmpge     68
    55: aload_0       
    56: getfield      #12         // groups:int[]
    59: iload_2       
    60: iconst_m1     
    61: iastore       
    62: iinc          
    65: goto          46
    68: iconst_0      
    69: istore_2      
    70: iload_2       
    71: aload_0       
    72: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    75: arraylength   
    76: if_icmpge     103
    79: aload_0       
    80: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    83: iload_2       
    84: aaload        
    85: ifnull        97
    88: aload_0       
    89: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    92: iload_2       
    93: aaload        
    94: invokevirtual #32         // java.util.regex.IntHashSet.clear:()void
    97: iinc          
   100: goto          70
   103: aload_0       
   104: iconst_0      
   105: putfield      #1          // acceptMode:int
   108: aload_0       
   109: getfield      #8          // parentPattern:java.util.regex.Pattern
   112: getfield      #88         // java.util.regex.Pattern.root:java.util.regex.Pattern$Node
   115: aload_0       
   116: iload_1       
   117: aload_0       
   118: getfield      #9          // text:java.lang.CharSequence
   121: invokevirtual #89         // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
   124: istore_2      
   125: iload_2       
   126: ifne          134
   129: aload_0       
   130: iconst_m1     
   131: putfield      #2          // first:int
   134: aload_0       
   135: aload_0       
   136: getfield      #3          // last:int
   139: putfield      #4          // oldLast:int
   142: aload_0       
   143: dup           
   144: getfield      #31         // modCount:int
   147: iconst_1      
   148: iadd          
   149: putfield      #31         // modCount:int
   152: iload_2       
   153: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After SaveCalleeSaveRegisters"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@bf3c5e0 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV [v0|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.search(Matcher.java:1755) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction v3|DWORD = MOV [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction MOVB [v0|QWORD[.] + 48] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction MOVB [v0|QWORD[.] + 49] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 28], y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v4|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = CMOVE (falseValue: v4|DWORD, ~trueValue: v1|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 36], y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v3|DWORD, y: v3|DWORD) trueDestinationProbability: 0.04762108250417496 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606753486221175844
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = DEC v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOVSXD v6|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOV v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|QWORD, y: v7|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B24" 
    xhandlers
    flags 
    probability 4602249886593805348
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v3|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B24 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602249886593805348
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602249886593805348
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606753486221175844
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v2|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v3|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v3|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@16d1397a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" 
    successors "B10" "B11" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606840135379518263
    begin_IR
      LIR
      nr   -1  <|@ instruction [v11|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v9|DWORD, y: v11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699167914968222
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v10|QWORD[.] + v11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = INC v11|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v12|DWORD] destination: B10 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4606753486221175844
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = LEA [v3|DWORD - 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v11|DWORD] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B13" "B14" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608039995292795068
    begin_IR
      LIR
      nr   -1  <|@ instruction [v14|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v14|DWORD) trueDestinationProbability: 0.19996410454965907 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597744362548122956
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v10|QWORD[.] + v14|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOVSXD v14|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 20] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 24] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 28] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 32] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 36] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 40] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 44] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 48] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 52] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 56] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 60] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 64] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 68] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 72] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 76] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = LEA [v14|DWORD + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v16|DWORD] destination: B13 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606753486221175845
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v14|DWORD] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606840135379518264
    begin_IR
      LIR
      nr   -1  <|@ instruction [v17|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v17|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699167914968223
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v10|QWORD[.] + v17|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = INC v17|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v18|DWORD] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606753486221175845
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B3" 
    successors "B19" "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v19|DWORD[_] = MOV [v0|QWORD[.] + 68] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction v20|DWORD = MOV [v19|DWORD[_] * 8 + 12] size: DWORD state [bci:68] <|@ <|@
      nr   -1  <|@ instruction v21|DWORD[_] = MOV [v0|QWORD[.] + 52] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction v22|DWORD[_] = MOV [v21|DWORD[_] * 8 + 52] size: DWORD state [bci:68] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction NULLCHECK [v22|DWORD[_] * 8] state [bci:68] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v20|DWORD, y: v20|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|DWORD[_] = MOV [v0|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v24|QWORD[.] = UNCOMPRESSPOINTER (input: v22|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@16d1397a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v25|QWORD[.] = UNCOMPRESSPOINTER (input: v23|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@16d1397a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v24|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE v25|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:121] <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v26|DWORD, y: v26|DWORD) trueDestinationProbability: 3.0308973238957204E-4 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4607179688810405709
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B20" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = MOV [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 36], y: v27|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction INC [v0|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v26|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B18" 
    xhandlers
    flags 
    probability 4587023742297259456
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4554226642368960512
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -36891 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 17944 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.search(Matcher.java:1760) [bci: 44]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:44] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -66323 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:68] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -65043 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.search(Matcher.java:1757) [bci: 10]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_0      
     2: putfield      #86         // hitEnd:boolean
     5: aload_0       
     6: iconst_0      
     7: putfield      #87         // requireEnd:boolean
    10: iload_1       
    11: ifge          18
    14: iconst_0      
    15: goto          19
    18: iload_1       
    19: istore_1      
    20: aload_0       
    21: iload_1       
    22: putfield      #2          // first:int
    25: aload_0       
    26: aload_0       
    27: getfield      #4          // oldLast:int
    30: ifge          37
    33: iload_1       
    34: goto          41
    37: aload_0       
    38: getfield      #4          // oldLast:int
    41: putfield      #4          // oldLast:int
    44: iconst_0      
    45: istore_2      
    46: iload_2       
    47: aload_0       
    48: getfield      #12         // groups:int[]
    51: arraylength   
    52: if_icmpge     68
    55: aload_0       
    56: getfield      #12         // groups:int[]
    59: iload_2       
    60: iconst_m1     
    61: iastore       
    62: iinc          
    65: goto          46
    68: iconst_0      
    69: istore_2      
    70: iload_2       
    71: aload_0       
    72: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    75: arraylength   
    76: if_icmpge     103
    79: aload_0       
    80: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    83: iload_2       
    84: aaload        
    85: ifnull        97
    88: aload_0       
    89: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    92: iload_2       
    93: aaload        
    94: invokevirtual #32         // java.util.regex.IntHashSet.clear:()void
    97: iinc          
   100: goto          70
   103: aload_0       
   104: iconst_0      
   105: putfield      #1          // acceptMode:int
   108: aload_0       
   109: getfield      #8          // parentPattern:java.util.regex.Pattern
   112: getfield      #88         // java.util.regex.Pattern.root:java.util.regex.Pattern$Node
   115: aload_0       
   116: iload_1       
   117: aload_0       
   118: getfield      #9          // text:java.lang.CharSequence
   121: invokevirtual #89         // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
   124: istore_2      
   125: iload_2       
   126: ifne          134
   129: aload_0       
   130: iconst_m1     
   131: putfield      #2          // first:int
   134: aload_0       
   135: aload_0       
   136: getfield      #3          // last:int
   139: putfield      #4          // oldLast:int
   142: aload_0       
   143: dup           
   144: getfield      #31         // modCount:int
   147: iconst_1      
   148: iadd          
   149: putfield      #31         // modCount:int
   152: iload_2       
   153: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@bf3c5e0 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV [v0|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.search(Matcher.java:1755) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction v3|DWORD = MOV [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction MOVB [v0|QWORD[.] + 48] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction MOVB [v0|QWORD[.] + 49] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 28], y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v4|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = CMOVE (falseValue: v4|DWORD, ~trueValue: v1|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 36], y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v3|DWORD, y: v3|DWORD) trueDestinationProbability: 0.04762108250417496 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606753486221175844
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = DEC v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOVSXD v6|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOV v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|QWORD, y: v7|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B24" 
    xhandlers
    flags 
    probability 4602249886593805348
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v3|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B24 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602249886593805348
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602249886593805348
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606753486221175844
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v2|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v3|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v3|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@16d1397a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" 
    successors "B10" "B11" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606840135379518263
    begin_IR
      LIR
      nr   -1  <|@ instruction [v11|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v9|DWORD, y: v11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699167914968222
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v10|QWORD[.] + v11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = INC v11|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v12|DWORD] destination: B10 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4606753486221175844
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = LEA [v3|DWORD - 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v11|DWORD] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B13" "B14" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608039995292795068
    begin_IR
      LIR
      nr   -1  <|@ instruction [v14|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v14|DWORD) trueDestinationProbability: 0.19996410454965907 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597744362548122956
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v10|QWORD[.] + v14|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOVSXD v14|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 20] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 24] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 28] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 32] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 36] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 40] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 44] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 48] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 52] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 56] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 60] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 64] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 68] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 72] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 76] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = LEA [v14|DWORD + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v16|DWORD] destination: B13 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606753486221175845
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v14|DWORD] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606840135379518264
    begin_IR
      LIR
      nr   -1  <|@ instruction [v17|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v17|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699167914968223
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v10|QWORD[.] + v17|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = INC v17|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v18|DWORD] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606753486221175845
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B3" 
    successors "B19" "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v19|DWORD[_] = MOV [v0|QWORD[.] + 68] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction v20|DWORD = MOV [v19|DWORD[_] * 8 + 12] size: DWORD state [bci:68] <|@ <|@
      nr   -1  <|@ instruction v21|DWORD[_] = MOV [v0|QWORD[.] + 52] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction v22|DWORD[_] = MOV [v21|DWORD[_] * 8 + 52] size: DWORD state [bci:68] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction NULLCHECK [v22|DWORD[_] * 8] state [bci:68] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v20|DWORD, y: v20|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|DWORD[_] = MOV [v0|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v24|QWORD[.] = UNCOMPRESSPOINTER (input: v22|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@16d1397a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v25|QWORD[.] = UNCOMPRESSPOINTER (input: v23|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@16d1397a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v24|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE v25|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:121] <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v26|DWORD, y: v26|DWORD) trueDestinationProbability: 3.0308973238957204E-4 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4607179688810405709
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B20" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = MOV [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 36], y: v27|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction INC [v0|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v26|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B18" 
    xhandlers
    flags 
    probability 4587023742297259456
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4554226642368960512
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -36891 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 17944 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.search(Matcher.java:1760) [bci: 44]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:44] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -66323 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:68] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -65043 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.search(Matcher.java:1757) [bci: 10]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_0      
     2: putfield      #86         // hitEnd:boolean
     5: aload_0       
     6: iconst_0      
     7: putfield      #87         // requireEnd:boolean
    10: iload_1       
    11: ifge          18
    14: iconst_0      
    15: goto          19
    18: iload_1       
    19: istore_1      
    20: aload_0       
    21: iload_1       
    22: putfield      #2          // first:int
    25: aload_0       
    26: aload_0       
    27: getfield      #4          // oldLast:int
    30: ifge          37
    33: iload_1       
    34: goto          41
    37: aload_0       
    38: getfield      #4          // oldLast:int
    41: putfield      #4          // oldLast:int
    44: iconst_0      
    45: istore_2      
    46: iload_2       
    47: aload_0       
    48: getfield      #12         // groups:int[]
    51: arraylength   
    52: if_icmpge     68
    55: aload_0       
    56: getfield      #12         // groups:int[]
    59: iload_2       
    60: iconst_m1     
    61: iastore       
    62: iinc          
    65: goto          46
    68: iconst_0      
    69: istore_2      
    70: iload_2       
    71: aload_0       
    72: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    75: arraylength   
    76: if_icmpge     103
    79: aload_0       
    80: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    83: iload_2       
    84: aaload        
    85: ifnull        97
    88: aload_0       
    89: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    92: iload_2       
    93: aaload        
    94: invokevirtual #32         // java.util.regex.IntHashSet.clear:()void
    97: iinc          
   100: goto          70
   103: aload_0       
   104: iconst_0      
   105: putfield      #1          // acceptMode:int
   108: aload_0       
   109: getfield      #8          // parentPattern:java.util.regex.Pattern
   112: getfield      #88         // java.util.regex.Pattern.root:java.util.regex.Pattern$Node
   115: aload_0       
   116: iload_1       
   117: aload_0       
   118: getfield      #9          // text:java.lang.CharSequence
   121: invokevirtual #89         // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
   124: istore_2      
   125: iload_2       
   126: ifne          134
   129: aload_0       
   130: iconst_m1     
   131: putfield      #2          // first:int
   134: aload_0       
   135: aload_0       
   136: getfield      #3          // last:int
   139: putfield      #4          // oldLast:int
   142: aload_0       
   143: dup           
   144: getfield      #31         // modCount:int
   147: iconst_1      
   148: iadd          
   149: putfield      #31         // modCount:int
   152: iload_2       
   153: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After MarkBasePointers"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@bf3c5e0 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV [v0|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1755) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction v3|DWORD = MOV [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction MOVB [v0|QWORD[.] + 48] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction MOVB [v0|QWORD[.] + 49] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 28], y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v4|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = CMOVE (falseValue: v4|DWORD, ~trueValue: v1|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 36], y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v3|DWORD, y: v3|DWORD) trueDestinationProbability: 0.04762108250417496 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606753486221175844
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = DEC v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOVSXD v6|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOV v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|QWORD, y: v7|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B24" 
    xhandlers
    flags 
    probability 4602249886593805348
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v3|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B24 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602249886593805348
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602249886593805348
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606753486221175844
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v2|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v3|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v3|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@16d1397a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" 
    successors "B10" "B11" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606840135379518263
    begin_IR
      LIR
      nr   -1  <|@ instruction [v11|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v9|DWORD, y: v11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699167914968222
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v10|QWORD[.] + v11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = INC v11|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v12|DWORD] destination: B10 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4606753486221175844
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = LEA [v3|DWORD - 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v11|DWORD] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B13" "B14" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608039995292795068
    begin_IR
      LIR
      nr   -1  <|@ instruction [v14|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v14|DWORD) trueDestinationProbability: 0.19996410454965907 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597744362548122956
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v10|QWORD[.] + v14|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOVSXD v14|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 20] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 24] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 28] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 32] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 36] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 40] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 44] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 48] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 52] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 56] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 60] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 64] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 68] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 72] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 76] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = LEA [v14|DWORD + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v16|DWORD] destination: B13 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606753486221175845
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v14|DWORD] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606840135379518264
    begin_IR
      LIR
      nr   -1  <|@ instruction [v17|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v17|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699167914968223
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v10|QWORD[.] + v17|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = INC v17|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v18|DWORD] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606753486221175845
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B3" 
    successors "B19" "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v19|DWORD[_] = MOV [v0|QWORD[.] + 68] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction v20|DWORD = MOV [v19|DWORD[_] * 8 + 12] size: DWORD state [bci:68] <|@ <|@
      nr   -1  <|@ instruction v21|DWORD[_] = MOV [v0|QWORD[.] + 52] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction v22|DWORD[_] = MOV [v21|DWORD[_] * 8 + 52] size: DWORD state [bci:68] <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction NULLCHECK [v22|DWORD[_] * 8] state [bci:68] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v20|DWORD, y: v20|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|DWORD[_] = MOV [v0|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v24|QWORD[.] = UNCOMPRESSPOINTER (input: v22|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@16d1397a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v25|QWORD[.] = UNCOMPRESSPOINTER (input: v23|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@16d1397a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v24|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE v25|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:121] <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v26|DWORD, y: v26|DWORD) trueDestinationProbability: 3.0308973238957204E-4 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4607179688810405709
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B20" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = MOV [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 36], y: v27|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction INC [v0|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v26|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B18" 
    xhandlers
    flags 
    probability 4587023742297259456
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4554226642368960512
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -36891 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 17944 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1760) [bci: 44]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:44] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -66323 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:68] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -65043 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1757) [bci: 10]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_0      
     2: putfield      #86         // hitEnd:boolean
     5: aload_0       
     6: iconst_0      
     7: putfield      #87         // requireEnd:boolean
    10: iload_1       
    11: ifge          18
    14: iconst_0      
    15: goto          19
    18: iload_1       
    19: istore_1      
    20: aload_0       
    21: iload_1       
    22: putfield      #2          // first:int
    25: aload_0       
    26: aload_0       
    27: getfield      #4          // oldLast:int
    30: ifge          37
    33: iload_1       
    34: goto          41
    37: aload_0       
    38: getfield      #4          // oldLast:int
    41: putfield      #4          // oldLast:int
    44: iconst_0      
    45: istore_2      
    46: iload_2       
    47: aload_0       
    48: getfield      #12         // groups:int[]
    51: arraylength   
    52: if_icmpge     68
    55: aload_0       
    56: getfield      #12         // groups:int[]
    59: iload_2       
    60: iconst_m1     
    61: iastore       
    62: iinc          
    65: goto          46
    68: iconst_0      
    69: istore_2      
    70: iload_2       
    71: aload_0       
    72: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    75: arraylength   
    76: if_icmpge     103
    79: aload_0       
    80: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    83: iload_2       
    84: aaload        
    85: ifnull        97
    88: aload_0       
    89: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    92: iload_2       
    93: aaload        
    94: invokevirtual #32         // java.util.regex.IntHashSet.clear:()void
    97: iinc          
   100: goto          70
   103: aload_0       
   104: iconst_0      
   105: putfield      #1          // acceptMode:int
   108: aload_0       
   109: getfield      #8          // parentPattern:java.util.regex.Pattern
   112: getfield      #88         // java.util.regex.Pattern.root:java.util.regex.Pattern$Node
   115: aload_0       
   116: iload_1       
   117: aload_0       
   118: getfield      #9          // text:java.lang.CharSequence
   121: invokevirtual #89         // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
   124: istore_2      
   125: iload_2       
   126: ifne          134
   129: aload_0       
   130: iconst_m1     
   131: putfield      #2          // first:int
   134: aload_0       
   135: aload_0       
   136: getfield      #3          // last:int
   139: putfield      #4          // oldLast:int
   142: aload_0       
   143: dup           
   144: getfield      #31         // modCount:int
   147: iconst_1      
   148: iadd          
   149: putfield      #31         // modCount:int
   152: iload_2       
   153: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "Before register allocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@bf3c5e0 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction v2|DWORD[_] = MOV [v0|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   12  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1755) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction v3|DWORD = MOV [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   14  <|@ instruction MOVB [v0|QWORD[.] + 48] y: 0 size: BYTE <|@ <|@
      nr   16  <|@ instruction MOVB [v0|QWORD[.] + 49] y: 0 size: BYTE <|@ <|@
      nr   18  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   22  <|@ instruction MOV (x: [v0|QWORD[.] + 28], y: v1|DWORD) size: DWORD <|@ <|@
      nr   24  <|@ instruction v4|DWORD = MOV [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   26  <|@ instruction TEST (x: v4|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   28  <|@ instruction v5|DWORD = CMOVE (falseValue: v4|DWORD, ~trueValue: v1|DWORD) condition: < <|@ <|@
      nr   30  <|@ instruction MOV (x: [v0|QWORD[.] + 36], y: v5|DWORD) size: DWORD <|@ <|@
      nr   32  <|@ instruction TESTBRANCH (x: v3|DWORD, y: v3|DWORD) trueDestinationProbability: 0.04762108250417496 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606753486221175844
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   36  <|@ instruction v6|DWORD = DEC v3|DWORD size: DWORD <|@ <|@
      nr   38  <|@ instruction v7|QWORD = MOVSXD v6|DWORD size: QWORD <|@ <|@
      nr   40  <|@ instruction v8|QWORD = MOV v3|DWORD size: DWORD <|@ <|@
      nr   42  <|@ instruction CMPBRANCH (x: v8|QWORD, y: v7|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B24" 
    xhandlers
    flags 
    probability 4602249886593805348
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction CMPCONSTBRANCH v3|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B24 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602249886593805348
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602249886593805348
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction JUMP ~[] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606753486221175844
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction MOV [v2|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr   60  <|@ instruction CMP v3|DWORD y: 3 size: DWORD <|@ <|@
      nr   62  <|@ instruction v9|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v3|DWORD) condition: |<| <|@ <|@
      nr   64  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@16d1397a encoding: base: 0 shift: 3 <|@ <|@
      nr   66  <|@ instruction JUMP ~[int[1|0x1]] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" 
    successors "B10" "B11" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606840135379518263
    begin_IR
      LIR
      nr   68  <|@ instruction [v11|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   70  <|@ instruction CMPBRANCH (x: v9|DWORD, y: v11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699167914968222
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction MOV [v10|QWORD[.] + v11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   76  <|@ instruction v12|DWORD = INC v11|DWORD size: DWORD <|@ <|@
      nr   78  <|@ instruction JUMP ~[v12|DWORD] destination: B10 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4606753486221175844
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction v13|DWORD = LEA [v3|DWORD - 16] size: DWORD <|@ <|@
      nr   84  <|@ instruction JUMP ~[v11|DWORD] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B13" "B14" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608039995292795068
    begin_IR
      LIR
      nr   86  <|@ instruction [v14|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   88  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v14|DWORD) trueDestinationProbability: 0.19996410454965907 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597744362548122956
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction MOV [v10|QWORD[.] + v14|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   94  <|@ instruction v15|QWORD = MOVSXD v14|DWORD size: QWORD <|@ <|@
      nr   96  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 20] y: -1 size: DWORD <|@ <|@
      nr   98  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 24] y: -1 size: DWORD <|@ <|@
      nr  100  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 28] y: -1 size: DWORD <|@ <|@
      nr  102  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 32] y: -1 size: DWORD <|@ <|@
      nr  104  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 36] y: -1 size: DWORD <|@ <|@
      nr  106  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 40] y: -1 size: DWORD <|@ <|@
      nr  108  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 44] y: -1 size: DWORD <|@ <|@
      nr  110  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 48] y: -1 size: DWORD <|@ <|@
      nr  112  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 52] y: -1 size: DWORD <|@ <|@
      nr  114  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 56] y: -1 size: DWORD <|@ <|@
      nr  116  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 60] y: -1 size: DWORD <|@ <|@
      nr  118  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 64] y: -1 size: DWORD <|@ <|@
      nr  120  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 68] y: -1 size: DWORD <|@ <|@
      nr  122  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 72] y: -1 size: DWORD <|@ <|@
      nr  124  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 76] y: -1 size: DWORD <|@ <|@
      nr  126  <|@ instruction v16|DWORD = LEA [v14|DWORD + 16] size: DWORD <|@ <|@
      nr  128  <|@ instruction JUMP ~[v16|DWORD] destination: B13 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606753486221175845
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  132  <|@ instruction JUMP ~[v14|DWORD] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606840135379518264
    begin_IR
      LIR
      nr  134  <|@ instruction [v17|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  136  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v17|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699167914968223
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction MOV [v10|QWORD[.] + v17|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  142  <|@ instruction v18|DWORD = INC v17|DWORD size: DWORD <|@ <|@
      nr  144  <|@ instruction JUMP ~[v18|DWORD] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606753486221175845
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B3" 
    successors "B19" "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction v19|DWORD[_] = MOV [v0|QWORD[.] + 68] size: DWORD <|@ <|@
      nr  154  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction v20|DWORD = MOV [v19|DWORD[_] * 8 + 12] size: DWORD state [bci:68] <|@ <|@
      nr  156  <|@ instruction v21|DWORD[_] = MOV [v0|QWORD[.] + 52] size: DWORD <|@ <|@
      nr  158  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction v22|DWORD[_] = MOV [v21|DWORD[_] * 8 + 52] size: DWORD state [bci:68] <|@ <|@
      nr  160  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction NULLCHECK [v22|DWORD[_] * 8] state [bci:68] <|@ <|@
      nr  162  <|@ instruction TESTBRANCH (x: v20|DWORD, y: v20|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction MOV [v0|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr  168  <|@ instruction v23|DWORD[_] = MOV [v0|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  170  <|@ instruction v24|QWORD[.] = UNCOMPRESSPOINTER (input: v22|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@16d1397a encoding: base: 0 shift: 3 <|@ <|@
      nr  172  <|@ instruction v25|QWORD[.] = UNCOMPRESSPOINTER (input: v23|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@16d1397a encoding: base: 0 shift: 3 <|@ <|@
      nr  174  <|@ instruction rsi|QWORD[.] = MOVE v24|QWORD[.] moveKind: QWORD <|@ <|@
      nr  176  <|@ instruction rdx|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  178  <|@ instruction rcx|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr  180  <|@ instruction r8|QWORD[.] = MOVE v25|QWORD[.] moveKind: QWORD <|@ <|@
      nr  182  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:121] <|@ <|@
      nr  184  <|@ instruction v26|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  186  <|@ instruction TESTBRANCH (x: v26|DWORD, y: v26|DWORD) trueDestinationProbability: 3.0308973238957204E-4 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4607179688810405709
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  190  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B20" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction v27|DWORD = MOV [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  196  <|@ instruction MOV (x: [v0|QWORD[.] + 36], y: v27|DWORD) size: DWORD <|@ <|@
      nr  198  <|@ instruction INC [v0|QWORD[.] + 44] size: DWORD <|@ <|@
      nr  200  <|@ instruction rax|DWORD = MOVE v26|DWORD moveKind: DWORD <|@ <|@
      nr  202  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B18" 
    xhandlers
    flags 
    probability 4587023742297259456
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction JUMP ~[] destination: B3 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4554226642368960512
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction MOV [v0|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr  212  <|@ instruction JUMP ~[] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction MOV [r15|QWORD + 1156] y: -36891 size: DWORD <|@ <|@
      nr  218  <|@ instruction MOV [r15|QWORD + 1168] y: 17944 size: QWORD <|@ <|@
      nr  220  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1760) [bci: 44]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:44] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction MOV [r15|QWORD + 1156] y: -66323 size: DWORD <|@ <|@
      nr  226  <|@ instruction MOV [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  228  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:68] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction MOV [r15|QWORD + 1156] y: -65043 size: DWORD <|@ <|@
      nr  234  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  236  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1757) [bci: 10]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_0      
     2: putfield      #86         // hitEnd:boolean
     5: aload_0       
     6: iconst_0      
     7: putfield      #87         // requireEnd:boolean
    10: iload_1       
    11: ifge          18
    14: iconst_0      
    15: goto          19
    18: iload_1       
    19: istore_1      
    20: aload_0       
    21: iload_1       
    22: putfield      #2          // first:int
    25: aload_0       
    26: aload_0       
    27: getfield      #4          // oldLast:int
    30: ifge          37
    33: iload_1       
    34: goto          41
    37: aload_0       
    38: getfield      #4          // oldLast:int
    41: putfield      #4          // oldLast:int
    44: iconst_0      
    45: istore_2      
    46: iload_2       
    47: aload_0       
    48: getfield      #12         // groups:int[]
    51: arraylength   
    52: if_icmpge     68
    55: aload_0       
    56: getfield      #12         // groups:int[]
    59: iload_2       
    60: iconst_m1     
    61: iastore       
    62: iinc          
    65: goto          46
    68: iconst_0      
    69: istore_2      
    70: iload_2       
    71: aload_0       
    72: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    75: arraylength   
    76: if_icmpge     103
    79: aload_0       
    80: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    83: iload_2       
    84: aaload        
    85: ifnull        97
    88: aload_0       
    89: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    92: iload_2       
    93: aaload        
    94: invokevirtual #32         // java.util.regex.IntHashSet.clear:()void
    97: iinc          
   100: goto          70
   103: aload_0       
   104: iconst_0      
   105: putfield      #1          // acceptMode:int
   108: aload_0       
   109: getfield      #8          // parentPattern:java.util.regex.Pattern
   112: getfield      #88         // java.util.regex.Pattern.root:java.util.regex.Pattern$Node
   115: aload_0       
   116: iload_1       
   117: aload_0       
   118: getfield      #9          // text:java.lang.CharSequence
   121: invokevirtual #89         // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
   124: istore_2      
   125: iload_2       
   126: ifne          134
   129: aload_0       
   130: iconst_m1     
   131: putfield      #2          // first:int
   134: aload_0       
   135: aload_0       
   136: getfield      #3          // last:int
   139: putfield      #4          // oldLast:int
   142: aload_0       
   143: dup           
   144: getfield      #31         // modCount:int
   147: iconst_1      
   148: iadd          
   149: putfield      #31         // modCount:int
   152: iload_2       
   153: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanLifetimeAnalysis"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@bf3c5e0 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction v2|DWORD[_] = MOV [v0|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   12  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1755) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction v3|DWORD = MOV [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   14  <|@ instruction MOVB [v0|QWORD[.] + 48] y: 0 size: BYTE <|@ <|@
      nr   16  <|@ instruction MOVB [v0|QWORD[.] + 49] y: 0 size: BYTE <|@ <|@
      nr   18  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   22  <|@ instruction MOV (x: [v0|QWORD[.] + 28], y: v1|DWORD) size: DWORD <|@ <|@
      nr   24  <|@ instruction v4|DWORD = MOV [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   26  <|@ instruction TEST (x: v4|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   28  <|@ instruction v5|DWORD = CMOVE (falseValue: v4|DWORD, ~trueValue: v1|DWORD) condition: < <|@ <|@
      nr   30  <|@ instruction MOV (x: [v0|QWORD[.] + 36], y: v5|DWORD) size: DWORD <|@ <|@
      nr   32  <|@ instruction TESTBRANCH (x: v3|DWORD, y: v3|DWORD) trueDestinationProbability: 0.04762108250417496 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606753486221175844
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   36  <|@ instruction v6|DWORD = DEC v3|DWORD size: DWORD <|@ <|@
      nr   38  <|@ instruction v7|QWORD = MOVSXD v6|DWORD size: QWORD <|@ <|@
      nr   40  <|@ instruction v8|QWORD = MOV v3|DWORD size: DWORD <|@ <|@
      nr   42  <|@ instruction CMPBRANCH (x: v8|QWORD, y: v7|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B24" 
    xhandlers
    flags 
    probability 4602249886593805348
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction CMPCONSTBRANCH v3|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B24 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602249886593805348
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602249886593805348
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction JUMP ~[] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606753486221175844
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction MOV [v2|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr   60  <|@ instruction CMP v3|DWORD y: 3 size: DWORD <|@ <|@
      nr   62  <|@ instruction v9|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v3|DWORD) condition: |<| <|@ <|@
      nr   64  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@16d1397a encoding: base: 0 shift: 3 <|@ <|@
      nr   66  <|@ instruction JUMP ~[int[1|0x1]] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" 
    successors "B10" "B11" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606840135379518263
    begin_IR
      LIR
      nr   68  <|@ instruction [v11|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   70  <|@ instruction CMPBRANCH (x: v9|DWORD, y: v11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699167914968222
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction MOV [v10|QWORD[.] + v11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   76  <|@ instruction v12|DWORD = INC v11|DWORD size: DWORD <|@ <|@
      nr   78  <|@ instruction JUMP ~[v12|DWORD] destination: B10 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4606753486221175844
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction v13|DWORD = LEA [v3|DWORD - 16] size: DWORD <|@ <|@
      nr   84  <|@ instruction JUMP ~[v11|DWORD] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B13" "B14" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608039995292795068
    begin_IR
      LIR
      nr   86  <|@ instruction [v14|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   88  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v14|DWORD) trueDestinationProbability: 0.19996410454965907 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597744362548122956
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction MOV [v10|QWORD[.] + v14|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   94  <|@ instruction v15|QWORD = MOVSXD v14|DWORD size: QWORD <|@ <|@
      nr   96  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 20] y: -1 size: DWORD <|@ <|@
      nr   98  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 24] y: -1 size: DWORD <|@ <|@
      nr  100  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 28] y: -1 size: DWORD <|@ <|@
      nr  102  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 32] y: -1 size: DWORD <|@ <|@
      nr  104  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 36] y: -1 size: DWORD <|@ <|@
      nr  106  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 40] y: -1 size: DWORD <|@ <|@
      nr  108  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 44] y: -1 size: DWORD <|@ <|@
      nr  110  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 48] y: -1 size: DWORD <|@ <|@
      nr  112  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 52] y: -1 size: DWORD <|@ <|@
      nr  114  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 56] y: -1 size: DWORD <|@ <|@
      nr  116  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 60] y: -1 size: DWORD <|@ <|@
      nr  118  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 64] y: -1 size: DWORD <|@ <|@
      nr  120  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 68] y: -1 size: DWORD <|@ <|@
      nr  122  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 72] y: -1 size: DWORD <|@ <|@
      nr  124  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 76] y: -1 size: DWORD <|@ <|@
      nr  126  <|@ instruction v16|DWORD = LEA [v14|DWORD + 16] size: DWORD <|@ <|@
      nr  128  <|@ instruction JUMP ~[v16|DWORD] destination: B13 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606753486221175845
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  132  <|@ instruction JUMP ~[v14|DWORD] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606840135379518264
    begin_IR
      LIR
      nr  134  <|@ instruction [v17|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  136  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v17|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699167914968223
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction MOV [v10|QWORD[.] + v17|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  142  <|@ instruction v18|DWORD = INC v17|DWORD size: DWORD <|@ <|@
      nr  144  <|@ instruction JUMP ~[v18|DWORD] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606753486221175845
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B3" 
    successors "B19" "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction v19|DWORD[_] = MOV [v0|QWORD[.] + 68] size: DWORD <|@ <|@
      nr  154  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction v20|DWORD = MOV [v19|DWORD[_] * 8 + 12] size: DWORD state [bci:68] <|@ <|@
      nr  156  <|@ instruction v21|DWORD[_] = MOV [v0|QWORD[.] + 52] size: DWORD <|@ <|@
      nr  158  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction v22|DWORD[_] = MOV [v21|DWORD[_] * 8 + 52] size: DWORD state [bci:68] <|@ <|@
      nr  160  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction NULLCHECK [v22|DWORD[_] * 8] state [bci:68] <|@ <|@
      nr  162  <|@ instruction TESTBRANCH (x: v20|DWORD, y: v20|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction MOV [v0|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr  168  <|@ instruction v23|DWORD[_] = MOV [v0|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  170  <|@ instruction v24|QWORD[.] = UNCOMPRESSPOINTER (input: v22|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@16d1397a encoding: base: 0 shift: 3 <|@ <|@
      nr  172  <|@ instruction v25|QWORD[.] = UNCOMPRESSPOINTER (input: v23|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@16d1397a encoding: base: 0 shift: 3 <|@ <|@
      nr  174  <|@ instruction rsi|QWORD[.] = MOVE v24|QWORD[.] moveKind: QWORD <|@ <|@
      nr  176  <|@ instruction rdx|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  178  <|@ instruction rcx|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr  180  <|@ instruction r8|QWORD[.] = MOVE v25|QWORD[.] moveKind: QWORD <|@ <|@
      nr  182  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:121] <|@ <|@
      nr  184  <|@ instruction v26|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  186  <|@ instruction TESTBRANCH (x: v26|DWORD, y: v26|DWORD) trueDestinationProbability: 3.0308973238957204E-4 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4607179688810405709
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  190  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B20" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction v27|DWORD = MOV [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  196  <|@ instruction MOV (x: [v0|QWORD[.] + 36], y: v27|DWORD) size: DWORD <|@ <|@
      nr  198  <|@ instruction INC [v0|QWORD[.] + 44] size: DWORD <|@ <|@
      nr  200  <|@ instruction rax|DWORD = MOVE v26|DWORD moveKind: DWORD <|@ <|@
      nr  202  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B18" 
    xhandlers
    flags 
    probability 4587023742297259456
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction JUMP ~[] destination: B3 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4554226642368960512
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction MOV [v0|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr  212  <|@ instruction JUMP ~[] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction MOV [r15|QWORD + 1156] y: -36891 size: DWORD <|@ <|@
      nr  218  <|@ instruction MOV [r15|QWORD + 1168] y: 17944 size: QWORD <|@ <|@
      nr  220  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1760) [bci: 44]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:44] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction MOV [r15|QWORD + 1156] y: -66323 size: DWORD <|@ <|@
      nr  226  <|@ instruction MOV [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  228  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:68] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction MOV [r15|QWORD + 1156] y: -65043 size: DWORD <|@ <|@
      nr  234  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  236  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1757) [bci: 10]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_0      
     2: putfield      #86         // hitEnd:boolean
     5: aload_0       
     6: iconst_0      
     7: putfield      #87         // requireEnd:boolean
    10: iload_1       
    11: ifge          18
    14: iconst_0      
    15: goto          19
    18: iload_1       
    19: istore_1      
    20: aload_0       
    21: iload_1       
    22: putfield      #2          // first:int
    25: aload_0       
    26: aload_0       
    27: getfield      #4          // oldLast:int
    30: ifge          37
    33: iload_1       
    34: goto          41
    37: aload_0       
    38: getfield      #4          // oldLast:int
    41: putfield      #4          // oldLast:int
    44: iconst_0      
    45: istore_2      
    46: iload_2       
    47: aload_0       
    48: getfield      #12         // groups:int[]
    51: arraylength   
    52: if_icmpge     68
    55: aload_0       
    56: getfield      #12         // groups:int[]
    59: iload_2       
    60: iconst_m1     
    61: iastore       
    62: iinc          
    65: goto          46
    68: iconst_0      
    69: istore_2      
    70: iload_2       
    71: aload_0       
    72: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    75: arraylength   
    76: if_icmpge     103
    79: aload_0       
    80: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    83: iload_2       
    84: aaload        
    85: ifnull        97
    88: aload_0       
    89: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    92: iload_2       
    93: aaload        
    94: invokevirtual #32         // java.util.regex.IntHashSet.clear:()void
    97: iinc          
   100: goto          70
   103: aload_0       
   104: iconst_0      
   105: putfield      #1          // acceptMode:int
   108: aload_0       
   109: getfield      #8          // parentPattern:java.util.regex.Pattern
   112: getfield      #88         // java.util.regex.Pattern.root:java.util.regex.Pattern$Node
   115: aload_0       
   116: iload_1       
   117: aload_0       
   118: getfield      #9          // text:java.lang.CharSequence
   121: invokevirtual #89         // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
   124: istore_2      
   125: iload_2       
   126: ifne          134
   129: aload_0       
   130: iconst_m1     
   131: putfield      #2          // first:int
   134: aload_0       
   135: aload_0       
   136: getfield      #3          // last:int
   139: putfield      #4          // oldLast:int
   142: aload_0       
   143: dup           
   144: getfield      #31         // modCount:int
   147: iconst_1      
   148: iadd          
   149: putfield      #31         // modCount:int
   152: iload_2       
   153: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "Before register allocation"
  rax|d fixed "[rax|d]" rax|d v26|d [0, 1[[182, 184[[200, 202[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v1|d [0, 1[[178, 183[ "NoSpillStore"
  rdx|- fixed "[rdx|-]" rdx|- v0|q [0, 8[[176, 183[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[182, 183[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 2[[182, 183[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v24|q [0, 6[[174, 183[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[182, 183[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- v25|q [0, 1[[180, 183[ "NoSpillStore"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[182, 183[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[182, 183[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[182, 183[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[182, 183[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[182, 183[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[182, 183[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[182, 183[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[182, 183[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[182, 183[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[182, 183[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[182, 183[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[182, 183[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[182, 183[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[182, 183[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[182, 183[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[182, 183[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[182, 183[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[182, 183[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[182, 183[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[182, 183[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[182, 183[ "NoDefinitionFound"
  v0|q QWORD "[v0|q]" v0|q rsi|- [6, 198[[204, 221[[222, 229[[230, 237[6 MustHaveRegister 10 MustHaveRegister 14 MustHaveRegister 16 MustHaveRegister 22 MustHaveRegister 24 MustHaveRegister 30 MustHaveRegister 152 MustHaveRegister 156 MustHaveRegister 166 MustHaveRegister 168 MustHaveRegister 176 ShouldHaveRegister 194 MustHaveRegister 196 MustHaveRegister 198 MustHaveRegister 210 MustHaveRegister  "NoSpillStore"
  v1|d DWORD "[v1|d]" v1|d rdx|- [8, 178[[204, 208[[214, 221[[222, 229[[230, 237[8 MustHaveRegister 18 MustHaveRegister 22 MustHaveRegister 28 MustHaveRegister 178 ShouldHaveRegister  "NoSpillStore"
  v2|d DWORD "[v2|d]" v2|d -1 [10, 64[10 MustHaveRegister 12 MustHaveRegister 58 MustHaveRegister 64 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[v3|d]" v3|d -1 [12, 146[12 MustHaveRegister 32 MustHaveRegister 36 ShouldHaveRegister 40 ShouldHaveRegister 46 ShouldHaveRegister 60 ShouldHaveRegister 62 MustHaveRegister 82 MustHaveRegister 136 MustHaveRegister 145 LiveAtLoopEnd  "NoSpillStore"
  v4|d DWORD "[v4|d]" v4|d -1 [24, 28[24 MustHaveRegister 26 MustHaveRegister 28 ShouldHaveRegister  "NoSpillStore"
  v5|d DWORD "[v5|d]" v5|d v4|d [28, 30[28 MustHaveRegister 30 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[v6|d]" v6|d v3|d [36, 38[36 MustHaveRegister 38 ShouldHaveRegister  "NoSpillStore"
  v7|q QWORD "[v7|q]" v7|q -1 [38, 42[38 MustHaveRegister 42 ShouldHaveRegister  "NoSpillStore"
  v8|q QWORD "[v8|q]" v8|q -1 [40, 42[40 MustHaveRegister 42 MustHaveRegister  "NoSpillStore"
  v9|d DWORD "[v9|d]" v9|d -1 [62, 80[62 MustHaveRegister 70 MustHaveRegister 79 LiveAtLoopEnd  "NoSpillStore"
  v10|q QWORD "[v10|q]" v10|q v2|d [64, 146[64 MustHaveRegister 74 MustHaveRegister 79 LiveAtLoopEnd 92 MustHaveRegister 96 MustHaveRegister 98 MustHaveRegister 100 MustHaveRegister 102 MustHaveRegister 104 MustHaveRegister 106 MustHaveRegister 108 MustHaveRegister 110 MustHaveRegister 112 MustHaveRegister 114 MustHaveRegister 116 MustHaveRegister 118 MustHaveRegister 120 MustHaveRegister 122 MustHaveRegister 124 MustHaveRegister 129 LiveAtLoopEnd 140 MustHaveRegister 145 LiveAtLoopEnd  "NoSpillStore"
  v11|d DWORD "[v11|d]" v11|d v12|d [68, 76[[80, 85[70 ShouldHaveRegister 74 MustHaveRegister 76 ShouldHaveRegister 84 ShouldHaveRegister  "NoSpillStore"
  v12|d DWORD "[v12|d]" v12|d v11|d [76, 79[76 MustHaveRegister 78 ShouldHaveRegister  "NoSpillStore"
  v13|d DWORD "[v13|d]" v13|d -1 [82, 130[82 MustHaveRegister 88 MustHaveRegister 129 LiveAtLoopEnd  "NoSpillStore"
  v14|d DWORD "[v14|d]" v14|d v11|d [86, 126[[130, 133[88 ShouldHaveRegister 92 MustHaveRegister 94 ShouldHaveRegister 126 MustHaveRegister 132 ShouldHaveRegister  "NoSpillStore"
  v15|q QWORD "[v15|q]" v15|q -1 [94, 124[94 MustHaveRegister 96 MustHaveRegister 98 MustHaveRegister 100 MustHaveRegister 102 MustHaveRegister 104 MustHaveRegister 106 MustHaveRegister 108 MustHaveRegister 110 MustHaveRegister 112 MustHaveRegister 114 MustHaveRegister 116 MustHaveRegister 118 MustHaveRegister 120 MustHaveRegister 122 MustHaveRegister 124 MustHaveRegister  "NoSpillStore"
  v16|d DWORD "[v16|d]" v16|d -1 [126, 129[126 MustHaveRegister 128 ShouldHaveRegister  "NoSpillStore"
  v17|d DWORD "[v17|d]" v17|d v14|d [134, 142[136 ShouldHaveRegister 140 MustHaveRegister 142 ShouldHaveRegister  "NoSpillStore"
  v18|d DWORD "[v18|d]" v18|d v17|d [142, 145[142 MustHaveRegister 144 ShouldHaveRegister  "NoSpillStore"
  v19|d DWORD "[v19|d]" v19|d -1 [152, 154[152 MustHaveRegister 154 MustHaveRegister  "NoSpillStore"
  v20|d DWORD "[v20|d]" v20|d -1 [154, 162[154 MustHaveRegister 162 MustHaveRegister  "NoSpillStore"
  v21|d DWORD "[v21|d]" v21|d -1 [156, 158[156 MustHaveRegister 158 MustHaveRegister  "NoSpillStore"
  v22|d DWORD "[v22|d]" v22|d -1 [158, 170[158 MustHaveRegister 160 MustHaveRegister 170 MustHaveRegister  "NoSpillStore"
  v23|d DWORD "[v23|d]" v23|d -1 [168, 172[168 MustHaveRegister 172 MustHaveRegister  "NoSpillStore"
  v24|q QWORD "[v24|q]" v24|q v22|d [170, 174[170 MustHaveRegister 174 ShouldHaveRegister  "NoSpillStore"
  v25|q QWORD "[v25|q]" v25|q v23|d [172, 180[172 MustHaveRegister 180 ShouldHaveRegister  "NoSpillStore"
  v26|d DWORD "[v26|d]" v26|d rax|d [184, 200[[208, 214[184 MustHaveRegister 186 MustHaveRegister 200 ShouldHaveRegister  "NoSpillStore"
  v27|d DWORD "[v27|d]" v27|d -1 [194, 196[194 MustHaveRegister 196 MustHaveRegister  "NoSpillStore"
end_intervals
begin_intervals
  name "After register allocation"
  rax|d fixed "[rax|d]" rax|d v26|d [0, 1[[182, 184[[200, 202[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v1|d [0, 1[[178, 183[ "NoSpillStore"
  rdx|- fixed "[rdx|-]" rdx|- v0|q [0, 8[[176, 183[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[182, 183[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 2[[182, 183[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v24|q [0, 6[[174, 183[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[182, 183[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- v25|q [0, 1[[180, 183[ "NoSpillStore"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[182, 183[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[182, 183[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[182, 183[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[182, 183[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[182, 183[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[182, 183[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[182, 183[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[182, 183[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[182, 183[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[182, 183[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[182, 183[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[182, 183[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[182, 183[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[182, 183[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[182, 183[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[182, 183[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[182, 183[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[182, 183[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[182, 183[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[182, 183[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[182, 183[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|- [6, 173[6 MustHaveRegister 10 MustHaveRegister 14 MustHaveRegister 16 MustHaveRegister 22 MustHaveRegister 24 MustHaveRegister 30 MustHaveRegister 152 MustHaveRegister 156 MustHaveRegister 166 MustHaveRegister 168 MustHaveRegister  "OneSpillStore"
  v1|d DWORD "[r10|d]" v1|d rdx|- [8, 178[[204, 208[[214, 221[[222, 229[[230, 237[8 MustHaveRegister 18 MustHaveRegister 22 MustHaveRegister 28 MustHaveRegister 178 ShouldHaveRegister  "NoSpillStore"
  v2|d DWORD "[rdx|d]" v2|d -1 [10, 64[10 MustHaveRegister 12 MustHaveRegister 58 MustHaveRegister 64 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[rcx|d]" v3|d -1 [12, 146[12 MustHaveRegister 32 MustHaveRegister 36 ShouldHaveRegister 40 ShouldHaveRegister 46 ShouldHaveRegister 60 ShouldHaveRegister 62 MustHaveRegister 82 MustHaveRegister 136 MustHaveRegister 145 LiveAtLoopEnd  "NoSpillStore"
  v4|d DWORD "[r8|d]" v4|d -1 [24, 28[24 MustHaveRegister 26 MustHaveRegister 28 ShouldHaveRegister  "NoSpillStore"
  v5|d DWORD "[r8|d]" v5|d v4|d [28, 30[28 MustHaveRegister 30 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[r8|d]" v6|d v3|d [36, 38[36 MustHaveRegister 38 ShouldHaveRegister  "NoSpillStore"
  v7|q QWORD "[r8|q]" v7|q -1 [38, 42[38 MustHaveRegister 42 ShouldHaveRegister  "NoSpillStore"
  v8|q QWORD "[r11|q]" v8|q -1 [40, 42[40 MustHaveRegister 42 MustHaveRegister  "NoSpillStore"
  v9|d DWORD "[r8|d]" v9|d -1 [62, 80[62 MustHaveRegister 70 MustHaveRegister 79 LiveAtLoopEnd  "NoSpillStore"
  v10|q QWORD "[rdx|q]" v10|q v2|d [64, 146[64 MustHaveRegister 74 MustHaveRegister 79 LiveAtLoopEnd 92 MustHaveRegister 96 MustHaveRegister 98 MustHaveRegister 100 MustHaveRegister 102 MustHaveRegister 104 MustHaveRegister 106 MustHaveRegister 108 MustHaveRegister 110 MustHaveRegister 112 MustHaveRegister 114 MustHaveRegister 116 MustHaveRegister 118 MustHaveRegister 120 MustHaveRegister 122 MustHaveRegister 124 MustHaveRegister 129 LiveAtLoopEnd 140 MustHaveRegister 145 LiveAtLoopEnd  "NoSpillStore"
  v11|d DWORD "[r11|d]" v11|d v12|d [68, 76[[80, 85[70 ShouldHaveRegister 74 MustHaveRegister 76 ShouldHaveRegister 84 ShouldHaveRegister  "NoSpillStore"
  v12|d DWORD "[r11|d]" v12|d v11|d [76, 79[76 MustHaveRegister 78 ShouldHaveRegister  "NoSpillStore"
  v13|d DWORD "[r8|d]" v13|d -1 [82, 130[82 MustHaveRegister 88 MustHaveRegister 129 LiveAtLoopEnd  "NoSpillStore"
  v14|d DWORD "[r11|d]" v14|d v11|d [86, 126[[130, 133[88 ShouldHaveRegister 92 MustHaveRegister 94 ShouldHaveRegister 126 MustHaveRegister 132 ShouldHaveRegister  "NoSpillStore"
  v15|q QWORD "[r9|q]" v15|q -1 [94, 124[94 MustHaveRegister 96 MustHaveRegister 98 MustHaveRegister 100 MustHaveRegister 102 MustHaveRegister 104 MustHaveRegister 106 MustHaveRegister 108 MustHaveRegister 110 MustHaveRegister 112 MustHaveRegister 114 MustHaveRegister 116 MustHaveRegister 118 MustHaveRegister 120 MustHaveRegister 122 MustHaveRegister 124 MustHaveRegister  "NoSpillStore"
  v16|d DWORD "[r11|d]" v16|d -1 [126, 129[126 MustHaveRegister 128 ShouldHaveRegister  "NoSpillStore"
  v17|d DWORD "[r11|d]" v17|d v14|d [134, 142[136 ShouldHaveRegister 140 MustHaveRegister 142 ShouldHaveRegister  "NoSpillStore"
  v18|d DWORD "[r11|d]" v18|d v17|d [142, 145[142 MustHaveRegister 144 ShouldHaveRegister  "NoSpillStore"
  v19|d DWORD "[rdx|d]" v19|d -1 [152, 154[152 MustHaveRegister 154 MustHaveRegister  "NoSpillStore"
  v20|d DWORD "[rdx|d]" v20|d -1 [154, 162[154 MustHaveRegister 162 MustHaveRegister  "NoSpillStore"
  v21|d DWORD "[rcx|d]" v21|d -1 [156, 158[156 MustHaveRegister 158 MustHaveRegister  "NoSpillStore"
  v22|d DWORD "[rcx|d]" v22|d -1 [158, 170[158 MustHaveRegister 160 MustHaveRegister 170 MustHaveRegister  "NoSpillStore"
  v23|d DWORD "[rdx|d]" v23|d -1 [168, 172[168 MustHaveRegister 172 MustHaveRegister  "NoSpillStore"
  v24|q QWORD "[rcx|q]" v24|q v22|d [170, 174[170 MustHaveRegister 174 ShouldHaveRegister  "NoSpillStore"
  v25|q QWORD "[r8|q]" v25|q v23|d [172, 180[172 MustHaveRegister 180 ShouldHaveRegister  "NoSpillStore"
  v26|d DWORD "[rax|d]" v26|d rax|d [184, 200[[208, 214[184 MustHaveRegister 186 MustHaveRegister 200 ShouldHaveRegister  "NoSpillStore"
  v27|d DWORD "[r10|d]" v27|d -1 [194, 196[194 MustHaveRegister 196 MustHaveRegister  "NoSpillStore"
  v28|q QWORD "[r11|q]" v0|q v0|q [173, 181[176 ShouldHaveRegister  "OneSpillStore"
  v29|q QWORD "[vstack:0|q]" v0|q v0|q [181, 192[ "OneSpillStore"
  v30|q QWORD "[rsi|q]" v0|q v0|q [192, 198[[204, 221[[222, 229[[230, 237[194 MustHaveRegister 196 MustHaveRegister 198 MustHaveRegister 210 MustHaveRegister  "OneSpillStore"
end_intervals
begin_cfg
  name "After LinearScanRegisterAllocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@bf3c5e0 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction v2|DWORD[_] = MOV [v0|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   12  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1755) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction v3|DWORD = MOV [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   14  <|@ instruction MOVB [v0|QWORD[.] + 48] y: 0 size: BYTE <|@ <|@
      nr   16  <|@ instruction MOVB [v0|QWORD[.] + 49] y: 0 size: BYTE <|@ <|@
      nr   18  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   22  <|@ instruction MOV (x: [v0|QWORD[.] + 28], y: v1|DWORD) size: DWORD <|@ <|@
      nr   24  <|@ instruction v4|DWORD = MOV [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   26  <|@ instruction TEST (x: v4|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   28  <|@ instruction v5|DWORD = CMOVE (falseValue: v4|DWORD, ~trueValue: v1|DWORD) condition: < <|@ <|@
      nr   30  <|@ instruction MOV (x: [v0|QWORD[.] + 36], y: v5|DWORD) size: DWORD <|@ <|@
      nr   32  <|@ instruction TESTBRANCH (x: v3|DWORD, y: v3|DWORD) trueDestinationProbability: 0.04762108250417496 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606753486221175844
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   36  <|@ instruction v6|DWORD = DEC v3|DWORD size: DWORD <|@ <|@
      nr   38  <|@ instruction v7|QWORD = MOVSXD v6|DWORD size: QWORD <|@ <|@
      nr   40  <|@ instruction v8|QWORD = MOV v3|DWORD size: DWORD <|@ <|@
      nr   42  <|@ instruction CMPBRANCH (x: v8|QWORD, y: v7|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B24" 
    xhandlers
    flags 
    probability 4602249886593805348
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction CMPCONSTBRANCH v3|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B24 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602249886593805348
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602249886593805348
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction JUMP ~[] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606753486221175844
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction MOV [v2|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr   60  <|@ instruction CMP v3|DWORD y: 3 size: DWORD <|@ <|@
      nr   62  <|@ instruction v9|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v3|DWORD) condition: |<| <|@ <|@
      nr   64  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@16d1397a encoding: base: 0 shift: 3 <|@ <|@
      nr   66  <|@ instruction JUMP ~[int[1|0x1]] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" 
    successors "B10" "B11" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606840135379518263
    begin_IR
      LIR
      nr   68  <|@ instruction [v11|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   70  <|@ instruction CMPBRANCH (x: v9|DWORD, y: v11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699167914968222
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction MOV [v10|QWORD[.] + v11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   76  <|@ instruction v12|DWORD = INC v11|DWORD size: DWORD <|@ <|@
      nr   78  <|@ instruction JUMP ~[v12|DWORD] destination: B10 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4606753486221175844
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction v13|DWORD = LEA [v3|DWORD - 16] size: DWORD <|@ <|@
      nr   84  <|@ instruction JUMP ~[v11|DWORD] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B13" "B14" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608039995292795068
    begin_IR
      LIR
      nr   86  <|@ instruction [v14|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   88  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v14|DWORD) trueDestinationProbability: 0.19996410454965907 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597744362548122956
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction MOV [v10|QWORD[.] + v14|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   94  <|@ instruction v15|QWORD = MOVSXD v14|DWORD size: QWORD <|@ <|@
      nr   96  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 20] y: -1 size: DWORD <|@ <|@
      nr   98  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 24] y: -1 size: DWORD <|@ <|@
      nr  100  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 28] y: -1 size: DWORD <|@ <|@
      nr  102  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 32] y: -1 size: DWORD <|@ <|@
      nr  104  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 36] y: -1 size: DWORD <|@ <|@
      nr  106  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 40] y: -1 size: DWORD <|@ <|@
      nr  108  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 44] y: -1 size: DWORD <|@ <|@
      nr  110  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 48] y: -1 size: DWORD <|@ <|@
      nr  112  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 52] y: -1 size: DWORD <|@ <|@
      nr  114  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 56] y: -1 size: DWORD <|@ <|@
      nr  116  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 60] y: -1 size: DWORD <|@ <|@
      nr  118  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 64] y: -1 size: DWORD <|@ <|@
      nr  120  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 68] y: -1 size: DWORD <|@ <|@
      nr  122  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 72] y: -1 size: DWORD <|@ <|@
      nr  124  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 76] y: -1 size: DWORD <|@ <|@
      nr  126  <|@ instruction v16|DWORD = LEA [v14|DWORD + 16] size: DWORD <|@ <|@
      nr  128  <|@ instruction JUMP ~[v16|DWORD] destination: B13 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606753486221175845
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  132  <|@ instruction JUMP ~[v14|DWORD] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606840135379518264
    begin_IR
      LIR
      nr  134  <|@ instruction [v17|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  136  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v17|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699167914968223
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction MOV [v10|QWORD[.] + v17|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  142  <|@ instruction v18|DWORD = INC v17|DWORD size: DWORD <|@ <|@
      nr  144  <|@ instruction JUMP ~[v18|DWORD] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606753486221175845
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B3" 
    successors "B19" "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction v19|DWORD[_] = MOV [v0|QWORD[.] + 68] size: DWORD <|@ <|@
      nr  154  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction v20|DWORD = MOV [v19|DWORD[_] * 8 + 12] size: DWORD state [bci:68] <|@ <|@
      nr  156  <|@ instruction v21|DWORD[_] = MOV [v0|QWORD[.] + 52] size: DWORD <|@ <|@
      nr  158  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction v22|DWORD[_] = MOV [v21|DWORD[_] * 8 + 52] size: DWORD state [bci:68] <|@ <|@
      nr  160  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction NULLCHECK [v22|DWORD[_] * 8] state [bci:68] <|@ <|@
      nr  162  <|@ instruction TESTBRANCH (x: v20|DWORD, y: v20|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction MOV [v0|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr  168  <|@ instruction v23|DWORD[_] = MOV [v0|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  170  <|@ instruction v24|QWORD[.] = UNCOMPRESSPOINTER (input: v22|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@16d1397a encoding: base: 0 shift: 3 <|@ <|@
      nr  172  <|@ instruction v25|QWORD[.] = UNCOMPRESSPOINTER (input: v23|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@16d1397a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v28|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  174  <|@ instruction rsi|QWORD[.] = MOVE v24|QWORD[.] moveKind: QWORD <|@ <|@
      nr  176  <|@ instruction rdx|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  178  <|@ instruction rcx|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr  180  <|@ instruction r8|QWORD[.] = MOVE v25|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD[.] = MOVE v28|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  182  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:121] <|@ <|@
      nr  184  <|@ instruction v26|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  186  <|@ instruction TESTBRANCH (x: v26|DWORD, y: v26|DWORD) trueDestinationProbability: 3.0308973238957204E-4 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4607179688810405709
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  190  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B20" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction v27|DWORD = MOV [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  196  <|@ instruction MOV (x: [v0|QWORD[.] + 36], y: v27|DWORD) size: DWORD <|@ <|@
      nr  198  <|@ instruction INC [v0|QWORD[.] + 44] size: DWORD <|@ <|@
      nr  200  <|@ instruction rax|DWORD = MOVE v26|DWORD moveKind: DWORD <|@ <|@
      nr  202  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B18" 
    xhandlers
    flags 
    probability 4587023742297259456
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction JUMP ~[] destination: B3 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4554226642368960512
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction MOV [v0|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr  212  <|@ instruction JUMP ~[] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction MOV [r15|QWORD + 1156] y: -36891 size: DWORD <|@ <|@
      nr  218  <|@ instruction MOV [r15|QWORD + 1168] y: 17944 size: QWORD <|@ <|@
      nr  220  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1760) [bci: 44]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:44] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction MOV [r15|QWORD + 1156] y: -66323 size: DWORD <|@ <|@
      nr  226  <|@ instruction MOV [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  228  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:68] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction MOV [r15|QWORD + 1156] y: -65043 size: DWORD <|@ <|@
      nr  234  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  236  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1757) [bci: 10]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_0      
     2: putfield      #86         // hitEnd:boolean
     5: aload_0       
     6: iconst_0      
     7: putfield      #87         // requireEnd:boolean
    10: iload_1       
    11: ifge          18
    14: iconst_0      
    15: goto          19
    18: iload_1       
    19: istore_1      
    20: aload_0       
    21: iload_1       
    22: putfield      #2          // first:int
    25: aload_0       
    26: aload_0       
    27: getfield      #4          // oldLast:int
    30: ifge          37
    33: iload_1       
    34: goto          41
    37: aload_0       
    38: getfield      #4          // oldLast:int
    41: putfield      #4          // oldLast:int
    44: iconst_0      
    45: istore_2      
    46: iload_2       
    47: aload_0       
    48: getfield      #12         // groups:int[]
    51: arraylength   
    52: if_icmpge     68
    55: aload_0       
    56: getfield      #12         // groups:int[]
    59: iload_2       
    60: iconst_m1     
    61: iastore       
    62: iinc          
    65: goto          46
    68: iconst_0      
    69: istore_2      
    70: iload_2       
    71: aload_0       
    72: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    75: arraylength   
    76: if_icmpge     103
    79: aload_0       
    80: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    83: iload_2       
    84: aaload        
    85: ifnull        97
    88: aload_0       
    89: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    92: iload_2       
    93: aaload        
    94: invokevirtual #32         // java.util.regex.IntHashSet.clear:()void
    97: iinc          
   100: goto          70
   103: aload_0       
   104: iconst_0      
   105: putfield      #1          // acceptMode:int
   108: aload_0       
   109: getfield      #8          // parentPattern:java.util.regex.Pattern
   112: getfield      #88         // java.util.regex.Pattern.root:java.util.regex.Pattern$Node
   115: aload_0       
   116: iload_1       
   117: aload_0       
   118: getfield      #9          // text:java.lang.CharSequence
   121: invokevirtual #89         // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
   124: istore_2      
   125: iload_2       
   126: ifne          134
   129: aload_0       
   130: iconst_m1     
   131: putfield      #2          // first:int
   134: aload_0       
   135: aload_0       
   136: getfield      #3          // last:int
   139: putfield      #4          // oldLast:int
   142: aload_0       
   143: dup           
   144: getfield      #31         // modCount:int
   147: iconst_1      
   148: iadd          
   149: putfield      #31         // modCount:int
   152: iload_2       
   153: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "After optimize spill position"
  rax|d fixed "[rax|d]" rax|d v26|d [0, 1[[182, 184[[200, 202[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v1|d [0, 1[[178, 183[ "NoSpillStore"
  rdx|- fixed "[rdx|-]" rdx|- v0|q [0, 8[[176, 183[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[182, 183[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 2[[182, 183[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v24|q [0, 6[[174, 183[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[182, 183[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- v25|q [0, 1[[180, 183[ "NoSpillStore"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[182, 183[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[182, 183[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[182, 183[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[182, 183[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[182, 183[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[182, 183[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[182, 183[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[182, 183[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[182, 183[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[182, 183[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[182, 183[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[182, 183[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[182, 183[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[182, 183[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[182, 183[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[182, 183[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[182, 183[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[182, 183[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[182, 183[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[182, 183[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[182, 183[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|- [6, 173[6 MustHaveRegister 10 MustHaveRegister 14 MustHaveRegister 16 MustHaveRegister 22 MustHaveRegister 24 MustHaveRegister 30 MustHaveRegister 152 MustHaveRegister 156 MustHaveRegister 166 MustHaveRegister 168 MustHaveRegister  "OneSpillStore"
  v1|d DWORD "[r10|d]" v1|d rdx|- [8, 178[[204, 208[[214, 221[[222, 229[[230, 237[8 MustHaveRegister 18 MustHaveRegister 22 MustHaveRegister 28 MustHaveRegister 178 ShouldHaveRegister  "NoSpillStore"
  v2|d DWORD "[rdx|d]" v2|d -1 [10, 64[10 MustHaveRegister 12 MustHaveRegister 58 MustHaveRegister 64 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[rcx|d]" v3|d -1 [12, 146[12 MustHaveRegister 32 MustHaveRegister 36 ShouldHaveRegister 40 ShouldHaveRegister 46 ShouldHaveRegister 60 ShouldHaveRegister 62 MustHaveRegister 82 MustHaveRegister 136 MustHaveRegister 145 LiveAtLoopEnd  "NoSpillStore"
  v4|d DWORD "[r8|d]" v4|d -1 [24, 28[24 MustHaveRegister 26 MustHaveRegister 28 ShouldHaveRegister  "NoSpillStore"
  v5|d DWORD "[r8|d]" v5|d v4|d [28, 30[28 MustHaveRegister 30 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[r8|d]" v6|d v3|d [36, 38[36 MustHaveRegister 38 ShouldHaveRegister  "NoSpillStore"
  v7|q QWORD "[r8|q]" v7|q -1 [38, 42[38 MustHaveRegister 42 ShouldHaveRegister  "NoSpillStore"
  v8|q QWORD "[r11|q]" v8|q -1 [40, 42[40 MustHaveRegister 42 MustHaveRegister  "NoSpillStore"
  v9|d DWORD "[r8|d]" v9|d -1 [62, 80[62 MustHaveRegister 70 MustHaveRegister 79 LiveAtLoopEnd  "NoSpillStore"
  v10|q QWORD "[rdx|q]" v10|q v2|d [64, 146[64 MustHaveRegister 74 MustHaveRegister 79 LiveAtLoopEnd 92 MustHaveRegister 96 MustHaveRegister 98 MustHaveRegister 100 MustHaveRegister 102 MustHaveRegister 104 MustHaveRegister 106 MustHaveRegister 108 MustHaveRegister 110 MustHaveRegister 112 MustHaveRegister 114 MustHaveRegister 116 MustHaveRegister 118 MustHaveRegister 120 MustHaveRegister 122 MustHaveRegister 124 MustHaveRegister 129 LiveAtLoopEnd 140 MustHaveRegister 145 LiveAtLoopEnd  "NoSpillStore"
  v11|d DWORD "[r11|d]" v11|d v12|d [68, 76[[80, 85[70 ShouldHaveRegister 74 MustHaveRegister 76 ShouldHaveRegister 84 ShouldHaveRegister  "NoSpillStore"
  v12|d DWORD "[r11|d]" v12|d v11|d [76, 79[76 MustHaveRegister 78 ShouldHaveRegister  "NoSpillStore"
  v13|d DWORD "[r8|d]" v13|d -1 [82, 130[82 MustHaveRegister 88 MustHaveRegister 129 LiveAtLoopEnd  "NoSpillStore"
  v14|d DWORD "[r11|d]" v14|d v11|d [86, 126[[130, 133[88 ShouldHaveRegister 92 MustHaveRegister 94 ShouldHaveRegister 126 MustHaveRegister 132 ShouldHaveRegister  "NoSpillStore"
  v15|q QWORD "[r9|q]" v15|q -1 [94, 124[94 MustHaveRegister 96 MustHaveRegister 98 MustHaveRegister 100 MustHaveRegister 102 MustHaveRegister 104 MustHaveRegister 106 MustHaveRegister 108 MustHaveRegister 110 MustHaveRegister 112 MustHaveRegister 114 MustHaveRegister 116 MustHaveRegister 118 MustHaveRegister 120 MustHaveRegister 122 MustHaveRegister 124 MustHaveRegister  "NoSpillStore"
  v16|d DWORD "[r11|d]" v16|d -1 [126, 129[126 MustHaveRegister 128 ShouldHaveRegister  "NoSpillStore"
  v17|d DWORD "[r11|d]" v17|d v14|d [134, 142[136 ShouldHaveRegister 140 MustHaveRegister 142 ShouldHaveRegister  "NoSpillStore"
  v18|d DWORD "[r11|d]" v18|d v17|d [142, 145[142 MustHaveRegister 144 ShouldHaveRegister  "NoSpillStore"
  v19|d DWORD "[rdx|d]" v19|d -1 [152, 154[152 MustHaveRegister 154 MustHaveRegister  "NoSpillStore"
  v20|d DWORD "[rdx|d]" v20|d -1 [154, 162[154 MustHaveRegister 162 MustHaveRegister  "NoSpillStore"
  v21|d DWORD "[rcx|d]" v21|d -1 [156, 158[156 MustHaveRegister 158 MustHaveRegister  "NoSpillStore"
  v22|d DWORD "[rcx|d]" v22|d -1 [158, 170[158 MustHaveRegister 160 MustHaveRegister 170 MustHaveRegister  "NoSpillStore"
  v23|d DWORD "[rdx|d]" v23|d -1 [168, 172[168 MustHaveRegister 172 MustHaveRegister  "NoSpillStore"
  v24|q QWORD "[rcx|q]" v24|q v22|d [170, 174[170 MustHaveRegister 174 ShouldHaveRegister  "NoSpillStore"
  v25|q QWORD "[r8|q]" v25|q v23|d [172, 180[172 MustHaveRegister 180 ShouldHaveRegister  "NoSpillStore"
  v26|d DWORD "[rax|d]" v26|d rax|d [184, 200[[208, 214[184 MustHaveRegister 186 MustHaveRegister 200 ShouldHaveRegister  "NoSpillStore"
  v27|d DWORD "[r10|d]" v27|d -1 [194, 196[194 MustHaveRegister 196 MustHaveRegister  "NoSpillStore"
  v28|q QWORD "[r11|q]" v0|q v0|q [173, 181[176 ShouldHaveRegister  "OneSpillStore"
  v29|q QWORD "[vstack:0|q]" v0|q v0|q [181, 192[ "OneSpillStore"
  v30|q QWORD "[rsi|q]" v0|q v0|q [192, 198[[204, 221[[222, 229[[230, 237[194 MustHaveRegister 196 MustHaveRegister 198 MustHaveRegister 210 MustHaveRegister  "OneSpillStore"
end_intervals
begin_cfg
  name "After LinearScanOptimizeSpillPosition"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@bf3c5e0 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction v2|DWORD[_] = MOV [v0|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   12  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1755) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction v3|DWORD = MOV [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   14  <|@ instruction MOVB [v0|QWORD[.] + 48] y: 0 size: BYTE <|@ <|@
      nr   16  <|@ instruction MOVB [v0|QWORD[.] + 49] y: 0 size: BYTE <|@ <|@
      nr   18  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   22  <|@ instruction MOV (x: [v0|QWORD[.] + 28], y: v1|DWORD) size: DWORD <|@ <|@
      nr   24  <|@ instruction v4|DWORD = MOV [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   26  <|@ instruction TEST (x: v4|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   28  <|@ instruction v5|DWORD = CMOVE (falseValue: v4|DWORD, ~trueValue: v1|DWORD) condition: < <|@ <|@
      nr   30  <|@ instruction MOV (x: [v0|QWORD[.] + 36], y: v5|DWORD) size: DWORD <|@ <|@
      nr   32  <|@ instruction TESTBRANCH (x: v3|DWORD, y: v3|DWORD) trueDestinationProbability: 0.04762108250417496 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606753486221175844
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   36  <|@ instruction v6|DWORD = DEC v3|DWORD size: DWORD <|@ <|@
      nr   38  <|@ instruction v7|QWORD = MOVSXD v6|DWORD size: QWORD <|@ <|@
      nr   40  <|@ instruction v8|QWORD = MOV v3|DWORD size: DWORD <|@ <|@
      nr   42  <|@ instruction CMPBRANCH (x: v8|QWORD, y: v7|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B24" 
    xhandlers
    flags 
    probability 4602249886593805348
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction CMPCONSTBRANCH v3|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B24 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602249886593805348
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602249886593805348
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction JUMP ~[] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606753486221175844
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction MOV [v2|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr   60  <|@ instruction CMP v3|DWORD y: 3 size: DWORD <|@ <|@
      nr   62  <|@ instruction v9|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v3|DWORD) condition: |<| <|@ <|@
      nr   64  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@16d1397a encoding: base: 0 shift: 3 <|@ <|@
      nr   66  <|@ instruction JUMP ~[int[1|0x1]] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" 
    successors "B10" "B11" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606840135379518263
    begin_IR
      LIR
      nr   68  <|@ instruction [v11|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   70  <|@ instruction CMPBRANCH (x: v9|DWORD, y: v11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699167914968222
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction MOV [v10|QWORD[.] + v11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   76  <|@ instruction v12|DWORD = INC v11|DWORD size: DWORD <|@ <|@
      nr   78  <|@ instruction JUMP ~[v12|DWORD] destination: B10 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4606753486221175844
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction v13|DWORD = LEA [v3|DWORD - 16] size: DWORD <|@ <|@
      nr   84  <|@ instruction JUMP ~[v11|DWORD] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B13" "B14" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608039995292795068
    begin_IR
      LIR
      nr   86  <|@ instruction [v14|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   88  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v14|DWORD) trueDestinationProbability: 0.19996410454965907 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597744362548122956
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction MOV [v10|QWORD[.] + v14|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   94  <|@ instruction v15|QWORD = MOVSXD v14|DWORD size: QWORD <|@ <|@
      nr   96  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 20] y: -1 size: DWORD <|@ <|@
      nr   98  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 24] y: -1 size: DWORD <|@ <|@
      nr  100  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 28] y: -1 size: DWORD <|@ <|@
      nr  102  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 32] y: -1 size: DWORD <|@ <|@
      nr  104  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 36] y: -1 size: DWORD <|@ <|@
      nr  106  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 40] y: -1 size: DWORD <|@ <|@
      nr  108  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 44] y: -1 size: DWORD <|@ <|@
      nr  110  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 48] y: -1 size: DWORD <|@ <|@
      nr  112  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 52] y: -1 size: DWORD <|@ <|@
      nr  114  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 56] y: -1 size: DWORD <|@ <|@
      nr  116  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 60] y: -1 size: DWORD <|@ <|@
      nr  118  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 64] y: -1 size: DWORD <|@ <|@
      nr  120  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 68] y: -1 size: DWORD <|@ <|@
      nr  122  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 72] y: -1 size: DWORD <|@ <|@
      nr  124  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 76] y: -1 size: DWORD <|@ <|@
      nr  126  <|@ instruction v16|DWORD = LEA [v14|DWORD + 16] size: DWORD <|@ <|@
      nr  128  <|@ instruction JUMP ~[v16|DWORD] destination: B13 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606753486221175845
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  132  <|@ instruction JUMP ~[v14|DWORD] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606840135379518264
    begin_IR
      LIR
      nr  134  <|@ instruction [v17|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  136  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v17|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699167914968223
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction MOV [v10|QWORD[.] + v17|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  142  <|@ instruction v18|DWORD = INC v17|DWORD size: DWORD <|@ <|@
      nr  144  <|@ instruction JUMP ~[v18|DWORD] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606753486221175845
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B3" 
    successors "B19" "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction v19|DWORD[_] = MOV [v0|QWORD[.] + 68] size: DWORD <|@ <|@
      nr  154  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction v20|DWORD = MOV [v19|DWORD[_] * 8 + 12] size: DWORD state [bci:68] <|@ <|@
      nr  156  <|@ instruction v21|DWORD[_] = MOV [v0|QWORD[.] + 52] size: DWORD <|@ <|@
      nr  158  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction v22|DWORD[_] = MOV [v21|DWORD[_] * 8 + 52] size: DWORD state [bci:68] <|@ <|@
      nr  160  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction NULLCHECK [v22|DWORD[_] * 8] state [bci:68] <|@ <|@
      nr  162  <|@ instruction TESTBRANCH (x: v20|DWORD, y: v20|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction MOV [v0|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr  168  <|@ instruction v23|DWORD[_] = MOV [v0|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  170  <|@ instruction v24|QWORD[.] = UNCOMPRESSPOINTER (input: v22|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@16d1397a encoding: base: 0 shift: 3 <|@ <|@
      nr  172  <|@ instruction v25|QWORD[.] = UNCOMPRESSPOINTER (input: v23|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@16d1397a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v28|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  174  <|@ instruction rsi|QWORD[.] = MOVE v24|QWORD[.] moveKind: QWORD <|@ <|@
      nr  176  <|@ instruction rdx|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  178  <|@ instruction rcx|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr  180  <|@ instruction r8|QWORD[.] = MOVE v25|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD[.] = MOVE v28|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  182  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:121] <|@ <|@
      nr  184  <|@ instruction v26|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  186  <|@ instruction TESTBRANCH (x: v26|DWORD, y: v26|DWORD) trueDestinationProbability: 3.0308973238957204E-4 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4607179688810405709
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  190  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B20" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction v27|DWORD = MOV [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  196  <|@ instruction MOV (x: [v0|QWORD[.] + 36], y: v27|DWORD) size: DWORD <|@ <|@
      nr  198  <|@ instruction INC [v0|QWORD[.] + 44] size: DWORD <|@ <|@
      nr  200  <|@ instruction rax|DWORD = MOVE v26|DWORD moveKind: DWORD <|@ <|@
      nr  202  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B18" 
    xhandlers
    flags 
    probability 4587023742297259456
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction JUMP ~[] destination: B3 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4554226642368960512
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction MOV [v0|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr  212  <|@ instruction JUMP ~[] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction MOV [r15|QWORD + 1156] y: -36891 size: DWORD <|@ <|@
      nr  218  <|@ instruction MOV [r15|QWORD + 1168] y: 17944 size: QWORD <|@ <|@
      nr  220  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1760) [bci: 44]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:44] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction MOV [r15|QWORD + 1156] y: -66323 size: DWORD <|@ <|@
      nr  226  <|@ instruction MOV [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  228  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:68] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction MOV [r15|QWORD + 1156] y: -65043 size: DWORD <|@ <|@
      nr  234  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  236  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1757) [bci: 10]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_0      
     2: putfield      #86         // hitEnd:boolean
     5: aload_0       
     6: iconst_0      
     7: putfield      #87         // requireEnd:boolean
    10: iload_1       
    11: ifge          18
    14: iconst_0      
    15: goto          19
    18: iload_1       
    19: istore_1      
    20: aload_0       
    21: iload_1       
    22: putfield      #2          // first:int
    25: aload_0       
    26: aload_0       
    27: getfield      #4          // oldLast:int
    30: ifge          37
    33: iload_1       
    34: goto          41
    37: aload_0       
    38: getfield      #4          // oldLast:int
    41: putfield      #4          // oldLast:int
    44: iconst_0      
    45: istore_2      
    46: iload_2       
    47: aload_0       
    48: getfield      #12         // groups:int[]
    51: arraylength   
    52: if_icmpge     68
    55: aload_0       
    56: getfield      #12         // groups:int[]
    59: iload_2       
    60: iconst_m1     
    61: iastore       
    62: iinc          
    65: goto          46
    68: iconst_0      
    69: istore_2      
    70: iload_2       
    71: aload_0       
    72: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    75: arraylength   
    76: if_icmpge     103
    79: aload_0       
    80: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    83: iload_2       
    84: aaload        
    85: ifnull        97
    88: aload_0       
    89: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    92: iload_2       
    93: aaload        
    94: invokevirtual #32         // java.util.regex.IntHashSet.clear:()void
    97: iinc          
   100: goto          70
   103: aload_0       
   104: iconst_0      
   105: putfield      #1          // acceptMode:int
   108: aload_0       
   109: getfield      #8          // parentPattern:java.util.regex.Pattern
   112: getfield      #88         // java.util.regex.Pattern.root:java.util.regex.Pattern$Node
   115: aload_0       
   116: iload_1       
   117: aload_0       
   118: getfield      #9          // text:java.lang.CharSequence
   121: invokevirtual #89         // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
   124: istore_2      
   125: iload_2       
   126: ifne          134
   129: aload_0       
   130: iconst_m1     
   131: putfield      #2          // first:int
   134: aload_0       
   135: aload_0       
   136: getfield      #3          // last:int
   139: putfield      #4          // oldLast:int
   142: aload_0       
   143: dup           
   144: getfield      #31         // modCount:int
   147: iconst_1      
   148: iadd          
   149: putfield      #31         // modCount:int
   152: iload_2       
   153: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "After resolve data flow"
  rax|d fixed "[rax|d]" rax|d v26|d [0, 1[[182, 184[[200, 202[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v1|d [0, 1[[178, 183[ "NoSpillStore"
  rdx|- fixed "[rdx|-]" rdx|- v0|q [0, 8[[176, 183[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[182, 183[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 2[[182, 183[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v24|q [0, 6[[174, 183[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[182, 183[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- v25|q [0, 1[[180, 183[ "NoSpillStore"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[182, 183[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[182, 183[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[182, 183[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[182, 183[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[182, 183[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[182, 183[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[182, 183[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[182, 183[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[182, 183[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[182, 183[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[182, 183[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[182, 183[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[182, 183[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[182, 183[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[182, 183[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[182, 183[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[182, 183[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[182, 183[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[182, 183[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[182, 183[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[182, 183[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|- [6, 173[6 MustHaveRegister 10 MustHaveRegister 14 MustHaveRegister 16 MustHaveRegister 22 MustHaveRegister 24 MustHaveRegister 30 MustHaveRegister 152 MustHaveRegister 156 MustHaveRegister 166 MustHaveRegister 168 MustHaveRegister  "OneSpillStore"
  v1|d DWORD "[r10|d]" v1|d rdx|- [8, 178[[204, 208[[214, 221[[222, 229[[230, 237[8 MustHaveRegister 18 MustHaveRegister 22 MustHaveRegister 28 MustHaveRegister 178 ShouldHaveRegister  "NoSpillStore"
  v2|d DWORD "[rdx|d]" v2|d -1 [10, 64[10 MustHaveRegister 12 MustHaveRegister 58 MustHaveRegister 64 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[rcx|d]" v3|d -1 [12, 146[12 MustHaveRegister 32 MustHaveRegister 36 ShouldHaveRegister 40 ShouldHaveRegister 46 ShouldHaveRegister 60 ShouldHaveRegister 62 MustHaveRegister 82 MustHaveRegister 136 MustHaveRegister 145 LiveAtLoopEnd  "NoSpillStore"
  v4|d DWORD "[r8|d]" v4|d -1 [24, 28[24 MustHaveRegister 26 MustHaveRegister 28 ShouldHaveRegister  "NoSpillStore"
  v5|d DWORD "[r8|d]" v5|d v4|d [28, 30[28 MustHaveRegister 30 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[r8|d]" v6|d v3|d [36, 38[36 MustHaveRegister 38 ShouldHaveRegister  "NoSpillStore"
  v7|q QWORD "[r8|q]" v7|q -1 [38, 42[38 MustHaveRegister 42 ShouldHaveRegister  "NoSpillStore"
  v8|q QWORD "[r11|q]" v8|q -1 [40, 42[40 MustHaveRegister 42 MustHaveRegister  "NoSpillStore"
  v9|d DWORD "[r8|d]" v9|d -1 [62, 80[62 MustHaveRegister 70 MustHaveRegister 79 LiveAtLoopEnd  "NoSpillStore"
  v10|q QWORD "[rdx|q]" v10|q v2|d [64, 146[64 MustHaveRegister 74 MustHaveRegister 79 LiveAtLoopEnd 92 MustHaveRegister 96 MustHaveRegister 98 MustHaveRegister 100 MustHaveRegister 102 MustHaveRegister 104 MustHaveRegister 106 MustHaveRegister 108 MustHaveRegister 110 MustHaveRegister 112 MustHaveRegister 114 MustHaveRegister 116 MustHaveRegister 118 MustHaveRegister 120 MustHaveRegister 122 MustHaveRegister 124 MustHaveRegister 129 LiveAtLoopEnd 140 MustHaveRegister 145 LiveAtLoopEnd  "NoSpillStore"
  v11|d DWORD "[r11|d]" v11|d v12|d [68, 76[[80, 85[70 ShouldHaveRegister 74 MustHaveRegister 76 ShouldHaveRegister 84 ShouldHaveRegister  "NoSpillStore"
  v12|d DWORD "[r11|d]" v12|d v11|d [76, 79[76 MustHaveRegister 78 ShouldHaveRegister  "NoSpillStore"
  v13|d DWORD "[r8|d]" v13|d -1 [82, 130[82 MustHaveRegister 88 MustHaveRegister 129 LiveAtLoopEnd  "NoSpillStore"
  v14|d DWORD "[r11|d]" v14|d v11|d [86, 126[[130, 133[88 ShouldHaveRegister 92 MustHaveRegister 94 ShouldHaveRegister 126 MustHaveRegister 132 ShouldHaveRegister  "NoSpillStore"
  v15|q QWORD "[r9|q]" v15|q -1 [94, 124[94 MustHaveRegister 96 MustHaveRegister 98 MustHaveRegister 100 MustHaveRegister 102 MustHaveRegister 104 MustHaveRegister 106 MustHaveRegister 108 MustHaveRegister 110 MustHaveRegister 112 MustHaveRegister 114 MustHaveRegister 116 MustHaveRegister 118 MustHaveRegister 120 MustHaveRegister 122 MustHaveRegister 124 MustHaveRegister  "NoSpillStore"
  v16|d DWORD "[r11|d]" v16|d -1 [126, 129[126 MustHaveRegister 128 ShouldHaveRegister  "NoSpillStore"
  v17|d DWORD "[r11|d]" v17|d v14|d [134, 142[136 ShouldHaveRegister 140 MustHaveRegister 142 ShouldHaveRegister  "NoSpillStore"
  v18|d DWORD "[r11|d]" v18|d v17|d [142, 145[142 MustHaveRegister 144 ShouldHaveRegister  "NoSpillStore"
  v19|d DWORD "[rdx|d]" v19|d -1 [152, 154[152 MustHaveRegister 154 MustHaveRegister  "NoSpillStore"
  v20|d DWORD "[rdx|d]" v20|d -1 [154, 162[154 MustHaveRegister 162 MustHaveRegister  "NoSpillStore"
  v21|d DWORD "[rcx|d]" v21|d -1 [156, 158[156 MustHaveRegister 158 MustHaveRegister  "NoSpillStore"
  v22|d DWORD "[rcx|d]" v22|d -1 [158, 170[158 MustHaveRegister 160 MustHaveRegister 170 MustHaveRegister  "NoSpillStore"
  v23|d DWORD "[rdx|d]" v23|d -1 [168, 172[168 MustHaveRegister 172 MustHaveRegister  "NoSpillStore"
  v24|q QWORD "[rcx|q]" v24|q v22|d [170, 174[170 MustHaveRegister 174 ShouldHaveRegister  "NoSpillStore"
  v25|q QWORD "[r8|q]" v25|q v23|d [172, 180[172 MustHaveRegister 180 ShouldHaveRegister  "NoSpillStore"
  v26|d DWORD "[rax|d]" v26|d rax|d [184, 200[[208, 214[184 MustHaveRegister 186 MustHaveRegister 200 ShouldHaveRegister  "NoSpillStore"
  v27|d DWORD "[r10|d]" v27|d -1 [194, 196[194 MustHaveRegister 196 MustHaveRegister  "NoSpillStore"
  v28|q QWORD "[r11|q]" v0|q v0|q [173, 181[176 ShouldHaveRegister  "OneSpillStore"
  v29|q QWORD "[vstack:0|q]" v0|q v0|q [181, 192[ "OneSpillStore"
  v30|q QWORD "[rsi|q]" v0|q v0|q [192, 198[[204, 221[[222, 229[[230, 237[194 MustHaveRegister 196 MustHaveRegister 198 MustHaveRegister 210 MustHaveRegister  "OneSpillStore"
end_intervals
begin_cfg
  name "After SSALinearScanResolveDataFlow"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@bf3c5e0 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction v2|DWORD[_] = MOV [v0|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   12  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1755) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction v3|DWORD = MOV [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   14  <|@ instruction MOVB [v0|QWORD[.] + 48] y: 0 size: BYTE <|@ <|@
      nr   16  <|@ instruction MOVB [v0|QWORD[.] + 49] y: 0 size: BYTE <|@ <|@
      nr   18  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   22  <|@ instruction MOV (x: [v0|QWORD[.] + 28], y: v1|DWORD) size: DWORD <|@ <|@
      nr   24  <|@ instruction v4|DWORD = MOV [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   26  <|@ instruction TEST (x: v4|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   28  <|@ instruction v5|DWORD = CMOVE (falseValue: v4|DWORD, ~trueValue: v1|DWORD) condition: < <|@ <|@
      nr   30  <|@ instruction MOV (x: [v0|QWORD[.] + 36], y: v5|DWORD) size: DWORD <|@ <|@
      nr   32  <|@ instruction TESTBRANCH (x: v3|DWORD, y: v3|DWORD) trueDestinationProbability: 0.04762108250417496 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606753486221175844
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   36  <|@ instruction v6|DWORD = DEC v3|DWORD size: DWORD <|@ <|@
      nr   38  <|@ instruction v7|QWORD = MOVSXD v6|DWORD size: QWORD <|@ <|@
      nr   40  <|@ instruction v8|QWORD = MOV v3|DWORD size: DWORD <|@ <|@
      nr   42  <|@ instruction CMPBRANCH (x: v8|QWORD, y: v7|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B24" 
    xhandlers
    flags 
    probability 4602249886593805348
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction CMPCONSTBRANCH v3|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B24 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602249886593805348
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602249886593805348
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction JUMP ~[] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606753486221175844
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction MOV [v2|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr   60  <|@ instruction CMP v3|DWORD y: 3 size: DWORD <|@ <|@
      nr   62  <|@ instruction v9|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v3|DWORD) condition: |<| <|@ <|@
      nr   64  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@16d1397a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   66  <|@ instruction JUMP ~[] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" 
    successors "B10" "B11" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606840135379518263
    begin_IR
      LIR
      nr   68  <|@ instruction [v11|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   70  <|@ instruction CMPBRANCH (x: v9|DWORD, y: v11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699167914968222
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction MOV [v10|QWORD[.] + v11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   76  <|@ instruction v12|DWORD = INC v11|DWORD size: DWORD <|@ <|@
      nr   78  <|@ instruction JUMP ~[] destination: B10 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4606753486221175844
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction v13|DWORD = LEA [v3|DWORD - 16] size: DWORD <|@ <|@
      nr   84  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B13" "B14" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608039995292795068
    begin_IR
      LIR
      nr   86  <|@ instruction [v14|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   88  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v14|DWORD) trueDestinationProbability: 0.19996410454965907 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597744362548122956
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction MOV [v10|QWORD[.] + v14|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   94  <|@ instruction v15|QWORD = MOVSXD v14|DWORD size: QWORD <|@ <|@
      nr   96  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 20] y: -1 size: DWORD <|@ <|@
      nr   98  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 24] y: -1 size: DWORD <|@ <|@
      nr  100  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 28] y: -1 size: DWORD <|@ <|@
      nr  102  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 32] y: -1 size: DWORD <|@ <|@
      nr  104  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 36] y: -1 size: DWORD <|@ <|@
      nr  106  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 40] y: -1 size: DWORD <|@ <|@
      nr  108  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 44] y: -1 size: DWORD <|@ <|@
      nr  110  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 48] y: -1 size: DWORD <|@ <|@
      nr  112  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 52] y: -1 size: DWORD <|@ <|@
      nr  114  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 56] y: -1 size: DWORD <|@ <|@
      nr  116  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 60] y: -1 size: DWORD <|@ <|@
      nr  118  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 64] y: -1 size: DWORD <|@ <|@
      nr  120  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 68] y: -1 size: DWORD <|@ <|@
      nr  122  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 72] y: -1 size: DWORD <|@ <|@
      nr  124  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 76] y: -1 size: DWORD <|@ <|@
      nr  126  <|@ instruction v16|DWORD = LEA [v14|DWORD + 16] size: DWORD <|@ <|@
      nr  128  <|@ instruction JUMP ~[] destination: B13 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606753486221175845
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  132  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606840135379518264
    begin_IR
      LIR
      nr  134  <|@ instruction [v17|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  136  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v17|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699167914968223
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction MOV [v10|QWORD[.] + v17|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  142  <|@ instruction v18|DWORD = INC v17|DWORD size: DWORD <|@ <|@
      nr  144  <|@ instruction JUMP ~[] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606753486221175845
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B3" 
    successors "B19" "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction v19|DWORD[_] = MOV [v0|QWORD[.] + 68] size: DWORD <|@ <|@
      nr  154  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction v20|DWORD = MOV [v19|DWORD[_] * 8 + 12] size: DWORD state [bci:68] <|@ <|@
      nr  156  <|@ instruction v21|DWORD[_] = MOV [v0|QWORD[.] + 52] size: DWORD <|@ <|@
      nr  158  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction v22|DWORD[_] = MOV [v21|DWORD[_] * 8 + 52] size: DWORD state [bci:68] <|@ <|@
      nr  160  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction NULLCHECK [v22|DWORD[_] * 8] state [bci:68] <|@ <|@
      nr  162  <|@ instruction TESTBRANCH (x: v20|DWORD, y: v20|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction MOV [v0|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr  168  <|@ instruction v23|DWORD[_] = MOV [v0|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  170  <|@ instruction v24|QWORD[.] = UNCOMPRESSPOINTER (input: v22|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@16d1397a encoding: base: 0 shift: 3 <|@ <|@
      nr  172  <|@ instruction v25|QWORD[.] = UNCOMPRESSPOINTER (input: v23|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@16d1397a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v28|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  174  <|@ instruction rsi|QWORD[.] = MOVE v24|QWORD[.] moveKind: QWORD <|@ <|@
      nr  176  <|@ instruction rdx|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  178  <|@ instruction rcx|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr  180  <|@ instruction r8|QWORD[.] = MOVE v25|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD[.] = MOVE v28|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  182  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:121] <|@ <|@
      nr  184  <|@ instruction v26|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  186  <|@ instruction TESTBRANCH (x: v26|DWORD, y: v26|DWORD) trueDestinationProbability: 3.0308973238957204E-4 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4607179688810405709
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v30|QWORD[.] = MOVE v29|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  190  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B20" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction v27|DWORD = MOV [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  196  <|@ instruction MOV (x: [v0|QWORD[.] + 36], y: v27|DWORD) size: DWORD <|@ <|@
      nr  198  <|@ instruction INC [v0|QWORD[.] + 44] size: DWORD <|@ <|@
      nr  200  <|@ instruction rax|DWORD = MOVE v26|DWORD moveKind: DWORD <|@ <|@
      nr  202  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B18" 
    xhandlers
    flags 
    probability 4587023742297259456
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction JUMP ~[] destination: B3 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4554226642368960512
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v30|QWORD[.] = MOVE v29|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  210  <|@ instruction MOV [v0|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr  212  <|@ instruction JUMP ~[] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction MOV [r15|QWORD + 1156] y: -36891 size: DWORD <|@ <|@
      nr  218  <|@ instruction MOV [r15|QWORD + 1168] y: 17944 size: QWORD <|@ <|@
      nr  220  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1760) [bci: 44]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:44] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction MOV [r15|QWORD + 1156] y: -66323 size: DWORD <|@ <|@
      nr  226  <|@ instruction MOV [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  228  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:68] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction MOV [r15|QWORD + 1156] y: -65043 size: DWORD <|@ <|@
      nr  234  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  236  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1757) [bci: 10]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_0      
     2: putfield      #86         // hitEnd:boolean
     5: aload_0       
     6: iconst_0      
     7: putfield      #87         // requireEnd:boolean
    10: iload_1       
    11: ifge          18
    14: iconst_0      
    15: goto          19
    18: iload_1       
    19: istore_1      
    20: aload_0       
    21: iload_1       
    22: putfield      #2          // first:int
    25: aload_0       
    26: aload_0       
    27: getfield      #4          // oldLast:int
    30: ifge          37
    33: iload_1       
    34: goto          41
    37: aload_0       
    38: getfield      #4          // oldLast:int
    41: putfield      #4          // oldLast:int
    44: iconst_0      
    45: istore_2      
    46: iload_2       
    47: aload_0       
    48: getfield      #12         // groups:int[]
    51: arraylength   
    52: if_icmpge     68
    55: aload_0       
    56: getfield      #12         // groups:int[]
    59: iload_2       
    60: iconst_m1     
    61: iastore       
    62: iinc          
    65: goto          46
    68: iconst_0      
    69: istore_2      
    70: iload_2       
    71: aload_0       
    72: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    75: arraylength   
    76: if_icmpge     103
    79: aload_0       
    80: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    83: iload_2       
    84: aaload        
    85: ifnull        97
    88: aload_0       
    89: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    92: iload_2       
    93: aaload        
    94: invokevirtual #32         // java.util.regex.IntHashSet.clear:()void
    97: iinc          
   100: goto          70
   103: aload_0       
   104: iconst_0      
   105: putfield      #1          // acceptMode:int
   108: aload_0       
   109: getfield      #8          // parentPattern:java.util.regex.Pattern
   112: getfield      #88         // java.util.regex.Pattern.root:java.util.regex.Pattern$Node
   115: aload_0       
   116: iload_1       
   117: aload_0       
   118: getfield      #9          // text:java.lang.CharSequence
   121: invokevirtual #89         // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
   124: istore_2      
   125: iload_2       
   126: ifne          134
   129: aload_0       
   130: iconst_m1     
   131: putfield      #2          // first:int
   134: aload_0       
   135: aload_0       
   136: getfield      #3          // last:int
   139: putfield      #4          // oldLast:int
   142: aload_0       
   143: dup           
   144: getfield      #31         // modCount:int
   147: iconst_1      
   148: iadd          
   149: putfield      #31         // modCount:int
   152: iload_2       
   153: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanEliminateSpillMove"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@bf3c5e0 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction v2|DWORD[_] = MOV [v0|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   12  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1755) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction v3|DWORD = MOV [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   14  <|@ instruction MOVB [v0|QWORD[.] + 48] y: 0 size: BYTE <|@ <|@
      nr   16  <|@ instruction MOVB [v0|QWORD[.] + 49] y: 0 size: BYTE <|@ <|@
      nr   18  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   22  <|@ instruction MOV (x: [v0|QWORD[.] + 28], y: v1|DWORD) size: DWORD <|@ <|@
      nr   24  <|@ instruction v4|DWORD = MOV [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   26  <|@ instruction TEST (x: v4|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   28  <|@ instruction v5|DWORD = CMOVE (falseValue: v4|DWORD, ~trueValue: v1|DWORD) condition: < <|@ <|@
      nr   30  <|@ instruction MOV (x: [v0|QWORD[.] + 36], y: v5|DWORD) size: DWORD <|@ <|@
      nr   32  <|@ instruction TESTBRANCH (x: v3|DWORD, y: v3|DWORD) trueDestinationProbability: 0.04762108250417496 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606753486221175844
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   36  <|@ instruction v6|DWORD = DEC v3|DWORD size: DWORD <|@ <|@
      nr   38  <|@ instruction v7|QWORD = MOVSXD v6|DWORD size: QWORD <|@ <|@
      nr   40  <|@ instruction v8|QWORD = MOV v3|DWORD size: DWORD <|@ <|@
      nr   42  <|@ instruction CMPBRANCH (x: v8|QWORD, y: v7|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B24" 
    xhandlers
    flags 
    probability 4602249886593805348
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction CMPCONSTBRANCH v3|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B24 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602249886593805348
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602249886593805348
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction JUMP ~[] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606753486221175844
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction MOV [v2|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr   60  <|@ instruction CMP v3|DWORD y: 3 size: DWORD <|@ <|@
      nr   62  <|@ instruction v9|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v3|DWORD) condition: |<| <|@ <|@
      nr   64  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@16d1397a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   66  <|@ instruction JUMP ~[] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" 
    successors "B10" "B11" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606840135379518263
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   70  <|@ instruction CMPBRANCH (x: v9|DWORD, y: v11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699167914968222
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction MOV [v10|QWORD[.] + v11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   76  <|@ instruction v12|DWORD = INC v11|DWORD size: DWORD <|@ <|@
      nr   78  <|@ instruction JUMP ~[] destination: B10 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4606753486221175844
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction v13|DWORD = LEA [v3|DWORD - 16] size: DWORD <|@ <|@
      nr   84  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B13" "B14" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608039995292795068
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   88  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v14|DWORD) trueDestinationProbability: 0.19996410454965907 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597744362548122956
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction MOV [v10|QWORD[.] + v14|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   94  <|@ instruction v15|QWORD = MOVSXD v14|DWORD size: QWORD <|@ <|@
      nr   96  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 20] y: -1 size: DWORD <|@ <|@
      nr   98  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 24] y: -1 size: DWORD <|@ <|@
      nr  100  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 28] y: -1 size: DWORD <|@ <|@
      nr  102  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 32] y: -1 size: DWORD <|@ <|@
      nr  104  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 36] y: -1 size: DWORD <|@ <|@
      nr  106  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 40] y: -1 size: DWORD <|@ <|@
      nr  108  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 44] y: -1 size: DWORD <|@ <|@
      nr  110  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 48] y: -1 size: DWORD <|@ <|@
      nr  112  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 52] y: -1 size: DWORD <|@ <|@
      nr  114  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 56] y: -1 size: DWORD <|@ <|@
      nr  116  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 60] y: -1 size: DWORD <|@ <|@
      nr  118  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 64] y: -1 size: DWORD <|@ <|@
      nr  120  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 68] y: -1 size: DWORD <|@ <|@
      nr  122  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 72] y: -1 size: DWORD <|@ <|@
      nr  124  <|@ instruction MOV [v10|QWORD[.] + v15|QWORD * 4 + 76] y: -1 size: DWORD <|@ <|@
      nr  126  <|@ instruction v16|DWORD = LEA [v14|DWORD + 16] size: DWORD <|@ <|@
      nr  128  <|@ instruction JUMP ~[] destination: B13 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606753486221175845
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  132  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606840135379518264
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  136  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v17|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699167914968223
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction MOV [v10|QWORD[.] + v17|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  142  <|@ instruction v18|DWORD = INC v17|DWORD size: DWORD <|@ <|@
      nr  144  <|@ instruction JUMP ~[] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606753486221175845
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B3" 
    successors "B19" "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction v19|DWORD[_] = MOV [v0|QWORD[.] + 68] size: DWORD <|@ <|@
      nr  154  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction v20|DWORD = MOV [v19|DWORD[_] * 8 + 12] size: DWORD state [bci:68] <|@ <|@
      nr  156  <|@ instruction v21|DWORD[_] = MOV [v0|QWORD[.] + 52] size: DWORD <|@ <|@
      nr  158  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction v22|DWORD[_] = MOV [v21|DWORD[_] * 8 + 52] size: DWORD state [bci:68] <|@ <|@
      nr  160  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction NULLCHECK [v22|DWORD[_] * 8] state [bci:68] <|@ <|@
      nr  162  <|@ instruction TESTBRANCH (x: v20|DWORD, y: v20|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction MOV [v0|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr  168  <|@ instruction v23|DWORD[_] = MOV [v0|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  170  <|@ instruction v24|QWORD[.] = UNCOMPRESSPOINTER (input: v22|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@16d1397a encoding: base: 0 shift: 3 <|@ <|@
      nr  172  <|@ instruction v25|QWORD[.] = UNCOMPRESSPOINTER (input: v23|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@16d1397a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v28|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  174  <|@ instruction rsi|QWORD[.] = MOVE v24|QWORD[.] moveKind: QWORD <|@ <|@
      nr  176  <|@ instruction rdx|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  178  <|@ instruction rcx|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr  180  <|@ instruction r8|QWORD[.] = MOVE v25|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD[.] = MOVE v28|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  182  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:121] <|@ <|@
      nr  184  <|@ instruction v26|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  186  <|@ instruction TESTBRANCH (x: v26|DWORD, y: v26|DWORD) trueDestinationProbability: 3.0308973238957204E-4 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4607179688810405709
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v30|QWORD[.] = MOVE v29|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  190  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B20" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction v27|DWORD = MOV [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  196  <|@ instruction MOV (x: [v0|QWORD[.] + 36], y: v27|DWORD) size: DWORD <|@ <|@
      nr  198  <|@ instruction INC [v0|QWORD[.] + 44] size: DWORD <|@ <|@
      nr  200  <|@ instruction rax|DWORD = MOVE v26|DWORD moveKind: DWORD <|@ <|@
      nr  202  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B18" 
    xhandlers
    flags 
    probability 4587023742297259456
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction JUMP ~[] destination: B3 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4554226642368960512
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v30|QWORD[.] = MOVE v29|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  210  <|@ instruction MOV [v0|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr  212  <|@ instruction JUMP ~[] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction MOV [r15|QWORD + 1156] y: -36891 size: DWORD <|@ <|@
      nr  218  <|@ instruction MOV [r15|QWORD + 1168] y: 17944 size: QWORD <|@ <|@
      nr  220  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1760) [bci: 44]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:44] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction MOV [r15|QWORD + 1156] y: -66323 size: DWORD <|@ <|@
      nr  226  <|@ instruction MOV [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  228  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:68] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction MOV [r15|QWORD + 1156] y: -65043 size: DWORD <|@ <|@
      nr  234  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  236  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1757) [bci: 10]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_0      
     2: putfield      #86         // hitEnd:boolean
     5: aload_0       
     6: iconst_0      
     7: putfield      #87         // requireEnd:boolean
    10: iload_1       
    11: ifge          18
    14: iconst_0      
    15: goto          19
    18: iload_1       
    19: istore_1      
    20: aload_0       
    21: iload_1       
    22: putfield      #2          // first:int
    25: aload_0       
    26: aload_0       
    27: getfield      #4          // oldLast:int
    30: ifge          37
    33: iload_1       
    34: goto          41
    37: aload_0       
    38: getfield      #4          // oldLast:int
    41: putfield      #4          // oldLast:int
    44: iconst_0      
    45: istore_2      
    46: iload_2       
    47: aload_0       
    48: getfield      #12         // groups:int[]
    51: arraylength   
    52: if_icmpge     68
    55: aload_0       
    56: getfield      #12         // groups:int[]
    59: iload_2       
    60: iconst_m1     
    61: iastore       
    62: iinc          
    65: goto          46
    68: iconst_0      
    69: istore_2      
    70: iload_2       
    71: aload_0       
    72: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    75: arraylength   
    76: if_icmpge     103
    79: aload_0       
    80: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    83: iload_2       
    84: aaload        
    85: ifnull        97
    88: aload_0       
    89: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    92: iload_2       
    93: aaload        
    94: invokevirtual #32         // java.util.regex.IntHashSet.clear:()void
    97: iinc          
   100: goto          70
   103: aload_0       
   104: iconst_0      
   105: putfield      #1          // acceptMode:int
   108: aload_0       
   109: getfield      #8          // parentPattern:java.util.regex.Pattern
   112: getfield      #88         // java.util.regex.Pattern.root:java.util.regex.Pattern$Node
   115: aload_0       
   116: iload_1       
   117: aload_0       
   118: getfield      #9          // text:java.lang.CharSequence
   121: invokevirtual #89         // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
   124: istore_2      
   125: iload_2       
   126: ifne          134
   129: aload_0       
   130: iconst_m1     
   131: putfield      #2          // first:int
   134: aload_0       
   135: aload_0       
   136: getfield      #3          // last:int
   139: putfield      #4          // oldLast:int
   142: aload_0       
   143: dup           
   144: getfield      #31         // modCount:int
   147: iconst_1      
   148: iadd          
   149: putfield      #31         // modCount:int
   152: iload_2       
   153: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScanAssignLocations"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@bf3c5e0 slotKind: QWORD <|@ <|@
      nr    8  <|@ instruction r10|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction rdx|DWORD[_] = MOV [rsi|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   12  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1755) [bci: 0]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction rcx|DWORD = MOV [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   14  <|@ instruction MOVB [rsi|QWORD[.] + 48] y: 0 size: BYTE <|@ <|@
      nr   16  <|@ instruction MOVB [rsi|QWORD[.] + 49] y: 0 size: BYTE <|@ <|@
      nr   18  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   22  <|@ instruction MOV (x: [rsi|QWORD[.] + 28], y: r10|DWORD) size: DWORD <|@ <|@
      nr   24  <|@ instruction r8|DWORD = MOV [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   26  <|@ instruction TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   28  <|@ instruction r8|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: r10|DWORD) condition: < <|@ <|@
      nr   30  <|@ instruction MOV (x: [rsi|QWORD[.] + 36], y: r8|DWORD) size: DWORD <|@ <|@
      nr   32  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.04762108250417496 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606753486221175844
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   36  <|@ instruction r8|DWORD = DEC rcx|DWORD size: DWORD <|@ <|@
      nr   38  <|@ instruction r8|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr   40  <|@ instruction r11|QWORD = MOV rcx|DWORD size: DWORD <|@ <|@
      nr   42  <|@ instruction CMPBRANCH (x: r11|QWORD, y: r8|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B24" 
    xhandlers
    flags 
    probability 4602249886593805348
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction CMPCONSTBRANCH rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B24 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602249886593805348
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602249886593805348
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction JUMP ~[] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606753486221175844
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction MOV [rdx|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr   60  <|@ instruction CMP rcx|DWORD y: 3 size: DWORD <|@ <|@
      nr   62  <|@ instruction r8|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rcx|DWORD) condition: |<| <|@ <|@
      nr   64  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@16d1397a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   66  <|@ instruction JUMP ~[] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" 
    successors "B10" "B11" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606840135379518263
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   70  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699167914968222
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction MOV [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   76  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr   78  <|@ instruction JUMP ~[] destination: B10 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4606753486221175844
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction r8|DWORD = LEA [rcx|DWORD - 16] size: DWORD <|@ <|@
      nr   84  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B13" "B14" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608039995292795068
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   88  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r11|DWORD) trueDestinationProbability: 0.19996410454965907 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597744362548122956
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction MOV [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   94  <|@ instruction r9|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr   96  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 20] y: -1 size: DWORD <|@ <|@
      nr   98  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 24] y: -1 size: DWORD <|@ <|@
      nr  100  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 28] y: -1 size: DWORD <|@ <|@
      nr  102  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 32] y: -1 size: DWORD <|@ <|@
      nr  104  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 36] y: -1 size: DWORD <|@ <|@
      nr  106  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 40] y: -1 size: DWORD <|@ <|@
      nr  108  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 44] y: -1 size: DWORD <|@ <|@
      nr  110  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 48] y: -1 size: DWORD <|@ <|@
      nr  112  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 52] y: -1 size: DWORD <|@ <|@
      nr  114  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 56] y: -1 size: DWORD <|@ <|@
      nr  116  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 60] y: -1 size: DWORD <|@ <|@
      nr  118  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 64] y: -1 size: DWORD <|@ <|@
      nr  120  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 68] y: -1 size: DWORD <|@ <|@
      nr  122  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 72] y: -1 size: DWORD <|@ <|@
      nr  124  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 76] y: -1 size: DWORD <|@ <|@
      nr  126  <|@ instruction r11|DWORD = LEA [r11|DWORD + 16] size: DWORD <|@ <|@
      nr  128  <|@ instruction JUMP ~[] destination: B13 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606753486221175845
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  132  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606840135379518264
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  136  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699167914968223
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction MOV [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  142  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  144  <|@ instruction JUMP ~[] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606753486221175845
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B3" 
    successors "B19" "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction rdx|DWORD[_] = MOV [rsi|QWORD[.] + 68] size: DWORD <|@ <|@
      nr  154  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction rdx|DWORD = MOV [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:68] <|@ <|@
      nr  156  <|@ instruction rcx|DWORD[_] = MOV [rsi|QWORD[.] + 52] size: DWORD <|@ <|@
      nr  158  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction rcx|DWORD[_] = MOV [rcx|DWORD[_] * 8 + 52] size: DWORD state [bci:68] <|@ <|@
      nr  160  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction NULLCHECK [rcx|DWORD[_] * 8] state [bci:68] <|@ <|@
      nr  162  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction MOV [rsi|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr  168  <|@ instruction rdx|DWORD[_] = MOV [rsi|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  170  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@16d1397a encoding: base: 0 shift: 3 <|@ <|@
      nr  172  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@16d1397a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  174  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  176  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  178  <|@ instruction rcx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  182  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: vstack:0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:121] <|@ <|@
      nr  186  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 3.0308973238957204E-4 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4607179688810405709
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  190  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B20" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  196  <|@ instruction MOV (x: [rsi|QWORD[.] + 36], y: r10|DWORD) size: DWORD <|@ <|@
      nr  198  <|@ instruction INC [rsi|QWORD[.] + 44] size: DWORD <|@ <|@
      nr  202  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B18" 
    xhandlers
    flags 
    probability 4587023742297259456
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction JUMP ~[] destination: B3 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4554226642368960512
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  210  <|@ instruction MOV [rsi|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr  212  <|@ instruction JUMP ~[] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction MOV [r15|QWORD + 1156] y: -36891 size: DWORD <|@ <|@
      nr  218  <|@ instruction MOV [r15|QWORD + 1168] y: 17944 size: QWORD <|@ <|@
      nr  220  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1760) [bci: 44]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction DEOPT info [bci:44] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction MOV [r15|QWORD + 1156] y: -66323 size: DWORD <|@ <|@
      nr  226  <|@ instruction MOV [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  228  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction DEOPT info [bci:68] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction MOV [r15|QWORD + 1156] y: -65043 size: DWORD <|@ <|@
      nr  234  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  236  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1757) [bci: 10]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_0      
     2: putfield      #86         // hitEnd:boolean
     5: aload_0       
     6: iconst_0      
     7: putfield      #87         // requireEnd:boolean
    10: iload_1       
    11: ifge          18
    14: iconst_0      
    15: goto          19
    18: iload_1       
    19: istore_1      
    20: aload_0       
    21: iload_1       
    22: putfield      #2          // first:int
    25: aload_0       
    26: aload_0       
    27: getfield      #4          // oldLast:int
    30: ifge          37
    33: iload_1       
    34: goto          41
    37: aload_0       
    38: getfield      #4          // oldLast:int
    41: putfield      #4          // oldLast:int
    44: iconst_0      
    45: istore_2      
    46: iload_2       
    47: aload_0       
    48: getfield      #12         // groups:int[]
    51: arraylength   
    52: if_icmpge     68
    55: aload_0       
    56: getfield      #12         // groups:int[]
    59: iload_2       
    60: iconst_m1     
    61: iastore       
    62: iinc          
    65: goto          46
    68: iconst_0      
    69: istore_2      
    70: iload_2       
    71: aload_0       
    72: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    75: arraylength   
    76: if_icmpge     103
    79: aload_0       
    80: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    83: iload_2       
    84: aaload        
    85: ifnull        97
    88: aload_0       
    89: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    92: iload_2       
    93: aaload        
    94: invokevirtual #32         // java.util.regex.IntHashSet.clear:()void
    97: iinc          
   100: goto          70
   103: aload_0       
   104: iconst_0      
   105: putfield      #1          // acceptMode:int
   108: aload_0       
   109: getfield      #8          // parentPattern:java.util.regex.Pattern
   112: getfield      #88         // java.util.regex.Pattern.root:java.util.regex.Pattern$Node
   115: aload_0       
   116: iload_1       
   117: aload_0       
   118: getfield      #9          // text:java.lang.CharSequence
   121: invokevirtual #89         // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
   124: istore_2      
   125: iload_2       
   126: ifne          134
   129: aload_0       
   130: iconst_m1     
   131: putfield      #2          // first:int
   134: aload_0       
   135: aload_0       
   136: getfield      #3          // last:int
   139: putfield      #4          // oldLast:int
   142: aload_0       
   143: dup           
   144: getfield      #31         // modCount:int
   147: iconst_1      
   148: iadd          
   149: putfield      #31         // modCount:int
   152: iload_2       
   153: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScan"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@bf3c5e0 slotKind: QWORD <|@ <|@
      nr    8  <|@ instruction r10|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction rdx|DWORD[_] = MOV [rsi|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   12  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1755) [bci: 0]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction rcx|DWORD = MOV [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   14  <|@ instruction MOVB [rsi|QWORD[.] + 48] y: 0 size: BYTE <|@ <|@
      nr   16  <|@ instruction MOVB [rsi|QWORD[.] + 49] y: 0 size: BYTE <|@ <|@
      nr   18  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   22  <|@ instruction MOV (x: [rsi|QWORD[.] + 28], y: r10|DWORD) size: DWORD <|@ <|@
      nr   24  <|@ instruction r8|DWORD = MOV [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   26  <|@ instruction TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   28  <|@ instruction r8|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: r10|DWORD) condition: < <|@ <|@
      nr   30  <|@ instruction MOV (x: [rsi|QWORD[.] + 36], y: r8|DWORD) size: DWORD <|@ <|@
      nr   32  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.04762108250417496 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606753486221175844
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   36  <|@ instruction r8|DWORD = DEC rcx|DWORD size: DWORD <|@ <|@
      nr   38  <|@ instruction r8|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr   40  <|@ instruction r11|QWORD = MOV rcx|DWORD size: DWORD <|@ <|@
      nr   42  <|@ instruction CMPBRANCH (x: r11|QWORD, y: r8|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B24" 
    xhandlers
    flags 
    probability 4602249886593805348
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction CMPCONSTBRANCH rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B24 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602249886593805348
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602249886593805348
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction JUMP ~[] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606753486221175844
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction MOV [rdx|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr   60  <|@ instruction CMP rcx|DWORD y: 3 size: DWORD <|@ <|@
      nr   62  <|@ instruction r8|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rcx|DWORD) condition: |<| <|@ <|@
      nr   64  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@16d1397a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   66  <|@ instruction JUMP ~[] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" 
    successors "B10" "B11" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606840135379518263
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   70  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699167914968222
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction MOV [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   76  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr   78  <|@ instruction JUMP ~[] destination: B10 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4606753486221175844
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction r8|DWORD = LEA [rcx|DWORD - 16] size: DWORD <|@ <|@
      nr   84  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B13" "B14" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608039995292795068
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   88  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r11|DWORD) trueDestinationProbability: 0.19996410454965907 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597744362548122956
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction MOV [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   94  <|@ instruction r9|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr   96  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 20] y: -1 size: DWORD <|@ <|@
      nr   98  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 24] y: -1 size: DWORD <|@ <|@
      nr  100  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 28] y: -1 size: DWORD <|@ <|@
      nr  102  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 32] y: -1 size: DWORD <|@ <|@
      nr  104  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 36] y: -1 size: DWORD <|@ <|@
      nr  106  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 40] y: -1 size: DWORD <|@ <|@
      nr  108  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 44] y: -1 size: DWORD <|@ <|@
      nr  110  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 48] y: -1 size: DWORD <|@ <|@
      nr  112  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 52] y: -1 size: DWORD <|@ <|@
      nr  114  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 56] y: -1 size: DWORD <|@ <|@
      nr  116  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 60] y: -1 size: DWORD <|@ <|@
      nr  118  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 64] y: -1 size: DWORD <|@ <|@
      nr  120  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 68] y: -1 size: DWORD <|@ <|@
      nr  122  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 72] y: -1 size: DWORD <|@ <|@
      nr  124  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 76] y: -1 size: DWORD <|@ <|@
      nr  126  <|@ instruction r11|DWORD = LEA [r11|DWORD + 16] size: DWORD <|@ <|@
      nr  128  <|@ instruction JUMP ~[] destination: B13 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606753486221175845
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  132  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606840135379518264
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  136  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699167914968223
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction MOV [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  142  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  144  <|@ instruction JUMP ~[] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606753486221175845
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B3" 
    successors "B19" "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction rdx|DWORD[_] = MOV [rsi|QWORD[.] + 68] size: DWORD <|@ <|@
      nr  154  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction rdx|DWORD = MOV [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:68] <|@ <|@
      nr  156  <|@ instruction rcx|DWORD[_] = MOV [rsi|QWORD[.] + 52] size: DWORD <|@ <|@
      nr  158  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction rcx|DWORD[_] = MOV [rcx|DWORD[_] * 8 + 52] size: DWORD state [bci:68] <|@ <|@
      nr  160  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction NULLCHECK [rcx|DWORD[_] * 8] state [bci:68] <|@ <|@
      nr  162  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction MOV [rsi|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr  168  <|@ instruction rdx|DWORD[_] = MOV [rsi|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  170  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@16d1397a encoding: base: 0 shift: 3 <|@ <|@
      nr  172  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@16d1397a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  174  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  176  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  178  <|@ instruction rcx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  182  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: vstack:0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:121] <|@ <|@
      nr  186  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 3.0308973238957204E-4 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4607179688810405709
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  190  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B20" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  196  <|@ instruction MOV (x: [rsi|QWORD[.] + 36], y: r10|DWORD) size: DWORD <|@ <|@
      nr  198  <|@ instruction INC [rsi|QWORD[.] + 44] size: DWORD <|@ <|@
      nr  202  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B18" 
    xhandlers
    flags 
    probability 4587023742297259456
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction JUMP ~[] destination: B3 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4554226642368960512
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  210  <|@ instruction MOV [rsi|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr  212  <|@ instruction JUMP ~[] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction MOV [r15|QWORD + 1156] y: -36891 size: DWORD <|@ <|@
      nr  218  <|@ instruction MOV [r15|QWORD + 1168] y: 17944 size: QWORD <|@ <|@
      nr  220  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1760) [bci: 44]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction DEOPT info [bci:44] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction MOV [r15|QWORD + 1156] y: -66323 size: DWORD <|@ <|@
      nr  226  <|@ instruction MOV [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  228  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction DEOPT info [bci:68] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction MOV [r15|QWORD + 1156] y: -65043 size: DWORD <|@ <|@
      nr  234  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  236  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1757) [bci: 10]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_0      
     2: putfield      #86         // hitEnd:boolean
     5: aload_0       
     6: iconst_0      
     7: putfield      #87         // requireEnd:boolean
    10: iload_1       
    11: ifge          18
    14: iconst_0      
    15: goto          19
    18: iload_1       
    19: istore_1      
    20: aload_0       
    21: iload_1       
    22: putfield      #2          // first:int
    25: aload_0       
    26: aload_0       
    27: getfield      #4          // oldLast:int
    30: ifge          37
    33: iload_1       
    34: goto          41
    37: aload_0       
    38: getfield      #4          // oldLast:int
    41: putfield      #4          // oldLast:int
    44: iconst_0      
    45: istore_2      
    46: iload_2       
    47: aload_0       
    48: getfield      #12         // groups:int[]
    51: arraylength   
    52: if_icmpge     68
    55: aload_0       
    56: getfield      #12         // groups:int[]
    59: iload_2       
    60: iconst_m1     
    61: iastore       
    62: iinc          
    65: goto          46
    68: iconst_0      
    69: istore_2      
    70: iload_2       
    71: aload_0       
    72: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    75: arraylength   
    76: if_icmpge     103
    79: aload_0       
    80: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    83: iload_2       
    84: aaload        
    85: ifnull        97
    88: aload_0       
    89: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    92: iload_2       
    93: aaload        
    94: invokevirtual #32         // java.util.regex.IntHashSet.clear:()void
    97: iinc          
   100: goto          70
   103: aload_0       
   104: iconst_0      
   105: putfield      #1          // acceptMode:int
   108: aload_0       
   109: getfield      #8          // parentPattern:java.util.regex.Pattern
   112: getfield      #88         // java.util.regex.Pattern.root:java.util.regex.Pattern$Node
   115: aload_0       
   116: iload_1       
   117: aload_0       
   118: getfield      #9          // text:java.lang.CharSequence
   121: invokevirtual #89         // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
   124: istore_2      
   125: iload_2       
   126: ifne          134
   129: aload_0       
   130: iconst_m1     
   131: putfield      #2          // first:int
   134: aload_0       
   135: aload_0       
   136: getfield      #3          // last:int
   139: putfield      #4          // oldLast:int
   142: aload_0       
   143: dup           
   144: getfield      #31         // modCount:int
   147: iconst_1      
   148: iadd          
   149: putfield      #31         // modCount:int
   152: iload_2       
   153: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After StackSlot numbering"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@bf3c5e0 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction rdx|DWORD[_] = MOV [rsi|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   10  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1755) [bci: 0]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction rcx|DWORD = MOV [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction MOVB [rsi|QWORD[.] + 48] y: 0 size: BYTE <|@ <|@
      nr   14  <|@ instruction MOVB [rsi|QWORD[.] + 49] y: 0 size: BYTE <|@ <|@
      nr   16  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   28  <|@ instruction MOV (x: [rsi|QWORD[.] + 28], y: r10|DWORD) size: DWORD <|@ <|@
      nr   30  <|@ instruction r8|DWORD = MOV [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   32  <|@ instruction TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   34  <|@ instruction r8|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: r10|DWORD) condition: < <|@ <|@
      nr   36  <|@ instruction MOV (x: [rsi|QWORD[.] + 36], y: r8|DWORD) size: DWORD <|@ <|@
      nr   38  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.04762108250417496 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606753486221175844
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction r8|DWORD = DEC rcx|DWORD size: DWORD <|@ <|@
      nr   48  <|@ instruction r8|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr   50  <|@ instruction r11|QWORD = MOV rcx|DWORD size: DWORD <|@ <|@
      nr   52  <|@ instruction CMPBRANCH (x: r11|QWORD, y: r8|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B24" 
    xhandlers
    flags 
    probability 4602249886593805348
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction CMPCONSTBRANCH rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B24 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602249886593805348
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602249886593805348
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction JUMP ~[] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606753486221175844
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction MOV [rdx|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr   70  <|@ instruction CMP rcx|DWORD y: 3 size: DWORD <|@ <|@
      nr   72  <|@ instruction r8|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rcx|DWORD) condition: |<| <|@ <|@
      nr   74  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@16d1397a encoding: base: 0 shift: 3 <|@ <|@
      nr   76  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   78  <|@ instruction JUMP ~[] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" 
    successors "B10" "B11" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606840135379518263
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   82  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699167914968222
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction MOV [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   88  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr   90  <|@ instruction JUMP ~[] destination: B10 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4606753486221175844
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction r8|DWORD = LEA [rcx|DWORD - 16] size: DWORD <|@ <|@
      nr   96  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B13" "B14" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608039995292795068
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  100  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r11|DWORD) trueDestinationProbability: 0.19996410454965907 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597744362548122956
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction MOV [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  106  <|@ instruction r9|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr  108  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 20] y: -1 size: DWORD <|@ <|@
      nr  110  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 24] y: -1 size: DWORD <|@ <|@
      nr  112  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 28] y: -1 size: DWORD <|@ <|@
      nr  114  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 32] y: -1 size: DWORD <|@ <|@
      nr  116  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 36] y: -1 size: DWORD <|@ <|@
      nr  118  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 40] y: -1 size: DWORD <|@ <|@
      nr  120  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 44] y: -1 size: DWORD <|@ <|@
      nr  122  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 48] y: -1 size: DWORD <|@ <|@
      nr  124  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 52] y: -1 size: DWORD <|@ <|@
      nr  126  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 56] y: -1 size: DWORD <|@ <|@
      nr  128  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 60] y: -1 size: DWORD <|@ <|@
      nr  130  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 64] y: -1 size: DWORD <|@ <|@
      nr  132  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 68] y: -1 size: DWORD <|@ <|@
      nr  134  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 72] y: -1 size: DWORD <|@ <|@
      nr  136  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 76] y: -1 size: DWORD <|@ <|@
      nr  138  <|@ instruction r11|DWORD = LEA [r11|DWORD + 16] size: DWORD <|@ <|@
      nr  140  <|@ instruction JUMP ~[] destination: B13 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606753486221175845
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606840135379518264
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  148  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699167914968223
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction MOV [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  154  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  156  <|@ instruction JUMP ~[] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606753486221175845
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B3" 
    successors "B19" "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction rdx|DWORD[_] = MOV [rsi|QWORD[.] + 68] size: DWORD <|@ <|@
      nr  166  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction rdx|DWORD = MOV [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:68] <|@ <|@
      nr  168  <|@ instruction rcx|DWORD[_] = MOV [rsi|QWORD[.] + 52] size: DWORD <|@ <|@
      nr  170  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction rcx|DWORD[_] = MOV [rcx|DWORD[_] * 8 + 52] size: DWORD state [bci:68] <|@ <|@
      nr  172  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction NULLCHECK [rcx|DWORD[_] * 8] state [bci:68] <|@ <|@
      nr  174  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  178  <|@ instruction MOV [rsi|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr  180  <|@ instruction rdx|DWORD[_] = MOV [rsi|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  182  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@16d1397a encoding: base: 0 shift: 3 <|@ <|@
      nr  184  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@16d1397a encoding: base: 0 shift: 3 <|@ <|@
      nr  186  <|@ instruction r11|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  188  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  190  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  192  <|@ instruction rcx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  194  <|@ instruction vstack:0|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  196  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: vstack:0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:121] <|@ <|@
      nr  198  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 3.0308973238957204E-4 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4607179688810405709
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction rsi|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  212  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B20" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  218  <|@ instruction MOV (x: [rsi|QWORD[.] + 36], y: r10|DWORD) size: DWORD <|@ <|@
      nr  220  <|@ instruction INC [rsi|QWORD[.] + 44] size: DWORD <|@ <|@
      nr  222  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B18" 
    xhandlers
    flags 
    probability 4587023742297259456
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction JUMP ~[] destination: B3 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4554226642368960512
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction rsi|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  204  <|@ instruction MOV [rsi|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr  206  <|@ instruction JUMP ~[] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction MOV [r15|QWORD + 1156] y: -36891 size: DWORD <|@ <|@
      nr  236  <|@ instruction MOV [r15|QWORD + 1168] y: 17944 size: QWORD <|@ <|@
      nr  238  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1760) [bci: 44]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction DEOPT info [bci:44] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction MOV [r15|QWORD + 1156] y: -66323 size: DWORD <|@ <|@
      nr  228  <|@ instruction MOV [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  230  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction DEOPT info [bci:68] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   20  <|@ instruction MOV [r15|QWORD + 1156] y: -65043 size: DWORD <|@ <|@
      nr   22  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   24  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1757) [bci: 10]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_0      
     2: putfield      #86         // hitEnd:boolean
     5: aload_0       
     6: iconst_0      
     7: putfield      #87         // requireEnd:boolean
    10: iload_1       
    11: ifge          18
    14: iconst_0      
    15: goto          19
    18: iload_1       
    19: istore_1      
    20: aload_0       
    21: iload_1       
    22: putfield      #2          // first:int
    25: aload_0       
    26: aload_0       
    27: getfield      #4          // oldLast:int
    30: ifge          37
    33: iload_1       
    34: goto          41
    37: aload_0       
    38: getfield      #4          // oldLast:int
    41: putfield      #4          // oldLast:int
    44: iconst_0      
    45: istore_2      
    46: iload_2       
    47: aload_0       
    48: getfield      #12         // groups:int[]
    51: arraylength   
    52: if_icmpge     68
    55: aload_0       
    56: getfield      #12         // groups:int[]
    59: iload_2       
    60: iconst_m1     
    61: iastore       
    62: iinc          
    65: goto          46
    68: iconst_0      
    69: istore_2      
    70: iload_2       
    71: aload_0       
    72: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    75: arraylength   
    76: if_icmpge     103
    79: aload_0       
    80: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    83: iload_2       
    84: aaload        
    85: ifnull        97
    88: aload_0       
    89: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    92: iload_2       
    93: aaload        
    94: invokevirtual #32         // java.util.regex.IntHashSet.clear:()void
    97: iinc          
   100: goto          70
   103: aload_0       
   104: iconst_0      
   105: putfield      #1          // acceptMode:int
   108: aload_0       
   109: getfield      #8          // parentPattern:java.util.regex.Pattern
   112: getfield      #88         // java.util.regex.Pattern.root:java.util.regex.Pattern$Node
   115: aload_0       
   116: iload_1       
   117: aload_0       
   118: getfield      #9          // text:java.lang.CharSequence
   121: invokevirtual #89         // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
   124: istore_2      
   125: iload_2       
   126: ifne          134
   129: aload_0       
   130: iconst_m1     
   131: putfield      #2          // first:int
   134: aload_0       
   135: aload_0       
   136: getfield      #3          // last:int
   139: putfield      #4          // oldLast:int
   142: aload_0       
   143: dup           
   144: getfield      #31         // modCount:int
   147: iconst_1      
   148: iadd          
   149: putfield      #31         // modCount:int
   152: iload_2       
   153: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "Before stack slot allocation"
  vstack:0|q QWORD "[vstack:0|q]" vstack:0|q -1 [194, 210[ "NOT_SUPPORTED"
end_intervals
begin_intervals
  name "After stack slot allocation"
  vstack:0|q QWORD "[stack:32|q]" vstack:0|q -1 [194, 210[ "NOT_SUPPORTED"
end_intervals
begin_cfg
  name "After LSStackSlotAllocator"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@bf3c5e0 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction rdx|DWORD[_] = MOV [rsi|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   10  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1755) [bci: 0]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction rcx|DWORD = MOV [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction MOVB [rsi|QWORD[.] + 48] y: 0 size: BYTE <|@ <|@
      nr   14  <|@ instruction MOVB [rsi|QWORD[.] + 49] y: 0 size: BYTE <|@ <|@
      nr   16  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   28  <|@ instruction MOV (x: [rsi|QWORD[.] + 28], y: r10|DWORD) size: DWORD <|@ <|@
      nr   30  <|@ instruction r8|DWORD = MOV [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   32  <|@ instruction TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   34  <|@ instruction r8|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: r10|DWORD) condition: < <|@ <|@
      nr   36  <|@ instruction MOV (x: [rsi|QWORD[.] + 36], y: r8|DWORD) size: DWORD <|@ <|@
      nr   38  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.04762108250417496 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606753486221175844
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction r8|DWORD = DEC rcx|DWORD size: DWORD <|@ <|@
      nr   48  <|@ instruction r8|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr   50  <|@ instruction r11|QWORD = MOV rcx|DWORD size: DWORD <|@ <|@
      nr   52  <|@ instruction CMPBRANCH (x: r11|QWORD, y: r8|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B24" 
    xhandlers
    flags 
    probability 4602249886593805348
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction CMPCONSTBRANCH rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B24 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602249886593805348
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602249886593805348
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction JUMP ~[] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606753486221175844
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction MOV [rdx|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr   70  <|@ instruction CMP rcx|DWORD y: 3 size: DWORD <|@ <|@
      nr   72  <|@ instruction r8|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rcx|DWORD) condition: |<| <|@ <|@
      nr   74  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@16d1397a encoding: base: 0 shift: 3 <|@ <|@
      nr   76  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   78  <|@ instruction JUMP ~[] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" 
    successors "B10" "B11" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606840135379518263
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   82  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699167914968222
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction MOV [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   88  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr   90  <|@ instruction JUMP ~[] destination: B10 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4606753486221175844
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction r8|DWORD = LEA [rcx|DWORD - 16] size: DWORD <|@ <|@
      nr   96  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B13" "B14" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608039995292795068
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  100  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r11|DWORD) trueDestinationProbability: 0.19996410454965907 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597744362548122956
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction MOV [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  106  <|@ instruction r9|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr  108  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 20] y: -1 size: DWORD <|@ <|@
      nr  110  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 24] y: -1 size: DWORD <|@ <|@
      nr  112  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 28] y: -1 size: DWORD <|@ <|@
      nr  114  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 32] y: -1 size: DWORD <|@ <|@
      nr  116  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 36] y: -1 size: DWORD <|@ <|@
      nr  118  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 40] y: -1 size: DWORD <|@ <|@
      nr  120  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 44] y: -1 size: DWORD <|@ <|@
      nr  122  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 48] y: -1 size: DWORD <|@ <|@
      nr  124  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 52] y: -1 size: DWORD <|@ <|@
      nr  126  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 56] y: -1 size: DWORD <|@ <|@
      nr  128  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 60] y: -1 size: DWORD <|@ <|@
      nr  130  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 64] y: -1 size: DWORD <|@ <|@
      nr  132  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 68] y: -1 size: DWORD <|@ <|@
      nr  134  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 72] y: -1 size: DWORD <|@ <|@
      nr  136  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 76] y: -1 size: DWORD <|@ <|@
      nr  138  <|@ instruction r11|DWORD = LEA [r11|DWORD + 16] size: DWORD <|@ <|@
      nr  140  <|@ instruction JUMP ~[] destination: B13 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606753486221175845
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606840135379518264
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  148  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699167914968223
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction MOV [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  154  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  156  <|@ instruction JUMP ~[] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606753486221175845
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B3" 
    successors "B19" "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction rdx|DWORD[_] = MOV [rsi|QWORD[.] + 68] size: DWORD <|@ <|@
      nr  166  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction rdx|DWORD = MOV [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:68] <|@ <|@
      nr  168  <|@ instruction rcx|DWORD[_] = MOV [rsi|QWORD[.] + 52] size: DWORD <|@ <|@
      nr  170  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction rcx|DWORD[_] = MOV [rcx|DWORD[_] * 8 + 52] size: DWORD state [bci:68] <|@ <|@
      nr  172  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction NULLCHECK [rcx|DWORD[_] * 8] state [bci:68] <|@ <|@
      nr  174  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  178  <|@ instruction MOV [rsi|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr  180  <|@ instruction rdx|DWORD[_] = MOV [rsi|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  182  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@16d1397a encoding: base: 0 shift: 3 <|@ <|@
      nr  184  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@16d1397a encoding: base: 0 shift: 3 <|@ <|@
      nr  186  <|@ instruction r11|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  188  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  190  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  192  <|@ instruction rcx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  194  <|@ instruction stack:32|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  196  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: stack:32|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:121] <|@ <|@
      nr  198  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 3.0308973238957204E-4 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4607179688810405709
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  212  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B20" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  218  <|@ instruction MOV (x: [rsi|QWORD[.] + 36], y: r10|DWORD) size: DWORD <|@ <|@
      nr  220  <|@ instruction INC [rsi|QWORD[.] + 44] size: DWORD <|@ <|@
      nr  222  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B18" 
    xhandlers
    flags 
    probability 4587023742297259456
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction JUMP ~[] destination: B3 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4554226642368960512
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  204  <|@ instruction MOV [rsi|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr  206  <|@ instruction JUMP ~[] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction MOV [r15|QWORD + 1156] y: -36891 size: DWORD <|@ <|@
      nr  236  <|@ instruction MOV [r15|QWORD + 1168] y: 17944 size: QWORD <|@ <|@
      nr  238  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1760) [bci: 44]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction DEOPT info [bci:44] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction MOV [r15|QWORD + 1156] y: -66323 size: DWORD <|@ <|@
      nr  228  <|@ instruction MOV [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  230  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction DEOPT info [bci:68] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   20  <|@ instruction MOV [r15|QWORD + 1156] y: -65043 size: DWORD <|@ <|@
      nr   22  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   24  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1757) [bci: 10]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_0      
     2: putfield      #86         // hitEnd:boolean
     5: aload_0       
     6: iconst_0      
     7: putfield      #87         // requireEnd:boolean
    10: iload_1       
    11: ifge          18
    14: iconst_0      
    15: goto          19
    18: iload_1       
    19: istore_1      
    20: aload_0       
    21: iload_1       
    22: putfield      #2          // first:int
    25: aload_0       
    26: aload_0       
    27: getfield      #4          // oldLast:int
    30: ifge          37
    33: iload_1       
    34: goto          41
    37: aload_0       
    38: getfield      #4          // oldLast:int
    41: putfield      #4          // oldLast:int
    44: iconst_0      
    45: istore_2      
    46: iload_2       
    47: aload_0       
    48: getfield      #12         // groups:int[]
    51: arraylength   
    52: if_icmpge     68
    55: aload_0       
    56: getfield      #12         // groups:int[]
    59: iload_2       
    60: iconst_m1     
    61: iastore       
    62: iinc          
    65: goto          46
    68: iconst_0      
    69: istore_2      
    70: iload_2       
    71: aload_0       
    72: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    75: arraylength   
    76: if_icmpge     103
    79: aload_0       
    80: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    83: iload_2       
    84: aaload        
    85: ifnull        97
    88: aload_0       
    89: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    92: iload_2       
    93: aaload        
    94: invokevirtual #32         // java.util.regex.IntHashSet.clear:()void
    97: iinc          
   100: goto          70
   103: aload_0       
   104: iconst_0      
   105: putfield      #1          // acceptMode:int
   108: aload_0       
   109: getfield      #8          // parentPattern:java.util.regex.Pattern
   112: getfield      #88         // java.util.regex.Pattern.root:java.util.regex.Pattern$Node
   115: aload_0       
   116: iload_1       
   117: aload_0       
   118: getfield      #9          // text:java.lang.CharSequence
   121: invokevirtual #89         // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
   124: istore_2      
   125: iload_2       
   126: ifne          134
   129: aload_0       
   130: iconst_m1     
   131: putfield      #2          // first:int
   134: aload_0       
   135: aload_0       
   136: getfield      #3          // last:int
   139: putfield      #4          // oldLast:int
   142: aload_0       
   143: dup           
   144: getfield      #31         // modCount:int
   147: iconst_1      
   148: iadd          
   149: putfield      #31         // modCount:int
   152: iload_2       
   153: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@bf3c5e0 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction rdx|DWORD[_] = MOV [rsi|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   10  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1755) [bci: 0]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction rcx|DWORD = MOV [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction MOVB [rsi|QWORD[.] + 48] y: 0 size: BYTE <|@ <|@
      nr   14  <|@ instruction MOVB [rsi|QWORD[.] + 49] y: 0 size: BYTE <|@ <|@
      nr   16  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   28  <|@ instruction MOV (x: [rsi|QWORD[.] + 28], y: r10|DWORD) size: DWORD <|@ <|@
      nr   30  <|@ instruction r8|DWORD = MOV [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   32  <|@ instruction TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   34  <|@ instruction r8|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: r10|DWORD) condition: < <|@ <|@
      nr   36  <|@ instruction MOV (x: [rsi|QWORD[.] + 36], y: r8|DWORD) size: DWORD <|@ <|@
      nr   38  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.04762108250417496 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606753486221175844
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction r8|DWORD = DEC rcx|DWORD size: DWORD <|@ <|@
      nr   48  <|@ instruction r8|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr   50  <|@ instruction r11|QWORD = MOV rcx|DWORD size: DWORD <|@ <|@
      nr   52  <|@ instruction CMPBRANCH (x: r11|QWORD, y: r8|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B24" 
    xhandlers
    flags 
    probability 4602249886593805348
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction CMPCONSTBRANCH rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B24 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602249886593805348
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602249886593805348
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction JUMP ~[] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606753486221175844
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction MOV [rdx|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr   70  <|@ instruction CMP rcx|DWORD y: 3 size: DWORD <|@ <|@
      nr   72  <|@ instruction r8|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rcx|DWORD) condition: |<| <|@ <|@
      nr   74  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@16d1397a encoding: base: 0 shift: 3 <|@ <|@
      nr   76  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   78  <|@ instruction JUMP ~[] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" 
    successors "B10" "B11" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606840135379518263
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   82  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699167914968222
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction MOV [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   88  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr   90  <|@ instruction JUMP ~[] destination: B10 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4606753486221175844
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction r8|DWORD = LEA [rcx|DWORD - 16] size: DWORD <|@ <|@
      nr   96  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B13" "B14" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608039995292795068
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  100  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r11|DWORD) trueDestinationProbability: 0.19996410454965907 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597744362548122956
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction MOV [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  106  <|@ instruction r9|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr  108  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 20] y: -1 size: DWORD <|@ <|@
      nr  110  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 24] y: -1 size: DWORD <|@ <|@
      nr  112  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 28] y: -1 size: DWORD <|@ <|@
      nr  114  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 32] y: -1 size: DWORD <|@ <|@
      nr  116  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 36] y: -1 size: DWORD <|@ <|@
      nr  118  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 40] y: -1 size: DWORD <|@ <|@
      nr  120  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 44] y: -1 size: DWORD <|@ <|@
      nr  122  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 48] y: -1 size: DWORD <|@ <|@
      nr  124  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 52] y: -1 size: DWORD <|@ <|@
      nr  126  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 56] y: -1 size: DWORD <|@ <|@
      nr  128  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 60] y: -1 size: DWORD <|@ <|@
      nr  130  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 64] y: -1 size: DWORD <|@ <|@
      nr  132  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 68] y: -1 size: DWORD <|@ <|@
      nr  134  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 72] y: -1 size: DWORD <|@ <|@
      nr  136  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 76] y: -1 size: DWORD <|@ <|@
      nr  138  <|@ instruction r11|DWORD = LEA [r11|DWORD + 16] size: DWORD <|@ <|@
      nr  140  <|@ instruction JUMP ~[] destination: B13 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606753486221175845
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606840135379518264
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  148  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699167914968223
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction MOV [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  154  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  156  <|@ instruction JUMP ~[] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606753486221175845
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B3" 
    successors "B19" "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction rdx|DWORD[_] = MOV [rsi|QWORD[.] + 68] size: DWORD <|@ <|@
      nr  166  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction rdx|DWORD = MOV [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:68] <|@ <|@
      nr  168  <|@ instruction rcx|DWORD[_] = MOV [rsi|QWORD[.] + 52] size: DWORD <|@ <|@
      nr  170  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction rcx|DWORD[_] = MOV [rcx|DWORD[_] * 8 + 52] size: DWORD state [bci:68] <|@ <|@
      nr  172  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction NULLCHECK [rcx|DWORD[_] * 8] state [bci:68] <|@ <|@
      nr  174  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  178  <|@ instruction MOV [rsi|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr  180  <|@ instruction rdx|DWORD[_] = MOV [rsi|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  182  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@16d1397a encoding: base: 0 shift: 3 <|@ <|@
      nr  184  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@16d1397a encoding: base: 0 shift: 3 <|@ <|@
      nr  186  <|@ instruction r11|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  188  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  190  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  192  <|@ instruction rcx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  194  <|@ instruction stack:32|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  196  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: stack:32|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:121] <|@ <|@
      nr  198  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 3.0308973238957204E-4 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4607179688810405709
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  212  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B20" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  218  <|@ instruction MOV (x: [rsi|QWORD[.] + 36], y: r10|DWORD) size: DWORD <|@ <|@
      nr  220  <|@ instruction INC [rsi|QWORD[.] + 44] size: DWORD <|@ <|@
      nr  222  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B18" 
    xhandlers
    flags 
    probability 4587023742297259456
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction JUMP ~[] destination: B3 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4554226642368960512
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  204  <|@ instruction MOV [rsi|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr  206  <|@ instruction JUMP ~[] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction MOV [r15|QWORD + 1156] y: -36891 size: DWORD <|@ <|@
      nr  236  <|@ instruction MOV [r15|QWORD + 1168] y: 17944 size: QWORD <|@ <|@
      nr  238  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1760) [bci: 44]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction DEOPT info [bci:44] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction MOV [r15|QWORD + 1156] y: -66323 size: DWORD <|@ <|@
      nr  228  <|@ instruction MOV [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  230  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction DEOPT info [bci:68] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   20  <|@ instruction MOV [r15|QWORD + 1156] y: -65043 size: DWORD <|@ <|@
      nr   22  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   24  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1757) [bci: 10]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_0      
     2: putfield      #86         // hitEnd:boolean
     5: aload_0       
     6: iconst_0      
     7: putfield      #87         // requireEnd:boolean
    10: iload_1       
    11: ifge          18
    14: iconst_0      
    15: goto          19
    18: iload_1       
    19: istore_1      
    20: aload_0       
    21: iload_1       
    22: putfield      #2          // first:int
    25: aload_0       
    26: aload_0       
    27: getfield      #4          // oldLast:int
    30: ifge          37
    33: iload_1       
    34: goto          41
    37: aload_0       
    38: getfield      #4          // oldLast:int
    41: putfield      #4          // oldLast:int
    44: iconst_0      
    45: istore_2      
    46: iload_2       
    47: aload_0       
    48: getfield      #12         // groups:int[]
    51: arraylength   
    52: if_icmpge     68
    55: aload_0       
    56: getfield      #12         // groups:int[]
    59: iload_2       
    60: iconst_m1     
    61: iastore       
    62: iinc          
    65: goto          46
    68: iconst_0      
    69: istore_2      
    70: iload_2       
    71: aload_0       
    72: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    75: arraylength   
    76: if_icmpge     103
    79: aload_0       
    80: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    83: iload_2       
    84: aaload        
    85: ifnull        97
    88: aload_0       
    89: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    92: iload_2       
    93: aaload        
    94: invokevirtual #32         // java.util.regex.IntHashSet.clear:()void
    97: iinc          
   100: goto          70
   103: aload_0       
   104: iconst_0      
   105: putfield      #1          // acceptMode:int
   108: aload_0       
   109: getfield      #8          // parentPattern:java.util.regex.Pattern
   112: getfield      #88         // java.util.regex.Pattern.root:java.util.regex.Pattern$Node
   115: aload_0       
   116: iload_1       
   117: aload_0       
   118: getfield      #9          // text:java.lang.CharSequence
   121: invokevirtual #89         // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
   124: istore_2      
   125: iload_2       
   126: ifne          134
   129: aload_0       
   130: iconst_m1     
   131: putfield      #2          // first:int
   134: aload_0       
   135: aload_0       
   136: getfield      #3          // last:int
   139: putfield      #4          // oldLast:int
   142: aload_0       
   143: dup           
   144: getfield      #31         // modCount:int
   147: iconst_1      
   148: iadd          
   149: putfield      #31         // modCount:int
   152: iload_2       
   153: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After EdgeMoveOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@bf3c5e0 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction rdx|DWORD[_] = MOV [rsi|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   10  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1755) [bci: 0]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction rcx|DWORD = MOV [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction MOVB [rsi|QWORD[.] + 48] y: 0 size: BYTE <|@ <|@
      nr   14  <|@ instruction MOVB [rsi|QWORD[.] + 49] y: 0 size: BYTE <|@ <|@
      nr   16  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   28  <|@ instruction MOV (x: [rsi|QWORD[.] + 28], y: r10|DWORD) size: DWORD <|@ <|@
      nr   30  <|@ instruction r8|DWORD = MOV [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   32  <|@ instruction TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   34  <|@ instruction r8|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: r10|DWORD) condition: < <|@ <|@
      nr   36  <|@ instruction MOV (x: [rsi|QWORD[.] + 36], y: r8|DWORD) size: DWORD <|@ <|@
      nr   38  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.04762108250417496 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606753486221175844
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction r8|DWORD = DEC rcx|DWORD size: DWORD <|@ <|@
      nr   48  <|@ instruction r8|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr   50  <|@ instruction r11|QWORD = MOV rcx|DWORD size: DWORD <|@ <|@
      nr   52  <|@ instruction CMPBRANCH (x: r11|QWORD, y: r8|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B24" 
    xhandlers
    flags 
    probability 4602249886593805348
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction CMPCONSTBRANCH rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B24 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602249886593805348
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602249886593805348
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction JUMP ~[] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606753486221175844
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction MOV [rdx|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr   70  <|@ instruction CMP rcx|DWORD y: 3 size: DWORD <|@ <|@
      nr   72  <|@ instruction r8|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rcx|DWORD) condition: |<| <|@ <|@
      nr   74  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@16d1397a encoding: base: 0 shift: 3 <|@ <|@
      nr   76  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   78  <|@ instruction JUMP ~[] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" 
    successors "B10" "B11" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606840135379518263
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   82  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699167914968222
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction MOV [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   88  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr   90  <|@ instruction JUMP ~[] destination: B10 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4606753486221175844
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction r8|DWORD = LEA [rcx|DWORD - 16] size: DWORD <|@ <|@
      nr   96  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B13" "B14" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608039995292795068
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  100  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r11|DWORD) trueDestinationProbability: 0.19996410454965907 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597744362548122956
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction MOV [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  106  <|@ instruction r9|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr  108  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 20] y: -1 size: DWORD <|@ <|@
      nr  110  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 24] y: -1 size: DWORD <|@ <|@
      nr  112  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 28] y: -1 size: DWORD <|@ <|@
      nr  114  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 32] y: -1 size: DWORD <|@ <|@
      nr  116  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 36] y: -1 size: DWORD <|@ <|@
      nr  118  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 40] y: -1 size: DWORD <|@ <|@
      nr  120  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 44] y: -1 size: DWORD <|@ <|@
      nr  122  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 48] y: -1 size: DWORD <|@ <|@
      nr  124  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 52] y: -1 size: DWORD <|@ <|@
      nr  126  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 56] y: -1 size: DWORD <|@ <|@
      nr  128  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 60] y: -1 size: DWORD <|@ <|@
      nr  130  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 64] y: -1 size: DWORD <|@ <|@
      nr  132  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 68] y: -1 size: DWORD <|@ <|@
      nr  134  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 72] y: -1 size: DWORD <|@ <|@
      nr  136  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 76] y: -1 size: DWORD <|@ <|@
      nr  138  <|@ instruction r11|DWORD = LEA [r11|DWORD + 16] size: DWORD <|@ <|@
      nr  140  <|@ instruction JUMP ~[] destination: B13 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606753486221175845
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606840135379518264
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  148  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699167914968223
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction MOV [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  154  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  156  <|@ instruction JUMP ~[] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606753486221175845
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B3" 
    successors "B19" "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction rdx|DWORD[_] = MOV [rsi|QWORD[.] + 68] size: DWORD <|@ <|@
      nr  166  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction rdx|DWORD = MOV [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:68] <|@ <|@
      nr  168  <|@ instruction rcx|DWORD[_] = MOV [rsi|QWORD[.] + 52] size: DWORD <|@ <|@
      nr  170  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction rcx|DWORD[_] = MOV [rcx|DWORD[_] * 8 + 52] size: DWORD state [bci:68] <|@ <|@
      nr  172  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction NULLCHECK [rcx|DWORD[_] * 8] state [bci:68] <|@ <|@
      nr  174  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  178  <|@ instruction MOV [rsi|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr  180  <|@ instruction rdx|DWORD[_] = MOV [rsi|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  182  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@16d1397a encoding: base: 0 shift: 3 <|@ <|@
      nr  184  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@16d1397a encoding: base: 0 shift: 3 <|@ <|@
      nr  186  <|@ instruction r11|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  188  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  190  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  192  <|@ instruction rcx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  194  <|@ instruction stack:32|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  196  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: stack:32|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:121] <|@ <|@
      nr  198  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 3.0308973238957204E-4 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4607179688810405709
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  212  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B20" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  218  <|@ instruction MOV (x: [rsi|QWORD[.] + 36], y: r10|DWORD) size: DWORD <|@ <|@
      nr  220  <|@ instruction INC [rsi|QWORD[.] + 44] size: DWORD <|@ <|@
      nr  222  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B18" 
    xhandlers
    flags 
    probability 4587023742297259456
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction JUMP ~[] destination: B3 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4554226642368960512
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  204  <|@ instruction MOV [rsi|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr  206  <|@ instruction JUMP ~[] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction MOV [r15|QWORD + 1156] y: -36891 size: DWORD <|@ <|@
      nr  236  <|@ instruction MOV [r15|QWORD + 1168] y: 17944 size: QWORD <|@ <|@
      nr  238  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1760) [bci: 44]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction DEOPT info [bci:44] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction MOV [r15|QWORD + 1156] y: -66323 size: DWORD <|@ <|@
      nr  228  <|@ instruction MOV [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  230  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction DEOPT info [bci:68] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   20  <|@ instruction MOV [r15|QWORD + 1156] y: -65043 size: DWORD <|@ <|@
      nr   22  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   24  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1757) [bci: 10]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_0      
     2: putfield      #86         // hitEnd:boolean
     5: aload_0       
     6: iconst_0      
     7: putfield      #87         // requireEnd:boolean
    10: iload_1       
    11: ifge          18
    14: iconst_0      
    15: goto          19
    18: iload_1       
    19: istore_1      
    20: aload_0       
    21: iload_1       
    22: putfield      #2          // first:int
    25: aload_0       
    26: aload_0       
    27: getfield      #4          // oldLast:int
    30: ifge          37
    33: iload_1       
    34: goto          41
    37: aload_0       
    38: getfield      #4          // oldLast:int
    41: putfield      #4          // oldLast:int
    44: iconst_0      
    45: istore_2      
    46: iload_2       
    47: aload_0       
    48: getfield      #12         // groups:int[]
    51: arraylength   
    52: if_icmpge     68
    55: aload_0       
    56: getfield      #12         // groups:int[]
    59: iload_2       
    60: iconst_m1     
    61: iastore       
    62: iinc          
    65: goto          46
    68: iconst_0      
    69: istore_2      
    70: iload_2       
    71: aload_0       
    72: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    75: arraylength   
    76: if_icmpge     103
    79: aload_0       
    80: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    83: iload_2       
    84: aaload        
    85: ifnull        97
    88: aload_0       
    89: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    92: iload_2       
    93: aaload        
    94: invokevirtual #32         // java.util.regex.IntHashSet.clear:()void
    97: iinc          
   100: goto          70
   103: aload_0       
   104: iconst_0      
   105: putfield      #1          // acceptMode:int
   108: aload_0       
   109: getfield      #8          // parentPattern:java.util.regex.Pattern
   112: getfield      #88         // java.util.regex.Pattern.root:java.util.regex.Pattern$Node
   115: aload_0       
   116: iload_1       
   117: aload_0       
   118: getfield      #9          // text:java.lang.CharSequence
   121: invokevirtual #89         // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
   124: istore_2      
   125: iload_2       
   126: ifne          134
   129: aload_0       
   130: iconst_m1     
   131: putfield      #2          // first:int
   134: aload_0       
   135: aload_0       
   136: getfield      #3          // last:int
   139: putfield      #4          // oldLast:int
   142: aload_0       
   143: dup           
   144: getfield      #31         // modCount:int
   147: iconst_1      
   148: iadd          
   149: putfield      #31         // modCount:int
   152: iload_2       
   153: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After RedundantMoveElimination"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@bf3c5e0 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction rdx|DWORD[_] = MOV [rsi|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   10  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1755) [bci: 0]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction rcx|DWORD = MOV [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction MOVB [rsi|QWORD[.] + 48] y: 0 size: BYTE <|@ <|@
      nr   14  <|@ instruction MOVB [rsi|QWORD[.] + 49] y: 0 size: BYTE <|@ <|@
      nr   16  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   28  <|@ instruction MOV (x: [rsi|QWORD[.] + 28], y: r10|DWORD) size: DWORD <|@ <|@
      nr   30  <|@ instruction r8|DWORD = MOV [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   32  <|@ instruction TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   34  <|@ instruction r8|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: r10|DWORD) condition: < <|@ <|@
      nr   36  <|@ instruction MOV (x: [rsi|QWORD[.] + 36], y: r8|DWORD) size: DWORD <|@ <|@
      nr   38  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.04762108250417496 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606753486221175844
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction r8|DWORD = DEC rcx|DWORD size: DWORD <|@ <|@
      nr   48  <|@ instruction r8|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr   50  <|@ instruction r11|QWORD = MOV rcx|DWORD size: DWORD <|@ <|@
      nr   52  <|@ instruction CMPBRANCH (x: r11|QWORD, y: r8|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B24" 
    xhandlers
    flags 
    probability 4602249886593805348
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction CMPCONSTBRANCH rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B24 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602249886593805348
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602249886593805348
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction JUMP ~[] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606753486221175844
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction MOV [rdx|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr   70  <|@ instruction CMP rcx|DWORD y: 3 size: DWORD <|@ <|@
      nr   72  <|@ instruction r8|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rcx|DWORD) condition: |<| <|@ <|@
      nr   74  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@16d1397a encoding: base: 0 shift: 3 <|@ <|@
      nr   76  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   78  <|@ instruction JUMP ~[] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" 
    successors "B10" "B11" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606840135379518263
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   82  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699167914968222
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction MOV [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   88  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr   90  <|@ instruction JUMP ~[] destination: B10 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4606753486221175844
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction r8|DWORD = LEA [rcx|DWORD - 16] size: DWORD <|@ <|@
      nr   96  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B13" "B14" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608039995292795068
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  100  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r11|DWORD) trueDestinationProbability: 0.19996410454965907 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597744362548122956
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction MOV [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  106  <|@ instruction r9|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr  108  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 20] y: -1 size: DWORD <|@ <|@
      nr  110  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 24] y: -1 size: DWORD <|@ <|@
      nr  112  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 28] y: -1 size: DWORD <|@ <|@
      nr  114  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 32] y: -1 size: DWORD <|@ <|@
      nr  116  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 36] y: -1 size: DWORD <|@ <|@
      nr  118  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 40] y: -1 size: DWORD <|@ <|@
      nr  120  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 44] y: -1 size: DWORD <|@ <|@
      nr  122  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 48] y: -1 size: DWORD <|@ <|@
      nr  124  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 52] y: -1 size: DWORD <|@ <|@
      nr  126  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 56] y: -1 size: DWORD <|@ <|@
      nr  128  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 60] y: -1 size: DWORD <|@ <|@
      nr  130  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 64] y: -1 size: DWORD <|@ <|@
      nr  132  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 68] y: -1 size: DWORD <|@ <|@
      nr  134  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 72] y: -1 size: DWORD <|@ <|@
      nr  136  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 76] y: -1 size: DWORD <|@ <|@
      nr  138  <|@ instruction r11|DWORD = LEA [r11|DWORD + 16] size: DWORD <|@ <|@
      nr  140  <|@ instruction JUMP ~[] destination: B13 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606753486221175845
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606840135379518264
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  148  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699167914968223
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction MOV [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  154  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  156  <|@ instruction JUMP ~[] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606753486221175845
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B3" 
    successors "B19" "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction rdx|DWORD[_] = MOV [rsi|QWORD[.] + 68] size: DWORD <|@ <|@
      nr  166  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction rdx|DWORD = MOV [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:68] <|@ <|@
      nr  168  <|@ instruction rcx|DWORD[_] = MOV [rsi|QWORD[.] + 52] size: DWORD <|@ <|@
      nr  170  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction rcx|DWORD[_] = MOV [rcx|DWORD[_] * 8 + 52] size: DWORD state [bci:68] <|@ <|@
      nr  172  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction NULLCHECK [rcx|DWORD[_] * 8] state [bci:68] <|@ <|@
      nr  174  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  178  <|@ instruction MOV [rsi|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr  180  <|@ instruction rdx|DWORD[_] = MOV [rsi|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  182  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@16d1397a encoding: base: 0 shift: 3 <|@ <|@
      nr  184  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@16d1397a encoding: base: 0 shift: 3 <|@ <|@
      nr  186  <|@ instruction r11|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  188  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  190  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  192  <|@ instruction rcx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  194  <|@ instruction stack:32|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  196  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: stack:32|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:121] <|@ <|@
      nr  198  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 3.0308973238957204E-4 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4607179688810405709
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  212  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B20" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  218  <|@ instruction MOV (x: [rsi|QWORD[.] + 36], y: r10|DWORD) size: DWORD <|@ <|@
      nr  220  <|@ instruction INC [rsi|QWORD[.] + 44] size: DWORD <|@ <|@
      nr  222  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B18" 
    xhandlers
    flags 
    probability 4587023742297259456
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction JUMP ~[] destination: B3 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4554226642368960512
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  204  <|@ instruction MOV [rsi|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr  206  <|@ instruction JUMP ~[] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction MOV [r15|QWORD + 1156] y: -36891 size: DWORD <|@ <|@
      nr  236  <|@ instruction MOV [r15|QWORD + 1168] y: 17944 size: QWORD <|@ <|@
      nr  238  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1760) [bci: 44]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction DEOPT info [bci:44] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction MOV [r15|QWORD + 1156] y: -66323 size: DWORD <|@ <|@
      nr  228  <|@ instruction MOV [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  230  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction DEOPT info [bci:68] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   20  <|@ instruction MOV [r15|QWORD + 1156] y: -65043 size: DWORD <|@ <|@
      nr   22  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   24  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1757) [bci: 10]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_0      
     2: putfield      #86         // hitEnd:boolean
     5: aload_0       
     6: iconst_0      
     7: putfield      #87         // requireEnd:boolean
    10: iload_1       
    11: ifge          18
    14: iconst_0      
    15: goto          19
    18: iload_1       
    19: istore_1      
    20: aload_0       
    21: iload_1       
    22: putfield      #2          // first:int
    25: aload_0       
    26: aload_0       
    27: getfield      #4          // oldLast:int
    30: ifge          37
    33: iload_1       
    34: goto          41
    37: aload_0       
    38: getfield      #4          // oldLast:int
    41: putfield      #4          // oldLast:int
    44: iconst_0      
    45: istore_2      
    46: iload_2       
    47: aload_0       
    48: getfield      #12         // groups:int[]
    51: arraylength   
    52: if_icmpge     68
    55: aload_0       
    56: getfield      #12         // groups:int[]
    59: iload_2       
    60: iconst_m1     
    61: iastore       
    62: iinc          
    65: goto          46
    68: iconst_0      
    69: istore_2      
    70: iload_2       
    71: aload_0       
    72: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    75: arraylength   
    76: if_icmpge     103
    79: aload_0       
    80: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    83: iload_2       
    84: aaload        
    85: ifnull        97
    88: aload_0       
    89: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    92: iload_2       
    93: aaload        
    94: invokevirtual #32         // java.util.regex.IntHashSet.clear:()void
    97: iinc          
   100: goto          70
   103: aload_0       
   104: iconst_0      
   105: putfield      #1          // acceptMode:int
   108: aload_0       
   109: getfield      #8          // parentPattern:java.util.regex.Pattern
   112: getfield      #88         // java.util.regex.Pattern.root:java.util.regex.Pattern$Node
   115: aload_0       
   116: iload_1       
   117: aload_0       
   118: getfield      #9          // text:java.lang.CharSequence
   121: invokevirtual #89         // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
   124: istore_2      
   125: iload_2       
   126: ifne          134
   129: aload_0       
   130: iconst_m1     
   131: putfield      #2          // first:int
   134: aload_0       
   135: aload_0       
   136: getfield      #3          // last:int
   139: putfield      #4          // oldLast:int
   142: aload_0       
   143: dup           
   144: getfield      #31         // modCount:int
   147: iconst_1      
   148: iadd          
   149: putfield      #31         // modCount:int
   152: iload_2       
   153: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After NullCheckOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@bf3c5e0 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction rdx|DWORD[_] = MOV [rsi|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   10  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1755) [bci: 0]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction rcx|DWORD = MOV [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction MOVB [rsi|QWORD[.] + 48] y: 0 size: BYTE <|@ <|@
      nr   14  <|@ instruction MOVB [rsi|QWORD[.] + 49] y: 0 size: BYTE <|@ <|@
      nr   16  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   28  <|@ instruction MOV (x: [rsi|QWORD[.] + 28], y: r10|DWORD) size: DWORD <|@ <|@
      nr   30  <|@ instruction r8|DWORD = MOV [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   32  <|@ instruction TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   34  <|@ instruction r8|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: r10|DWORD) condition: < <|@ <|@
      nr   36  <|@ instruction MOV (x: [rsi|QWORD[.] + 36], y: r8|DWORD) size: DWORD <|@ <|@
      nr   38  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.04762108250417496 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606753486221175844
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction r8|DWORD = DEC rcx|DWORD size: DWORD <|@ <|@
      nr   48  <|@ instruction r8|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr   50  <|@ instruction r11|QWORD = MOV rcx|DWORD size: DWORD <|@ <|@
      nr   52  <|@ instruction CMPBRANCH (x: r11|QWORD, y: r8|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B24" 
    xhandlers
    flags 
    probability 4602249886593805348
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction CMPCONSTBRANCH rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B24 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602249886593805348
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602249886593805348
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction JUMP ~[] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606753486221175844
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction MOV [rdx|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr   70  <|@ instruction CMP rcx|DWORD y: 3 size: DWORD <|@ <|@
      nr   72  <|@ instruction r8|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rcx|DWORD) condition: |<| <|@ <|@
      nr   74  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@16d1397a encoding: base: 0 shift: 3 <|@ <|@
      nr   76  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   78  <|@ instruction JUMP ~[] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" 
    successors "B10" "B11" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606840135379518263
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   82  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699167914968222
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction MOV [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   88  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr   90  <|@ instruction JUMP ~[] destination: B10 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4606753486221175844
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction r8|DWORD = LEA [rcx|DWORD - 16] size: DWORD <|@ <|@
      nr   96  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B13" "B14" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608039995292795068
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  100  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r11|DWORD) trueDestinationProbability: 0.19996410454965907 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597744362548122956
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction MOV [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  106  <|@ instruction r9|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr  108  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 20] y: -1 size: DWORD <|@ <|@
      nr  110  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 24] y: -1 size: DWORD <|@ <|@
      nr  112  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 28] y: -1 size: DWORD <|@ <|@
      nr  114  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 32] y: -1 size: DWORD <|@ <|@
      nr  116  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 36] y: -1 size: DWORD <|@ <|@
      nr  118  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 40] y: -1 size: DWORD <|@ <|@
      nr  120  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 44] y: -1 size: DWORD <|@ <|@
      nr  122  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 48] y: -1 size: DWORD <|@ <|@
      nr  124  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 52] y: -1 size: DWORD <|@ <|@
      nr  126  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 56] y: -1 size: DWORD <|@ <|@
      nr  128  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 60] y: -1 size: DWORD <|@ <|@
      nr  130  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 64] y: -1 size: DWORD <|@ <|@
      nr  132  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 68] y: -1 size: DWORD <|@ <|@
      nr  134  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 72] y: -1 size: DWORD <|@ <|@
      nr  136  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 76] y: -1 size: DWORD <|@ <|@
      nr  138  <|@ instruction r11|DWORD = LEA [r11|DWORD + 16] size: DWORD <|@ <|@
      nr  140  <|@ instruction JUMP ~[] destination: B13 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606753486221175845
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606840135379518264
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  148  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699167914968223
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction MOV [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  154  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  156  <|@ instruction JUMP ~[] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606753486221175845
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B3" 
    successors "B19" "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction rdx|DWORD[_] = MOV [rsi|QWORD[.] + 68] size: DWORD <|@ <|@
      nr  166  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction rdx|DWORD = MOV [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:68] <|@ <|@
      nr  168  <|@ instruction rcx|DWORD[_] = MOV [rsi|QWORD[.] + 52] size: DWORD <|@ <|@
      nr  170  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction rcx|DWORD[_] = MOV [rcx|DWORD[_] * 8 + 52] size: DWORD state [bci:68] <|@ <|@
      nr  172  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction NULLCHECK [rcx|DWORD[_] * 8] state [bci:68] <|@ <|@
      nr  174  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  178  <|@ instruction MOV [rsi|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr  180  <|@ instruction rdx|DWORD[_] = MOV [rsi|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  182  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@16d1397a encoding: base: 0 shift: 3 <|@ <|@
      nr  184  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@16d1397a encoding: base: 0 shift: 3 <|@ <|@
      nr  186  <|@ instruction r11|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  188  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  190  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  192  <|@ instruction rcx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  194  <|@ instruction stack:32|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  196  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: stack:32|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:121] <|@ <|@
      nr  198  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 3.0308973238957204E-4 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4607179688810405709
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  212  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B20" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  218  <|@ instruction MOV (x: [rsi|QWORD[.] + 36], y: r10|DWORD) size: DWORD <|@ <|@
      nr  220  <|@ instruction INC [rsi|QWORD[.] + 44] size: DWORD <|@ <|@
      nr  222  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B18" 
    xhandlers
    flags 
    probability 4587023742297259456
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction JUMP ~[] destination: B3 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4554226642368960512
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  204  <|@ instruction MOV [rsi|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr  206  <|@ instruction JUMP ~[] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction MOV [r15|QWORD + 1156] y: -36891 size: DWORD <|@ <|@
      nr  236  <|@ instruction MOV [r15|QWORD + 1168] y: 17944 size: QWORD <|@ <|@
      nr  238  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1760) [bci: 44]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction DEOPT info [bci:44] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction MOV [r15|QWORD + 1156] y: -66323 size: DWORD <|@ <|@
      nr  228  <|@ instruction MOV [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  230  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction DEOPT info [bci:68] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   20  <|@ instruction MOV [r15|QWORD + 1156] y: -65043 size: DWORD <|@ <|@
      nr   22  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   24  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1757) [bci: 10]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_0      
     2: putfield      #86         // hitEnd:boolean
     5: aload_0       
     6: iconst_0      
     7: putfield      #87         // requireEnd:boolean
    10: iload_1       
    11: ifge          18
    14: iconst_0      
    15: goto          19
    18: iload_1       
    19: istore_1      
    20: aload_0       
    21: iload_1       
    22: putfield      #2          // first:int
    25: aload_0       
    26: aload_0       
    27: getfield      #4          // oldLast:int
    30: ifge          37
    33: iload_1       
    34: goto          41
    37: aload_0       
    38: getfield      #4          // oldLast:int
    41: putfield      #4          // oldLast:int
    44: iconst_0      
    45: istore_2      
    46: iload_2       
    47: aload_0       
    48: getfield      #12         // groups:int[]
    51: arraylength   
    52: if_icmpge     68
    55: aload_0       
    56: getfield      #12         // groups:int[]
    59: iload_2       
    60: iconst_m1     
    61: iastore       
    62: iinc          
    65: goto          46
    68: iconst_0      
    69: istore_2      
    70: iload_2       
    71: aload_0       
    72: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    75: arraylength   
    76: if_icmpge     103
    79: aload_0       
    80: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    83: iload_2       
    84: aaload        
    85: ifnull        97
    88: aload_0       
    89: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    92: iload_2       
    93: aaload        
    94: invokevirtual #32         // java.util.regex.IntHashSet.clear:()void
    97: iinc          
   100: goto          70
   103: aload_0       
   104: iconst_0      
   105: putfield      #1          // acceptMode:int
   108: aload_0       
   109: getfield      #8          // parentPattern:java.util.regex.Pattern
   112: getfield      #88         // java.util.regex.Pattern.root:java.util.regex.Pattern$Node
   115: aload_0       
   116: iload_1       
   117: aload_0       
   118: getfield      #9          // text:java.lang.CharSequence
   121: invokevirtual #89         // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
   124: istore_2      
   125: iload_2       
   126: ifne          134
   129: aload_0       
   130: iconst_m1     
   131: putfield      #2          // first:int
   134: aload_0       
   135: aload_0       
   136: getfield      #3          // last:int
   139: putfield      #4          // oldLast:int
   142: aload_0       
   143: dup           
   144: getfield      #31         // modCount:int
   147: iconst_1      
   148: iadd          
   149: putfield      #31         // modCount:int
   152: iload_2       
   153: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After ControlFlowOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@bf3c5e0 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction rdx|DWORD[_] = MOV [rsi|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   10  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1755) [bci: 0]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction rcx|DWORD = MOV [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction MOVB [rsi|QWORD[.] + 48] y: 0 size: BYTE <|@ <|@
      nr   14  <|@ instruction MOVB [rsi|QWORD[.] + 49] y: 0 size: BYTE <|@ <|@
      nr   16  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B18" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   28  <|@ instruction MOV (x: [rsi|QWORD[.] + 28], y: r10|DWORD) size: DWORD <|@ <|@
      nr   30  <|@ instruction r8|DWORD = MOV [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   32  <|@ instruction TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   34  <|@ instruction r8|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: r10|DWORD) condition: < <|@ <|@
      nr   36  <|@ instruction MOV (x: [rsi|QWORD[.] + 36], y: r8|DWORD) size: DWORD <|@ <|@
      nr   38  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.04762108250417496 condition: = trueDestination: B2 -> B18 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" "B6" 
    xhandlers
    flags 
    probability 4606753486221175844
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction r8|DWORD = DEC rcx|DWORD size: DWORD <|@ <|@
      nr   48  <|@ instruction r8|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr   50  <|@ instruction r11|QWORD = MOV rcx|DWORD size: DWORD <|@ <|@
      nr   52  <|@ instruction CMPBRANCH (x: r11|QWORD, y: r8|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B8 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" "B24" 
    xhandlers
    flags 
    probability 4602249886593805348
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction CMPCONSTBRANCH rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B8 falseDestination: B6 -> B24 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606753486221175844
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction MOV [rdx|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr   70  <|@ instruction CMP rcx|DWORD y: 3 size: DWORD <|@ <|@
      nr   72  <|@ instruction r8|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rcx|DWORD) condition: |<| <|@ <|@
      nr   74  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@16d1397a encoding: base: 0 shift: 3 <|@ <|@
      nr   76  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   78  <|@ instruction JUMP ~[] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" 
    successors "B10" "B11" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606840135379518263
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   82  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699167914968222
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction MOV [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   88  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr   90  <|@ instruction JUMP ~[] destination: B10 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4606753486221175844
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction r8|DWORD = LEA [rcx|DWORD - 16] size: DWORD <|@ <|@
      nr   96  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B13" "B15" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608039995292795068
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  100  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r11|DWORD) trueDestinationProbability: 0.19996410454965907 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597744362548122956
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction MOV [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  106  <|@ instruction r9|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr  108  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 20] y: -1 size: DWORD <|@ <|@
      nr  110  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 24] y: -1 size: DWORD <|@ <|@
      nr  112  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 28] y: -1 size: DWORD <|@ <|@
      nr  114  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 32] y: -1 size: DWORD <|@ <|@
      nr  116  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 36] y: -1 size: DWORD <|@ <|@
      nr  118  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 40] y: -1 size: DWORD <|@ <|@
      nr  120  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 44] y: -1 size: DWORD <|@ <|@
      nr  122  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 48] y: -1 size: DWORD <|@ <|@
      nr  124  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 52] y: -1 size: DWORD <|@ <|@
      nr  126  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 56] y: -1 size: DWORD <|@ <|@
      nr  128  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 60] y: -1 size: DWORD <|@ <|@
      nr  130  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 64] y: -1 size: DWORD <|@ <|@
      nr  132  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 68] y: -1 size: DWORD <|@ <|@
      nr  134  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 72] y: -1 size: DWORD <|@ <|@
      nr  136  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 76] y: -1 size: DWORD <|@ <|@
      nr  138  <|@ instruction r11|DWORD = LEA [r11|DWORD + 16] size: DWORD <|@ <|@
      nr  140  <|@ instruction JUMP ~[] destination: B13 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B12" "B16" 
    successors "B16" "B18" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606840135379518264
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  148  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699167914968223
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction MOV [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  154  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  156  <|@ instruction JUMP ~[] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B15" "B2" 
    successors "B19" "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction rdx|DWORD[_] = MOV [rsi|QWORD[.] + 68] size: DWORD <|@ <|@
      nr  166  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction rdx|DWORD = MOV [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:68] <|@ <|@
      nr  168  <|@ instruction rcx|DWORD[_] = MOV [rsi|QWORD[.] + 52] size: DWORD <|@ <|@
      nr  170  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction rcx|DWORD[_] = MOV [rcx|DWORD[_] * 8 + 52] size: DWORD state [bci:68] <|@ <|@
      nr  172  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction NULLCHECK [rcx|DWORD[_] * 8] state [bci:68] <|@ <|@
      nr  174  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  178  <|@ instruction MOV [rsi|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr  180  <|@ instruction rdx|DWORD[_] = MOV [rsi|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  182  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@16d1397a encoding: base: 0 shift: 3 <|@ <|@
      nr  184  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@16d1397a encoding: base: 0 shift: 3 <|@ <|@
      nr  186  <|@ instruction r11|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  188  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  190  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  192  <|@ instruction rcx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  194  <|@ instruction stack:32|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  196  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: stack:32|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:121] <|@ <|@
      nr  198  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 3.0308973238957204E-4 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4607179688810405709
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  212  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B20" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  218  <|@ instruction MOV (x: [rsi|QWORD[.] + 36], y: r10|DWORD) size: DWORD <|@ <|@
      nr  220  <|@ instruction INC [rsi|QWORD[.] + 44] size: DWORD <|@ <|@
      nr  222  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4554226642368960512
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  204  <|@ instruction MOV [rsi|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr  206  <|@ instruction JUMP ~[] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction MOV [r15|QWORD + 1156] y: -36891 size: DWORD <|@ <|@
      nr  236  <|@ instruction MOV [r15|QWORD + 1168] y: 17944 size: QWORD <|@ <|@
      nr  238  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1760) [bci: 44]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction DEOPT info [bci:44] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction MOV [r15|QWORD + 1156] y: -66323 size: DWORD <|@ <|@
      nr  228  <|@ instruction MOV [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  230  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction DEOPT info [bci:68] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   20  <|@ instruction MOV [r15|QWORD + 1156] y: -65043 size: DWORD <|@ <|@
      nr   22  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   24  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1757) [bci: 10]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_0      
     2: putfield      #86         // hitEnd:boolean
     5: aload_0       
     6: iconst_0      
     7: putfield      #87         // requireEnd:boolean
    10: iload_1       
    11: ifge          18
    14: iconst_0      
    15: goto          19
    18: iload_1       
    19: istore_1      
    20: aload_0       
    21: iload_1       
    22: putfield      #2          // first:int
    25: aload_0       
    26: aload_0       
    27: getfield      #4          // oldLast:int
    30: ifge          37
    33: iload_1       
    34: goto          41
    37: aload_0       
    38: getfield      #4          // oldLast:int
    41: putfield      #4          // oldLast:int
    44: iconst_0      
    45: istore_2      
    46: iload_2       
    47: aload_0       
    48: getfield      #12         // groups:int[]
    51: arraylength   
    52: if_icmpge     68
    55: aload_0       
    56: getfield      #12         // groups:int[]
    59: iload_2       
    60: iconst_m1     
    61: iastore       
    62: iinc          
    65: goto          46
    68: iconst_0      
    69: istore_2      
    70: iload_2       
    71: aload_0       
    72: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    75: arraylength   
    76: if_icmpge     103
    79: aload_0       
    80: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    83: iload_2       
    84: aaload        
    85: ifnull        97
    88: aload_0       
    89: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    92: iload_2       
    93: aaload        
    94: invokevirtual #32         // java.util.regex.IntHashSet.clear:()void
    97: iinc          
   100: goto          70
   103: aload_0       
   104: iconst_0      
   105: putfield      #1          // acceptMode:int
   108: aload_0       
   109: getfield      #8          // parentPattern:java.util.regex.Pattern
   112: getfield      #88         // java.util.regex.Pattern.root:java.util.regex.Pattern$Node
   115: aload_0       
   116: iload_1       
   117: aload_0       
   118: getfield      #9          // text:java.lang.CharSequence
   121: invokevirtual #89         // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
   124: istore_2      
   125: iload_2       
   126: ifne          134
   129: aload_0       
   130: iconst_m1     
   131: putfield      #2          // first:int
   134: aload_0       
   135: aload_0       
   136: getfield      #3          // last:int
   139: putfield      #4          // oldLast:int
   142: aload_0       
   143: dup           
   144: getfield      #31         // modCount:int
   147: iconst_1      
   148: iadd          
   149: putfield      #31         // modCount:int
   152: iload_2       
   153: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After ComputeCodeEmissionOrder"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@bf3c5e0 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction rdx|DWORD[_] = MOV [rsi|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   10  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1755) [bci: 0]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction rcx|DWORD = MOV [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction MOVB [rsi|QWORD[.] + 48] y: 0 size: BYTE <|@ <|@
      nr   14  <|@ instruction MOVB [rsi|QWORD[.] + 49] y: 0 size: BYTE <|@ <|@
      nr   16  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B18" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   28  <|@ instruction MOV (x: [rsi|QWORD[.] + 28], y: r10|DWORD) size: DWORD <|@ <|@
      nr   30  <|@ instruction r8|DWORD = MOV [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   32  <|@ instruction TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   34  <|@ instruction r8|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: r10|DWORD) condition: < <|@ <|@
      nr   36  <|@ instruction MOV (x: [rsi|QWORD[.] + 36], y: r8|DWORD) size: DWORD <|@ <|@
      nr   38  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.04762108250417496 condition: = trueDestination: B2 -> B18 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" "B6" 
    xhandlers
    flags 
    probability 4606753486221175844
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction r8|DWORD = DEC rcx|DWORD size: DWORD <|@ <|@
      nr   48  <|@ instruction r8|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr   50  <|@ instruction r11|QWORD = MOV rcx|DWORD size: DWORD <|@ <|@
      nr   52  <|@ instruction CMPBRANCH (x: r11|QWORD, y: r8|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B8 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" "B24" 
    xhandlers
    flags 
    probability 4602249886593805348
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction CMPCONSTBRANCH rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B8 falseDestination: B6 -> B24 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606753486221175844
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction MOV [rdx|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr   70  <|@ instruction CMP rcx|DWORD y: 3 size: DWORD <|@ <|@
      nr   72  <|@ instruction r8|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rcx|DWORD) condition: |<| <|@ <|@
      nr   74  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@16d1397a encoding: base: 0 shift: 3 <|@ <|@
      nr   76  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   78  <|@ instruction JUMP ~[] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699167914968222
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction MOV [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   88  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr   90  <|@ instruction JUMP ~[] destination: B10 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" 
    successors "B10" "B11" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606840135379518263
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   82  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B15" "B2" 
    successors "B19" "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction rdx|DWORD[_] = MOV [rsi|QWORD[.] + 68] size: DWORD <|@ <|@
      nr  166  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction rdx|DWORD = MOV [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:68] <|@ <|@
      nr  168  <|@ instruction rcx|DWORD[_] = MOV [rsi|QWORD[.] + 52] size: DWORD <|@ <|@
      nr  170  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction rcx|DWORD[_] = MOV [rcx|DWORD[_] * 8 + 52] size: DWORD state [bci:68] <|@ <|@
      nr  172  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction NULLCHECK [rcx|DWORD[_] * 8] state [bci:68] <|@ <|@
      nr  174  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  178  <|@ instruction MOV [rsi|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr  180  <|@ instruction rdx|DWORD[_] = MOV [rsi|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  182  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@16d1397a encoding: base: 0 shift: 3 <|@ <|@
      nr  184  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@16d1397a encoding: base: 0 shift: 3 <|@ <|@
      nr  186  <|@ instruction r11|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  188  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  190  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  192  <|@ instruction rcx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  194  <|@ instruction stack:32|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  196  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: stack:32|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:121] <|@ <|@
      nr  198  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 3.0308973238957204E-4 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4607179688810405709
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  212  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B20" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  218  <|@ instruction MOV (x: [rsi|QWORD[.] + 36], y: r10|DWORD) size: DWORD <|@ <|@
      nr  220  <|@ instruction INC [rsi|QWORD[.] + 44] size: DWORD <|@ <|@
      nr  222  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4606753486221175844
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction r8|DWORD = LEA [rcx|DWORD - 16] size: DWORD <|@ <|@
      nr   96  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699167914968223
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction MOV [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  154  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  156  <|@ instruction JUMP ~[] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B12" "B16" 
    successors "B16" "B18" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606840135379518264
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 16 numbPhis: 1 label: ? <|@ <|@
      nr  148  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597744362548122956
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction MOV [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  106  <|@ instruction r9|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr  108  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 20] y: -1 size: DWORD <|@ <|@
      nr  110  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 24] y: -1 size: DWORD <|@ <|@
      nr  112  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 28] y: -1 size: DWORD <|@ <|@
      nr  114  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 32] y: -1 size: DWORD <|@ <|@
      nr  116  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 36] y: -1 size: DWORD <|@ <|@
      nr  118  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 40] y: -1 size: DWORD <|@ <|@
      nr  120  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 44] y: -1 size: DWORD <|@ <|@
      nr  122  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 48] y: -1 size: DWORD <|@ <|@
      nr  124  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 52] y: -1 size: DWORD <|@ <|@
      nr  126  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 56] y: -1 size: DWORD <|@ <|@
      nr  128  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 60] y: -1 size: DWORD <|@ <|@
      nr  130  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 64] y: -1 size: DWORD <|@ <|@
      nr  132  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 68] y: -1 size: DWORD <|@ <|@
      nr  134  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 72] y: -1 size: DWORD <|@ <|@
      nr  136  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 76] y: -1 size: DWORD <|@ <|@
      nr  138  <|@ instruction r11|DWORD = LEA [r11|DWORD + 16] size: DWORD <|@ <|@
      nr  140  <|@ instruction JUMP ~[] destination: B13 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B13" "B15" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608039995292795068
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  100  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r11|DWORD) trueDestinationProbability: 0.19996410454965907 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4554226642368960512
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  204  <|@ instruction MOV [rsi|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr  206  <|@ instruction JUMP ~[] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   20  <|@ instruction MOV [r15|QWORD + 1156] y: -65043 size: DWORD <|@ <|@
      nr   22  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   24  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1757) [bci: 10]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction MOV [r15|QWORD + 1156] y: -36891 size: DWORD <|@ <|@
      nr  236  <|@ instruction MOV [r15|QWORD + 1168] y: 17944 size: QWORD <|@ <|@
      nr  238  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1760) [bci: 44]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction DEOPT info [bci:44] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction MOV [r15|QWORD + 1156] y: -66323 size: DWORD <|@ <|@
      nr  228  <|@ instruction MOV [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  230  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction DEOPT info [bci:68] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_0      
     2: putfield      #86         // hitEnd:boolean
     5: aload_0       
     6: iconst_0      
     7: putfield      #87         // requireEnd:boolean
    10: iload_1       
    11: ifge          18
    14: iconst_0      
    15: goto          19
    18: iload_1       
    19: istore_1      
    20: aload_0       
    21: iload_1       
    22: putfield      #2          // first:int
    25: aload_0       
    26: aload_0       
    27: getfield      #4          // oldLast:int
    30: ifge          37
    33: iload_1       
    34: goto          41
    37: aload_0       
    38: getfield      #4          // oldLast:int
    41: putfield      #4          // oldLast:int
    44: iconst_0      
    45: istore_2      
    46: iload_2       
    47: aload_0       
    48: getfield      #12         // groups:int[]
    51: arraylength   
    52: if_icmpge     68
    55: aload_0       
    56: getfield      #12         // groups:int[]
    59: iload_2       
    60: iconst_m1     
    61: iastore       
    62: iinc          
    65: goto          46
    68: iconst_0      
    69: istore_2      
    70: iload_2       
    71: aload_0       
    72: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    75: arraylength   
    76: if_icmpge     103
    79: aload_0       
    80: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    83: iload_2       
    84: aaload        
    85: ifnull        97
    88: aload_0       
    89: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    92: iload_2       
    93: aaload        
    94: invokevirtual #32         // java.util.regex.IntHashSet.clear:()void
    97: iinc          
   100: goto          70
   103: aload_0       
   104: iconst_0      
   105: putfield      #1          // acceptMode:int
   108: aload_0       
   109: getfield      #8          // parentPattern:java.util.regex.Pattern
   112: getfield      #88         // java.util.regex.Pattern.root:java.util.regex.Pattern$Node
   115: aload_0       
   116: iload_1       
   117: aload_0       
   118: getfield      #9          // text:java.lang.CharSequence
   121: invokevirtual #89         // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
   124: istore_2      
   125: iload_2       
   126: ifne          134
   129: aload_0       
   130: iconst_m1     
   131: putfield      #2          // first:int
   134: aload_0       
   135: aload_0       
   136: getfield      #3          // last:int
   139: putfield      #4          // oldLast:int
   142: aload_0       
   143: dup           
   144: getfield      #31         // modCount:int
   147: iconst_1      
   148: iadd          
   149: putfield      #31         // modCount:int
   152: iload_2       
   153: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After StackMoveOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@bf3c5e0 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction rdx|DWORD[_] = MOV [rsi|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   10  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1755) [bci: 0]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction rcx|DWORD = MOV [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction MOVB [rsi|QWORD[.] + 48] y: 0 size: BYTE <|@ <|@
      nr   14  <|@ instruction MOVB [rsi|QWORD[.] + 49] y: 0 size: BYTE <|@ <|@
      nr   16  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B18" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   28  <|@ instruction MOV (x: [rsi|QWORD[.] + 28], y: r10|DWORD) size: DWORD <|@ <|@
      nr   30  <|@ instruction r8|DWORD = MOV [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   32  <|@ instruction TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   34  <|@ instruction r8|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: r10|DWORD) condition: < <|@ <|@
      nr   36  <|@ instruction MOV (x: [rsi|QWORD[.] + 36], y: r8|DWORD) size: DWORD <|@ <|@
      nr   38  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.04762108250417496 condition: = trueDestination: B2 -> B18 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" "B6" 
    xhandlers
    flags 
    probability 4606753486221175844
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction r8|DWORD = DEC rcx|DWORD size: DWORD <|@ <|@
      nr   48  <|@ instruction r8|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr   50  <|@ instruction r11|QWORD = MOV rcx|DWORD size: DWORD <|@ <|@
      nr   52  <|@ instruction CMPBRANCH (x: r11|QWORD, y: r8|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B8 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" "B24" 
    xhandlers
    flags 
    probability 4602249886593805348
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction CMPCONSTBRANCH rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B8 falseDestination: B6 -> B24 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606753486221175844
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction MOV [rdx|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr   70  <|@ instruction CMP rcx|DWORD y: 3 size: DWORD <|@ <|@
      nr   72  <|@ instruction r8|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rcx|DWORD) condition: |<| <|@ <|@
      nr   74  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@16d1397a encoding: base: 0 shift: 3 <|@ <|@
      nr   76  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   78  <|@ instruction JUMP ~[] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699167914968222
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction MOV [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   88  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr   90  <|@ instruction JUMP ~[] destination: B10 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" 
    successors "B10" "B11" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606840135379518263
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   82  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B15" "B2" 
    successors "B19" "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction rdx|DWORD[_] = MOV [rsi|QWORD[.] + 68] size: DWORD <|@ <|@
      nr  166  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction rdx|DWORD = MOV [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:68] <|@ <|@
      nr  168  <|@ instruction rcx|DWORD[_] = MOV [rsi|QWORD[.] + 52] size: DWORD <|@ <|@
      nr  170  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction rcx|DWORD[_] = MOV [rcx|DWORD[_] * 8 + 52] size: DWORD state [bci:68] <|@ <|@
      nr  172  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction NULLCHECK [rcx|DWORD[_] * 8] state [bci:68] <|@ <|@
      nr  174  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  178  <|@ instruction MOV [rsi|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr  180  <|@ instruction rdx|DWORD[_] = MOV [rsi|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  182  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@16d1397a encoding: base: 0 shift: 3 <|@ <|@
      nr  184  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@16d1397a encoding: base: 0 shift: 3 <|@ <|@
      nr  186  <|@ instruction r11|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  188  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  190  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  192  <|@ instruction rcx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  194  <|@ instruction stack:32|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  196  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: stack:32|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:121] <|@ <|@
      nr  198  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 3.0308973238957204E-4 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4607179688810405709
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  212  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B20" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  218  <|@ instruction MOV (x: [rsi|QWORD[.] + 36], y: r10|DWORD) size: DWORD <|@ <|@
      nr  220  <|@ instruction INC [rsi|QWORD[.] + 44] size: DWORD <|@ <|@
      nr  222  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4606753486221175844
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction r8|DWORD = LEA [rcx|DWORD - 16] size: DWORD <|@ <|@
      nr   96  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699167914968223
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction MOV [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  154  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  156  <|@ instruction JUMP ~[] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B12" "B16" 
    successors "B16" "B18" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606840135379518264
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 16 numbPhis: 1 label: ? <|@ <|@
      nr  148  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597744362548122956
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction MOV [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  106  <|@ instruction r9|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr  108  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 20] y: -1 size: DWORD <|@ <|@
      nr  110  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 24] y: -1 size: DWORD <|@ <|@
      nr  112  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 28] y: -1 size: DWORD <|@ <|@
      nr  114  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 32] y: -1 size: DWORD <|@ <|@
      nr  116  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 36] y: -1 size: DWORD <|@ <|@
      nr  118  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 40] y: -1 size: DWORD <|@ <|@
      nr  120  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 44] y: -1 size: DWORD <|@ <|@
      nr  122  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 48] y: -1 size: DWORD <|@ <|@
      nr  124  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 52] y: -1 size: DWORD <|@ <|@
      nr  126  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 56] y: -1 size: DWORD <|@ <|@
      nr  128  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 60] y: -1 size: DWORD <|@ <|@
      nr  130  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 64] y: -1 size: DWORD <|@ <|@
      nr  132  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 68] y: -1 size: DWORD <|@ <|@
      nr  134  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 72] y: -1 size: DWORD <|@ <|@
      nr  136  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 76] y: -1 size: DWORD <|@ <|@
      nr  138  <|@ instruction r11|DWORD = LEA [r11|DWORD + 16] size: DWORD <|@ <|@
      nr  140  <|@ instruction JUMP ~[] destination: B13 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B13" "B15" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608039995292795068
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  100  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r11|DWORD) trueDestinationProbability: 0.19996410454965907 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4554226642368960512
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  204  <|@ instruction MOV [rsi|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr  206  <|@ instruction JUMP ~[] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   20  <|@ instruction MOV [r15|QWORD + 1156] y: -65043 size: DWORD <|@ <|@
      nr   22  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   24  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1757) [bci: 10]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction MOV [r15|QWORD + 1156] y: -36891 size: DWORD <|@ <|@
      nr  236  <|@ instruction MOV [r15|QWORD + 1168] y: 17944 size: QWORD <|@ <|@
      nr  238  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1760) [bci: 44]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction DEOPT info [bci:44] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction MOV [r15|QWORD + 1156] y: -66323 size: DWORD <|@ <|@
      nr  228  <|@ instruction MOV [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  230  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction DEOPT info [bci:68] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_0      
     2: putfield      #86         // hitEnd:boolean
     5: aload_0       
     6: iconst_0      
     7: putfield      #87         // requireEnd:boolean
    10: iload_1       
    11: ifge          18
    14: iconst_0      
    15: goto          19
    18: iload_1       
    19: istore_1      
    20: aload_0       
    21: iload_1       
    22: putfield      #2          // first:int
    25: aload_0       
    26: aload_0       
    27: getfield      #4          // oldLast:int
    30: ifge          37
    33: iload_1       
    34: goto          41
    37: aload_0       
    38: getfield      #4          // oldLast:int
    41: putfield      #4          // oldLast:int
    44: iconst_0      
    45: istore_2      
    46: iload_2       
    47: aload_0       
    48: getfield      #12         // groups:int[]
    51: arraylength   
    52: if_icmpge     68
    55: aload_0       
    56: getfield      #12         // groups:int[]
    59: iload_2       
    60: iconst_m1     
    61: iastore       
    62: iinc          
    65: goto          46
    68: iconst_0      
    69: istore_2      
    70: iload_2       
    71: aload_0       
    72: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    75: arraylength   
    76: if_icmpge     103
    79: aload_0       
    80: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    83: iload_2       
    84: aaload        
    85: ifnull        97
    88: aload_0       
    89: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    92: iload_2       
    93: aaload        
    94: invokevirtual #32         // java.util.regex.IntHashSet.clear:()void
    97: iinc          
   100: goto          70
   103: aload_0       
   104: iconst_0      
   105: putfield      #1          // acceptMode:int
   108: aload_0       
   109: getfield      #8          // parentPattern:java.util.regex.Pattern
   112: getfield      #88         // java.util.regex.Pattern.root:java.util.regex.Pattern$Node
   115: aload_0       
   116: iload_1       
   117: aload_0       
   118: getfield      #9          // text:java.lang.CharSequence
   121: invokevirtual #89         // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
   124: istore_2      
   125: iload_2       
   126: ifne          134
   129: aload_0       
   130: iconst_m1     
   131: putfield      #2          // first:int
   134: aload_0       
   135: aload_0       
   136: getfield      #3          // last:int
   139: putfield      #4          // oldLast:int
   142: aload_0       
   143: dup           
   144: getfield      #31         // modCount:int
   147: iconst_1      
   148: iadd          
   149: putfield      #31         // modCount:int
   152: iload_2       
   153: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@bf3c5e0 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction rdx|DWORD[_] = MOV [rsi|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   10  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1755) [bci: 0]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction rcx|DWORD = MOV [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction MOVB [rsi|QWORD[.] + 48] y: 0 size: BYTE <|@ <|@
      nr   14  <|@ instruction MOVB [rsi|QWORD[.] + 49] y: 0 size: BYTE <|@ <|@
      nr   16  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B18" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   28  <|@ instruction MOV (x: [rsi|QWORD[.] + 28], y: r10|DWORD) size: DWORD <|@ <|@
      nr   30  <|@ instruction r8|DWORD = MOV [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   32  <|@ instruction TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   34  <|@ instruction r8|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: r10|DWORD) condition: < <|@ <|@
      nr   36  <|@ instruction MOV (x: [rsi|QWORD[.] + 36], y: r8|DWORD) size: DWORD <|@ <|@
      nr   38  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.04762108250417496 condition: = trueDestination: B2 -> B18 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" "B6" 
    xhandlers
    flags 
    probability 4606753486221175844
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction r8|DWORD = DEC rcx|DWORD size: DWORD <|@ <|@
      nr   48  <|@ instruction r8|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr   50  <|@ instruction r11|QWORD = MOV rcx|DWORD size: DWORD <|@ <|@
      nr   52  <|@ instruction CMPBRANCH (x: r11|QWORD, y: r8|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B8 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" "B24" 
    xhandlers
    flags 
    probability 4602249886593805348
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction CMPCONSTBRANCH rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B8 falseDestination: B6 -> B24 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606753486221175844
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction MOV [rdx|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr   70  <|@ instruction CMP rcx|DWORD y: 3 size: DWORD <|@ <|@
      nr   72  <|@ instruction r8|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rcx|DWORD) condition: |<| <|@ <|@
      nr   74  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@16d1397a encoding: base: 0 shift: 3 <|@ <|@
      nr   76  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   78  <|@ instruction JUMP ~[] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699167914968222
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction MOV [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   88  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr   90  <|@ instruction JUMP ~[] destination: B10 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" 
    successors "B10" "B11" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606840135379518263
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   82  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B15" "B2" 
    successors "B19" "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction rdx|DWORD[_] = MOV [rsi|QWORD[.] + 68] size: DWORD <|@ <|@
      nr  166  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction rdx|DWORD = MOV [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:68] <|@ <|@
      nr  168  <|@ instruction rcx|DWORD[_] = MOV [rsi|QWORD[.] + 52] size: DWORD <|@ <|@
      nr  170  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction rcx|DWORD[_] = MOV [rcx|DWORD[_] * 8 + 52] size: DWORD state [bci:68] <|@ <|@
      nr  172  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction NULLCHECK [rcx|DWORD[_] * 8] state [bci:68] <|@ <|@
      nr  174  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  178  <|@ instruction MOV [rsi|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr  180  <|@ instruction rdx|DWORD[_] = MOV [rsi|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  182  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@16d1397a encoding: base: 0 shift: 3 <|@ <|@
      nr  184  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@16d1397a encoding: base: 0 shift: 3 <|@ <|@
      nr  186  <|@ instruction r11|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  188  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  190  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  192  <|@ instruction rcx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  194  <|@ instruction stack:32|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  196  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: stack:32|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:121] <|@ <|@
      nr  198  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 3.0308973238957204E-4 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4607179688810405709
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  212  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B20" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  218  <|@ instruction MOV (x: [rsi|QWORD[.] + 36], y: r10|DWORD) size: DWORD <|@ <|@
      nr  220  <|@ instruction INC [rsi|QWORD[.] + 44] size: DWORD <|@ <|@
      nr  222  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4606753486221175844
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction r8|DWORD = LEA [rcx|DWORD - 16] size: DWORD <|@ <|@
      nr   96  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699167914968223
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction MOV [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  154  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  156  <|@ instruction JUMP ~[] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B12" "B16" 
    successors "B16" "B18" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606840135379518264
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 16 numbPhis: 1 label: ? <|@ <|@
      nr  148  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597744362548122956
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction MOV [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  106  <|@ instruction r9|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr  108  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 20] y: -1 size: DWORD <|@ <|@
      nr  110  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 24] y: -1 size: DWORD <|@ <|@
      nr  112  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 28] y: -1 size: DWORD <|@ <|@
      nr  114  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 32] y: -1 size: DWORD <|@ <|@
      nr  116  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 36] y: -1 size: DWORD <|@ <|@
      nr  118  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 40] y: -1 size: DWORD <|@ <|@
      nr  120  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 44] y: -1 size: DWORD <|@ <|@
      nr  122  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 48] y: -1 size: DWORD <|@ <|@
      nr  124  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 52] y: -1 size: DWORD <|@ <|@
      nr  126  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 56] y: -1 size: DWORD <|@ <|@
      nr  128  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 60] y: -1 size: DWORD <|@ <|@
      nr  130  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 64] y: -1 size: DWORD <|@ <|@
      nr  132  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 68] y: -1 size: DWORD <|@ <|@
      nr  134  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 72] y: -1 size: DWORD <|@ <|@
      nr  136  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 76] y: -1 size: DWORD <|@ <|@
      nr  138  <|@ instruction r11|DWORD = LEA [r11|DWORD + 16] size: DWORD <|@ <|@
      nr  140  <|@ instruction JUMP ~[] destination: B13 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B13" "B15" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608039995292795068
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  100  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r11|DWORD) trueDestinationProbability: 0.19996410454965907 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4554226642368960512
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  204  <|@ instruction MOV [rsi|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr  206  <|@ instruction JUMP ~[] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   20  <|@ instruction MOV [r15|QWORD + 1156] y: -65043 size: DWORD <|@ <|@
      nr   22  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   24  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1757) [bci: 10]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction MOV [r15|QWORD + 1156] y: -36891 size: DWORD <|@ <|@
      nr  236  <|@ instruction MOV [r15|QWORD + 1168] y: 17944 size: QWORD <|@ <|@
      nr  238  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1760) [bci: 44]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction DEOPT info [bci:44] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction MOV [r15|QWORD + 1156] y: -66323 size: DWORD <|@ <|@
      nr  228  <|@ instruction MOV [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  230  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction DEOPT info [bci:68] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_0      
     2: putfield      #86         // hitEnd:boolean
     5: aload_0       
     6: iconst_0      
     7: putfield      #87         // requireEnd:boolean
    10: iload_1       
    11: ifge          18
    14: iconst_0      
    15: goto          19
    18: iload_1       
    19: istore_1      
    20: aload_0       
    21: iload_1       
    22: putfield      #2          // first:int
    25: aload_0       
    26: aload_0       
    27: getfield      #4          // oldLast:int
    30: ifge          37
    33: iload_1       
    34: goto          41
    37: aload_0       
    38: getfield      #4          // oldLast:int
    41: putfield      #4          // oldLast:int
    44: iconst_0      
    45: istore_2      
    46: iload_2       
    47: aload_0       
    48: getfield      #12         // groups:int[]
    51: arraylength   
    52: if_icmpge     68
    55: aload_0       
    56: getfield      #12         // groups:int[]
    59: iload_2       
    60: iconst_m1     
    61: iastore       
    62: iinc          
    65: goto          46
    68: iconst_0      
    69: istore_2      
    70: iload_2       
    71: aload_0       
    72: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    75: arraylength   
    76: if_icmpge     103
    79: aload_0       
    80: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    83: iload_2       
    84: aaload        
    85: ifnull        97
    88: aload_0       
    89: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    92: iload_2       
    93: aaload        
    94: invokevirtual #32         // java.util.regex.IntHashSet.clear:()void
    97: iinc          
   100: goto          70
   103: aload_0       
   104: iconst_0      
   105: putfield      #1          // acceptMode:int
   108: aload_0       
   109: getfield      #8          // parentPattern:java.util.regex.Pattern
   112: getfield      #88         // java.util.regex.Pattern.root:java.util.regex.Pattern$Node
   115: aload_0       
   116: iload_1       
   117: aload_0       
   118: getfield      #9          // text:java.lang.CharSequence
   121: invokevirtual #89         // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
   124: istore_2      
   125: iload_2       
   126: ifne          134
   129: aload_0       
   130: iconst_m1     
   131: putfield      #2          // first:int
   134: aload_0       
   135: aload_0       
   136: getfield      #3          // last:int
   139: putfield      #4          // oldLast:int
   142: aload_0       
   143: dup           
   144: getfield      #31         // modCount:int
   147: iconst_1      
   148: iadd          
   149: putfield      #31         // modCount:int
   152: iload_2       
   153: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LocationMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@bf3c5e0 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction rdx|DWORD[_] = MOV [rsi|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   10  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1755) [bci: 0]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction rcx|DWORD = MOV [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction MOVB [rsi|QWORD[.] + 48] y: 0 size: BYTE <|@ <|@
      nr   14  <|@ instruction MOVB [rsi|QWORD[.] + 49] y: 0 size: BYTE <|@ <|@
      nr   16  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B18" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   28  <|@ instruction MOV (x: [rsi|QWORD[.] + 28], y: r10|DWORD) size: DWORD <|@ <|@
      nr   30  <|@ instruction r8|DWORD = MOV [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   32  <|@ instruction TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   34  <|@ instruction r8|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: r10|DWORD) condition: < <|@ <|@
      nr   36  <|@ instruction MOV (x: [rsi|QWORD[.] + 36], y: r8|DWORD) size: DWORD <|@ <|@
      nr   38  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.04762108250417496 condition: = trueDestination: B2 -> B18 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" "B6" 
    xhandlers
    flags 
    probability 4606753486221175844
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction r8|DWORD = DEC rcx|DWORD size: DWORD <|@ <|@
      nr   48  <|@ instruction r8|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr   50  <|@ instruction r11|QWORD = MOV rcx|DWORD size: DWORD <|@ <|@
      nr   52  <|@ instruction CMPBRANCH (x: r11|QWORD, y: r8|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B8 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" "B24" 
    xhandlers
    flags 
    probability 4602249886593805348
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction CMPCONSTBRANCH rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B8 falseDestination: B6 -> B24 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606753486221175844
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction MOV [rdx|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr   70  <|@ instruction CMP rcx|DWORD y: 3 size: DWORD <|@ <|@
      nr   72  <|@ instruction r8|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rcx|DWORD) condition: |<| <|@ <|@
      nr   74  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@16d1397a encoding: base: 0 shift: 3 <|@ <|@
      nr   76  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   78  <|@ instruction JUMP ~[] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699167914968222
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction MOV [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   88  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr   90  <|@ instruction JUMP ~[] destination: B10 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" 
    successors "B10" "B11" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606840135379518263
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   82  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B15" "B2" 
    successors "B19" "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction rdx|DWORD[_] = MOV [rsi|QWORD[.] + 68] size: DWORD <|@ <|@
      nr  166  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction rdx|DWORD = MOV [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:68] <|@ <|@
      nr  168  <|@ instruction rcx|DWORD[_] = MOV [rsi|QWORD[.] + 52] size: DWORD <|@ <|@
      nr  170  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction rcx|DWORD[_] = MOV [rcx|DWORD[_] * 8 + 52] size: DWORD state [bci:68] <|@ <|@
      nr  172  <|@ st <@st|@reference-map: [rcx:0, rsi:0]
live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction NULLCHECK [rcx|DWORD[_] * 8] state [bci:68] <|@ <|@
      nr  174  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  178  <|@ instruction MOV [rsi|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr  180  <|@ instruction rdx|DWORD[_] = MOV [rsi|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  182  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@16d1397a encoding: base: 0 shift: 3 <|@ <|@
      nr  184  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@16d1397a encoding: base: 0 shift: 3 <|@ <|@
      nr  186  <|@ instruction r11|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  188  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  190  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  192  <|@ instruction rcx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  194  <|@ instruction stack:32|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  196  <|@ st <@st|@reference-map: [stack:0]
live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: stack:32|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:121] <|@ <|@
      nr  198  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 3.0308973238957204E-4 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4607179688810405709
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  212  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B20" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  218  <|@ instruction MOV (x: [rsi|QWORD[.] + 36], y: r10|DWORD) size: DWORD <|@ <|@
      nr  220  <|@ instruction INC [rsi|QWORD[.] + 44] size: DWORD <|@ <|@
      nr  222  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4606753486221175844
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction r8|DWORD = LEA [rcx|DWORD - 16] size: DWORD <|@ <|@
      nr   96  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699167914968223
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction MOV [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  154  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  156  <|@ instruction JUMP ~[] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B12" "B16" 
    successors "B16" "B18" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606840135379518264
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 16 numbPhis: 1 label: ? <|@ <|@
      nr  148  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597744362548122956
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction MOV [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  106  <|@ instruction r9|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr  108  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 20] y: -1 size: DWORD <|@ <|@
      nr  110  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 24] y: -1 size: DWORD <|@ <|@
      nr  112  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 28] y: -1 size: DWORD <|@ <|@
      nr  114  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 32] y: -1 size: DWORD <|@ <|@
      nr  116  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 36] y: -1 size: DWORD <|@ <|@
      nr  118  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 40] y: -1 size: DWORD <|@ <|@
      nr  120  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 44] y: -1 size: DWORD <|@ <|@
      nr  122  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 48] y: -1 size: DWORD <|@ <|@
      nr  124  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 52] y: -1 size: DWORD <|@ <|@
      nr  126  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 56] y: -1 size: DWORD <|@ <|@
      nr  128  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 60] y: -1 size: DWORD <|@ <|@
      nr  130  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 64] y: -1 size: DWORD <|@ <|@
      nr  132  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 68] y: -1 size: DWORD <|@ <|@
      nr  134  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 72] y: -1 size: DWORD <|@ <|@
      nr  136  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 76] y: -1 size: DWORD <|@ <|@
      nr  138  <|@ instruction r11|DWORD = LEA [r11|DWORD + 16] size: DWORD <|@ <|@
      nr  140  <|@ instruction JUMP ~[] destination: B13 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B13" "B15" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608039995292795068
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  100  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r11|DWORD) trueDestinationProbability: 0.19996410454965907 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4554226642368960512
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  204  <|@ instruction MOV [rsi|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr  206  <|@ instruction JUMP ~[] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   20  <|@ instruction MOV [r15|QWORD + 1156] y: -65043 size: DWORD <|@ <|@
      nr   22  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   24  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1757) [bci: 10]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction MOV [r15|QWORD + 1156] y: -36891 size: DWORD <|@ <|@
      nr  236  <|@ instruction MOV [r15|QWORD + 1168] y: 17944 size: QWORD <|@ <|@
      nr  238  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1760) [bci: 44]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction DEOPT info [bci:44] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction MOV [r15|QWORD + 1156] y: -66323 size: DWORD <|@ <|@
      nr  228  <|@ instruction MOV [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  230  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction DEOPT info [bci:68] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_0      
     2: putfield      #86         // hitEnd:boolean
     5: aload_0       
     6: iconst_0      
     7: putfield      #87         // requireEnd:boolean
    10: iload_1       
    11: ifge          18
    14: iconst_0      
    15: goto          19
    18: iload_1       
    19: istore_1      
    20: aload_0       
    21: iload_1       
    22: putfield      #2          // first:int
    25: aload_0       
    26: aload_0       
    27: getfield      #4          // oldLast:int
    30: ifge          37
    33: iload_1       
    34: goto          41
    37: aload_0       
    38: getfield      #4          // oldLast:int
    41: putfield      #4          // oldLast:int
    44: iconst_0      
    45: istore_2      
    46: iload_2       
    47: aload_0       
    48: getfield      #12         // groups:int[]
    51: arraylength   
    52: if_icmpge     68
    55: aload_0       
    56: getfield      #12         // groups:int[]
    59: iload_2       
    60: iconst_m1     
    61: iastore       
    62: iinc          
    65: goto          46
    68: iconst_0      
    69: istore_2      
    70: iload_2       
    71: aload_0       
    72: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    75: arraylength   
    76: if_icmpge     103
    79: aload_0       
    80: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    83: iload_2       
    84: aaload        
    85: ifnull        97
    88: aload_0       
    89: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    92: iload_2       
    93: aaload        
    94: invokevirtual #32         // java.util.regex.IntHashSet.clear:()void
    97: iinc          
   100: goto          70
   103: aload_0       
   104: iconst_0      
   105: putfield      #1          // acceptMode:int
   108: aload_0       
   109: getfield      #8          // parentPattern:java.util.regex.Pattern
   112: getfield      #88         // java.util.regex.Pattern.root:java.util.regex.Pattern$Node
   115: aload_0       
   116: iload_1       
   117: aload_0       
   118: getfield      #9          // text:java.lang.CharSequence
   121: invokevirtual #89         // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
   124: istore_2      
   125: iload_2       
   126: ifne          134
   129: aload_0       
   130: iconst_m1     
   131: putfield      #2          // first:int
   134: aload_0       
   135: aload_0       
   136: getfield      #3          // last:int
   139: putfield      #4          // oldLast:int
   142: aload_0       
   143: dup           
   144: getfield      #31         // modCount:int
   147: iconst_1      
   148: iadd          
   149: putfield      #31         // modCount:int
   152: iload_2       
   153: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After FinalCodeAnalysisStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@bf3c5e0 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction rdx|DWORD[_] = MOV [rsi|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   10  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1755) [bci: 0]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction rcx|DWORD = MOV [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction MOVB [rsi|QWORD[.] + 48] y: 0 size: BYTE <|@ <|@
      nr   14  <|@ instruction MOVB [rsi|QWORD[.] + 49] y: 0 size: BYTE <|@ <|@
      nr   16  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B18" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   28  <|@ instruction MOV (x: [rsi|QWORD[.] + 28], y: r10|DWORD) size: DWORD <|@ <|@
      nr   30  <|@ instruction r8|DWORD = MOV [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   32  <|@ instruction TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   34  <|@ instruction r8|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: r10|DWORD) condition: < <|@ <|@
      nr   36  <|@ instruction MOV (x: [rsi|QWORD[.] + 36], y: r8|DWORD) size: DWORD <|@ <|@
      nr   38  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.04762108250417496 condition: = trueDestination: B2 -> B18 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" "B6" 
    xhandlers
    flags 
    probability 4606753486221175844
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction r8|DWORD = DEC rcx|DWORD size: DWORD <|@ <|@
      nr   48  <|@ instruction r8|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr   50  <|@ instruction r11|QWORD = MOV rcx|DWORD size: DWORD <|@ <|@
      nr   52  <|@ instruction CMPBRANCH (x: r11|QWORD, y: r8|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B8 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" "B24" 
    xhandlers
    flags 
    probability 4602249886593805348
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction CMPCONSTBRANCH rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B8 falseDestination: B6 -> B24 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606753486221175844
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction MOV [rdx|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr   70  <|@ instruction CMP rcx|DWORD y: 3 size: DWORD <|@ <|@
      nr   72  <|@ instruction r8|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rcx|DWORD) condition: |<| <|@ <|@
      nr   74  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@16d1397a encoding: base: 0 shift: 3 <|@ <|@
      nr   76  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   78  <|@ instruction JUMP ~[] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699167914968222
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction MOV [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   88  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr   90  <|@ instruction JUMP ~[] destination: B10 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" 
    successors "B10" "B11" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606840135379518263
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   82  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B15" "B2" 
    successors "B19" "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction rdx|DWORD[_] = MOV [rsi|QWORD[.] + 68] size: DWORD <|@ <|@
      nr  166  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction rdx|DWORD = MOV [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:68] <|@ <|@
      nr  168  <|@ instruction rcx|DWORD[_] = MOV [rsi|QWORD[.] + 52] size: DWORD <|@ <|@
      nr  170  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction rcx|DWORD[_] = MOV [rcx|DWORD[_] * 8 + 52] size: DWORD state [bci:68] <|@ <|@
      nr  172  <|@ st <@st|@reference-map: [rcx:0, rsi:0]
live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction NULLCHECK [rcx|DWORD[_] * 8] state [bci:68] <|@ <|@
      nr  174  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  178  <|@ instruction MOV [rsi|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr  180  <|@ instruction rdx|DWORD[_] = MOV [rsi|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  182  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@16d1397a encoding: base: 0 shift: 3 <|@ <|@
      nr  184  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@16d1397a encoding: base: 0 shift: 3 <|@ <|@
      nr  186  <|@ instruction r11|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  188  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  190  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  192  <|@ instruction rcx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  194  <|@ instruction stack:32|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  196  <|@ st <@st|@reference-map: [stack:0]
live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: stack:32|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:121] <|@ <|@
      nr  198  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 3.0308973238957204E-4 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4607179688810405709
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  212  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B20" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  218  <|@ instruction MOV (x: [rsi|QWORD[.] + 36], y: r10|DWORD) size: DWORD <|@ <|@
      nr  220  <|@ instruction INC [rsi|QWORD[.] + 44] size: DWORD <|@ <|@
      nr  222  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4606753486221175844
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction r8|DWORD = LEA [rcx|DWORD - 16] size: DWORD <|@ <|@
      nr   96  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699167914968223
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction MOV [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  154  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  156  <|@ instruction JUMP ~[] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B12" "B16" 
    successors "B16" "B18" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606840135379518264
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 16 numbPhis: 1 label: ? <|@ <|@
      nr  148  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597744362548122956
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction MOV [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  106  <|@ instruction r9|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr  108  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 20] y: -1 size: DWORD <|@ <|@
      nr  110  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 24] y: -1 size: DWORD <|@ <|@
      nr  112  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 28] y: -1 size: DWORD <|@ <|@
      nr  114  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 32] y: -1 size: DWORD <|@ <|@
      nr  116  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 36] y: -1 size: DWORD <|@ <|@
      nr  118  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 40] y: -1 size: DWORD <|@ <|@
      nr  120  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 44] y: -1 size: DWORD <|@ <|@
      nr  122  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 48] y: -1 size: DWORD <|@ <|@
      nr  124  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 52] y: -1 size: DWORD <|@ <|@
      nr  126  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 56] y: -1 size: DWORD <|@ <|@
      nr  128  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 60] y: -1 size: DWORD <|@ <|@
      nr  130  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 64] y: -1 size: DWORD <|@ <|@
      nr  132  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 68] y: -1 size: DWORD <|@ <|@
      nr  134  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 72] y: -1 size: DWORD <|@ <|@
      nr  136  <|@ instruction MOV [rdx|QWORD[.] + r9|QWORD * 4 + 76] y: -1 size: DWORD <|@ <|@
      nr  138  <|@ instruction r11|DWORD = LEA [r11|DWORD + 16] size: DWORD <|@ <|@
      nr  140  <|@ instruction JUMP ~[] destination: B13 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B13" "B15" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608039995292795068
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  100  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r11|DWORD) trueDestinationProbability: 0.19996410454965907 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4554226642368960512
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  204  <|@ instruction MOV [rsi|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr  206  <|@ instruction JUMP ~[] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   20  <|@ instruction MOV [r15|QWORD + 1156] y: -65043 size: DWORD <|@ <|@
      nr   22  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   24  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1757) [bci: 10]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction MOV [r15|QWORD + 1156] y: -36891 size: DWORD <|@ <|@
      nr  236  <|@ instruction MOV [r15|QWORD + 1168] y: 17944 size: QWORD <|@ <|@
      nr  238  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1760) [bci: 44]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction DEOPT info [bci:44] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction MOV [r15|QWORD + 1156] y: -66323 size: DWORD <|@ <|@
      nr  228  <|@ instruction MOV [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  230  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction DEOPT info [bci:68] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_0      
     2: putfield      #86         // hitEnd:boolean
     5: aload_0       
     6: iconst_0      
     7: putfield      #87         // requireEnd:boolean
    10: iload_1       
    11: ifge          18
    14: iconst_0      
    15: goto          19
    18: iload_1       
    19: istore_1      
    20: aload_0       
    21: iload_1       
    22: putfield      #2          // first:int
    25: aload_0       
    26: aload_0       
    27: getfield      #4          // oldLast:int
    30: ifge          37
    33: iload_1       
    34: goto          41
    37: aload_0       
    38: getfield      #4          // oldLast:int
    41: putfield      #4          // oldLast:int
    44: iconst_0      
    45: istore_2      
    46: iload_2       
    47: aload_0       
    48: getfield      #12         // groups:int[]
    51: arraylength   
    52: if_icmpge     68
    55: aload_0       
    56: getfield      #12         // groups:int[]
    59: iload_2       
    60: iconst_m1     
    61: iastore       
    62: iinc          
    65: goto          46
    68: iconst_0      
    69: istore_2      
    70: iload_2       
    71: aload_0       
    72: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    75: arraylength   
    76: if_icmpge     103
    79: aload_0       
    80: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    83: iload_2       
    84: aaload        
    85: ifnull        97
    88: aload_0       
    89: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    92: iload_2       
    93: aaload        
    94: invokevirtual #32         // java.util.regex.IntHashSet.clear:()void
    97: iinc          
   100: goto          70
   103: aload_0       
   104: iconst_0      
   105: putfield      #1          // acceptMode:int
   108: aload_0       
   109: getfield      #8          // parentPattern:java.util.regex.Pattern
   112: getfield      #88         // java.util.regex.Pattern.root:java.util.regex.Pattern$Node
   115: aload_0       
   116: iload_1       
   117: aload_0       
   118: getfield      #9          // text:java.lang.CharSequence
   121: invokevirtual #89         // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
   124: istore_2      
   125: iload_2       
   126: ifne          134
   129: aload_0       
   130: iconst_m1     
   131: putfield      #2          // first:int
   134: aload_0       
   135: aload_0       
   136: getfield      #3          // last:int
   139: putfield      #4          // oldLast:int
   142: aload_0       
   143: dup           
   144: getfield      #31         // modCount:int
   147: iconst_1      
   148: iadd          
   149: putfield      #31         // modCount:int
   152: iload_2       
   153: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849bc000000fbb97f00004d03d44d33e4493bc20f85e3ffffff66669089842400c0feff4883ec189041817f20000000000f858402000048896c2410448bd28b56388b0cd50c000000c6463000c64631004585d20f8cf80100004489561c448b46244585c0450f4cc24489462485c90f845f000000448bc141ffc84d63c0448bd94d3bd80f870900000083f9020f83e2010000c704d510000000ffffffff83f90341b802000000440f42c148c1e20341bb01000000e90f00000066669042c7449a10ffffffff41ffc3453bc30f8e91000000ebe98b56448b14d50c0000008b4e348b0ccd340000008504cd0000000085d20f85a1010000c74618000000008b563c48c1e103448bc249c1e0034c8bde488bf1498bd3418bca4c891c24669048b8ffffffffffffffffe8000000000f1f84000000000085c00f8405010000488b3424448b562044895624ff462c488b6c24104883c418493ba7500400000f8769010000c3448d41f0e9c80000006666660f1f84000000000066666690669042c7449a10ffffffff41ffc30f1f4000413bcb0f8e3effffffebe50f1f44000042c7449a10ffffffff4d63cb42c7448a14ffffffff42c7448a18ffffffff42c7448a1cffffffff42c7448a20ffffffff42c7448a24ffffffff42c7448a28ffffffff42c7448a2cffffffff42c7448a30ffffffff42c7448a34ffffffff42c7448a38ffffffff42c7448a3cffffffff42c7448a40ffffffff42c7448a44ffffffff42c7448a48ffffffff42c7448a4cffffffff458d5b10453bc30f8e50ffffffe95bffffff488b3424c7461cffffffffe9effeffff41c78784040000ed01ffff49c7879004000014000000e8000000000f1f84000000000041c78784040000e56fffff49c7879004000018460000e8000000000f1f84000000000041c78784040000edfcfeff49c7879004000094020000e8000000000f1f84000000000048896c2410e800000000e96dfdfffff4488d0d83feffff49898f68040000e91ffdfffff441c78784040000f581ffff49c7879004000000000000e8000000000f1f84000000000041c78784040000f562ffff49c7879004000000000000e8000000000f1f84000000000041c78784040000f556ffff49c7879004000000000000e8000000000f1f840000000000e800000000f4e800000000f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7fba7b6335c8, value=140438496891008]:0x7fba62b85080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 63 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@bf3c5e0 slotKind: QWORD  <||@
  Comment 63 6 r10|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 66 8 rdx|DWORD[_] = MOV [rsi|QWORD[.] + 56] size: DWORD  <||@
  Comment 69 10 rcx|DWORD = MOV [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 69 [rdx:0, rsi:0]at java.util.regex.Matcher.search(Matcher.java:1755) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2 
     locals:  |rsi|QWORD[.]  |r10|DWORD  |-   <||@
  Comment 69 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 76 12 MOVB [rsi|QWORD[.] + 48] y: 0 size: BYTE  <||@
  Comment 80 14 MOVB [rsi|QWORD[.] + 49] y: 0 size: BYTE  <||@
  Comment 84 16 TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD  <||@
  Comment 93 block B2 null  <||@
  Comment 93 26 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 93 28 MOV (x: [rsi|QWORD[.] + 28], y: r10|DWORD) size: DWORD  <||@
  Comment 97 30 r8|DWORD = MOV [rsi|QWORD[.] + 36] size: DWORD  <||@
  Comment 101 32 TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 104 34 r8|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: r10|DWORD) condition: <  <||@
  Comment 108 36 MOV (x: [rsi|QWORD[.] + 36], y: r8|DWORD) size: DWORD  <||@
  Comment 112 38 TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.04762108250417496 condition: = trueDestination: B2 -> B18 falseDestination: B2 -> B4 size: DWORD  <||@
  Comment 120 block B4 null  <||@
  Comment 120 44 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 120 46 r8|DWORD = DEC rcx|DWORD size: DWORD  <||@
  Comment 126 48 r8|QWORD = MOVSXD r8|DWORD size: QWORD  <||@
  Comment 129 50 r11|QWORD = MOV rcx|DWORD size: DWORD  <||@
  Comment 132 52 CMPBRANCH (x: r11|QWORD, y: r8|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B8 falseDestination: B4 -> B6 size: QWORD  <||@
  Comment 141 block B6 null  <||@
  Comment 141 58 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 141 60 CMPCONSTBRANCH rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B8 falseDestination: B6 -> B24 y: 2 size: DWORD inlinedY: null  <||@
  Comment 150 block B8 null  <||@
  Comment 150 66 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 150 68 MOV [rdx|DWORD[_] * 8 + 16] y: -1 size: DWORD  <||@
  Comment 161 70 CMP rcx|DWORD y: 3 size: DWORD  <||@
  Comment 164 72 r8|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rcx|DWORD) condition: |<|  <||@
  Comment 174 74 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@16d1397a encoding: base: 0 shift: 3  <||@
  Comment 178 76 r11|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 184 78 JUMP ~[] destination: B8 -> B9  <||@
  Comment 189 block B10 loop 0 depth 1 header:30|LoopBegin  <||@
  Comment 189 84 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 192 86 MOV [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 201 88 r11|DWORD = INC r11|DWORD size: DWORD  <||@
  Comment 204 90 JUMP ~[] destination: B10 -> B9  <||@
  Comment 204 block B9 loop 0 depth 1 header:30|LoopBegin  <||@
  Comment 204 80 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 204 82 CMPBRANCH (x: r8|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD  <||@
  Comment 215 block B18 null  <||@
  Comment 215 162 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 215 164 rdx|DWORD[_] = MOV [rsi|QWORD[.] + 68] size: DWORD  <||@
  Comment 218 166 rdx|DWORD = MOV [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:68]  <||@
  Comment 218 [rsi:0]at java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68, duringCall: false, rethrow: false]
              |0             |1          |2 
     locals:  |rsi|QWORD[.]  |r10|DWORD  |-   <||@
  Comment 218 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 225 168 rcx|DWORD[_] = MOV [rsi|QWORD[.] + 52] size: DWORD  <||@
  Comment 228 170 rcx|DWORD[_] = MOV [rcx|DWORD[_] * 8 + 52] size: DWORD state [bci:68]  <||@
  Comment 228 [rsi:0]at java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68, duringCall: false, rethrow: false]
              |0             |1          |2 
     locals:  |rsi|QWORD[.]  |r10|DWORD  |-   <||@
  Comment 228 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 235 172 NULLCHECK [rcx|DWORD[_] * 8] state [bci:68]  <||@
  Comment 235 [rcx:0, rsi:0]at java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68, duringCall: false, rethrow: false]
              |0             |1          |2 
     locals:  |rsi|QWORD[.]  |r10|DWORD  |-   <||@
  Comment 235 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 242 174 TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B23 size: DWORD  <||@
  Comment 250 block B19 null  <||@
  Comment 250 176 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 250 178 MOV [rsi|QWORD[.] + 24] y: 0 size: DWORD  <||@
  Comment 257 180 rdx|DWORD[_] = MOV [rsi|QWORD[.] + 60] size: DWORD  <||@
  Comment 260 182 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@16d1397a encoding: base: 0 shift: 3  <||@
  Comment 264 184 r8|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@16d1397a encoding: base: 0 shift: 3  <||@
  Comment 271 186 r11|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 274 188 rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 277 190 rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 280 192 rcx|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 283 194 stack:32|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 287 196 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:121]  <||@
  Comment 289 INVOKEVIRTUAL  <||@
  Comment 299 {HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>}  <||@
  Comment 304 [stack:0]at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:32|QWORD[.]  |-  |-   <||@
  Comment 312 198 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 3.0308973238957204E-4 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD  <||@
  Comment 320 block B21 null  <||@
  Comment 320 208 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 320 210 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 324 212 JUMP ~[] destination: B21 -> B22  <||@
  Comment 324 block B22 null  <||@
  Comment 324 214 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 324 216 r10|DWORD = MOV [rsi|QWORD[.] + 32] size: DWORD  <||@
  Comment 328 218 MOV (x: [rsi|QWORD[.] + 36], y: r10|DWORD) size: DWORD  <||@
  Comment 332 220 INC [rsi|QWORD[.] + 44] size: DWORD  <||@
  Comment 335 222 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9  <||@
  Comment 344 POLL_RETURN_FAR  <||@
  Comment 358 block B11 null  <||@
  Comment 358 92 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 358 94 r8|DWORD = LEA [rcx|DWORD - 16] size: DWORD  <||@
  Comment 362 96 JUMP ~[] destination: B11 -> B12  <||@
  Comment 367 block B16 loop 2 depth 1 header:285|LoopBegin  <||@
  Comment 367 150 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 384 152 MOV [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 393 154 r11|DWORD = INC r11|DWORD size: DWORD  <||@
  Comment 396 156 JUMP ~[] destination: B16 -> B15  <||@
  Comment 396 block B15 loop 2 depth 1 header:285|LoopBegin  <||@
  Comment 396 146 [] = LABEL alignment: 16 numbPhis: 1 label: ?  <||@
  Comment 400 148 CMPBRANCH (x: rcx|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B18 size: DWORD  <||@
  Comment 411 block B13 loop 1 depth 1 header:265|LoopBegin  <||@
  Comment 411 102 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 416 104 MOV [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 425 106 r9|QWORD = MOVSXD r11|DWORD size: QWORD  <||@
  Comment 428 108 MOV [rdx|QWORD[.] + r9|QWORD * 4 + 20] y: -1 size: DWORD  <||@
  Comment 437 110 MOV [rdx|QWORD[.] + r9|QWORD * 4 + 24] y: -1 size: DWORD  <||@
  Comment 446 112 MOV [rdx|QWORD[.] + r9|QWORD * 4 + 28] y: -1 size: DWORD  <||@
  Comment 455 114 MOV [rdx|QWORD[.] + r9|QWORD * 4 + 32] y: -1 size: DWORD  <||@
  Comment 464 116 MOV [rdx|QWORD[.] + r9|QWORD * 4 + 36] y: -1 size: DWORD  <||@
  Comment 473 118 MOV [rdx|QWORD[.] + r9|QWORD * 4 + 40] y: -1 size: DWORD  <||@
  Comment 482 120 MOV [rdx|QWORD[.] + r9|QWORD * 4 + 44] y: -1 size: DWORD  <||@
  Comment 491 122 MOV [rdx|QWORD[.] + r9|QWORD * 4 + 48] y: -1 size: DWORD  <||@
  Comment 500 124 MOV [rdx|QWORD[.] + r9|QWORD * 4 + 52] y: -1 size: DWORD  <||@
  Comment 509 126 MOV [rdx|QWORD[.] + r9|QWORD * 4 + 56] y: -1 size: DWORD  <||@
  Comment 518 128 MOV [rdx|QWORD[.] + r9|QWORD * 4 + 60] y: -1 size: DWORD  <||@
  Comment 527 130 MOV [rdx|QWORD[.] + r9|QWORD * 4 + 64] y: -1 size: DWORD  <||@
  Comment 536 132 MOV [rdx|QWORD[.] + r9|QWORD * 4 + 68] y: -1 size: DWORD  <||@
  Comment 545 134 MOV [rdx|QWORD[.] + r9|QWORD * 4 + 72] y: -1 size: DWORD  <||@
  Comment 554 136 MOV [rdx|QWORD[.] + r9|QWORD * 4 + 76] y: -1 size: DWORD  <||@
  Comment 563 138 r11|DWORD = LEA [r11|DWORD + 16] size: DWORD  <||@
  Comment 567 140 JUMP ~[] destination: B13 -> B12  <||@
  Comment 567 block B12 loop 1 depth 1 header:265|LoopBegin  <||@
  Comment 567 98 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 567 100 CMPBRANCH (x: r8|DWORD, y: r11|DWORD) trueDestinationProbability: 0.19996410454965907 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B15 size: DWORD  <||@
  Comment 581 block B20 null  <||@
  Comment 581 200 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 581 202 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 585 204 MOV [rsi|QWORD[.] + 28] y: -1 size: DWORD  <||@
  Comment 592 206 JUMP ~[] destination: B20 -> B22  <||@
  Comment 597 block B1 null  <||@
  Comment 597 18 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 597 20 MOV [r15|QWORD + 1156] y: -65043 size: DWORD  <||@
  Comment 608 22 MOV [r15|QWORD + 1168] y: 20 size: QWORD  <||@
  Comment 619 24 DEOPT info [bci:10]  <||@
  Comment 619 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7fba7b6335a8, value=140438496915834]:0x7fba62b8b17a}  <||@
  Comment 624 [rsi:0]at java.util.regex.Matcher.search(Matcher.java:1757) [bci: 10, duringCall: false, rethrow: false]
              |0             |1          |2 
     locals:  |rsi|QWORD[.]  |r10|DWORD  |-   <||@
  Comment 632 block B24 null  <||@
  Comment 632 232 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 632 234 MOV [r15|QWORD + 1156] y: -36891 size: DWORD  <||@
  Comment 643 236 MOV [r15|QWORD + 1168] y: 17944 size: QWORD  <||@
  Comment 654 238 DEOPT info [bci:44]  <||@
  Comment 654 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7fba7b6335a8, value=140438496915834]:0x7fba62b8b17a}  <||@
  Comment 659 [rsi:0]at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 44, duringCall: false, rethrow: false]
              |0             |1          |2 
     locals:  |rsi|QWORD[.]  |r10|DWORD  |-   <||@
  Comment 667 block B23 null  <||@
  Comment 667 224 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 667 226 MOV [r15|QWORD + 1156] y: -66323 size: DWORD  <||@
  Comment 678 228 MOV [r15|QWORD + 1168] y: 660 size: QWORD  <||@
  Comment 689 230 DEOPT info [bci:68]  <||@
  Comment 689 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7fba7b6335a8, value=140438496915834]:0x7fba62b8b17a}  <||@
  Comment 694 [rsi:0]at java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68, duringCall: false, rethrow: false]
              |0             |1          |2 
     locals:  |rsi|QWORD[.]  |r10|DWORD  |-   <||@
  Comment 707 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7fba7b633598, value=140438496784928]:0x7fba62b6b220}  <||@
  Comment 732 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7fba7b6335a0, value=140438496919552]:0x7fba62b8c000}  <||@
  Comment 760 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7fba7b6335a8, value=140438496915834]:0x7fba62b8b17a}  <||@
  Comment 765 [rdx:0, rsi:0]at java.util.regex.Matcher.search(Matcher.java:1755) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2 
     locals:  |rsi|QWORD[.]  |r10|DWORD  |-   <||@
  Comment 795 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7fba7b6335a8, value=140438496915834]:0x7fba62b8b17a}  <||@
  Comment 800 [rsi:0]at java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68, duringCall: false, rethrow: false]
              |0             |1          |2 
     locals:  |rsi|QWORD[.]  |r10|DWORD  |-   <||@
  Comment 830 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7fba7b6335a8, value=140438496915834]:0x7fba62b8b17a}  <||@
  Comment 835 [rsi:0]at java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68, duringCall: false, rethrow: false]
              |0             |1          |2 
     locals:  |rsi|QWORD[.]  |r10|DWORD  |-   <||@
  Comment 843 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7fba62cc5f00:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 843 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 849 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7fba7b6335b8, value=140438496915232]:0x7fba62b8af20}  <||@
  Comment 849 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-4825[java.util.regex.Matcher.search(int)]"
  method "HotSpotCompilation-4825[java.util.regex.Matcher.search(int)]"
  date 1714038269236
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 7fba63dac8a0 448b560849bc000000fbb97f00004d03d44d33e4493bc20f85c387ddfe66669089842400c0feff4883ec189041817f20000000000f858402000048896c2410448bd28b56388b0cd50c000000c6463000c64631004585d20f8cf80100004489561c448b46244585c0450f4cc24489462485c90f845f000000448bc141ffc84d63c0448bd94d3bd80f870900000083f9020f83e2010000c704d510000000ffffffff83f90341b802000000440f42c148c1e20341bb01000000e90f00000066669042c7449a10ffffffff41ffc3453bc30f8e91000000ebe98b56448b14d50c0000008b4e348b0ccd340000008504cd0000000085d20f85a1010000c74618000000008b563c48c1e103448bc249c1e0034c8bde488bf1498bd3418bca4c891c24669048b8ffffffffffffffffe8b08cddfe0f1f8400c002000485c00f8405010000488b3424448b562044895624ff462c488b6c24104883c418493ba7500400000f8769010000c3448d41f0e9c80000006666660f1f84000000000066666690669042c7449a10ffffffff41ffc30f1f4000413bcb0f8e3effffffebe50f1f44000042c7449a10ffffffff4d63cb42c7448a14ffffffff42c7448a18ffffffff42c7448a1cffffffff42c7448a20ffffffff42c7448a24ffffffff42c7448a28ffffffff42c7448a2cffffffff42c7448a30ffffffff42c7448a34ffffffff42c7448a38ffffffff42c7448a3cffffffff42c7448a40ffffffff42c7448a44ffffffff42c7448a48ffffffff42c7448a4cffffffff458d5b10453bc30f8e50ffffffe95bffffff488b3424c7461cffffffffe9effeffff41c78784040000ed01ffff49c7879004000014000000e86ae6ddfe0f1f84000000000041c78784040000e56fffff49c7879004000018460000e847e6ddfe0f1f84000000000041c78784040000edfcfeff49c7879004000094020000e824e6ddfe0f1f84000000000048896c2410e8b8e6dbfee96dfdfffff4488d0d83feffff49898f68040000e97ff4ddfef441c78784040000f581ffff49c7879004000000000000e8dde5ddfe0f1f84000000000041c78784040000f562ffff49c7879004000000000000e8bae5ddfe0f1f84000000000041c78784040000f556ffff49c7879004000000000000e897e5ddfe0f1f840000000000e81093f1fef4e82ae3ddfef4f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7fba7b6335c8, value=140438496891008]:0x7fba62b85080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 63 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@bf3c5e0 slotKind: QWORD  <||@
  Comment 63 6 r10|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 66 8 rdx|DWORD[_] = MOV [rsi|QWORD[.] + 56] size: DWORD  <||@
  Comment 69 10 rcx|DWORD = MOV [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 69 [rdx:0, rsi:0]at java.util.regex.Matcher.search(Matcher.java:1755) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2 
     locals:  |rsi|QWORD[.]  |r10|DWORD  |-   <||@
  Comment 69 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 76 12 MOVB [rsi|QWORD[.] + 48] y: 0 size: BYTE  <||@
  Comment 80 14 MOVB [rsi|QWORD[.] + 49] y: 0 size: BYTE  <||@
  Comment 84 16 TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD  <||@
  Comment 93 block B2 null  <||@
  Comment 93 26 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 93 28 MOV (x: [rsi|QWORD[.] + 28], y: r10|DWORD) size: DWORD  <||@
  Comment 97 30 r8|DWORD = MOV [rsi|QWORD[.] + 36] size: DWORD  <||@
  Comment 101 32 TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 104 34 r8|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: r10|DWORD) condition: <  <||@
  Comment 108 36 MOV (x: [rsi|QWORD[.] + 36], y: r8|DWORD) size: DWORD  <||@
  Comment 112 38 TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.04762108250417496 condition: = trueDestination: B2 -> B18 falseDestination: B2 -> B4 size: DWORD  <||@
  Comment 120 block B4 null  <||@
  Comment 120 44 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 120 46 r8|DWORD = DEC rcx|DWORD size: DWORD  <||@
  Comment 126 48 r8|QWORD = MOVSXD r8|DWORD size: QWORD  <||@
  Comment 129 50 r11|QWORD = MOV rcx|DWORD size: DWORD  <||@
  Comment 132 52 CMPBRANCH (x: r11|QWORD, y: r8|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B8 falseDestination: B4 -> B6 size: QWORD  <||@
  Comment 141 block B6 null  <||@
  Comment 141 58 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 141 60 CMPCONSTBRANCH rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B8 falseDestination: B6 -> B24 y: 2 size: DWORD inlinedY: null  <||@
  Comment 150 block B8 null  <||@
  Comment 150 66 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 150 68 MOV [rdx|DWORD[_] * 8 + 16] y: -1 size: DWORD  <||@
  Comment 161 70 CMP rcx|DWORD y: 3 size: DWORD  <||@
  Comment 164 72 r8|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rcx|DWORD) condition: |<|  <||@
  Comment 174 74 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@16d1397a encoding: base: 0 shift: 3  <||@
  Comment 178 76 r11|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 184 78 JUMP ~[] destination: B8 -> B9  <||@
  Comment 189 block B10 loop 0 depth 1 header:30|LoopBegin  <||@
  Comment 189 84 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 192 86 MOV [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 201 88 r11|DWORD = INC r11|DWORD size: DWORD  <||@
  Comment 204 90 JUMP ~[] destination: B10 -> B9  <||@
  Comment 204 block B9 loop 0 depth 1 header:30|LoopBegin  <||@
  Comment 204 80 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 204 82 CMPBRANCH (x: r8|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD  <||@
  Comment 215 block B18 null  <||@
  Comment 215 162 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 215 164 rdx|DWORD[_] = MOV [rsi|QWORD[.] + 68] size: DWORD  <||@
  Comment 218 166 rdx|DWORD = MOV [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:68]  <||@
  Comment 218 [rsi:0]at java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68, duringCall: false, rethrow: false]
              |0             |1          |2 
     locals:  |rsi|QWORD[.]  |r10|DWORD  |-   <||@
  Comment 218 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 225 168 rcx|DWORD[_] = MOV [rsi|QWORD[.] + 52] size: DWORD  <||@
  Comment 228 170 rcx|DWORD[_] = MOV [rcx|DWORD[_] * 8 + 52] size: DWORD state [bci:68]  <||@
  Comment 228 [rsi:0]at java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68, duringCall: false, rethrow: false]
              |0             |1          |2 
     locals:  |rsi|QWORD[.]  |r10|DWORD  |-   <||@
  Comment 228 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 235 172 NULLCHECK [rcx|DWORD[_] * 8] state [bci:68]  <||@
  Comment 235 [rcx:0, rsi:0]at java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68, duringCall: false, rethrow: false]
              |0             |1          |2 
     locals:  |rsi|QWORD[.]  |r10|DWORD  |-   <||@
  Comment 235 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 242 174 TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B23 size: DWORD  <||@
  Comment 250 block B19 null  <||@
  Comment 250 176 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 250 178 MOV [rsi|QWORD[.] + 24] y: 0 size: DWORD  <||@
  Comment 257 180 rdx|DWORD[_] = MOV [rsi|QWORD[.] + 60] size: DWORD  <||@
  Comment 260 182 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@16d1397a encoding: base: 0 shift: 3  <||@
  Comment 264 184 r8|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@16d1397a encoding: base: 0 shift: 3  <||@
  Comment 271 186 r11|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 274 188 rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 277 190 rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 280 192 rcx|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 283 194 stack:32|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 287 196 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:121]  <||@
  Comment 289 INVOKEVIRTUAL  <||@
  Comment 299 {HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>}  <||@
  Comment 304 [stack:0]at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:32|QWORD[.]  |-  |-   <||@
  Comment 312 198 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 3.0308973238957204E-4 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD  <||@
  Comment 320 block B21 null  <||@
  Comment 320 208 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 320 210 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 324 212 JUMP ~[] destination: B21 -> B22  <||@
  Comment 324 block B22 null  <||@
  Comment 324 214 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 324 216 r10|DWORD = MOV [rsi|QWORD[.] + 32] size: DWORD  <||@
  Comment 328 218 MOV (x: [rsi|QWORD[.] + 36], y: r10|DWORD) size: DWORD  <||@
  Comment 332 220 INC [rsi|QWORD[.] + 44] size: DWORD  <||@
  Comment 335 222 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9  <||@
  Comment 344 POLL_RETURN_FAR  <||@
  Comment 358 block B11 null  <||@
  Comment 358 92 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 358 94 r8|DWORD = LEA [rcx|DWORD - 16] size: DWORD  <||@
  Comment 362 96 JUMP ~[] destination: B11 -> B12  <||@
  Comment 367 block B16 loop 2 depth 1 header:285|LoopBegin  <||@
  Comment 367 150 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 384 152 MOV [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 393 154 r11|DWORD = INC r11|DWORD size: DWORD  <||@
  Comment 396 156 JUMP ~[] destination: B16 -> B15  <||@
  Comment 396 block B15 loop 2 depth 1 header:285|LoopBegin  <||@
  Comment 396 146 [] = LABEL alignment: 16 numbPhis: 1 label: ?  <||@
  Comment 400 148 CMPBRANCH (x: rcx|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B18 size: DWORD  <||@
  Comment 411 block B13 loop 1 depth 1 header:265|LoopBegin  <||@
  Comment 411 102 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 416 104 MOV [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 425 106 r9|QWORD = MOVSXD r11|DWORD size: QWORD  <||@
  Comment 428 108 MOV [rdx|QWORD[.] + r9|QWORD * 4 + 20] y: -1 size: DWORD  <||@
  Comment 437 110 MOV [rdx|QWORD[.] + r9|QWORD * 4 + 24] y: -1 size: DWORD  <||@
  Comment 446 112 MOV [rdx|QWORD[.] + r9|QWORD * 4 + 28] y: -1 size: DWORD  <||@
  Comment 455 114 MOV [rdx|QWORD[.] + r9|QWORD * 4 + 32] y: -1 size: DWORD  <||@
  Comment 464 116 MOV [rdx|QWORD[.] + r9|QWORD * 4 + 36] y: -1 size: DWORD  <||@
  Comment 473 118 MOV [rdx|QWORD[.] + r9|QWORD * 4 + 40] y: -1 size: DWORD  <||@
  Comment 482 120 MOV [rdx|QWORD[.] + r9|QWORD * 4 + 44] y: -1 size: DWORD  <||@
  Comment 491 122 MOV [rdx|QWORD[.] + r9|QWORD * 4 + 48] y: -1 size: DWORD  <||@
  Comment 500 124 MOV [rdx|QWORD[.] + r9|QWORD * 4 + 52] y: -1 size: DWORD  <||@
  Comment 509 126 MOV [rdx|QWORD[.] + r9|QWORD * 4 + 56] y: -1 size: DWORD  <||@
  Comment 518 128 MOV [rdx|QWORD[.] + r9|QWORD * 4 + 60] y: -1 size: DWORD  <||@
  Comment 527 130 MOV [rdx|QWORD[.] + r9|QWORD * 4 + 64] y: -1 size: DWORD  <||@
  Comment 536 132 MOV [rdx|QWORD[.] + r9|QWORD * 4 + 68] y: -1 size: DWORD  <||@
  Comment 545 134 MOV [rdx|QWORD[.] + r9|QWORD * 4 + 72] y: -1 size: DWORD  <||@
  Comment 554 136 MOV [rdx|QWORD[.] + r9|QWORD * 4 + 76] y: -1 size: DWORD  <||@
  Comment 563 138 r11|DWORD = LEA [r11|DWORD + 16] size: DWORD  <||@
  Comment 567 140 JUMP ~[] destination: B13 -> B12  <||@
  Comment 567 block B12 loop 1 depth 1 header:265|LoopBegin  <||@
  Comment 567 98 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 567 100 CMPBRANCH (x: r8|DWORD, y: r11|DWORD) trueDestinationProbability: 0.19996410454965907 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B15 size: DWORD  <||@
  Comment 581 block B20 null  <||@
  Comment 581 200 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 581 202 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 585 204 MOV [rsi|QWORD[.] + 28] y: -1 size: DWORD  <||@
  Comment 592 206 JUMP ~[] destination: B20 -> B22  <||@
  Comment 597 block B1 null  <||@
  Comment 597 18 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 597 20 MOV [r15|QWORD + 1156] y: -65043 size: DWORD  <||@
  Comment 608 22 MOV [r15|QWORD + 1168] y: 20 size: QWORD  <||@
  Comment 619 24 DEOPT info [bci:10]  <||@
  Comment 619 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7fba7b6335a8, value=140438496915834]:0x7fba62b8b17a}  <||@
  Comment 624 [rsi:0]at java.util.regex.Matcher.search(Matcher.java:1757) [bci: 10, duringCall: false, rethrow: false]
              |0             |1          |2 
     locals:  |rsi|QWORD[.]  |r10|DWORD  |-   <||@
  Comment 632 block B24 null  <||@
  Comment 632 232 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 632 234 MOV [r15|QWORD + 1156] y: -36891 size: DWORD  <||@
  Comment 643 236 MOV [r15|QWORD + 1168] y: 17944 size: QWORD  <||@
  Comment 654 238 DEOPT info [bci:44]  <||@
  Comment 654 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7fba7b6335a8, value=140438496915834]:0x7fba62b8b17a}  <||@
  Comment 659 [rsi:0]at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 44, duringCall: false, rethrow: false]
              |0             |1          |2 
     locals:  |rsi|QWORD[.]  |r10|DWORD  |-   <||@
  Comment 667 block B23 null  <||@
  Comment 667 224 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 667 226 MOV [r15|QWORD + 1156] y: -66323 size: DWORD  <||@
  Comment 678 228 MOV [r15|QWORD + 1168] y: 660 size: QWORD  <||@
  Comment 689 230 DEOPT info [bci:68]  <||@
  Comment 689 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7fba7b6335a8, value=140438496915834]:0x7fba62b8b17a}  <||@
  Comment 694 [rsi:0]at java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68, duringCall: false, rethrow: false]
              |0             |1          |2 
     locals:  |rsi|QWORD[.]  |r10|DWORD  |-   <||@
  Comment 707 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7fba7b633598, value=140438496784928]:0x7fba62b6b220}  <||@
  Comment 732 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7fba7b6335a0, value=140438496919552]:0x7fba62b8c000}  <||@
  Comment 760 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7fba7b6335a8, value=140438496915834]:0x7fba62b8b17a}  <||@
  Comment 765 [rdx:0, rsi:0]at java.util.regex.Matcher.search(Matcher.java:1755) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2 
     locals:  |rsi|QWORD[.]  |r10|DWORD  |-   <||@
  Comment 795 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7fba7b6335a8, value=140438496915834]:0x7fba62b8b17a}  <||@
  Comment 800 [rsi:0]at java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68, duringCall: false, rethrow: false]
              |0             |1          |2 
     locals:  |rsi|QWORD[.]  |r10|DWORD  |-   <||@
  Comment 830 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7fba7b6335a8, value=140438496915834]:0x7fba62b8b17a}  <||@
  Comment 835 [rsi:0]at java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68, duringCall: false, rethrow: false]
              |0             |1          |2 
     locals:  |rsi|QWORD[.]  |r10|DWORD  |-   <||@
  Comment 843 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7fba62cc5f00:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 843 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 849 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7fba7b6335b8, value=140438496915232]:0x7fba62b8af20}  <||@
  Comment 849 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
