begin_compilation
  name " HotSpotCompilation-4715[java.util.regex.Matcher.reset()]"
  method "HotSpotCompilation-4715[java.util.regex.Matcher.reset()]"
  date 1714038191762
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a695 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: a695  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# java.util.regex.Matcher
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 v743 v763 v744 v757 v745 ?10 v754 v746 ?107 v762 v76 v756 v750 ?123 v758 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v746 <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a695 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a695 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# int[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Matcher.groups
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 19]
stamp: n# int[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v746 
lastLocationAccess: - 
=== Succesors ===
next: i696 
=== Usages ===
a141 v747 v748 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v746 lastLocationAccess: - #next: i696  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_0
code: ResolvedJavaMethodBytecode<Matcher.reset()>
localsSize: 2
locksSize: 0
sourceFile: Matcher.java
sourceLine: 448
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
i696 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@~|@floating>@ <|@
tid v747 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a695 
=== Succesors ===
=== Usages ===
i696 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a695  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i696 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-36619|0xffffffffffff70f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 22]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v747 
lastLocationAccess: - 
=== Succesors ===
next: v131 
=== Usages ===
i377 v266 v149 j257 i288 i638 v355 v376 
=== Predecessor ===
a695 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v747 lastLocationAccess: - #next: v131  <|@  <|@
f <@~|@floating>@ <|@
tid v743 <|@
d <@d|@=== Debug Properties ===
displacement: 28
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v131 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i3 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:448) [bci: 1]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1]
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v131 v137 v167 v192 v158 v183 i288 i292 v346 v366 v390 v410 v433 v453 v475 v482 v497 v504 v523 v530 v537 v543 v567 v574 v581 v587 v595 v601 v607 v613 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v131 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Matcher.first
location: Matcher.first
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:448) [bci: 2]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v743 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v134 
=== Usages ===
=== Predecessor ===
i696 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v743 lastLocationAccess: - value: i3 stateAfter: - #next: v134  <|@  <|@
f <@~|@floating>@ <|@
tid v744 <|@
d <@d|@=== Debug Properties ===
displacement: 32
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v134 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i6 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:449) [bci: 6]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v134 v149 v179 v78 v205 v207 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v134 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Matcher.last
location: Matcher.last
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:449) [bci: 7]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v744 
lastLocationAccess: - 
value: i6 
stateAfter: - 
=== Succesors ===
next: v137 
=== Usages ===
=== Predecessor ===
v131 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v744 lastLocationAccess: - value: i6 stateAfter: - #next: v137  <|@  <|@
f <@~|@floating>@ <|@
tid v745 <|@
d <@d|@=== Debug Properties ===
displacement: 36
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v137 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v137 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Matcher.oldLast
location: Matcher.oldLast
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:450) [bci: 12]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v745 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v97 
=== Usages ===
=== Predecessor ===
v134 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v745 lastLocationAccess: - value: i3 stateAfter: - #next: v97  <|@  <|@
f <@~|@floating>@ <|@
tid v149 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i696 
y: i6 
=== Succesors ===
=== Usages ===
v97 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i696 y: i6  <|@  <|@
f <@~|@floating>@ <|@
tid i27 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i28 i46 i73 i108 i124 i403 i359 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i375 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 3
stableDimension: 0
stamp: i32 [3]
stampKind: i32
value: int[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
v376 v419 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i153 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
rawvalue: 2
stableDimension: 0
stamp: i32 [2]
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i377 i420 v266 v280 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v97 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 23]
profileData: PROFILED designatedSuccessorProbability: 0.04762264888183043
stamp: void
=== Inputs ===
condition: v149 
=== Succesors ===
trueSuccessor: v95 
falseSuccessor: v96 
=== Usages ===
=== Predecessor ===
v137 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v149 #trueSuccessor: v95 #falseSuccessor: v96  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B16" 
    xhandlers
    flags 
    probability 4587023968036069872
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v95 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
stamp: void
=== Inputs ===
=== Succesors ===
next: v105 
=== Usages ===
=== Predecessor ===
v97 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v105  <|@  <|@
f <@*|@fixed>@ <|@
tid v105 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v103 
=== Predecessor ===
v95 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606753472112500193
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v96 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v686 
=== Usages ===
v158 
=== Predecessor ===
v97 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v686  <|@  <|@
f <@~|@floating>@ <|@
tid i288 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-1 - 2147483646]
=== Inputs ===
x: i696 
y: i3 
=== Succesors ===
=== Usages ===
j264 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i696 y: i3  <|@  <|@
f <@~|@floating>@ <|@
tid j264 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [-1 - 2147483646]
=== Inputs ===
value: i288 
=== Succesors ===
=== Usages ===
v265 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i288  <|@  <|@
f <@~|@floating>@ <|@
tid j257 <|@
d <@d|@=== Debug Properties ===
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i696 
=== Succesors ===
=== Usages ===
v265 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i696  <|@  <|@
f <@~|@floating>@ <|@
tid v265 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@40aab068
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j264 
y: j257 
=== Succesors ===
=== Usages ===
v686 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j264 y: j257  <|@  <|@
f <@*|@fixed>@ <|@
tid v686 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
profileData: INJECTED designatedSuccessorProbability: 0.5
stamp: void
=== Inputs ===
condition: v265 
=== Succesors ===
trueSuccessor: v682 
falseSuccessor: v685 
=== Usages ===
=== Predecessor ===
v96 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v265 #trueSuccessor: v682 #falseSuccessor: v685  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602249872485129697
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v682 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v680 
=== Usages ===
=== Predecessor ===
v686 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v680  <|@  <|@
f <@*|@fixed>@ <|@
tid v680 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v679 
=== Predecessor ===
v682 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B39" 
    xhandlers
    flags 
    probability 4602249872485129697
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v685 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v684 
=== Usages ===
=== Predecessor ===
v686 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v684  <|@  <|@
f <@~|@floating>@ <|@
tid v266 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@40aab068
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i696 
y: i153 
=== Succesors ===
=== Usages ===
v684 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i696 y: i153  <|@  <|@
f <@*|@fixed>@ <|@
tid v684 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v266 
=== Succesors ===
trueSuccessor: v683 
falseSuccessor: v300 
=== Usages ===
=== Predecessor ===
v685 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v266 #trueSuccessor: v683 #falseSuccessor: v300  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602249872485129697
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v683 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v681 
=== Usages ===
=== Predecessor ===
v684 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v681  <|@  <|@
f <@*|@fixed>@ <|@
tid v681 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v679 
=== Predecessor ===
v683 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606753472112500193
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v679 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v680 v681 
=== Succesors ===
next: v158 
=== Usages ===
v271 v369 v349 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v680 v681 #next: v158  <|@  <|@
f <@~|@floating>@ <|@
tid v748 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a695 
=== Succesors ===
=== Usages ===
v158 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a695  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v158 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v96 
address: v748 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v12 
=== Usages ===
=== Predecessor ===
v679 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v96 address: v748 lastLocationAccess: - value: i3 stateAfter: - #next: v12  <|@  <|@
f <@~|@floating>@ <|@
tid v376 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@40aab068
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i696 
y: i375 
=== Succesors ===
=== Usages ===
i377 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i696 y: i375  <|@  <|@
f <@~|@floating>@ <|@
tid i377 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 2] bits:0...0xx
=== Inputs ===
condition: v376 
trueValue: i696 
falseValue: i153 
=== Succesors ===
=== Usages ===
v18 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v376 trueValue: i696 falseValue: i153  <|@  <|@
f <@~|@floating>@ <|@
tid a141 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 19]
op: Uncompress
stamp: a# int[]
=== Inputs ===
value: a695 
=== Succesors ===
=== Usages ===
v785 v784 v783 v749 v764 v765 v768 v770 v771 v774 v775 v776 v777 v778 v779 v780 v781 v782 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a695  <|@  <|@
f <@*|@fixed>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v13 
=== Predecessor ===
v158 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors "B8" "B9" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606840121128330737
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i108 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 17]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v13 
values: i27 i28 
=== Succesors ===
=== Usages ===
i28 v18 v749 i341 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v13 values: i27 i28  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v13 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: -1
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 19.99841196321046
loopType: PRE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 17]
osrLoop: false
peelings: 1
rotated: false
splits: 2
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v12 
=== Succesors ===
next: v23 
=== Usages ===
i108 v20 v29 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v12 #next: v23  <|@  <|@
f <@~|@floating>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 23]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@4dc6bd49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i108 
y: i377 
=== Succesors ===
=== Usages ===
v23 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i108 y: i377  <|@  <|@
f <@*|@fixed>@ <|@
tid v23 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 23]
profileData: INJECTED designatedSuccessorProbability: 0.01
stamp: void
=== Inputs ===
condition: v18 
=== Succesors ===
trueSuccessor: v22 
falseSuccessor: v20 
=== Usages ===
=== Predecessor ===
v13 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v18 #trueSuccessor: v22 #falseSuccessor: v20  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699158794208206
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v22 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v167 
=== Usages ===
v271 
=== Predecessor ===
v23 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v167  <|@  <|@
f <@~|@floating>@ <|@
tid v271 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
=== Inputs ===
guards: v679 v22 
=== Succesors ===
=== Usages ===
v167 
=== Predecessor ===
- >@ <|@
instruction <@MultiGuard|@jdk.graal.compiler.nodes.extended.MultiGuardNode>@ guards: v679 v22  <|@  <|@
f <@~|@floating>@ <|@
tid v749 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a141 
index: i108 
=== Succesors ===
=== Usages ===
v167 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a141 index: i108  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v167 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v271 
address: v749 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v29 
=== Usages ===
=== Predecessor ===
v22 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v271 address: v749 lastLocationAccess: - value: i3 stateAfter: - #next: v29  <|@  <|@
f <@~|@floating>@ <|@
tid i28 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
stamp: i32
=== Inputs ===
x: i108 
y: i27 
=== Succesors ===
=== Usages ===
i108 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i108 y: i27  <|@  <|@
f <@*|@fixed>@ <|@
tid v29 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 17]
stamp: void
=== Inputs ===
loopBegin: v13 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v167 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v13  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606753472112500194
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v13 
=== Succesors ===
next: v350 
=== Usages ===
=== Predecessor ===
v23 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v13 #next: v350  <|@  <|@
f <@~|@floating>@ <|@
tid i637 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -16
stableDimension: 0
stamp: i32 [-16]
stampKind: i32
value: int[-16|0xfffffffffffffff0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i638 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i638 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-16 - 2147483631]
=== Inputs ===
x: i696 
y: i637 
=== Succesors ===
=== Usages ===
v335 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i696 y: i637  <|@  <|@
f <@*|@fixed>@ <|@
tid v350 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v334 
=== Predecessor ===
v20 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" 
    successors "B11" "B12" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608039801321515939
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i341 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 17]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v334 
values: i108 i634 
=== Succesors ===
=== Usages ===
v335 j711 v764 i361 i634 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v334 values: i108 i634  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v334 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 13
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 19.99841196321046
loopType: MAIN_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 17]
osrLoop: false
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 16
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v350 
=== Succesors ===
next: v338 
=== Usages ===
v336 v340 i341 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v350 #next: v338  <|@  <|@
f <@~|@floating>@ <|@
tid v335 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 23]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@4dc6bd49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i341 
y: i638 
=== Succesors ===
=== Usages ===
v338 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i341 y: i638  <|@  <|@
f <@*|@fixed>@ <|@
tid v338 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 23]
profileData: INJECTED designatedSuccessorProbability: 0.19993647348429622
stamp: void
=== Inputs ===
condition: v335 
=== Succesors ===
trueSuccessor: v337 
falseSuccessor: v336 
=== Usages ===
=== Predecessor ===
v334 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v335 #trueSuccessor: v337 #falseSuccessor: v336  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B10" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597742867212592525
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v337 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v346 
=== Usages ===
v349 
=== Predecessor ===
v338 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v346  <|@  <|@
f <@~|@floating>@ <|@
tid v349 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
=== Inputs ===
guards: v679 v337 
=== Succesors ===
=== Usages ===
v613 v346 v587 v433 v607 v475 v567 v482 v601 v523 v581 v530 v595 v537 v574 v543 
=== Predecessor ===
- >@ <|@
instruction <@MultiGuard|@jdk.graal.compiler.nodes.extended.MultiGuardNode>@ guards: v679 v337  <|@  <|@
f <@~|@floating>@ <|@
tid v764 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a141 
index: i341 
=== Succesors ===
=== Usages ===
v346 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a141 index: i341  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v346 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v349 
address: v764 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v433 
=== Usages ===
=== Predecessor ===
v337 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v349 address: v764 lastLocationAccess: - value: i3 stateAfter: - #next: v433  <|@  <|@
f <@~|@floating>@ <|@
tid j711 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i341 
=== Succesors ===
=== Usages ===
v768 v770 v771 v774 v775 v776 v777 v778 v779 v780 v781 v782 v783 v784 v785 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i341  <|@  <|@
f <@~|@floating>@ <|@
tid v768 <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S4
=== Inputs ===
base: a141 
index: j711 
=== Succesors ===
=== Usages ===
v433 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a141 index: j711  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v433 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v349 
address: v768 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v475 
=== Usages ===
=== Predecessor ===
v346 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v349 address: v768 lastLocationAccess: - value: i3 stateAfter: - #next: v475  <|@  <|@
f <@~|@floating>@ <|@
tid v770 <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S4
=== Inputs ===
base: a141 
index: j711 
=== Succesors ===
=== Usages ===
v475 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a141 index: j711  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v475 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v349 
address: v770 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v482 
=== Usages ===
=== Predecessor ===
v433 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v349 address: v770 lastLocationAccess: - value: i3 stateAfter: - #next: v482  <|@  <|@
f <@~|@floating>@ <|@
tid v771 <|@
d <@d|@=== Debug Properties ===
displacement: 28
stamp: void*
stride: S4
=== Inputs ===
base: a141 
index: j711 
=== Succesors ===
=== Usages ===
v482 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a141 index: j711  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v482 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v349 
address: v771 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v523 
=== Usages ===
=== Predecessor ===
v475 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v349 address: v771 lastLocationAccess: - value: i3 stateAfter: - #next: v523  <|@  <|@
f <@~|@floating>@ <|@
tid v774 <|@
d <@d|@=== Debug Properties ===
displacement: 32
stamp: void*
stride: S4
=== Inputs ===
base: a141 
index: j711 
=== Succesors ===
=== Usages ===
v523 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a141 index: j711  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v523 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v349 
address: v774 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v530 
=== Usages ===
=== Predecessor ===
v482 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v349 address: v774 lastLocationAccess: - value: i3 stateAfter: - #next: v530  <|@  <|@
f <@~|@floating>@ <|@
tid v775 <|@
d <@d|@=== Debug Properties ===
displacement: 36
stamp: void*
stride: S4
=== Inputs ===
base: a141 
index: j711 
=== Succesors ===
=== Usages ===
v530 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a141 index: j711  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v530 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v349 
address: v775 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v537 
=== Usages ===
=== Predecessor ===
v523 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v349 address: v775 lastLocationAccess: - value: i3 stateAfter: - #next: v537  <|@  <|@
f <@~|@floating>@ <|@
tid v776 <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S4
=== Inputs ===
base: a141 
index: j711 
=== Succesors ===
=== Usages ===
v537 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a141 index: j711  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v537 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v349 
address: v776 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v543 
=== Usages ===
=== Predecessor ===
v530 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v349 address: v776 lastLocationAccess: - value: i3 stateAfter: - #next: v543  <|@  <|@
f <@~|@floating>@ <|@
tid v777 <|@
d <@d|@=== Debug Properties ===
displacement: 44
stamp: void*
stride: S4
=== Inputs ===
base: a141 
index: j711 
=== Succesors ===
=== Usages ===
v543 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a141 index: j711  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v543 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v349 
address: v777 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v567 
=== Usages ===
=== Predecessor ===
v537 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v349 address: v777 lastLocationAccess: - value: i3 stateAfter: - #next: v567  <|@  <|@
f <@~|@floating>@ <|@
tid v778 <|@
d <@d|@=== Debug Properties ===
displacement: 48
stamp: void*
stride: S4
=== Inputs ===
base: a141 
index: j711 
=== Succesors ===
=== Usages ===
v567 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a141 index: j711  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v567 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v349 
address: v778 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v574 
=== Usages ===
=== Predecessor ===
v543 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v349 address: v778 lastLocationAccess: - value: i3 stateAfter: - #next: v574  <|@  <|@
f <@~|@floating>@ <|@
tid v779 <|@
d <@d|@=== Debug Properties ===
displacement: 52
stamp: void*
stride: S4
=== Inputs ===
base: a141 
index: j711 
=== Succesors ===
=== Usages ===
v574 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a141 index: j711  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v574 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v349 
address: v779 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v581 
=== Usages ===
=== Predecessor ===
v567 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v349 address: v779 lastLocationAccess: - value: i3 stateAfter: - #next: v581  <|@  <|@
f <@~|@floating>@ <|@
tid v780 <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S4
=== Inputs ===
base: a141 
index: j711 
=== Succesors ===
=== Usages ===
v581 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a141 index: j711  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v581 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v349 
address: v780 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v587 
=== Usages ===
=== Predecessor ===
v574 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v349 address: v780 lastLocationAccess: - value: i3 stateAfter: - #next: v587  <|@  <|@
f <@~|@floating>@ <|@
tid v781 <|@
d <@d|@=== Debug Properties ===
displacement: 60
stamp: void*
stride: S4
=== Inputs ===
base: a141 
index: j711 
=== Succesors ===
=== Usages ===
v587 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a141 index: j711  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v587 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v349 
address: v781 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v595 
=== Usages ===
=== Predecessor ===
v581 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v349 address: v781 lastLocationAccess: - value: i3 stateAfter: - #next: v595  <|@  <|@
f <@~|@floating>@ <|@
tid v782 <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S4
=== Inputs ===
base: a141 
index: j711 
=== Succesors ===
=== Usages ===
v595 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a141 index: j711  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v595 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v349 
address: v782 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v601 
=== Usages ===
=== Predecessor ===
v587 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v349 address: v782 lastLocationAccess: - value: i3 stateAfter: - #next: v601  <|@  <|@
f <@~|@floating>@ <|@
tid v783 <|@
d <@d|@=== Debug Properties ===
displacement: 68
stamp: void*
stride: S4
=== Inputs ===
base: a141 
index: j711 
=== Succesors ===
=== Usages ===
v601 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a141 index: j711  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v601 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v349 
address: v783 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v607 
=== Usages ===
=== Predecessor ===
v595 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v349 address: v783 lastLocationAccess: - value: i3 stateAfter: - #next: v607  <|@  <|@
f <@~|@floating>@ <|@
tid v784 <|@
d <@d|@=== Debug Properties ===
displacement: 72
stamp: void*
stride: S4
=== Inputs ===
base: a141 
index: j711 
=== Succesors ===
=== Usages ===
v607 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a141 index: j711  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v607 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v349 
address: v784 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v613 
=== Usages ===
=== Predecessor ===
v601 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v349 address: v784 lastLocationAccess: - value: i3 stateAfter: - #next: v613  <|@  <|@
f <@~|@floating>@ <|@
tid v785 <|@
d <@d|@=== Debug Properties ===
displacement: 76
stamp: void*
stride: S4
=== Inputs ===
base: a141 
index: j711 
=== Succesors ===
=== Usages ===
v613 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a141 index: j711  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v613 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v349 
address: v785 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v340 
=== Usages ===
=== Predecessor ===
v607 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v349 address: v785 lastLocationAccess: - value: i3 stateAfter: - #next: v340  <|@  <|@
f <@~|@floating>@ <|@
tid i619 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 16
stableDimension: 0
stamp: i32 [16]
stampKind: i32
value: int[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
i634 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i634 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
stamp: i32
=== Inputs ===
x: i341 
y: i619 
=== Succesors ===
=== Usages ===
i341 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i341 y: i619  <|@  <|@
f <@*|@fixed>@ <|@
tid v340 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 17]
stamp: void
=== Inputs ===
loopBegin: v334 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v613 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v334  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606753472112500195
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v336 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v334 
=== Succesors ===
next: v370 
=== Usages ===
=== Predecessor ===
v338 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v334 #next: v370  <|@  <|@
f <@*|@fixed>@ <|@
tid v370 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v354 
=== Predecessor ===
v336 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606840121128330739
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i361 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 17]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v354 
values: i341 i359 
=== Succesors ===
=== Usages ===
v355 i359 v765 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v354 values: i341 i359  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v354 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 13
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 19.99841196321046
loopType: POST_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 17]
osrLoop: false
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v370 
=== Succesors ===
next: v358 
=== Usages ===
v356 v360 i361 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v370 #next: v358  <|@  <|@
f <@~|@floating>@ <|@
tid v355 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 23]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@4dc6bd49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i361 
y: i696 
=== Succesors ===
=== Usages ===
v358 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i361 y: i696  <|@  <|@
f <@*|@fixed>@ <|@
tid v358 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 23]
profileData: INJECTED designatedSuccessorProbability: 0.01
stamp: void
=== Inputs ===
condition: v355 
=== Succesors ===
trueSuccessor: v357 
falseSuccessor: v356 
=== Usages ===
=== Predecessor ===
v354 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v355 #trueSuccessor: v357 #falseSuccessor: v356  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699158794208207
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v357 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v366 
=== Usages ===
v369 
=== Predecessor ===
v358 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v366  <|@  <|@
f <@~|@floating>@ <|@
tid v369 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
=== Inputs ===
guards: v679 v357 
=== Succesors ===
=== Usages ===
v366 
=== Predecessor ===
- >@ <|@
instruction <@MultiGuard|@jdk.graal.compiler.nodes.extended.MultiGuardNode>@ guards: v679 v357  <|@  <|@
f <@~|@floating>@ <|@
tid v765 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a141 
index: i361 
=== Succesors ===
=== Usages ===
v366 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a141 index: i361  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v366 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v369 
address: v765 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v360 
=== Usages ===
=== Predecessor ===
v357 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v369 address: v765 lastLocationAccess: - value: i3 stateAfter: - #next: v360  <|@  <|@
f <@~|@floating>@ <|@
tid i359 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
stamp: i32
=== Inputs ===
x: i361 
y: i27 
=== Succesors ===
=== Usages ===
i361 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i361 y: i27  <|@  <|@
f <@*|@fixed>@ <|@
tid v360 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 17]
stamp: void
=== Inputs ===
loopBegin: v354 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v366 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v354  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606753472112500196
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v356 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v354 
=== Succesors ===
next: v104 
=== Usages ===
=== Predecessor ===
v358 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v354 #next: v104  <|@  <|@
f <@*|@fixed>@ <|@
tid v104 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v103 
=== Predecessor ===
v356 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B1" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182418800017410
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v103 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v104 v105 
=== Succesors ===
next: a697 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v104 v105 #next: a697  <|@  <|@
f <@~|@floating>@ <|@
tid v750 <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a697 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a697 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# int[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Matcher.locals
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 43]
stamp: n# int[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v750 
lastLocationAccess: - 
=== Succesors ===
next: i698 
=== Usages ===
a172 v751 v752 
=== Predecessor ===
v103 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v750 lastLocationAccess: - #next: i698  <|@  <|@
tid ?107 <|@
d <@d|@=== Debug Properties ===
bci: 39
bytecode: iconst_0
code: ResolvedJavaMethodBytecode<Matcher.reset()>
localsSize: 2
locksSize: 0
sourceFile: Matcher.java
sourceLine: 453
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
v787 i698 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@~|@floating>@ <|@
tid v751 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a697 
=== Succesors ===
=== Usages ===
i698 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a697  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i698 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-44555|0xffffffffffff51f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 46]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?107 
guard: - 
address: v751 
lastLocationAccess: - 
=== Succesors ===
next: v113 
=== Usages ===
i420 v280 v179 j272 i292 i641 v399 v419 
=== Predecessor ===
a697 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?107 guard: - address: v751 lastLocationAccess: - #next: v113  <|@  <|@
f <@~|@floating>@ <|@
tid v179 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i698 
y: i6 
=== Succesors ===
=== Usages ===
v113 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i698 y: i6  <|@  <|@
f <@*|@fixed>@ <|@
tid v113 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 47]
profileData: PROFILED designatedSuccessorProbability: 0.1430071915215746
stamp: void
=== Inputs ===
condition: v179 
=== Succesors ===
trueSuccessor: v111 
falseSuccessor: v112 
=== Usages ===
=== Predecessor ===
i698 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v179 #trueSuccessor: v111 #falseSuccessor: v112  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B32" 
    xhandlers
    flags 
    probability 4594320397366118342
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v111 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
stamp: void
=== Inputs ===
=== Succesors ===
next: v121 
=== Usages ===
=== Predecessor ===
v113 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v121  <|@  <|@
f <@*|@fixed>@ <|@
tid v121 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v119 
=== Predecessor ===
v111 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4605894324531121682
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v112 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v694 
=== Usages ===
v183 
=== Predecessor ===
v113 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v694  <|@  <|@
f <@~|@floating>@ <|@
tid i292 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-1 - 2147483646]
=== Inputs ===
x: i698 
y: i3 
=== Succesors ===
=== Usages ===
j278 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i698 y: i3  <|@  <|@
f <@~|@floating>@ <|@
tid j278 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [-1 - 2147483646]
=== Inputs ===
value: i292 
=== Succesors ===
=== Usages ===
v279 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i292  <|@  <|@
f <@~|@floating>@ <|@
tid j272 <|@
d <@d|@=== Debug Properties ===
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i698 
=== Succesors ===
=== Usages ===
v279 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i698  <|@  <|@
f <@~|@floating>@ <|@
tid v279 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@40aab068
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j278 
y: j272 
=== Succesors ===
=== Usages ===
v694 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j278 y: j272  <|@  <|@
f <@*|@fixed>@ <|@
tid v694 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
profileData: INJECTED designatedSuccessorProbability: 0.5
stamp: void
=== Inputs ===
condition: v279 
=== Succesors ===
trueSuccessor: v690 
falseSuccessor: v693 
=== Usages ===
=== Predecessor ===
v112 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v279 #trueSuccessor: v690 #falseSuccessor: v693  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601390724903751186
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v690 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
stamp: void
=== Inputs ===
=== Succesors ===
next: v688 
=== Usages ===
=== Predecessor ===
v694 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v688  <|@  <|@
f <@*|@fixed>@ <|@
tid v688 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v687 
=== Predecessor ===
v690 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B38" 
    xhandlers
    flags 
    probability 4601390724903751186
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v693 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
stamp: void
=== Inputs ===
=== Succesors ===
next: v692 
=== Usages ===
=== Predecessor ===
v694 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v692  <|@  <|@
f <@~|@floating>@ <|@
tid v280 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@40aab068
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i698 
y: i153 
=== Succesors ===
=== Usages ===
v692 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i698 y: i153  <|@  <|@
f <@*|@fixed>@ <|@
tid v692 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v280 
=== Succesors ===
trueSuccessor: v691 
falseSuccessor: v308 
=== Usages ===
=== Predecessor ===
v693 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v280 #trueSuccessor: v691 #falseSuccessor: v308  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601390724903751186
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v691 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
stamp: void
=== Inputs ===
=== Succesors ===
next: v689 
=== Usages ===
=== Predecessor ===
v692 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v689  <|@  <|@
f <@*|@fixed>@ <|@
tid v689 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v687 
=== Predecessor ===
v691 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B19" "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4605894324531121682
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v687 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v688 v689 
=== Succesors ===
next: v183 
=== Usages ===
v285 v413 v393 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v688 v689 #next: v183  <|@  <|@
f <@~|@floating>@ <|@
tid v752 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a697 
=== Succesors ===
=== Usages ===
v183 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a697  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v183 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v112 
address: v752 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v31 
=== Usages ===
=== Predecessor ===
v687 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v112 address: v752 lastLocationAccess: - value: i3 stateAfter: - #next: v31  <|@  <|@
f <@~|@floating>@ <|@
tid v419 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@40aab068
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i698 
y: i375 
=== Succesors ===
=== Usages ===
i420 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i698 y: i375  <|@  <|@
f <@~|@floating>@ <|@
tid i420 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 2] bits:0...0xx
=== Inputs ===
condition: v419 
trueValue: i698 
falseValue: i153 
=== Succesors ===
=== Usages ===
v37 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v419 trueValue: i698 falseValue: i153  <|@  <|@
f <@~|@floating>@ <|@
tid a172 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 43]
op: Uncompress
stamp: a# int[]
=== Inputs ===
value: a697 
=== Succesors ===
=== Usages ===
v773 v772 v769 v753 v766 v767 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a697  <|@  <|@
f <@*|@fixed>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v32 
=== Predecessor ===
v183 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B24" 
    successors "B24" "B25" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4605972295288554463
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i124 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 41]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v32 
values: i27 i46 
=== Succesors ===
=== Usages ===
i46 v37 v753 i385 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v32 values: i27 i46  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v32 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: -1
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 5.992655329848474
loopType: PRE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 41]
osrLoop: false
peelings: 1
rotated: false
splits: 2
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v31 
=== Succesors ===
next: v42 
=== Usages ===
i124 v39 v47 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v31 #next: v42  <|@  <|@
f <@~|@floating>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 47]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@4dc6bd49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i124 
y: i420 
=== Succesors ===
=== Usages ===
v42 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i124 y: i420  <|@  <|@
f <@*|@fixed>@ <|@
tid v42 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 47]
profileData: INJECTED designatedSuccessorProbability: 0.01
stamp: void
=== Inputs ===
condition: v37 
=== Succesors ===
trueSuccessor: v41 
falseSuccessor: v39 
=== Usages ===
=== Predecessor ===
v32 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v37 #trueSuccessor: v41 #falseSuccessor: v39  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B23" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576143750256751390
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v41 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v192 
=== Usages ===
v285 
=== Predecessor ===
v42 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v192  <|@  <|@
f <@~|@floating>@ <|@
tid v285 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
stamp: void
=== Inputs ===
guards: v687 v41 
=== Succesors ===
=== Usages ===
v192 
=== Predecessor ===
- >@ <|@
instruction <@MultiGuard|@jdk.graal.compiler.nodes.extended.MultiGuardNode>@ guards: v687 v41  <|@  <|@
f <@~|@floating>@ <|@
tid v753 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a172 
index: i124 
=== Succesors ===
=== Usages ===
v192 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a172 index: i124  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v192 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v285 
address: v753 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v47 
=== Usages ===
=== Predecessor ===
v41 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v285 address: v753 lastLocationAccess: - value: i3 stateAfter: - #next: v47  <|@  <|@
f <@~|@floating>@ <|@
tid i46 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 57]
stamp: i32
=== Inputs ===
x: i124 
y: i27 
=== Succesors ===
=== Usages ===
i124 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i124 y: i27  <|@  <|@
f <@*|@fixed>@ <|@
tid v47 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 41]
stamp: void
=== Inputs ===
loopBegin: v32 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v192 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v32  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4605894324531121682
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v39 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v32 
=== Succesors ===
next: v394 
=== Usages ===
=== Predecessor ===
v42 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v32 #next: v394  <|@  <|@
f <@~|@floating>@ <|@
tid i640 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4
stableDimension: 0
stamp: i32 [-4]
stampKind: i32
value: int[-4|0xfffffffffffffffc]
=== Inputs ===
=== Succesors ===
=== Usages ===
i641 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i641 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-4 - 2147483643]
=== Inputs ===
x: i698 
y: i640 
=== Succesors ===
=== Usages ===
v379 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i698 y: i640  <|@  <|@
f <@*|@fixed>@ <|@
tid v394 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v378 
=== Predecessor ===
v39 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B27" 
    successors "B27" "B28" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4608461061127032607
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i385 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 41]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v378 
values: i124 i510 
=== Succesors ===
=== Usages ===
v379 j739 v766 i405 i510 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v378 values: i124 i510  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v378 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 32
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 5.992655329848474
loopType: MAIN_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 41]
osrLoop: false
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 4
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v394 
=== Succesors ===
next: v382 
=== Usages ===
v380 v384 i385 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v394 #next: v382  <|@  <|@
f <@~|@floating>@ <|@
tid v379 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 47]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@4dc6bd49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i385 
y: i641 
=== Succesors ===
=== Usages ===
v382 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i385 y: i641  <|@  <|@
f <@*|@fixed>@ <|@
tid v382 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 47]
profileData: INJECTED designatedSuccessorProbability: 0.3325162586814181
stamp: void
=== Inputs ===
condition: v379 
=== Succesors ===
trueSuccessor: v381 
falseSuccessor: v380 
=== Usages ===
=== Predecessor ===
v378 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v379 #trueSuccessor: v381 #falseSuccessor: v380  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4601362377763758169
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v381 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v390 
=== Usages ===
v393 
=== Predecessor ===
v382 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v390  <|@  <|@
f <@~|@floating>@ <|@
tid v393 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
stamp: void
=== Inputs ===
guards: v687 v381 
=== Succesors ===
=== Usages ===
v504 v390 v497 v453 
=== Predecessor ===
- >@ <|@
instruction <@MultiGuard|@jdk.graal.compiler.nodes.extended.MultiGuardNode>@ guards: v687 v381  <|@  <|@
f <@~|@floating>@ <|@
tid v766 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a172 
index: i385 
=== Succesors ===
=== Usages ===
v390 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a172 index: i385  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v390 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v393 
address: v766 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v453 
=== Usages ===
=== Predecessor ===
v381 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v393 address: v766 lastLocationAccess: - value: i3 stateAfter: - #next: v453  <|@  <|@
f <@~|@floating>@ <|@
tid j739 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i385 
=== Succesors ===
=== Usages ===
v769 v772 v773 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i385  <|@  <|@
f <@~|@floating>@ <|@
tid v769 <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S4
=== Inputs ===
base: a172 
index: j739 
=== Succesors ===
=== Usages ===
v453 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a172 index: j739  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v453 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v393 
address: v769 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v497 
=== Usages ===
=== Predecessor ===
v390 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v393 address: v769 lastLocationAccess: - value: i3 stateAfter: - #next: v497  <|@  <|@
f <@~|@floating>@ <|@
tid v772 <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S4
=== Inputs ===
base: a172 
index: j739 
=== Succesors ===
=== Usages ===
v497 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a172 index: j739  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v497 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v393 
address: v772 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v504 
=== Usages ===
=== Predecessor ===
v453 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v393 address: v772 lastLocationAccess: - value: i3 stateAfter: - #next: v504  <|@  <|@
f <@~|@floating>@ <|@
tid v773 <|@
d <@d|@=== Debug Properties ===
displacement: 28
stamp: void*
stride: S4
=== Inputs ===
base: a172 
index: j739 
=== Succesors ===
=== Usages ===
v504 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a172 index: j739  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v504 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v393 
address: v773 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v384 
=== Usages ===
=== Predecessor ===
v497 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v393 address: v773 lastLocationAccess: - value: i3 stateAfter: - #next: v384  <|@  <|@
f <@~|@floating>@ <|@
tid i485 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i32 [4]
stampKind: i32
value: int[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i510 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i510 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 57]
stamp: i32
=== Inputs ===
x: i385 
y: i485 
=== Succesors ===
=== Usages ===
i385 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i385 y: i485  <|@  <|@
f <@*|@fixed>@ <|@
tid v384 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 41]
stamp: void
=== Inputs ===
loopBegin: v378 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v504 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v378  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4605894324531121681
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v380 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v378 
=== Succesors ===
next: v414 
=== Usages ===
=== Predecessor ===
v382 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v378 #next: v414  <|@  <|@
f <@*|@fixed>@ <|@
tid v414 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v398 
=== Predecessor ===
v380 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors "B30" "B31" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4605972295288554462
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i405 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 41]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v398 
values: i385 i403 
=== Succesors ===
=== Usages ===
v399 i403 v767 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v398 values: i385 i403  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v398 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 32
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 5.992655329848474
loopType: POST_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 41]
osrLoop: false
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v414 
=== Succesors ===
next: v402 
=== Usages ===
v400 v404 i405 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v414 #next: v402  <|@  <|@
f <@~|@floating>@ <|@
tid v399 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 47]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@4dc6bd49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i405 
y: i698 
=== Succesors ===
=== Usages ===
v402 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i405 y: i698  <|@  <|@
f <@*|@fixed>@ <|@
tid v402 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 47]
profileData: INJECTED designatedSuccessorProbability: 0.01
stamp: void
=== Inputs ===
condition: v399 
=== Succesors ===
trueSuccessor: v401 
falseSuccessor: v400 
=== Usages ===
=== Predecessor ===
v398 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v399 #trueSuccessor: v401 #falseSuccessor: v400  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4576143750256751390
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v401 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v410 
=== Usages ===
v413 
=== Predecessor ===
v402 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v410  <|@  <|@
f <@~|@floating>@ <|@
tid v413 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
stamp: void
=== Inputs ===
guards: v687 v401 
=== Succesors ===
=== Usages ===
v410 
=== Predecessor ===
- >@ <|@
instruction <@MultiGuard|@jdk.graal.compiler.nodes.extended.MultiGuardNode>@ guards: v687 v401  <|@  <|@
f <@~|@floating>@ <|@
tid v767 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a172 
index: i405 
=== Succesors ===
=== Usages ===
v410 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a172 index: i405  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v410 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v413 
address: v767 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v404 
=== Usages ===
=== Predecessor ===
v401 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v413 address: v767 lastLocationAccess: - value: i3 stateAfter: - #next: v404  <|@  <|@
f <@~|@floating>@ <|@
tid i403 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 57]
stamp: i32
=== Inputs ===
x: i405 
y: i27 
=== Succesors ===
=== Usages ===
i405 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i405 y: i27  <|@  <|@
f <@*|@fixed>@ <|@
tid v404 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 41]
stamp: void
=== Inputs ===
loopBegin: v398 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v410 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v398  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4605894324531121681
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v400 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v398 
=== Succesors ===
next: v120 
=== Usages ===
=== Predecessor ===
v402 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v398 #next: v120  <|@  <|@
f <@*|@fixed>@ <|@
tid v120 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v119 
=== Predecessor ===
v400 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B17" 
    successors "B33" "B36" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v119 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v120 v121 
=== Succesors ===
next: a699 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v120 v121 #next: a699  <|@  <|@
f <@~|@floating>@ <|@
tid v758 <|@
d <@d|@=== Debug Properties ===
displacement: 60
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a699 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a699 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Matcher.text
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 1]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v758 
lastLocationAccess: - 
=== Succesors ===
next: v700 
=== Usages ===
v786 v759 v761 
=== Predecessor ===
v119 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v758 lastLocationAccess: - #next: v700  <|@  <|@
tid ?123 <|@
d <@d|@=== Debug Properties ===
bci: 63
bytecode: iconst_0
code: ResolvedJavaMethodBytecode<Matcher.reset()>
localsSize: 2
locksSize: 0
sourceFile: Matcher.java
sourceLine: 455
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
v657 v700 i702 i704 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@~|@floating>@ <|@
tid v786 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a699 
=== Succesors ===
=== Usages ===
v700 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a699  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v700 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140436756758528 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-54283|0xffffffffffff2bf5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
stamp: Klass*!(compressed base: 140436756758528 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?123 
guard: - 
address: v786 
lastLocationAccess: - 
=== Succesors ===
next: v317 
=== Usages ===
v678 
=== Predecessor ===
a699 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?123 guard: - address: v786 lastLocationAccess: - #next: v317  <|@  <|@
f <@~|@floating>@ <|@
tid v677 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 140436756758528 shift: 0)
stampKind: Klass*(compressed base: 140436756758528 shift: 0)
value: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v678 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v678 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v700 
y: v677 
=== Succesors ===
=== Usages ===
v317 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: v700 y: v677  <|@  <|@
f <@*|@fixed>@ <|@
tid v317 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v678 
=== Succesors ===
trueSuccessor: v314 
falseSuccessor: v316 
=== Usages ===
=== Predecessor ===
v700 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v678 #trueSuccessor: v314 #falseSuccessor: v316  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v314 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
stamp: void
=== Inputs ===
=== Succesors ===
next: a701 
=== Usages ===
=== Predecessor ===
v317 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a701  <|@  <|@
f <@~|@floating>@ <|@
tid v754 <|@
d <@d|@=== Debug Properties ===
displacement: 68
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a701 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a701 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# java.util.regex.IntHashSet[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Matcher.localsPos
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 67]
stamp: n# java.util.regex.IntHashSet[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v754 
lastLocationAccess: - 
=== Succesors ===
next: i702 
=== Usages ===
v755 
=== Predecessor ===
v314 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v754 lastLocationAccess: - #next: i702  <|@  <|@
f <@~|@floating>@ <|@
tid v755 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a701 
=== Succesors ===
=== Usages ===
i702 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a701  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i702 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-50955|0xffffffffffff38f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 70]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?123 
guard: - 
address: v755 
lastLocationAccess: - 
=== Succesors ===
next: a703 
=== Usages ===
v78 
=== Predecessor ===
a701 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?123 guard: - address: v755 lastLocationAccess: - #next: a703  <|@  <|@
f <@~|@floating>@ <|@
tid v759 <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a699 
=== Succesors ===
=== Usages ===
a703 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a699  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a703 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# byte[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.value
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 1]
at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
stamp: n# byte[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v759 
lastLocationAccess: - 
=== Succesors ===
next: i704 
=== Usages ===
v760 
=== Predecessor ===
i702 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v759 lastLocationAccess: - #next: i704  <|@  <|@
f <@~|@floating>@ <|@
tid v760 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a703 
=== Succesors ===
=== Usages ===
i704 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a703  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i704 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-56075|0xffffffffffff24f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 4]
at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?123 
guard: - 
address: v760 
lastLocationAccess: - 
=== Succesors ===
next: v332 
=== Usages ===
i90 
=== Predecessor ===
a703 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?123 guard: - address: v760 lastLocationAccess: - #next: v332  <|@  <|@
f <@~|@floating>@ <|@
tid v78 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 71]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i702 
y: i6 
=== Succesors ===
=== Usages ===
v332 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i702 y: i6  <|@  <|@
f <@*|@fixed>@ <|@
tid v332 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 71]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v78 
=== Succesors ===
trueSuccessor: v330 
falseSuccessor: v331 
=== Usages ===
=== Predecessor ===
i704 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v78 #trueSuccessor: v330 #falseSuccessor: v331  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v330 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:459) [bci: 98]
stamp: void
=== Inputs ===
=== Succesors ===
next: v205 
=== Usages ===
=== Predecessor ===
v332 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v205  <|@  <|@
f <@~|@floating>@ <|@
tid v756 <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v205 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v205 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Matcher.lastAppendPosition
location: Matcher.lastAppendPosition
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:459) [bci: 100]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v756 
lastLocationAccess: - 
value: i6 
stateAfter: - 
=== Succesors ===
next: v207 
=== Usages ===
=== Predecessor ===
v330 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v756 lastLocationAccess: - value: i6 stateAfter: - #next: v207  <|@  <|@
f <@~|@floating>@ <|@
tid v757 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v207 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v207 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Matcher.from
location: Matcher.from
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:460) [bci: 105]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v757 
lastLocationAccess: - 
value: i6 
stateAfter: - 
=== Succesors ===
next: i705 
=== Usages ===
=== Predecessor ===
v205 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v757 lastLocationAccess: - value: i6 stateAfter: - #next: i705  <|@  <|@
f <@~|@floating>@ <|@
tid v761 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a699 
=== Succesors ===
=== Usages ===
i705 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a699  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i705 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.coder
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.coder(String.java:4813) [bci: 7]
at java.lang.String.length(String.java:1519) [bci: 6]
at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v761 
lastLocationAccess: - 
=== Succesors ===
next: v227 
=== Usages ===
i225 
=== Predecessor ===
v207 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v761 lastLocationAccess: - #next: v227  <|@  <|@
f <@~|@floating>@ <|@
tid v762 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v227 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i225 <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.String.coder(String.java:4813) [bci: 7]
at java.lang.String.length(String.java:1519) [bci: 6]
at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
resultBits: 32
stamp: i32 [-128 - 127]
=== Inputs ===
value: i705 
=== Succesors ===
=== Usages ===
i90 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i705  <|@  <|@
f <@~|@floating>@ <|@
tid i90 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 9]
at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: i704 
y: i225 
=== Succesors ===
=== Usages ===
v227 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i704 y: i225  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v227 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Matcher.to
location: Matcher.to
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 113]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v762 
lastLocationAccess: - 
value: i90 
stateAfter: - 
=== Succesors ===
next: i706 
=== Usages ===
=== Predecessor ===
i705 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v762 lastLocationAccess: - value: i90 stateAfter: - #next: i706  <|@  <|@
f <@~|@floating>@ <|@
tid v763 <|@
d <@d|@=== Debug Properties ===
displacement: 44
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i706 v231 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i706 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Matcher.modCount
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:462) [bci: 118]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v763 
lastLocationAccess: - 
=== Succesors ===
next: v231 
=== Usages ===
i73 
=== Predecessor ===
v227 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v763 lastLocationAccess: - #next: v231  <|@  <|@
f <@~|@floating>@ <|@
tid i73 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:462) [bci: 122]
stamp: i32
=== Inputs ===
x: i706 
y: i27 
=== Succesors ===
=== Usages ===
v231 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i706 y: i27  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v231 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Matcher.modCount
location: Matcher.modCount
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:462) [bci: 123]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v763 
lastLocationAccess: - 
value: i73 
stateAfter: - 
=== Succesors ===
next: v76 
=== Usages ===
=== Predecessor ===
i706 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v763 lastLocationAccess: - value: i73 stateAfter: - #next: v76  <|@  <|@
f <@*|@fixed>@ <|@
tid v76 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:463) [bci: 127]
stamp: void
=== Inputs ===
memoryMap: - 
result: a1 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v231 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: a1  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v331 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 71]
stamp: void
=== Inputs ===
=== Succesors ===
next: v665 
=== Usages ===
=== Predecessor ===
v332 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v665  <|@  <|@
f <@~|@floating>@ <|@
tid j214 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 1]
at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
rawvalue: 20
stableDimension: 0
stamp: i64 [20]
stampKind: i64
value: long[20|0x14]
=== Inputs ===
=== Succesors ===
=== Usages ===
j656 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i666 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
rawvalue: -84243
stableDimension: 0
stamp: i32 [-84243]
stampKind: i32
value: int[-84243|0xfffffffffffeb6ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i655 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v665 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v652 
=== Predecessor ===
v331 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v316 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
stamp: void
=== Inputs ===
=== Succesors ===
next: v660 
=== Usages ===
=== Predecessor ===
v317 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v660  <|@  <|@
f <@~|@floating>@ <|@
tid j662 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
rawvalue: 660
stableDimension: 0
stamp: i64 [660]
stampKind: i64
value: long[660|0x294]
=== Inputs ===
=== Succesors ===
=== Usages ===
j656 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i661 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
rawvalue: -54579
stableDimension: 0
stamp: i32 [-54579]
stampKind: i32
value: int[-54579|0xffffffffffff2acd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i655 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v660 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v652 
=== Predecessor ===
v316 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B35" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i655 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
stamp: i32 [-84243 - -54579] bits:1...1xx01xxx1011x01101
valueDescription: i32
=== Inputs ===
merge: v652 
values: i661 i666 
=== Succesors ===
=== Usages ===
v657 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v652 values: i661 i666  <|@  <|@
f <@~|@floating>@ <|@
tid j656 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
stamp: i64 [20 - 660] bits:0...0x0x0010100
valueDescription: i64
=== Inputs ===
merge: v652 
values: j662 j214 
=== Succesors ===
=== Usages ===
v657 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v652 values: j662 j214  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v652 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v660 v665 
=== Succesors ===
next: v657 
=== Usages ===
i655 j656 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v660 v665 #next: v657  <|@  <|@
f <@*|@fixed>@ <|@
tid v657 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
stamp: void
=== Inputs ===
stateBefore: ?123 
actionAndReason: i655 
speculation: j656 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v652 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?123 actionAndReason: i655 speculation: j656  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v308 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
stamp: void
=== Inputs ===
=== Succesors ===
next: v787 
=== Usages ===
=== Predecessor ===
v692 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v787  <|@  <|@
f <@*|@fixed>@ <|@
tid v787 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 186
mayConvertToGuard: true
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 46]
reason: BoundsCheckException
speculation: {0x0000000000000818[index: 64, len: 24, hash: 0xbd8c5e84]: GuardMovement@2[HotSpotMethod<Matcher.reset()>, 41, BoundsCheckException]}
stamp: void
=== Inputs ===
stateBefore: ?107 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v308 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?107  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v300 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v299 
=== Usages ===
=== Predecessor ===
v684 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v299  <|@  <|@
tid ?10 <|@
d <@d|@=== Debug Properties ===
bci: 15
bytecode: iconst_0
code: ResolvedJavaMethodBytecode<Matcher.reset()>
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:450) [bci: 12]
sourceFile: Matcher.java
sourceLine: 451
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
v299 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@*|@fixed>@ <|@
tid v299 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 161
mayConvertToGuard: true
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
reason: BoundsCheckException
speculation: {0x0000000000000518[index: 40, len: 24, hash: 0xbc3a2a6c]: GuardMovement@2[HotSpotMethod<Matcher.reset()>, 17, BoundsCheckException]}
stamp: void
=== Inputs ===
stateBefore: ?10 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v300 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?10  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGeneration"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@59e1caa slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[_] = MOV [v0|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:448) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction v2|DWORD = MOV [v1|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 32] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 36] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.04762264888183043 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606753472112500193
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = DEC v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = MOVSXD v3|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOV v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v5|QWORD, y: v4|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B39" 
    xhandlers
    flags 
    probability 4602249872485129697
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v2|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B39 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602249872485129697
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602249872485129697
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606753472112500193
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v1|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v2|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v2|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1dd2cd05 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors "B8" "B9" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606840121128330737
    begin_IR
      LIR
      nr   -1  <|@ instruction [v8|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v6|DWORD, y: v8|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699158794208206
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v7|QWORD[.] + v8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = INC v8|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v9|DWORD] destination: B8 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606753472112500194
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = LEA [v2|DWORD - 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v8|DWORD] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" 
    successors "B11" "B12" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608039801321515939
    begin_IR
      LIR
      nr   -1  <|@ instruction [v11|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|DWORD, y: v11|DWORD) trueDestinationProbability: 0.19993647348429622 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B10" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597742867212592525
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v7|QWORD[.] + v11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOVSXD v11|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 20] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 24] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 28] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 32] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 36] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 40] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 44] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 48] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 52] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 56] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 60] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 64] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 68] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 72] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 76] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = LEA [v11|DWORD + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v13|DWORD] destination: B11 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606753472112500195
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v11|DWORD] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606840121128330739
    begin_IR
      LIR
      nr   -1  <|@ instruction [v14|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v14|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699158794208207
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v7|QWORD[.] + v14|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = INC v14|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v15|DWORD] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606753472112500196
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B1" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182418800017410
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v16|DWORD[_] = MOV [v0|QWORD[.] + 64] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: v0|QWORD[.] - 
>@ <|@ instruction v17|DWORD = MOV [v16|DWORD[_] * 8 + 12] size: DWORD state [bci:39] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v17|DWORD, y: v17|DWORD) trueDestinationProbability: 0.1430071915215746 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4605894324531121682
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = DEC v17|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = MOVSXD v18|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = MOV v17|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v20|QWORD, y: v19|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B38" 
    xhandlers
    flags 
    probability 4601390724903751186
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v17|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B20 -> B21 falseDestination: B20 -> B38 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601390724903751186
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601390724903751186
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B19" "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4605894324531121682
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v16|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v17|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v17|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[.] = UNCOMPRESSPOINTER (input: v16|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1dd2cd05 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B24" 
    successors "B24" "B25" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4605972295288554463
    begin_IR
      LIR
      nr   -1  <|@ instruction [v23|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v21|DWORD, y: v23|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B23" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576143750256751390
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v22|QWORD[.] + v23|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = INC v23|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v24|DWORD] destination: B24 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4605894324531121682
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = LEA [v17|DWORD - 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v23|DWORD] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B27" 
    successors "B27" "B28" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4608461061127032607
    begin_IR
      LIR
      nr   -1  <|@ instruction [v26|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v25|DWORD, y: v26|DWORD) trueDestinationProbability: 0.3325162586814181 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4601362377763758169
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v22|QWORD[.] + v26|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = MOVSXD v26|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 20] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 24] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 28] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = LEA [v26|DWORD + 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v28|DWORD] destination: B27 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4605894324531121681
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v26|DWORD] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors "B30" "B31" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4605972295288554462
    begin_IR
      LIR
      nr   -1  <|@ instruction [v29|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v17|DWORD, y: v29|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4576143750256751390
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v22|QWORD[.] + v29|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = INC v29|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v30|DWORD] destination: B30 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4605894324531121681
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B32" 
    xhandlers
    flags 
    probability 4594320397366118342
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B17 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B17" 
    successors "B33" "B36" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v31|DWORD[_] = MOV [v0|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
>@ <|@ instruction CMPCONSTBRANCH [v31|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B36 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:63] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v32|DWORD[_] = MOV [v0|QWORD[.] + 68] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
>@ <|@ instruction v33|DWORD = MOV [v32|DWORD[_] * 8 + 12] size: DWORD state [bci:63] <|@ <|@
      nr   -1  <|@ instruction v34|DWORD[_] = MOV [v31|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
>@ <|@ instruction v35|DWORD = MOV [v34|DWORD[_] * 8 + 12] size: DWORD state [bci:63] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v33|DWORD, y: v33|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 40] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = MOVSXB [v31|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v36|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = SHR (x: v35|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v37|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction INC [v0|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B16" 
    xhandlers
    flags 
    probability 4587023968036069872
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B1 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -41243 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 1304 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:451) [bci: 15]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:15] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-84243|0xfffffffffffeb6ed], long[20|0x14]] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -47643 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 2072 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:39] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-54579|0xffffffffffff2acd], long[660|0x294]] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B35" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v38|DWORD, v39|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v38|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v39|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:63] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_m1     
     2: putfield      #2          // first:int
     5: aload_0       
     6: iconst_0      
     7: putfield      #3          // last:int
    10: aload_0       
    11: iconst_m1     
    12: putfield      #4          // oldLast:int
    15: iconst_0      
    16: istore_1      
    17: iload_1       
    18: aload_0       
    19: getfield      #12         // groups:int[]
    22: arraylength   
    23: if_icmpge     39
    26: aload_0       
    27: getfield      #12         // groups:int[]
    30: iload_1       
    31: iconst_m1     
    32: iastore       
    33: iinc          
    36: goto          17
    39: iconst_0      
    40: istore_1      
    41: iload_1       
    42: aload_0       
    43: getfield      #14         // locals:int[]
    46: arraylength   
    47: if_icmpge     63
    50: aload_0       
    51: getfield      #14         // locals:int[]
    54: iload_1       
    55: iconst_m1     
    56: iastore       
    57: iinc          
    60: goto          41
    63: iconst_0      
    64: istore_1      
    65: iload_1       
    66: aload_0       
    67: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    70: arraylength   
    71: if_icmpge     98
    74: aload_0       
    75: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    78: iload_1       
    79: aaload        
    80: ifnull        92
    83: aload_0       
    84: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    87: iload_1       
    88: aaload        
    89: invokevirtual #32         // java.util.regex.IntHashSet.clear:()void
    92: iinc          
    95: goto          65
    98: aload_0       
    99: iconst_0      
   100: putfield      #5          // lastAppendPosition:int
   103: aload_0       
   104: iconst_0      
   105: putfield      #33         // from:int
   108: aload_0       
   109: aload_0       
   110: invokevirtual #34         // getTextLength:()int
   113: putfield      #35         // to:int
   116: aload_0       
   117: dup           
   118: getfield      #31         // modCount:int
   121: iconst_1      
   122: iadd          
   123: putfield      #31         // modCount:int
   126: aload_0       
   127: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a695 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: a695  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# java.util.regex.Matcher
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 v743 v763 v744 v757 v745 ?10 v754 v746 ?107 v762 v76 v756 v750 ?123 v758 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v746 <|@
result [v0|QWORD[.] + 56] <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a695 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a695 <|@
result v1|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# int[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Matcher.groups
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 19]
stamp: n# int[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v746 
lastLocationAccess: - 
=== Succesors ===
next: i696 
=== Usages ===
a141 v747 v748 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v746 lastLocationAccess: - #next: i696  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_0
code: ResolvedJavaMethodBytecode<Matcher.reset()>
localsSize: 2
locksSize: 0
sourceFile: Matcher.java
sourceLine: 448
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
i696 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@~|@floating>@ <|@
tid v747 <|@
result [v1|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a695 
=== Succesors ===
=== Usages ===
i696 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a695  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i696 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-36619|0xffffffffffff70f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 22]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v747 
lastLocationAccess: - 
=== Succesors ===
next: v131 
=== Usages ===
i377 v266 v149 j257 i288 i638 v355 v376 
=== Predecessor ===
a695 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v747 lastLocationAccess: - #next: v131  <|@  <|@
f <@~|@floating>@ <|@
tid v743 <|@
result [v0|QWORD[.] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v131 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i3 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:448) [bci: 1]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1]
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v131 v137 v167 v192 v158 v183 i288 i292 v346 v366 v390 v410 v433 v453 v475 v482 v497 v504 v523 v530 v537 v543 v567 v574 v581 v587 v595 v601 v607 v613 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v131 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Matcher.first
location: Matcher.first
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:448) [bci: 2]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v743 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v134 
=== Usages ===
=== Predecessor ===
i696 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v743 lastLocationAccess: - value: i3 stateAfter: - #next: v134  <|@  <|@
f <@~|@floating>@ <|@
tid v744 <|@
result [v0|QWORD[.] + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v134 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i6 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:449) [bci: 6]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v134 v149 v179 v78 v205 v207 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v134 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Matcher.last
location: Matcher.last
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:449) [bci: 7]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v744 
lastLocationAccess: - 
value: i6 
stateAfter: - 
=== Succesors ===
next: v137 
=== Usages ===
=== Predecessor ===
v131 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v744 lastLocationAccess: - value: i6 stateAfter: - #next: v137  <|@  <|@
f <@~|@floating>@ <|@
tid v745 <|@
result [v0|QWORD[.] + 36] <|@
d <@d|@=== Debug Properties ===
displacement: 36
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v137 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v137 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Matcher.oldLast
location: Matcher.oldLast
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:450) [bci: 12]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v745 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v97 
=== Usages ===
=== Predecessor ===
v134 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v745 lastLocationAccess: - value: i3 stateAfter: - #next: v97  <|@  <|@
f <@~|@floating>@ <|@
tid v149 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i696 
y: i6 
=== Succesors ===
=== Usages ===
v97 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i696 y: i6  <|@  <|@
f <@~|@floating>@ <|@
tid i27 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i28 i46 i73 i108 i124 i403 i359 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i375 <|@
result int[3|0x3] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 3
stableDimension: 0
stamp: i32 [3]
stampKind: i32
value: int[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
v376 v419 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i153 <|@
result int[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
rawvalue: 2
stableDimension: 0
stamp: i32 [2]
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i377 i420 v266 v280 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v97 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 23]
profileData: PROFILED designatedSuccessorProbability: 0.04762264888183043
stamp: void
=== Inputs ===
condition: v149 
=== Succesors ===
trueSuccessor: v95 
falseSuccessor: v96 
=== Usages ===
=== Predecessor ===
v137 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v149 #trueSuccessor: v95 #falseSuccessor: v96  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@59e1caa slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[_] = MOV [v0|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:448) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction v2|DWORD = MOV [v1|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 32] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 36] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.04762264888183043 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B16" 
    xhandlers
    flags 
    probability 4587023968036069872
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v95 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
stamp: void
=== Inputs ===
=== Succesors ===
next: v105 
=== Usages ===
=== Predecessor ===
v97 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v105  <|@  <|@
f <@*|@fixed>@ <|@
tid v105 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v103 
=== Predecessor ===
v95 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B1 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606753472112500193
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v96 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v686 
=== Usages ===
v158 
=== Predecessor ===
v97 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v686  <|@  <|@
f <@~|@floating>@ <|@
tid i288 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-1 - 2147483646]
=== Inputs ===
x: i696 
y: i3 
=== Succesors ===
=== Usages ===
j264 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i696 y: i3  <|@  <|@
f <@~|@floating>@ <|@
tid j264 <|@
result v4|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [-1 - 2147483646]
=== Inputs ===
value: i288 
=== Succesors ===
=== Usages ===
v265 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i288  <|@  <|@
f <@~|@floating>@ <|@
tid j257 <|@
result v5|QWORD <|@
d <@d|@=== Debug Properties ===
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i696 
=== Succesors ===
=== Usages ===
v265 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i696  <|@  <|@
f <@~|@floating>@ <|@
tid v265 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@40aab068
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j264 
y: j257 
=== Succesors ===
=== Usages ===
v686 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j264 y: j257  <|@  <|@
f <@*|@fixed>@ <|@
tid v686 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
profileData: INJECTED designatedSuccessorProbability: 0.5
stamp: void
=== Inputs ===
condition: v265 
=== Succesors ===
trueSuccessor: v682 
falseSuccessor: v685 
=== Usages ===
=== Predecessor ===
v96 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v265 #trueSuccessor: v682 #falseSuccessor: v685  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = DEC v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = MOVSXD v3|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOV v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v5|QWORD, y: v4|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602249872485129697
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v682 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v680 
=== Usages ===
=== Predecessor ===
v686 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v680  <|@  <|@
f <@*|@fixed>@ <|@
tid v680 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v679 
=== Predecessor ===
v682 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B39" 
    xhandlers
    flags 
    probability 4602249872485129697
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v685 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v684 
=== Usages ===
=== Predecessor ===
v686 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v684  <|@  <|@
f <@~|@floating>@ <|@
tid v266 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@40aab068
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i696 
y: i153 
=== Succesors ===
=== Usages ===
v684 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i696 y: i153  <|@  <|@
f <@*|@fixed>@ <|@
tid v684 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v266 
=== Succesors ===
trueSuccessor: v683 
falseSuccessor: v300 
=== Usages ===
=== Predecessor ===
v685 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v266 #trueSuccessor: v683 #falseSuccessor: v300  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v2|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B39 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602249872485129697
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v683 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v681 
=== Usages ===
=== Predecessor ===
v684 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v681  <|@  <|@
f <@*|@fixed>@ <|@
tid v681 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v679 
=== Predecessor ===
v683 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606753472112500193
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v679 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v680 v681 
=== Succesors ===
next: v158 
=== Usages ===
v271 v369 v349 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v680 v681 #next: v158  <|@  <|@
f <@~|@floating>@ <|@
tid v748 <|@
result [v1|DWORD[_] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a695 
=== Succesors ===
=== Usages ===
v158 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a695  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v158 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v96 
address: v748 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v12 
=== Usages ===
=== Predecessor ===
v679 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v96 address: v748 lastLocationAccess: - value: i3 stateAfter: - #next: v12  <|@  <|@
f <@~|@floating>@ <|@
tid v376 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@40aab068
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i696 
y: i375 
=== Succesors ===
=== Usages ===
i377 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i696 y: i375  <|@  <|@
f <@~|@floating>@ <|@
tid i377 <|@
result v6|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 2] bits:0...0xx
=== Inputs ===
condition: v376 
trueValue: i696 
falseValue: i153 
=== Succesors ===
=== Usages ===
v18 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v376 trueValue: i696 falseValue: i153  <|@  <|@
f <@~|@floating>@ <|@
tid a141 <|@
result v7|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 19]
op: Uncompress
stamp: a# int[]
=== Inputs ===
value: a695 
=== Succesors ===
=== Usages ===
v785 v784 v783 v749 v764 v765 v768 v770 v771 v774 v775 v776 v777 v778 v779 v780 v781 v782 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a695  <|@  <|@
f <@*|@fixed>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v13 
=== Predecessor ===
v158 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v1|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v2|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v2|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1dd2cd05 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors "B8" "B9" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606840121128330737
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i108 <|@
result v8|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 17]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v13 
values: i27 i28 
=== Succesors ===
=== Usages ===
i28 v18 v749 i341 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v13 values: i27 i28  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v13 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: -1
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 19.99841196321046
loopType: PRE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 17]
osrLoop: false
peelings: 1
rotated: false
splits: 2
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v12 
=== Succesors ===
next: v23 
=== Usages ===
i108 v20 v29 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v12 #next: v23  <|@  <|@
f <@~|@floating>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 23]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@4dc6bd49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i108 
y: i377 
=== Succesors ===
=== Usages ===
v23 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i108 y: i377  <|@  <|@
f <@*|@fixed>@ <|@
tid v23 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 23]
profileData: INJECTED designatedSuccessorProbability: 0.01
stamp: void
=== Inputs ===
condition: v18 
=== Succesors ===
trueSuccessor: v22 
falseSuccessor: v20 
=== Usages ===
=== Predecessor ===
v13 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v18 #trueSuccessor: v22 #falseSuccessor: v20  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v8|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v6|DWORD, y: v8|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699158794208206
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v22 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v167 
=== Usages ===
v271 
=== Predecessor ===
v23 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v167  <|@  <|@
f <@~|@floating>@ <|@
tid v271 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
=== Inputs ===
guards: v679 v22 
=== Succesors ===
=== Usages ===
v167 
=== Predecessor ===
- >@ <|@
instruction <@MultiGuard|@jdk.graal.compiler.nodes.extended.MultiGuardNode>@ guards: v679 v22  <|@  <|@
f <@~|@floating>@ <|@
tid v749 <|@
result [v7|QWORD[.] + v8|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a141 
index: i108 
=== Succesors ===
=== Usages ===
v167 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a141 index: i108  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v167 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v271 
address: v749 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v29 
=== Usages ===
=== Predecessor ===
v22 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v271 address: v749 lastLocationAccess: - value: i3 stateAfter: - #next: v29  <|@  <|@
f <@~|@floating>@ <|@
tid i28 <|@
result v9|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
stamp: i32
=== Inputs ===
x: i108 
y: i27 
=== Succesors ===
=== Usages ===
i108 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i108 y: i27  <|@  <|@
f <@*|@fixed>@ <|@
tid v29 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 17]
stamp: void
=== Inputs ===
loopBegin: v13 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v167 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v13  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v7|QWORD[.] + v8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = INC v8|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v9|DWORD] destination: B8 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606753472112500194
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v13 
=== Succesors ===
next: v350 
=== Usages ===
=== Predecessor ===
v23 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v13 #next: v350  <|@  <|@
f <@~|@floating>@ <|@
tid i637 <|@
result int[-16|0xfffffffffffffff0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -16
stableDimension: 0
stamp: i32 [-16]
stampKind: i32
value: int[-16|0xfffffffffffffff0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i638 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i638 <|@
result v10|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-16 - 2147483631]
=== Inputs ===
x: i696 
y: i637 
=== Succesors ===
=== Usages ===
v335 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i696 y: i637  <|@  <|@
f <@*|@fixed>@ <|@
tid v350 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v334 
=== Predecessor ===
v20 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = LEA [v2|DWORD - 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v8|DWORD] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" 
    successors "B11" "B12" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608039801321515939
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i341 <|@
result v11|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 17]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v334 
values: i108 i634 
=== Succesors ===
=== Usages ===
v335 j711 v764 i361 i634 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v334 values: i108 i634  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v334 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 13
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 19.99841196321046
loopType: MAIN_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 17]
osrLoop: false
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 16
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v350 
=== Succesors ===
next: v338 
=== Usages ===
v336 v340 i341 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v350 #next: v338  <|@  <|@
f <@~|@floating>@ <|@
tid v335 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 23]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@4dc6bd49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i341 
y: i638 
=== Succesors ===
=== Usages ===
v338 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i341 y: i638  <|@  <|@
f <@*|@fixed>@ <|@
tid v338 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 23]
profileData: INJECTED designatedSuccessorProbability: 0.19993647348429622
stamp: void
=== Inputs ===
condition: v335 
=== Succesors ===
trueSuccessor: v337 
falseSuccessor: v336 
=== Usages ===
=== Predecessor ===
v334 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v335 #trueSuccessor: v337 #falseSuccessor: v336  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v11|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|DWORD, y: v11|DWORD) trueDestinationProbability: 0.19993647348429622 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B10" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597742867212592525
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v337 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v346 
=== Usages ===
v349 
=== Predecessor ===
v338 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v346  <|@  <|@
f <@~|@floating>@ <|@
tid v349 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
=== Inputs ===
guards: v679 v337 
=== Succesors ===
=== Usages ===
v613 v346 v587 v433 v607 v475 v567 v482 v601 v523 v581 v530 v595 v537 v574 v543 
=== Predecessor ===
- >@ <|@
instruction <@MultiGuard|@jdk.graal.compiler.nodes.extended.MultiGuardNode>@ guards: v679 v337  <|@  <|@
f <@~|@floating>@ <|@
tid v764 <|@
result [v7|QWORD[.] + v11|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a141 
index: i341 
=== Succesors ===
=== Usages ===
v346 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a141 index: i341  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v346 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v349 
address: v764 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v433 
=== Usages ===
=== Predecessor ===
v337 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v349 address: v764 lastLocationAccess: - value: i3 stateAfter: - #next: v433  <|@  <|@
f <@~|@floating>@ <|@
tid j711 <|@
result v12|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i341 
=== Succesors ===
=== Usages ===
v768 v770 v771 v774 v775 v776 v777 v778 v779 v780 v781 v782 v783 v784 v785 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i341  <|@  <|@
f <@~|@floating>@ <|@
tid v768 <|@
result [v7|QWORD[.] + v12|QWORD * 4 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S4
=== Inputs ===
base: a141 
index: j711 
=== Succesors ===
=== Usages ===
v433 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a141 index: j711  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v433 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v349 
address: v768 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v475 
=== Usages ===
=== Predecessor ===
v346 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v349 address: v768 lastLocationAccess: - value: i3 stateAfter: - #next: v475  <|@  <|@
f <@~|@floating>@ <|@
tid v770 <|@
result [v7|QWORD[.] + v12|QWORD * 4 + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S4
=== Inputs ===
base: a141 
index: j711 
=== Succesors ===
=== Usages ===
v475 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a141 index: j711  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v475 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v349 
address: v770 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v482 
=== Usages ===
=== Predecessor ===
v433 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v349 address: v770 lastLocationAccess: - value: i3 stateAfter: - #next: v482  <|@  <|@
f <@~|@floating>@ <|@
tid v771 <|@
result [v7|QWORD[.] + v12|QWORD * 4 + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
stamp: void*
stride: S4
=== Inputs ===
base: a141 
index: j711 
=== Succesors ===
=== Usages ===
v482 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a141 index: j711  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v482 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v349 
address: v771 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v523 
=== Usages ===
=== Predecessor ===
v475 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v349 address: v771 lastLocationAccess: - value: i3 stateAfter: - #next: v523  <|@  <|@
f <@~|@floating>@ <|@
tid v774 <|@
result [v7|QWORD[.] + v12|QWORD * 4 + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
stamp: void*
stride: S4
=== Inputs ===
base: a141 
index: j711 
=== Succesors ===
=== Usages ===
v523 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a141 index: j711  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v523 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v349 
address: v774 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v530 
=== Usages ===
=== Predecessor ===
v482 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v349 address: v774 lastLocationAccess: - value: i3 stateAfter: - #next: v530  <|@  <|@
f <@~|@floating>@ <|@
tid v775 <|@
result [v7|QWORD[.] + v12|QWORD * 4 + 36] <|@
d <@d|@=== Debug Properties ===
displacement: 36
stamp: void*
stride: S4
=== Inputs ===
base: a141 
index: j711 
=== Succesors ===
=== Usages ===
v530 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a141 index: j711  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v530 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v349 
address: v775 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v537 
=== Usages ===
=== Predecessor ===
v523 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v349 address: v775 lastLocationAccess: - value: i3 stateAfter: - #next: v537  <|@  <|@
f <@~|@floating>@ <|@
tid v776 <|@
result [v7|QWORD[.] + v12|QWORD * 4 + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S4
=== Inputs ===
base: a141 
index: j711 
=== Succesors ===
=== Usages ===
v537 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a141 index: j711  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v537 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v349 
address: v776 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v543 
=== Usages ===
=== Predecessor ===
v530 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v349 address: v776 lastLocationAccess: - value: i3 stateAfter: - #next: v543  <|@  <|@
f <@~|@floating>@ <|@
tid v777 <|@
result [v7|QWORD[.] + v12|QWORD * 4 + 44] <|@
d <@d|@=== Debug Properties ===
displacement: 44
stamp: void*
stride: S4
=== Inputs ===
base: a141 
index: j711 
=== Succesors ===
=== Usages ===
v543 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a141 index: j711  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v543 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v349 
address: v777 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v567 
=== Usages ===
=== Predecessor ===
v537 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v349 address: v777 lastLocationAccess: - value: i3 stateAfter: - #next: v567  <|@  <|@
f <@~|@floating>@ <|@
tid v778 <|@
result [v7|QWORD[.] + v12|QWORD * 4 + 48] <|@
d <@d|@=== Debug Properties ===
displacement: 48
stamp: void*
stride: S4
=== Inputs ===
base: a141 
index: j711 
=== Succesors ===
=== Usages ===
v567 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a141 index: j711  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v567 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v349 
address: v778 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v574 
=== Usages ===
=== Predecessor ===
v543 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v349 address: v778 lastLocationAccess: - value: i3 stateAfter: - #next: v574  <|@  <|@
f <@~|@floating>@ <|@
tid v779 <|@
result [v7|QWORD[.] + v12|QWORD * 4 + 52] <|@
d <@d|@=== Debug Properties ===
displacement: 52
stamp: void*
stride: S4
=== Inputs ===
base: a141 
index: j711 
=== Succesors ===
=== Usages ===
v574 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a141 index: j711  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v574 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v349 
address: v779 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v581 
=== Usages ===
=== Predecessor ===
v567 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v349 address: v779 lastLocationAccess: - value: i3 stateAfter: - #next: v581  <|@  <|@
f <@~|@floating>@ <|@
tid v780 <|@
result [v7|QWORD[.] + v12|QWORD * 4 + 56] <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S4
=== Inputs ===
base: a141 
index: j711 
=== Succesors ===
=== Usages ===
v581 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a141 index: j711  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v581 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v349 
address: v780 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v587 
=== Usages ===
=== Predecessor ===
v574 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v349 address: v780 lastLocationAccess: - value: i3 stateAfter: - #next: v587  <|@  <|@
f <@~|@floating>@ <|@
tid v781 <|@
result [v7|QWORD[.] + v12|QWORD * 4 + 60] <|@
d <@d|@=== Debug Properties ===
displacement: 60
stamp: void*
stride: S4
=== Inputs ===
base: a141 
index: j711 
=== Succesors ===
=== Usages ===
v587 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a141 index: j711  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v587 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v349 
address: v781 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v595 
=== Usages ===
=== Predecessor ===
v581 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v349 address: v781 lastLocationAccess: - value: i3 stateAfter: - #next: v595  <|@  <|@
f <@~|@floating>@ <|@
tid v782 <|@
result [v7|QWORD[.] + v12|QWORD * 4 + 64] <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S4
=== Inputs ===
base: a141 
index: j711 
=== Succesors ===
=== Usages ===
v595 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a141 index: j711  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v595 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v349 
address: v782 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v601 
=== Usages ===
=== Predecessor ===
v587 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v349 address: v782 lastLocationAccess: - value: i3 stateAfter: - #next: v601  <|@  <|@
f <@~|@floating>@ <|@
tid v783 <|@
result [v7|QWORD[.] + v12|QWORD * 4 + 68] <|@
d <@d|@=== Debug Properties ===
displacement: 68
stamp: void*
stride: S4
=== Inputs ===
base: a141 
index: j711 
=== Succesors ===
=== Usages ===
v601 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a141 index: j711  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v601 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v349 
address: v783 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v607 
=== Usages ===
=== Predecessor ===
v595 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v349 address: v783 lastLocationAccess: - value: i3 stateAfter: - #next: v607  <|@  <|@
f <@~|@floating>@ <|@
tid v784 <|@
result [v7|QWORD[.] + v12|QWORD * 4 + 72] <|@
d <@d|@=== Debug Properties ===
displacement: 72
stamp: void*
stride: S4
=== Inputs ===
base: a141 
index: j711 
=== Succesors ===
=== Usages ===
v607 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a141 index: j711  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v607 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v349 
address: v784 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v613 
=== Usages ===
=== Predecessor ===
v601 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v349 address: v784 lastLocationAccess: - value: i3 stateAfter: - #next: v613  <|@  <|@
f <@~|@floating>@ <|@
tid v785 <|@
result [v7|QWORD[.] + v12|QWORD * 4 + 76] <|@
d <@d|@=== Debug Properties ===
displacement: 76
stamp: void*
stride: S4
=== Inputs ===
base: a141 
index: j711 
=== Succesors ===
=== Usages ===
v613 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a141 index: j711  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v613 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v349 
address: v785 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v340 
=== Usages ===
=== Predecessor ===
v607 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v349 address: v785 lastLocationAccess: - value: i3 stateAfter: - #next: v340  <|@  <|@
f <@~|@floating>@ <|@
tid i619 <|@
result int[16|0x10] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 16
stableDimension: 0
stamp: i32 [16]
stampKind: i32
value: int[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
i634 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i634 <|@
result v13|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
stamp: i32
=== Inputs ===
x: i341 
y: i619 
=== Succesors ===
=== Usages ===
i341 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i341 y: i619  <|@  <|@
f <@*|@fixed>@ <|@
tid v340 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 17]
stamp: void
=== Inputs ===
loopBegin: v334 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v613 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v334  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v7|QWORD[.] + v11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOVSXD v11|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 20] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 24] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 28] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 32] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 36] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 40] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 44] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 48] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 52] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 56] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 60] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 64] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 68] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 72] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 76] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = LEA [v11|DWORD + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v13|DWORD] destination: B11 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606753472112500195
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v336 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v334 
=== Succesors ===
next: v370 
=== Usages ===
=== Predecessor ===
v338 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v334 #next: v370  <|@  <|@
f <@*|@fixed>@ <|@
tid v370 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v354 
=== Predecessor ===
v336 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v11|DWORD] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606840121128330739
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i361 <|@
result v14|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 17]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v354 
values: i341 i359 
=== Succesors ===
=== Usages ===
v355 i359 v765 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v354 values: i341 i359  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v354 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 13
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 19.99841196321046
loopType: POST_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 17]
osrLoop: false
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v370 
=== Succesors ===
next: v358 
=== Usages ===
v356 v360 i361 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v370 #next: v358  <|@  <|@
f <@~|@floating>@ <|@
tid v355 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 23]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@4dc6bd49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i361 
y: i696 
=== Succesors ===
=== Usages ===
v358 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i361 y: i696  <|@  <|@
f <@*|@fixed>@ <|@
tid v358 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 23]
profileData: INJECTED designatedSuccessorProbability: 0.01
stamp: void
=== Inputs ===
condition: v355 
=== Succesors ===
trueSuccessor: v357 
falseSuccessor: v356 
=== Usages ===
=== Predecessor ===
v354 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v355 #trueSuccessor: v357 #falseSuccessor: v356  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v14|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v14|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699158794208207
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v357 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v366 
=== Usages ===
v369 
=== Predecessor ===
v358 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v366  <|@  <|@
f <@~|@floating>@ <|@
tid v369 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
=== Inputs ===
guards: v679 v357 
=== Succesors ===
=== Usages ===
v366 
=== Predecessor ===
- >@ <|@
instruction <@MultiGuard|@jdk.graal.compiler.nodes.extended.MultiGuardNode>@ guards: v679 v357  <|@  <|@
f <@~|@floating>@ <|@
tid v765 <|@
result [v7|QWORD[.] + v14|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a141 
index: i361 
=== Succesors ===
=== Usages ===
v366 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a141 index: i361  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v366 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v369 
address: v765 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v360 
=== Usages ===
=== Predecessor ===
v357 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v369 address: v765 lastLocationAccess: - value: i3 stateAfter: - #next: v360  <|@  <|@
f <@~|@floating>@ <|@
tid i359 <|@
result v15|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
stamp: i32
=== Inputs ===
x: i361 
y: i27 
=== Succesors ===
=== Usages ===
i361 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i361 y: i27  <|@  <|@
f <@*|@fixed>@ <|@
tid v360 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 17]
stamp: void
=== Inputs ===
loopBegin: v354 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v366 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v354  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v7|QWORD[.] + v14|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = INC v14|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v15|DWORD] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606753472112500196
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v356 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v354 
=== Succesors ===
next: v104 
=== Usages ===
=== Predecessor ===
v358 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v354 #next: v104  <|@  <|@
f <@*|@fixed>@ <|@
tid v104 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v103 
=== Predecessor ===
v356 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B1" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182418800017410
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v103 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v104 v105 
=== Succesors ===
next: a697 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v104 v105 #next: a697  <|@  <|@
f <@~|@floating>@ <|@
tid v750 <|@
result [v0|QWORD[.] + 64] <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a697 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a697 <|@
result v16|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# int[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Matcher.locals
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 43]
stamp: n# int[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v750 
lastLocationAccess: - 
=== Succesors ===
next: i698 
=== Usages ===
a172 v751 v752 
=== Predecessor ===
v103 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v750 lastLocationAccess: - #next: i698  <|@  <|@
tid ?107 <|@
d <@d|@=== Debug Properties ===
bci: 39
bytecode: iconst_0
code: ResolvedJavaMethodBytecode<Matcher.reset()>
localsSize: 2
locksSize: 0
sourceFile: Matcher.java
sourceLine: 453
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
v787 i698 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@~|@floating>@ <|@
tid v751 <|@
result [v16|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a697 
=== Succesors ===
=== Usages ===
i698 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a697  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i698 <|@
result v17|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-44555|0xffffffffffff51f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 46]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?107 
guard: - 
address: v751 
lastLocationAccess: - 
=== Succesors ===
next: v113 
=== Usages ===
i420 v280 v179 j272 i292 i641 v399 v419 
=== Predecessor ===
a697 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?107 guard: - address: v751 lastLocationAccess: - #next: v113  <|@  <|@
f <@~|@floating>@ <|@
tid v179 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i698 
y: i6 
=== Succesors ===
=== Usages ===
v113 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i698 y: i6  <|@  <|@
f <@*|@fixed>@ <|@
tid v113 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 47]
profileData: PROFILED designatedSuccessorProbability: 0.1430071915215746
stamp: void
=== Inputs ===
condition: v179 
=== Succesors ===
trueSuccessor: v111 
falseSuccessor: v112 
=== Usages ===
=== Predecessor ===
i698 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v179 #trueSuccessor: v111 #falseSuccessor: v112  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v16|DWORD[_] = MOV [v0|QWORD[.] + 64] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: v0|QWORD[.] - 
>@ <|@ instruction v17|DWORD = MOV [v16|DWORD[_] * 8 + 12] size: DWORD state [bci:39] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v17|DWORD, y: v17|DWORD) trueDestinationProbability: 0.1430071915215746 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B32" 
    xhandlers
    flags 
    probability 4594320397366118342
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v111 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
stamp: void
=== Inputs ===
=== Succesors ===
next: v121 
=== Usages ===
=== Predecessor ===
v113 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v121  <|@  <|@
f <@*|@fixed>@ <|@
tid v121 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v119 
=== Predecessor ===
v111 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B17 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4605894324531121682
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v112 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v694 
=== Usages ===
v183 
=== Predecessor ===
v113 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v694  <|@  <|@
f <@~|@floating>@ <|@
tid i292 <|@
result v18|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-1 - 2147483646]
=== Inputs ===
x: i698 
y: i3 
=== Succesors ===
=== Usages ===
j278 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i698 y: i3  <|@  <|@
f <@~|@floating>@ <|@
tid j278 <|@
result v19|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [-1 - 2147483646]
=== Inputs ===
value: i292 
=== Succesors ===
=== Usages ===
v279 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i292  <|@  <|@
f <@~|@floating>@ <|@
tid j272 <|@
result v20|QWORD <|@
d <@d|@=== Debug Properties ===
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i698 
=== Succesors ===
=== Usages ===
v279 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i698  <|@  <|@
f <@~|@floating>@ <|@
tid v279 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@40aab068
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j278 
y: j272 
=== Succesors ===
=== Usages ===
v694 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j278 y: j272  <|@  <|@
f <@*|@fixed>@ <|@
tid v694 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
profileData: INJECTED designatedSuccessorProbability: 0.5
stamp: void
=== Inputs ===
condition: v279 
=== Succesors ===
trueSuccessor: v690 
falseSuccessor: v693 
=== Usages ===
=== Predecessor ===
v112 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v279 #trueSuccessor: v690 #falseSuccessor: v693  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = DEC v17|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = MOVSXD v18|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = MOV v17|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v20|QWORD, y: v19|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601390724903751186
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v690 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
stamp: void
=== Inputs ===
=== Succesors ===
next: v688 
=== Usages ===
=== Predecessor ===
v694 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v688  <|@  <|@
f <@*|@fixed>@ <|@
tid v688 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v687 
=== Predecessor ===
v690 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B38" 
    xhandlers
    flags 
    probability 4601390724903751186
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v693 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
stamp: void
=== Inputs ===
=== Succesors ===
next: v692 
=== Usages ===
=== Predecessor ===
v694 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v692  <|@  <|@
f <@~|@floating>@ <|@
tid v280 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@40aab068
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i698 
y: i153 
=== Succesors ===
=== Usages ===
v692 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i698 y: i153  <|@  <|@
f <@*|@fixed>@ <|@
tid v692 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v280 
=== Succesors ===
trueSuccessor: v691 
falseSuccessor: v308 
=== Usages ===
=== Predecessor ===
v693 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v280 #trueSuccessor: v691 #falseSuccessor: v308  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v17|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B20 -> B21 falseDestination: B20 -> B38 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601390724903751186
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v691 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
stamp: void
=== Inputs ===
=== Succesors ===
next: v689 
=== Usages ===
=== Predecessor ===
v692 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v689  <|@  <|@
f <@*|@fixed>@ <|@
tid v689 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v687 
=== Predecessor ===
v691 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B19" "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4605894324531121682
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v687 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v688 v689 
=== Succesors ===
next: v183 
=== Usages ===
v285 v413 v393 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v688 v689 #next: v183  <|@  <|@
f <@~|@floating>@ <|@
tid v752 <|@
result [v16|DWORD[_] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a697 
=== Succesors ===
=== Usages ===
v183 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a697  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v183 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v112 
address: v752 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v31 
=== Usages ===
=== Predecessor ===
v687 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v112 address: v752 lastLocationAccess: - value: i3 stateAfter: - #next: v31  <|@  <|@
f <@~|@floating>@ <|@
tid v419 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@40aab068
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i698 
y: i375 
=== Succesors ===
=== Usages ===
i420 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i698 y: i375  <|@  <|@
f <@~|@floating>@ <|@
tid i420 <|@
result v21|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 2] bits:0...0xx
=== Inputs ===
condition: v419 
trueValue: i698 
falseValue: i153 
=== Succesors ===
=== Usages ===
v37 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v419 trueValue: i698 falseValue: i153  <|@  <|@
f <@~|@floating>@ <|@
tid a172 <|@
result v22|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 43]
op: Uncompress
stamp: a# int[]
=== Inputs ===
value: a697 
=== Succesors ===
=== Usages ===
v773 v772 v769 v753 v766 v767 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a697  <|@  <|@
f <@*|@fixed>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v32 
=== Predecessor ===
v183 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v16|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v17|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v17|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[.] = UNCOMPRESSPOINTER (input: v16|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1dd2cd05 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B24" 
    successors "B24" "B25" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4605972295288554463
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i124 <|@
result v23|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 41]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v32 
values: i27 i46 
=== Succesors ===
=== Usages ===
i46 v37 v753 i385 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v32 values: i27 i46  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v32 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: -1
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 5.992655329848474
loopType: PRE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 41]
osrLoop: false
peelings: 1
rotated: false
splits: 2
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v31 
=== Succesors ===
next: v42 
=== Usages ===
i124 v39 v47 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v31 #next: v42  <|@  <|@
f <@~|@floating>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 47]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@4dc6bd49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i124 
y: i420 
=== Succesors ===
=== Usages ===
v42 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i124 y: i420  <|@  <|@
f <@*|@fixed>@ <|@
tid v42 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 47]
profileData: INJECTED designatedSuccessorProbability: 0.01
stamp: void
=== Inputs ===
condition: v37 
=== Succesors ===
trueSuccessor: v41 
falseSuccessor: v39 
=== Usages ===
=== Predecessor ===
v32 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v37 #trueSuccessor: v41 #falseSuccessor: v39  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v23|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v21|DWORD, y: v23|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B23" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576143750256751390
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v41 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v192 
=== Usages ===
v285 
=== Predecessor ===
v42 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v192  <|@  <|@
f <@~|@floating>@ <|@
tid v285 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
stamp: void
=== Inputs ===
guards: v687 v41 
=== Succesors ===
=== Usages ===
v192 
=== Predecessor ===
- >@ <|@
instruction <@MultiGuard|@jdk.graal.compiler.nodes.extended.MultiGuardNode>@ guards: v687 v41  <|@  <|@
f <@~|@floating>@ <|@
tid v753 <|@
result [v22|QWORD[.] + v23|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a172 
index: i124 
=== Succesors ===
=== Usages ===
v192 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a172 index: i124  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v192 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v285 
address: v753 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v47 
=== Usages ===
=== Predecessor ===
v41 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v285 address: v753 lastLocationAccess: - value: i3 stateAfter: - #next: v47  <|@  <|@
f <@~|@floating>@ <|@
tid i46 <|@
result v24|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 57]
stamp: i32
=== Inputs ===
x: i124 
y: i27 
=== Succesors ===
=== Usages ===
i124 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i124 y: i27  <|@  <|@
f <@*|@fixed>@ <|@
tid v47 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 41]
stamp: void
=== Inputs ===
loopBegin: v32 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v192 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v32  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v22|QWORD[.] + v23|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = INC v23|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v24|DWORD] destination: B24 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4605894324531121682
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v39 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v32 
=== Succesors ===
next: v394 
=== Usages ===
=== Predecessor ===
v42 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v32 #next: v394  <|@  <|@
f <@~|@floating>@ <|@
tid i640 <|@
result int[-4|0xfffffffffffffffc] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4
stableDimension: 0
stamp: i32 [-4]
stampKind: i32
value: int[-4|0xfffffffffffffffc]
=== Inputs ===
=== Succesors ===
=== Usages ===
i641 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i641 <|@
result v25|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-4 - 2147483643]
=== Inputs ===
x: i698 
y: i640 
=== Succesors ===
=== Usages ===
v379 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i698 y: i640  <|@  <|@
f <@*|@fixed>@ <|@
tid v394 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v378 
=== Predecessor ===
v39 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = LEA [v17|DWORD - 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v23|DWORD] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B27" 
    successors "B27" "B28" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4608461061127032607
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i385 <|@
result v26|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 41]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v378 
values: i124 i510 
=== Succesors ===
=== Usages ===
v379 j739 v766 i405 i510 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v378 values: i124 i510  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v378 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 32
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 5.992655329848474
loopType: MAIN_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 41]
osrLoop: false
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 4
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v394 
=== Succesors ===
next: v382 
=== Usages ===
v380 v384 i385 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v394 #next: v382  <|@  <|@
f <@~|@floating>@ <|@
tid v379 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 47]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@4dc6bd49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i385 
y: i641 
=== Succesors ===
=== Usages ===
v382 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i385 y: i641  <|@  <|@
f <@*|@fixed>@ <|@
tid v382 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 47]
profileData: INJECTED designatedSuccessorProbability: 0.3325162586814181
stamp: void
=== Inputs ===
condition: v379 
=== Succesors ===
trueSuccessor: v381 
falseSuccessor: v380 
=== Usages ===
=== Predecessor ===
v378 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v379 #trueSuccessor: v381 #falseSuccessor: v380  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v26|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v25|DWORD, y: v26|DWORD) trueDestinationProbability: 0.3325162586814181 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4601362377763758169
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v381 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v390 
=== Usages ===
v393 
=== Predecessor ===
v382 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v390  <|@  <|@
f <@~|@floating>@ <|@
tid v393 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
stamp: void
=== Inputs ===
guards: v687 v381 
=== Succesors ===
=== Usages ===
v504 v390 v497 v453 
=== Predecessor ===
- >@ <|@
instruction <@MultiGuard|@jdk.graal.compiler.nodes.extended.MultiGuardNode>@ guards: v687 v381  <|@  <|@
f <@~|@floating>@ <|@
tid v766 <|@
result [v22|QWORD[.] + v26|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a172 
index: i385 
=== Succesors ===
=== Usages ===
v390 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a172 index: i385  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v390 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v393 
address: v766 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v453 
=== Usages ===
=== Predecessor ===
v381 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v393 address: v766 lastLocationAccess: - value: i3 stateAfter: - #next: v453  <|@  <|@
f <@~|@floating>@ <|@
tid j739 <|@
result v27|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i385 
=== Succesors ===
=== Usages ===
v769 v772 v773 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i385  <|@  <|@
f <@~|@floating>@ <|@
tid v769 <|@
result [v22|QWORD[.] + v27|QWORD * 4 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S4
=== Inputs ===
base: a172 
index: j739 
=== Succesors ===
=== Usages ===
v453 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a172 index: j739  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v453 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v393 
address: v769 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v497 
=== Usages ===
=== Predecessor ===
v390 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v393 address: v769 lastLocationAccess: - value: i3 stateAfter: - #next: v497  <|@  <|@
f <@~|@floating>@ <|@
tid v772 <|@
result [v22|QWORD[.] + v27|QWORD * 4 + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S4
=== Inputs ===
base: a172 
index: j739 
=== Succesors ===
=== Usages ===
v497 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a172 index: j739  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v497 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v393 
address: v772 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v504 
=== Usages ===
=== Predecessor ===
v453 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v393 address: v772 lastLocationAccess: - value: i3 stateAfter: - #next: v504  <|@  <|@
f <@~|@floating>@ <|@
tid v773 <|@
result [v22|QWORD[.] + v27|QWORD * 4 + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
stamp: void*
stride: S4
=== Inputs ===
base: a172 
index: j739 
=== Succesors ===
=== Usages ===
v504 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a172 index: j739  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v504 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v393 
address: v773 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v384 
=== Usages ===
=== Predecessor ===
v497 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v393 address: v773 lastLocationAccess: - value: i3 stateAfter: - #next: v384  <|@  <|@
f <@~|@floating>@ <|@
tid i485 <|@
result int[4|0x4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i32 [4]
stampKind: i32
value: int[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i510 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i510 <|@
result v28|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 57]
stamp: i32
=== Inputs ===
x: i385 
y: i485 
=== Succesors ===
=== Usages ===
i385 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i385 y: i485  <|@  <|@
f <@*|@fixed>@ <|@
tid v384 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 41]
stamp: void
=== Inputs ===
loopBegin: v378 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v504 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v378  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v22|QWORD[.] + v26|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = MOVSXD v26|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 20] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 24] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 28] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = LEA [v26|DWORD + 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v28|DWORD] destination: B27 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4605894324531121681
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v380 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v378 
=== Succesors ===
next: v414 
=== Usages ===
=== Predecessor ===
v382 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v378 #next: v414  <|@  <|@
f <@*|@fixed>@ <|@
tid v414 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v398 
=== Predecessor ===
v380 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v26|DWORD] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors "B30" "B31" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4605972295288554462
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i405 <|@
result v29|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 41]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v398 
values: i385 i403 
=== Succesors ===
=== Usages ===
v399 i403 v767 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v398 values: i385 i403  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v398 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 32
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 5.992655329848474
loopType: POST_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 41]
osrLoop: false
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v414 
=== Succesors ===
next: v402 
=== Usages ===
v400 v404 i405 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v414 #next: v402  <|@  <|@
f <@~|@floating>@ <|@
tid v399 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 47]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@4dc6bd49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i405 
y: i698 
=== Succesors ===
=== Usages ===
v402 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i405 y: i698  <|@  <|@
f <@*|@fixed>@ <|@
tid v402 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 47]
profileData: INJECTED designatedSuccessorProbability: 0.01
stamp: void
=== Inputs ===
condition: v399 
=== Succesors ===
trueSuccessor: v401 
falseSuccessor: v400 
=== Usages ===
=== Predecessor ===
v398 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v399 #trueSuccessor: v401 #falseSuccessor: v400  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v29|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v17|DWORD, y: v29|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4576143750256751390
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v401 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v410 
=== Usages ===
v413 
=== Predecessor ===
v402 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v410  <|@  <|@
f <@~|@floating>@ <|@
tid v413 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
stamp: void
=== Inputs ===
guards: v687 v401 
=== Succesors ===
=== Usages ===
v410 
=== Predecessor ===
- >@ <|@
instruction <@MultiGuard|@jdk.graal.compiler.nodes.extended.MultiGuardNode>@ guards: v687 v401  <|@  <|@
f <@~|@floating>@ <|@
tid v767 <|@
result [v22|QWORD[.] + v29|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a172 
index: i405 
=== Succesors ===
=== Usages ===
v410 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a172 index: i405  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v410 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v413 
address: v767 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v404 
=== Usages ===
=== Predecessor ===
v401 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v413 address: v767 lastLocationAccess: - value: i3 stateAfter: - #next: v404  <|@  <|@
f <@~|@floating>@ <|@
tid i403 <|@
result v30|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 57]
stamp: i32
=== Inputs ===
x: i405 
y: i27 
=== Succesors ===
=== Usages ===
i405 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i405 y: i27  <|@  <|@
f <@*|@fixed>@ <|@
tid v404 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 41]
stamp: void
=== Inputs ===
loopBegin: v398 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v410 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v398  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v22|QWORD[.] + v29|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = INC v29|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v30|DWORD] destination: B30 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4605894324531121681
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v400 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v398 
=== Succesors ===
next: v120 
=== Usages ===
=== Predecessor ===
v402 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v398 #next: v120  <|@  <|@
f <@*|@fixed>@ <|@
tid v120 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v119 
=== Predecessor ===
v400 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B17" 
    successors "B33" "B36" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v119 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v120 v121 
=== Succesors ===
next: a699 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v120 v121 #next: a699  <|@  <|@
f <@~|@floating>@ <|@
tid v758 <|@
result [v0|QWORD[.] + 60] <|@
d <@d|@=== Debug Properties ===
displacement: 60
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a699 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a699 <|@
result v31|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Matcher.text
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 1]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v758 
lastLocationAccess: - 
=== Succesors ===
next: v700 
=== Usages ===
v786 v759 v761 
=== Predecessor ===
v119 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v758 lastLocationAccess: - #next: v700  <|@  <|@
tid ?123 <|@
d <@d|@=== Debug Properties ===
bci: 63
bytecode: iconst_0
code: ResolvedJavaMethodBytecode<Matcher.reset()>
localsSize: 2
locksSize: 0
sourceFile: Matcher.java
sourceLine: 455
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
v657 v700 i702 i704 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@~|@floating>@ <|@
tid v786 <|@
result [v31|DWORD[_] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a699 
=== Succesors ===
=== Usages ===
v700 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a699  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v700 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140436756758528 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-54283|0xffffffffffff2bf5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
stamp: Klass*!(compressed base: 140436756758528 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?123 
guard: - 
address: v786 
lastLocationAccess: - 
=== Succesors ===
next: v317 
=== Usages ===
v678 
=== Predecessor ===
a699 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?123 guard: - address: v786 lastLocationAccess: - #next: v317  <|@  <|@
f <@~|@floating>@ <|@
tid v677 <|@
result meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 140436756758528 shift: 0)
stampKind: Klass*(compressed base: 140436756758528 shift: 0)
value: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v678 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v678 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v700 
y: v677 
=== Succesors ===
=== Usages ===
v317 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: v700 y: v677  <|@  <|@
f <@*|@fixed>@ <|@
tid v317 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v678 
=== Succesors ===
trueSuccessor: v314 
falseSuccessor: v316 
=== Usages ===
=== Predecessor ===
v700 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v678 #trueSuccessor: v314 #falseSuccessor: v316  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v31|DWORD[_] = MOV [v0|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
>@ <|@ instruction CMPCONSTBRANCH [v31|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B36 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:63] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v314 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
stamp: void
=== Inputs ===
=== Succesors ===
next: a701 
=== Usages ===
=== Predecessor ===
v317 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a701  <|@  <|@
f <@~|@floating>@ <|@
tid v754 <|@
result [v0|QWORD[.] + 68] <|@
d <@d|@=== Debug Properties ===
displacement: 68
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a701 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a701 <|@
result v32|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# java.util.regex.IntHashSet[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Matcher.localsPos
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 67]
stamp: n# java.util.regex.IntHashSet[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v754 
lastLocationAccess: - 
=== Succesors ===
next: i702 
=== Usages ===
v755 
=== Predecessor ===
v314 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v754 lastLocationAccess: - #next: i702  <|@  <|@
f <@~|@floating>@ <|@
tid v755 <|@
result [v32|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a701 
=== Succesors ===
=== Usages ===
i702 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a701  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i702 <|@
result v33|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-50955|0xffffffffffff38f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 70]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?123 
guard: - 
address: v755 
lastLocationAccess: - 
=== Succesors ===
next: a703 
=== Usages ===
v78 
=== Predecessor ===
a701 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?123 guard: - address: v755 lastLocationAccess: - #next: a703  <|@  <|@
f <@~|@floating>@ <|@
tid v759 <|@
result [v31|DWORD[_] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a699 
=== Succesors ===
=== Usages ===
a703 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a699  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a703 <|@
result v34|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# byte[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.value
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 1]
at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
stamp: n# byte[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v759 
lastLocationAccess: - 
=== Succesors ===
next: i704 
=== Usages ===
v760 
=== Predecessor ===
i702 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v759 lastLocationAccess: - #next: i704  <|@  <|@
f <@~|@floating>@ <|@
tid v760 <|@
result [v34|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a703 
=== Succesors ===
=== Usages ===
i704 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a703  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i704 <|@
result v35|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-56075|0xffffffffffff24f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 4]
at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?123 
guard: - 
address: v760 
lastLocationAccess: - 
=== Succesors ===
next: v332 
=== Usages ===
i90 
=== Predecessor ===
a703 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?123 guard: - address: v760 lastLocationAccess: - #next: v332  <|@  <|@
f <@~|@floating>@ <|@
tid v78 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 71]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i702 
y: i6 
=== Succesors ===
=== Usages ===
v332 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i702 y: i6  <|@  <|@
f <@*|@fixed>@ <|@
tid v332 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 71]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v78 
=== Succesors ===
trueSuccessor: v330 
falseSuccessor: v331 
=== Usages ===
=== Predecessor ===
i704 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v78 #trueSuccessor: v330 #falseSuccessor: v331  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v32|DWORD[_] = MOV [v0|QWORD[.] + 68] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
>@ <|@ instruction v33|DWORD = MOV [v32|DWORD[_] * 8 + 12] size: DWORD state [bci:63] <|@ <|@
      nr   -1  <|@ instruction v34|DWORD[_] = MOV [v31|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
>@ <|@ instruction v35|DWORD = MOV [v34|DWORD[_] * 8 + 12] size: DWORD state [bci:63] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v33|DWORD, y: v33|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v330 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:459) [bci: 98]
stamp: void
=== Inputs ===
=== Succesors ===
next: v205 
=== Usages ===
=== Predecessor ===
v332 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v205  <|@  <|@
f <@~|@floating>@ <|@
tid v756 <|@
result [v0|QWORD[.] + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v205 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v205 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Matcher.lastAppendPosition
location: Matcher.lastAppendPosition
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:459) [bci: 100]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v756 
lastLocationAccess: - 
value: i6 
stateAfter: - 
=== Succesors ===
next: v207 
=== Usages ===
=== Predecessor ===
v330 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v756 lastLocationAccess: - value: i6 stateAfter: - #next: v207  <|@  <|@
f <@~|@floating>@ <|@
tid v757 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v207 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v207 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Matcher.from
location: Matcher.from
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:460) [bci: 105]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v757 
lastLocationAccess: - 
value: i6 
stateAfter: - 
=== Succesors ===
next: i705 
=== Usages ===
=== Predecessor ===
v205 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v757 lastLocationAccess: - value: i6 stateAfter: - #next: i705  <|@  <|@
f <@~|@floating>@ <|@
tid v761 <|@
result [v31|DWORD[_] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a699 
=== Succesors ===
=== Usages ===
i705 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a699  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i705 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.coder
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.coder(String.java:4813) [bci: 7]
at java.lang.String.length(String.java:1519) [bci: 6]
at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v761 
lastLocationAccess: - 
=== Succesors ===
next: v227 
=== Usages ===
i225 
=== Predecessor ===
v207 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v761 lastLocationAccess: - #next: v227  <|@  <|@
f <@~|@floating>@ <|@
tid v762 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v227 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i225 <|@
result v36|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.String.coder(String.java:4813) [bci: 7]
at java.lang.String.length(String.java:1519) [bci: 6]
at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
resultBits: 32
stamp: i32 [-128 - 127]
=== Inputs ===
value: i705 
=== Succesors ===
=== Usages ===
i90 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i705  <|@  <|@
f <@~|@floating>@ <|@
tid i90 <|@
result v37|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 9]
at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: i704 
y: i225 
=== Succesors ===
=== Usages ===
v227 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i704 y: i225  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v227 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Matcher.to
location: Matcher.to
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 113]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v762 
lastLocationAccess: - 
value: i90 
stateAfter: - 
=== Succesors ===
next: i706 
=== Usages ===
=== Predecessor ===
i705 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v762 lastLocationAccess: - value: i90 stateAfter: - #next: i706  <|@  <|@
f <@~|@floating>@ <|@
tid v763 <|@
result [v0|QWORD[.] + 44] <|@
d <@d|@=== Debug Properties ===
displacement: 44
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i706 v231 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i706 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Matcher.modCount
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:462) [bci: 118]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v763 
lastLocationAccess: - 
=== Succesors ===
next: v231 
=== Usages ===
i73 
=== Predecessor ===
v227 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v763 lastLocationAccess: - #next: v231  <|@  <|@
f <@~|@floating>@ <|@
tid i73 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:462) [bci: 122]
stamp: i32
=== Inputs ===
x: i706 
y: i27 
=== Succesors ===
=== Usages ===
v231 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i706 y: i27  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v231 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Matcher.modCount
location: Matcher.modCount
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:462) [bci: 123]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v763 
lastLocationAccess: - 
value: i73 
stateAfter: - 
=== Succesors ===
next: v76 
=== Usages ===
=== Predecessor ===
i706 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v763 lastLocationAccess: - value: i73 stateAfter: - #next: v76  <|@  <|@
f <@*|@fixed>@ <|@
tid v76 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:463) [bci: 127]
stamp: void
=== Inputs ===
memoryMap: - 
result: a1 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v231 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: a1  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 40] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = MOVSXB [v31|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v36|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = SHR (x: v35|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v37|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction INC [v0|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v331 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 71]
stamp: void
=== Inputs ===
=== Succesors ===
next: v665 
=== Usages ===
=== Predecessor ===
v332 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v665  <|@  <|@
f <@~|@floating>@ <|@
tid j214 <|@
result long[20|0x14] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 1]
at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
rawvalue: 20
stableDimension: 0
stamp: i64 [20]
stampKind: i64
value: long[20|0x14]
=== Inputs ===
=== Succesors ===
=== Usages ===
j656 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i666 <|@
result int[-84243|0xfffffffffffeb6ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
rawvalue: -84243
stableDimension: 0
stamp: i32 [-84243]
stampKind: i32
value: int[-84243|0xfffffffffffeb6ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i655 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v665 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v652 
=== Predecessor ===
v331 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-84243|0xfffffffffffeb6ed], long[20|0x14]] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v316 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
stamp: void
=== Inputs ===
=== Succesors ===
next: v660 
=== Usages ===
=== Predecessor ===
v317 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v660  <|@  <|@
f <@~|@floating>@ <|@
tid j662 <|@
result long[660|0x294] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
rawvalue: 660
stableDimension: 0
stamp: i64 [660]
stampKind: i64
value: long[660|0x294]
=== Inputs ===
=== Succesors ===
=== Usages ===
j656 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i661 <|@
result int[-54579|0xffffffffffff2acd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
rawvalue: -54579
stableDimension: 0
stamp: i32 [-54579]
stampKind: i32
value: int[-54579|0xffffffffffff2acd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i655 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v660 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v652 
=== Predecessor ===
v316 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-54579|0xffffffffffff2acd], long[660|0x294]] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B35" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i655 <|@
result v38|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
stamp: i32 [-84243 - -54579] bits:1...1xx01xxx1011x01101
valueDescription: i32
=== Inputs ===
merge: v652 
values: i661 i666 
=== Succesors ===
=== Usages ===
v657 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v652 values: i661 i666  <|@  <|@
f <@~|@floating>@ <|@
tid j656 <|@
result v39|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
stamp: i64 [20 - 660] bits:0...0x0x0010100
valueDescription: i64
=== Inputs ===
merge: v652 
values: j662 j214 
=== Succesors ===
=== Usages ===
v657 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v652 values: j662 j214  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v652 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v660 v665 
=== Succesors ===
next: v657 
=== Usages ===
i655 j656 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v660 v665 #next: v657  <|@  <|@
f <@*|@fixed>@ <|@
tid v657 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
stamp: void
=== Inputs ===
stateBefore: ?123 
actionAndReason: i655 
speculation: j656 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v652 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?123 actionAndReason: i655 speculation: j656  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v38|DWORD, v39|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v38|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v39|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:63] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v308 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
stamp: void
=== Inputs ===
=== Succesors ===
next: v787 
=== Usages ===
=== Predecessor ===
v692 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v787  <|@  <|@
f <@*|@fixed>@ <|@
tid v787 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 186
mayConvertToGuard: true
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 46]
reason: BoundsCheckException
speculation: {0x0000000000000818[index: 64, len: 24, hash: 0xbd8c5e84]: GuardMovement@2[HotSpotMethod<Matcher.reset()>, 41, BoundsCheckException]}
stamp: void
=== Inputs ===
stateBefore: ?107 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v308 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?107  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -47643 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 2072 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:39] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v300 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v299 
=== Usages ===
=== Predecessor ===
v684 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v299  <|@  <|@
tid ?10 <|@
d <@d|@=== Debug Properties ===
bci: 15
bytecode: iconst_0
code: ResolvedJavaMethodBytecode<Matcher.reset()>
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:450) [bci: 12]
sourceFile: Matcher.java
sourceLine: 451
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
v299 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@*|@fixed>@ <|@
tid v299 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 161
mayConvertToGuard: true
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
reason: BoundsCheckException
speculation: {0x0000000000000518[index: 40, len: 24, hash: 0xbc3a2a6c]: GuardMovement@2[HotSpotMethod<Matcher.reset()>, 17, BoundsCheckException]}
stamp: void
=== Inputs ===
stateBefore: ?10 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v300 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?10  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -41243 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 1304 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:451) [bci: 15]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:15] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After ConstantLoadOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@59e1caa slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[_] = MOV [v0|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:448) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction v2|DWORD = MOV [v1|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 32] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 36] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.04762264888183043 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606753472112500193
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = DEC v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = MOVSXD v3|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOV v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v5|QWORD, y: v4|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B39" 
    xhandlers
    flags 
    probability 4602249872485129697
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v2|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B39 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602249872485129697
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602249872485129697
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606753472112500193
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v1|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v2|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v2|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1dd2cd05 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors "B8" "B9" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606840121128330737
    begin_IR
      LIR
      nr   -1  <|@ instruction [v8|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v6|DWORD, y: v8|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699158794208206
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v7|QWORD[.] + v8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = INC v8|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v9|DWORD] destination: B8 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606753472112500194
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = LEA [v2|DWORD - 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v8|DWORD] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" 
    successors "B11" "B12" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608039801321515939
    begin_IR
      LIR
      nr   -1  <|@ instruction [v11|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|DWORD, y: v11|DWORD) trueDestinationProbability: 0.19993647348429622 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B10" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597742867212592525
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v7|QWORD[.] + v11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOVSXD v11|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 20] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 24] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 28] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 32] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 36] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 40] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 44] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 48] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 52] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 56] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 60] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 64] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 68] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 72] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 76] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = LEA [v11|DWORD + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v13|DWORD] destination: B11 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606753472112500195
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v11|DWORD] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606840121128330739
    begin_IR
      LIR
      nr   -1  <|@ instruction [v14|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v14|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699158794208207
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v7|QWORD[.] + v14|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = INC v14|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v15|DWORD] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606753472112500196
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B1" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182418800017410
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v16|DWORD[_] = MOV [v0|QWORD[.] + 64] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: v0|QWORD[.] - 
>@ <|@ instruction v17|DWORD = MOV [v16|DWORD[_] * 8 + 12] size: DWORD state [bci:39] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v17|DWORD, y: v17|DWORD) trueDestinationProbability: 0.1430071915215746 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4605894324531121682
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = DEC v17|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = MOVSXD v18|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = MOV v17|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v20|QWORD, y: v19|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B38" 
    xhandlers
    flags 
    probability 4601390724903751186
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v17|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B20 -> B21 falseDestination: B20 -> B38 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601390724903751186
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601390724903751186
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B19" "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4605894324531121682
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v16|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v17|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v17|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[.] = UNCOMPRESSPOINTER (input: v16|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1dd2cd05 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B24" 
    successors "B24" "B25" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4605972295288554463
    begin_IR
      LIR
      nr   -1  <|@ instruction [v23|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v21|DWORD, y: v23|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B23" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576143750256751390
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v22|QWORD[.] + v23|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = INC v23|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v24|DWORD] destination: B24 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4605894324531121682
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = LEA [v17|DWORD - 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v23|DWORD] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B27" 
    successors "B27" "B28" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4608461061127032607
    begin_IR
      LIR
      nr   -1  <|@ instruction [v26|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v25|DWORD, y: v26|DWORD) trueDestinationProbability: 0.3325162586814181 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4601362377763758169
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v22|QWORD[.] + v26|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = MOVSXD v26|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 20] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 24] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 28] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = LEA [v26|DWORD + 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v28|DWORD] destination: B27 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4605894324531121681
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v26|DWORD] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors "B30" "B31" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4605972295288554462
    begin_IR
      LIR
      nr   -1  <|@ instruction [v29|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v17|DWORD, y: v29|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4576143750256751390
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v22|QWORD[.] + v29|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = INC v29|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v30|DWORD] destination: B30 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4605894324531121681
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B32" 
    xhandlers
    flags 
    probability 4594320397366118342
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B17 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B17" 
    successors "B33" "B36" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v31|DWORD[_] = MOV [v0|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
>@ <|@ instruction CMPCONSTBRANCH [v31|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B36 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:63] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v32|DWORD[_] = MOV [v0|QWORD[.] + 68] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
>@ <|@ instruction v33|DWORD = MOV [v32|DWORD[_] * 8 + 12] size: DWORD state [bci:63] <|@ <|@
      nr   -1  <|@ instruction v34|DWORD[_] = MOV [v31|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
>@ <|@ instruction v35|DWORD = MOV [v34|DWORD[_] * 8 + 12] size: DWORD state [bci:63] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v33|DWORD, y: v33|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 40] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = MOVSXB [v31|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v36|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = SHR (x: v35|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v37|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction INC [v0|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B16" 
    xhandlers
    flags 
    probability 4587023968036069872
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B1 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -41243 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 1304 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:451) [bci: 15]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:15] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-84243|0xfffffffffffeb6ed], long[20|0x14]] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -47643 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 2072 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:39] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-54579|0xffffffffffff2acd], long[660|0x294]] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B35" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v38|DWORD, v39|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v38|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v39|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:63] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_m1     
     2: putfield      #2          // first:int
     5: aload_0       
     6: iconst_0      
     7: putfield      #3          // last:int
    10: aload_0       
    11: iconst_m1     
    12: putfield      #4          // oldLast:int
    15: iconst_0      
    16: istore_1      
    17: iload_1       
    18: aload_0       
    19: getfield      #12         // groups:int[]
    22: arraylength   
    23: if_icmpge     39
    26: aload_0       
    27: getfield      #12         // groups:int[]
    30: iload_1       
    31: iconst_m1     
    32: iastore       
    33: iinc          
    36: goto          17
    39: iconst_0      
    40: istore_1      
    41: iload_1       
    42: aload_0       
    43: getfield      #14         // locals:int[]
    46: arraylength   
    47: if_icmpge     63
    50: aload_0       
    51: getfield      #14         // locals:int[]
    54: iload_1       
    55: iconst_m1     
    56: iastore       
    57: iinc          
    60: goto          41
    63: iconst_0      
    64: istore_1      
    65: iload_1       
    66: aload_0       
    67: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    70: arraylength   
    71: if_icmpge     98
    74: aload_0       
    75: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    78: iload_1       
    79: aaload        
    80: ifnull        92
    83: aload_0       
    84: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    87: iload_1       
    88: aaload        
    89: invokevirtual #32         // java.util.regex.IntHashSet.clear:()void
    92: iinc          
    95: goto          65
    98: aload_0       
    99: iconst_0      
   100: putfield      #5          // lastAppendPosition:int
   103: aload_0       
   104: iconst_0      
   105: putfield      #33         // from:int
   108: aload_0       
   109: aload_0       
   110: invokevirtual #34         // getTextLength:()int
   113: putfield      #35         // to:int
   116: aload_0       
   117: dup           
   118: getfield      #31         // modCount:int
   121: iconst_1      
   122: iadd          
   123: putfield      #31         // modCount:int
   126: aload_0       
   127: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After SaveCalleeSaveRegisters"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@59e1caa slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[_] = MOV [v0|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:448) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction v2|DWORD = MOV [v1|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 32] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 36] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.04762264888183043 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606753472112500193
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = DEC v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = MOVSXD v3|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOV v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v5|QWORD, y: v4|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B39" 
    xhandlers
    flags 
    probability 4602249872485129697
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v2|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B39 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602249872485129697
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602249872485129697
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606753472112500193
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v1|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v2|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v2|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1dd2cd05 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors "B8" "B9" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606840121128330737
    begin_IR
      LIR
      nr   -1  <|@ instruction [v8|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v6|DWORD, y: v8|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699158794208206
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v7|QWORD[.] + v8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = INC v8|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v9|DWORD] destination: B8 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606753472112500194
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = LEA [v2|DWORD - 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v8|DWORD] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" 
    successors "B11" "B12" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608039801321515939
    begin_IR
      LIR
      nr   -1  <|@ instruction [v11|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|DWORD, y: v11|DWORD) trueDestinationProbability: 0.19993647348429622 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B10" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597742867212592525
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v7|QWORD[.] + v11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOVSXD v11|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 20] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 24] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 28] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 32] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 36] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 40] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 44] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 48] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 52] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 56] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 60] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 64] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 68] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 72] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 76] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = LEA [v11|DWORD + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v13|DWORD] destination: B11 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606753472112500195
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v11|DWORD] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606840121128330739
    begin_IR
      LIR
      nr   -1  <|@ instruction [v14|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v14|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699158794208207
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v7|QWORD[.] + v14|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = INC v14|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v15|DWORD] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606753472112500196
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B1" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182418800017410
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v16|DWORD[_] = MOV [v0|QWORD[.] + 64] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: v0|QWORD[.] - 
>@ <|@ instruction v17|DWORD = MOV [v16|DWORD[_] * 8 + 12] size: DWORD state [bci:39] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v17|DWORD, y: v17|DWORD) trueDestinationProbability: 0.1430071915215746 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4605894324531121682
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = DEC v17|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = MOVSXD v18|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = MOV v17|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v20|QWORD, y: v19|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B38" 
    xhandlers
    flags 
    probability 4601390724903751186
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v17|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B20 -> B21 falseDestination: B20 -> B38 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601390724903751186
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601390724903751186
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B19" "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4605894324531121682
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v16|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v17|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v17|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[.] = UNCOMPRESSPOINTER (input: v16|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1dd2cd05 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B24" 
    successors "B24" "B25" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4605972295288554463
    begin_IR
      LIR
      nr   -1  <|@ instruction [v23|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v21|DWORD, y: v23|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B23" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576143750256751390
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v22|QWORD[.] + v23|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = INC v23|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v24|DWORD] destination: B24 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4605894324531121682
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = LEA [v17|DWORD - 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v23|DWORD] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B27" 
    successors "B27" "B28" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4608461061127032607
    begin_IR
      LIR
      nr   -1  <|@ instruction [v26|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v25|DWORD, y: v26|DWORD) trueDestinationProbability: 0.3325162586814181 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4601362377763758169
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v22|QWORD[.] + v26|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = MOVSXD v26|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 20] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 24] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 28] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = LEA [v26|DWORD + 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v28|DWORD] destination: B27 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4605894324531121681
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v26|DWORD] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors "B30" "B31" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4605972295288554462
    begin_IR
      LIR
      nr   -1  <|@ instruction [v29|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v17|DWORD, y: v29|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4576143750256751390
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v22|QWORD[.] + v29|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = INC v29|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v30|DWORD] destination: B30 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4605894324531121681
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B32" 
    xhandlers
    flags 
    probability 4594320397366118342
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B17 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B17" 
    successors "B33" "B36" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v31|DWORD[_] = MOV [v0|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
>@ <|@ instruction CMPCONSTBRANCH [v31|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B36 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:63] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v32|DWORD[_] = MOV [v0|QWORD[.] + 68] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
>@ <|@ instruction v33|DWORD = MOV [v32|DWORD[_] * 8 + 12] size: DWORD state [bci:63] <|@ <|@
      nr   -1  <|@ instruction v34|DWORD[_] = MOV [v31|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
>@ <|@ instruction v35|DWORD = MOV [v34|DWORD[_] * 8 + 12] size: DWORD state [bci:63] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v33|DWORD, y: v33|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 40] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = MOVSXB [v31|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v36|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = SHR (x: v35|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v37|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction INC [v0|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B16" 
    xhandlers
    flags 
    probability 4587023968036069872
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B1 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -41243 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 1304 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:451) [bci: 15]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:15] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-84243|0xfffffffffffeb6ed], long[20|0x14]] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -47643 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 2072 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:39] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-54579|0xffffffffffff2acd], long[660|0x294]] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B35" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v38|DWORD, v39|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v38|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v39|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:63] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_m1     
     2: putfield      #2          // first:int
     5: aload_0       
     6: iconst_0      
     7: putfield      #3          // last:int
    10: aload_0       
    11: iconst_m1     
    12: putfield      #4          // oldLast:int
    15: iconst_0      
    16: istore_1      
    17: iload_1       
    18: aload_0       
    19: getfield      #12         // groups:int[]
    22: arraylength   
    23: if_icmpge     39
    26: aload_0       
    27: getfield      #12         // groups:int[]
    30: iload_1       
    31: iconst_m1     
    32: iastore       
    33: iinc          
    36: goto          17
    39: iconst_0      
    40: istore_1      
    41: iload_1       
    42: aload_0       
    43: getfield      #14         // locals:int[]
    46: arraylength   
    47: if_icmpge     63
    50: aload_0       
    51: getfield      #14         // locals:int[]
    54: iload_1       
    55: iconst_m1     
    56: iastore       
    57: iinc          
    60: goto          41
    63: iconst_0      
    64: istore_1      
    65: iload_1       
    66: aload_0       
    67: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    70: arraylength   
    71: if_icmpge     98
    74: aload_0       
    75: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    78: iload_1       
    79: aaload        
    80: ifnull        92
    83: aload_0       
    84: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    87: iload_1       
    88: aaload        
    89: invokevirtual #32         // java.util.regex.IntHashSet.clear:()void
    92: iinc          
    95: goto          65
    98: aload_0       
    99: iconst_0      
   100: putfield      #5          // lastAppendPosition:int
   103: aload_0       
   104: iconst_0      
   105: putfield      #33         // from:int
   108: aload_0       
   109: aload_0       
   110: invokevirtual #34         // getTextLength:()int
   113: putfield      #35         // to:int
   116: aload_0       
   117: dup           
   118: getfield      #31         // modCount:int
   121: iconst_1      
   122: iadd          
   123: putfield      #31         // modCount:int
   126: aload_0       
   127: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@59e1caa slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[_] = MOV [v0|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:448) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction v2|DWORD = MOV [v1|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 32] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 36] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.04762264888183043 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606753472112500193
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = DEC v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = MOVSXD v3|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOV v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v5|QWORD, y: v4|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B39" 
    xhandlers
    flags 
    probability 4602249872485129697
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v2|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B39 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602249872485129697
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602249872485129697
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606753472112500193
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v1|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v2|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v2|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1dd2cd05 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors "B8" "B9" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606840121128330737
    begin_IR
      LIR
      nr   -1  <|@ instruction [v8|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v6|DWORD, y: v8|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699158794208206
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v7|QWORD[.] + v8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = INC v8|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v9|DWORD] destination: B8 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606753472112500194
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = LEA [v2|DWORD - 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v8|DWORD] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" 
    successors "B11" "B12" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608039801321515939
    begin_IR
      LIR
      nr   -1  <|@ instruction [v11|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|DWORD, y: v11|DWORD) trueDestinationProbability: 0.19993647348429622 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B10" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597742867212592525
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v7|QWORD[.] + v11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOVSXD v11|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 20] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 24] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 28] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 32] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 36] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 40] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 44] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 48] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 52] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 56] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 60] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 64] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 68] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 72] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 76] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = LEA [v11|DWORD + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v13|DWORD] destination: B11 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606753472112500195
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v11|DWORD] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606840121128330739
    begin_IR
      LIR
      nr   -1  <|@ instruction [v14|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v14|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699158794208207
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v7|QWORD[.] + v14|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = INC v14|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v15|DWORD] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606753472112500196
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B1" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182418800017410
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v16|DWORD[_] = MOV [v0|QWORD[.] + 64] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: v0|QWORD[.] - 
>@ <|@ instruction v17|DWORD = MOV [v16|DWORD[_] * 8 + 12] size: DWORD state [bci:39] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v17|DWORD, y: v17|DWORD) trueDestinationProbability: 0.1430071915215746 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4605894324531121682
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = DEC v17|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = MOVSXD v18|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = MOV v17|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v20|QWORD, y: v19|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B38" 
    xhandlers
    flags 
    probability 4601390724903751186
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v17|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B20 -> B21 falseDestination: B20 -> B38 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601390724903751186
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601390724903751186
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B19" "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4605894324531121682
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v16|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v17|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v17|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[.] = UNCOMPRESSPOINTER (input: v16|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1dd2cd05 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B24" 
    successors "B24" "B25" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4605972295288554463
    begin_IR
      LIR
      nr   -1  <|@ instruction [v23|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v21|DWORD, y: v23|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B23" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576143750256751390
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v22|QWORD[.] + v23|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = INC v23|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v24|DWORD] destination: B24 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4605894324531121682
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = LEA [v17|DWORD - 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v23|DWORD] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B27" 
    successors "B27" "B28" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4608461061127032607
    begin_IR
      LIR
      nr   -1  <|@ instruction [v26|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v25|DWORD, y: v26|DWORD) trueDestinationProbability: 0.3325162586814181 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4601362377763758169
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v22|QWORD[.] + v26|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = MOVSXD v26|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 20] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 24] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 28] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = LEA [v26|DWORD + 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v28|DWORD] destination: B27 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4605894324531121681
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v26|DWORD] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors "B30" "B31" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4605972295288554462
    begin_IR
      LIR
      nr   -1  <|@ instruction [v29|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v17|DWORD, y: v29|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4576143750256751390
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v22|QWORD[.] + v29|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = INC v29|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v30|DWORD] destination: B30 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4605894324531121681
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B32" 
    xhandlers
    flags 
    probability 4594320397366118342
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B17 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B17" 
    successors "B33" "B36" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v31|DWORD[_] = MOV [v0|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
>@ <|@ instruction CMPCONSTBRANCH [v31|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B36 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:63] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v32|DWORD[_] = MOV [v0|QWORD[.] + 68] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
>@ <|@ instruction v33|DWORD = MOV [v32|DWORD[_] * 8 + 12] size: DWORD state [bci:63] <|@ <|@
      nr   -1  <|@ instruction v34|DWORD[_] = MOV [v31|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
>@ <|@ instruction v35|DWORD = MOV [v34|DWORD[_] * 8 + 12] size: DWORD state [bci:63] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v33|DWORD, y: v33|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 40] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = MOVSXB [v31|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v36|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = SHR (x: v35|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v37|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction INC [v0|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B16" 
    xhandlers
    flags 
    probability 4587023968036069872
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B1 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -41243 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 1304 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:451) [bci: 15]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:15] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-84243|0xfffffffffffeb6ed], long[20|0x14]] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -47643 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 2072 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:39] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-54579|0xffffffffffff2acd], long[660|0x294]] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B35" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v38|DWORD, v39|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v38|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v39|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:63] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_m1     
     2: putfield      #2          // first:int
     5: aload_0       
     6: iconst_0      
     7: putfield      #3          // last:int
    10: aload_0       
    11: iconst_m1     
    12: putfield      #4          // oldLast:int
    15: iconst_0      
    16: istore_1      
    17: iload_1       
    18: aload_0       
    19: getfield      #12         // groups:int[]
    22: arraylength   
    23: if_icmpge     39
    26: aload_0       
    27: getfield      #12         // groups:int[]
    30: iload_1       
    31: iconst_m1     
    32: iastore       
    33: iinc          
    36: goto          17
    39: iconst_0      
    40: istore_1      
    41: iload_1       
    42: aload_0       
    43: getfield      #14         // locals:int[]
    46: arraylength   
    47: if_icmpge     63
    50: aload_0       
    51: getfield      #14         // locals:int[]
    54: iload_1       
    55: iconst_m1     
    56: iastore       
    57: iinc          
    60: goto          41
    63: iconst_0      
    64: istore_1      
    65: iload_1       
    66: aload_0       
    67: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    70: arraylength   
    71: if_icmpge     98
    74: aload_0       
    75: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    78: iload_1       
    79: aaload        
    80: ifnull        92
    83: aload_0       
    84: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    87: iload_1       
    88: aaload        
    89: invokevirtual #32         // java.util.regex.IntHashSet.clear:()void
    92: iinc          
    95: goto          65
    98: aload_0       
    99: iconst_0      
   100: putfield      #5          // lastAppendPosition:int
   103: aload_0       
   104: iconst_0      
   105: putfield      #33         // from:int
   108: aload_0       
   109: aload_0       
   110: invokevirtual #34         // getTextLength:()int
   113: putfield      #35         // to:int
   116: aload_0       
   117: dup           
   118: getfield      #31         // modCount:int
   121: iconst_1      
   122: iadd          
   123: putfield      #31         // modCount:int
   126: aload_0       
   127: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After MarkBasePointers"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@59e1caa slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[_] = MOV [v0|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:448) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction v2|DWORD = MOV [v1|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 32] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 36] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.04762264888183043 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606753472112500193
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = DEC v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = MOVSXD v3|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOV v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v5|QWORD, y: v4|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B39" 
    xhandlers
    flags 
    probability 4602249872485129697
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v2|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B39 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602249872485129697
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602249872485129697
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606753472112500193
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v1|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v2|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v2|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1dd2cd05 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors "B8" "B9" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606840121128330737
    begin_IR
      LIR
      nr   -1  <|@ instruction [v8|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v6|DWORD, y: v8|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699158794208206
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v7|QWORD[.] + v8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = INC v8|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v9|DWORD] destination: B8 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606753472112500194
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = LEA [v2|DWORD - 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v8|DWORD] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" 
    successors "B11" "B12" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608039801321515939
    begin_IR
      LIR
      nr   -1  <|@ instruction [v11|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|DWORD, y: v11|DWORD) trueDestinationProbability: 0.19993647348429622 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B10" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597742867212592525
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v7|QWORD[.] + v11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOVSXD v11|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 20] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 24] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 28] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 32] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 36] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 40] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 44] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 48] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 52] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 56] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 60] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 64] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 68] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 72] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 76] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = LEA [v11|DWORD + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v13|DWORD] destination: B11 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606753472112500195
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v11|DWORD] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606840121128330739
    begin_IR
      LIR
      nr   -1  <|@ instruction [v14|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v14|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699158794208207
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v7|QWORD[.] + v14|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = INC v14|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v15|DWORD] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606753472112500196
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B1" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182418800017410
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v16|DWORD[_] = MOV [v0|QWORD[.] + 64] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: v0|QWORD[.] - 
>@ <|@ instruction v17|DWORD = MOV [v16|DWORD[_] * 8 + 12] size: DWORD state [bci:39] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v17|DWORD, y: v17|DWORD) trueDestinationProbability: 0.1430071915215746 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4605894324531121682
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = DEC v17|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = MOVSXD v18|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = MOV v17|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v20|QWORD, y: v19|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B38" 
    xhandlers
    flags 
    probability 4601390724903751186
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v17|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B20 -> B21 falseDestination: B20 -> B38 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601390724903751186
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601390724903751186
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B19" "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4605894324531121682
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v16|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v17|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v17|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[.] = UNCOMPRESSPOINTER (input: v16|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1dd2cd05 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B24" 
    successors "B24" "B25" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4605972295288554463
    begin_IR
      LIR
      nr   -1  <|@ instruction [v23|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v21|DWORD, y: v23|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B23" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576143750256751390
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v22|QWORD[.] + v23|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = INC v23|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v24|DWORD] destination: B24 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4605894324531121682
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = LEA [v17|DWORD - 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v23|DWORD] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B27" 
    successors "B27" "B28" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4608461061127032607
    begin_IR
      LIR
      nr   -1  <|@ instruction [v26|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v25|DWORD, y: v26|DWORD) trueDestinationProbability: 0.3325162586814181 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4601362377763758169
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v22|QWORD[.] + v26|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = MOVSXD v26|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 20] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 24] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 28] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = LEA [v26|DWORD + 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v28|DWORD] destination: B27 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4605894324531121681
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v26|DWORD] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors "B30" "B31" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4605972295288554462
    begin_IR
      LIR
      nr   -1  <|@ instruction [v29|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v17|DWORD, y: v29|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4576143750256751390
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v22|QWORD[.] + v29|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = INC v29|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v30|DWORD] destination: B30 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4605894324531121681
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B32" 
    xhandlers
    flags 
    probability 4594320397366118342
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B17 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B17" 
    successors "B33" "B36" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v31|DWORD[_] = MOV [v0|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
>@ <|@ instruction CMPCONSTBRANCH [v31|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B36 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:63] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v32|DWORD[_] = MOV [v0|QWORD[.] + 68] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
>@ <|@ instruction v33|DWORD = MOV [v32|DWORD[_] * 8 + 12] size: DWORD state [bci:63] <|@ <|@
      nr   -1  <|@ instruction v34|DWORD[_] = MOV [v31|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
>@ <|@ instruction v35|DWORD = MOV [v34|DWORD[_] * 8 + 12] size: DWORD state [bci:63] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v33|DWORD, y: v33|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 40] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = MOVSXB [v31|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v36|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = SHR (x: v35|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v37|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction INC [v0|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B16" 
    xhandlers
    flags 
    probability 4587023968036069872
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B1 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -41243 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 1304 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:451) [bci: 15]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:15] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-84243|0xfffffffffffeb6ed], long[20|0x14]] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -47643 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 2072 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:39] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-54579|0xffffffffffff2acd], long[660|0x294]] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B35" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v38|DWORD, v39|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v38|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v39|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:63] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_m1     
     2: putfield      #2          // first:int
     5: aload_0       
     6: iconst_0      
     7: putfield      #3          // last:int
    10: aload_0       
    11: iconst_m1     
    12: putfield      #4          // oldLast:int
    15: iconst_0      
    16: istore_1      
    17: iload_1       
    18: aload_0       
    19: getfield      #12         // groups:int[]
    22: arraylength   
    23: if_icmpge     39
    26: aload_0       
    27: getfield      #12         // groups:int[]
    30: iload_1       
    31: iconst_m1     
    32: iastore       
    33: iinc          
    36: goto          17
    39: iconst_0      
    40: istore_1      
    41: iload_1       
    42: aload_0       
    43: getfield      #14         // locals:int[]
    46: arraylength   
    47: if_icmpge     63
    50: aload_0       
    51: getfield      #14         // locals:int[]
    54: iload_1       
    55: iconst_m1     
    56: iastore       
    57: iinc          
    60: goto          41
    63: iconst_0      
    64: istore_1      
    65: iload_1       
    66: aload_0       
    67: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    70: arraylength   
    71: if_icmpge     98
    74: aload_0       
    75: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    78: iload_1       
    79: aaload        
    80: ifnull        92
    83: aload_0       
    84: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    87: iload_1       
    88: aaload        
    89: invokevirtual #32         // java.util.regex.IntHashSet.clear:()void
    92: iinc          
    95: goto          65
    98: aload_0       
    99: iconst_0      
   100: putfield      #5          // lastAppendPosition:int
   103: aload_0       
   104: iconst_0      
   105: putfield      #33         // from:int
   108: aload_0       
   109: aload_0       
   110: invokevirtual #34         // getTextLength:()int
   113: putfield      #35         // to:int
   116: aload_0       
   117: dup           
   118: getfield      #31         // modCount:int
   121: iconst_1      
   122: iadd          
   123: putfield      #31         // modCount:int
   126: aload_0       
   127: areturn       
   <|@
end_bytecodes
begin_cfg
  name "Before register allocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@59e1caa slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD[_] = MOV [v0|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   10  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:448) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction v2|DWORD = MOV [v1|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction MOV [v0|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr   14  <|@ instruction MOV [v0|QWORD[.] + 32] y: 0 size: DWORD <|@ <|@
      nr   16  <|@ instruction MOV [v0|QWORD[.] + 36] y: -1 size: DWORD <|@ <|@
      nr   18  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.04762264888183043 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606753472112500193
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   22  <|@ instruction v3|DWORD = DEC v2|DWORD size: DWORD <|@ <|@
      nr   24  <|@ instruction v4|QWORD = MOVSXD v3|DWORD size: QWORD <|@ <|@
      nr   26  <|@ instruction v5|QWORD = MOV v2|DWORD size: DWORD <|@ <|@
      nr   28  <|@ instruction CMPBRANCH (x: v5|QWORD, y: v4|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B39" 
    xhandlers
    flags 
    probability 4602249872485129697
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   32  <|@ instruction CMPCONSTBRANCH v2|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B39 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602249872485129697
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   36  <|@ instruction JUMP ~[] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602249872485129697
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction JUMP ~[] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606753472112500193
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction MOV [v1|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr   46  <|@ instruction CMP v2|DWORD y: 3 size: DWORD <|@ <|@
      nr   48  <|@ instruction v6|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v2|DWORD) condition: |<| <|@ <|@
      nr   50  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1dd2cd05 encoding: base: 0 shift: 3 <|@ <|@
      nr   52  <|@ instruction JUMP ~[int[1|0x1]] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors "B8" "B9" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606840121128330737
    begin_IR
      LIR
      nr   54  <|@ instruction [v8|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   56  <|@ instruction CMPBRANCH (x: v6|DWORD, y: v8|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699158794208206
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction MOV [v7|QWORD[.] + v8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   62  <|@ instruction v9|DWORD = INC v8|DWORD size: DWORD <|@ <|@
      nr   64  <|@ instruction JUMP ~[v9|DWORD] destination: B8 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606753472112500194
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction v10|DWORD = LEA [v2|DWORD - 16] size: DWORD <|@ <|@
      nr   70  <|@ instruction JUMP ~[v8|DWORD] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" 
    successors "B11" "B12" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608039801321515939
    begin_IR
      LIR
      nr   72  <|@ instruction [v11|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   74  <|@ instruction CMPBRANCH (x: v10|DWORD, y: v11|DWORD) trueDestinationProbability: 0.19993647348429622 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B10" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597742867212592525
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction MOV [v7|QWORD[.] + v11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   80  <|@ instruction v12|QWORD = MOVSXD v11|DWORD size: QWORD <|@ <|@
      nr   82  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 20] y: -1 size: DWORD <|@ <|@
      nr   84  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 24] y: -1 size: DWORD <|@ <|@
      nr   86  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 28] y: -1 size: DWORD <|@ <|@
      nr   88  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 32] y: -1 size: DWORD <|@ <|@
      nr   90  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 36] y: -1 size: DWORD <|@ <|@
      nr   92  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 40] y: -1 size: DWORD <|@ <|@
      nr   94  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 44] y: -1 size: DWORD <|@ <|@
      nr   96  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 48] y: -1 size: DWORD <|@ <|@
      nr   98  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 52] y: -1 size: DWORD <|@ <|@
      nr  100  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 56] y: -1 size: DWORD <|@ <|@
      nr  102  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 60] y: -1 size: DWORD <|@ <|@
      nr  104  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 64] y: -1 size: DWORD <|@ <|@
      nr  106  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 68] y: -1 size: DWORD <|@ <|@
      nr  108  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 72] y: -1 size: DWORD <|@ <|@
      nr  110  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 76] y: -1 size: DWORD <|@ <|@
      nr  112  <|@ instruction v13|DWORD = LEA [v11|DWORD + 16] size: DWORD <|@ <|@
      nr  114  <|@ instruction JUMP ~[v13|DWORD] destination: B11 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606753472112500195
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction JUMP ~[v11|DWORD] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606840121128330739
    begin_IR
      LIR
      nr  120  <|@ instruction [v14|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  122  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v14|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699158794208207
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction MOV [v7|QWORD[.] + v14|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  128  <|@ instruction v15|DWORD = INC v14|DWORD size: DWORD <|@ <|@
      nr  130  <|@ instruction JUMP ~[v15|DWORD] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606753472112500196
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  134  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B1" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182418800017410
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction v16|DWORD[_] = MOV [v0|QWORD[.] + 64] size: DWORD <|@ <|@
      nr  140  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: v0|QWORD[.] - 
>@ <|@ instruction v17|DWORD = MOV [v16|DWORD[_] * 8 + 12] size: DWORD state [bci:39] <|@ <|@
      nr  142  <|@ instruction TESTBRANCH (x: v17|DWORD, y: v17|DWORD) trueDestinationProbability: 0.1430071915215746 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4605894324531121682
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  146  <|@ instruction v18|DWORD = DEC v17|DWORD size: DWORD <|@ <|@
      nr  148  <|@ instruction v19|QWORD = MOVSXD v18|DWORD size: QWORD <|@ <|@
      nr  150  <|@ instruction v20|QWORD = MOV v17|DWORD size: DWORD <|@ <|@
      nr  152  <|@ instruction CMPBRANCH (x: v20|QWORD, y: v19|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B38" 
    xhandlers
    flags 
    probability 4601390724903751186
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction CMPCONSTBRANCH v17|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B20 -> B21 falseDestination: B20 -> B38 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601390724903751186
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601390724903751186
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction JUMP ~[] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B19" "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4605894324531121682
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction MOV [v16|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr  170  <|@ instruction CMP v17|DWORD y: 3 size: DWORD <|@ <|@
      nr  172  <|@ instruction v21|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v17|DWORD) condition: |<| <|@ <|@
      nr  174  <|@ instruction v22|QWORD[.] = UNCOMPRESSPOINTER (input: v16|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1dd2cd05 encoding: base: 0 shift: 3 <|@ <|@
      nr  176  <|@ instruction JUMP ~[int[1|0x1]] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B24" 
    successors "B24" "B25" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4605972295288554463
    begin_IR
      LIR
      nr  178  <|@ instruction [v23|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  180  <|@ instruction CMPBRANCH (x: v21|DWORD, y: v23|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B23" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576143750256751390
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction MOV [v22|QWORD[.] + v23|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  186  <|@ instruction v24|DWORD = INC v23|DWORD size: DWORD <|@ <|@
      nr  188  <|@ instruction JUMP ~[v24|DWORD] destination: B24 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4605894324531121682
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction v25|DWORD = LEA [v17|DWORD - 4] size: DWORD <|@ <|@
      nr  194  <|@ instruction JUMP ~[v23|DWORD] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B27" 
    successors "B27" "B28" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4608461061127032607
    begin_IR
      LIR
      nr  196  <|@ instruction [v26|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  198  <|@ instruction CMPBRANCH (x: v25|DWORD, y: v26|DWORD) trueDestinationProbability: 0.3325162586814181 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4601362377763758169
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction MOV [v22|QWORD[.] + v26|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  204  <|@ instruction v27|QWORD = MOVSXD v26|DWORD size: QWORD <|@ <|@
      nr  206  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 20] y: -1 size: DWORD <|@ <|@
      nr  208  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 24] y: -1 size: DWORD <|@ <|@
      nr  210  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 28] y: -1 size: DWORD <|@ <|@
      nr  212  <|@ instruction v28|DWORD = LEA [v26|DWORD + 4] size: DWORD <|@ <|@
      nr  214  <|@ instruction JUMP ~[v28|DWORD] destination: B27 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4605894324531121681
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction JUMP ~[v26|DWORD] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors "B30" "B31" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4605972295288554462
    begin_IR
      LIR
      nr  220  <|@ instruction [v29|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  222  <|@ instruction CMPBRANCH (x: v17|DWORD, y: v29|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4576143750256751390
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction MOV [v22|QWORD[.] + v29|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  228  <|@ instruction v30|DWORD = INC v29|DWORD size: DWORD <|@ <|@
      nr  230  <|@ instruction JUMP ~[v30|DWORD] destination: B30 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4605894324531121681
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B32" 
    xhandlers
    flags 
    probability 4594320397366118342
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction JUMP ~[] destination: B17 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B17" 
    successors "B33" "B36" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction v31|DWORD[_] = MOV [v0|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  244  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
>@ <|@ instruction CMPCONSTBRANCH [v31|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B36 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:63] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction v32|DWORD[_] = MOV [v0|QWORD[.] + 68] size: DWORD <|@ <|@
      nr  250  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
>@ <|@ instruction v33|DWORD = MOV [v32|DWORD[_] * 8 + 12] size: DWORD state [bci:63] <|@ <|@
      nr  252  <|@ instruction v34|DWORD[_] = MOV [v31|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  254  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
>@ <|@ instruction v35|DWORD = MOV [v34|DWORD[_] * 8 + 12] size: DWORD state [bci:63] <|@ <|@
      nr  256  <|@ instruction TESTBRANCH (x: v33|DWORD, y: v33|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction MOV [v0|QWORD[.] + 40] y: 0 size: DWORD <|@ <|@
      nr  262  <|@ instruction MOV [v0|QWORD[.] + 12] y: 0 size: DWORD <|@ <|@
      nr  264  <|@ instruction v36|DWORD = MOVSXB [v31|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  266  <|@ instruction rcx|DWORD = MOVE v36|DWORD moveKind: DWORD <|@ <|@
      nr  268  <|@ instruction v37|DWORD = SHR (x: v35|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  270  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v37|DWORD) size: DWORD <|@ <|@
      nr  272  <|@ instruction INC [v0|QWORD[.] + 44] size: DWORD <|@ <|@
      nr  274  <|@ instruction rax|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  276  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B16" 
    xhandlers
    flags 
    probability 4587023968036069872
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction JUMP ~[] destination: B1 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  284  <|@ instruction MOV [r15|QWORD + 1156] y: -41243 size: DWORD <|@ <|@
      nr  286  <|@ instruction MOV [r15|QWORD + 1168] y: 1304 size: QWORD <|@ <|@
      nr  288  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:451) [bci: 15]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:15] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  292  <|@ instruction JUMP ~[int[-84243|0xfffffffffffeb6ed], long[20|0x14]] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  296  <|@ instruction MOV [r15|QWORD + 1156] y: -47643 size: DWORD <|@ <|@
      nr  298  <|@ instruction MOV [r15|QWORD + 1168] y: 2072 size: QWORD <|@ <|@
      nr  300  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:39] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  304  <|@ instruction JUMP ~[int[-54579|0xffffffffffff2acd], long[660|0x294]] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B35" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  306  <|@ instruction [v38|DWORD, v39|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  308  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v38|DWORD) size: DWORD <|@ <|@
      nr  310  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v39|QWORD) size: QWORD <|@ <|@
      nr  312  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:63] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_m1     
     2: putfield      #2          // first:int
     5: aload_0       
     6: iconst_0      
     7: putfield      #3          // last:int
    10: aload_0       
    11: iconst_m1     
    12: putfield      #4          // oldLast:int
    15: iconst_0      
    16: istore_1      
    17: iload_1       
    18: aload_0       
    19: getfield      #12         // groups:int[]
    22: arraylength   
    23: if_icmpge     39
    26: aload_0       
    27: getfield      #12         // groups:int[]
    30: iload_1       
    31: iconst_m1     
    32: iastore       
    33: iinc          
    36: goto          17
    39: iconst_0      
    40: istore_1      
    41: iload_1       
    42: aload_0       
    43: getfield      #14         // locals:int[]
    46: arraylength   
    47: if_icmpge     63
    50: aload_0       
    51: getfield      #14         // locals:int[]
    54: iload_1       
    55: iconst_m1     
    56: iastore       
    57: iinc          
    60: goto          41
    63: iconst_0      
    64: istore_1      
    65: iload_1       
    66: aload_0       
    67: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    70: arraylength   
    71: if_icmpge     98
    74: aload_0       
    75: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    78: iload_1       
    79: aaload        
    80: ifnull        92
    83: aload_0       
    84: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    87: iload_1       
    88: aaload        
    89: invokevirtual #32         // java.util.regex.IntHashSet.clear:()void
    92: iinc          
    95: goto          65
    98: aload_0       
    99: iconst_0      
   100: putfield      #5          // lastAppendPosition:int
   103: aload_0       
   104: iconst_0      
   105: putfield      #33         // from:int
   108: aload_0       
   109: aload_0       
   110: invokevirtual #34         // getTextLength:()int
   113: putfield      #35         // to:int
   116: aload_0       
   117: dup           
   118: getfield      #31         // modCount:int
   121: iconst_1      
   122: iadd          
   123: putfield      #31         // modCount:int
   126: aload_0       
   127: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanLifetimeAnalysis"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@59e1caa slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD[_] = MOV [v0|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   10  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:448) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction v2|DWORD = MOV [v1|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction MOV [v0|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr   14  <|@ instruction MOV [v0|QWORD[.] + 32] y: 0 size: DWORD <|@ <|@
      nr   16  <|@ instruction MOV [v0|QWORD[.] + 36] y: -1 size: DWORD <|@ <|@
      nr   18  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.04762264888183043 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606753472112500193
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   22  <|@ instruction v3|DWORD = DEC v2|DWORD size: DWORD <|@ <|@
      nr   24  <|@ instruction v4|QWORD = MOVSXD v3|DWORD size: QWORD <|@ <|@
      nr   26  <|@ instruction v5|QWORD = MOV v2|DWORD size: DWORD <|@ <|@
      nr   28  <|@ instruction CMPBRANCH (x: v5|QWORD, y: v4|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B39" 
    xhandlers
    flags 
    probability 4602249872485129697
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   32  <|@ instruction CMPCONSTBRANCH v2|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B39 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602249872485129697
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   36  <|@ instruction JUMP ~[] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602249872485129697
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction JUMP ~[] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606753472112500193
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction MOV [v1|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr   46  <|@ instruction CMP v2|DWORD y: 3 size: DWORD <|@ <|@
      nr   48  <|@ instruction v6|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v2|DWORD) condition: |<| <|@ <|@
      nr   50  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1dd2cd05 encoding: base: 0 shift: 3 <|@ <|@
      nr   52  <|@ instruction JUMP ~[int[1|0x1]] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors "B8" "B9" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606840121128330737
    begin_IR
      LIR
      nr   54  <|@ instruction [v8|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   56  <|@ instruction CMPBRANCH (x: v6|DWORD, y: v8|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699158794208206
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction MOV [v7|QWORD[.] + v8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   62  <|@ instruction v9|DWORD = INC v8|DWORD size: DWORD <|@ <|@
      nr   64  <|@ instruction JUMP ~[v9|DWORD] destination: B8 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606753472112500194
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction v10|DWORD = LEA [v2|DWORD - 16] size: DWORD <|@ <|@
      nr   70  <|@ instruction JUMP ~[v8|DWORD] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" 
    successors "B11" "B12" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608039801321515939
    begin_IR
      LIR
      nr   72  <|@ instruction [v11|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   74  <|@ instruction CMPBRANCH (x: v10|DWORD, y: v11|DWORD) trueDestinationProbability: 0.19993647348429622 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B10" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597742867212592525
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction MOV [v7|QWORD[.] + v11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   80  <|@ instruction v12|QWORD = MOVSXD v11|DWORD size: QWORD <|@ <|@
      nr   82  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 20] y: -1 size: DWORD <|@ <|@
      nr   84  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 24] y: -1 size: DWORD <|@ <|@
      nr   86  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 28] y: -1 size: DWORD <|@ <|@
      nr   88  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 32] y: -1 size: DWORD <|@ <|@
      nr   90  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 36] y: -1 size: DWORD <|@ <|@
      nr   92  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 40] y: -1 size: DWORD <|@ <|@
      nr   94  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 44] y: -1 size: DWORD <|@ <|@
      nr   96  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 48] y: -1 size: DWORD <|@ <|@
      nr   98  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 52] y: -1 size: DWORD <|@ <|@
      nr  100  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 56] y: -1 size: DWORD <|@ <|@
      nr  102  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 60] y: -1 size: DWORD <|@ <|@
      nr  104  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 64] y: -1 size: DWORD <|@ <|@
      nr  106  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 68] y: -1 size: DWORD <|@ <|@
      nr  108  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 72] y: -1 size: DWORD <|@ <|@
      nr  110  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 76] y: -1 size: DWORD <|@ <|@
      nr  112  <|@ instruction v13|DWORD = LEA [v11|DWORD + 16] size: DWORD <|@ <|@
      nr  114  <|@ instruction JUMP ~[v13|DWORD] destination: B11 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606753472112500195
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction JUMP ~[v11|DWORD] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606840121128330739
    begin_IR
      LIR
      nr  120  <|@ instruction [v14|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  122  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v14|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699158794208207
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction MOV [v7|QWORD[.] + v14|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  128  <|@ instruction v15|DWORD = INC v14|DWORD size: DWORD <|@ <|@
      nr  130  <|@ instruction JUMP ~[v15|DWORD] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606753472112500196
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  134  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B1" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182418800017410
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction v16|DWORD[_] = MOV [v0|QWORD[.] + 64] size: DWORD <|@ <|@
      nr  140  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: v0|QWORD[.] - 
>@ <|@ instruction v17|DWORD = MOV [v16|DWORD[_] * 8 + 12] size: DWORD state [bci:39] <|@ <|@
      nr  142  <|@ instruction TESTBRANCH (x: v17|DWORD, y: v17|DWORD) trueDestinationProbability: 0.1430071915215746 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4605894324531121682
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  146  <|@ instruction v18|DWORD = DEC v17|DWORD size: DWORD <|@ <|@
      nr  148  <|@ instruction v19|QWORD = MOVSXD v18|DWORD size: QWORD <|@ <|@
      nr  150  <|@ instruction v20|QWORD = MOV v17|DWORD size: DWORD <|@ <|@
      nr  152  <|@ instruction CMPBRANCH (x: v20|QWORD, y: v19|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B38" 
    xhandlers
    flags 
    probability 4601390724903751186
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction CMPCONSTBRANCH v17|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B20 -> B21 falseDestination: B20 -> B38 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601390724903751186
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601390724903751186
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction JUMP ~[] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B19" "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4605894324531121682
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction MOV [v16|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr  170  <|@ instruction CMP v17|DWORD y: 3 size: DWORD <|@ <|@
      nr  172  <|@ instruction v21|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v17|DWORD) condition: |<| <|@ <|@
      nr  174  <|@ instruction v22|QWORD[.] = UNCOMPRESSPOINTER (input: v16|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1dd2cd05 encoding: base: 0 shift: 3 <|@ <|@
      nr  176  <|@ instruction JUMP ~[int[1|0x1]] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B24" 
    successors "B24" "B25" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4605972295288554463
    begin_IR
      LIR
      nr  178  <|@ instruction [v23|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  180  <|@ instruction CMPBRANCH (x: v21|DWORD, y: v23|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B23" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576143750256751390
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction MOV [v22|QWORD[.] + v23|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  186  <|@ instruction v24|DWORD = INC v23|DWORD size: DWORD <|@ <|@
      nr  188  <|@ instruction JUMP ~[v24|DWORD] destination: B24 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4605894324531121682
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction v25|DWORD = LEA [v17|DWORD - 4] size: DWORD <|@ <|@
      nr  194  <|@ instruction JUMP ~[v23|DWORD] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B27" 
    successors "B27" "B28" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4608461061127032607
    begin_IR
      LIR
      nr  196  <|@ instruction [v26|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  198  <|@ instruction CMPBRANCH (x: v25|DWORD, y: v26|DWORD) trueDestinationProbability: 0.3325162586814181 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4601362377763758169
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction MOV [v22|QWORD[.] + v26|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  204  <|@ instruction v27|QWORD = MOVSXD v26|DWORD size: QWORD <|@ <|@
      nr  206  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 20] y: -1 size: DWORD <|@ <|@
      nr  208  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 24] y: -1 size: DWORD <|@ <|@
      nr  210  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 28] y: -1 size: DWORD <|@ <|@
      nr  212  <|@ instruction v28|DWORD = LEA [v26|DWORD + 4] size: DWORD <|@ <|@
      nr  214  <|@ instruction JUMP ~[v28|DWORD] destination: B27 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4605894324531121681
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction JUMP ~[v26|DWORD] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors "B30" "B31" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4605972295288554462
    begin_IR
      LIR
      nr  220  <|@ instruction [v29|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  222  <|@ instruction CMPBRANCH (x: v17|DWORD, y: v29|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4576143750256751390
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction MOV [v22|QWORD[.] + v29|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  228  <|@ instruction v30|DWORD = INC v29|DWORD size: DWORD <|@ <|@
      nr  230  <|@ instruction JUMP ~[v30|DWORD] destination: B30 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4605894324531121681
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B32" 
    xhandlers
    flags 
    probability 4594320397366118342
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction JUMP ~[] destination: B17 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B17" 
    successors "B33" "B36" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction v31|DWORD[_] = MOV [v0|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  244  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
>@ <|@ instruction CMPCONSTBRANCH [v31|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B36 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:63] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction v32|DWORD[_] = MOV [v0|QWORD[.] + 68] size: DWORD <|@ <|@
      nr  250  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
>@ <|@ instruction v33|DWORD = MOV [v32|DWORD[_] * 8 + 12] size: DWORD state [bci:63] <|@ <|@
      nr  252  <|@ instruction v34|DWORD[_] = MOV [v31|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  254  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
>@ <|@ instruction v35|DWORD = MOV [v34|DWORD[_] * 8 + 12] size: DWORD state [bci:63] <|@ <|@
      nr  256  <|@ instruction TESTBRANCH (x: v33|DWORD, y: v33|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction MOV [v0|QWORD[.] + 40] y: 0 size: DWORD <|@ <|@
      nr  262  <|@ instruction MOV [v0|QWORD[.] + 12] y: 0 size: DWORD <|@ <|@
      nr  264  <|@ instruction v36|DWORD = MOVSXB [v31|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  266  <|@ instruction rcx|DWORD = MOVE v36|DWORD moveKind: DWORD <|@ <|@
      nr  268  <|@ instruction v37|DWORD = SHR (x: v35|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  270  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v37|DWORD) size: DWORD <|@ <|@
      nr  272  <|@ instruction INC [v0|QWORD[.] + 44] size: DWORD <|@ <|@
      nr  274  <|@ instruction rax|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  276  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B16" 
    xhandlers
    flags 
    probability 4587023968036069872
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction JUMP ~[] destination: B1 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  284  <|@ instruction MOV [r15|QWORD + 1156] y: -41243 size: DWORD <|@ <|@
      nr  286  <|@ instruction MOV [r15|QWORD + 1168] y: 1304 size: QWORD <|@ <|@
      nr  288  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:451) [bci: 15]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:15] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  292  <|@ instruction JUMP ~[int[-84243|0xfffffffffffeb6ed], long[20|0x14]] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  296  <|@ instruction MOV [r15|QWORD + 1156] y: -47643 size: DWORD <|@ <|@
      nr  298  <|@ instruction MOV [r15|QWORD + 1168] y: 2072 size: QWORD <|@ <|@
      nr  300  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:39] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  304  <|@ instruction JUMP ~[int[-54579|0xffffffffffff2acd], long[660|0x294]] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B35" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  306  <|@ instruction [v38|DWORD, v39|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  308  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v38|DWORD) size: DWORD <|@ <|@
      nr  310  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v39|QWORD) size: QWORD <|@ <|@
      nr  312  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:63] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_m1     
     2: putfield      #2          // first:int
     5: aload_0       
     6: iconst_0      
     7: putfield      #3          // last:int
    10: aload_0       
    11: iconst_m1     
    12: putfield      #4          // oldLast:int
    15: iconst_0      
    16: istore_1      
    17: iload_1       
    18: aload_0       
    19: getfield      #12         // groups:int[]
    22: arraylength   
    23: if_icmpge     39
    26: aload_0       
    27: getfield      #12         // groups:int[]
    30: iload_1       
    31: iconst_m1     
    32: iastore       
    33: iinc          
    36: goto          17
    39: iconst_0      
    40: istore_1      
    41: iload_1       
    42: aload_0       
    43: getfield      #14         // locals:int[]
    46: arraylength   
    47: if_icmpge     63
    50: aload_0       
    51: getfield      #14         // locals:int[]
    54: iload_1       
    55: iconst_m1     
    56: iastore       
    57: iinc          
    60: goto          41
    63: iconst_0      
    64: istore_1      
    65: iload_1       
    66: aload_0       
    67: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    70: arraylength   
    71: if_icmpge     98
    74: aload_0       
    75: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    78: iload_1       
    79: aaload        
    80: ifnull        92
    83: aload_0       
    84: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    87: iload_1       
    88: aaload        
    89: invokevirtual #32         // java.util.regex.IntHashSet.clear:()void
    92: iinc          
    95: goto          65
    98: aload_0       
    99: iconst_0      
   100: putfield      #5          // lastAppendPosition:int
   103: aload_0       
   104: iconst_0      
   105: putfield      #33         // from:int
   108: aload_0       
   109: aload_0       
   110: invokevirtual #34         // getTextLength:()int
   113: putfield      #35         // to:int
   116: aload_0       
   117: dup           
   118: getfield      #31         // modCount:int
   121: iconst_1      
   122: iadd          
   123: putfield      #31         // modCount:int
   126: aload_0       
   127: areturn       
   <|@
end_bytecodes
begin_intervals
  name "Before register allocation"
  rax|q fixed "[rax|q]" rax|q v0|q [0, 1[[274, 276[ "NoSpillStore"
  rcx|d fixed "[rcx|d]" rcx|d v36|d [0, 1[[266, 269[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 2[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q -1 [0, 6[ "NoSpillStore"
  v0|q QWORD "[v0|q]" v0|q rsi|q [6, 274[[278, 289[[290, 301[[302, 313[6 MustHaveRegister 8 MustHaveRegister 12 MustHaveRegister 14 MustHaveRegister 16 MustHaveRegister 138 MustHaveRegister 242 MustHaveRegister 248 MustHaveRegister 260 MustHaveRegister 262 MustHaveRegister 270 MustHaveRegister 272 MustHaveRegister 274 ShouldHaveRegister  "NoSpillStore"
  v1|d DWORD "[v1|d]" v1|d -1 [8, 50[8 MustHaveRegister 10 MustHaveRegister 44 MustHaveRegister 50 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[v2|d]" v2|d -1 [10, 132[10 MustHaveRegister 18 MustHaveRegister 22 ShouldHaveRegister 26 ShouldHaveRegister 32 ShouldHaveRegister 46 ShouldHaveRegister 48 MustHaveRegister 68 MustHaveRegister 122 MustHaveRegister 131 LiveAtLoopEnd  "NoSpillStore"
  v3|d DWORD "[v3|d]" v3|d v2|d [22, 24[22 MustHaveRegister 24 ShouldHaveRegister  "NoSpillStore"
  v4|q QWORD "[v4|q]" v4|q -1 [24, 28[24 MustHaveRegister 28 ShouldHaveRegister  "NoSpillStore"
  v5|q QWORD "[v5|q]" v5|q -1 [26, 28[26 MustHaveRegister 28 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[v6|d]" v6|d -1 [48, 66[48 MustHaveRegister 56 MustHaveRegister 65 LiveAtLoopEnd  "NoSpillStore"
  v7|q QWORD "[v7|q]" v7|q v1|d [50, 132[50 MustHaveRegister 60 MustHaveRegister 65 LiveAtLoopEnd 78 MustHaveRegister 82 MustHaveRegister 84 MustHaveRegister 86 MustHaveRegister 88 MustHaveRegister 90 MustHaveRegister 92 MustHaveRegister 94 MustHaveRegister 96 MustHaveRegister 98 MustHaveRegister 100 MustHaveRegister 102 MustHaveRegister 104 MustHaveRegister 106 MustHaveRegister 108 MustHaveRegister 110 MustHaveRegister 115 LiveAtLoopEnd 126 MustHaveRegister 131 LiveAtLoopEnd  "NoSpillStore"
  v8|d DWORD "[v8|d]" v8|d v9|d [54, 62[[66, 71[56 ShouldHaveRegister 60 MustHaveRegister 62 ShouldHaveRegister 70 ShouldHaveRegister  "NoSpillStore"
  v9|d DWORD "[v9|d]" v9|d v8|d [62, 65[62 MustHaveRegister 64 ShouldHaveRegister  "NoSpillStore"
  v10|d DWORD "[v10|d]" v10|d -1 [68, 116[68 MustHaveRegister 74 MustHaveRegister 115 LiveAtLoopEnd  "NoSpillStore"
  v11|d DWORD "[v11|d]" v11|d v8|d [72, 112[[116, 119[74 ShouldHaveRegister 78 MustHaveRegister 80 ShouldHaveRegister 112 MustHaveRegister 118 ShouldHaveRegister  "NoSpillStore"
  v12|q QWORD "[v12|q]" v12|q -1 [80, 110[80 MustHaveRegister 82 MustHaveRegister 84 MustHaveRegister 86 MustHaveRegister 88 MustHaveRegister 90 MustHaveRegister 92 MustHaveRegister 94 MustHaveRegister 96 MustHaveRegister 98 MustHaveRegister 100 MustHaveRegister 102 MustHaveRegister 104 MustHaveRegister 106 MustHaveRegister 108 MustHaveRegister 110 MustHaveRegister  "NoSpillStore"
  v13|d DWORD "[v13|d]" v13|d -1 [112, 115[112 MustHaveRegister 114 ShouldHaveRegister  "NoSpillStore"
  v14|d DWORD "[v14|d]" v14|d v11|d [120, 128[122 ShouldHaveRegister 126 MustHaveRegister 128 ShouldHaveRegister  "NoSpillStore"
  v15|d DWORD "[v15|d]" v15|d v14|d [128, 131[128 MustHaveRegister 130 ShouldHaveRegister  "NoSpillStore"
  v16|d DWORD "[v16|d]" v16|d -1 [138, 174[138 MustHaveRegister 140 MustHaveRegister 168 MustHaveRegister 174 MustHaveRegister  "NoSpillStore"
  v17|d DWORD "[v17|d]" v17|d -1 [140, 232[140 MustHaveRegister 142 MustHaveRegister 146 ShouldHaveRegister 150 ShouldHaveRegister 156 ShouldHaveRegister 170 ShouldHaveRegister 172 MustHaveRegister 192 MustHaveRegister 222 MustHaveRegister 231 LiveAtLoopEnd  "NoSpillStore"
  v18|d DWORD "[v18|d]" v18|d v17|d [146, 148[146 MustHaveRegister 148 ShouldHaveRegister  "NoSpillStore"
  v19|q QWORD "[v19|q]" v19|q -1 [148, 152[148 MustHaveRegister 152 ShouldHaveRegister  "NoSpillStore"
  v20|q QWORD "[v20|q]" v20|q -1 [150, 152[150 MustHaveRegister 152 MustHaveRegister  "NoSpillStore"
  v21|d DWORD "[v21|d]" v21|d -1 [172, 190[172 MustHaveRegister 180 MustHaveRegister 189 LiveAtLoopEnd  "NoSpillStore"
  v22|q QWORD "[v22|q]" v22|q v16|d [174, 232[174 MustHaveRegister 184 MustHaveRegister 189 LiveAtLoopEnd 202 MustHaveRegister 206 MustHaveRegister 208 MustHaveRegister 210 MustHaveRegister 215 LiveAtLoopEnd 226 MustHaveRegister 231 LiveAtLoopEnd  "NoSpillStore"
  v23|d DWORD "[v23|d]" v23|d v24|d [178, 186[[190, 195[180 ShouldHaveRegister 184 MustHaveRegister 186 ShouldHaveRegister 194 ShouldHaveRegister  "NoSpillStore"
  v24|d DWORD "[v24|d]" v24|d v23|d [186, 189[186 MustHaveRegister 188 ShouldHaveRegister  "NoSpillStore"
  v25|d DWORD "[v25|d]" v25|d -1 [192, 216[192 MustHaveRegister 198 MustHaveRegister 215 LiveAtLoopEnd  "NoSpillStore"
  v26|d DWORD "[v26|d]" v26|d v23|d [196, 212[[216, 219[198 ShouldHaveRegister 202 MustHaveRegister 204 ShouldHaveRegister 212 MustHaveRegister 218 ShouldHaveRegister  "NoSpillStore"
  v27|q QWORD "[v27|q]" v27|q -1 [204, 210[204 MustHaveRegister 206 MustHaveRegister 208 MustHaveRegister 210 MustHaveRegister  "NoSpillStore"
  v28|d DWORD "[v28|d]" v28|d -1 [212, 215[212 MustHaveRegister 214 ShouldHaveRegister  "NoSpillStore"
  v29|d DWORD "[v29|d]" v29|d v26|d [220, 228[222 ShouldHaveRegister 226 MustHaveRegister 228 ShouldHaveRegister  "NoSpillStore"
  v30|d DWORD "[v30|d]" v30|d v29|d [228, 231[228 MustHaveRegister 230 ShouldHaveRegister  "NoSpillStore"
  v31|d DWORD "[v31|d]" v31|d -1 [242, 264[242 MustHaveRegister 244 MustHaveRegister 252 MustHaveRegister 264 MustHaveRegister  "NoSpillStore"
  v32|d DWORD "[v32|d]" v32|d -1 [248, 250[248 MustHaveRegister 250 MustHaveRegister  "NoSpillStore"
  v33|d DWORD "[v33|d]" v33|d -1 [250, 256[250 MustHaveRegister 256 MustHaveRegister  "NoSpillStore"
  v34|d DWORD "[v34|d]" v34|d -1 [252, 254[252 MustHaveRegister 254 MustHaveRegister  "NoSpillStore"
  v35|d DWORD "[v35|d]" v35|d -1 [254, 268[254 MustHaveRegister 268 ShouldHaveRegister  "NoSpillStore"
  v36|d DWORD "[v36|d]" v36|d -1 [264, 266[264 MustHaveRegister 266 ShouldHaveRegister  "NoSpillStore"
  v37|d DWORD "[v37|d]" v37|d v35|d [268, 270[268 MustHaveRegister 270 MustHaveRegister  "NoSpillStore"
  v38|d DWORD "[v38|d]" v38|d -1 [306, 308[308 MustHaveRegister  "NoSpillStore"
  v39|q QWORD "[v39|q]" v39|q -1 [306, 310[310 MustHaveRegister  "NoSpillStore"
end_intervals
begin_intervals
  name "After register allocation"
  rax|q fixed "[rax|q]" rax|q v0|q [0, 1[[274, 276[ "NoSpillStore"
  rcx|d fixed "[rcx|d]" rcx|d v36|d [0, 1[[266, 269[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 2[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q -1 [0, 6[ "NoSpillStore"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [6, 274[[278, 289[[290, 301[[302, 313[6 MustHaveRegister 8 MustHaveRegister 12 MustHaveRegister 14 MustHaveRegister 16 MustHaveRegister 138 MustHaveRegister 242 MustHaveRegister 248 MustHaveRegister 260 MustHaveRegister 262 MustHaveRegister 270 MustHaveRegister 272 MustHaveRegister 274 ShouldHaveRegister  "NoSpillStore"
  v1|d DWORD "[rcx|d]" v1|d -1 [8, 50[8 MustHaveRegister 10 MustHaveRegister 44 MustHaveRegister 50 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[rax|d]" v2|d -1 [10, 132[10 MustHaveRegister 18 MustHaveRegister 22 ShouldHaveRegister 26 ShouldHaveRegister 32 ShouldHaveRegister 46 ShouldHaveRegister 48 MustHaveRegister 68 MustHaveRegister 122 MustHaveRegister 131 LiveAtLoopEnd  "NoSpillStore"
  v3|d DWORD "[r10|d]" v3|d v2|d [22, 24[22 MustHaveRegister 24 ShouldHaveRegister  "NoSpillStore"
  v4|q QWORD "[r10|q]" v4|q -1 [24, 28[24 MustHaveRegister 28 ShouldHaveRegister  "NoSpillStore"
  v5|q QWORD "[r11|q]" v5|q -1 [26, 28[26 MustHaveRegister 28 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[r10|d]" v6|d -1 [48, 66[48 MustHaveRegister 56 MustHaveRegister 65 LiveAtLoopEnd  "NoSpillStore"
  v7|q QWORD "[rcx|q]" v7|q v1|d [50, 132[50 MustHaveRegister 60 MustHaveRegister 65 LiveAtLoopEnd 78 MustHaveRegister 82 MustHaveRegister 84 MustHaveRegister 86 MustHaveRegister 88 MustHaveRegister 90 MustHaveRegister 92 MustHaveRegister 94 MustHaveRegister 96 MustHaveRegister 98 MustHaveRegister 100 MustHaveRegister 102 MustHaveRegister 104 MustHaveRegister 106 MustHaveRegister 108 MustHaveRegister 110 MustHaveRegister 115 LiveAtLoopEnd 126 MustHaveRegister 131 LiveAtLoopEnd  "NoSpillStore"
  v8|d DWORD "[r11|d]" v8|d v9|d [54, 62[[66, 71[56 ShouldHaveRegister 60 MustHaveRegister 62 ShouldHaveRegister 70 ShouldHaveRegister  "NoSpillStore"
  v9|d DWORD "[r11|d]" v9|d v8|d [62, 65[62 MustHaveRegister 64 ShouldHaveRegister  "NoSpillStore"
  v10|d DWORD "[r10|d]" v10|d -1 [68, 116[68 MustHaveRegister 74 MustHaveRegister 115 LiveAtLoopEnd  "NoSpillStore"
  v11|d DWORD "[r11|d]" v11|d v8|d [72, 112[[116, 119[74 ShouldHaveRegister 78 MustHaveRegister 80 ShouldHaveRegister 112 MustHaveRegister 118 ShouldHaveRegister  "NoSpillStore"
  v12|q QWORD "[r8|q]" v12|q -1 [80, 110[80 MustHaveRegister 82 MustHaveRegister 84 MustHaveRegister 86 MustHaveRegister 88 MustHaveRegister 90 MustHaveRegister 92 MustHaveRegister 94 MustHaveRegister 96 MustHaveRegister 98 MustHaveRegister 100 MustHaveRegister 102 MustHaveRegister 104 MustHaveRegister 106 MustHaveRegister 108 MustHaveRegister 110 MustHaveRegister  "NoSpillStore"
  v13|d DWORD "[r11|d]" v13|d -1 [112, 115[112 MustHaveRegister 114 ShouldHaveRegister  "NoSpillStore"
  v14|d DWORD "[r11|d]" v14|d v11|d [120, 128[122 ShouldHaveRegister 126 MustHaveRegister 128 ShouldHaveRegister  "NoSpillStore"
  v15|d DWORD "[r11|d]" v15|d v14|d [128, 131[128 MustHaveRegister 130 ShouldHaveRegister  "NoSpillStore"
  v16|d DWORD "[rcx|d]" v16|d -1 [138, 174[138 MustHaveRegister 140 MustHaveRegister 168 MustHaveRegister 174 MustHaveRegister  "NoSpillStore"
  v17|d DWORD "[rax|d]" v17|d -1 [140, 232[140 MustHaveRegister 142 MustHaveRegister 146 ShouldHaveRegister 150 ShouldHaveRegister 156 ShouldHaveRegister 170 ShouldHaveRegister 172 MustHaveRegister 192 MustHaveRegister 222 MustHaveRegister 231 LiveAtLoopEnd  "NoSpillStore"
  v18|d DWORD "[r10|d]" v18|d v17|d [146, 148[146 MustHaveRegister 148 ShouldHaveRegister  "NoSpillStore"
  v19|q QWORD "[r10|q]" v19|q -1 [148, 152[148 MustHaveRegister 152 ShouldHaveRegister  "NoSpillStore"
  v20|q QWORD "[r11|q]" v20|q -1 [150, 152[150 MustHaveRegister 152 MustHaveRegister  "NoSpillStore"
  v21|d DWORD "[r10|d]" v21|d -1 [172, 190[172 MustHaveRegister 180 MustHaveRegister 189 LiveAtLoopEnd  "NoSpillStore"
  v22|q QWORD "[rcx|q]" v22|q v16|d [174, 232[174 MustHaveRegister 184 MustHaveRegister 189 LiveAtLoopEnd 202 MustHaveRegister 206 MustHaveRegister 208 MustHaveRegister 210 MustHaveRegister 215 LiveAtLoopEnd 226 MustHaveRegister 231 LiveAtLoopEnd  "NoSpillStore"
  v23|d DWORD "[r11|d]" v23|d v24|d [178, 186[[190, 195[180 ShouldHaveRegister 184 MustHaveRegister 186 ShouldHaveRegister 194 ShouldHaveRegister  "NoSpillStore"
  v24|d DWORD "[r11|d]" v24|d v23|d [186, 189[186 MustHaveRegister 188 ShouldHaveRegister  "NoSpillStore"
  v25|d DWORD "[r10|d]" v25|d -1 [192, 216[192 MustHaveRegister 198 MustHaveRegister 215 LiveAtLoopEnd  "NoSpillStore"
  v26|d DWORD "[r11|d]" v26|d v23|d [196, 212[[216, 219[198 ShouldHaveRegister 202 MustHaveRegister 204 ShouldHaveRegister 212 MustHaveRegister 218 ShouldHaveRegister  "NoSpillStore"
  v27|q QWORD "[r8|q]" v27|q -1 [204, 210[204 MustHaveRegister 206 MustHaveRegister 208 MustHaveRegister 210 MustHaveRegister  "NoSpillStore"
  v28|d DWORD "[r11|d]" v28|d -1 [212, 215[212 MustHaveRegister 214 ShouldHaveRegister  "NoSpillStore"
  v29|d DWORD "[r11|d]" v29|d v26|d [220, 228[222 ShouldHaveRegister 226 MustHaveRegister 228 ShouldHaveRegister  "NoSpillStore"
  v30|d DWORD "[r11|d]" v30|d v29|d [228, 231[228 MustHaveRegister 230 ShouldHaveRegister  "NoSpillStore"
  v31|d DWORD "[rcx|d]" v31|d -1 [242, 264[242 MustHaveRegister 244 MustHaveRegister 252 MustHaveRegister 264 MustHaveRegister  "NoSpillStore"
  v32|d DWORD "[rax|d]" v32|d -1 [248, 250[248 MustHaveRegister 250 MustHaveRegister  "NoSpillStore"
  v33|d DWORD "[rax|d]" v33|d -1 [250, 256[250 MustHaveRegister 256 MustHaveRegister  "NoSpillStore"
  v34|d DWORD "[r10|d]" v34|d -1 [252, 254[252 MustHaveRegister 254 MustHaveRegister  "NoSpillStore"
  v35|d DWORD "[r10|d]" v35|d -1 [254, 268[254 MustHaveRegister 268 ShouldHaveRegister  "NoSpillStore"
  v36|d DWORD "[rcx|d]" v36|d -1 [264, 266[264 MustHaveRegister 266 ShouldHaveRegister  "NoSpillStore"
  v37|d DWORD "[r10|d]" v37|d v35|d [268, 270[268 MustHaveRegister 270 MustHaveRegister  "NoSpillStore"
  v38|d DWORD "[r10|d]" v38|d -1 [306, 308[308 MustHaveRegister  "NoSpillStore"
  v39|q QWORD "[r11|q]" v39|q -1 [306, 310[310 MustHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After LinearScanRegisterAllocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@59e1caa slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD[_] = MOV [v0|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   10  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:448) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction v2|DWORD = MOV [v1|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction MOV [v0|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr   14  <|@ instruction MOV [v0|QWORD[.] + 32] y: 0 size: DWORD <|@ <|@
      nr   16  <|@ instruction MOV [v0|QWORD[.] + 36] y: -1 size: DWORD <|@ <|@
      nr   18  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.04762264888183043 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606753472112500193
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   22  <|@ instruction v3|DWORD = DEC v2|DWORD size: DWORD <|@ <|@
      nr   24  <|@ instruction v4|QWORD = MOVSXD v3|DWORD size: QWORD <|@ <|@
      nr   26  <|@ instruction v5|QWORD = MOV v2|DWORD size: DWORD <|@ <|@
      nr   28  <|@ instruction CMPBRANCH (x: v5|QWORD, y: v4|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B39" 
    xhandlers
    flags 
    probability 4602249872485129697
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   32  <|@ instruction CMPCONSTBRANCH v2|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B39 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602249872485129697
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   36  <|@ instruction JUMP ~[] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602249872485129697
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction JUMP ~[] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606753472112500193
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction MOV [v1|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr   46  <|@ instruction CMP v2|DWORD y: 3 size: DWORD <|@ <|@
      nr   48  <|@ instruction v6|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v2|DWORD) condition: |<| <|@ <|@
      nr   50  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1dd2cd05 encoding: base: 0 shift: 3 <|@ <|@
      nr   52  <|@ instruction JUMP ~[int[1|0x1]] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors "B8" "B9" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606840121128330737
    begin_IR
      LIR
      nr   54  <|@ instruction [v8|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   56  <|@ instruction CMPBRANCH (x: v6|DWORD, y: v8|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699158794208206
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction MOV [v7|QWORD[.] + v8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   62  <|@ instruction v9|DWORD = INC v8|DWORD size: DWORD <|@ <|@
      nr   64  <|@ instruction JUMP ~[v9|DWORD] destination: B8 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606753472112500194
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction v10|DWORD = LEA [v2|DWORD - 16] size: DWORD <|@ <|@
      nr   70  <|@ instruction JUMP ~[v8|DWORD] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" 
    successors "B11" "B12" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608039801321515939
    begin_IR
      LIR
      nr   72  <|@ instruction [v11|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   74  <|@ instruction CMPBRANCH (x: v10|DWORD, y: v11|DWORD) trueDestinationProbability: 0.19993647348429622 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B10" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597742867212592525
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction MOV [v7|QWORD[.] + v11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   80  <|@ instruction v12|QWORD = MOVSXD v11|DWORD size: QWORD <|@ <|@
      nr   82  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 20] y: -1 size: DWORD <|@ <|@
      nr   84  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 24] y: -1 size: DWORD <|@ <|@
      nr   86  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 28] y: -1 size: DWORD <|@ <|@
      nr   88  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 32] y: -1 size: DWORD <|@ <|@
      nr   90  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 36] y: -1 size: DWORD <|@ <|@
      nr   92  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 40] y: -1 size: DWORD <|@ <|@
      nr   94  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 44] y: -1 size: DWORD <|@ <|@
      nr   96  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 48] y: -1 size: DWORD <|@ <|@
      nr   98  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 52] y: -1 size: DWORD <|@ <|@
      nr  100  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 56] y: -1 size: DWORD <|@ <|@
      nr  102  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 60] y: -1 size: DWORD <|@ <|@
      nr  104  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 64] y: -1 size: DWORD <|@ <|@
      nr  106  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 68] y: -1 size: DWORD <|@ <|@
      nr  108  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 72] y: -1 size: DWORD <|@ <|@
      nr  110  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 76] y: -1 size: DWORD <|@ <|@
      nr  112  <|@ instruction v13|DWORD = LEA [v11|DWORD + 16] size: DWORD <|@ <|@
      nr  114  <|@ instruction JUMP ~[v13|DWORD] destination: B11 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606753472112500195
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction JUMP ~[v11|DWORD] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606840121128330739
    begin_IR
      LIR
      nr  120  <|@ instruction [v14|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  122  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v14|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699158794208207
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction MOV [v7|QWORD[.] + v14|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  128  <|@ instruction v15|DWORD = INC v14|DWORD size: DWORD <|@ <|@
      nr  130  <|@ instruction JUMP ~[v15|DWORD] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606753472112500196
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  134  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B1" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182418800017410
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction v16|DWORD[_] = MOV [v0|QWORD[.] + 64] size: DWORD <|@ <|@
      nr  140  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: v0|QWORD[.] - 
>@ <|@ instruction v17|DWORD = MOV [v16|DWORD[_] * 8 + 12] size: DWORD state [bci:39] <|@ <|@
      nr  142  <|@ instruction TESTBRANCH (x: v17|DWORD, y: v17|DWORD) trueDestinationProbability: 0.1430071915215746 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4605894324531121682
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  146  <|@ instruction v18|DWORD = DEC v17|DWORD size: DWORD <|@ <|@
      nr  148  <|@ instruction v19|QWORD = MOVSXD v18|DWORD size: QWORD <|@ <|@
      nr  150  <|@ instruction v20|QWORD = MOV v17|DWORD size: DWORD <|@ <|@
      nr  152  <|@ instruction CMPBRANCH (x: v20|QWORD, y: v19|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B38" 
    xhandlers
    flags 
    probability 4601390724903751186
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction CMPCONSTBRANCH v17|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B20 -> B21 falseDestination: B20 -> B38 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601390724903751186
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601390724903751186
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction JUMP ~[] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B19" "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4605894324531121682
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction MOV [v16|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr  170  <|@ instruction CMP v17|DWORD y: 3 size: DWORD <|@ <|@
      nr  172  <|@ instruction v21|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v17|DWORD) condition: |<| <|@ <|@
      nr  174  <|@ instruction v22|QWORD[.] = UNCOMPRESSPOINTER (input: v16|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1dd2cd05 encoding: base: 0 shift: 3 <|@ <|@
      nr  176  <|@ instruction JUMP ~[int[1|0x1]] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B24" 
    successors "B24" "B25" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4605972295288554463
    begin_IR
      LIR
      nr  178  <|@ instruction [v23|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  180  <|@ instruction CMPBRANCH (x: v21|DWORD, y: v23|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B23" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576143750256751390
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction MOV [v22|QWORD[.] + v23|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  186  <|@ instruction v24|DWORD = INC v23|DWORD size: DWORD <|@ <|@
      nr  188  <|@ instruction JUMP ~[v24|DWORD] destination: B24 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4605894324531121682
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction v25|DWORD = LEA [v17|DWORD - 4] size: DWORD <|@ <|@
      nr  194  <|@ instruction JUMP ~[v23|DWORD] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B27" 
    successors "B27" "B28" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4608461061127032607
    begin_IR
      LIR
      nr  196  <|@ instruction [v26|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  198  <|@ instruction CMPBRANCH (x: v25|DWORD, y: v26|DWORD) trueDestinationProbability: 0.3325162586814181 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4601362377763758169
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction MOV [v22|QWORD[.] + v26|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  204  <|@ instruction v27|QWORD = MOVSXD v26|DWORD size: QWORD <|@ <|@
      nr  206  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 20] y: -1 size: DWORD <|@ <|@
      nr  208  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 24] y: -1 size: DWORD <|@ <|@
      nr  210  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 28] y: -1 size: DWORD <|@ <|@
      nr  212  <|@ instruction v28|DWORD = LEA [v26|DWORD + 4] size: DWORD <|@ <|@
      nr  214  <|@ instruction JUMP ~[v28|DWORD] destination: B27 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4605894324531121681
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction JUMP ~[v26|DWORD] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors "B30" "B31" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4605972295288554462
    begin_IR
      LIR
      nr  220  <|@ instruction [v29|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  222  <|@ instruction CMPBRANCH (x: v17|DWORD, y: v29|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4576143750256751390
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction MOV [v22|QWORD[.] + v29|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  228  <|@ instruction v30|DWORD = INC v29|DWORD size: DWORD <|@ <|@
      nr  230  <|@ instruction JUMP ~[v30|DWORD] destination: B30 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4605894324531121681
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B32" 
    xhandlers
    flags 
    probability 4594320397366118342
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction JUMP ~[] destination: B17 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B17" 
    successors "B33" "B36" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction v31|DWORD[_] = MOV [v0|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  244  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
>@ <|@ instruction CMPCONSTBRANCH [v31|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B36 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:63] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction v32|DWORD[_] = MOV [v0|QWORD[.] + 68] size: DWORD <|@ <|@
      nr  250  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
>@ <|@ instruction v33|DWORD = MOV [v32|DWORD[_] * 8 + 12] size: DWORD state [bci:63] <|@ <|@
      nr  252  <|@ instruction v34|DWORD[_] = MOV [v31|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  254  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
>@ <|@ instruction v35|DWORD = MOV [v34|DWORD[_] * 8 + 12] size: DWORD state [bci:63] <|@ <|@
      nr  256  <|@ instruction TESTBRANCH (x: v33|DWORD, y: v33|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction MOV [v0|QWORD[.] + 40] y: 0 size: DWORD <|@ <|@
      nr  262  <|@ instruction MOV [v0|QWORD[.] + 12] y: 0 size: DWORD <|@ <|@
      nr  264  <|@ instruction v36|DWORD = MOVSXB [v31|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  266  <|@ instruction rcx|DWORD = MOVE v36|DWORD moveKind: DWORD <|@ <|@
      nr  268  <|@ instruction v37|DWORD = SHR (x: v35|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  270  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v37|DWORD) size: DWORD <|@ <|@
      nr  272  <|@ instruction INC [v0|QWORD[.] + 44] size: DWORD <|@ <|@
      nr  274  <|@ instruction rax|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  276  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B16" 
    xhandlers
    flags 
    probability 4587023968036069872
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction JUMP ~[] destination: B1 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  284  <|@ instruction MOV [r15|QWORD + 1156] y: -41243 size: DWORD <|@ <|@
      nr  286  <|@ instruction MOV [r15|QWORD + 1168] y: 1304 size: QWORD <|@ <|@
      nr  288  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:451) [bci: 15]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:15] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  292  <|@ instruction JUMP ~[int[-84243|0xfffffffffffeb6ed], long[20|0x14]] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  296  <|@ instruction MOV [r15|QWORD + 1156] y: -47643 size: DWORD <|@ <|@
      nr  298  <|@ instruction MOV [r15|QWORD + 1168] y: 2072 size: QWORD <|@ <|@
      nr  300  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:39] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  304  <|@ instruction JUMP ~[int[-54579|0xffffffffffff2acd], long[660|0x294]] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B35" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  306  <|@ instruction [v38|DWORD, v39|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  308  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v38|DWORD) size: DWORD <|@ <|@
      nr  310  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v39|QWORD) size: QWORD <|@ <|@
      nr  312  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:63] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_m1     
     2: putfield      #2          // first:int
     5: aload_0       
     6: iconst_0      
     7: putfield      #3          // last:int
    10: aload_0       
    11: iconst_m1     
    12: putfield      #4          // oldLast:int
    15: iconst_0      
    16: istore_1      
    17: iload_1       
    18: aload_0       
    19: getfield      #12         // groups:int[]
    22: arraylength   
    23: if_icmpge     39
    26: aload_0       
    27: getfield      #12         // groups:int[]
    30: iload_1       
    31: iconst_m1     
    32: iastore       
    33: iinc          
    36: goto          17
    39: iconst_0      
    40: istore_1      
    41: iload_1       
    42: aload_0       
    43: getfield      #14         // locals:int[]
    46: arraylength   
    47: if_icmpge     63
    50: aload_0       
    51: getfield      #14         // locals:int[]
    54: iload_1       
    55: iconst_m1     
    56: iastore       
    57: iinc          
    60: goto          41
    63: iconst_0      
    64: istore_1      
    65: iload_1       
    66: aload_0       
    67: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    70: arraylength   
    71: if_icmpge     98
    74: aload_0       
    75: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    78: iload_1       
    79: aaload        
    80: ifnull        92
    83: aload_0       
    84: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    87: iload_1       
    88: aaload        
    89: invokevirtual #32         // java.util.regex.IntHashSet.clear:()void
    92: iinc          
    95: goto          65
    98: aload_0       
    99: iconst_0      
   100: putfield      #5          // lastAppendPosition:int
   103: aload_0       
   104: iconst_0      
   105: putfield      #33         // from:int
   108: aload_0       
   109: aload_0       
   110: invokevirtual #34         // getTextLength:()int
   113: putfield      #35         // to:int
   116: aload_0       
   117: dup           
   118: getfield      #31         // modCount:int
   121: iconst_1      
   122: iadd          
   123: putfield      #31         // modCount:int
   126: aload_0       
   127: areturn       
   <|@
end_bytecodes
begin_intervals
  name "After optimize spill position"
  rax|q fixed "[rax|q]" rax|q v0|q [0, 1[[274, 276[ "NoSpillStore"
  rcx|d fixed "[rcx|d]" rcx|d v36|d [0, 1[[266, 269[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 2[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q -1 [0, 6[ "NoSpillStore"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [6, 274[[278, 289[[290, 301[[302, 313[6 MustHaveRegister 8 MustHaveRegister 12 MustHaveRegister 14 MustHaveRegister 16 MustHaveRegister 138 MustHaveRegister 242 MustHaveRegister 248 MustHaveRegister 260 MustHaveRegister 262 MustHaveRegister 270 MustHaveRegister 272 MustHaveRegister 274 ShouldHaveRegister  "NoSpillStore"
  v1|d DWORD "[rcx|d]" v1|d -1 [8, 50[8 MustHaveRegister 10 MustHaveRegister 44 MustHaveRegister 50 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[rax|d]" v2|d -1 [10, 132[10 MustHaveRegister 18 MustHaveRegister 22 ShouldHaveRegister 26 ShouldHaveRegister 32 ShouldHaveRegister 46 ShouldHaveRegister 48 MustHaveRegister 68 MustHaveRegister 122 MustHaveRegister 131 LiveAtLoopEnd  "NoSpillStore"
  v3|d DWORD "[r10|d]" v3|d v2|d [22, 24[22 MustHaveRegister 24 ShouldHaveRegister  "NoSpillStore"
  v4|q QWORD "[r10|q]" v4|q -1 [24, 28[24 MustHaveRegister 28 ShouldHaveRegister  "NoSpillStore"
  v5|q QWORD "[r11|q]" v5|q -1 [26, 28[26 MustHaveRegister 28 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[r10|d]" v6|d -1 [48, 66[48 MustHaveRegister 56 MustHaveRegister 65 LiveAtLoopEnd  "NoSpillStore"
  v7|q QWORD "[rcx|q]" v7|q v1|d [50, 132[50 MustHaveRegister 60 MustHaveRegister 65 LiveAtLoopEnd 78 MustHaveRegister 82 MustHaveRegister 84 MustHaveRegister 86 MustHaveRegister 88 MustHaveRegister 90 MustHaveRegister 92 MustHaveRegister 94 MustHaveRegister 96 MustHaveRegister 98 MustHaveRegister 100 MustHaveRegister 102 MustHaveRegister 104 MustHaveRegister 106 MustHaveRegister 108 MustHaveRegister 110 MustHaveRegister 115 LiveAtLoopEnd 126 MustHaveRegister 131 LiveAtLoopEnd  "NoSpillStore"
  v8|d DWORD "[r11|d]" v8|d v9|d [54, 62[[66, 71[56 ShouldHaveRegister 60 MustHaveRegister 62 ShouldHaveRegister 70 ShouldHaveRegister  "NoSpillStore"
  v9|d DWORD "[r11|d]" v9|d v8|d [62, 65[62 MustHaveRegister 64 ShouldHaveRegister  "NoSpillStore"
  v10|d DWORD "[r10|d]" v10|d -1 [68, 116[68 MustHaveRegister 74 MustHaveRegister 115 LiveAtLoopEnd  "NoSpillStore"
  v11|d DWORD "[r11|d]" v11|d v8|d [72, 112[[116, 119[74 ShouldHaveRegister 78 MustHaveRegister 80 ShouldHaveRegister 112 MustHaveRegister 118 ShouldHaveRegister  "NoSpillStore"
  v12|q QWORD "[r8|q]" v12|q -1 [80, 110[80 MustHaveRegister 82 MustHaveRegister 84 MustHaveRegister 86 MustHaveRegister 88 MustHaveRegister 90 MustHaveRegister 92 MustHaveRegister 94 MustHaveRegister 96 MustHaveRegister 98 MustHaveRegister 100 MustHaveRegister 102 MustHaveRegister 104 MustHaveRegister 106 MustHaveRegister 108 MustHaveRegister 110 MustHaveRegister  "NoSpillStore"
  v13|d DWORD "[r11|d]" v13|d -1 [112, 115[112 MustHaveRegister 114 ShouldHaveRegister  "NoSpillStore"
  v14|d DWORD "[r11|d]" v14|d v11|d [120, 128[122 ShouldHaveRegister 126 MustHaveRegister 128 ShouldHaveRegister  "NoSpillStore"
  v15|d DWORD "[r11|d]" v15|d v14|d [128, 131[128 MustHaveRegister 130 ShouldHaveRegister  "NoSpillStore"
  v16|d DWORD "[rcx|d]" v16|d -1 [138, 174[138 MustHaveRegister 140 MustHaveRegister 168 MustHaveRegister 174 MustHaveRegister  "NoSpillStore"
  v17|d DWORD "[rax|d]" v17|d -1 [140, 232[140 MustHaveRegister 142 MustHaveRegister 146 ShouldHaveRegister 150 ShouldHaveRegister 156 ShouldHaveRegister 170 ShouldHaveRegister 172 MustHaveRegister 192 MustHaveRegister 222 MustHaveRegister 231 LiveAtLoopEnd  "NoSpillStore"
  v18|d DWORD "[r10|d]" v18|d v17|d [146, 148[146 MustHaveRegister 148 ShouldHaveRegister  "NoSpillStore"
  v19|q QWORD "[r10|q]" v19|q -1 [148, 152[148 MustHaveRegister 152 ShouldHaveRegister  "NoSpillStore"
  v20|q QWORD "[r11|q]" v20|q -1 [150, 152[150 MustHaveRegister 152 MustHaveRegister  "NoSpillStore"
  v21|d DWORD "[r10|d]" v21|d -1 [172, 190[172 MustHaveRegister 180 MustHaveRegister 189 LiveAtLoopEnd  "NoSpillStore"
  v22|q QWORD "[rcx|q]" v22|q v16|d [174, 232[174 MustHaveRegister 184 MustHaveRegister 189 LiveAtLoopEnd 202 MustHaveRegister 206 MustHaveRegister 208 MustHaveRegister 210 MustHaveRegister 215 LiveAtLoopEnd 226 MustHaveRegister 231 LiveAtLoopEnd  "NoSpillStore"
  v23|d DWORD "[r11|d]" v23|d v24|d [178, 186[[190, 195[180 ShouldHaveRegister 184 MustHaveRegister 186 ShouldHaveRegister 194 ShouldHaveRegister  "NoSpillStore"
  v24|d DWORD "[r11|d]" v24|d v23|d [186, 189[186 MustHaveRegister 188 ShouldHaveRegister  "NoSpillStore"
  v25|d DWORD "[r10|d]" v25|d -1 [192, 216[192 MustHaveRegister 198 MustHaveRegister 215 LiveAtLoopEnd  "NoSpillStore"
  v26|d DWORD "[r11|d]" v26|d v23|d [196, 212[[216, 219[198 ShouldHaveRegister 202 MustHaveRegister 204 ShouldHaveRegister 212 MustHaveRegister 218 ShouldHaveRegister  "NoSpillStore"
  v27|q QWORD "[r8|q]" v27|q -1 [204, 210[204 MustHaveRegister 206 MustHaveRegister 208 MustHaveRegister 210 MustHaveRegister  "NoSpillStore"
  v28|d DWORD "[r11|d]" v28|d -1 [212, 215[212 MustHaveRegister 214 ShouldHaveRegister  "NoSpillStore"
  v29|d DWORD "[r11|d]" v29|d v26|d [220, 228[222 ShouldHaveRegister 226 MustHaveRegister 228 ShouldHaveRegister  "NoSpillStore"
  v30|d DWORD "[r11|d]" v30|d v29|d [228, 231[228 MustHaveRegister 230 ShouldHaveRegister  "NoSpillStore"
  v31|d DWORD "[rcx|d]" v31|d -1 [242, 264[242 MustHaveRegister 244 MustHaveRegister 252 MustHaveRegister 264 MustHaveRegister  "NoSpillStore"
  v32|d DWORD "[rax|d]" v32|d -1 [248, 250[248 MustHaveRegister 250 MustHaveRegister  "NoSpillStore"
  v33|d DWORD "[rax|d]" v33|d -1 [250, 256[250 MustHaveRegister 256 MustHaveRegister  "NoSpillStore"
  v34|d DWORD "[r10|d]" v34|d -1 [252, 254[252 MustHaveRegister 254 MustHaveRegister  "NoSpillStore"
  v35|d DWORD "[r10|d]" v35|d -1 [254, 268[254 MustHaveRegister 268 ShouldHaveRegister  "NoSpillStore"
  v36|d DWORD "[rcx|d]" v36|d -1 [264, 266[264 MustHaveRegister 266 ShouldHaveRegister  "NoSpillStore"
  v37|d DWORD "[r10|d]" v37|d v35|d [268, 270[268 MustHaveRegister 270 MustHaveRegister  "NoSpillStore"
  v38|d DWORD "[r10|d]" v38|d -1 [306, 308[308 MustHaveRegister  "NoSpillStore"
  v39|q QWORD "[r11|q]" v39|q -1 [306, 310[310 MustHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After LinearScanOptimizeSpillPosition"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@59e1caa slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD[_] = MOV [v0|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   10  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:448) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction v2|DWORD = MOV [v1|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction MOV [v0|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr   14  <|@ instruction MOV [v0|QWORD[.] + 32] y: 0 size: DWORD <|@ <|@
      nr   16  <|@ instruction MOV [v0|QWORD[.] + 36] y: -1 size: DWORD <|@ <|@
      nr   18  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.04762264888183043 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606753472112500193
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   22  <|@ instruction v3|DWORD = DEC v2|DWORD size: DWORD <|@ <|@
      nr   24  <|@ instruction v4|QWORD = MOVSXD v3|DWORD size: QWORD <|@ <|@
      nr   26  <|@ instruction v5|QWORD = MOV v2|DWORD size: DWORD <|@ <|@
      nr   28  <|@ instruction CMPBRANCH (x: v5|QWORD, y: v4|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B39" 
    xhandlers
    flags 
    probability 4602249872485129697
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   32  <|@ instruction CMPCONSTBRANCH v2|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B39 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602249872485129697
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   36  <|@ instruction JUMP ~[] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602249872485129697
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction JUMP ~[] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606753472112500193
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction MOV [v1|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr   46  <|@ instruction CMP v2|DWORD y: 3 size: DWORD <|@ <|@
      nr   48  <|@ instruction v6|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v2|DWORD) condition: |<| <|@ <|@
      nr   50  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1dd2cd05 encoding: base: 0 shift: 3 <|@ <|@
      nr   52  <|@ instruction JUMP ~[int[1|0x1]] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors "B8" "B9" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606840121128330737
    begin_IR
      LIR
      nr   54  <|@ instruction [v8|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   56  <|@ instruction CMPBRANCH (x: v6|DWORD, y: v8|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699158794208206
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction MOV [v7|QWORD[.] + v8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   62  <|@ instruction v9|DWORD = INC v8|DWORD size: DWORD <|@ <|@
      nr   64  <|@ instruction JUMP ~[v9|DWORD] destination: B8 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606753472112500194
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction v10|DWORD = LEA [v2|DWORD - 16] size: DWORD <|@ <|@
      nr   70  <|@ instruction JUMP ~[v8|DWORD] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" 
    successors "B11" "B12" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608039801321515939
    begin_IR
      LIR
      nr   72  <|@ instruction [v11|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   74  <|@ instruction CMPBRANCH (x: v10|DWORD, y: v11|DWORD) trueDestinationProbability: 0.19993647348429622 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B10" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597742867212592525
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction MOV [v7|QWORD[.] + v11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   80  <|@ instruction v12|QWORD = MOVSXD v11|DWORD size: QWORD <|@ <|@
      nr   82  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 20] y: -1 size: DWORD <|@ <|@
      nr   84  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 24] y: -1 size: DWORD <|@ <|@
      nr   86  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 28] y: -1 size: DWORD <|@ <|@
      nr   88  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 32] y: -1 size: DWORD <|@ <|@
      nr   90  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 36] y: -1 size: DWORD <|@ <|@
      nr   92  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 40] y: -1 size: DWORD <|@ <|@
      nr   94  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 44] y: -1 size: DWORD <|@ <|@
      nr   96  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 48] y: -1 size: DWORD <|@ <|@
      nr   98  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 52] y: -1 size: DWORD <|@ <|@
      nr  100  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 56] y: -1 size: DWORD <|@ <|@
      nr  102  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 60] y: -1 size: DWORD <|@ <|@
      nr  104  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 64] y: -1 size: DWORD <|@ <|@
      nr  106  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 68] y: -1 size: DWORD <|@ <|@
      nr  108  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 72] y: -1 size: DWORD <|@ <|@
      nr  110  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 76] y: -1 size: DWORD <|@ <|@
      nr  112  <|@ instruction v13|DWORD = LEA [v11|DWORD + 16] size: DWORD <|@ <|@
      nr  114  <|@ instruction JUMP ~[v13|DWORD] destination: B11 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606753472112500195
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction JUMP ~[v11|DWORD] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606840121128330739
    begin_IR
      LIR
      nr  120  <|@ instruction [v14|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  122  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v14|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699158794208207
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction MOV [v7|QWORD[.] + v14|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  128  <|@ instruction v15|DWORD = INC v14|DWORD size: DWORD <|@ <|@
      nr  130  <|@ instruction JUMP ~[v15|DWORD] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606753472112500196
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  134  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B1" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182418800017410
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction v16|DWORD[_] = MOV [v0|QWORD[.] + 64] size: DWORD <|@ <|@
      nr  140  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: v0|QWORD[.] - 
>@ <|@ instruction v17|DWORD = MOV [v16|DWORD[_] * 8 + 12] size: DWORD state [bci:39] <|@ <|@
      nr  142  <|@ instruction TESTBRANCH (x: v17|DWORD, y: v17|DWORD) trueDestinationProbability: 0.1430071915215746 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4605894324531121682
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  146  <|@ instruction v18|DWORD = DEC v17|DWORD size: DWORD <|@ <|@
      nr  148  <|@ instruction v19|QWORD = MOVSXD v18|DWORD size: QWORD <|@ <|@
      nr  150  <|@ instruction v20|QWORD = MOV v17|DWORD size: DWORD <|@ <|@
      nr  152  <|@ instruction CMPBRANCH (x: v20|QWORD, y: v19|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B38" 
    xhandlers
    flags 
    probability 4601390724903751186
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction CMPCONSTBRANCH v17|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B20 -> B21 falseDestination: B20 -> B38 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601390724903751186
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601390724903751186
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction JUMP ~[] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B19" "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4605894324531121682
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction MOV [v16|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr  170  <|@ instruction CMP v17|DWORD y: 3 size: DWORD <|@ <|@
      nr  172  <|@ instruction v21|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v17|DWORD) condition: |<| <|@ <|@
      nr  174  <|@ instruction v22|QWORD[.] = UNCOMPRESSPOINTER (input: v16|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1dd2cd05 encoding: base: 0 shift: 3 <|@ <|@
      nr  176  <|@ instruction JUMP ~[int[1|0x1]] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B24" 
    successors "B24" "B25" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4605972295288554463
    begin_IR
      LIR
      nr  178  <|@ instruction [v23|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  180  <|@ instruction CMPBRANCH (x: v21|DWORD, y: v23|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B23" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576143750256751390
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction MOV [v22|QWORD[.] + v23|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  186  <|@ instruction v24|DWORD = INC v23|DWORD size: DWORD <|@ <|@
      nr  188  <|@ instruction JUMP ~[v24|DWORD] destination: B24 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4605894324531121682
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction v25|DWORD = LEA [v17|DWORD - 4] size: DWORD <|@ <|@
      nr  194  <|@ instruction JUMP ~[v23|DWORD] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B27" 
    successors "B27" "B28" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4608461061127032607
    begin_IR
      LIR
      nr  196  <|@ instruction [v26|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  198  <|@ instruction CMPBRANCH (x: v25|DWORD, y: v26|DWORD) trueDestinationProbability: 0.3325162586814181 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4601362377763758169
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction MOV [v22|QWORD[.] + v26|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  204  <|@ instruction v27|QWORD = MOVSXD v26|DWORD size: QWORD <|@ <|@
      nr  206  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 20] y: -1 size: DWORD <|@ <|@
      nr  208  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 24] y: -1 size: DWORD <|@ <|@
      nr  210  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 28] y: -1 size: DWORD <|@ <|@
      nr  212  <|@ instruction v28|DWORD = LEA [v26|DWORD + 4] size: DWORD <|@ <|@
      nr  214  <|@ instruction JUMP ~[v28|DWORD] destination: B27 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4605894324531121681
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction JUMP ~[v26|DWORD] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors "B30" "B31" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4605972295288554462
    begin_IR
      LIR
      nr  220  <|@ instruction [v29|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  222  <|@ instruction CMPBRANCH (x: v17|DWORD, y: v29|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4576143750256751390
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction MOV [v22|QWORD[.] + v29|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  228  <|@ instruction v30|DWORD = INC v29|DWORD size: DWORD <|@ <|@
      nr  230  <|@ instruction JUMP ~[v30|DWORD] destination: B30 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4605894324531121681
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B32" 
    xhandlers
    flags 
    probability 4594320397366118342
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction JUMP ~[] destination: B17 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B17" 
    successors "B33" "B36" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction v31|DWORD[_] = MOV [v0|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  244  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
>@ <|@ instruction CMPCONSTBRANCH [v31|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B36 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:63] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction v32|DWORD[_] = MOV [v0|QWORD[.] + 68] size: DWORD <|@ <|@
      nr  250  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
>@ <|@ instruction v33|DWORD = MOV [v32|DWORD[_] * 8 + 12] size: DWORD state [bci:63] <|@ <|@
      nr  252  <|@ instruction v34|DWORD[_] = MOV [v31|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  254  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
>@ <|@ instruction v35|DWORD = MOV [v34|DWORD[_] * 8 + 12] size: DWORD state [bci:63] <|@ <|@
      nr  256  <|@ instruction TESTBRANCH (x: v33|DWORD, y: v33|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction MOV [v0|QWORD[.] + 40] y: 0 size: DWORD <|@ <|@
      nr  262  <|@ instruction MOV [v0|QWORD[.] + 12] y: 0 size: DWORD <|@ <|@
      nr  264  <|@ instruction v36|DWORD = MOVSXB [v31|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  266  <|@ instruction rcx|DWORD = MOVE v36|DWORD moveKind: DWORD <|@ <|@
      nr  268  <|@ instruction v37|DWORD = SHR (x: v35|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  270  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v37|DWORD) size: DWORD <|@ <|@
      nr  272  <|@ instruction INC [v0|QWORD[.] + 44] size: DWORD <|@ <|@
      nr  274  <|@ instruction rax|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  276  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B16" 
    xhandlers
    flags 
    probability 4587023968036069872
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction JUMP ~[] destination: B1 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  284  <|@ instruction MOV [r15|QWORD + 1156] y: -41243 size: DWORD <|@ <|@
      nr  286  <|@ instruction MOV [r15|QWORD + 1168] y: 1304 size: QWORD <|@ <|@
      nr  288  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:451) [bci: 15]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:15] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  292  <|@ instruction JUMP ~[int[-84243|0xfffffffffffeb6ed], long[20|0x14]] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  296  <|@ instruction MOV [r15|QWORD + 1156] y: -47643 size: DWORD <|@ <|@
      nr  298  <|@ instruction MOV [r15|QWORD + 1168] y: 2072 size: QWORD <|@ <|@
      nr  300  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:39] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  304  <|@ instruction JUMP ~[int[-54579|0xffffffffffff2acd], long[660|0x294]] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B35" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  306  <|@ instruction [v38|DWORD, v39|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  308  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v38|DWORD) size: DWORD <|@ <|@
      nr  310  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v39|QWORD) size: QWORD <|@ <|@
      nr  312  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:63] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_m1     
     2: putfield      #2          // first:int
     5: aload_0       
     6: iconst_0      
     7: putfield      #3          // last:int
    10: aload_0       
    11: iconst_m1     
    12: putfield      #4          // oldLast:int
    15: iconst_0      
    16: istore_1      
    17: iload_1       
    18: aload_0       
    19: getfield      #12         // groups:int[]
    22: arraylength   
    23: if_icmpge     39
    26: aload_0       
    27: getfield      #12         // groups:int[]
    30: iload_1       
    31: iconst_m1     
    32: iastore       
    33: iinc          
    36: goto          17
    39: iconst_0      
    40: istore_1      
    41: iload_1       
    42: aload_0       
    43: getfield      #14         // locals:int[]
    46: arraylength   
    47: if_icmpge     63
    50: aload_0       
    51: getfield      #14         // locals:int[]
    54: iload_1       
    55: iconst_m1     
    56: iastore       
    57: iinc          
    60: goto          41
    63: iconst_0      
    64: istore_1      
    65: iload_1       
    66: aload_0       
    67: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    70: arraylength   
    71: if_icmpge     98
    74: aload_0       
    75: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    78: iload_1       
    79: aaload        
    80: ifnull        92
    83: aload_0       
    84: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    87: iload_1       
    88: aaload        
    89: invokevirtual #32         // java.util.regex.IntHashSet.clear:()void
    92: iinc          
    95: goto          65
    98: aload_0       
    99: iconst_0      
   100: putfield      #5          // lastAppendPosition:int
   103: aload_0       
   104: iconst_0      
   105: putfield      #33         // from:int
   108: aload_0       
   109: aload_0       
   110: invokevirtual #34         // getTextLength:()int
   113: putfield      #35         // to:int
   116: aload_0       
   117: dup           
   118: getfield      #31         // modCount:int
   121: iconst_1      
   122: iadd          
   123: putfield      #31         // modCount:int
   126: aload_0       
   127: areturn       
   <|@
end_bytecodes
begin_intervals
  name "After resolve data flow"
  rax|q fixed "[rax|q]" rax|q v0|q [0, 1[[274, 276[ "NoSpillStore"
  rcx|d fixed "[rcx|d]" rcx|d v36|d [0, 1[[266, 269[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 2[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q -1 [0, 6[ "NoSpillStore"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [6, 274[[278, 289[[290, 301[[302, 313[6 MustHaveRegister 8 MustHaveRegister 12 MustHaveRegister 14 MustHaveRegister 16 MustHaveRegister 138 MustHaveRegister 242 MustHaveRegister 248 MustHaveRegister 260 MustHaveRegister 262 MustHaveRegister 270 MustHaveRegister 272 MustHaveRegister 274 ShouldHaveRegister  "NoSpillStore"
  v1|d DWORD "[rcx|d]" v1|d -1 [8, 50[8 MustHaveRegister 10 MustHaveRegister 44 MustHaveRegister 50 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[rax|d]" v2|d -1 [10, 132[10 MustHaveRegister 18 MustHaveRegister 22 ShouldHaveRegister 26 ShouldHaveRegister 32 ShouldHaveRegister 46 ShouldHaveRegister 48 MustHaveRegister 68 MustHaveRegister 122 MustHaveRegister 131 LiveAtLoopEnd  "NoSpillStore"
  v3|d DWORD "[r10|d]" v3|d v2|d [22, 24[22 MustHaveRegister 24 ShouldHaveRegister  "NoSpillStore"
  v4|q QWORD "[r10|q]" v4|q -1 [24, 28[24 MustHaveRegister 28 ShouldHaveRegister  "NoSpillStore"
  v5|q QWORD "[r11|q]" v5|q -1 [26, 28[26 MustHaveRegister 28 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[r10|d]" v6|d -1 [48, 66[48 MustHaveRegister 56 MustHaveRegister 65 LiveAtLoopEnd  "NoSpillStore"
  v7|q QWORD "[rcx|q]" v7|q v1|d [50, 132[50 MustHaveRegister 60 MustHaveRegister 65 LiveAtLoopEnd 78 MustHaveRegister 82 MustHaveRegister 84 MustHaveRegister 86 MustHaveRegister 88 MustHaveRegister 90 MustHaveRegister 92 MustHaveRegister 94 MustHaveRegister 96 MustHaveRegister 98 MustHaveRegister 100 MustHaveRegister 102 MustHaveRegister 104 MustHaveRegister 106 MustHaveRegister 108 MustHaveRegister 110 MustHaveRegister 115 LiveAtLoopEnd 126 MustHaveRegister 131 LiveAtLoopEnd  "NoSpillStore"
  v8|d DWORD "[r11|d]" v8|d v9|d [54, 62[[66, 71[56 ShouldHaveRegister 60 MustHaveRegister 62 ShouldHaveRegister 70 ShouldHaveRegister  "NoSpillStore"
  v9|d DWORD "[r11|d]" v9|d v8|d [62, 65[62 MustHaveRegister 64 ShouldHaveRegister  "NoSpillStore"
  v10|d DWORD "[r10|d]" v10|d -1 [68, 116[68 MustHaveRegister 74 MustHaveRegister 115 LiveAtLoopEnd  "NoSpillStore"
  v11|d DWORD "[r11|d]" v11|d v8|d [72, 112[[116, 119[74 ShouldHaveRegister 78 MustHaveRegister 80 ShouldHaveRegister 112 MustHaveRegister 118 ShouldHaveRegister  "NoSpillStore"
  v12|q QWORD "[r8|q]" v12|q -1 [80, 110[80 MustHaveRegister 82 MustHaveRegister 84 MustHaveRegister 86 MustHaveRegister 88 MustHaveRegister 90 MustHaveRegister 92 MustHaveRegister 94 MustHaveRegister 96 MustHaveRegister 98 MustHaveRegister 100 MustHaveRegister 102 MustHaveRegister 104 MustHaveRegister 106 MustHaveRegister 108 MustHaveRegister 110 MustHaveRegister  "NoSpillStore"
  v13|d DWORD "[r11|d]" v13|d -1 [112, 115[112 MustHaveRegister 114 ShouldHaveRegister  "NoSpillStore"
  v14|d DWORD "[r11|d]" v14|d v11|d [120, 128[122 ShouldHaveRegister 126 MustHaveRegister 128 ShouldHaveRegister  "NoSpillStore"
  v15|d DWORD "[r11|d]" v15|d v14|d [128, 131[128 MustHaveRegister 130 ShouldHaveRegister  "NoSpillStore"
  v16|d DWORD "[rcx|d]" v16|d -1 [138, 174[138 MustHaveRegister 140 MustHaveRegister 168 MustHaveRegister 174 MustHaveRegister  "NoSpillStore"
  v17|d DWORD "[rax|d]" v17|d -1 [140, 232[140 MustHaveRegister 142 MustHaveRegister 146 ShouldHaveRegister 150 ShouldHaveRegister 156 ShouldHaveRegister 170 ShouldHaveRegister 172 MustHaveRegister 192 MustHaveRegister 222 MustHaveRegister 231 LiveAtLoopEnd  "NoSpillStore"
  v18|d DWORD "[r10|d]" v18|d v17|d [146, 148[146 MustHaveRegister 148 ShouldHaveRegister  "NoSpillStore"
  v19|q QWORD "[r10|q]" v19|q -1 [148, 152[148 MustHaveRegister 152 ShouldHaveRegister  "NoSpillStore"
  v20|q QWORD "[r11|q]" v20|q -1 [150, 152[150 MustHaveRegister 152 MustHaveRegister  "NoSpillStore"
  v21|d DWORD "[r10|d]" v21|d -1 [172, 190[172 MustHaveRegister 180 MustHaveRegister 189 LiveAtLoopEnd  "NoSpillStore"
  v22|q QWORD "[rcx|q]" v22|q v16|d [174, 232[174 MustHaveRegister 184 MustHaveRegister 189 LiveAtLoopEnd 202 MustHaveRegister 206 MustHaveRegister 208 MustHaveRegister 210 MustHaveRegister 215 LiveAtLoopEnd 226 MustHaveRegister 231 LiveAtLoopEnd  "NoSpillStore"
  v23|d DWORD "[r11|d]" v23|d v24|d [178, 186[[190, 195[180 ShouldHaveRegister 184 MustHaveRegister 186 ShouldHaveRegister 194 ShouldHaveRegister  "NoSpillStore"
  v24|d DWORD "[r11|d]" v24|d v23|d [186, 189[186 MustHaveRegister 188 ShouldHaveRegister  "NoSpillStore"
  v25|d DWORD "[r10|d]" v25|d -1 [192, 216[192 MustHaveRegister 198 MustHaveRegister 215 LiveAtLoopEnd  "NoSpillStore"
  v26|d DWORD "[r11|d]" v26|d v23|d [196, 212[[216, 219[198 ShouldHaveRegister 202 MustHaveRegister 204 ShouldHaveRegister 212 MustHaveRegister 218 ShouldHaveRegister  "NoSpillStore"
  v27|q QWORD "[r8|q]" v27|q -1 [204, 210[204 MustHaveRegister 206 MustHaveRegister 208 MustHaveRegister 210 MustHaveRegister  "NoSpillStore"
  v28|d DWORD "[r11|d]" v28|d -1 [212, 215[212 MustHaveRegister 214 ShouldHaveRegister  "NoSpillStore"
  v29|d DWORD "[r11|d]" v29|d v26|d [220, 228[222 ShouldHaveRegister 226 MustHaveRegister 228 ShouldHaveRegister  "NoSpillStore"
  v30|d DWORD "[r11|d]" v30|d v29|d [228, 231[228 MustHaveRegister 230 ShouldHaveRegister  "NoSpillStore"
  v31|d DWORD "[rcx|d]" v31|d -1 [242, 264[242 MustHaveRegister 244 MustHaveRegister 252 MustHaveRegister 264 MustHaveRegister  "NoSpillStore"
  v32|d DWORD "[rax|d]" v32|d -1 [248, 250[248 MustHaveRegister 250 MustHaveRegister  "NoSpillStore"
  v33|d DWORD "[rax|d]" v33|d -1 [250, 256[250 MustHaveRegister 256 MustHaveRegister  "NoSpillStore"
  v34|d DWORD "[r10|d]" v34|d -1 [252, 254[252 MustHaveRegister 254 MustHaveRegister  "NoSpillStore"
  v35|d DWORD "[r10|d]" v35|d -1 [254, 268[254 MustHaveRegister 268 ShouldHaveRegister  "NoSpillStore"
  v36|d DWORD "[rcx|d]" v36|d -1 [264, 266[264 MustHaveRegister 266 ShouldHaveRegister  "NoSpillStore"
  v37|d DWORD "[r10|d]" v37|d v35|d [268, 270[268 MustHaveRegister 270 MustHaveRegister  "NoSpillStore"
  v38|d DWORD "[r10|d]" v38|d -1 [306, 308[308 MustHaveRegister  "NoSpillStore"
  v39|q QWORD "[r11|q]" v39|q -1 [306, 310[310 MustHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After SSALinearScanResolveDataFlow"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@59e1caa slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD[_] = MOV [v0|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   10  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:448) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction v2|DWORD = MOV [v1|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction MOV [v0|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr   14  <|@ instruction MOV [v0|QWORD[.] + 32] y: 0 size: DWORD <|@ <|@
      nr   16  <|@ instruction MOV [v0|QWORD[.] + 36] y: -1 size: DWORD <|@ <|@
      nr   18  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.04762264888183043 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606753472112500193
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   22  <|@ instruction v3|DWORD = DEC v2|DWORD size: DWORD <|@ <|@
      nr   24  <|@ instruction v4|QWORD = MOVSXD v3|DWORD size: QWORD <|@ <|@
      nr   26  <|@ instruction v5|QWORD = MOV v2|DWORD size: DWORD <|@ <|@
      nr   28  <|@ instruction CMPBRANCH (x: v5|QWORD, y: v4|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B39" 
    xhandlers
    flags 
    probability 4602249872485129697
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   32  <|@ instruction CMPCONSTBRANCH v2|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B39 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602249872485129697
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   36  <|@ instruction JUMP ~[] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602249872485129697
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction JUMP ~[] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606753472112500193
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction MOV [v1|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr   46  <|@ instruction CMP v2|DWORD y: 3 size: DWORD <|@ <|@
      nr   48  <|@ instruction v6|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v2|DWORD) condition: |<| <|@ <|@
      nr   50  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1dd2cd05 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   52  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors "B8" "B9" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606840121128330737
    begin_IR
      LIR
      nr   54  <|@ instruction [v8|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   56  <|@ instruction CMPBRANCH (x: v6|DWORD, y: v8|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699158794208206
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction MOV [v7|QWORD[.] + v8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   62  <|@ instruction v9|DWORD = INC v8|DWORD size: DWORD <|@ <|@
      nr   64  <|@ instruction JUMP ~[] destination: B8 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606753472112500194
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction v10|DWORD = LEA [v2|DWORD - 16] size: DWORD <|@ <|@
      nr   70  <|@ instruction JUMP ~[] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" 
    successors "B11" "B12" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608039801321515939
    begin_IR
      LIR
      nr   72  <|@ instruction [v11|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   74  <|@ instruction CMPBRANCH (x: v10|DWORD, y: v11|DWORD) trueDestinationProbability: 0.19993647348429622 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B10" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597742867212592525
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction MOV [v7|QWORD[.] + v11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   80  <|@ instruction v12|QWORD = MOVSXD v11|DWORD size: QWORD <|@ <|@
      nr   82  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 20] y: -1 size: DWORD <|@ <|@
      nr   84  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 24] y: -1 size: DWORD <|@ <|@
      nr   86  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 28] y: -1 size: DWORD <|@ <|@
      nr   88  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 32] y: -1 size: DWORD <|@ <|@
      nr   90  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 36] y: -1 size: DWORD <|@ <|@
      nr   92  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 40] y: -1 size: DWORD <|@ <|@
      nr   94  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 44] y: -1 size: DWORD <|@ <|@
      nr   96  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 48] y: -1 size: DWORD <|@ <|@
      nr   98  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 52] y: -1 size: DWORD <|@ <|@
      nr  100  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 56] y: -1 size: DWORD <|@ <|@
      nr  102  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 60] y: -1 size: DWORD <|@ <|@
      nr  104  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 64] y: -1 size: DWORD <|@ <|@
      nr  106  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 68] y: -1 size: DWORD <|@ <|@
      nr  108  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 72] y: -1 size: DWORD <|@ <|@
      nr  110  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 76] y: -1 size: DWORD <|@ <|@
      nr  112  <|@ instruction v13|DWORD = LEA [v11|DWORD + 16] size: DWORD <|@ <|@
      nr  114  <|@ instruction JUMP ~[] destination: B11 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606753472112500195
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606840121128330739
    begin_IR
      LIR
      nr  120  <|@ instruction [v14|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  122  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v14|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699158794208207
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction MOV [v7|QWORD[.] + v14|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  128  <|@ instruction v15|DWORD = INC v14|DWORD size: DWORD <|@ <|@
      nr  130  <|@ instruction JUMP ~[] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606753472112500196
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  134  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B1" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182418800017410
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction v16|DWORD[_] = MOV [v0|QWORD[.] + 64] size: DWORD <|@ <|@
      nr  140  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: v0|QWORD[.] - 
>@ <|@ instruction v17|DWORD = MOV [v16|DWORD[_] * 8 + 12] size: DWORD state [bci:39] <|@ <|@
      nr  142  <|@ instruction TESTBRANCH (x: v17|DWORD, y: v17|DWORD) trueDestinationProbability: 0.1430071915215746 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4605894324531121682
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  146  <|@ instruction v18|DWORD = DEC v17|DWORD size: DWORD <|@ <|@
      nr  148  <|@ instruction v19|QWORD = MOVSXD v18|DWORD size: QWORD <|@ <|@
      nr  150  <|@ instruction v20|QWORD = MOV v17|DWORD size: DWORD <|@ <|@
      nr  152  <|@ instruction CMPBRANCH (x: v20|QWORD, y: v19|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B38" 
    xhandlers
    flags 
    probability 4601390724903751186
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction CMPCONSTBRANCH v17|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B20 -> B21 falseDestination: B20 -> B38 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601390724903751186
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601390724903751186
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction JUMP ~[] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B19" "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4605894324531121682
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction MOV [v16|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr  170  <|@ instruction CMP v17|DWORD y: 3 size: DWORD <|@ <|@
      nr  172  <|@ instruction v21|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v17|DWORD) condition: |<| <|@ <|@
      nr  174  <|@ instruction v22|QWORD[.] = UNCOMPRESSPOINTER (input: v16|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1dd2cd05 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  176  <|@ instruction JUMP ~[] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B24" 
    successors "B24" "B25" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4605972295288554463
    begin_IR
      LIR
      nr  178  <|@ instruction [v23|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  180  <|@ instruction CMPBRANCH (x: v21|DWORD, y: v23|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B23" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576143750256751390
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction MOV [v22|QWORD[.] + v23|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  186  <|@ instruction v24|DWORD = INC v23|DWORD size: DWORD <|@ <|@
      nr  188  <|@ instruction JUMP ~[] destination: B24 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4605894324531121682
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction v25|DWORD = LEA [v17|DWORD - 4] size: DWORD <|@ <|@
      nr  194  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B27" 
    successors "B27" "B28" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4608461061127032607
    begin_IR
      LIR
      nr  196  <|@ instruction [v26|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  198  <|@ instruction CMPBRANCH (x: v25|DWORD, y: v26|DWORD) trueDestinationProbability: 0.3325162586814181 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4601362377763758169
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction MOV [v22|QWORD[.] + v26|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  204  <|@ instruction v27|QWORD = MOVSXD v26|DWORD size: QWORD <|@ <|@
      nr  206  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 20] y: -1 size: DWORD <|@ <|@
      nr  208  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 24] y: -1 size: DWORD <|@ <|@
      nr  210  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 28] y: -1 size: DWORD <|@ <|@
      nr  212  <|@ instruction v28|DWORD = LEA [v26|DWORD + 4] size: DWORD <|@ <|@
      nr  214  <|@ instruction JUMP ~[] destination: B27 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4605894324531121681
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction JUMP ~[] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors "B30" "B31" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4605972295288554462
    begin_IR
      LIR
      nr  220  <|@ instruction [v29|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  222  <|@ instruction CMPBRANCH (x: v17|DWORD, y: v29|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4576143750256751390
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction MOV [v22|QWORD[.] + v29|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  228  <|@ instruction v30|DWORD = INC v29|DWORD size: DWORD <|@ <|@
      nr  230  <|@ instruction JUMP ~[] destination: B30 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4605894324531121681
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B32" 
    xhandlers
    flags 
    probability 4594320397366118342
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction JUMP ~[] destination: B17 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B17" 
    successors "B33" "B36" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction v31|DWORD[_] = MOV [v0|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  244  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
>@ <|@ instruction CMPCONSTBRANCH [v31|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B36 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:63] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction v32|DWORD[_] = MOV [v0|QWORD[.] + 68] size: DWORD <|@ <|@
      nr  250  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
>@ <|@ instruction v33|DWORD = MOV [v32|DWORD[_] * 8 + 12] size: DWORD state [bci:63] <|@ <|@
      nr  252  <|@ instruction v34|DWORD[_] = MOV [v31|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  254  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
>@ <|@ instruction v35|DWORD = MOV [v34|DWORD[_] * 8 + 12] size: DWORD state [bci:63] <|@ <|@
      nr  256  <|@ instruction TESTBRANCH (x: v33|DWORD, y: v33|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction MOV [v0|QWORD[.] + 40] y: 0 size: DWORD <|@ <|@
      nr  262  <|@ instruction MOV [v0|QWORD[.] + 12] y: 0 size: DWORD <|@ <|@
      nr  264  <|@ instruction v36|DWORD = MOVSXB [v31|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  266  <|@ instruction rcx|DWORD = MOVE v36|DWORD moveKind: DWORD <|@ <|@
      nr  268  <|@ instruction v37|DWORD = SHR (x: v35|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  270  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v37|DWORD) size: DWORD <|@ <|@
      nr  272  <|@ instruction INC [v0|QWORD[.] + 44] size: DWORD <|@ <|@
      nr  274  <|@ instruction rax|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  276  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B16" 
    xhandlers
    flags 
    probability 4587023968036069872
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction JUMP ~[] destination: B1 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  284  <|@ instruction MOV [r15|QWORD + 1156] y: -41243 size: DWORD <|@ <|@
      nr  286  <|@ instruction MOV [r15|QWORD + 1168] y: 1304 size: QWORD <|@ <|@
      nr  288  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:451) [bci: 15]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:15] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = MOVE input: int[-84243|0xfffffffffffeb6ed] // MoveResolver resolve mapping <|@ <|@
      nr  292  <|@ instruction JUMP ~[] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  296  <|@ instruction MOV [r15|QWORD + 1156] y: -47643 size: DWORD <|@ <|@
      nr  298  <|@ instruction MOV [r15|QWORD + 1168] y: 2072 size: QWORD <|@ <|@
      nr  300  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:39] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = MOVE input: int[-54579|0xffffffffffff2acd] // MoveResolver resolve mapping <|@ <|@
      nr  304  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B35" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  306  <|@ instruction [v38|DWORD, v39|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  308  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v38|DWORD) size: DWORD <|@ <|@
      nr  310  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v39|QWORD) size: QWORD <|@ <|@
      nr  312  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:63] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_m1     
     2: putfield      #2          // first:int
     5: aload_0       
     6: iconst_0      
     7: putfield      #3          // last:int
    10: aload_0       
    11: iconst_m1     
    12: putfield      #4          // oldLast:int
    15: iconst_0      
    16: istore_1      
    17: iload_1       
    18: aload_0       
    19: getfield      #12         // groups:int[]
    22: arraylength   
    23: if_icmpge     39
    26: aload_0       
    27: getfield      #12         // groups:int[]
    30: iload_1       
    31: iconst_m1     
    32: iastore       
    33: iinc          
    36: goto          17
    39: iconst_0      
    40: istore_1      
    41: iload_1       
    42: aload_0       
    43: getfield      #14         // locals:int[]
    46: arraylength   
    47: if_icmpge     63
    50: aload_0       
    51: getfield      #14         // locals:int[]
    54: iload_1       
    55: iconst_m1     
    56: iastore       
    57: iinc          
    60: goto          41
    63: iconst_0      
    64: istore_1      
    65: iload_1       
    66: aload_0       
    67: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    70: arraylength   
    71: if_icmpge     98
    74: aload_0       
    75: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    78: iload_1       
    79: aaload        
    80: ifnull        92
    83: aload_0       
    84: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    87: iload_1       
    88: aaload        
    89: invokevirtual #32         // java.util.regex.IntHashSet.clear:()void
    92: iinc          
    95: goto          65
    98: aload_0       
    99: iconst_0      
   100: putfield      #5          // lastAppendPosition:int
   103: aload_0       
   104: iconst_0      
   105: putfield      #33         // from:int
   108: aload_0       
   109: aload_0       
   110: invokevirtual #34         // getTextLength:()int
   113: putfield      #35         // to:int
   116: aload_0       
   117: dup           
   118: getfield      #31         // modCount:int
   121: iconst_1      
   122: iadd          
   123: putfield      #31         // modCount:int
   126: aload_0       
   127: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanEliminateSpillMove"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@59e1caa slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD[_] = MOV [v0|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   10  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:448) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction v2|DWORD = MOV [v1|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction MOV [v0|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr   14  <|@ instruction MOV [v0|QWORD[.] + 32] y: 0 size: DWORD <|@ <|@
      nr   16  <|@ instruction MOV [v0|QWORD[.] + 36] y: -1 size: DWORD <|@ <|@
      nr   18  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.04762264888183043 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606753472112500193
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   22  <|@ instruction v3|DWORD = DEC v2|DWORD size: DWORD <|@ <|@
      nr   24  <|@ instruction v4|QWORD = MOVSXD v3|DWORD size: QWORD <|@ <|@
      nr   26  <|@ instruction v5|QWORD = MOV v2|DWORD size: DWORD <|@ <|@
      nr   28  <|@ instruction CMPBRANCH (x: v5|QWORD, y: v4|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B39" 
    xhandlers
    flags 
    probability 4602249872485129697
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   32  <|@ instruction CMPCONSTBRANCH v2|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B39 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602249872485129697
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   36  <|@ instruction JUMP ~[] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602249872485129697
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction JUMP ~[] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606753472112500193
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction MOV [v1|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr   46  <|@ instruction CMP v2|DWORD y: 3 size: DWORD <|@ <|@
      nr   48  <|@ instruction v6|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v2|DWORD) condition: |<| <|@ <|@
      nr   50  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1dd2cd05 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   52  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors "B8" "B9" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606840121128330737
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   56  <|@ instruction CMPBRANCH (x: v6|DWORD, y: v8|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699158794208206
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction MOV [v7|QWORD[.] + v8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   62  <|@ instruction v9|DWORD = INC v8|DWORD size: DWORD <|@ <|@
      nr   64  <|@ instruction JUMP ~[] destination: B8 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606753472112500194
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction v10|DWORD = LEA [v2|DWORD - 16] size: DWORD <|@ <|@
      nr   70  <|@ instruction JUMP ~[] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" 
    successors "B11" "B12" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608039801321515939
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   74  <|@ instruction CMPBRANCH (x: v10|DWORD, y: v11|DWORD) trueDestinationProbability: 0.19993647348429622 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B10" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597742867212592525
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction MOV [v7|QWORD[.] + v11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   80  <|@ instruction v12|QWORD = MOVSXD v11|DWORD size: QWORD <|@ <|@
      nr   82  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 20] y: -1 size: DWORD <|@ <|@
      nr   84  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 24] y: -1 size: DWORD <|@ <|@
      nr   86  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 28] y: -1 size: DWORD <|@ <|@
      nr   88  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 32] y: -1 size: DWORD <|@ <|@
      nr   90  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 36] y: -1 size: DWORD <|@ <|@
      nr   92  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 40] y: -1 size: DWORD <|@ <|@
      nr   94  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 44] y: -1 size: DWORD <|@ <|@
      nr   96  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 48] y: -1 size: DWORD <|@ <|@
      nr   98  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 52] y: -1 size: DWORD <|@ <|@
      nr  100  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 56] y: -1 size: DWORD <|@ <|@
      nr  102  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 60] y: -1 size: DWORD <|@ <|@
      nr  104  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 64] y: -1 size: DWORD <|@ <|@
      nr  106  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 68] y: -1 size: DWORD <|@ <|@
      nr  108  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 72] y: -1 size: DWORD <|@ <|@
      nr  110  <|@ instruction MOV [v7|QWORD[.] + v12|QWORD * 4 + 76] y: -1 size: DWORD <|@ <|@
      nr  112  <|@ instruction v13|DWORD = LEA [v11|DWORD + 16] size: DWORD <|@ <|@
      nr  114  <|@ instruction JUMP ~[] destination: B11 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606753472112500195
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606840121128330739
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  122  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v14|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699158794208207
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction MOV [v7|QWORD[.] + v14|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  128  <|@ instruction v15|DWORD = INC v14|DWORD size: DWORD <|@ <|@
      nr  130  <|@ instruction JUMP ~[] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606753472112500196
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  134  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B1" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182418800017410
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction v16|DWORD[_] = MOV [v0|QWORD[.] + 64] size: DWORD <|@ <|@
      nr  140  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: v0|QWORD[.] - 
>@ <|@ instruction v17|DWORD = MOV [v16|DWORD[_] * 8 + 12] size: DWORD state [bci:39] <|@ <|@
      nr  142  <|@ instruction TESTBRANCH (x: v17|DWORD, y: v17|DWORD) trueDestinationProbability: 0.1430071915215746 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4605894324531121682
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  146  <|@ instruction v18|DWORD = DEC v17|DWORD size: DWORD <|@ <|@
      nr  148  <|@ instruction v19|QWORD = MOVSXD v18|DWORD size: QWORD <|@ <|@
      nr  150  <|@ instruction v20|QWORD = MOV v17|DWORD size: DWORD <|@ <|@
      nr  152  <|@ instruction CMPBRANCH (x: v20|QWORD, y: v19|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B38" 
    xhandlers
    flags 
    probability 4601390724903751186
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction CMPCONSTBRANCH v17|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B20 -> B21 falseDestination: B20 -> B38 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601390724903751186
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601390724903751186
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction JUMP ~[] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B19" "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4605894324531121682
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction MOV [v16|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr  170  <|@ instruction CMP v17|DWORD y: 3 size: DWORD <|@ <|@
      nr  172  <|@ instruction v21|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v17|DWORD) condition: |<| <|@ <|@
      nr  174  <|@ instruction v22|QWORD[.] = UNCOMPRESSPOINTER (input: v16|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1dd2cd05 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  176  <|@ instruction JUMP ~[] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B24" 
    successors "B24" "B25" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4605972295288554463
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  180  <|@ instruction CMPBRANCH (x: v21|DWORD, y: v23|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B23" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576143750256751390
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction MOV [v22|QWORD[.] + v23|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  186  <|@ instruction v24|DWORD = INC v23|DWORD size: DWORD <|@ <|@
      nr  188  <|@ instruction JUMP ~[] destination: B24 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4605894324531121682
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction v25|DWORD = LEA [v17|DWORD - 4] size: DWORD <|@ <|@
      nr  194  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B27" 
    successors "B27" "B28" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4608461061127032607
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  198  <|@ instruction CMPBRANCH (x: v25|DWORD, y: v26|DWORD) trueDestinationProbability: 0.3325162586814181 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4601362377763758169
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction MOV [v22|QWORD[.] + v26|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  204  <|@ instruction v27|QWORD = MOVSXD v26|DWORD size: QWORD <|@ <|@
      nr  206  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 20] y: -1 size: DWORD <|@ <|@
      nr  208  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 24] y: -1 size: DWORD <|@ <|@
      nr  210  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 28] y: -1 size: DWORD <|@ <|@
      nr  212  <|@ instruction v28|DWORD = LEA [v26|DWORD + 4] size: DWORD <|@ <|@
      nr  214  <|@ instruction JUMP ~[] destination: B27 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4605894324531121681
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction JUMP ~[] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors "B30" "B31" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4605972295288554462
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  222  <|@ instruction CMPBRANCH (x: v17|DWORD, y: v29|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4576143750256751390
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction MOV [v22|QWORD[.] + v29|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  228  <|@ instruction v30|DWORD = INC v29|DWORD size: DWORD <|@ <|@
      nr  230  <|@ instruction JUMP ~[] destination: B30 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4605894324531121681
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B32" 
    xhandlers
    flags 
    probability 4594320397366118342
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction JUMP ~[] destination: B17 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B17" 
    successors "B33" "B36" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction v31|DWORD[_] = MOV [v0|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  244  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
>@ <|@ instruction CMPCONSTBRANCH [v31|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B36 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:63] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction v32|DWORD[_] = MOV [v0|QWORD[.] + 68] size: DWORD <|@ <|@
      nr  250  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
>@ <|@ instruction v33|DWORD = MOV [v32|DWORD[_] * 8 + 12] size: DWORD state [bci:63] <|@ <|@
      nr  252  <|@ instruction v34|DWORD[_] = MOV [v31|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  254  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
>@ <|@ instruction v35|DWORD = MOV [v34|DWORD[_] * 8 + 12] size: DWORD state [bci:63] <|@ <|@
      nr  256  <|@ instruction TESTBRANCH (x: v33|DWORD, y: v33|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction MOV [v0|QWORD[.] + 40] y: 0 size: DWORD <|@ <|@
      nr  262  <|@ instruction MOV [v0|QWORD[.] + 12] y: 0 size: DWORD <|@ <|@
      nr  264  <|@ instruction v36|DWORD = MOVSXB [v31|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  266  <|@ instruction rcx|DWORD = MOVE v36|DWORD moveKind: DWORD <|@ <|@
      nr  268  <|@ instruction v37|DWORD = SHR (x: v35|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  270  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v37|DWORD) size: DWORD <|@ <|@
      nr  272  <|@ instruction INC [v0|QWORD[.] + 44] size: DWORD <|@ <|@
      nr  274  <|@ instruction rax|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  276  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B16" 
    xhandlers
    flags 
    probability 4587023968036069872
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction JUMP ~[] destination: B1 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  284  <|@ instruction MOV [r15|QWORD + 1156] y: -41243 size: DWORD <|@ <|@
      nr  286  <|@ instruction MOV [r15|QWORD + 1168] y: 1304 size: QWORD <|@ <|@
      nr  288  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:451) [bci: 15]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:15] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = MOVE input: int[-84243|0xfffffffffffeb6ed] // MoveResolver resolve mapping <|@ <|@
      nr  292  <|@ instruction JUMP ~[] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  296  <|@ instruction MOV [r15|QWORD + 1156] y: -47643 size: DWORD <|@ <|@
      nr  298  <|@ instruction MOV [r15|QWORD + 1168] y: 2072 size: QWORD <|@ <|@
      nr  300  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:39] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = MOVE input: int[-54579|0xffffffffffff2acd] // MoveResolver resolve mapping <|@ <|@
      nr  304  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B35" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  308  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v38|DWORD) size: DWORD <|@ <|@
      nr  310  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v39|QWORD) size: QWORD <|@ <|@
      nr  312  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:63] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_m1     
     2: putfield      #2          // first:int
     5: aload_0       
     6: iconst_0      
     7: putfield      #3          // last:int
    10: aload_0       
    11: iconst_m1     
    12: putfield      #4          // oldLast:int
    15: iconst_0      
    16: istore_1      
    17: iload_1       
    18: aload_0       
    19: getfield      #12         // groups:int[]
    22: arraylength   
    23: if_icmpge     39
    26: aload_0       
    27: getfield      #12         // groups:int[]
    30: iload_1       
    31: iconst_m1     
    32: iastore       
    33: iinc          
    36: goto          17
    39: iconst_0      
    40: istore_1      
    41: iload_1       
    42: aload_0       
    43: getfield      #14         // locals:int[]
    46: arraylength   
    47: if_icmpge     63
    50: aload_0       
    51: getfield      #14         // locals:int[]
    54: iload_1       
    55: iconst_m1     
    56: iastore       
    57: iinc          
    60: goto          41
    63: iconst_0      
    64: istore_1      
    65: iload_1       
    66: aload_0       
    67: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    70: arraylength   
    71: if_icmpge     98
    74: aload_0       
    75: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    78: iload_1       
    79: aaload        
    80: ifnull        92
    83: aload_0       
    84: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    87: iload_1       
    88: aaload        
    89: invokevirtual #32         // java.util.regex.IntHashSet.clear:()void
    92: iinc          
    95: goto          65
    98: aload_0       
    99: iconst_0      
   100: putfield      #5          // lastAppendPosition:int
   103: aload_0       
   104: iconst_0      
   105: putfield      #33         // from:int
   108: aload_0       
   109: aload_0       
   110: invokevirtual #34         // getTextLength:()int
   113: putfield      #35         // to:int
   116: aload_0       
   117: dup           
   118: getfield      #31         // modCount:int
   121: iconst_1      
   122: iadd          
   123: putfield      #31         // modCount:int
   126: aload_0       
   127: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScanAssignLocations"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@59e1caa slotKind: QWORD <|@ <|@
      nr    8  <|@ instruction rcx|DWORD[_] = MOV [rsi|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   10  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:448) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rax|DWORD = MOV [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction MOV [rsi|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr   14  <|@ instruction MOV [rsi|QWORD[.] + 32] y: 0 size: DWORD <|@ <|@
      nr   16  <|@ instruction MOV [rsi|QWORD[.] + 36] y: -1 size: DWORD <|@ <|@
      nr   18  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.04762264888183043 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606753472112500193
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   22  <|@ instruction r10|DWORD = DEC rax|DWORD size: DWORD <|@ <|@
      nr   24  <|@ instruction r10|QWORD = MOVSXD r10|DWORD size: QWORD <|@ <|@
      nr   26  <|@ instruction r11|QWORD = MOV rax|DWORD size: DWORD <|@ <|@
      nr   28  <|@ instruction CMPBRANCH (x: r11|QWORD, y: r10|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B39" 
    xhandlers
    flags 
    probability 4602249872485129697
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   32  <|@ instruction CMPCONSTBRANCH rax|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B39 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602249872485129697
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   36  <|@ instruction JUMP ~[] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602249872485129697
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction JUMP ~[] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606753472112500193
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction MOV [rcx|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr   46  <|@ instruction CMP rax|DWORD y: 3 size: DWORD <|@ <|@
      nr   48  <|@ instruction r10|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rax|DWORD) condition: |<| <|@ <|@
      nr   50  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1dd2cd05 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   52  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors "B8" "B9" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606840121128330737
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   56  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699158794208206
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction MOV [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   62  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr   64  <|@ instruction JUMP ~[] destination: B8 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606753472112500194
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction r10|DWORD = LEA [rax|DWORD - 16] size: DWORD <|@ <|@
      nr   70  <|@ instruction JUMP ~[] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" 
    successors "B11" "B12" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608039801321515939
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   74  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.19993647348429622 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B10" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597742867212592525
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction MOV [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   80  <|@ instruction r8|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr   82  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 20] y: -1 size: DWORD <|@ <|@
      nr   84  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 24] y: -1 size: DWORD <|@ <|@
      nr   86  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 28] y: -1 size: DWORD <|@ <|@
      nr   88  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 32] y: -1 size: DWORD <|@ <|@
      nr   90  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 36] y: -1 size: DWORD <|@ <|@
      nr   92  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 40] y: -1 size: DWORD <|@ <|@
      nr   94  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 44] y: -1 size: DWORD <|@ <|@
      nr   96  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 48] y: -1 size: DWORD <|@ <|@
      nr   98  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 52] y: -1 size: DWORD <|@ <|@
      nr  100  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 56] y: -1 size: DWORD <|@ <|@
      nr  102  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 60] y: -1 size: DWORD <|@ <|@
      nr  104  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 64] y: -1 size: DWORD <|@ <|@
      nr  106  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 68] y: -1 size: DWORD <|@ <|@
      nr  108  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 72] y: -1 size: DWORD <|@ <|@
      nr  110  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 76] y: -1 size: DWORD <|@ <|@
      nr  112  <|@ instruction r11|DWORD = LEA [r11|DWORD + 16] size: DWORD <|@ <|@
      nr  114  <|@ instruction JUMP ~[] destination: B11 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606753472112500195
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606840121128330739
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  122  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699158794208207
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction MOV [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  128  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  130  <|@ instruction JUMP ~[] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606753472112500196
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  134  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B1" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182418800017410
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction rcx|DWORD[_] = MOV [rsi|QWORD[.] + 64] size: DWORD <|@ <|@
      nr  140  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rax|DWORD = MOV [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:39] <|@ <|@
      nr  142  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.1430071915215746 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4605894324531121682
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  146  <|@ instruction r10|DWORD = DEC rax|DWORD size: DWORD <|@ <|@
      nr  148  <|@ instruction r10|QWORD = MOVSXD r10|DWORD size: QWORD <|@ <|@
      nr  150  <|@ instruction r11|QWORD = MOV rax|DWORD size: DWORD <|@ <|@
      nr  152  <|@ instruction CMPBRANCH (x: r11|QWORD, y: r10|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B38" 
    xhandlers
    flags 
    probability 4601390724903751186
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction CMPCONSTBRANCH rax|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B20 -> B21 falseDestination: B20 -> B38 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601390724903751186
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601390724903751186
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction JUMP ~[] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B19" "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4605894324531121682
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction MOV [rcx|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr  170  <|@ instruction CMP rax|DWORD y: 3 size: DWORD <|@ <|@
      nr  172  <|@ instruction r10|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rax|DWORD) condition: |<| <|@ <|@
      nr  174  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1dd2cd05 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  176  <|@ instruction JUMP ~[] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B24" 
    successors "B24" "B25" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4605972295288554463
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  180  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B23" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576143750256751390
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction MOV [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  186  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  188  <|@ instruction JUMP ~[] destination: B24 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4605894324531121682
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction r10|DWORD = LEA [rax|DWORD - 4] size: DWORD <|@ <|@
      nr  194  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B27" 
    successors "B27" "B28" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4608461061127032607
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  198  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.3325162586814181 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4601362377763758169
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction MOV [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  204  <|@ instruction r8|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr  206  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 20] y: -1 size: DWORD <|@ <|@
      nr  208  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 24] y: -1 size: DWORD <|@ <|@
      nr  210  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 28] y: -1 size: DWORD <|@ <|@
      nr  212  <|@ instruction r11|DWORD = LEA [r11|DWORD + 4] size: DWORD <|@ <|@
      nr  214  <|@ instruction JUMP ~[] destination: B27 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4605894324531121681
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction JUMP ~[] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors "B30" "B31" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4605972295288554462
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  222  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4576143750256751390
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction MOV [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  228  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  230  <|@ instruction JUMP ~[] destination: B30 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4605894324531121681
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B32" 
    xhandlers
    flags 
    probability 4594320397366118342
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction JUMP ~[] destination: B17 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B17" 
    successors "B33" "B36" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction rcx|DWORD[_] = MOV [rsi|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  244  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction CMPCONSTBRANCH [rcx|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B36 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:63] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction rax|DWORD[_] = MOV [rsi|QWORD[.] + 68] size: DWORD <|@ <|@
      nr  250  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rax|DWORD = MOV [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:63] <|@ <|@
      nr  252  <|@ instruction r10|DWORD[_] = MOV [rcx|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  254  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction r10|DWORD = MOV [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:63] <|@ <|@
      nr  256  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction MOV [rsi|QWORD[.] + 40] y: 0 size: DWORD <|@ <|@
      nr  262  <|@ instruction MOV [rsi|QWORD[.] + 12] y: 0 size: DWORD <|@ <|@
      nr  264  <|@ instruction rcx|DWORD = MOVSXB [rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  268  <|@ instruction r10|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  270  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r10|DWORD) size: DWORD <|@ <|@
      nr  272  <|@ instruction INC [rsi|QWORD[.] + 44] size: DWORD <|@ <|@
      nr  274  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  276  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B16" 
    xhandlers
    flags 
    probability 4587023968036069872
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction JUMP ~[] destination: B1 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  284  <|@ instruction MOV [r15|QWORD + 1156] y: -41243 size: DWORD <|@ <|@
      nr  286  <|@ instruction MOV [r15|QWORD + 1168] y: 1304 size: QWORD <|@ <|@
      nr  288  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:451) [bci: 15]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:15] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-84243|0xfffffffffffeb6ed] // MoveResolver resolve mapping <|@ <|@
      nr  292  <|@ instruction JUMP ~[] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  296  <|@ instruction MOV [r15|QWORD + 1156] y: -47643 size: DWORD <|@ <|@
      nr  298  <|@ instruction MOV [r15|QWORD + 1168] y: 2072 size: QWORD <|@ <|@
      nr  300  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:39] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-54579|0xffffffffffff2acd] // MoveResolver resolve mapping <|@ <|@
      nr  304  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B35" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  308  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  310  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  312  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:63] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_m1     
     2: putfield      #2          // first:int
     5: aload_0       
     6: iconst_0      
     7: putfield      #3          // last:int
    10: aload_0       
    11: iconst_m1     
    12: putfield      #4          // oldLast:int
    15: iconst_0      
    16: istore_1      
    17: iload_1       
    18: aload_0       
    19: getfield      #12         // groups:int[]
    22: arraylength   
    23: if_icmpge     39
    26: aload_0       
    27: getfield      #12         // groups:int[]
    30: iload_1       
    31: iconst_m1     
    32: iastore       
    33: iinc          
    36: goto          17
    39: iconst_0      
    40: istore_1      
    41: iload_1       
    42: aload_0       
    43: getfield      #14         // locals:int[]
    46: arraylength   
    47: if_icmpge     63
    50: aload_0       
    51: getfield      #14         // locals:int[]
    54: iload_1       
    55: iconst_m1     
    56: iastore       
    57: iinc          
    60: goto          41
    63: iconst_0      
    64: istore_1      
    65: iload_1       
    66: aload_0       
    67: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    70: arraylength   
    71: if_icmpge     98
    74: aload_0       
    75: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    78: iload_1       
    79: aaload        
    80: ifnull        92
    83: aload_0       
    84: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    87: iload_1       
    88: aaload        
    89: invokevirtual #32         // java.util.regex.IntHashSet.clear:()void
    92: iinc          
    95: goto          65
    98: aload_0       
    99: iconst_0      
   100: putfield      #5          // lastAppendPosition:int
   103: aload_0       
   104: iconst_0      
   105: putfield      #33         // from:int
   108: aload_0       
   109: aload_0       
   110: invokevirtual #34         // getTextLength:()int
   113: putfield      #35         // to:int
   116: aload_0       
   117: dup           
   118: getfield      #31         // modCount:int
   121: iconst_1      
   122: iadd          
   123: putfield      #31         // modCount:int
   126: aload_0       
   127: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScan"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@59e1caa slotKind: QWORD <|@ <|@
      nr    8  <|@ instruction rcx|DWORD[_] = MOV [rsi|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   10  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:448) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rax|DWORD = MOV [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction MOV [rsi|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr   14  <|@ instruction MOV [rsi|QWORD[.] + 32] y: 0 size: DWORD <|@ <|@
      nr   16  <|@ instruction MOV [rsi|QWORD[.] + 36] y: -1 size: DWORD <|@ <|@
      nr   18  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.04762264888183043 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606753472112500193
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   22  <|@ instruction r10|DWORD = DEC rax|DWORD size: DWORD <|@ <|@
      nr   24  <|@ instruction r10|QWORD = MOVSXD r10|DWORD size: QWORD <|@ <|@
      nr   26  <|@ instruction r11|QWORD = MOV rax|DWORD size: DWORD <|@ <|@
      nr   28  <|@ instruction CMPBRANCH (x: r11|QWORD, y: r10|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B39" 
    xhandlers
    flags 
    probability 4602249872485129697
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   32  <|@ instruction CMPCONSTBRANCH rax|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B39 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602249872485129697
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   36  <|@ instruction JUMP ~[] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602249872485129697
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction JUMP ~[] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606753472112500193
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction MOV [rcx|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr   46  <|@ instruction CMP rax|DWORD y: 3 size: DWORD <|@ <|@
      nr   48  <|@ instruction r10|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rax|DWORD) condition: |<| <|@ <|@
      nr   50  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1dd2cd05 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   52  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors "B8" "B9" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606840121128330737
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   56  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699158794208206
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction MOV [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   62  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr   64  <|@ instruction JUMP ~[] destination: B8 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606753472112500194
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction r10|DWORD = LEA [rax|DWORD - 16] size: DWORD <|@ <|@
      nr   70  <|@ instruction JUMP ~[] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" 
    successors "B11" "B12" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608039801321515939
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   74  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.19993647348429622 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B10" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597742867212592525
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction MOV [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   80  <|@ instruction r8|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr   82  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 20] y: -1 size: DWORD <|@ <|@
      nr   84  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 24] y: -1 size: DWORD <|@ <|@
      nr   86  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 28] y: -1 size: DWORD <|@ <|@
      nr   88  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 32] y: -1 size: DWORD <|@ <|@
      nr   90  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 36] y: -1 size: DWORD <|@ <|@
      nr   92  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 40] y: -1 size: DWORD <|@ <|@
      nr   94  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 44] y: -1 size: DWORD <|@ <|@
      nr   96  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 48] y: -1 size: DWORD <|@ <|@
      nr   98  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 52] y: -1 size: DWORD <|@ <|@
      nr  100  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 56] y: -1 size: DWORD <|@ <|@
      nr  102  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 60] y: -1 size: DWORD <|@ <|@
      nr  104  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 64] y: -1 size: DWORD <|@ <|@
      nr  106  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 68] y: -1 size: DWORD <|@ <|@
      nr  108  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 72] y: -1 size: DWORD <|@ <|@
      nr  110  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 76] y: -1 size: DWORD <|@ <|@
      nr  112  <|@ instruction r11|DWORD = LEA [r11|DWORD + 16] size: DWORD <|@ <|@
      nr  114  <|@ instruction JUMP ~[] destination: B11 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606753472112500195
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606840121128330739
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  122  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699158794208207
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction MOV [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  128  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  130  <|@ instruction JUMP ~[] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606753472112500196
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  134  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B1" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182418800017410
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction rcx|DWORD[_] = MOV [rsi|QWORD[.] + 64] size: DWORD <|@ <|@
      nr  140  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rax|DWORD = MOV [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:39] <|@ <|@
      nr  142  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.1430071915215746 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4605894324531121682
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  146  <|@ instruction r10|DWORD = DEC rax|DWORD size: DWORD <|@ <|@
      nr  148  <|@ instruction r10|QWORD = MOVSXD r10|DWORD size: QWORD <|@ <|@
      nr  150  <|@ instruction r11|QWORD = MOV rax|DWORD size: DWORD <|@ <|@
      nr  152  <|@ instruction CMPBRANCH (x: r11|QWORD, y: r10|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B38" 
    xhandlers
    flags 
    probability 4601390724903751186
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction CMPCONSTBRANCH rax|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B20 -> B21 falseDestination: B20 -> B38 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601390724903751186
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601390724903751186
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction JUMP ~[] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B19" "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4605894324531121682
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction MOV [rcx|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr  170  <|@ instruction CMP rax|DWORD y: 3 size: DWORD <|@ <|@
      nr  172  <|@ instruction r10|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rax|DWORD) condition: |<| <|@ <|@
      nr  174  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1dd2cd05 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  176  <|@ instruction JUMP ~[] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B24" 
    successors "B24" "B25" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4605972295288554463
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  180  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B23" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576143750256751390
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction MOV [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  186  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  188  <|@ instruction JUMP ~[] destination: B24 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4605894324531121682
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction r10|DWORD = LEA [rax|DWORD - 4] size: DWORD <|@ <|@
      nr  194  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B27" 
    successors "B27" "B28" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4608461061127032607
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  198  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.3325162586814181 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4601362377763758169
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction MOV [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  204  <|@ instruction r8|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr  206  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 20] y: -1 size: DWORD <|@ <|@
      nr  208  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 24] y: -1 size: DWORD <|@ <|@
      nr  210  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 28] y: -1 size: DWORD <|@ <|@
      nr  212  <|@ instruction r11|DWORD = LEA [r11|DWORD + 4] size: DWORD <|@ <|@
      nr  214  <|@ instruction JUMP ~[] destination: B27 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4605894324531121681
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction JUMP ~[] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors "B30" "B31" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4605972295288554462
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  222  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4576143750256751390
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction MOV [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  228  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  230  <|@ instruction JUMP ~[] destination: B30 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4605894324531121681
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B32" 
    xhandlers
    flags 
    probability 4594320397366118342
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction JUMP ~[] destination: B17 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B17" 
    successors "B33" "B36" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction rcx|DWORD[_] = MOV [rsi|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  244  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction CMPCONSTBRANCH [rcx|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B36 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:63] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction rax|DWORD[_] = MOV [rsi|QWORD[.] + 68] size: DWORD <|@ <|@
      nr  250  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rax|DWORD = MOV [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:63] <|@ <|@
      nr  252  <|@ instruction r10|DWORD[_] = MOV [rcx|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  254  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction r10|DWORD = MOV [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:63] <|@ <|@
      nr  256  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction MOV [rsi|QWORD[.] + 40] y: 0 size: DWORD <|@ <|@
      nr  262  <|@ instruction MOV [rsi|QWORD[.] + 12] y: 0 size: DWORD <|@ <|@
      nr  264  <|@ instruction rcx|DWORD = MOVSXB [rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  268  <|@ instruction r10|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  270  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r10|DWORD) size: DWORD <|@ <|@
      nr  272  <|@ instruction INC [rsi|QWORD[.] + 44] size: DWORD <|@ <|@
      nr  274  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  276  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B16" 
    xhandlers
    flags 
    probability 4587023968036069872
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction JUMP ~[] destination: B1 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  284  <|@ instruction MOV [r15|QWORD + 1156] y: -41243 size: DWORD <|@ <|@
      nr  286  <|@ instruction MOV [r15|QWORD + 1168] y: 1304 size: QWORD <|@ <|@
      nr  288  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:451) [bci: 15]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:15] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-84243|0xfffffffffffeb6ed] // MoveResolver resolve mapping <|@ <|@
      nr  292  <|@ instruction JUMP ~[] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  296  <|@ instruction MOV [r15|QWORD + 1156] y: -47643 size: DWORD <|@ <|@
      nr  298  <|@ instruction MOV [r15|QWORD + 1168] y: 2072 size: QWORD <|@ <|@
      nr  300  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:39] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-54579|0xffffffffffff2acd] // MoveResolver resolve mapping <|@ <|@
      nr  304  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B35" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  308  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  310  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  312  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:63] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_m1     
     2: putfield      #2          // first:int
     5: aload_0       
     6: iconst_0      
     7: putfield      #3          // last:int
    10: aload_0       
    11: iconst_m1     
    12: putfield      #4          // oldLast:int
    15: iconst_0      
    16: istore_1      
    17: iload_1       
    18: aload_0       
    19: getfield      #12         // groups:int[]
    22: arraylength   
    23: if_icmpge     39
    26: aload_0       
    27: getfield      #12         // groups:int[]
    30: iload_1       
    31: iconst_m1     
    32: iastore       
    33: iinc          
    36: goto          17
    39: iconst_0      
    40: istore_1      
    41: iload_1       
    42: aload_0       
    43: getfield      #14         // locals:int[]
    46: arraylength   
    47: if_icmpge     63
    50: aload_0       
    51: getfield      #14         // locals:int[]
    54: iload_1       
    55: iconst_m1     
    56: iastore       
    57: iinc          
    60: goto          41
    63: iconst_0      
    64: istore_1      
    65: iload_1       
    66: aload_0       
    67: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    70: arraylength   
    71: if_icmpge     98
    74: aload_0       
    75: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    78: iload_1       
    79: aaload        
    80: ifnull        92
    83: aload_0       
    84: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    87: iload_1       
    88: aaload        
    89: invokevirtual #32         // java.util.regex.IntHashSet.clear:()void
    92: iinc          
    95: goto          65
    98: aload_0       
    99: iconst_0      
   100: putfield      #5          // lastAppendPosition:int
   103: aload_0       
   104: iconst_0      
   105: putfield      #33         // from:int
   108: aload_0       
   109: aload_0       
   110: invokevirtual #34         // getTextLength:()int
   113: putfield      #35         // to:int
   116: aload_0       
   117: dup           
   118: getfield      #31         // modCount:int
   121: iconst_1      
   122: iadd          
   123: putfield      #31         // modCount:int
   126: aload_0       
   127: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LSStackSlotAllocator"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@59e1caa slotKind: QWORD <|@ <|@
      nr    8  <|@ instruction rcx|DWORD[_] = MOV [rsi|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   10  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:448) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rax|DWORD = MOV [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction MOV [rsi|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr   14  <|@ instruction MOV [rsi|QWORD[.] + 32] y: 0 size: DWORD <|@ <|@
      nr   16  <|@ instruction MOV [rsi|QWORD[.] + 36] y: -1 size: DWORD <|@ <|@
      nr   18  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.04762264888183043 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606753472112500193
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   22  <|@ instruction r10|DWORD = DEC rax|DWORD size: DWORD <|@ <|@
      nr   24  <|@ instruction r10|QWORD = MOVSXD r10|DWORD size: QWORD <|@ <|@
      nr   26  <|@ instruction r11|QWORD = MOV rax|DWORD size: DWORD <|@ <|@
      nr   28  <|@ instruction CMPBRANCH (x: r11|QWORD, y: r10|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B39" 
    xhandlers
    flags 
    probability 4602249872485129697
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   32  <|@ instruction CMPCONSTBRANCH rax|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B39 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602249872485129697
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   36  <|@ instruction JUMP ~[] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602249872485129697
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction JUMP ~[] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606753472112500193
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction MOV [rcx|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr   46  <|@ instruction CMP rax|DWORD y: 3 size: DWORD <|@ <|@
      nr   48  <|@ instruction r10|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rax|DWORD) condition: |<| <|@ <|@
      nr   50  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1dd2cd05 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   52  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors "B8" "B9" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606840121128330737
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   56  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699158794208206
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction MOV [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   62  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr   64  <|@ instruction JUMP ~[] destination: B8 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606753472112500194
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction r10|DWORD = LEA [rax|DWORD - 16] size: DWORD <|@ <|@
      nr   70  <|@ instruction JUMP ~[] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" 
    successors "B11" "B12" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608039801321515939
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   74  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.19993647348429622 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B10" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597742867212592525
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction MOV [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   80  <|@ instruction r8|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr   82  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 20] y: -1 size: DWORD <|@ <|@
      nr   84  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 24] y: -1 size: DWORD <|@ <|@
      nr   86  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 28] y: -1 size: DWORD <|@ <|@
      nr   88  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 32] y: -1 size: DWORD <|@ <|@
      nr   90  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 36] y: -1 size: DWORD <|@ <|@
      nr   92  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 40] y: -1 size: DWORD <|@ <|@
      nr   94  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 44] y: -1 size: DWORD <|@ <|@
      nr   96  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 48] y: -1 size: DWORD <|@ <|@
      nr   98  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 52] y: -1 size: DWORD <|@ <|@
      nr  100  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 56] y: -1 size: DWORD <|@ <|@
      nr  102  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 60] y: -1 size: DWORD <|@ <|@
      nr  104  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 64] y: -1 size: DWORD <|@ <|@
      nr  106  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 68] y: -1 size: DWORD <|@ <|@
      nr  108  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 72] y: -1 size: DWORD <|@ <|@
      nr  110  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 76] y: -1 size: DWORD <|@ <|@
      nr  112  <|@ instruction r11|DWORD = LEA [r11|DWORD + 16] size: DWORD <|@ <|@
      nr  114  <|@ instruction JUMP ~[] destination: B11 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606753472112500195
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606840121128330739
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  122  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699158794208207
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction MOV [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  128  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  130  <|@ instruction JUMP ~[] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606753472112500196
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  134  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B1" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182418800017410
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction rcx|DWORD[_] = MOV [rsi|QWORD[.] + 64] size: DWORD <|@ <|@
      nr  140  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rax|DWORD = MOV [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:39] <|@ <|@
      nr  142  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.1430071915215746 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4605894324531121682
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  146  <|@ instruction r10|DWORD = DEC rax|DWORD size: DWORD <|@ <|@
      nr  148  <|@ instruction r10|QWORD = MOVSXD r10|DWORD size: QWORD <|@ <|@
      nr  150  <|@ instruction r11|QWORD = MOV rax|DWORD size: DWORD <|@ <|@
      nr  152  <|@ instruction CMPBRANCH (x: r11|QWORD, y: r10|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B38" 
    xhandlers
    flags 
    probability 4601390724903751186
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction CMPCONSTBRANCH rax|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B20 -> B21 falseDestination: B20 -> B38 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601390724903751186
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601390724903751186
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction JUMP ~[] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B19" "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4605894324531121682
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction MOV [rcx|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr  170  <|@ instruction CMP rax|DWORD y: 3 size: DWORD <|@ <|@
      nr  172  <|@ instruction r10|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rax|DWORD) condition: |<| <|@ <|@
      nr  174  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1dd2cd05 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  176  <|@ instruction JUMP ~[] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B24" 
    successors "B24" "B25" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4605972295288554463
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  180  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B23" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576143750256751390
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction MOV [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  186  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  188  <|@ instruction JUMP ~[] destination: B24 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4605894324531121682
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction r10|DWORD = LEA [rax|DWORD - 4] size: DWORD <|@ <|@
      nr  194  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B27" 
    successors "B27" "B28" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4608461061127032607
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  198  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.3325162586814181 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4601362377763758169
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction MOV [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  204  <|@ instruction r8|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr  206  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 20] y: -1 size: DWORD <|@ <|@
      nr  208  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 24] y: -1 size: DWORD <|@ <|@
      nr  210  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 28] y: -1 size: DWORD <|@ <|@
      nr  212  <|@ instruction r11|DWORD = LEA [r11|DWORD + 4] size: DWORD <|@ <|@
      nr  214  <|@ instruction JUMP ~[] destination: B27 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4605894324531121681
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction JUMP ~[] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors "B30" "B31" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4605972295288554462
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  222  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4576143750256751390
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction MOV [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  228  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  230  <|@ instruction JUMP ~[] destination: B30 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4605894324531121681
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B32" 
    xhandlers
    flags 
    probability 4594320397366118342
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction JUMP ~[] destination: B17 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B17" 
    successors "B33" "B36" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction rcx|DWORD[_] = MOV [rsi|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  244  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction CMPCONSTBRANCH [rcx|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B36 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:63] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction rax|DWORD[_] = MOV [rsi|QWORD[.] + 68] size: DWORD <|@ <|@
      nr  250  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rax|DWORD = MOV [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:63] <|@ <|@
      nr  252  <|@ instruction r10|DWORD[_] = MOV [rcx|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  254  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction r10|DWORD = MOV [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:63] <|@ <|@
      nr  256  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction MOV [rsi|QWORD[.] + 40] y: 0 size: DWORD <|@ <|@
      nr  262  <|@ instruction MOV [rsi|QWORD[.] + 12] y: 0 size: DWORD <|@ <|@
      nr  264  <|@ instruction rcx|DWORD = MOVSXB [rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  268  <|@ instruction r10|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  270  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r10|DWORD) size: DWORD <|@ <|@
      nr  272  <|@ instruction INC [rsi|QWORD[.] + 44] size: DWORD <|@ <|@
      nr  274  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  276  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B16" 
    xhandlers
    flags 
    probability 4587023968036069872
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction JUMP ~[] destination: B1 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  284  <|@ instruction MOV [r15|QWORD + 1156] y: -41243 size: DWORD <|@ <|@
      nr  286  <|@ instruction MOV [r15|QWORD + 1168] y: 1304 size: QWORD <|@ <|@
      nr  288  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:451) [bci: 15]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:15] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-84243|0xfffffffffffeb6ed] // MoveResolver resolve mapping <|@ <|@
      nr  292  <|@ instruction JUMP ~[] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  296  <|@ instruction MOV [r15|QWORD + 1156] y: -47643 size: DWORD <|@ <|@
      nr  298  <|@ instruction MOV [r15|QWORD + 1168] y: 2072 size: QWORD <|@ <|@
      nr  300  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:39] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-54579|0xffffffffffff2acd] // MoveResolver resolve mapping <|@ <|@
      nr  304  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B35" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  308  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  310  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  312  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:63] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_m1     
     2: putfield      #2          // first:int
     5: aload_0       
     6: iconst_0      
     7: putfield      #3          // last:int
    10: aload_0       
    11: iconst_m1     
    12: putfield      #4          // oldLast:int
    15: iconst_0      
    16: istore_1      
    17: iload_1       
    18: aload_0       
    19: getfield      #12         // groups:int[]
    22: arraylength   
    23: if_icmpge     39
    26: aload_0       
    27: getfield      #12         // groups:int[]
    30: iload_1       
    31: iconst_m1     
    32: iastore       
    33: iinc          
    36: goto          17
    39: iconst_0      
    40: istore_1      
    41: iload_1       
    42: aload_0       
    43: getfield      #14         // locals:int[]
    46: arraylength   
    47: if_icmpge     63
    50: aload_0       
    51: getfield      #14         // locals:int[]
    54: iload_1       
    55: iconst_m1     
    56: iastore       
    57: iinc          
    60: goto          41
    63: iconst_0      
    64: istore_1      
    65: iload_1       
    66: aload_0       
    67: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    70: arraylength   
    71: if_icmpge     98
    74: aload_0       
    75: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    78: iload_1       
    79: aaload        
    80: ifnull        92
    83: aload_0       
    84: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    87: iload_1       
    88: aaload        
    89: invokevirtual #32         // java.util.regex.IntHashSet.clear:()void
    92: iinc          
    95: goto          65
    98: aload_0       
    99: iconst_0      
   100: putfield      #5          // lastAppendPosition:int
   103: aload_0       
   104: iconst_0      
   105: putfield      #33         // from:int
   108: aload_0       
   109: aload_0       
   110: invokevirtual #34         // getTextLength:()int
   113: putfield      #35         // to:int
   116: aload_0       
   117: dup           
   118: getfield      #31         // modCount:int
   121: iconst_1      
   122: iadd          
   123: putfield      #31         // modCount:int
   126: aload_0       
   127: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@59e1caa slotKind: QWORD <|@ <|@
      nr    8  <|@ instruction rcx|DWORD[_] = MOV [rsi|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   10  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:448) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rax|DWORD = MOV [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction MOV [rsi|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr   14  <|@ instruction MOV [rsi|QWORD[.] + 32] y: 0 size: DWORD <|@ <|@
      nr   16  <|@ instruction MOV [rsi|QWORD[.] + 36] y: -1 size: DWORD <|@ <|@
      nr   18  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.04762264888183043 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606753472112500193
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   22  <|@ instruction r10|DWORD = DEC rax|DWORD size: DWORD <|@ <|@
      nr   24  <|@ instruction r10|QWORD = MOVSXD r10|DWORD size: QWORD <|@ <|@
      nr   26  <|@ instruction r11|QWORD = MOV rax|DWORD size: DWORD <|@ <|@
      nr   28  <|@ instruction CMPBRANCH (x: r11|QWORD, y: r10|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B39" 
    xhandlers
    flags 
    probability 4602249872485129697
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   32  <|@ instruction CMPCONSTBRANCH rax|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B39 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602249872485129697
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   36  <|@ instruction JUMP ~[] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602249872485129697
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction JUMP ~[] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606753472112500193
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction MOV [rcx|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr   46  <|@ instruction CMP rax|DWORD y: 3 size: DWORD <|@ <|@
      nr   48  <|@ instruction r10|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rax|DWORD) condition: |<| <|@ <|@
      nr   50  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1dd2cd05 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   52  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors "B8" "B9" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606840121128330737
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   56  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699158794208206
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction MOV [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   62  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr   64  <|@ instruction JUMP ~[] destination: B8 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606753472112500194
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction r10|DWORD = LEA [rax|DWORD - 16] size: DWORD <|@ <|@
      nr   70  <|@ instruction JUMP ~[] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" 
    successors "B11" "B12" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608039801321515939
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   74  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.19993647348429622 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B10" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597742867212592525
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction MOV [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   80  <|@ instruction r8|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr   82  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 20] y: -1 size: DWORD <|@ <|@
      nr   84  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 24] y: -1 size: DWORD <|@ <|@
      nr   86  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 28] y: -1 size: DWORD <|@ <|@
      nr   88  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 32] y: -1 size: DWORD <|@ <|@
      nr   90  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 36] y: -1 size: DWORD <|@ <|@
      nr   92  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 40] y: -1 size: DWORD <|@ <|@
      nr   94  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 44] y: -1 size: DWORD <|@ <|@
      nr   96  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 48] y: -1 size: DWORD <|@ <|@
      nr   98  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 52] y: -1 size: DWORD <|@ <|@
      nr  100  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 56] y: -1 size: DWORD <|@ <|@
      nr  102  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 60] y: -1 size: DWORD <|@ <|@
      nr  104  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 64] y: -1 size: DWORD <|@ <|@
      nr  106  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 68] y: -1 size: DWORD <|@ <|@
      nr  108  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 72] y: -1 size: DWORD <|@ <|@
      nr  110  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 76] y: -1 size: DWORD <|@ <|@
      nr  112  <|@ instruction r11|DWORD = LEA [r11|DWORD + 16] size: DWORD <|@ <|@
      nr  114  <|@ instruction JUMP ~[] destination: B11 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606753472112500195
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606840121128330739
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  122  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699158794208207
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction MOV [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  128  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  130  <|@ instruction JUMP ~[] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606753472112500196
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  134  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B1" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182418800017410
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction rcx|DWORD[_] = MOV [rsi|QWORD[.] + 64] size: DWORD <|@ <|@
      nr  140  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rax|DWORD = MOV [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:39] <|@ <|@
      nr  142  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.1430071915215746 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4605894324531121682
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  146  <|@ instruction r10|DWORD = DEC rax|DWORD size: DWORD <|@ <|@
      nr  148  <|@ instruction r10|QWORD = MOVSXD r10|DWORD size: QWORD <|@ <|@
      nr  150  <|@ instruction r11|QWORD = MOV rax|DWORD size: DWORD <|@ <|@
      nr  152  <|@ instruction CMPBRANCH (x: r11|QWORD, y: r10|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B38" 
    xhandlers
    flags 
    probability 4601390724903751186
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction CMPCONSTBRANCH rax|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B20 -> B21 falseDestination: B20 -> B38 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601390724903751186
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601390724903751186
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction JUMP ~[] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B19" "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4605894324531121682
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction MOV [rcx|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr  170  <|@ instruction CMP rax|DWORD y: 3 size: DWORD <|@ <|@
      nr  172  <|@ instruction r10|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rax|DWORD) condition: |<| <|@ <|@
      nr  174  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1dd2cd05 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  176  <|@ instruction JUMP ~[] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B24" 
    successors "B24" "B25" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4605972295288554463
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  180  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B23" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576143750256751390
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction MOV [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  186  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  188  <|@ instruction JUMP ~[] destination: B24 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4605894324531121682
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction r10|DWORD = LEA [rax|DWORD - 4] size: DWORD <|@ <|@
      nr  194  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B27" 
    successors "B27" "B28" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4608461061127032607
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  198  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.3325162586814181 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4601362377763758169
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction MOV [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  204  <|@ instruction r8|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr  206  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 20] y: -1 size: DWORD <|@ <|@
      nr  208  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 24] y: -1 size: DWORD <|@ <|@
      nr  210  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 28] y: -1 size: DWORD <|@ <|@
      nr  212  <|@ instruction r11|DWORD = LEA [r11|DWORD + 4] size: DWORD <|@ <|@
      nr  214  <|@ instruction JUMP ~[] destination: B27 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4605894324531121681
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction JUMP ~[] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors "B30" "B31" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4605972295288554462
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  222  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4576143750256751390
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction MOV [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  228  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  230  <|@ instruction JUMP ~[] destination: B30 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4605894324531121681
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B32" 
    xhandlers
    flags 
    probability 4594320397366118342
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction JUMP ~[] destination: B17 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B17" 
    successors "B33" "B36" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction rcx|DWORD[_] = MOV [rsi|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  244  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction CMPCONSTBRANCH [rcx|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B36 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:63] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction rax|DWORD[_] = MOV [rsi|QWORD[.] + 68] size: DWORD <|@ <|@
      nr  250  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rax|DWORD = MOV [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:63] <|@ <|@
      nr  252  <|@ instruction r10|DWORD[_] = MOV [rcx|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  254  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction r10|DWORD = MOV [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:63] <|@ <|@
      nr  256  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction MOV [rsi|QWORD[.] + 40] y: 0 size: DWORD <|@ <|@
      nr  262  <|@ instruction MOV [rsi|QWORD[.] + 12] y: 0 size: DWORD <|@ <|@
      nr  264  <|@ instruction rcx|DWORD = MOVSXB [rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  268  <|@ instruction r10|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  270  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r10|DWORD) size: DWORD <|@ <|@
      nr  272  <|@ instruction INC [rsi|QWORD[.] + 44] size: DWORD <|@ <|@
      nr  274  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  276  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B16" 
    xhandlers
    flags 
    probability 4587023968036069872
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction JUMP ~[] destination: B1 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  284  <|@ instruction MOV [r15|QWORD + 1156] y: -41243 size: DWORD <|@ <|@
      nr  286  <|@ instruction MOV [r15|QWORD + 1168] y: 1304 size: QWORD <|@ <|@
      nr  288  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:451) [bci: 15]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:15] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-84243|0xfffffffffffeb6ed] // MoveResolver resolve mapping <|@ <|@
      nr  292  <|@ instruction JUMP ~[] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  296  <|@ instruction MOV [r15|QWORD + 1156] y: -47643 size: DWORD <|@ <|@
      nr  298  <|@ instruction MOV [r15|QWORD + 1168] y: 2072 size: QWORD <|@ <|@
      nr  300  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:39] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-54579|0xffffffffffff2acd] // MoveResolver resolve mapping <|@ <|@
      nr  304  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B35" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  308  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  310  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  312  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:63] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_m1     
     2: putfield      #2          // first:int
     5: aload_0       
     6: iconst_0      
     7: putfield      #3          // last:int
    10: aload_0       
    11: iconst_m1     
    12: putfield      #4          // oldLast:int
    15: iconst_0      
    16: istore_1      
    17: iload_1       
    18: aload_0       
    19: getfield      #12         // groups:int[]
    22: arraylength   
    23: if_icmpge     39
    26: aload_0       
    27: getfield      #12         // groups:int[]
    30: iload_1       
    31: iconst_m1     
    32: iastore       
    33: iinc          
    36: goto          17
    39: iconst_0      
    40: istore_1      
    41: iload_1       
    42: aload_0       
    43: getfield      #14         // locals:int[]
    46: arraylength   
    47: if_icmpge     63
    50: aload_0       
    51: getfield      #14         // locals:int[]
    54: iload_1       
    55: iconst_m1     
    56: iastore       
    57: iinc          
    60: goto          41
    63: iconst_0      
    64: istore_1      
    65: iload_1       
    66: aload_0       
    67: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    70: arraylength   
    71: if_icmpge     98
    74: aload_0       
    75: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    78: iload_1       
    79: aaload        
    80: ifnull        92
    83: aload_0       
    84: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    87: iload_1       
    88: aaload        
    89: invokevirtual #32         // java.util.regex.IntHashSet.clear:()void
    92: iinc          
    95: goto          65
    98: aload_0       
    99: iconst_0      
   100: putfield      #5          // lastAppendPosition:int
   103: aload_0       
   104: iconst_0      
   105: putfield      #33         // from:int
   108: aload_0       
   109: aload_0       
   110: invokevirtual #34         // getTextLength:()int
   113: putfield      #35         // to:int
   116: aload_0       
   117: dup           
   118: getfield      #31         // modCount:int
   121: iconst_1      
   122: iadd          
   123: putfield      #31         // modCount:int
   126: aload_0       
   127: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After EdgeMoveOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@59e1caa slotKind: QWORD <|@ <|@
      nr    8  <|@ instruction rcx|DWORD[_] = MOV [rsi|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   10  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:448) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rax|DWORD = MOV [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction MOV [rsi|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr   14  <|@ instruction MOV [rsi|QWORD[.] + 32] y: 0 size: DWORD <|@ <|@
      nr   16  <|@ instruction MOV [rsi|QWORD[.] + 36] y: -1 size: DWORD <|@ <|@
      nr   18  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.04762264888183043 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606753472112500193
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   22  <|@ instruction r10|DWORD = DEC rax|DWORD size: DWORD <|@ <|@
      nr   24  <|@ instruction r10|QWORD = MOVSXD r10|DWORD size: QWORD <|@ <|@
      nr   26  <|@ instruction r11|QWORD = MOV rax|DWORD size: DWORD <|@ <|@
      nr   28  <|@ instruction CMPBRANCH (x: r11|QWORD, y: r10|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B39" 
    xhandlers
    flags 
    probability 4602249872485129697
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   32  <|@ instruction CMPCONSTBRANCH rax|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B39 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602249872485129697
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   36  <|@ instruction JUMP ~[] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602249872485129697
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction JUMP ~[] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606753472112500193
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction MOV [rcx|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr   46  <|@ instruction CMP rax|DWORD y: 3 size: DWORD <|@ <|@
      nr   48  <|@ instruction r10|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rax|DWORD) condition: |<| <|@ <|@
      nr   50  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1dd2cd05 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   52  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors "B8" "B9" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606840121128330737
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   56  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699158794208206
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction MOV [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   62  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr   64  <|@ instruction JUMP ~[] destination: B8 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606753472112500194
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction r10|DWORD = LEA [rax|DWORD - 16] size: DWORD <|@ <|@
      nr   70  <|@ instruction JUMP ~[] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" 
    successors "B11" "B12" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608039801321515939
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   74  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.19993647348429622 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B10" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597742867212592525
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction MOV [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   80  <|@ instruction r8|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr   82  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 20] y: -1 size: DWORD <|@ <|@
      nr   84  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 24] y: -1 size: DWORD <|@ <|@
      nr   86  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 28] y: -1 size: DWORD <|@ <|@
      nr   88  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 32] y: -1 size: DWORD <|@ <|@
      nr   90  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 36] y: -1 size: DWORD <|@ <|@
      nr   92  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 40] y: -1 size: DWORD <|@ <|@
      nr   94  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 44] y: -1 size: DWORD <|@ <|@
      nr   96  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 48] y: -1 size: DWORD <|@ <|@
      nr   98  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 52] y: -1 size: DWORD <|@ <|@
      nr  100  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 56] y: -1 size: DWORD <|@ <|@
      nr  102  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 60] y: -1 size: DWORD <|@ <|@
      nr  104  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 64] y: -1 size: DWORD <|@ <|@
      nr  106  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 68] y: -1 size: DWORD <|@ <|@
      nr  108  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 72] y: -1 size: DWORD <|@ <|@
      nr  110  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 76] y: -1 size: DWORD <|@ <|@
      nr  112  <|@ instruction r11|DWORD = LEA [r11|DWORD + 16] size: DWORD <|@ <|@
      nr  114  <|@ instruction JUMP ~[] destination: B11 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606753472112500195
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606840121128330739
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  122  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699158794208207
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction MOV [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  128  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  130  <|@ instruction JUMP ~[] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606753472112500196
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  134  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B1" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182418800017410
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction rcx|DWORD[_] = MOV [rsi|QWORD[.] + 64] size: DWORD <|@ <|@
      nr  140  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rax|DWORD = MOV [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:39] <|@ <|@
      nr  142  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.1430071915215746 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4605894324531121682
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  146  <|@ instruction r10|DWORD = DEC rax|DWORD size: DWORD <|@ <|@
      nr  148  <|@ instruction r10|QWORD = MOVSXD r10|DWORD size: QWORD <|@ <|@
      nr  150  <|@ instruction r11|QWORD = MOV rax|DWORD size: DWORD <|@ <|@
      nr  152  <|@ instruction CMPBRANCH (x: r11|QWORD, y: r10|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B38" 
    xhandlers
    flags 
    probability 4601390724903751186
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction CMPCONSTBRANCH rax|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B20 -> B21 falseDestination: B20 -> B38 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601390724903751186
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601390724903751186
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction JUMP ~[] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B19" "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4605894324531121682
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction MOV [rcx|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr  170  <|@ instruction CMP rax|DWORD y: 3 size: DWORD <|@ <|@
      nr  172  <|@ instruction r10|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rax|DWORD) condition: |<| <|@ <|@
      nr  174  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1dd2cd05 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  176  <|@ instruction JUMP ~[] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B24" 
    successors "B24" "B25" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4605972295288554463
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  180  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B23" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576143750256751390
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction MOV [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  186  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  188  <|@ instruction JUMP ~[] destination: B24 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4605894324531121682
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction r10|DWORD = LEA [rax|DWORD - 4] size: DWORD <|@ <|@
      nr  194  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B27" 
    successors "B27" "B28" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4608461061127032607
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  198  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.3325162586814181 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4601362377763758169
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction MOV [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  204  <|@ instruction r8|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr  206  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 20] y: -1 size: DWORD <|@ <|@
      nr  208  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 24] y: -1 size: DWORD <|@ <|@
      nr  210  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 28] y: -1 size: DWORD <|@ <|@
      nr  212  <|@ instruction r11|DWORD = LEA [r11|DWORD + 4] size: DWORD <|@ <|@
      nr  214  <|@ instruction JUMP ~[] destination: B27 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4605894324531121681
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction JUMP ~[] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors "B30" "B31" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4605972295288554462
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  222  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4576143750256751390
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction MOV [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  228  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  230  <|@ instruction JUMP ~[] destination: B30 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4605894324531121681
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B32" 
    xhandlers
    flags 
    probability 4594320397366118342
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction JUMP ~[] destination: B17 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B17" 
    successors "B33" "B36" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction rcx|DWORD[_] = MOV [rsi|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  244  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction CMPCONSTBRANCH [rcx|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B36 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:63] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction rax|DWORD[_] = MOV [rsi|QWORD[.] + 68] size: DWORD <|@ <|@
      nr  250  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rax|DWORD = MOV [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:63] <|@ <|@
      nr  252  <|@ instruction r10|DWORD[_] = MOV [rcx|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  254  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction r10|DWORD = MOV [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:63] <|@ <|@
      nr  256  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction MOV [rsi|QWORD[.] + 40] y: 0 size: DWORD <|@ <|@
      nr  262  <|@ instruction MOV [rsi|QWORD[.] + 12] y: 0 size: DWORD <|@ <|@
      nr  264  <|@ instruction rcx|DWORD = MOVSXB [rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  268  <|@ instruction r10|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  270  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r10|DWORD) size: DWORD <|@ <|@
      nr  272  <|@ instruction INC [rsi|QWORD[.] + 44] size: DWORD <|@ <|@
      nr  274  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  276  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B16" 
    xhandlers
    flags 
    probability 4587023968036069872
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction JUMP ~[] destination: B1 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  284  <|@ instruction MOV [r15|QWORD + 1156] y: -41243 size: DWORD <|@ <|@
      nr  286  <|@ instruction MOV [r15|QWORD + 1168] y: 1304 size: QWORD <|@ <|@
      nr  288  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:451) [bci: 15]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:15] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-84243|0xfffffffffffeb6ed] // MoveResolver resolve mapping <|@ <|@
      nr  292  <|@ instruction JUMP ~[] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  296  <|@ instruction MOV [r15|QWORD + 1156] y: -47643 size: DWORD <|@ <|@
      nr  298  <|@ instruction MOV [r15|QWORD + 1168] y: 2072 size: QWORD <|@ <|@
      nr  300  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:39] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-54579|0xffffffffffff2acd] // MoveResolver resolve mapping <|@ <|@
      nr  304  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B35" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  308  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  310  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  312  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:63] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_m1     
     2: putfield      #2          // first:int
     5: aload_0       
     6: iconst_0      
     7: putfield      #3          // last:int
    10: aload_0       
    11: iconst_m1     
    12: putfield      #4          // oldLast:int
    15: iconst_0      
    16: istore_1      
    17: iload_1       
    18: aload_0       
    19: getfield      #12         // groups:int[]
    22: arraylength   
    23: if_icmpge     39
    26: aload_0       
    27: getfield      #12         // groups:int[]
    30: iload_1       
    31: iconst_m1     
    32: iastore       
    33: iinc          
    36: goto          17
    39: iconst_0      
    40: istore_1      
    41: iload_1       
    42: aload_0       
    43: getfield      #14         // locals:int[]
    46: arraylength   
    47: if_icmpge     63
    50: aload_0       
    51: getfield      #14         // locals:int[]
    54: iload_1       
    55: iconst_m1     
    56: iastore       
    57: iinc          
    60: goto          41
    63: iconst_0      
    64: istore_1      
    65: iload_1       
    66: aload_0       
    67: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    70: arraylength   
    71: if_icmpge     98
    74: aload_0       
    75: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    78: iload_1       
    79: aaload        
    80: ifnull        92
    83: aload_0       
    84: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    87: iload_1       
    88: aaload        
    89: invokevirtual #32         // java.util.regex.IntHashSet.clear:()void
    92: iinc          
    95: goto          65
    98: aload_0       
    99: iconst_0      
   100: putfield      #5          // lastAppendPosition:int
   103: aload_0       
   104: iconst_0      
   105: putfield      #33         // from:int
   108: aload_0       
   109: aload_0       
   110: invokevirtual #34         // getTextLength:()int
   113: putfield      #35         // to:int
   116: aload_0       
   117: dup           
   118: getfield      #31         // modCount:int
   121: iconst_1      
   122: iadd          
   123: putfield      #31         // modCount:int
   126: aload_0       
   127: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After RedundantMoveElimination"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@59e1caa slotKind: QWORD <|@ <|@
      nr    8  <|@ instruction rcx|DWORD[_] = MOV [rsi|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   10  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:448) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rax|DWORD = MOV [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction MOV [rsi|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr   14  <|@ instruction MOV [rsi|QWORD[.] + 32] y: 0 size: DWORD <|@ <|@
      nr   16  <|@ instruction MOV [rsi|QWORD[.] + 36] y: -1 size: DWORD <|@ <|@
      nr   18  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.04762264888183043 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606753472112500193
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   22  <|@ instruction r10|DWORD = DEC rax|DWORD size: DWORD <|@ <|@
      nr   24  <|@ instruction r10|QWORD = MOVSXD r10|DWORD size: QWORD <|@ <|@
      nr   26  <|@ instruction r11|QWORD = MOV rax|DWORD size: DWORD <|@ <|@
      nr   28  <|@ instruction CMPBRANCH (x: r11|QWORD, y: r10|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B39" 
    xhandlers
    flags 
    probability 4602249872485129697
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   32  <|@ instruction CMPCONSTBRANCH rax|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B39 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602249872485129697
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   36  <|@ instruction JUMP ~[] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602249872485129697
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction JUMP ~[] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606753472112500193
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction MOV [rcx|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr   46  <|@ instruction CMP rax|DWORD y: 3 size: DWORD <|@ <|@
      nr   48  <|@ instruction r10|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rax|DWORD) condition: |<| <|@ <|@
      nr   50  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1dd2cd05 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   52  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors "B8" "B9" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606840121128330737
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   56  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699158794208206
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction MOV [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   62  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr   64  <|@ instruction JUMP ~[] destination: B8 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606753472112500194
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction r10|DWORD = LEA [rax|DWORD - 16] size: DWORD <|@ <|@
      nr   70  <|@ instruction JUMP ~[] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" 
    successors "B11" "B12" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608039801321515939
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   74  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.19993647348429622 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B10" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597742867212592525
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction MOV [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   80  <|@ instruction r8|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr   82  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 20] y: -1 size: DWORD <|@ <|@
      nr   84  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 24] y: -1 size: DWORD <|@ <|@
      nr   86  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 28] y: -1 size: DWORD <|@ <|@
      nr   88  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 32] y: -1 size: DWORD <|@ <|@
      nr   90  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 36] y: -1 size: DWORD <|@ <|@
      nr   92  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 40] y: -1 size: DWORD <|@ <|@
      nr   94  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 44] y: -1 size: DWORD <|@ <|@
      nr   96  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 48] y: -1 size: DWORD <|@ <|@
      nr   98  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 52] y: -1 size: DWORD <|@ <|@
      nr  100  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 56] y: -1 size: DWORD <|@ <|@
      nr  102  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 60] y: -1 size: DWORD <|@ <|@
      nr  104  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 64] y: -1 size: DWORD <|@ <|@
      nr  106  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 68] y: -1 size: DWORD <|@ <|@
      nr  108  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 72] y: -1 size: DWORD <|@ <|@
      nr  110  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 76] y: -1 size: DWORD <|@ <|@
      nr  112  <|@ instruction r11|DWORD = LEA [r11|DWORD + 16] size: DWORD <|@ <|@
      nr  114  <|@ instruction JUMP ~[] destination: B11 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606753472112500195
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606840121128330739
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  122  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699158794208207
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction MOV [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  128  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  130  <|@ instruction JUMP ~[] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606753472112500196
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  134  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B1" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182418800017410
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction rcx|DWORD[_] = MOV [rsi|QWORD[.] + 64] size: DWORD <|@ <|@
      nr  140  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rax|DWORD = MOV [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:39] <|@ <|@
      nr  142  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.1430071915215746 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4605894324531121682
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  146  <|@ instruction r10|DWORD = DEC rax|DWORD size: DWORD <|@ <|@
      nr  148  <|@ instruction r10|QWORD = MOVSXD r10|DWORD size: QWORD <|@ <|@
      nr  150  <|@ instruction r11|QWORD = MOV rax|DWORD size: DWORD <|@ <|@
      nr  152  <|@ instruction CMPBRANCH (x: r11|QWORD, y: r10|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B38" 
    xhandlers
    flags 
    probability 4601390724903751186
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction CMPCONSTBRANCH rax|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B20 -> B21 falseDestination: B20 -> B38 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601390724903751186
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601390724903751186
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction JUMP ~[] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B19" "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4605894324531121682
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction MOV [rcx|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr  170  <|@ instruction CMP rax|DWORD y: 3 size: DWORD <|@ <|@
      nr  172  <|@ instruction r10|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rax|DWORD) condition: |<| <|@ <|@
      nr  174  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1dd2cd05 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  176  <|@ instruction JUMP ~[] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B24" 
    successors "B24" "B25" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4605972295288554463
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  180  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B23" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576143750256751390
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction MOV [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  186  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  188  <|@ instruction JUMP ~[] destination: B24 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4605894324531121682
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction r10|DWORD = LEA [rax|DWORD - 4] size: DWORD <|@ <|@
      nr  194  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B27" 
    successors "B27" "B28" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4608461061127032607
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  198  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.3325162586814181 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4601362377763758169
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction MOV [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  204  <|@ instruction r8|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr  206  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 20] y: -1 size: DWORD <|@ <|@
      nr  208  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 24] y: -1 size: DWORD <|@ <|@
      nr  210  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 28] y: -1 size: DWORD <|@ <|@
      nr  212  <|@ instruction r11|DWORD = LEA [r11|DWORD + 4] size: DWORD <|@ <|@
      nr  214  <|@ instruction JUMP ~[] destination: B27 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4605894324531121681
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction JUMP ~[] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors "B30" "B31" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4605972295288554462
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  222  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4576143750256751390
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction MOV [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  228  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  230  <|@ instruction JUMP ~[] destination: B30 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4605894324531121681
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B32" 
    xhandlers
    flags 
    probability 4594320397366118342
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction JUMP ~[] destination: B17 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B17" 
    successors "B33" "B36" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction rcx|DWORD[_] = MOV [rsi|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  244  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction CMPCONSTBRANCH [rcx|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B36 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:63] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction rax|DWORD[_] = MOV [rsi|QWORD[.] + 68] size: DWORD <|@ <|@
      nr  250  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rax|DWORD = MOV [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:63] <|@ <|@
      nr  252  <|@ instruction r10|DWORD[_] = MOV [rcx|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  254  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction r10|DWORD = MOV [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:63] <|@ <|@
      nr  256  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction MOV [rsi|QWORD[.] + 40] y: 0 size: DWORD <|@ <|@
      nr  262  <|@ instruction MOV [rsi|QWORD[.] + 12] y: 0 size: DWORD <|@ <|@
      nr  264  <|@ instruction rcx|DWORD = MOVSXB [rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  268  <|@ instruction r10|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  270  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r10|DWORD) size: DWORD <|@ <|@
      nr  272  <|@ instruction INC [rsi|QWORD[.] + 44] size: DWORD <|@ <|@
      nr  274  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  276  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B16" 
    xhandlers
    flags 
    probability 4587023968036069872
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction JUMP ~[] destination: B1 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  284  <|@ instruction MOV [r15|QWORD + 1156] y: -41243 size: DWORD <|@ <|@
      nr  286  <|@ instruction MOV [r15|QWORD + 1168] y: 1304 size: QWORD <|@ <|@
      nr  288  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:451) [bci: 15]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:15] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-84243|0xfffffffffffeb6ed] // MoveResolver resolve mapping <|@ <|@
      nr  292  <|@ instruction JUMP ~[] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  296  <|@ instruction MOV [r15|QWORD + 1156] y: -47643 size: DWORD <|@ <|@
      nr  298  <|@ instruction MOV [r15|QWORD + 1168] y: 2072 size: QWORD <|@ <|@
      nr  300  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:39] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-54579|0xffffffffffff2acd] // MoveResolver resolve mapping <|@ <|@
      nr  304  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B35" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  308  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  310  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  312  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:63] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_m1     
     2: putfield      #2          // first:int
     5: aload_0       
     6: iconst_0      
     7: putfield      #3          // last:int
    10: aload_0       
    11: iconst_m1     
    12: putfield      #4          // oldLast:int
    15: iconst_0      
    16: istore_1      
    17: iload_1       
    18: aload_0       
    19: getfield      #12         // groups:int[]
    22: arraylength   
    23: if_icmpge     39
    26: aload_0       
    27: getfield      #12         // groups:int[]
    30: iload_1       
    31: iconst_m1     
    32: iastore       
    33: iinc          
    36: goto          17
    39: iconst_0      
    40: istore_1      
    41: iload_1       
    42: aload_0       
    43: getfield      #14         // locals:int[]
    46: arraylength   
    47: if_icmpge     63
    50: aload_0       
    51: getfield      #14         // locals:int[]
    54: iload_1       
    55: iconst_m1     
    56: iastore       
    57: iinc          
    60: goto          41
    63: iconst_0      
    64: istore_1      
    65: iload_1       
    66: aload_0       
    67: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    70: arraylength   
    71: if_icmpge     98
    74: aload_0       
    75: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    78: iload_1       
    79: aaload        
    80: ifnull        92
    83: aload_0       
    84: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    87: iload_1       
    88: aaload        
    89: invokevirtual #32         // java.util.regex.IntHashSet.clear:()void
    92: iinc          
    95: goto          65
    98: aload_0       
    99: iconst_0      
   100: putfield      #5          // lastAppendPosition:int
   103: aload_0       
   104: iconst_0      
   105: putfield      #33         // from:int
   108: aload_0       
   109: aload_0       
   110: invokevirtual #34         // getTextLength:()int
   113: putfield      #35         // to:int
   116: aload_0       
   117: dup           
   118: getfield      #31         // modCount:int
   121: iconst_1      
   122: iadd          
   123: putfield      #31         // modCount:int
   126: aload_0       
   127: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After NullCheckOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@59e1caa slotKind: QWORD <|@ <|@
      nr    8  <|@ instruction rcx|DWORD[_] = MOV [rsi|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   10  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:448) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rax|DWORD = MOV [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction MOV [rsi|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr   14  <|@ instruction MOV [rsi|QWORD[.] + 32] y: 0 size: DWORD <|@ <|@
      nr   16  <|@ instruction MOV [rsi|QWORD[.] + 36] y: -1 size: DWORD <|@ <|@
      nr   18  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.04762264888183043 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606753472112500193
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   22  <|@ instruction r10|DWORD = DEC rax|DWORD size: DWORD <|@ <|@
      nr   24  <|@ instruction r10|QWORD = MOVSXD r10|DWORD size: QWORD <|@ <|@
      nr   26  <|@ instruction r11|QWORD = MOV rax|DWORD size: DWORD <|@ <|@
      nr   28  <|@ instruction CMPBRANCH (x: r11|QWORD, y: r10|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B39" 
    xhandlers
    flags 
    probability 4602249872485129697
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   32  <|@ instruction CMPCONSTBRANCH rax|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B39 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602249872485129697
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   36  <|@ instruction JUMP ~[] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602249872485129697
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction JUMP ~[] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606753472112500193
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction MOV [rcx|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr   46  <|@ instruction CMP rax|DWORD y: 3 size: DWORD <|@ <|@
      nr   48  <|@ instruction r10|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rax|DWORD) condition: |<| <|@ <|@
      nr   50  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1dd2cd05 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   52  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors "B8" "B9" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606840121128330737
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   56  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699158794208206
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction MOV [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   62  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr   64  <|@ instruction JUMP ~[] destination: B8 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606753472112500194
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction r10|DWORD = LEA [rax|DWORD - 16] size: DWORD <|@ <|@
      nr   70  <|@ instruction JUMP ~[] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" 
    successors "B11" "B12" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608039801321515939
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   74  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.19993647348429622 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B10" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597742867212592525
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction MOV [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   80  <|@ instruction r8|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr   82  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 20] y: -1 size: DWORD <|@ <|@
      nr   84  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 24] y: -1 size: DWORD <|@ <|@
      nr   86  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 28] y: -1 size: DWORD <|@ <|@
      nr   88  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 32] y: -1 size: DWORD <|@ <|@
      nr   90  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 36] y: -1 size: DWORD <|@ <|@
      nr   92  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 40] y: -1 size: DWORD <|@ <|@
      nr   94  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 44] y: -1 size: DWORD <|@ <|@
      nr   96  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 48] y: -1 size: DWORD <|@ <|@
      nr   98  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 52] y: -1 size: DWORD <|@ <|@
      nr  100  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 56] y: -1 size: DWORD <|@ <|@
      nr  102  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 60] y: -1 size: DWORD <|@ <|@
      nr  104  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 64] y: -1 size: DWORD <|@ <|@
      nr  106  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 68] y: -1 size: DWORD <|@ <|@
      nr  108  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 72] y: -1 size: DWORD <|@ <|@
      nr  110  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 76] y: -1 size: DWORD <|@ <|@
      nr  112  <|@ instruction r11|DWORD = LEA [r11|DWORD + 16] size: DWORD <|@ <|@
      nr  114  <|@ instruction JUMP ~[] destination: B11 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606753472112500195
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606840121128330739
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  122  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699158794208207
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction MOV [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  128  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  130  <|@ instruction JUMP ~[] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606753472112500196
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  134  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B1" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182418800017410
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction rcx|DWORD[_] = MOV [rsi|QWORD[.] + 64] size: DWORD <|@ <|@
      nr  140  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rax|DWORD = MOV [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:39] <|@ <|@
      nr  142  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.1430071915215746 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4605894324531121682
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  146  <|@ instruction r10|DWORD = DEC rax|DWORD size: DWORD <|@ <|@
      nr  148  <|@ instruction r10|QWORD = MOVSXD r10|DWORD size: QWORD <|@ <|@
      nr  150  <|@ instruction r11|QWORD = MOV rax|DWORD size: DWORD <|@ <|@
      nr  152  <|@ instruction CMPBRANCH (x: r11|QWORD, y: r10|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B38" 
    xhandlers
    flags 
    probability 4601390724903751186
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction CMPCONSTBRANCH rax|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B20 -> B21 falseDestination: B20 -> B38 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601390724903751186
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601390724903751186
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction JUMP ~[] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B19" "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4605894324531121682
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction MOV [rcx|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr  170  <|@ instruction CMP rax|DWORD y: 3 size: DWORD <|@ <|@
      nr  172  <|@ instruction r10|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rax|DWORD) condition: |<| <|@ <|@
      nr  174  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1dd2cd05 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  176  <|@ instruction JUMP ~[] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B24" 
    successors "B24" "B25" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4605972295288554463
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  180  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B23" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576143750256751390
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction MOV [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  186  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  188  <|@ instruction JUMP ~[] destination: B24 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4605894324531121682
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction r10|DWORD = LEA [rax|DWORD - 4] size: DWORD <|@ <|@
      nr  194  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B27" 
    successors "B27" "B28" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4608461061127032607
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  198  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.3325162586814181 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4601362377763758169
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction MOV [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  204  <|@ instruction r8|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr  206  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 20] y: -1 size: DWORD <|@ <|@
      nr  208  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 24] y: -1 size: DWORD <|@ <|@
      nr  210  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 28] y: -1 size: DWORD <|@ <|@
      nr  212  <|@ instruction r11|DWORD = LEA [r11|DWORD + 4] size: DWORD <|@ <|@
      nr  214  <|@ instruction JUMP ~[] destination: B27 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4605894324531121681
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction JUMP ~[] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors "B30" "B31" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4605972295288554462
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  222  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4576143750256751390
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction MOV [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  228  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  230  <|@ instruction JUMP ~[] destination: B30 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4605894324531121681
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B32" 
    xhandlers
    flags 
    probability 4594320397366118342
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction JUMP ~[] destination: B17 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B17" 
    successors "B33" "B36" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction rcx|DWORD[_] = MOV [rsi|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  244  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction CMPCONSTBRANCH [rcx|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B36 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:63] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction rax|DWORD[_] = MOV [rsi|QWORD[.] + 68] size: DWORD <|@ <|@
      nr  250  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rax|DWORD = MOV [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:63] <|@ <|@
      nr  252  <|@ instruction r10|DWORD[_] = MOV [rcx|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  254  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction r10|DWORD = MOV [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:63] <|@ <|@
      nr  256  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction MOV [rsi|QWORD[.] + 40] y: 0 size: DWORD <|@ <|@
      nr  262  <|@ instruction MOV [rsi|QWORD[.] + 12] y: 0 size: DWORD <|@ <|@
      nr  264  <|@ instruction rcx|DWORD = MOVSXB [rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  268  <|@ instruction r10|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  270  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r10|DWORD) size: DWORD <|@ <|@
      nr  272  <|@ instruction INC [rsi|QWORD[.] + 44] size: DWORD <|@ <|@
      nr  274  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  276  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B16" 
    xhandlers
    flags 
    probability 4587023968036069872
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction JUMP ~[] destination: B1 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  284  <|@ instruction MOV [r15|QWORD + 1156] y: -41243 size: DWORD <|@ <|@
      nr  286  <|@ instruction MOV [r15|QWORD + 1168] y: 1304 size: QWORD <|@ <|@
      nr  288  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:451) [bci: 15]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:15] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-84243|0xfffffffffffeb6ed] // MoveResolver resolve mapping <|@ <|@
      nr  292  <|@ instruction JUMP ~[] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  296  <|@ instruction MOV [r15|QWORD + 1156] y: -47643 size: DWORD <|@ <|@
      nr  298  <|@ instruction MOV [r15|QWORD + 1168] y: 2072 size: QWORD <|@ <|@
      nr  300  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:39] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-54579|0xffffffffffff2acd] // MoveResolver resolve mapping <|@ <|@
      nr  304  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B35" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  308  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  310  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  312  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:63] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_m1     
     2: putfield      #2          // first:int
     5: aload_0       
     6: iconst_0      
     7: putfield      #3          // last:int
    10: aload_0       
    11: iconst_m1     
    12: putfield      #4          // oldLast:int
    15: iconst_0      
    16: istore_1      
    17: iload_1       
    18: aload_0       
    19: getfield      #12         // groups:int[]
    22: arraylength   
    23: if_icmpge     39
    26: aload_0       
    27: getfield      #12         // groups:int[]
    30: iload_1       
    31: iconst_m1     
    32: iastore       
    33: iinc          
    36: goto          17
    39: iconst_0      
    40: istore_1      
    41: iload_1       
    42: aload_0       
    43: getfield      #14         // locals:int[]
    46: arraylength   
    47: if_icmpge     63
    50: aload_0       
    51: getfield      #14         // locals:int[]
    54: iload_1       
    55: iconst_m1     
    56: iastore       
    57: iinc          
    60: goto          41
    63: iconst_0      
    64: istore_1      
    65: iload_1       
    66: aload_0       
    67: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    70: arraylength   
    71: if_icmpge     98
    74: aload_0       
    75: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    78: iload_1       
    79: aaload        
    80: ifnull        92
    83: aload_0       
    84: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    87: iload_1       
    88: aaload        
    89: invokevirtual #32         // java.util.regex.IntHashSet.clear:()void
    92: iinc          
    95: goto          65
    98: aload_0       
    99: iconst_0      
   100: putfield      #5          // lastAppendPosition:int
   103: aload_0       
   104: iconst_0      
   105: putfield      #33         // from:int
   108: aload_0       
   109: aload_0       
   110: invokevirtual #34         // getTextLength:()int
   113: putfield      #35         // to:int
   116: aload_0       
   117: dup           
   118: getfield      #31         // modCount:int
   121: iconst_1      
   122: iadd          
   123: putfield      #31         // modCount:int
   126: aload_0       
   127: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After ControlFlowOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B16" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@59e1caa slotKind: QWORD <|@ <|@
      nr    8  <|@ instruction rcx|DWORD[_] = MOV [rsi|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   10  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:448) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rax|DWORD = MOV [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction MOV [rsi|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr   14  <|@ instruction MOV [rsi|QWORD[.] + 32] y: 0 size: DWORD <|@ <|@
      nr   16  <|@ instruction MOV [rsi|QWORD[.] + 36] y: -1 size: DWORD <|@ <|@
      nr   18  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.04762264888183043 condition: = trueDestination: B0 -> B16 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B6" "B4" 
    xhandlers
    flags 
    probability 4606753472112500193
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   22  <|@ instruction r10|DWORD = DEC rax|DWORD size: DWORD <|@ <|@
      nr   24  <|@ instruction r10|QWORD = MOVSXD r10|DWORD size: QWORD <|@ <|@
      nr   26  <|@ instruction r11|QWORD = MOV rax|DWORD size: DWORD <|@ <|@
      nr   28  <|@ instruction CMPBRANCH (x: r11|QWORD, y: r10|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B2 -> B6 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" "B39" 
    xhandlers
    flags 
    probability 4602249872485129697
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   32  <|@ instruction CMPCONSTBRANCH rax|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B6 falseDestination: B4 -> B39 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606753472112500193
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction MOV [rcx|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr   46  <|@ instruction CMP rax|DWORD y: 3 size: DWORD <|@ <|@
      nr   48  <|@ instruction r10|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rax|DWORD) condition: |<| <|@ <|@
      nr   50  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1dd2cd05 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   52  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors "B8" "B9" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606840121128330737
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   56  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699158794208206
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction MOV [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   62  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr   64  <|@ instruction JUMP ~[] destination: B8 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606753472112500194
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction r10|DWORD = LEA [rax|DWORD - 16] size: DWORD <|@ <|@
      nr   70  <|@ instruction JUMP ~[] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" 
    successors "B11" "B13" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608039801321515939
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   74  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.19993647348429622 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B10" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597742867212592525
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction MOV [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   80  <|@ instruction r8|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr   82  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 20] y: -1 size: DWORD <|@ <|@
      nr   84  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 24] y: -1 size: DWORD <|@ <|@
      nr   86  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 28] y: -1 size: DWORD <|@ <|@
      nr   88  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 32] y: -1 size: DWORD <|@ <|@
      nr   90  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 36] y: -1 size: DWORD <|@ <|@
      nr   92  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 40] y: -1 size: DWORD <|@ <|@
      nr   94  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 44] y: -1 size: DWORD <|@ <|@
      nr   96  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 48] y: -1 size: DWORD <|@ <|@
      nr   98  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 52] y: -1 size: DWORD <|@ <|@
      nr  100  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 56] y: -1 size: DWORD <|@ <|@
      nr  102  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 60] y: -1 size: DWORD <|@ <|@
      nr  104  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 64] y: -1 size: DWORD <|@ <|@
      nr  106  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 68] y: -1 size: DWORD <|@ <|@
      nr  108  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 72] y: -1 size: DWORD <|@ <|@
      nr  110  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 76] y: -1 size: DWORD <|@ <|@
      nr  112  <|@ instruction r11|DWORD = LEA [r11|DWORD + 16] size: DWORD <|@ <|@
      nr  114  <|@ instruction JUMP ~[] destination: B11 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B10" "B14" 
    successors "B14" "B16" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606840121128330739
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  122  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699158794208207
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction MOV [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  128  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  130  <|@ instruction JUMP ~[] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B13" "B0" 
    successors "B32" "B18" 
    xhandlers
    flags 
    probability 4607182418800017410
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction rcx|DWORD[_] = MOV [rsi|QWORD[.] + 64] size: DWORD <|@ <|@
      nr  140  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rax|DWORD = MOV [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:39] <|@ <|@
      nr  142  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.1430071915215746 condition: = trueDestination: B16 -> B32 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B22" "B20" 
    xhandlers
    flags 
    probability 4605894324531121682
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  146  <|@ instruction r10|DWORD = DEC rax|DWORD size: DWORD <|@ <|@
      nr  148  <|@ instruction r10|QWORD = MOVSXD r10|DWORD size: QWORD <|@ <|@
      nr  150  <|@ instruction r11|QWORD = MOV rax|DWORD size: DWORD <|@ <|@
      nr  152  <|@ instruction CMPBRANCH (x: r11|QWORD, y: r10|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B18 -> B22 falseDestination: B18 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" "B38" 
    xhandlers
    flags 
    probability 4601390724903751186
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction CMPCONSTBRANCH rax|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B20 -> B22 falseDestination: B20 -> B38 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4605894324531121682
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction MOV [rcx|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr  170  <|@ instruction CMP rax|DWORD y: 3 size: DWORD <|@ <|@
      nr  172  <|@ instruction r10|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rax|DWORD) condition: |<| <|@ <|@
      nr  174  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1dd2cd05 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  176  <|@ instruction JUMP ~[] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B24" 
    successors "B24" "B25" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4605972295288554463
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  180  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B23" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576143750256751390
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction MOV [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  186  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  188  <|@ instruction JUMP ~[] destination: B24 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4605894324531121682
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction r10|DWORD = LEA [rax|DWORD - 4] size: DWORD <|@ <|@
      nr  194  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B27" 
    successors "B27" "B29" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4608461061127032607
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  198  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.3325162586814181 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4601362377763758169
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction MOV [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  204  <|@ instruction r8|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr  206  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 20] y: -1 size: DWORD <|@ <|@
      nr  208  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 24] y: -1 size: DWORD <|@ <|@
      nr  210  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 28] y: -1 size: DWORD <|@ <|@
      nr  212  <|@ instruction r11|DWORD = LEA [r11|DWORD + 4] size: DWORD <|@ <|@
      nr  214  <|@ instruction JUMP ~[] destination: B27 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B26" "B30" 
    successors "B30" "B32" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4605972295288554462
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  222  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4576143750256751390
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction MOV [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  228  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  230  <|@ instruction JUMP ~[] destination: B30 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B29" "B16" 
    successors "B33" "B36" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction rcx|DWORD[_] = MOV [rsi|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  244  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction CMPCONSTBRANCH [rcx|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B36 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:63] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction rax|DWORD[_] = MOV [rsi|QWORD[.] + 68] size: DWORD <|@ <|@
      nr  250  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rax|DWORD = MOV [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:63] <|@ <|@
      nr  252  <|@ instruction r10|DWORD[_] = MOV [rcx|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  254  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction r10|DWORD = MOV [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:63] <|@ <|@
      nr  256  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction MOV [rsi|QWORD[.] + 40] y: 0 size: DWORD <|@ <|@
      nr  262  <|@ instruction MOV [rsi|QWORD[.] + 12] y: 0 size: DWORD <|@ <|@
      nr  264  <|@ instruction rcx|DWORD = MOVSXB [rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  268  <|@ instruction r10|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  270  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r10|DWORD) size: DWORD <|@ <|@
      nr  272  <|@ instruction INC [rsi|QWORD[.] + 44] size: DWORD <|@ <|@
      nr  274  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  276  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  284  <|@ instruction MOV [r15|QWORD + 1156] y: -41243 size: DWORD <|@ <|@
      nr  286  <|@ instruction MOV [r15|QWORD + 1168] y: 1304 size: QWORD <|@ <|@
      nr  288  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:451) [bci: 15]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:15] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-84243|0xfffffffffffeb6ed] // MoveResolver resolve mapping <|@ <|@
      nr  292  <|@ instruction JUMP ~[] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  296  <|@ instruction MOV [r15|QWORD + 1156] y: -47643 size: DWORD <|@ <|@
      nr  298  <|@ instruction MOV [r15|QWORD + 1168] y: 2072 size: QWORD <|@ <|@
      nr  300  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:39] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-54579|0xffffffffffff2acd] // MoveResolver resolve mapping <|@ <|@
      nr  304  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B35" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  308  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  310  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  312  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:63] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_m1     
     2: putfield      #2          // first:int
     5: aload_0       
     6: iconst_0      
     7: putfield      #3          // last:int
    10: aload_0       
    11: iconst_m1     
    12: putfield      #4          // oldLast:int
    15: iconst_0      
    16: istore_1      
    17: iload_1       
    18: aload_0       
    19: getfield      #12         // groups:int[]
    22: arraylength   
    23: if_icmpge     39
    26: aload_0       
    27: getfield      #12         // groups:int[]
    30: iload_1       
    31: iconst_m1     
    32: iastore       
    33: iinc          
    36: goto          17
    39: iconst_0      
    40: istore_1      
    41: iload_1       
    42: aload_0       
    43: getfield      #14         // locals:int[]
    46: arraylength   
    47: if_icmpge     63
    50: aload_0       
    51: getfield      #14         // locals:int[]
    54: iload_1       
    55: iconst_m1     
    56: iastore       
    57: iinc          
    60: goto          41
    63: iconst_0      
    64: istore_1      
    65: iload_1       
    66: aload_0       
    67: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    70: arraylength   
    71: if_icmpge     98
    74: aload_0       
    75: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    78: iload_1       
    79: aaload        
    80: ifnull        92
    83: aload_0       
    84: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    87: iload_1       
    88: aaload        
    89: invokevirtual #32         // java.util.regex.IntHashSet.clear:()void
    92: iinc          
    95: goto          65
    98: aload_0       
    99: iconst_0      
   100: putfield      #5          // lastAppendPosition:int
   103: aload_0       
   104: iconst_0      
   105: putfield      #33         // from:int
   108: aload_0       
   109: aload_0       
   110: invokevirtual #34         // getTextLength:()int
   113: putfield      #35         // to:int
   116: aload_0       
   117: dup           
   118: getfield      #31         // modCount:int
   121: iconst_1      
   122: iadd          
   123: putfield      #31         // modCount:int
   126: aload_0       
   127: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After ComputeCodeEmissionOrder"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B16" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@59e1caa slotKind: QWORD <|@ <|@
      nr    8  <|@ instruction rcx|DWORD[_] = MOV [rsi|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   10  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:448) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rax|DWORD = MOV [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction MOV [rsi|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr   14  <|@ instruction MOV [rsi|QWORD[.] + 32] y: 0 size: DWORD <|@ <|@
      nr   16  <|@ instruction MOV [rsi|QWORD[.] + 36] y: -1 size: DWORD <|@ <|@
      nr   18  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.04762264888183043 condition: = trueDestination: B0 -> B16 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B6" "B4" 
    xhandlers
    flags 
    probability 4606753472112500193
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   22  <|@ instruction r10|DWORD = DEC rax|DWORD size: DWORD <|@ <|@
      nr   24  <|@ instruction r10|QWORD = MOVSXD r10|DWORD size: QWORD <|@ <|@
      nr   26  <|@ instruction r11|QWORD = MOV rax|DWORD size: DWORD <|@ <|@
      nr   28  <|@ instruction CMPBRANCH (x: r11|QWORD, y: r10|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B2 -> B6 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" "B39" 
    xhandlers
    flags 
    probability 4602249872485129697
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   32  <|@ instruction CMPCONSTBRANCH rax|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B6 falseDestination: B4 -> B39 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606753472112500193
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction MOV [rcx|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr   46  <|@ instruction CMP rax|DWORD y: 3 size: DWORD <|@ <|@
      nr   48  <|@ instruction r10|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rax|DWORD) condition: |<| <|@ <|@
      nr   50  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1dd2cd05 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   52  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699158794208206
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction MOV [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   62  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr   64  <|@ instruction JUMP ~[] destination: B8 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors "B8" "B9" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606840121128330737
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   56  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B13" "B0" 
    successors "B32" "B18" 
    xhandlers
    flags 
    probability 4607182418800017410
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction rcx|DWORD[_] = MOV [rsi|QWORD[.] + 64] size: DWORD <|@ <|@
      nr  140  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rax|DWORD = MOV [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:39] <|@ <|@
      nr  142  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.1430071915215746 condition: = trueDestination: B16 -> B32 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B22" "B20" 
    xhandlers
    flags 
    probability 4605894324531121682
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  146  <|@ instruction r10|DWORD = DEC rax|DWORD size: DWORD <|@ <|@
      nr  148  <|@ instruction r10|QWORD = MOVSXD r10|DWORD size: QWORD <|@ <|@
      nr  150  <|@ instruction r11|QWORD = MOV rax|DWORD size: DWORD <|@ <|@
      nr  152  <|@ instruction CMPBRANCH (x: r11|QWORD, y: r10|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B18 -> B22 falseDestination: B18 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" "B38" 
    xhandlers
    flags 
    probability 4601390724903751186
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction CMPCONSTBRANCH rax|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B20 -> B22 falseDestination: B20 -> B38 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4605894324531121682
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction MOV [rcx|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr  170  <|@ instruction CMP rax|DWORD y: 3 size: DWORD <|@ <|@
      nr  172  <|@ instruction r10|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rax|DWORD) condition: |<| <|@ <|@
      nr  174  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1dd2cd05 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  176  <|@ instruction JUMP ~[] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B23" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576143750256751390
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction MOV [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  186  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  188  <|@ instruction JUMP ~[] destination: B24 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B24" 
    successors "B24" "B25" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4605972295288554463
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  180  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B29" "B16" 
    successors "B33" "B36" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction rcx|DWORD[_] = MOV [rsi|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  244  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction CMPCONSTBRANCH [rcx|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B36 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:63] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction rax|DWORD[_] = MOV [rsi|QWORD[.] + 68] size: DWORD <|@ <|@
      nr  250  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rax|DWORD = MOV [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:63] <|@ <|@
      nr  252  <|@ instruction r10|DWORD[_] = MOV [rcx|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  254  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction r10|DWORD = MOV [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:63] <|@ <|@
      nr  256  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction MOV [rsi|QWORD[.] + 40] y: 0 size: DWORD <|@ <|@
      nr  262  <|@ instruction MOV [rsi|QWORD[.] + 12] y: 0 size: DWORD <|@ <|@
      nr  264  <|@ instruction rcx|DWORD = MOVSXB [rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  268  <|@ instruction r10|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  270  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r10|DWORD) size: DWORD <|@ <|@
      nr  272  <|@ instruction INC [rsi|QWORD[.] + 44] size: DWORD <|@ <|@
      nr  274  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  276  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606753472112500194
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction r10|DWORD = LEA [rax|DWORD - 16] size: DWORD <|@ <|@
      nr   70  <|@ instruction JUMP ~[] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699158794208207
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction MOV [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  128  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  130  <|@ instruction JUMP ~[] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B10" "B14" 
    successors "B14" "B16" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606840121128330739
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 16 numbPhis: 1 label: ? <|@ <|@
      nr  122  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B10" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597742867212592525
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction MOV [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   80  <|@ instruction r8|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr   82  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 20] y: -1 size: DWORD <|@ <|@
      nr   84  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 24] y: -1 size: DWORD <|@ <|@
      nr   86  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 28] y: -1 size: DWORD <|@ <|@
      nr   88  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 32] y: -1 size: DWORD <|@ <|@
      nr   90  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 36] y: -1 size: DWORD <|@ <|@
      nr   92  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 40] y: -1 size: DWORD <|@ <|@
      nr   94  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 44] y: -1 size: DWORD <|@ <|@
      nr   96  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 48] y: -1 size: DWORD <|@ <|@
      nr   98  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 52] y: -1 size: DWORD <|@ <|@
      nr  100  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 56] y: -1 size: DWORD <|@ <|@
      nr  102  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 60] y: -1 size: DWORD <|@ <|@
      nr  104  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 64] y: -1 size: DWORD <|@ <|@
      nr  106  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 68] y: -1 size: DWORD <|@ <|@
      nr  108  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 72] y: -1 size: DWORD <|@ <|@
      nr  110  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 76] y: -1 size: DWORD <|@ <|@
      nr  112  <|@ instruction r11|DWORD = LEA [r11|DWORD + 16] size: DWORD <|@ <|@
      nr  114  <|@ instruction JUMP ~[] destination: B11 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" 
    successors "B11" "B13" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608039801321515939
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   74  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.19993647348429622 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4605894324531121682
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction r10|DWORD = LEA [rax|DWORD - 4] size: DWORD <|@ <|@
      nr  194  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4576143750256751390
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction MOV [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  228  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  230  <|@ instruction JUMP ~[] destination: B30 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B26" "B30" 
    successors "B30" "B32" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4605972295288554462
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 16 numbPhis: 1 label: ? <|@ <|@
      nr  222  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4601362377763758169
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction MOV [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  204  <|@ instruction r8|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr  206  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 20] y: -1 size: DWORD <|@ <|@
      nr  208  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 24] y: -1 size: DWORD <|@ <|@
      nr  210  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 28] y: -1 size: DWORD <|@ <|@
      nr  212  <|@ instruction r11|DWORD = LEA [r11|DWORD + 4] size: DWORD <|@ <|@
      nr  214  <|@ instruction JUMP ~[] destination: B27 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B27" 
    successors "B27" "B29" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4608461061127032607
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  198  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.3325162586814181 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  296  <|@ instruction MOV [r15|QWORD + 1156] y: -47643 size: DWORD <|@ <|@
      nr  298  <|@ instruction MOV [r15|QWORD + 1168] y: 2072 size: QWORD <|@ <|@
      nr  300  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:39] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-54579|0xffffffffffff2acd] // MoveResolver resolve mapping <|@ <|@
      nr  304  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B35" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  308  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  310  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  312  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:63] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-84243|0xfffffffffffeb6ed] // MoveResolver resolve mapping <|@ <|@
      nr  292  <|@ instruction JUMP ~[] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  284  <|@ instruction MOV [r15|QWORD + 1156] y: -41243 size: DWORD <|@ <|@
      nr  286  <|@ instruction MOV [r15|QWORD + 1168] y: 1304 size: QWORD <|@ <|@
      nr  288  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:451) [bci: 15]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:15] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_m1     
     2: putfield      #2          // first:int
     5: aload_0       
     6: iconst_0      
     7: putfield      #3          // last:int
    10: aload_0       
    11: iconst_m1     
    12: putfield      #4          // oldLast:int
    15: iconst_0      
    16: istore_1      
    17: iload_1       
    18: aload_0       
    19: getfield      #12         // groups:int[]
    22: arraylength   
    23: if_icmpge     39
    26: aload_0       
    27: getfield      #12         // groups:int[]
    30: iload_1       
    31: iconst_m1     
    32: iastore       
    33: iinc          
    36: goto          17
    39: iconst_0      
    40: istore_1      
    41: iload_1       
    42: aload_0       
    43: getfield      #14         // locals:int[]
    46: arraylength   
    47: if_icmpge     63
    50: aload_0       
    51: getfield      #14         // locals:int[]
    54: iload_1       
    55: iconst_m1     
    56: iastore       
    57: iinc          
    60: goto          41
    63: iconst_0      
    64: istore_1      
    65: iload_1       
    66: aload_0       
    67: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    70: arraylength   
    71: if_icmpge     98
    74: aload_0       
    75: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    78: iload_1       
    79: aaload        
    80: ifnull        92
    83: aload_0       
    84: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    87: iload_1       
    88: aaload        
    89: invokevirtual #32         // java.util.regex.IntHashSet.clear:()void
    92: iinc          
    95: goto          65
    98: aload_0       
    99: iconst_0      
   100: putfield      #5          // lastAppendPosition:int
   103: aload_0       
   104: iconst_0      
   105: putfield      #33         // from:int
   108: aload_0       
   109: aload_0       
   110: invokevirtual #34         // getTextLength:()int
   113: putfield      #35         // to:int
   116: aload_0       
   117: dup           
   118: getfield      #31         // modCount:int
   121: iconst_1      
   122: iadd          
   123: putfield      #31         // modCount:int
   126: aload_0       
   127: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After StackMoveOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B16" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@59e1caa slotKind: QWORD <|@ <|@
      nr    8  <|@ instruction rcx|DWORD[_] = MOV [rsi|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   10  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:448) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rax|DWORD = MOV [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction MOV [rsi|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr   14  <|@ instruction MOV [rsi|QWORD[.] + 32] y: 0 size: DWORD <|@ <|@
      nr   16  <|@ instruction MOV [rsi|QWORD[.] + 36] y: -1 size: DWORD <|@ <|@
      nr   18  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.04762264888183043 condition: = trueDestination: B0 -> B16 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B6" "B4" 
    xhandlers
    flags 
    probability 4606753472112500193
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   22  <|@ instruction r10|DWORD = DEC rax|DWORD size: DWORD <|@ <|@
      nr   24  <|@ instruction r10|QWORD = MOVSXD r10|DWORD size: QWORD <|@ <|@
      nr   26  <|@ instruction r11|QWORD = MOV rax|DWORD size: DWORD <|@ <|@
      nr   28  <|@ instruction CMPBRANCH (x: r11|QWORD, y: r10|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B2 -> B6 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" "B39" 
    xhandlers
    flags 
    probability 4602249872485129697
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   32  <|@ instruction CMPCONSTBRANCH rax|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B6 falseDestination: B4 -> B39 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606753472112500193
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction MOV [rcx|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr   46  <|@ instruction CMP rax|DWORD y: 3 size: DWORD <|@ <|@
      nr   48  <|@ instruction r10|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rax|DWORD) condition: |<| <|@ <|@
      nr   50  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1dd2cd05 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   52  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699158794208206
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction MOV [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   62  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr   64  <|@ instruction JUMP ~[] destination: B8 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors "B8" "B9" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606840121128330737
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   56  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B13" "B0" 
    successors "B32" "B18" 
    xhandlers
    flags 
    probability 4607182418800017410
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction rcx|DWORD[_] = MOV [rsi|QWORD[.] + 64] size: DWORD <|@ <|@
      nr  140  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rax|DWORD = MOV [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:39] <|@ <|@
      nr  142  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.1430071915215746 condition: = trueDestination: B16 -> B32 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B22" "B20" 
    xhandlers
    flags 
    probability 4605894324531121682
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  146  <|@ instruction r10|DWORD = DEC rax|DWORD size: DWORD <|@ <|@
      nr  148  <|@ instruction r10|QWORD = MOVSXD r10|DWORD size: QWORD <|@ <|@
      nr  150  <|@ instruction r11|QWORD = MOV rax|DWORD size: DWORD <|@ <|@
      nr  152  <|@ instruction CMPBRANCH (x: r11|QWORD, y: r10|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B18 -> B22 falseDestination: B18 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" "B38" 
    xhandlers
    flags 
    probability 4601390724903751186
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction CMPCONSTBRANCH rax|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B20 -> B22 falseDestination: B20 -> B38 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4605894324531121682
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction MOV [rcx|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr  170  <|@ instruction CMP rax|DWORD y: 3 size: DWORD <|@ <|@
      nr  172  <|@ instruction r10|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rax|DWORD) condition: |<| <|@ <|@
      nr  174  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1dd2cd05 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  176  <|@ instruction JUMP ~[] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B23" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576143750256751390
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction MOV [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  186  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  188  <|@ instruction JUMP ~[] destination: B24 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B24" 
    successors "B24" "B25" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4605972295288554463
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  180  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B29" "B16" 
    successors "B33" "B36" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction rcx|DWORD[_] = MOV [rsi|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  244  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction CMPCONSTBRANCH [rcx|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B36 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:63] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction rax|DWORD[_] = MOV [rsi|QWORD[.] + 68] size: DWORD <|@ <|@
      nr  250  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rax|DWORD = MOV [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:63] <|@ <|@
      nr  252  <|@ instruction r10|DWORD[_] = MOV [rcx|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  254  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction r10|DWORD = MOV [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:63] <|@ <|@
      nr  256  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction MOV [rsi|QWORD[.] + 40] y: 0 size: DWORD <|@ <|@
      nr  262  <|@ instruction MOV [rsi|QWORD[.] + 12] y: 0 size: DWORD <|@ <|@
      nr  264  <|@ instruction rcx|DWORD = MOVSXB [rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  268  <|@ instruction r10|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  270  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r10|DWORD) size: DWORD <|@ <|@
      nr  272  <|@ instruction INC [rsi|QWORD[.] + 44] size: DWORD <|@ <|@
      nr  274  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  276  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606753472112500194
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction r10|DWORD = LEA [rax|DWORD - 16] size: DWORD <|@ <|@
      nr   70  <|@ instruction JUMP ~[] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699158794208207
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction MOV [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  128  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  130  <|@ instruction JUMP ~[] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B10" "B14" 
    successors "B14" "B16" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606840121128330739
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 16 numbPhis: 1 label: ? <|@ <|@
      nr  122  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B10" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597742867212592525
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction MOV [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   80  <|@ instruction r8|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr   82  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 20] y: -1 size: DWORD <|@ <|@
      nr   84  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 24] y: -1 size: DWORD <|@ <|@
      nr   86  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 28] y: -1 size: DWORD <|@ <|@
      nr   88  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 32] y: -1 size: DWORD <|@ <|@
      nr   90  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 36] y: -1 size: DWORD <|@ <|@
      nr   92  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 40] y: -1 size: DWORD <|@ <|@
      nr   94  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 44] y: -1 size: DWORD <|@ <|@
      nr   96  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 48] y: -1 size: DWORD <|@ <|@
      nr   98  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 52] y: -1 size: DWORD <|@ <|@
      nr  100  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 56] y: -1 size: DWORD <|@ <|@
      nr  102  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 60] y: -1 size: DWORD <|@ <|@
      nr  104  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 64] y: -1 size: DWORD <|@ <|@
      nr  106  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 68] y: -1 size: DWORD <|@ <|@
      nr  108  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 72] y: -1 size: DWORD <|@ <|@
      nr  110  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 76] y: -1 size: DWORD <|@ <|@
      nr  112  <|@ instruction r11|DWORD = LEA [r11|DWORD + 16] size: DWORD <|@ <|@
      nr  114  <|@ instruction JUMP ~[] destination: B11 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" 
    successors "B11" "B13" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608039801321515939
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   74  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.19993647348429622 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4605894324531121682
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction r10|DWORD = LEA [rax|DWORD - 4] size: DWORD <|@ <|@
      nr  194  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4576143750256751390
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction MOV [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  228  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  230  <|@ instruction JUMP ~[] destination: B30 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B26" "B30" 
    successors "B30" "B32" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4605972295288554462
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 16 numbPhis: 1 label: ? <|@ <|@
      nr  222  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4601362377763758169
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction MOV [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  204  <|@ instruction r8|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr  206  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 20] y: -1 size: DWORD <|@ <|@
      nr  208  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 24] y: -1 size: DWORD <|@ <|@
      nr  210  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 28] y: -1 size: DWORD <|@ <|@
      nr  212  <|@ instruction r11|DWORD = LEA [r11|DWORD + 4] size: DWORD <|@ <|@
      nr  214  <|@ instruction JUMP ~[] destination: B27 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B27" 
    successors "B27" "B29" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4608461061127032607
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  198  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.3325162586814181 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  296  <|@ instruction MOV [r15|QWORD + 1156] y: -47643 size: DWORD <|@ <|@
      nr  298  <|@ instruction MOV [r15|QWORD + 1168] y: 2072 size: QWORD <|@ <|@
      nr  300  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:39] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-54579|0xffffffffffff2acd] // MoveResolver resolve mapping <|@ <|@
      nr  304  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B35" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  308  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  310  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  312  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:63] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-84243|0xfffffffffffeb6ed] // MoveResolver resolve mapping <|@ <|@
      nr  292  <|@ instruction JUMP ~[] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  284  <|@ instruction MOV [r15|QWORD + 1156] y: -41243 size: DWORD <|@ <|@
      nr  286  <|@ instruction MOV [r15|QWORD + 1168] y: 1304 size: QWORD <|@ <|@
      nr  288  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:451) [bci: 15]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:15] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_m1     
     2: putfield      #2          // first:int
     5: aload_0       
     6: iconst_0      
     7: putfield      #3          // last:int
    10: aload_0       
    11: iconst_m1     
    12: putfield      #4          // oldLast:int
    15: iconst_0      
    16: istore_1      
    17: iload_1       
    18: aload_0       
    19: getfield      #12         // groups:int[]
    22: arraylength   
    23: if_icmpge     39
    26: aload_0       
    27: getfield      #12         // groups:int[]
    30: iload_1       
    31: iconst_m1     
    32: iastore       
    33: iinc          
    36: goto          17
    39: iconst_0      
    40: istore_1      
    41: iload_1       
    42: aload_0       
    43: getfield      #14         // locals:int[]
    46: arraylength   
    47: if_icmpge     63
    50: aload_0       
    51: getfield      #14         // locals:int[]
    54: iload_1       
    55: iconst_m1     
    56: iastore       
    57: iinc          
    60: goto          41
    63: iconst_0      
    64: istore_1      
    65: iload_1       
    66: aload_0       
    67: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    70: arraylength   
    71: if_icmpge     98
    74: aload_0       
    75: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    78: iload_1       
    79: aaload        
    80: ifnull        92
    83: aload_0       
    84: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    87: iload_1       
    88: aaload        
    89: invokevirtual #32         // java.util.regex.IntHashSet.clear:()void
    92: iinc          
    95: goto          65
    98: aload_0       
    99: iconst_0      
   100: putfield      #5          // lastAppendPosition:int
   103: aload_0       
   104: iconst_0      
   105: putfield      #33         // from:int
   108: aload_0       
   109: aload_0       
   110: invokevirtual #34         // getTextLength:()int
   113: putfield      #35         // to:int
   116: aload_0       
   117: dup           
   118: getfield      #31         // modCount:int
   121: iconst_1      
   122: iadd          
   123: putfield      #31         // modCount:int
   126: aload_0       
   127: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B16" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@59e1caa slotKind: QWORD <|@ <|@
      nr    8  <|@ instruction rcx|DWORD[_] = MOV [rsi|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   10  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:448) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rax|DWORD = MOV [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction MOV [rsi|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr   14  <|@ instruction MOV [rsi|QWORD[.] + 32] y: 0 size: DWORD <|@ <|@
      nr   16  <|@ instruction MOV [rsi|QWORD[.] + 36] y: -1 size: DWORD <|@ <|@
      nr   18  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.04762264888183043 condition: = trueDestination: B0 -> B16 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B6" "B4" 
    xhandlers
    flags 
    probability 4606753472112500193
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   22  <|@ instruction r10|DWORD = DEC rax|DWORD size: DWORD <|@ <|@
      nr   24  <|@ instruction r10|QWORD = MOVSXD r10|DWORD size: QWORD <|@ <|@
      nr   26  <|@ instruction r11|QWORD = MOV rax|DWORD size: DWORD <|@ <|@
      nr   28  <|@ instruction CMPBRANCH (x: r11|QWORD, y: r10|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B2 -> B6 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" "B39" 
    xhandlers
    flags 
    probability 4602249872485129697
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   32  <|@ instruction CMPCONSTBRANCH rax|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B6 falseDestination: B4 -> B39 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606753472112500193
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction MOV [rcx|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr   46  <|@ instruction CMP rax|DWORD y: 3 size: DWORD <|@ <|@
      nr   48  <|@ instruction r10|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rax|DWORD) condition: |<| <|@ <|@
      nr   50  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1dd2cd05 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   52  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699158794208206
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction MOV [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   62  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr   64  <|@ instruction JUMP ~[] destination: B8 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors "B8" "B9" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606840121128330737
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   56  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B13" "B0" 
    successors "B32" "B18" 
    xhandlers
    flags 
    probability 4607182418800017410
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction rcx|DWORD[_] = MOV [rsi|QWORD[.] + 64] size: DWORD <|@ <|@
      nr  140  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rax|DWORD = MOV [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:39] <|@ <|@
      nr  142  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.1430071915215746 condition: = trueDestination: B16 -> B32 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B22" "B20" 
    xhandlers
    flags 
    probability 4605894324531121682
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  146  <|@ instruction r10|DWORD = DEC rax|DWORD size: DWORD <|@ <|@
      nr  148  <|@ instruction r10|QWORD = MOVSXD r10|DWORD size: QWORD <|@ <|@
      nr  150  <|@ instruction r11|QWORD = MOV rax|DWORD size: DWORD <|@ <|@
      nr  152  <|@ instruction CMPBRANCH (x: r11|QWORD, y: r10|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B18 -> B22 falseDestination: B18 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" "B38" 
    xhandlers
    flags 
    probability 4601390724903751186
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction CMPCONSTBRANCH rax|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B20 -> B22 falseDestination: B20 -> B38 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4605894324531121682
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction MOV [rcx|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr  170  <|@ instruction CMP rax|DWORD y: 3 size: DWORD <|@ <|@
      nr  172  <|@ instruction r10|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rax|DWORD) condition: |<| <|@ <|@
      nr  174  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1dd2cd05 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  176  <|@ instruction JUMP ~[] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B23" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576143750256751390
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction MOV [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  186  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  188  <|@ instruction JUMP ~[] destination: B24 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B24" 
    successors "B24" "B25" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4605972295288554463
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  180  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B29" "B16" 
    successors "B33" "B36" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction rcx|DWORD[_] = MOV [rsi|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  244  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction CMPCONSTBRANCH [rcx|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B36 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:63] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction rax|DWORD[_] = MOV [rsi|QWORD[.] + 68] size: DWORD <|@ <|@
      nr  250  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rax|DWORD = MOV [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:63] <|@ <|@
      nr  252  <|@ instruction r10|DWORD[_] = MOV [rcx|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  254  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction r10|DWORD = MOV [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:63] <|@ <|@
      nr  256  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction MOV [rsi|QWORD[.] + 40] y: 0 size: DWORD <|@ <|@
      nr  262  <|@ instruction MOV [rsi|QWORD[.] + 12] y: 0 size: DWORD <|@ <|@
      nr  264  <|@ instruction rcx|DWORD = MOVSXB [rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  268  <|@ instruction r10|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  270  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r10|DWORD) size: DWORD <|@ <|@
      nr  272  <|@ instruction INC [rsi|QWORD[.] + 44] size: DWORD <|@ <|@
      nr  274  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  276  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606753472112500194
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction r10|DWORD = LEA [rax|DWORD - 16] size: DWORD <|@ <|@
      nr   70  <|@ instruction JUMP ~[] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699158794208207
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction MOV [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  128  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  130  <|@ instruction JUMP ~[] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B10" "B14" 
    successors "B14" "B16" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606840121128330739
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 16 numbPhis: 1 label: ? <|@ <|@
      nr  122  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B10" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597742867212592525
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction MOV [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   80  <|@ instruction r8|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr   82  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 20] y: -1 size: DWORD <|@ <|@
      nr   84  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 24] y: -1 size: DWORD <|@ <|@
      nr   86  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 28] y: -1 size: DWORD <|@ <|@
      nr   88  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 32] y: -1 size: DWORD <|@ <|@
      nr   90  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 36] y: -1 size: DWORD <|@ <|@
      nr   92  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 40] y: -1 size: DWORD <|@ <|@
      nr   94  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 44] y: -1 size: DWORD <|@ <|@
      nr   96  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 48] y: -1 size: DWORD <|@ <|@
      nr   98  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 52] y: -1 size: DWORD <|@ <|@
      nr  100  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 56] y: -1 size: DWORD <|@ <|@
      nr  102  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 60] y: -1 size: DWORD <|@ <|@
      nr  104  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 64] y: -1 size: DWORD <|@ <|@
      nr  106  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 68] y: -1 size: DWORD <|@ <|@
      nr  108  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 72] y: -1 size: DWORD <|@ <|@
      nr  110  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 76] y: -1 size: DWORD <|@ <|@
      nr  112  <|@ instruction r11|DWORD = LEA [r11|DWORD + 16] size: DWORD <|@ <|@
      nr  114  <|@ instruction JUMP ~[] destination: B11 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" 
    successors "B11" "B13" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608039801321515939
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   74  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.19993647348429622 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4605894324531121682
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction r10|DWORD = LEA [rax|DWORD - 4] size: DWORD <|@ <|@
      nr  194  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4576143750256751390
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction MOV [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  228  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  230  <|@ instruction JUMP ~[] destination: B30 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B26" "B30" 
    successors "B30" "B32" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4605972295288554462
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 16 numbPhis: 1 label: ? <|@ <|@
      nr  222  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4601362377763758169
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction MOV [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  204  <|@ instruction r8|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr  206  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 20] y: -1 size: DWORD <|@ <|@
      nr  208  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 24] y: -1 size: DWORD <|@ <|@
      nr  210  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 28] y: -1 size: DWORD <|@ <|@
      nr  212  <|@ instruction r11|DWORD = LEA [r11|DWORD + 4] size: DWORD <|@ <|@
      nr  214  <|@ instruction JUMP ~[] destination: B27 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B27" 
    successors "B27" "B29" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4608461061127032607
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  198  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.3325162586814181 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  296  <|@ instruction MOV [r15|QWORD + 1156] y: -47643 size: DWORD <|@ <|@
      nr  298  <|@ instruction MOV [r15|QWORD + 1168] y: 2072 size: QWORD <|@ <|@
      nr  300  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:39] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-54579|0xffffffffffff2acd] // MoveResolver resolve mapping <|@ <|@
      nr  304  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B35" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  308  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  310  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  312  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:63] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-84243|0xfffffffffffeb6ed] // MoveResolver resolve mapping <|@ <|@
      nr  292  <|@ instruction JUMP ~[] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  284  <|@ instruction MOV [r15|QWORD + 1156] y: -41243 size: DWORD <|@ <|@
      nr  286  <|@ instruction MOV [r15|QWORD + 1168] y: 1304 size: QWORD <|@ <|@
      nr  288  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:451) [bci: 15]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:15] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_m1     
     2: putfield      #2          // first:int
     5: aload_0       
     6: iconst_0      
     7: putfield      #3          // last:int
    10: aload_0       
    11: iconst_m1     
    12: putfield      #4          // oldLast:int
    15: iconst_0      
    16: istore_1      
    17: iload_1       
    18: aload_0       
    19: getfield      #12         // groups:int[]
    22: arraylength   
    23: if_icmpge     39
    26: aload_0       
    27: getfield      #12         // groups:int[]
    30: iload_1       
    31: iconst_m1     
    32: iastore       
    33: iinc          
    36: goto          17
    39: iconst_0      
    40: istore_1      
    41: iload_1       
    42: aload_0       
    43: getfield      #14         // locals:int[]
    46: arraylength   
    47: if_icmpge     63
    50: aload_0       
    51: getfield      #14         // locals:int[]
    54: iload_1       
    55: iconst_m1     
    56: iastore       
    57: iinc          
    60: goto          41
    63: iconst_0      
    64: istore_1      
    65: iload_1       
    66: aload_0       
    67: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    70: arraylength   
    71: if_icmpge     98
    74: aload_0       
    75: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    78: iload_1       
    79: aaload        
    80: ifnull        92
    83: aload_0       
    84: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    87: iload_1       
    88: aaload        
    89: invokevirtual #32         // java.util.regex.IntHashSet.clear:()void
    92: iinc          
    95: goto          65
    98: aload_0       
    99: iconst_0      
   100: putfield      #5          // lastAppendPosition:int
   103: aload_0       
   104: iconst_0      
   105: putfield      #33         // from:int
   108: aload_0       
   109: aload_0       
   110: invokevirtual #34         // getTextLength:()int
   113: putfield      #35         // to:int
   116: aload_0       
   117: dup           
   118: getfield      #31         // modCount:int
   121: iconst_1      
   122: iadd          
   123: putfield      #31         // modCount:int
   126: aload_0       
   127: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LocationMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B16" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@59e1caa slotKind: QWORD <|@ <|@
      nr    8  <|@ instruction rcx|DWORD[_] = MOV [rsi|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   10  <|@ st <@st|@reference-map: [rcx:0, rsi:0]
live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:448) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rax|DWORD = MOV [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction MOV [rsi|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr   14  <|@ instruction MOV [rsi|QWORD[.] + 32] y: 0 size: DWORD <|@ <|@
      nr   16  <|@ instruction MOV [rsi|QWORD[.] + 36] y: -1 size: DWORD <|@ <|@
      nr   18  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.04762264888183043 condition: = trueDestination: B0 -> B16 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B6" "B4" 
    xhandlers
    flags 
    probability 4606753472112500193
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   22  <|@ instruction r10|DWORD = DEC rax|DWORD size: DWORD <|@ <|@
      nr   24  <|@ instruction r10|QWORD = MOVSXD r10|DWORD size: QWORD <|@ <|@
      nr   26  <|@ instruction r11|QWORD = MOV rax|DWORD size: DWORD <|@ <|@
      nr   28  <|@ instruction CMPBRANCH (x: r11|QWORD, y: r10|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B2 -> B6 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" "B39" 
    xhandlers
    flags 
    probability 4602249872485129697
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   32  <|@ instruction CMPCONSTBRANCH rax|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B6 falseDestination: B4 -> B39 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606753472112500193
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction MOV [rcx|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr   46  <|@ instruction CMP rax|DWORD y: 3 size: DWORD <|@ <|@
      nr   48  <|@ instruction r10|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rax|DWORD) condition: |<| <|@ <|@
      nr   50  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1dd2cd05 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   52  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699158794208206
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction MOV [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   62  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr   64  <|@ instruction JUMP ~[] destination: B8 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors "B8" "B9" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606840121128330737
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   56  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B13" "B0" 
    successors "B32" "B18" 
    xhandlers
    flags 
    probability 4607182418800017410
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction rcx|DWORD[_] = MOV [rsi|QWORD[.] + 64] size: DWORD <|@ <|@
      nr  140  <|@ st <@st|@reference-map: [rcx:0, rsi:0]
live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rax|DWORD = MOV [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:39] <|@ <|@
      nr  142  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.1430071915215746 condition: = trueDestination: B16 -> B32 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B22" "B20" 
    xhandlers
    flags 
    probability 4605894324531121682
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  146  <|@ instruction r10|DWORD = DEC rax|DWORD size: DWORD <|@ <|@
      nr  148  <|@ instruction r10|QWORD = MOVSXD r10|DWORD size: QWORD <|@ <|@
      nr  150  <|@ instruction r11|QWORD = MOV rax|DWORD size: DWORD <|@ <|@
      nr  152  <|@ instruction CMPBRANCH (x: r11|QWORD, y: r10|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B18 -> B22 falseDestination: B18 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" "B38" 
    xhandlers
    flags 
    probability 4601390724903751186
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction CMPCONSTBRANCH rax|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B20 -> B22 falseDestination: B20 -> B38 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4605894324531121682
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction MOV [rcx|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr  170  <|@ instruction CMP rax|DWORD y: 3 size: DWORD <|@ <|@
      nr  172  <|@ instruction r10|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rax|DWORD) condition: |<| <|@ <|@
      nr  174  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1dd2cd05 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  176  <|@ instruction JUMP ~[] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B23" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576143750256751390
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction MOV [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  186  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  188  <|@ instruction JUMP ~[] destination: B24 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B24" 
    successors "B24" "B25" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4605972295288554463
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  180  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B29" "B16" 
    successors "B33" "B36" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction rcx|DWORD[_] = MOV [rsi|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  244  <|@ st <@st|@reference-map: [rcx:0, rsi:0]
live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction CMPCONSTBRANCH [rcx|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B36 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:63] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction rax|DWORD[_] = MOV [rsi|QWORD[.] + 68] size: DWORD <|@ <|@
      nr  250  <|@ st <@st|@reference-map: [rcx:0, rsi:0]
live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rax|DWORD = MOV [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:63] <|@ <|@
      nr  252  <|@ instruction r10|DWORD[_] = MOV [rcx|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  254  <|@ st <@st|@reference-map: [rcx:0, rsi:0]
live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction r10|DWORD = MOV [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:63] <|@ <|@
      nr  256  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction MOV [rsi|QWORD[.] + 40] y: 0 size: DWORD <|@ <|@
      nr  262  <|@ instruction MOV [rsi|QWORD[.] + 12] y: 0 size: DWORD <|@ <|@
      nr  264  <|@ instruction rcx|DWORD = MOVSXB [rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  268  <|@ instruction r10|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  270  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r10|DWORD) size: DWORD <|@ <|@
      nr  272  <|@ instruction INC [rsi|QWORD[.] + 44] size: DWORD <|@ <|@
      nr  274  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  276  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606753472112500194
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction r10|DWORD = LEA [rax|DWORD - 16] size: DWORD <|@ <|@
      nr   70  <|@ instruction JUMP ~[] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699158794208207
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction MOV [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  128  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  130  <|@ instruction JUMP ~[] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B10" "B14" 
    successors "B14" "B16" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606840121128330739
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 16 numbPhis: 1 label: ? <|@ <|@
      nr  122  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B10" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597742867212592525
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction MOV [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   80  <|@ instruction r8|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr   82  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 20] y: -1 size: DWORD <|@ <|@
      nr   84  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 24] y: -1 size: DWORD <|@ <|@
      nr   86  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 28] y: -1 size: DWORD <|@ <|@
      nr   88  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 32] y: -1 size: DWORD <|@ <|@
      nr   90  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 36] y: -1 size: DWORD <|@ <|@
      nr   92  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 40] y: -1 size: DWORD <|@ <|@
      nr   94  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 44] y: -1 size: DWORD <|@ <|@
      nr   96  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 48] y: -1 size: DWORD <|@ <|@
      nr   98  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 52] y: -1 size: DWORD <|@ <|@
      nr  100  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 56] y: -1 size: DWORD <|@ <|@
      nr  102  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 60] y: -1 size: DWORD <|@ <|@
      nr  104  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 64] y: -1 size: DWORD <|@ <|@
      nr  106  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 68] y: -1 size: DWORD <|@ <|@
      nr  108  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 72] y: -1 size: DWORD <|@ <|@
      nr  110  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 76] y: -1 size: DWORD <|@ <|@
      nr  112  <|@ instruction r11|DWORD = LEA [r11|DWORD + 16] size: DWORD <|@ <|@
      nr  114  <|@ instruction JUMP ~[] destination: B11 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" 
    successors "B11" "B13" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608039801321515939
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   74  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.19993647348429622 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4605894324531121682
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction r10|DWORD = LEA [rax|DWORD - 4] size: DWORD <|@ <|@
      nr  194  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4576143750256751390
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction MOV [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  228  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  230  <|@ instruction JUMP ~[] destination: B30 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B26" "B30" 
    successors "B30" "B32" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4605972295288554462
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 16 numbPhis: 1 label: ? <|@ <|@
      nr  222  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4601362377763758169
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction MOV [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  204  <|@ instruction r8|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr  206  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 20] y: -1 size: DWORD <|@ <|@
      nr  208  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 24] y: -1 size: DWORD <|@ <|@
      nr  210  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 28] y: -1 size: DWORD <|@ <|@
      nr  212  <|@ instruction r11|DWORD = LEA [r11|DWORD + 4] size: DWORD <|@ <|@
      nr  214  <|@ instruction JUMP ~[] destination: B27 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B27" 
    successors "B27" "B29" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4608461061127032607
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  198  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.3325162586814181 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  296  <|@ instruction MOV [r15|QWORD + 1156] y: -47643 size: DWORD <|@ <|@
      nr  298  <|@ instruction MOV [r15|QWORD + 1168] y: 2072 size: QWORD <|@ <|@
      nr  300  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:39] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-54579|0xffffffffffff2acd] // MoveResolver resolve mapping <|@ <|@
      nr  304  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B35" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  308  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  310  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  312  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:63] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-84243|0xfffffffffffeb6ed] // MoveResolver resolve mapping <|@ <|@
      nr  292  <|@ instruction JUMP ~[] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  284  <|@ instruction MOV [r15|QWORD + 1156] y: -41243 size: DWORD <|@ <|@
      nr  286  <|@ instruction MOV [r15|QWORD + 1168] y: 1304 size: QWORD <|@ <|@
      nr  288  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:451) [bci: 15]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:15] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_m1     
     2: putfield      #2          // first:int
     5: aload_0       
     6: iconst_0      
     7: putfield      #3          // last:int
    10: aload_0       
    11: iconst_m1     
    12: putfield      #4          // oldLast:int
    15: iconst_0      
    16: istore_1      
    17: iload_1       
    18: aload_0       
    19: getfield      #12         // groups:int[]
    22: arraylength   
    23: if_icmpge     39
    26: aload_0       
    27: getfield      #12         // groups:int[]
    30: iload_1       
    31: iconst_m1     
    32: iastore       
    33: iinc          
    36: goto          17
    39: iconst_0      
    40: istore_1      
    41: iload_1       
    42: aload_0       
    43: getfield      #14         // locals:int[]
    46: arraylength   
    47: if_icmpge     63
    50: aload_0       
    51: getfield      #14         // locals:int[]
    54: iload_1       
    55: iconst_m1     
    56: iastore       
    57: iinc          
    60: goto          41
    63: iconst_0      
    64: istore_1      
    65: iload_1       
    66: aload_0       
    67: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    70: arraylength   
    71: if_icmpge     98
    74: aload_0       
    75: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    78: iload_1       
    79: aaload        
    80: ifnull        92
    83: aload_0       
    84: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    87: iload_1       
    88: aaload        
    89: invokevirtual #32         // java.util.regex.IntHashSet.clear:()void
    92: iinc          
    95: goto          65
    98: aload_0       
    99: iconst_0      
   100: putfield      #5          // lastAppendPosition:int
   103: aload_0       
   104: iconst_0      
   105: putfield      #33         // from:int
   108: aload_0       
   109: aload_0       
   110: invokevirtual #34         // getTextLength:()int
   113: putfield      #35         // to:int
   116: aload_0       
   117: dup           
   118: getfield      #31         // modCount:int
   121: iconst_1      
   122: iadd          
   123: putfield      #31         // modCount:int
   126: aload_0       
   127: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After FinalCodeAnalysisStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B16" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@59e1caa slotKind: QWORD <|@ <|@
      nr    8  <|@ instruction rcx|DWORD[_] = MOV [rsi|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   10  <|@ st <@st|@reference-map: [rcx:0, rsi:0]
live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:448) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rax|DWORD = MOV [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction MOV [rsi|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr   14  <|@ instruction MOV [rsi|QWORD[.] + 32] y: 0 size: DWORD <|@ <|@
      nr   16  <|@ instruction MOV [rsi|QWORD[.] + 36] y: -1 size: DWORD <|@ <|@
      nr   18  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.04762264888183043 condition: = trueDestination: B0 -> B16 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B6" "B4" 
    xhandlers
    flags 
    probability 4606753472112500193
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   22  <|@ instruction r10|DWORD = DEC rax|DWORD size: DWORD <|@ <|@
      nr   24  <|@ instruction r10|QWORD = MOVSXD r10|DWORD size: QWORD <|@ <|@
      nr   26  <|@ instruction r11|QWORD = MOV rax|DWORD size: DWORD <|@ <|@
      nr   28  <|@ instruction CMPBRANCH (x: r11|QWORD, y: r10|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B2 -> B6 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" "B39" 
    xhandlers
    flags 
    probability 4602249872485129697
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   32  <|@ instruction CMPCONSTBRANCH rax|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B6 falseDestination: B4 -> B39 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606753472112500193
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction MOV [rcx|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr   46  <|@ instruction CMP rax|DWORD y: 3 size: DWORD <|@ <|@
      nr   48  <|@ instruction r10|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rax|DWORD) condition: |<| <|@ <|@
      nr   50  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1dd2cd05 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   52  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699158794208206
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction MOV [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   62  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr   64  <|@ instruction JUMP ~[] destination: B8 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors "B8" "B9" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606840121128330737
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   56  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B13" "B0" 
    successors "B32" "B18" 
    xhandlers
    flags 
    probability 4607182418800017410
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction rcx|DWORD[_] = MOV [rsi|QWORD[.] + 64] size: DWORD <|@ <|@
      nr  140  <|@ st <@st|@reference-map: [rcx:0, rsi:0]
live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rax|DWORD = MOV [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:39] <|@ <|@
      nr  142  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.1430071915215746 condition: = trueDestination: B16 -> B32 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B22" "B20" 
    xhandlers
    flags 
    probability 4605894324531121682
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  146  <|@ instruction r10|DWORD = DEC rax|DWORD size: DWORD <|@ <|@
      nr  148  <|@ instruction r10|QWORD = MOVSXD r10|DWORD size: QWORD <|@ <|@
      nr  150  <|@ instruction r11|QWORD = MOV rax|DWORD size: DWORD <|@ <|@
      nr  152  <|@ instruction CMPBRANCH (x: r11|QWORD, y: r10|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B18 -> B22 falseDestination: B18 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" "B38" 
    xhandlers
    flags 
    probability 4601390724903751186
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction CMPCONSTBRANCH rax|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B20 -> B22 falseDestination: B20 -> B38 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4605894324531121682
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction MOV [rcx|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr  170  <|@ instruction CMP rax|DWORD y: 3 size: DWORD <|@ <|@
      nr  172  <|@ instruction r10|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rax|DWORD) condition: |<| <|@ <|@
      nr  174  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1dd2cd05 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  176  <|@ instruction JUMP ~[] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B23" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576143750256751390
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction MOV [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  186  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  188  <|@ instruction JUMP ~[] destination: B24 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B24" 
    successors "B24" "B25" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4605972295288554463
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  180  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B29" "B16" 
    successors "B33" "B36" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction rcx|DWORD[_] = MOV [rsi|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  244  <|@ st <@st|@reference-map: [rcx:0, rsi:0]
live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction CMPCONSTBRANCH [rcx|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B36 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:63] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction rax|DWORD[_] = MOV [rsi|QWORD[.] + 68] size: DWORD <|@ <|@
      nr  250  <|@ st <@st|@reference-map: [rcx:0, rsi:0]
live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rax|DWORD = MOV [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:63] <|@ <|@
      nr  252  <|@ instruction r10|DWORD[_] = MOV [rcx|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  254  <|@ st <@st|@reference-map: [rcx:0, rsi:0]
live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction r10|DWORD = MOV [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:63] <|@ <|@
      nr  256  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction MOV [rsi|QWORD[.] + 40] y: 0 size: DWORD <|@ <|@
      nr  262  <|@ instruction MOV [rsi|QWORD[.] + 12] y: 0 size: DWORD <|@ <|@
      nr  264  <|@ instruction rcx|DWORD = MOVSXB [rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  268  <|@ instruction r10|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  270  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r10|DWORD) size: DWORD <|@ <|@
      nr  272  <|@ instruction INC [rsi|QWORD[.] + 44] size: DWORD <|@ <|@
      nr  274  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  276  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606753472112500194
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction r10|DWORD = LEA [rax|DWORD - 16] size: DWORD <|@ <|@
      nr   70  <|@ instruction JUMP ~[] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699158794208207
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction MOV [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  128  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  130  <|@ instruction JUMP ~[] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B10" "B14" 
    successors "B14" "B16" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606840121128330739
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 16 numbPhis: 1 label: ? <|@ <|@
      nr  122  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B10" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597742867212592525
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction MOV [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   80  <|@ instruction r8|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr   82  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 20] y: -1 size: DWORD <|@ <|@
      nr   84  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 24] y: -1 size: DWORD <|@ <|@
      nr   86  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 28] y: -1 size: DWORD <|@ <|@
      nr   88  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 32] y: -1 size: DWORD <|@ <|@
      nr   90  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 36] y: -1 size: DWORD <|@ <|@
      nr   92  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 40] y: -1 size: DWORD <|@ <|@
      nr   94  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 44] y: -1 size: DWORD <|@ <|@
      nr   96  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 48] y: -1 size: DWORD <|@ <|@
      nr   98  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 52] y: -1 size: DWORD <|@ <|@
      nr  100  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 56] y: -1 size: DWORD <|@ <|@
      nr  102  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 60] y: -1 size: DWORD <|@ <|@
      nr  104  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 64] y: -1 size: DWORD <|@ <|@
      nr  106  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 68] y: -1 size: DWORD <|@ <|@
      nr  108  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 72] y: -1 size: DWORD <|@ <|@
      nr  110  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 76] y: -1 size: DWORD <|@ <|@
      nr  112  <|@ instruction r11|DWORD = LEA [r11|DWORD + 16] size: DWORD <|@ <|@
      nr  114  <|@ instruction JUMP ~[] destination: B11 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" 
    successors "B11" "B13" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608039801321515939
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   74  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.19993647348429622 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4605894324531121682
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction r10|DWORD = LEA [rax|DWORD - 4] size: DWORD <|@ <|@
      nr  194  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4576143750256751390
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction MOV [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  228  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  230  <|@ instruction JUMP ~[] destination: B30 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B26" "B30" 
    successors "B30" "B32" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4605972295288554462
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 16 numbPhis: 1 label: ? <|@ <|@
      nr  222  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4601362377763758169
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction MOV [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  204  <|@ instruction r8|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr  206  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 20] y: -1 size: DWORD <|@ <|@
      nr  208  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 24] y: -1 size: DWORD <|@ <|@
      nr  210  <|@ instruction MOV [rcx|QWORD[.] + r8|QWORD * 4 + 28] y: -1 size: DWORD <|@ <|@
      nr  212  <|@ instruction r11|DWORD = LEA [r11|DWORD + 4] size: DWORD <|@ <|@
      nr  214  <|@ instruction JUMP ~[] destination: B27 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B27" 
    successors "B27" "B29" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4608461061127032607
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  198  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.3325162586814181 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  296  <|@ instruction MOV [r15|QWORD + 1156] y: -47643 size: DWORD <|@ <|@
      nr  298  <|@ instruction MOV [r15|QWORD + 1168] y: 2072 size: QWORD <|@ <|@
      nr  300  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:39] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-54579|0xffffffffffff2acd] // MoveResolver resolve mapping <|@ <|@
      nr  304  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B35" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  308  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  310  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  312  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:63] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-84243|0xfffffffffffeb6ed] // MoveResolver resolve mapping <|@ <|@
      nr  292  <|@ instruction JUMP ~[] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  284  <|@ instruction MOV [r15|QWORD + 1156] y: -41243 size: DWORD <|@ <|@
      nr  286  <|@ instruction MOV [r15|QWORD + 1168] y: 1304 size: QWORD <|@ <|@
      nr  288  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:451) [bci: 15]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:15] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_m1     
     2: putfield      #2          // first:int
     5: aload_0       
     6: iconst_0      
     7: putfield      #3          // last:int
    10: aload_0       
    11: iconst_m1     
    12: putfield      #4          // oldLast:int
    15: iconst_0      
    16: istore_1      
    17: iload_1       
    18: aload_0       
    19: getfield      #12         // groups:int[]
    22: arraylength   
    23: if_icmpge     39
    26: aload_0       
    27: getfield      #12         // groups:int[]
    30: iload_1       
    31: iconst_m1     
    32: iastore       
    33: iinc          
    36: goto          17
    39: iconst_0      
    40: istore_1      
    41: iload_1       
    42: aload_0       
    43: getfield      #14         // locals:int[]
    46: arraylength   
    47: if_icmpge     63
    50: aload_0       
    51: getfield      #14         // locals:int[]
    54: iload_1       
    55: iconst_m1     
    56: iastore       
    57: iinc          
    60: goto          41
    63: iconst_0      
    64: istore_1      
    65: iload_1       
    66: aload_0       
    67: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    70: arraylength   
    71: if_icmpge     98
    74: aload_0       
    75: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    78: iload_1       
    79: aaload        
    80: ifnull        92
    83: aload_0       
    84: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    87: iload_1       
    88: aaload        
    89: invokevirtual #32         // java.util.regex.IntHashSet.clear:()void
    92: iinc          
    95: goto          65
    98: aload_0       
    99: iconst_0      
   100: putfield      #5          // lastAppendPosition:int
   103: aload_0       
   104: iconst_0      
   105: putfield      #33         // from:int
   108: aload_0       
   109: aload_0       
   110: invokevirtual #34         // getTextLength:()int
   113: putfield      #35         // to:int
   116: aload_0       
   117: dup           
   118: getfield      #31         // modCount:int
   121: iconst_1      
   122: iadd          
   123: putfield      #31         // modCount:int
   126: aload_0       
   127: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849bc000000fbb97f00004d03d44d33e4493bc20f85e3ffffff66669089842400c0feff4883ec189041817f20000000000f855503000048896c24108b4e388b04cd0c000000c7461cffffffffc7462000000000c74624ffffffff85c00f8471000000448bd041ffca4d63d2448bd84d3bda0f870900000083f8020f83e8020000c704cd10000000ffffffff83f80341ba02000000440f42d048c1e10341bb01000000e9210000006666660f1f84000000000066666690660f1f44000042c7449910ffffffff41ffc3453bd30f8ef2000000ebe98b4e408b04cd0c00000085c00f846e000000448bd041ffca4d63d2448bd84d3bda0f870900000083f8020f830b020000c704cd10000000ffffffff83f80341ba02000000440f42d048c1e10341bb01000000e91e0000006666660f1f8400000000006666669066669042c7449910ffffffff41ffc3453bd30f8e50010000ebe98b4e3c813ccd08000000addeadde0f85ca0100008b46448b04c50c000000448b14cd14000000468b14d50c00000085c00f85d0010000c7462800000000c7460c000000000fbe0ccd1000000041d3ea44895610ff462c488bc6488b6c24104883c418493ba7500400000f87d9010000c3448d50f0e9c70000006666660f1f840000000000666666909042c7449910ffffffff41ffc30f1f4000413bc30f8edefeffffebe50f1f44000042c7449910ffffffff4d63c342c7448114ffffffff42c7448118ffffffff42c744811cffffffff42c7448120ffffffff42c7448124ffffffff42c7448128ffffffff42c744812cffffffff42c7448130ffffffff42c7448134ffffffff42c7448138ffffffff42c744813cffffffff42c7448140ffffffff42c7448144ffffffff42c7448148ffffffff42c744814cffffffff458d5b10453bd30f8e50ffffffe95bffffff448d50fce95d0000006666660f1f8400000000006666669066669042c7449910ffffffff41ffc30f1f4000413bc30f8e7efeffffebe50f1f44000042c7449910ffffffff4d63c342c7448114ffffffff42c7448118ffffffff42c744811cffffffff458d5b04453bd37ec0ebce41c78784040000e545ffff49c7879004000018080000e8000000000f1f84000000000049c7c39402000041bacd2affff458997840400004d899f90040000e8000000000f1f84000000000049c7c31400000041baedb6feffebd641c78784040000e55effff49c7879004000018050000e8000000000f1f84000000000048896c2410e800000000e99cfcfffff4488d0d13feffff49898f68040000e94efcfffff441c78784040000f570ffff49c7879004000000000000e8000000000f1f84000000000041c78784040000f551ffff49c7879004000000000000e8000000000f1f84000000000041c78784040000f52bffff49c7879004000000000000e8000000000f1f84000000000041c78784040000f538ffff49c7879004000000000000e8000000000f1f84000000000041c78784040000f524ffff49c7879004000000000000e8000000000f1f840000000000e800000000f4e800000000f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7fba7b6335c8, value=140438496891008]:0x7fba62b85080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 63 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@59e1caa slotKind: QWORD  <||@
  Comment 63 8 rcx|DWORD[_] = MOV [rsi|QWORD[.] + 56] size: DWORD  <||@
  Comment 66 10 rax|DWORD = MOV [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 66 [rcx:0, rsi:0]at java.util.regex.Matcher.reset(Matcher.java:448) [bci: 0, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 66 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 73 12 MOV [rsi|QWORD[.] + 28] y: -1 size: DWORD  <||@
  Comment 80 14 MOV [rsi|QWORD[.] + 32] y: 0 size: DWORD  <||@
  Comment 87 16 MOV [rsi|QWORD[.] + 36] y: -1 size: DWORD  <||@
  Comment 94 18 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.04762264888183043 condition: = trueDestination: B0 -> B16 falseDestination: B0 -> B2 size: DWORD  <||@
  Comment 102 block B2 null  <||@
  Comment 102 20 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 102 22 r10|DWORD = DEC rax|DWORD size: DWORD  <||@
  Comment 108 24 r10|QWORD = MOVSXD r10|DWORD size: QWORD  <||@
  Comment 111 26 r11|QWORD = MOV rax|DWORD size: DWORD  <||@
  Comment 114 28 CMPBRANCH (x: r11|QWORD, y: r10|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B2 -> B6 falseDestination: B2 -> B4 size: QWORD  <||@
  Comment 123 block B4 null  <||@
  Comment 123 30 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 123 32 CMPCONSTBRANCH rax|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B6 falseDestination: B4 -> B39 y: 2 size: DWORD inlinedY: null  <||@
  Comment 132 block B6 null  <||@
  Comment 132 42 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 132 44 MOV [rcx|DWORD[_] * 8 + 16] y: -1 size: DWORD  <||@
  Comment 143 46 CMP rax|DWORD y: 3 size: DWORD  <||@
  Comment 146 48 r10|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rax|DWORD) condition: |<|  <||@
  Comment 156 50 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1dd2cd05 encoding: base: 0 shift: 3  <||@
  Comment 160 -1 r11|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 166 52 JUMP ~[] destination: B6 -> B7  <||@
  Comment 171 block B8 loop 0 depth 1 header:13|LoopBegin  <||@
  Comment 171 58 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 192 60 MOV [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 201 62 r11|DWORD = INC r11|DWORD size: DWORD  <||@
  Comment 204 64 JUMP ~[] destination: B8 -> B7  <||@
  Comment 204 block B7 loop 0 depth 1 header:13|LoopBegin  <||@
  Comment 204 54 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 204 56 CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD  <||@
  Comment 215 block B16 null  <||@
  Comment 215 136 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 215 138 rcx|DWORD[_] = MOV [rsi|QWORD[.] + 64] size: DWORD  <||@
  Comment 218 140 rax|DWORD = MOV [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:39]  <||@
  Comment 218 [rcx:0, rsi:0]at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 218 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 225 142 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.1430071915215746 condition: = trueDestination: B16 -> B32 falseDestination: B16 -> B18 size: DWORD  <||@
  Comment 233 block B18 null  <||@
  Comment 233 144 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 233 146 r10|DWORD = DEC rax|DWORD size: DWORD  <||@
  Comment 239 148 r10|QWORD = MOVSXD r10|DWORD size: QWORD  <||@
  Comment 242 150 r11|QWORD = MOV rax|DWORD size: DWORD  <||@
  Comment 245 152 CMPBRANCH (x: r11|QWORD, y: r10|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B18 -> B22 falseDestination: B18 -> B20 size: QWORD  <||@
  Comment 254 block B20 null  <||@
  Comment 254 154 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 254 156 CMPCONSTBRANCH rax|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B20 -> B22 falseDestination: B20 -> B38 y: 2 size: DWORD inlinedY: null  <||@
  Comment 263 block B22 null  <||@
  Comment 263 166 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 263 168 MOV [rcx|DWORD[_] * 8 + 16] y: -1 size: DWORD  <||@
  Comment 274 170 CMP rax|DWORD y: 3 size: DWORD  <||@
  Comment 277 172 r10|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rax|DWORD) condition: |<|  <||@
  Comment 287 174 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1dd2cd05 encoding: base: 0 shift: 3  <||@
  Comment 291 -1 r11|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 297 176 JUMP ~[] destination: B22 -> B23  <||@
  Comment 302 block B24 loop 3 depth 1 header:32|LoopBegin  <||@
  Comment 302 182 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 320 184 MOV [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 329 186 r11|DWORD = INC r11|DWORD size: DWORD  <||@
  Comment 332 188 JUMP ~[] destination: B24 -> B23  <||@
  Comment 332 block B23 loop 3 depth 1 header:32|LoopBegin  <||@
  Comment 332 178 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 332 180 CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD  <||@
  Comment 343 block B32 null  <||@
  Comment 343 240 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 343 242 rcx|DWORD[_] = MOV [rsi|QWORD[.] + 60] size: DWORD  <||@
  Comment 346 244 CMPCONSTBRANCH [rcx|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B36 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:63]  <||@
  Comment 346 [rcx:0, rsi:0]at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 346 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 346 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 363 block B33 null  <||@
  Comment 363 246 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 363 248 rax|DWORD[_] = MOV [rsi|QWORD[.] + 68] size: DWORD  <||@
  Comment 366 250 rax|DWORD = MOV [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:63]  <||@
  Comment 366 [rcx:0, rsi:0]at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 366 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 373 252 r10|DWORD[_] = MOV [rcx|DWORD[_] * 8 + 20] size: DWORD  <||@
  Comment 381 254 r10|DWORD = MOV [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:63]  <||@
  Comment 381 [rcx:0, rsi:0]at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 381 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 389 256 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD  <||@
  Comment 397 block B34 null  <||@
  Comment 397 258 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 397 260 MOV [rsi|QWORD[.] + 40] y: 0 size: DWORD  <||@
  Comment 404 262 MOV [rsi|QWORD[.] + 12] y: 0 size: DWORD  <||@
  Comment 411 264 rcx|DWORD = MOVSXB [rcx|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 419 268 r10|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 422 270 MOV (x: [rsi|QWORD[.] + 16], y: r10|DWORD) size: DWORD  <||@
  Comment 426 272 INC [rsi|QWORD[.] + 44] size: DWORD  <||@
  Comment 429 274 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 432 276 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9  <||@
  Comment 441 POLL_RETURN_FAR  <||@
  Comment 455 block B9 null  <||@
  Comment 455 66 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 455 68 r10|DWORD = LEA [rax|DWORD - 16] size: DWORD  <||@
  Comment 459 70 JUMP ~[] destination: B9 -> B10  <||@
  Comment 464 block B14 loop 2 depth 1 header:354|LoopBegin  <||@
  Comment 464 124 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 480 126 MOV [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 489 128 r11|DWORD = INC r11|DWORD size: DWORD  <||@
  Comment 492 130 JUMP ~[] destination: B14 -> B13  <||@
  Comment 492 block B13 loop 2 depth 1 header:354|LoopBegin  <||@
  Comment 492 120 [] = LABEL alignment: 16 numbPhis: 1 label: ?  <||@
  Comment 496 122 CMPBRANCH (x: rax|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B16 size: DWORD  <||@
  Comment 507 block B11 loop 1 depth 1 header:334|LoopBegin  <||@
  Comment 507 76 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 512 78 MOV [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 521 80 r8|QWORD = MOVSXD r11|DWORD size: QWORD  <||@
  Comment 524 82 MOV [rcx|QWORD[.] + r8|QWORD * 4 + 20] y: -1 size: DWORD  <||@
  Comment 533 84 MOV [rcx|QWORD[.] + r8|QWORD * 4 + 24] y: -1 size: DWORD  <||@
  Comment 542 86 MOV [rcx|QWORD[.] + r8|QWORD * 4 + 28] y: -1 size: DWORD  <||@
  Comment 551 88 MOV [rcx|QWORD[.] + r8|QWORD * 4 + 32] y: -1 size: DWORD  <||@
  Comment 560 90 MOV [rcx|QWORD[.] + r8|QWORD * 4 + 36] y: -1 size: DWORD  <||@
  Comment 569 92 MOV [rcx|QWORD[.] + r8|QWORD * 4 + 40] y: -1 size: DWORD  <||@
  Comment 578 94 MOV [rcx|QWORD[.] + r8|QWORD * 4 + 44] y: -1 size: DWORD  <||@
  Comment 587 96 MOV [rcx|QWORD[.] + r8|QWORD * 4 + 48] y: -1 size: DWORD  <||@
  Comment 596 98 MOV [rcx|QWORD[.] + r8|QWORD * 4 + 52] y: -1 size: DWORD  <||@
  Comment 605 100 MOV [rcx|QWORD[.] + r8|QWORD * 4 + 56] y: -1 size: DWORD  <||@
  Comment 614 102 MOV [rcx|QWORD[.] + r8|QWORD * 4 + 60] y: -1 size: DWORD  <||@
  Comment 623 104 MOV [rcx|QWORD[.] + r8|QWORD * 4 + 64] y: -1 size: DWORD  <||@
  Comment 632 106 MOV [rcx|QWORD[.] + r8|QWORD * 4 + 68] y: -1 size: DWORD  <||@
  Comment 641 108 MOV [rcx|QWORD[.] + r8|QWORD * 4 + 72] y: -1 size: DWORD  <||@
  Comment 650 110 MOV [rcx|QWORD[.] + r8|QWORD * 4 + 76] y: -1 size: DWORD  <||@
  Comment 659 112 r11|DWORD = LEA [r11|DWORD + 16] size: DWORD  <||@
  Comment 663 114 JUMP ~[] destination: B11 -> B10  <||@
  Comment 663 block B10 loop 1 depth 1 header:334|LoopBegin  <||@
  Comment 663 72 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 663 74 CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.19993647348429622 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B13 size: DWORD  <||@
  Comment 677 block B25 null  <||@
  Comment 677 190 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 677 192 r10|DWORD = LEA [rax|DWORD - 4] size: DWORD  <||@
  Comment 681 194 JUMP ~[] destination: B25 -> B26  <||@
  Comment 686 block B30 loop 5 depth 1 header:398|LoopBegin  <||@
  Comment 686 224 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 704 226 MOV [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 713 228 r11|DWORD = INC r11|DWORD size: DWORD  <||@
  Comment 716 230 JUMP ~[] destination: B30 -> B29  <||@
  Comment 716 block B29 loop 5 depth 1 header:398|LoopBegin  <||@
  Comment 716 220 [] = LABEL alignment: 16 numbPhis: 1 label: ?  <||@
  Comment 720 222 CMPBRANCH (x: rax|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B32 size: DWORD  <||@
  Comment 731 block B27 loop 4 depth 1 header:378|LoopBegin  <||@
  Comment 731 200 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 736 202 MOV [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 745 204 r8|QWORD = MOVSXD r11|DWORD size: QWORD  <||@
  Comment 748 206 MOV [rcx|QWORD[.] + r8|QWORD * 4 + 20] y: -1 size: DWORD  <||@
  Comment 757 208 MOV [rcx|QWORD[.] + r8|QWORD * 4 + 24] y: -1 size: DWORD  <||@
  Comment 766 210 MOV [rcx|QWORD[.] + r8|QWORD * 4 + 28] y: -1 size: DWORD  <||@
  Comment 775 212 r11|DWORD = LEA [r11|DWORD + 4] size: DWORD  <||@
  Comment 779 214 JUMP ~[] destination: B27 -> B26  <||@
  Comment 779 block B26 loop 4 depth 1 header:378|LoopBegin  <||@
  Comment 779 196 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 779 198 CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.3325162586814181 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B29 size: DWORD  <||@
  Comment 786 block B38 null  <||@
  Comment 786 294 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 786 296 MOV [r15|QWORD + 1156] y: -47643 size: DWORD  <||@
  Comment 797 298 MOV [r15|QWORD + 1168] y: 2072 size: QWORD  <||@
  Comment 808 300 DEOPT info [bci:39]  <||@
  Comment 808 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7fba7b6335a8, value=140438496915834]:0x7fba62b8b17a}  <||@
  Comment 813 [rsi:0]at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 821 block B36 null  <||@
  Comment 821 302 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 821 -1 r11|QWORD = MOVE input: long[660|0x294]  <||@
  Comment 828 -1 r10|DWORD = MOVE input: int[-54579|0xffffffffffff2acd]  <||@
  Comment 834 304 JUMP ~[] destination: B36 -> B37  <||@
  Comment 834 block B37 null  <||@
  Comment 834 306 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 834 308 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 841 310 MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD  <||@
  Comment 848 312 DEOPT info [bci:63]  <||@
  Comment 848 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7fba7b6335a8, value=140438496915834]:0x7fba62b8b17a}  <||@
  Comment 853 [rsi:0]at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 861 block B35 null  <||@
  Comment 861 290 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 861 -1 r11|QWORD = MOVE input: long[20|0x14]  <||@
  Comment 868 -1 r10|DWORD = MOVE input: int[-84243|0xfffffffffffeb6ed]  <||@
  Comment 874 292 JUMP ~[] destination: B35 -> B37  <||@
  Comment 876 block B39 null  <||@
  Comment 876 282 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 876 284 MOV [r15|QWORD + 1156] y: -41243 size: DWORD  <||@
  Comment 887 286 MOV [r15|QWORD + 1168] y: 1304 size: QWORD  <||@
  Comment 898 288 DEOPT info [bci:15]  <||@
  Comment 898 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7fba7b6335a8, value=140438496915834]:0x7fba62b8b17a}  <||@
  Comment 903 [rsi:0]at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 15, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 916 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7fba7b633598, value=140438496784928]:0x7fba62b6b220}  <||@
  Comment 941 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7fba7b6335a0, value=140438496919552]:0x7fba62b8c000}  <||@
  Comment 969 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7fba7b6335a8, value=140438496915834]:0x7fba62b8b17a}  <||@
  Comment 974 [rcx:0, rsi:0]at java.util.regex.Matcher.reset(Matcher.java:448) [bci: 0, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 1004 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7fba7b6335a8, value=140438496915834]:0x7fba62b8b17a}  <||@
  Comment 1009 [rcx:0, rsi:0]at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 1039 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7fba7b6335a8, value=140438496915834]:0x7fba62b8b17a}  <||@
  Comment 1044 [rcx:0, rsi:0]at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 1074 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7fba7b6335a8, value=140438496915834]:0x7fba62b8b17a}  <||@
  Comment 1079 [rcx:0, rsi:0]at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 1109 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7fba7b6335a8, value=140438496915834]:0x7fba62b8b17a}  <||@
  Comment 1114 [rcx:0, rsi:0]at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 1122 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7fba62cc5f00:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1122 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 1128 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7fba7b6335b8, value=140438496915232]:0x7fba62b8af20}  <||@
  Comment 1128 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-4715[java.util.regex.Matcher.reset()]"
  method "HotSpotCompilation-4715[java.util.regex.Matcher.reset()]"
  date 1714038193816
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 7fba63a26a20 448b560849bc000000fbb97f00004d03d44d33e4493bc20f8543e615ff66669089842400c0feff4883ec189041817f20000000000f855503000048896c24108b4e388b04cd0c000000c7461cffffffffc7462000000000c74624ffffffff85c00f8471000000448bd041ffca4d63d2448bd84d3bda0f870900000083f8020f83e8020000c704cd10000000ffffffff83f80341ba02000000440f42d048c1e10341bb01000000e9210000006666660f1f84000000000066666690660f1f44000042c7449910ffffffff41ffc3453bd30f8ef2000000ebe98b4e408b04cd0c00000085c00f846e000000448bd041ffca4d63d2448bd84d3bda0f870900000083f8020f830b020000c704cd10000000ffffffff83f80341ba02000000440f42d048c1e10341bb01000000e91e0000006666660f1f8400000000006666669066669042c7449910ffffffff41ffc3453bd30f8e50010000ebe98b4e3c813ccd08000000d8e800000f85ca0100008b46448b04c50c000000448b14cd14000000468b14d50c00000085c00f85d0010000c7462800000000c7460c000000000fbe0ccd1000000041d3ea44895610ff462c488bc6488b6c24104883c418493ba7500400000f87d9010000c3448d50f0e9c70000006666660f1f840000000000666666909042c7449910ffffffff41ffc30f1f4000413bc30f8edefeffffebe50f1f44000042c7449910ffffffff4d63c342c7448114ffffffff42c7448118ffffffff42c744811cffffffff42c7448120ffffffff42c7448124ffffffff42c7448128ffffffff42c744812cffffffff42c7448130ffffffff42c7448134ffffffff42c7448138ffffffff42c744813cffffffff42c7448140ffffffff42c7448144ffffffff42c7448148ffffffff42c744814cffffffff458d5b10453bd30f8e50ffffffe95bffffff448d50fce95d0000006666660f1f8400000000006666669066669042c7449910ffffffff41ffc30f1f4000413bc30f8e7efeffffebe50f1f44000042c7449910ffffffff4d63c342c7448114ffffffff42c7448118ffffffff42c744811cffffffff458d5b04453bd37ec0ebce41c78784040000e545ffff49c7879004000018080000e82d4416ff0f1f84000000000049c7c39402000041bacd2affff458997840400004d899f90040000e8054416ff0f1f84000000000049c7c31400000041baedb6feffebd641c78784040000e55effff49c7879004000018050000e8d34316ff0f1f84000000000048896c2410e8674414ffe99cfcfffff4488d0d13feffff49898f68040000e92e5216fff441c78784040000f570ffff49c7879004000000000000e88c4316ff0f1f84000000000041c78784040000f551ffff49c7879004000000000000e8694316ff0f1f84000000000041c78784040000f52bffff49c7879004000000000000e8464316ff0f1f84000000000041c78784040000f538ffff49c7879004000000000000e8234316ff0f1f84000000000041c78784040000f524ffff49c7879004000000000000e8004316ff0f1f840000000000e879f029fff4e8934016fff4f4f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7fba7b6335c8, value=140438496891008]:0x7fba62b85080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 63 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@59e1caa slotKind: QWORD  <||@
  Comment 63 8 rcx|DWORD[_] = MOV [rsi|QWORD[.] + 56] size: DWORD  <||@
  Comment 66 10 rax|DWORD = MOV [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 66 [rcx:0, rsi:0]at java.util.regex.Matcher.reset(Matcher.java:448) [bci: 0, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 66 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 73 12 MOV [rsi|QWORD[.] + 28] y: -1 size: DWORD  <||@
  Comment 80 14 MOV [rsi|QWORD[.] + 32] y: 0 size: DWORD  <||@
  Comment 87 16 MOV [rsi|QWORD[.] + 36] y: -1 size: DWORD  <||@
  Comment 94 18 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.04762264888183043 condition: = trueDestination: B0 -> B16 falseDestination: B0 -> B2 size: DWORD  <||@
  Comment 102 block B2 null  <||@
  Comment 102 20 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 102 22 r10|DWORD = DEC rax|DWORD size: DWORD  <||@
  Comment 108 24 r10|QWORD = MOVSXD r10|DWORD size: QWORD  <||@
  Comment 111 26 r11|QWORD = MOV rax|DWORD size: DWORD  <||@
  Comment 114 28 CMPBRANCH (x: r11|QWORD, y: r10|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B2 -> B6 falseDestination: B2 -> B4 size: QWORD  <||@
  Comment 123 block B4 null  <||@
  Comment 123 30 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 123 32 CMPCONSTBRANCH rax|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B6 falseDestination: B4 -> B39 y: 2 size: DWORD inlinedY: null  <||@
  Comment 132 block B6 null  <||@
  Comment 132 42 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 132 44 MOV [rcx|DWORD[_] * 8 + 16] y: -1 size: DWORD  <||@
  Comment 143 46 CMP rax|DWORD y: 3 size: DWORD  <||@
  Comment 146 48 r10|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rax|DWORD) condition: |<|  <||@
  Comment 156 50 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1dd2cd05 encoding: base: 0 shift: 3  <||@
  Comment 160 -1 r11|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 166 52 JUMP ~[] destination: B6 -> B7  <||@
  Comment 171 block B8 loop 0 depth 1 header:13|LoopBegin  <||@
  Comment 171 58 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 192 60 MOV [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 201 62 r11|DWORD = INC r11|DWORD size: DWORD  <||@
  Comment 204 64 JUMP ~[] destination: B8 -> B7  <||@
  Comment 204 block B7 loop 0 depth 1 header:13|LoopBegin  <||@
  Comment 204 54 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 204 56 CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD  <||@
  Comment 215 block B16 null  <||@
  Comment 215 136 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 215 138 rcx|DWORD[_] = MOV [rsi|QWORD[.] + 64] size: DWORD  <||@
  Comment 218 140 rax|DWORD = MOV [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:39]  <||@
  Comment 218 [rcx:0, rsi:0]at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 218 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 225 142 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.1430071915215746 condition: = trueDestination: B16 -> B32 falseDestination: B16 -> B18 size: DWORD  <||@
  Comment 233 block B18 null  <||@
  Comment 233 144 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 233 146 r10|DWORD = DEC rax|DWORD size: DWORD  <||@
  Comment 239 148 r10|QWORD = MOVSXD r10|DWORD size: QWORD  <||@
  Comment 242 150 r11|QWORD = MOV rax|DWORD size: DWORD  <||@
  Comment 245 152 CMPBRANCH (x: r11|QWORD, y: r10|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B18 -> B22 falseDestination: B18 -> B20 size: QWORD  <||@
  Comment 254 block B20 null  <||@
  Comment 254 154 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 254 156 CMPCONSTBRANCH rax|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B20 -> B22 falseDestination: B20 -> B38 y: 2 size: DWORD inlinedY: null  <||@
  Comment 263 block B22 null  <||@
  Comment 263 166 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 263 168 MOV [rcx|DWORD[_] * 8 + 16] y: -1 size: DWORD  <||@
  Comment 274 170 CMP rax|DWORD y: 3 size: DWORD  <||@
  Comment 277 172 r10|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rax|DWORD) condition: |<|  <||@
  Comment 287 174 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1dd2cd05 encoding: base: 0 shift: 3  <||@
  Comment 291 -1 r11|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 297 176 JUMP ~[] destination: B22 -> B23  <||@
  Comment 302 block B24 loop 3 depth 1 header:32|LoopBegin  <||@
  Comment 302 182 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 320 184 MOV [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 329 186 r11|DWORD = INC r11|DWORD size: DWORD  <||@
  Comment 332 188 JUMP ~[] destination: B24 -> B23  <||@
  Comment 332 block B23 loop 3 depth 1 header:32|LoopBegin  <||@
  Comment 332 178 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 332 180 CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD  <||@
  Comment 343 block B32 null  <||@
  Comment 343 240 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 343 242 rcx|DWORD[_] = MOV [rsi|QWORD[.] + 60] size: DWORD  <||@
  Comment 346 244 CMPCONSTBRANCH [rcx|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B36 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:63]  <||@
  Comment 346 [rcx:0, rsi:0]at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 346 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 346 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 363 block B33 null  <||@
  Comment 363 246 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 363 248 rax|DWORD[_] = MOV [rsi|QWORD[.] + 68] size: DWORD  <||@
  Comment 366 250 rax|DWORD = MOV [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:63]  <||@
  Comment 366 [rcx:0, rsi:0]at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 366 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 373 252 r10|DWORD[_] = MOV [rcx|DWORD[_] * 8 + 20] size: DWORD  <||@
  Comment 381 254 r10|DWORD = MOV [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:63]  <||@
  Comment 381 [rcx:0, rsi:0]at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 381 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 389 256 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD  <||@
  Comment 397 block B34 null  <||@
  Comment 397 258 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 397 260 MOV [rsi|QWORD[.] + 40] y: 0 size: DWORD  <||@
  Comment 404 262 MOV [rsi|QWORD[.] + 12] y: 0 size: DWORD  <||@
  Comment 411 264 rcx|DWORD = MOVSXB [rcx|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 419 268 r10|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 422 270 MOV (x: [rsi|QWORD[.] + 16], y: r10|DWORD) size: DWORD  <||@
  Comment 426 272 INC [rsi|QWORD[.] + 44] size: DWORD  <||@
  Comment 429 274 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 432 276 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9  <||@
  Comment 441 POLL_RETURN_FAR  <||@
  Comment 455 block B9 null  <||@
  Comment 455 66 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 455 68 r10|DWORD = LEA [rax|DWORD - 16] size: DWORD  <||@
  Comment 459 70 JUMP ~[] destination: B9 -> B10  <||@
  Comment 464 block B14 loop 2 depth 1 header:354|LoopBegin  <||@
  Comment 464 124 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 480 126 MOV [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 489 128 r11|DWORD = INC r11|DWORD size: DWORD  <||@
  Comment 492 130 JUMP ~[] destination: B14 -> B13  <||@
  Comment 492 block B13 loop 2 depth 1 header:354|LoopBegin  <||@
  Comment 492 120 [] = LABEL alignment: 16 numbPhis: 1 label: ?  <||@
  Comment 496 122 CMPBRANCH (x: rax|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B16 size: DWORD  <||@
  Comment 507 block B11 loop 1 depth 1 header:334|LoopBegin  <||@
  Comment 507 76 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 512 78 MOV [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 521 80 r8|QWORD = MOVSXD r11|DWORD size: QWORD  <||@
  Comment 524 82 MOV [rcx|QWORD[.] + r8|QWORD * 4 + 20] y: -1 size: DWORD  <||@
  Comment 533 84 MOV [rcx|QWORD[.] + r8|QWORD * 4 + 24] y: -1 size: DWORD  <||@
  Comment 542 86 MOV [rcx|QWORD[.] + r8|QWORD * 4 + 28] y: -1 size: DWORD  <||@
  Comment 551 88 MOV [rcx|QWORD[.] + r8|QWORD * 4 + 32] y: -1 size: DWORD  <||@
  Comment 560 90 MOV [rcx|QWORD[.] + r8|QWORD * 4 + 36] y: -1 size: DWORD  <||@
  Comment 569 92 MOV [rcx|QWORD[.] + r8|QWORD * 4 + 40] y: -1 size: DWORD  <||@
  Comment 578 94 MOV [rcx|QWORD[.] + r8|QWORD * 4 + 44] y: -1 size: DWORD  <||@
  Comment 587 96 MOV [rcx|QWORD[.] + r8|QWORD * 4 + 48] y: -1 size: DWORD  <||@
  Comment 596 98 MOV [rcx|QWORD[.] + r8|QWORD * 4 + 52] y: -1 size: DWORD  <||@
  Comment 605 100 MOV [rcx|QWORD[.] + r8|QWORD * 4 + 56] y: -1 size: DWORD  <||@
  Comment 614 102 MOV [rcx|QWORD[.] + r8|QWORD * 4 + 60] y: -1 size: DWORD  <||@
  Comment 623 104 MOV [rcx|QWORD[.] + r8|QWORD * 4 + 64] y: -1 size: DWORD  <||@
  Comment 632 106 MOV [rcx|QWORD[.] + r8|QWORD * 4 + 68] y: -1 size: DWORD  <||@
  Comment 641 108 MOV [rcx|QWORD[.] + r8|QWORD * 4 + 72] y: -1 size: DWORD  <||@
  Comment 650 110 MOV [rcx|QWORD[.] + r8|QWORD * 4 + 76] y: -1 size: DWORD  <||@
  Comment 659 112 r11|DWORD = LEA [r11|DWORD + 16] size: DWORD  <||@
  Comment 663 114 JUMP ~[] destination: B11 -> B10  <||@
  Comment 663 block B10 loop 1 depth 1 header:334|LoopBegin  <||@
  Comment 663 72 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 663 74 CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.19993647348429622 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B13 size: DWORD  <||@
  Comment 677 block B25 null  <||@
  Comment 677 190 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 677 192 r10|DWORD = LEA [rax|DWORD - 4] size: DWORD  <||@
  Comment 681 194 JUMP ~[] destination: B25 -> B26  <||@
  Comment 686 block B30 loop 5 depth 1 header:398|LoopBegin  <||@
  Comment 686 224 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 704 226 MOV [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 713 228 r11|DWORD = INC r11|DWORD size: DWORD  <||@
  Comment 716 230 JUMP ~[] destination: B30 -> B29  <||@
  Comment 716 block B29 loop 5 depth 1 header:398|LoopBegin  <||@
  Comment 716 220 [] = LABEL alignment: 16 numbPhis: 1 label: ?  <||@
  Comment 720 222 CMPBRANCH (x: rax|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B32 size: DWORD  <||@
  Comment 731 block B27 loop 4 depth 1 header:378|LoopBegin  <||@
  Comment 731 200 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 736 202 MOV [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 745 204 r8|QWORD = MOVSXD r11|DWORD size: QWORD  <||@
  Comment 748 206 MOV [rcx|QWORD[.] + r8|QWORD * 4 + 20] y: -1 size: DWORD  <||@
  Comment 757 208 MOV [rcx|QWORD[.] + r8|QWORD * 4 + 24] y: -1 size: DWORD  <||@
  Comment 766 210 MOV [rcx|QWORD[.] + r8|QWORD * 4 + 28] y: -1 size: DWORD  <||@
  Comment 775 212 r11|DWORD = LEA [r11|DWORD + 4] size: DWORD  <||@
  Comment 779 214 JUMP ~[] destination: B27 -> B26  <||@
  Comment 779 block B26 loop 4 depth 1 header:378|LoopBegin  <||@
  Comment 779 196 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 779 198 CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.3325162586814181 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B29 size: DWORD  <||@
  Comment 786 block B38 null  <||@
  Comment 786 294 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 786 296 MOV [r15|QWORD + 1156] y: -47643 size: DWORD  <||@
  Comment 797 298 MOV [r15|QWORD + 1168] y: 2072 size: QWORD  <||@
  Comment 808 300 DEOPT info [bci:39]  <||@
  Comment 808 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7fba7b6335a8, value=140438496915834]:0x7fba62b8b17a}  <||@
  Comment 813 [rsi:0]at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 821 block B36 null  <||@
  Comment 821 302 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 821 -1 r11|QWORD = MOVE input: long[660|0x294]  <||@
  Comment 828 -1 r10|DWORD = MOVE input: int[-54579|0xffffffffffff2acd]  <||@
  Comment 834 304 JUMP ~[] destination: B36 -> B37  <||@
  Comment 834 block B37 null  <||@
  Comment 834 306 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 834 308 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 841 310 MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD  <||@
  Comment 848 312 DEOPT info [bci:63]  <||@
  Comment 848 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7fba7b6335a8, value=140438496915834]:0x7fba62b8b17a}  <||@
  Comment 853 [rsi:0]at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 861 block B35 null  <||@
  Comment 861 290 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 861 -1 r11|QWORD = MOVE input: long[20|0x14]  <||@
  Comment 868 -1 r10|DWORD = MOVE input: int[-84243|0xfffffffffffeb6ed]  <||@
  Comment 874 292 JUMP ~[] destination: B35 -> B37  <||@
  Comment 876 block B39 null  <||@
  Comment 876 282 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 876 284 MOV [r15|QWORD + 1156] y: -41243 size: DWORD  <||@
  Comment 887 286 MOV [r15|QWORD + 1168] y: 1304 size: QWORD  <||@
  Comment 898 288 DEOPT info [bci:15]  <||@
  Comment 898 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7fba7b6335a8, value=140438496915834]:0x7fba62b8b17a}  <||@
  Comment 903 [rsi:0]at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 15, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 916 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7fba7b633598, value=140438496784928]:0x7fba62b6b220}  <||@
  Comment 941 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7fba7b6335a0, value=140438496919552]:0x7fba62b8c000}  <||@
  Comment 969 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7fba7b6335a8, value=140438496915834]:0x7fba62b8b17a}  <||@
  Comment 974 [rcx:0, rsi:0]at java.util.regex.Matcher.reset(Matcher.java:448) [bci: 0, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 1004 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7fba7b6335a8, value=140438496915834]:0x7fba62b8b17a}  <||@
  Comment 1009 [rcx:0, rsi:0]at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 1039 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7fba7b6335a8, value=140438496915834]:0x7fba62b8b17a}  <||@
  Comment 1044 [rcx:0, rsi:0]at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 1074 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7fba7b6335a8, value=140438496915834]:0x7fba62b8b17a}  <||@
  Comment 1079 [rcx:0, rsi:0]at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 1109 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7fba7b6335a8, value=140438496915834]:0x7fba62b8b17a}  <||@
  Comment 1114 [rcx:0, rsi:0]at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 1122 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7fba62cc5f00:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1122 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 1128 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7fba7b6335b8, value=140438496915232]:0x7fba62b8af20}  <||@
  Comment 1128 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
