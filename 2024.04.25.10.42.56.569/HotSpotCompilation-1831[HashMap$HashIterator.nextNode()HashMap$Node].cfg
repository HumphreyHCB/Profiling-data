begin_compilation
  name " HotSpotCompilation-1831[java.util.HashMap$HashIterator.nextNode()]"
  method "HotSpotCompilation-1831[java.util.HashMap$HashIterator.nextNode()]"
  date 1714038177372
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B96" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a677 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: a677  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a! java.util.HashMap$HashIterator
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 v691 v692 v694 v695 ?16 ?68 v699 j314 j415 j510 j606 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v692 <|@
d <@d|@=== Debug Properties ===
displacement: 28
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a677 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a677 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.HashMap
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: HashMap$HashIterator.this$0
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1604) [bci: 6]
stamp: n java.util.HashMap
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v692 
lastLocationAccess: - 
=== Succesors ===
next: i678 
=== Usages ===
v697 v693 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v692 lastLocationAccess: - #next: i678  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_0
code: ResolvedJavaMethodBytecode<HashMap$HashIterator.nextNode()>
localsSize: 3
locksSize: 0
sourceFile: HashMap.java
sourceLine: 1603
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
v738 i678 a681 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@~|@floating>@ <|@
tid v693 <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a677 
=== Succesors ===
=== Usages ===
i678 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a677  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i678 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: int[-28171|0xffffffffffff91f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: HashMap.modCount
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1604) [bci: 9]
stamp: i32
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v693 
lastLocationAccess: - 
=== Succesors ===
next: a679 
=== Usages ===
v7 
=== Predecessor ===
a677 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v693 lastLocationAccess: - #next: a679  <|@  <|@
f <@~|@floating>@ <|@
tid v697 <|@
d <@d|@=== Debug Properties ===
displacement: 36
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a677 
=== Succesors ===
=== Usages ===
a679 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a677  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a679 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.HashMap$Node[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: HashMap.table
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 60]
stamp: n java.util.HashMap$Node[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v697 
lastLocationAccess: - 
=== Succesors ===
next: a680 
=== Usages ===
a132 v698 
=== Predecessor ===
i678 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v697 lastLocationAccess: - #next: a680  <|@  <|@
f <@~|@floating>@ <|@
tid v691 <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a680 v128 v154 v167 j374 j564 j469 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a680 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.HashMap$Node
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: HashMap$HashIterator.next
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 1]
stamp: n java.util.HashMap$Node
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v691 
lastLocationAccess: - 
=== Succesors ===
next: a681 
=== Usages ===
a104 v120 v696 
=== Predecessor ===
a679 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v691 lastLocationAccess: - #next: a681  <|@  <|@
f <@~|@floating>@ <|@
tid v696 <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a680 
=== Succesors ===
=== Usages ===
a681 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a680  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a681 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.HashMap$Node
barrierType: NONE
deoptReasonAndAction: int[-31243|0xffffffffffff85f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: HashMap$Node.next
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 46]
stamp: n java.util.HashMap$Node
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v696 
lastLocationAccess: - 
=== Succesors ===
next: i682 
=== Usages ===
a126 v170 v128 
=== Predecessor ===
a680 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v696 lastLocationAccess: - #next: i682  <|@  <|@
f <@~|@floating>@ <|@
tid v694 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i682 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i682 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: HashMap$HashIterator.expectedModCount
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1604) [bci: 13]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v694 
lastLocationAccess: - 
=== Succesors ===
next: v234 
=== Usages ===
v7 
=== Predecessor ===
a681 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v694 lastLocationAccess: - #next: v234  <|@  <|@
f <@~|@floating>@ <|@
tid v7 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1604) [bci: 16]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i678 
y: i682 
=== Succesors ===
=== Usages ===
v234 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i678 y: i682  <|@  <|@
f <@*|@fixed>@ <|@
tid v234 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1604) [bci: 16]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v7 
=== Succesors ===
trueSuccessor: v232 
falseSuccessor: v233 
=== Usages ===
=== Predecessor ===
i682 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v7 #trueSuccessor: v232 #falseSuccessor: v233  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v232 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1606) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
next: v311 
=== Usages ===
=== Predecessor ===
v234 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v311  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v311 <|@
d <@d|@=== Debug Properties ===
locations: [GC-SATB-Queue-Log, GC-SATB-Marking-Active, GC-SATB-Queue-Index, GC-SATB-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: j267 
=== Usages ===
=== Predecessor ===
v232 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j267  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j267 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:127) [bci: 10]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j268 
=== Usages ===
v702 v704 v705 
=== Predecessor ===
v311 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j268  <|@  <|@
f <@~|@floating>@ <|@
tid v695 <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v120 j268 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j268 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:129) [bci: 21]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v695 
=== Succesors ===
next: i297 
=== Usages ===
v703 
=== Predecessor ===
j267 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: v695 #next: i297  <|@  <|@
f <@~|@floating>@ <|@
tid v702 <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: j267 
index: - 
=== Succesors ===
=== Usages ===
i297 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j267 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i297 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Marking-Active
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:130) [bci: 35]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v702 
lastLocationAccess: - 
=== Succesors ===
next: v272 
=== Usages ===
v305 
=== Predecessor ===
j268 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v702 lastLocationAccess: - #next: v272  <|@  <|@
f <@~|@floating>@ <|@
tid i304 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
rawvalue: 0
stableDimension: 0
stamp: i8 [0]
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v305 v359 v366 v406 v455 v461 v501 v550 v556 v596 v646 v652 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v305 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i297 
y: i304 
=== Succesors ===
=== Usages ===
v272 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i297 y: i304  <|@  <|@
f <@~|@floating>@ <|@
tid j295 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
rawvalue: -8
stableDimension: 0
stamp: i64 [-8]
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j296 j356 j398 j452 j493 j547 j588 j643 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j243 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1604) [bci: 9]
rawvalue: 0
stableDimension: 0
stamp: i64 [0]
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v630 v612 v482 v577 v281 v320 v340 v516 v387 v421 v439 v534 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v272 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 217]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v305 
=== Succesors ===
trueSuccessor: v271 
falseSuccessor: v270 
=== Usages ===
=== Predecessor ===
i297 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v305 #trueSuccessor: v271 #falseSuccessor: v270  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B8" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v271 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v275 
=== Usages ===
=== Predecessor ===
v272 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v275  <|@  <|@
f <@*|@fixed>@ <|@
tid v275 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v276 
=== Predecessor ===
v271 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v270 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:150) [bci: 220]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: a298 
=== Usages ===
=== Predecessor ===
v272 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a298  <|@  <|@
f <@~|@floating>@ <|@
tid v703 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j268 
index: - 
=== Succesors ===
=== Usages ===
a298 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j268 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a298 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v703 
lastLocationAccess: - 
=== Succesors ===
next: v279 
=== Usages ===
a299 v306 
=== Predecessor ===
v270 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v703 lastLocationAccess: - #next: v279  <|@  <|@
f <@~|@floating>@ <|@
tid v306 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 296]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a298 
=== Succesors ===
=== Usages ===
v279 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a298  <|@  <|@
f <@*|@fixed>@ <|@
tid v279 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 307]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v306 
=== Succesors ===
trueSuccessor: v278 
falseSuccessor: v274 
=== Usages ===
=== Predecessor ===
a298 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v306 #trueSuccessor: v278 #falseSuccessor: v274  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v278 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v277 
=== Usages ===
=== Predecessor ===
v279 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v277  <|@  <|@
f <@*|@fixed>@ <|@
tid v277 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v276 
=== Predecessor ===
v278 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v274 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:163) [bci: 310]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: j300 
=== Usages ===
=== Predecessor ===
v279 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j300  <|@  <|@
f <@~|@floating>@ <|@
tid v704 <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: j267 
index: - 
=== Succesors ===
=== Usages ===
j300 v303 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j267 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j300 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:166) [bci: 327]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v704 
lastLocationAccess: - 
=== Succesors ===
next: v284 
=== Usages ===
v281 j296 v706 
=== Predecessor ===
v274 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v704 lastLocationAccess: - #next: v284  <|@  <|@
f <@~|@floating>@ <|@
tid v281 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 341]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j300 
y: j243 
=== Succesors ===
=== Usages ===
v284 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j300 y: j243  <|@  <|@
f <@~|@floating>@ <|@
tid a299 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a298 
=== Succesors ===
=== Usages ===
j286 v289 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a298  <|@  <|@
f <@*|@fixed>@ <|@
tid v284 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 347]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v281 
=== Succesors ===
trueSuccessor: v283 
falseSuccessor: v282 
=== Usages ===
=== Predecessor ===
j300 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v281 #trueSuccessor: v283 #falseSuccessor: v282  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v283 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 410]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v289 
=== Usages ===
=== Predecessor ===
v284 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v289  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v289 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_pre(Object)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-SATB-Queue-Index, GC-SATB-Queue-Buffer, GC-SATB-Queue-Log], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_pre
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(ForeignCallDescriptor, Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(G1WriteBarrierSnippets.java:409) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 413]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: a299 
=== Succesors ===
next: v290 
=== Usages ===
=== Predecessor ===
v283 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: a299 #next: v290  <|@  <|@
f <@*|@fixed>@ <|@
tid v290 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v276 
=== Predecessor ===
v289 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v282 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 350]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: j301 
=== Usages ===
=== Predecessor ===
v284 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j301  <|@  <|@
f <@~|@floating>@ <|@
tid v705 <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: j267 
index: - 
=== Succesors ===
=== Usages ===
j301 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j267 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j301 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 359]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v705 
lastLocationAccess: - 
=== Succesors ===
next: j286 
=== Usages ===
v706 
=== Predecessor ===
v282 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v705 lastLocationAccess: - #next: j286  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j286 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 384]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a299 
=== Succesors ===
next: v302 
=== Usages ===
v302 
=== Predecessor ===
j301 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a299 #next: v302  <|@  <|@
f <@~|@floating>@ <|@
tid v706 <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j301 
index: j300 
=== Succesors ===
=== Usages ===
v302 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j301 index: j300  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v302 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Log
location: GC-SATB-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 390]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v706 
lastLocationAccess: - 
value: j286 
stateAfter: - 
=== Succesors ===
next: v303 
=== Usages ===
=== Predecessor ===
j286 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v706 lastLocationAccess: - value: j286 stateAfter: - #next: v303  <|@  <|@
f <@~|@floating>@ <|@
tid j296 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: i64
=== Inputs ===
x: j300 
y: j295 
=== Succesors ===
=== Usages ===
v303 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j300 y: j295  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v303 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Index
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:173) [bci: 404]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v704 
lastLocationAccess: - 
value: j296 
stateAfter: - 
=== Succesors ===
next: v288 
=== Usages ===
=== Predecessor ===
v302 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v704 lastLocationAccess: - value: j296 stateAfter: - #next: v288  <|@  <|@
f <@*|@fixed>@ <|@
tid v288 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v276 
=== Predecessor ===
v303 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" "B7" "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v276 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v275 v277 v288 v290 
=== Succesors ===
next: v120 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v275 v277 v288 v290 #next: v120  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v120 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: HashMap$HashIterator.current
location: HashMap$HashIterator.current
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v695 
lastLocationAccess: - 
value: a680 
stateAfter: - 
=== Succesors ===
next: v372 
=== Usages ===
=== Predecessor ===
v276 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v695 lastLocationAccess: - value: a680 stateAfter: - #next: v372  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v372 <|@
d <@d|@=== Debug Properties ===
locations: [GC-Card, GC-Card-Queue-Log, GC-Card-Queue-Index, GC-Card-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: j312 
=== Usages ===
=== Predecessor ===
v120 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j312  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j312 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:184) [bci: 1] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: a313 
=== Usages ===
v707 v708 
=== Predecessor ===
v372 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: a313  <|@  <|@
f <@~|@floating>@ <|@
tid a104 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 1]
op: Uncompress
stamp: a java.util.HashMap$Node
=== Inputs ===
value: a680 
=== Succesors ===
=== Usages ===
?68 a313 ?16 v55 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a680  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a313 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.FixedValueAnchorNode.getObject(Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:185) [bci: 7] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: a java.util.HashMap$Node
=== Inputs ===
object: a104 
=== Succesors ===
next: j314 
=== Usages ===
j315 
=== Predecessor ===
j312 >@ <|@
instruction <@FixedValueAnchor|@jdk.graal.compiler.nodes.extended.FixedValueAnchorNode>@ object: a104 #next: j314  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j314 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:197) [bci: 56] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: j315 
=== Usages ===
j316 j329 
=== Predecessor ===
a313 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a1 #next: j315  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j315 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:208) [bci: 150] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a313 
=== Succesors ===
next: v319 
=== Usages ===
j316 v320 
=== Predecessor ===
j314 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a313 #next: v319  <|@  <|@
f <@~|@floating>@ <|@
tid j316 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:212) [bci: 165] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: i64
=== Inputs ===
x: j314 
y: j315 
=== Succesors ===
=== Usages ===
v351 
=== Predecessor ===
- >@ <|@
instruction <@^|@jdk.graal.compiler.nodes.calc.XorNode>@ x: j314 y: j315  <|@  <|@
f <@~|@floating>@ <|@
tid j350 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:215) [bci: 193] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
rawvalue: -4194304
stableDimension: 0
stamp: i64 [-4194304]
stampKind: i64
value: long[-4194304|0xffffffffffc00000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v351 v449 v544 v640 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v351 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:215) [bci: 193] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
=== Inputs ===
x: j316 
y: j350 
=== Succesors ===
=== Usages ===
v319 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@jdk.graal.compiler.nodes.calc.IntegerTestNode>@ x: j316 y: j350  <|@  <|@
f <@~|@floating>@ <|@
tid i364 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:227) [bci: 265] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
rawvalue: 2
stableDimension: 0
stamp: i8 [2]
stampKind: i8
value: byte[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
v365 v460 v555 v651 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i328 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.cardTableAddress(HotSpotG1WriteBarrierSnippets.java:130) [bci: 16]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 232] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
rawvalue: 9
stableDimension: 0
stamp: i32 [9]
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j329 j428 j523 j619 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j327 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableStart(GraalHotSpotVMConfig) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.cardTableAddress(HotSpotG1WriteBarrierSnippets.java:129) [bci: 3]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 232] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
rawvalue: 140438306553856
stableDimension: 0
stamp: i64 [140438306553856]
stampKind: i64
value: long[140438306553856|0x7fba57600000]
=== Inputs ===
=== Succesors ===
=== Usages ===
j352 v710 j450 v719 j545 v728 j641 v737 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v319 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:215) [bci: 201] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v351 
=== Succesors ===
trueSuccessor: v318 
falseSuccessor: v317 
=== Usages ===
=== Predecessor ===
j315 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v351 #trueSuccessor: v318 #falseSuccessor: v317  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B19" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v318 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v322 
=== Usages ===
=== Predecessor ===
v319 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v322  <|@  <|@
f <@*|@fixed>@ <|@
tid v322 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v323 
=== Predecessor ===
v318 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v317 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:216) [bci: 204] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v326 
=== Usages ===
=== Predecessor ===
v319 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v326  <|@  <|@
f <@~|@floating>@ <|@
tid v320 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:218) [bci: 218] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j315 
y: j243 
=== Succesors ===
=== Usages ===
v326 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j315 y: j243  <|@  <|@
f <@*|@fixed>@ <|@
tid v326 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:218) [bci: 226] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v320 
=== Succesors ===
trueSuccessor: v325 
falseSuccessor: v321 
=== Usages ===
=== Predecessor ===
v317 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v320 #trueSuccessor: v325 #falseSuccessor: v321  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B19" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v325 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v324 
=== Usages ===
=== Predecessor ===
v326 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v324  <|@  <|@
f <@*|@fixed>@ <|@
tid v324 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v323 
=== Predecessor ===
v325 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v321 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 229] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: i357 
=== Usages ===
=== Predecessor ===
v326 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i357  <|@  <|@
f <@~|@floating>@ <|@
tid j329 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.cardTableAddress(HotSpotG1WriteBarrierSnippets.java:131) [bci: 23]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 232] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: i64 [0 - 36028797018963967] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j314 
y: i328 
=== Succesors ===
=== Usages ===
j352 v710 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j314 y: i328  <|@  <|@
f <@~|@floating>@ <|@
tid v710 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j329 
index: j327 
=== Succesors ===
=== Usages ===
i357 i358 v359 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j329 index: j327  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i357 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:223) [bci: 243] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v710 
lastLocationAccess: - 
=== Succesors ===
next: v333 
=== Usages ===
v365 
=== Predecessor ===
v321 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v710 lastLocationAccess: - #next: v333  <|@  <|@
f <@~|@floating>@ <|@
tid v365 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:227) [bci: 265] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i357 
y: i364 
=== Succesors ===
=== Usages ===
v333 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i357 y: i364  <|@  <|@
f <@*|@fixed>@ <|@
tid v333 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:227) [bci: 276] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v365 
=== Succesors ===
trueSuccessor: v332 
falseSuccessor: v330 
=== Usages ===
=== Predecessor ===
i357 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v365 #trueSuccessor: v332 #falseSuccessor: v330  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v332 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v331 
=== Usages ===
=== Predecessor ===
v333 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v331  <|@  <|@
f <@*|@fixed>@ <|@
tid v331 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v323 
=== Predecessor ===
v332 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v330 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:228) [bci: 279] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v334 
=== Usages ===
=== Predecessor ===
v333 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v334  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v334 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_LOAD
fence: STORE_LOAD
location: GC-Card
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.MembarNode.memoryBarrier(MembarNode$FenceKind, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:228) [bci: 285] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: i358 
=== Usages ===
=== Predecessor ===
v330 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: i358  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i358 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:229) [bci: 294] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v710 
lastLocationAccess: - 
=== Succesors ===
next: v338 
=== Usages ===
v366 
=== Predecessor ===
v334 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v710 lastLocationAccess: - #next: v338  <|@  <|@
f <@~|@floating>@ <|@
tid v366 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:230) [bci: 308] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i358 
y: i304 
=== Succesors ===
=== Usages ===
v338 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i358 y: i304  <|@  <|@
f <@*|@fixed>@ <|@
tid v338 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:230) [bci: 319] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v366 
=== Succesors ===
trueSuccessor: v337 
falseSuccessor: v335 
=== Usages ===
=== Predecessor ===
i358 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v366 #trueSuccessor: v337 #falseSuccessor: v335  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B19" 
    xhandlers
    flags 
    probability 4589917419268529874
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v337 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v336 
=== Usages ===
=== Predecessor ===
v338 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v336  <|@  <|@
f <@*|@fixed>@ <|@
tid v336 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v323 
=== Predecessor ===
v337 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v335 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:231) [bci: 322] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v359 
=== Usages ===
=== Predecessor ===
v338 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v359  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v359 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:232) [bci: 358] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v710 
lastLocationAccess: - 
value: i304 
stateAfter: - 
=== Succesors ===
next: j360 
=== Usages ===
=== Predecessor ===
v335 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v710 lastLocationAccess: - value: i304 stateAfter: - #next: j360  <|@  <|@
f <@~|@floating>@ <|@
tid v707 <|@
d <@d|@=== Debug Properties ===
displacement: 72
stamp: void*
stride: S1
=== Inputs ===
base: j312 
index: - 
=== Succesors ===
=== Usages ===
j360 v363 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j312 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j360 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:237) [bci: 378] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v707 
lastLocationAccess: - 
=== Succesors ===
next: v343 
=== Usages ===
v340 j356 v709 
=== Predecessor ===
v359 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v707 lastLocationAccess: - #next: v343  <|@  <|@
f <@~|@floating>@ <|@
tid v340 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:238) [bci: 392] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j360 
y: j243 
=== Succesors ===
=== Usages ===
v343 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j360 y: j243  <|@  <|@
f <@~|@floating>@ <|@
tid j352 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.cardTableAddress(HotSpotG1WriteBarrierSnippets.java:131) [bci: 28]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 232] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: i64 [140438306553856 - 36169235325517823] bits:00000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j329 
y: j327 
=== Succesors ===
=== Usages ===
v347 v362 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j329 y: j327  <|@  <|@
f <@*|@fixed>@ <|@
tid v343 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:238) [bci: 398] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v340 
=== Succesors ===
trueSuccessor: v342 
falseSuccessor: v341 
=== Usages ===
=== Predecessor ===
j360 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v340 #trueSuccessor: v342 #falseSuccessor: v341  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v342 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:247) [bci: 458] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v347 
=== Usages ===
=== Predecessor ===
v343 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v347  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v347 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_post(Word)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-Card-Queue-Index, GC-Card-Queue-Buffer, GC-Card-Queue-Log, GC-Card], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_post
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostBarrierStub(ForeignCallDescriptor, Word) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostBarrierStub(G1WriteBarrierSnippets.java:413) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:247) [bci: 461] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: j352 
=== Succesors ===
next: v348 
=== Usages ===
=== Predecessor ===
v342 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: j352 #next: v348  <|@  <|@
f <@*|@fixed>@ <|@
tid v348 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v323 
=== Predecessor ===
v347 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v341 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:239) [bci: 401] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: j361 
=== Usages ===
=== Predecessor ===
v343 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j361  <|@  <|@
f <@~|@floating>@ <|@
tid v708 <|@
d <@d|@=== Debug Properties ===
displacement: 88
stamp: void*
stride: S1
=== Inputs ===
base: j312 
index: - 
=== Succesors ===
=== Usages ===
j361 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j312 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j361 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:239) [bci: 410] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v708 
lastLocationAccess: - 
=== Succesors ===
next: v362 
=== Usages ===
v709 
=== Predecessor ===
v341 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v708 lastLocationAccess: - #next: v362  <|@  <|@
f <@~|@floating>@ <|@
tid v709 <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j361 
index: j360 
=== Succesors ===
=== Usages ===
v362 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j361 index: j360  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v362 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card-Queue-Log
location: GC-Card-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:244) [bci: 438] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v709 
lastLocationAccess: - 
value: j352 
stateAfter: - 
=== Succesors ===
next: v363 
=== Usages ===
=== Predecessor ===
j361 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v709 lastLocationAccess: - value: j352 stateAfter: - #next: v363  <|@  <|@
f <@~|@floating>@ <|@
tid j356 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:240) [bci: 424] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: i64
=== Inputs ===
x: j360 
y: j295 
=== Succesors ===
=== Usages ===
v363 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j360 y: j295  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v363 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card-Queue-Index
location: GC-Card-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:245) [bci: 452] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v707 
lastLocationAccess: - 
value: j356 
stateAfter: - 
=== Succesors ===
next: v346 
=== Usages ===
=== Predecessor ===
v362 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v707 lastLocationAccess: - value: j356 stateAfter: - #next: v346  <|@  <|@
f <@*|@fixed>@ <|@
tid v346 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v323 
=== Predecessor ===
v363 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" "B13" "B15" "B18" "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v323 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v322 v324 v331 v336 v346 v348 
=== Succesors ===
next: v412 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v322 v324 v331 v336 v346 v348 #next: v412  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v412 <|@
d <@d|@=== Debug Properties ===
locations: [GC-SATB-Queue-Log, GC-SATB-Marking-Active, GC-SATB-Queue-Index, GC-SATB-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: j373 
=== Usages ===
=== Predecessor ===
v323 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j373  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j373 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:127) [bci: 10]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j374 
=== Usages ===
v711 v713 v714 
=== Predecessor ===
v412 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j374  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j374 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:129) [bci: 21]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v691 
=== Succesors ===
next: i399 
=== Usages ===
v712 
=== Predecessor ===
j373 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: v691 #next: i399  <|@  <|@
f <@~|@floating>@ <|@
tid v711 <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: j373 
index: - 
=== Succesors ===
=== Usages ===
i399 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j373 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i399 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Marking-Active
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:130) [bci: 35]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v711 
lastLocationAccess: - 
=== Succesors ===
next: v378 
=== Usages ===
v406 
=== Predecessor ===
j374 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v711 lastLocationAccess: - #next: v378  <|@  <|@
f <@~|@floating>@ <|@
tid v406 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i399 
y: i304 
=== Succesors ===
=== Usages ===
v378 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i399 y: i304  <|@  <|@
f <@*|@fixed>@ <|@
tid v378 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 217]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v406 
=== Succesors ===
trueSuccessor: v377 
falseSuccessor: v376 
=== Usages ===
=== Predecessor ===
i399 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v406 #trueSuccessor: v377 #falseSuccessor: v376  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B26" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v377 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v381 
=== Usages ===
=== Predecessor ===
v378 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v381  <|@  <|@
f <@*|@fixed>@ <|@
tid v381 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v382 
=== Predecessor ===
v377 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v376 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:150) [bci: 220]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: a400 
=== Usages ===
=== Predecessor ===
v378 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a400  <|@  <|@
f <@~|@floating>@ <|@
tid v712 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j374 
index: - 
=== Succesors ===
=== Usages ===
a400 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j374 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a400 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v712 
lastLocationAccess: - 
=== Succesors ===
next: v385 
=== Usages ===
a401 v407 
=== Predecessor ===
v376 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v712 lastLocationAccess: - #next: v385  <|@  <|@
f <@~|@floating>@ <|@
tid v407 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 296]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a400 
=== Succesors ===
=== Usages ===
v385 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a400  <|@  <|@
f <@*|@fixed>@ <|@
tid v385 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 307]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v407 
=== Succesors ===
trueSuccessor: v384 
falseSuccessor: v380 
=== Usages ===
=== Predecessor ===
a400 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v407 #trueSuccessor: v384 #falseSuccessor: v380  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B26" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v384 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v383 
=== Usages ===
=== Predecessor ===
v385 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v383  <|@  <|@
f <@*|@fixed>@ <|@
tid v383 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v382 
=== Predecessor ===
v384 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v380 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:163) [bci: 310]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: j402 
=== Usages ===
=== Predecessor ===
v385 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j402  <|@  <|@
f <@~|@floating>@ <|@
tid v713 <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: j373 
index: - 
=== Succesors ===
=== Usages ===
j402 v405 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j373 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j402 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:166) [bci: 327]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v713 
lastLocationAccess: - 
=== Succesors ===
next: v390 
=== Usages ===
v387 j398 v715 
=== Predecessor ===
v380 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v713 lastLocationAccess: - #next: v390  <|@  <|@
f <@~|@floating>@ <|@
tid v387 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 341]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j402 
y: j243 
=== Succesors ===
=== Usages ===
v390 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j402 y: j243  <|@  <|@
f <@~|@floating>@ <|@
tid a401 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a400 
=== Succesors ===
=== Usages ===
j392 v395 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a400  <|@  <|@
f <@*|@fixed>@ <|@
tid v390 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 347]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v387 
=== Succesors ===
trueSuccessor: v389 
falseSuccessor: v388 
=== Usages ===
=== Predecessor ===
j402 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v387 #trueSuccessor: v389 #falseSuccessor: v388  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v389 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 410]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v395 
=== Usages ===
=== Predecessor ===
v390 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v395  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v395 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_pre(Object)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-SATB-Queue-Index, GC-SATB-Queue-Buffer, GC-SATB-Queue-Log], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_pre
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(ForeignCallDescriptor, Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(G1WriteBarrierSnippets.java:409) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 413]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: a401 
=== Succesors ===
next: v396 
=== Usages ===
=== Predecessor ===
v389 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: a401 #next: v396  <|@  <|@
f <@*|@fixed>@ <|@
tid v396 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v382 
=== Predecessor ===
v395 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v388 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 350]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: j403 
=== Usages ===
=== Predecessor ===
v390 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j403  <|@  <|@
f <@~|@floating>@ <|@
tid v714 <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: j373 
index: - 
=== Succesors ===
=== Usages ===
j403 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j373 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j403 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 359]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v714 
lastLocationAccess: - 
=== Succesors ===
next: j392 
=== Usages ===
v715 
=== Predecessor ===
v388 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v714 lastLocationAccess: - #next: j392  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j392 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 384]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a401 
=== Succesors ===
next: v404 
=== Usages ===
v404 
=== Predecessor ===
j403 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a401 #next: v404  <|@  <|@
f <@~|@floating>@ <|@
tid v715 <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j403 
index: j402 
=== Succesors ===
=== Usages ===
v404 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j403 index: j402  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v404 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Log
location: GC-SATB-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 390]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v715 
lastLocationAccess: - 
value: j392 
stateAfter: - 
=== Succesors ===
next: v405 
=== Usages ===
=== Predecessor ===
j392 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v715 lastLocationAccess: - value: j392 stateAfter: - #next: v405  <|@  <|@
f <@~|@floating>@ <|@
tid j398 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: i64
=== Inputs ===
x: j402 
y: j295 
=== Succesors ===
=== Usages ===
v405 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j402 y: j295  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v405 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Index
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:173) [bci: 404]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v713 
lastLocationAccess: - 
value: j398 
stateAfter: - 
=== Succesors ===
next: v394 
=== Usages ===
=== Predecessor ===
v404 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v713 lastLocationAccess: - value: j398 stateAfter: - #next: v394  <|@  <|@
f <@*|@fixed>@ <|@
tid v394 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v382 
=== Predecessor ===
v405 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" "B25" "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v382 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v381 v383 v394 v396 
=== Succesors ===
next: v128 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v381 v383 v394 v396 #next: v128  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v128 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: HashMap$HashIterator.next
location: HashMap$HashIterator.next
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v691 
lastLocationAccess: - 
value: a681 
stateAfter: - 
=== Succesors ===
next: v467 
=== Usages ===
=== Predecessor ===
v382 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v691 lastLocationAccess: - value: a681 stateAfter: - #next: v467  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v467 <|@
d <@d|@=== Debug Properties ===
locations: [GC-Card, GC-Card-Queue-Log, GC-Card-Queue-Index, GC-Card-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: j413 
=== Usages ===
=== Predecessor ===
v128 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j413  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j413 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:184) [bci: 1] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: a414 
=== Usages ===
v716 v717 
=== Predecessor ===
v467 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: a414  <|@  <|@
f <@~|@floating>@ <|@
tid a126 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 46]
op: Uncompress
stamp: a java.util.HashMap$Node
=== Inputs ===
value: a681 
=== Succesors ===
=== Usages ===
?16 a414 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a681  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a414 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.FixedValueAnchorNode.getObject(Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:185) [bci: 7] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: a java.util.HashMap$Node
=== Inputs ===
object: a126 
=== Succesors ===
next: j415 
=== Usages ===
j416 
=== Predecessor ===
j413 >@ <|@
instruction <@FixedValueAnchor|@jdk.graal.compiler.nodes.extended.FixedValueAnchorNode>@ object: a126 #next: j415  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j415 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:197) [bci: 56] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: j416 
=== Usages ===
j417 j428 
=== Predecessor ===
a414 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a1 #next: j416  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j416 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:208) [bci: 150] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a414 
=== Succesors ===
next: v420 
=== Usages ===
j417 v421 
=== Predecessor ===
j415 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a414 #next: v420  <|@  <|@
f <@~|@floating>@ <|@
tid j417 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:212) [bci: 165] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: i64
=== Inputs ===
x: j415 
y: j416 
=== Succesors ===
=== Usages ===
v449 
=== Predecessor ===
- >@ <|@
instruction <@^|@jdk.graal.compiler.nodes.calc.XorNode>@ x: j415 y: j416  <|@  <|@
f <@~|@floating>@ <|@
tid v449 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:215) [bci: 193] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
=== Inputs ===
x: j417 
y: j350 
=== Succesors ===
=== Usages ===
v420 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@jdk.graal.compiler.nodes.calc.IntegerTestNode>@ x: j417 y: j350  <|@  <|@
f <@*|@fixed>@ <|@
tid v420 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:215) [bci: 201] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v449 
=== Succesors ===
trueSuccessor: v419 
falseSuccessor: v418 
=== Usages ===
=== Predecessor ===
j416 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v449 #trueSuccessor: v419 #falseSuccessor: v418  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B37" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v419 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v423 
=== Usages ===
=== Predecessor ===
v420 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v423  <|@  <|@
f <@*|@fixed>@ <|@
tid v423 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v424 
=== Predecessor ===
v419 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v418 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:216) [bci: 204] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v427 
=== Usages ===
=== Predecessor ===
v420 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v427  <|@  <|@
f <@~|@floating>@ <|@
tid v421 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:218) [bci: 218] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j416 
y: j243 
=== Succesors ===
=== Usages ===
v427 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j416 y: j243  <|@  <|@
f <@*|@fixed>@ <|@
tid v427 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:218) [bci: 226] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v421 
=== Succesors ===
trueSuccessor: v426 
falseSuccessor: v422 
=== Usages ===
=== Predecessor ===
v418 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v421 #trueSuccessor: v426 #falseSuccessor: v422  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B37" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v426 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v425 
=== Usages ===
=== Predecessor ===
v427 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v425  <|@  <|@
f <@*|@fixed>@ <|@
tid v425 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v424 
=== Predecessor ===
v426 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v422 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 229] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: i453 
=== Usages ===
=== Predecessor ===
v427 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i453  <|@  <|@
f <@~|@floating>@ <|@
tid j428 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.cardTableAddress(HotSpotG1WriteBarrierSnippets.java:131) [bci: 23]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 232] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: i64 [0 - 36028797018963967] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j415 
y: i328 
=== Succesors ===
=== Usages ===
j450 v719 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j415 y: i328  <|@  <|@
f <@~|@floating>@ <|@
tid v719 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j428 
index: j327 
=== Succesors ===
=== Usages ===
i453 i454 v455 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j428 index: j327  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i453 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:223) [bci: 243] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v719 
lastLocationAccess: - 
=== Succesors ===
next: v432 
=== Usages ===
v460 
=== Predecessor ===
v422 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v719 lastLocationAccess: - #next: v432  <|@  <|@
f <@~|@floating>@ <|@
tid v460 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:227) [bci: 265] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i453 
y: i364 
=== Succesors ===
=== Usages ===
v432 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i453 y: i364  <|@  <|@
f <@*|@fixed>@ <|@
tid v432 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:227) [bci: 276] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v460 
=== Succesors ===
trueSuccessor: v431 
falseSuccessor: v429 
=== Usages ===
=== Predecessor ===
i453 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v460 #trueSuccessor: v431 #falseSuccessor: v429  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B37" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v431 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v430 
=== Usages ===
=== Predecessor ===
v432 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v430  <|@  <|@
f <@*|@fixed>@ <|@
tid v430 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v424 
=== Predecessor ===
v431 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v429 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:228) [bci: 279] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v433 
=== Usages ===
=== Predecessor ===
v432 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v433  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v433 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_LOAD
fence: STORE_LOAD
location: GC-Card
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.MembarNode.memoryBarrier(MembarNode$FenceKind, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:228) [bci: 285] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: i454 
=== Usages ===
=== Predecessor ===
v429 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: i454  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i454 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:229) [bci: 294] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v719 
lastLocationAccess: - 
=== Succesors ===
next: v437 
=== Usages ===
v461 
=== Predecessor ===
v433 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v719 lastLocationAccess: - #next: v437  <|@  <|@
f <@~|@floating>@ <|@
tid v461 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:230) [bci: 308] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i454 
y: i304 
=== Succesors ===
=== Usages ===
v437 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i454 y: i304  <|@  <|@
f <@*|@fixed>@ <|@
tid v437 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:230) [bci: 319] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v461 
=== Succesors ===
trueSuccessor: v436 
falseSuccessor: v434 
=== Usages ===
=== Predecessor ===
i454 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v461 #trueSuccessor: v436 #falseSuccessor: v434  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" 
    xhandlers
    flags 
    probability 4589917419268529874
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v436 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v435 
=== Usages ===
=== Predecessor ===
v437 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v435  <|@  <|@
f <@*|@fixed>@ <|@
tid v435 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v424 
=== Predecessor ===
v436 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v434 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:231) [bci: 322] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v455 
=== Usages ===
=== Predecessor ===
v437 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v455  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v455 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:232) [bci: 358] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v719 
lastLocationAccess: - 
value: i304 
stateAfter: - 
=== Succesors ===
next: j456 
=== Usages ===
=== Predecessor ===
v434 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v719 lastLocationAccess: - value: i304 stateAfter: - #next: j456  <|@  <|@
f <@~|@floating>@ <|@
tid v716 <|@
d <@d|@=== Debug Properties ===
displacement: 72
stamp: void*
stride: S1
=== Inputs ===
base: j413 
index: - 
=== Succesors ===
=== Usages ===
j456 v459 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j413 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j456 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:237) [bci: 378] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v716 
lastLocationAccess: - 
=== Succesors ===
next: v442 
=== Usages ===
v439 j452 v718 
=== Predecessor ===
v455 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v716 lastLocationAccess: - #next: v442  <|@  <|@
f <@~|@floating>@ <|@
tid v439 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:238) [bci: 392] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j456 
y: j243 
=== Succesors ===
=== Usages ===
v442 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j456 y: j243  <|@  <|@
f <@~|@floating>@ <|@
tid j450 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.cardTableAddress(HotSpotG1WriteBarrierSnippets.java:131) [bci: 28]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 232] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: i64 [140438306553856 - 36169235325517823] bits:00000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j428 
y: j327 
=== Succesors ===
=== Usages ===
v446 v458 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j428 y: j327  <|@  <|@
f <@*|@fixed>@ <|@
tid v442 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:238) [bci: 398] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v439 
=== Succesors ===
trueSuccessor: v441 
falseSuccessor: v440 
=== Usages ===
=== Predecessor ===
j456 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v439 #trueSuccessor: v441 #falseSuccessor: v440  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v441 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:247) [bci: 458] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v446 
=== Usages ===
=== Predecessor ===
v442 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v446  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v446 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_post(Word)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-Card-Queue-Index, GC-Card-Queue-Buffer, GC-Card-Queue-Log, GC-Card], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_post
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostBarrierStub(ForeignCallDescriptor, Word) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostBarrierStub(G1WriteBarrierSnippets.java:413) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:247) [bci: 461] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: j450 
=== Succesors ===
next: v447 
=== Usages ===
=== Predecessor ===
v441 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: j450 #next: v447  <|@  <|@
f <@*|@fixed>@ <|@
tid v447 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v424 
=== Predecessor ===
v446 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v440 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:239) [bci: 401] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: j457 
=== Usages ===
=== Predecessor ===
v442 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j457  <|@  <|@
f <@~|@floating>@ <|@
tid v717 <|@
d <@d|@=== Debug Properties ===
displacement: 88
stamp: void*
stride: S1
=== Inputs ===
base: j413 
index: - 
=== Succesors ===
=== Usages ===
j457 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j413 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j457 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:239) [bci: 410] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v717 
lastLocationAccess: - 
=== Succesors ===
next: v458 
=== Usages ===
v718 
=== Predecessor ===
v440 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v717 lastLocationAccess: - #next: v458  <|@  <|@
f <@~|@floating>@ <|@
tid v718 <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j457 
index: j456 
=== Succesors ===
=== Usages ===
v458 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j457 index: j456  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v458 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card-Queue-Log
location: GC-Card-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:244) [bci: 438] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v718 
lastLocationAccess: - 
value: j450 
stateAfter: - 
=== Succesors ===
next: v459 
=== Usages ===
=== Predecessor ===
j457 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v718 lastLocationAccess: - value: j450 stateAfter: - #next: v459  <|@  <|@
f <@~|@floating>@ <|@
tid j452 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:240) [bci: 424] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: i64
=== Inputs ===
x: j456 
y: j295 
=== Succesors ===
=== Usages ===
v459 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j456 y: j295  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v459 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card-Queue-Index
location: GC-Card-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:245) [bci: 452] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v716 
lastLocationAccess: - 
value: j452 
stateAfter: - 
=== Succesors ===
next: v445 
=== Usages ===
=== Predecessor ===
v458 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v716 lastLocationAccess: - value: j452 stateAfter: - #next: v445  <|@  <|@
f <@*|@fixed>@ <|@
tid v445 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v424 
=== Predecessor ===
v459 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B27" "B29" "B31" "B33" "B36" "B35" 
    successors "B38" "B94" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v424 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v423 v425 v430 v435 v445 v447 
=== Succesors ===
next: v20 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v423 v425 v430 v435 v445 v447 #next: v20  <|@  <|@
f <@~|@floating>@ <|@
tid v170 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a681 
=== Succesors ===
=== Usages ===
v20 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a681  <|@  <|@
f <@*|@fixed>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
profileData: PROFILED designatedSuccessorProbability: 0.8674348032491496
stamp: void
=== Inputs ===
condition: v170 
=== Succesors ===
trueSuccessor: v19 
falseSuccessor: v18 
=== Usages ===
=== Predecessor ===
v424 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v170 #trueSuccessor: v19 #falseSuccessor: v18  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B93" 
    xhandlers
    flags 
    probability 4605988377658638555
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 56]
stamp: void
=== Inputs ===
=== Succesors ===
next: i683 
=== Usages ===
=== Predecessor ===
v20 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i683  <|@  <|@
tid ?16 <|@
d <@d|@=== Debug Properties ===
bci: 53
bytecode: ifnonnull
code: ResolvedJavaMethodBytecode<HashMap$HashIterator.nextNode()>
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
sourceFile: HashMap.java
sourceLine: 1608
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a126 a1 - a104 
=== Succesors ===
=== Usages ===
v739 i683 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a126 a1 - a104  <|@  <|@
f <@~|@floating>@ <|@
tid v698 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a679 
=== Succesors ===
=== Usages ===
i683 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a679  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i683 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-34315|0xffffffffffff79f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 73]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?16 
guard: - 
address: v698 
lastLocationAccess: - 
=== Succesors ===
next: i684 
=== Usages ===
v31 v58 v143 v207 j195 i196 v204 
=== Predecessor ===
v19 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?16 guard: - address: v698 lastLocationAccess: - #next: i684  <|@  <|@
f <@~|@floating>@ <|@
tid v699 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i684 v141 v155 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i684 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: HashMap$HashIterator.index
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 69]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v699 
lastLocationAccess: - 
=== Succesors ===
next: v61 
=== Usages ===
v58 i63 v143 v700 
=== Predecessor ===
i683 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v699 lastLocationAccess: - #next: v61  <|@  <|@
f <@~|@floating>@ <|@
tid v58 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 74]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@4dc6bd49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i684 
y: i683 
=== Succesors ===
=== Usages ===
v61 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i684 y: i683  <|@  <|@
f <@*|@fixed>@ <|@
tid v61 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 74]
profileData: PROFILED designatedSuccessorProbability: 0.9812627296505405
stamp: void
=== Inputs ===
condition: v58 
=== Succesors ===
trueSuccessor: v60 
falseSuccessor: v59 
=== Usages ===
=== Predecessor ===
i684 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v58 #trueSuccessor: v60 #falseSuccessor: v59  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B92" 
    xhandlers
    flags 
    probability 4605841980402785416
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v60 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 77]
stamp: void
=== Inputs ===
=== Succesors ===
next: v225 
=== Usages ===
=== Predecessor ===
v61 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v225  <|@  <|@
f <@~|@floating>@ <|@
tid v143 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 90]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@40aab068
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i684 
y: i683 
=== Succesors ===
=== Usages ===
v225 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i684 y: i683  <|@  <|@
f <@*|@fixed>@ <|@
tid v225 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 90]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v143 
=== Succesors ===
trueSuccessor: v222 
falseSuccessor: v224 
=== Usages ===
=== Predecessor ===
v60 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v143 #trueSuccessor: v222 #falseSuccessor: v224  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4605841980402785416
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v222 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: v141 
=== Usages ===
=== Predecessor ===
v225 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v141  <|@  <|@
f <@~|@floating>@ <|@
tid i40 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 85]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i41 i63 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i63 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 86]
stamp: i32
=== Inputs ===
x: i684 
y: i40 
=== Succesors ===
=== Usages ===
v141 i87 i196 j687 v204 v207 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i684 y: i40  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v141 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: HashMap$HashIterator.index
location: HashMap$HashIterator.index
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 87]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v699 
lastLocationAccess: - 
value: i63 
stateAfter: - 
=== Succesors ===
next: v507 
=== Usages ===
=== Predecessor ===
v222 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v699 lastLocationAccess: - value: i63 stateAfter: - #next: v507  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v507 <|@
d <@d|@=== Debug Properties ===
locations: [GC-SATB-Queue-Log, GC-SATB-Marking-Active, GC-SATB-Queue-Index, GC-SATB-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: j468 
=== Usages ===
=== Predecessor ===
v141 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j468  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j468 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:127) [bci: 10]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j469 
=== Usages ===
v720 v722 v723 
=== Predecessor ===
v507 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j469  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j469 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:129) [bci: 21]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v691 
=== Succesors ===
next: i494 
=== Usages ===
v721 
=== Predecessor ===
j468 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: v691 #next: i494  <|@  <|@
f <@~|@floating>@ <|@
tid v720 <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: j468 
index: - 
=== Succesors ===
=== Usages ===
i494 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j468 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i494 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Marking-Active
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:130) [bci: 35]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v720 
lastLocationAccess: - 
=== Succesors ===
next: v473 
=== Usages ===
v501 
=== Predecessor ===
j469 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v720 lastLocationAccess: - #next: v473  <|@  <|@
f <@~|@floating>@ <|@
tid v501 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i494 
y: i304 
=== Succesors ===
=== Usages ===
v473 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i494 y: i304  <|@  <|@
f <@*|@fixed>@ <|@
tid v473 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 217]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v501 
=== Succesors ===
trueSuccessor: v472 
falseSuccessor: v471 
=== Usages ===
=== Predecessor ===
i494 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v501 #trueSuccessor: v472 #falseSuccessor: v471  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B47" 
    xhandlers
    flags 
    probability 4605075304317034516
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v472 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: v476 
=== Usages ===
=== Predecessor ===
v473 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v476  <|@  <|@
f <@*|@fixed>@ <|@
tid v476 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v477 
=== Predecessor ===
v472 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4590797829349172127
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v471 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:150) [bci: 220]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: a495 
=== Usages ===
=== Predecessor ===
v473 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a495  <|@  <|@
f <@~|@floating>@ <|@
tid v721 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j469 
index: - 
=== Succesors ===
=== Usages ===
a495 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j469 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a495 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v721 
lastLocationAccess: - 
=== Succesors ===
next: v480 
=== Usages ===
a496 v502 
=== Predecessor ===
v471 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v721 lastLocationAccess: - #next: v480  <|@  <|@
f <@~|@floating>@ <|@
tid v502 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 296]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a495 
=== Succesors ===
=== Usages ===
v480 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a495  <|@  <|@
f <@*|@fixed>@ <|@
tid v480 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 307]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v502 
=== Succesors ===
trueSuccessor: v479 
falseSuccessor: v475 
=== Usages ===
=== Predecessor ===
a495 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v502 #trueSuccessor: v479 #falseSuccessor: v475  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B47" 
    xhandlers
    flags 
    probability 4576060348729859198
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v479 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: v478 
=== Usages ===
=== Predecessor ===
v480 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v478  <|@  <|@
f <@*|@fixed>@ <|@
tid v478 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v477 
=== Predecessor ===
v479 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4590184488480571407
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v475 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:163) [bci: 310]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: j497 
=== Usages ===
=== Predecessor ===
v480 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j497  <|@  <|@
f <@~|@floating>@ <|@
tid v722 <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: j468 
index: - 
=== Succesors ===
=== Usages ===
j497 v500 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j468 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j497 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:166) [bci: 327]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v722 
lastLocationAccess: - 
=== Succesors ===
next: v485 
=== Usages ===
v482 j493 v724 
=== Predecessor ===
v475 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v722 lastLocationAccess: - #next: v485  <|@  <|@
f <@~|@floating>@ <|@
tid v482 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 341]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j497 
y: j243 
=== Succesors ===
=== Usages ===
v485 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j497 y: j243  <|@  <|@
f <@~|@floating>@ <|@
tid a496 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a495 
=== Succesors ===
=== Usages ===
j487 v490 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a495  <|@  <|@
f <@*|@fixed>@ <|@
tid v485 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 347]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v482 
=== Succesors ===
trueSuccessor: v484 
falseSuccessor: v483 
=== Usages ===
=== Predecessor ===
j497 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v482 #trueSuccessor: v484 #falseSuccessor: v483  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4575482130661533308
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v484 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 410]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: v490 
=== Usages ===
=== Predecessor ===
v485 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v490  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v490 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_pre(Object)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-SATB-Queue-Index, GC-SATB-Queue-Buffer, GC-SATB-Queue-Log], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_pre
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(ForeignCallDescriptor, Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(G1WriteBarrierSnippets.java:409) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 413]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: a496 
=== Succesors ===
next: v491 
=== Usages ===
=== Predecessor ===
v484 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: a496 #next: v491  <|@  <|@
f <@*|@fixed>@ <|@
tid v491 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v477 
=== Predecessor ===
v490 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4589632481698830759
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v483 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 350]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: j498 
=== Usages ===
=== Predecessor ===
v485 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j498  <|@  <|@
f <@~|@floating>@ <|@
tid v723 <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: j468 
index: - 
=== Succesors ===
=== Usages ===
j498 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j468 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j498 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 359]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v723 
lastLocationAccess: - 
=== Succesors ===
next: j487 
=== Usages ===
v724 
=== Predecessor ===
v483 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v723 lastLocationAccess: - #next: j487  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j487 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 384]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a496 
=== Succesors ===
next: v499 
=== Usages ===
v499 
=== Predecessor ===
j498 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a496 #next: v499  <|@  <|@
f <@~|@floating>@ <|@
tid v724 <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j498 
index: j497 
=== Succesors ===
=== Usages ===
v499 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j498 index: j497  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v499 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Log
location: GC-SATB-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 390]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v724 
lastLocationAccess: - 
value: j487 
stateAfter: - 
=== Succesors ===
next: v500 
=== Usages ===
=== Predecessor ===
j487 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v724 lastLocationAccess: - value: j487 stateAfter: - #next: v500  <|@  <|@
f <@~|@floating>@ <|@
tid j493 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: i64
=== Inputs ===
x: j497 
y: j295 
=== Succesors ===
=== Usages ===
v500 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j497 y: j295  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v500 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Index
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:173) [bci: 404]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v722 
lastLocationAccess: - 
value: j493 
stateAfter: - 
=== Succesors ===
next: v489 
=== Usages ===
=== Predecessor ===
v499 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v722 lastLocationAccess: - value: j493 stateAfter: - #next: v489  <|@  <|@
f <@*|@fixed>@ <|@
tid v489 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v477 
=== Predecessor ===
v500 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B41" "B43" "B46" "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4605841980402785416
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v477 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v476 v478 v489 v491 
=== Succesors ===
next: a685 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v476 v478 v489 v491 #next: a685  <|@  <|@
f <@~|@floating>@ <|@
tid a132 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 60]
op: Uncompress
stamp: a java.util.HashMap$Node[]
=== Inputs ===
value: a679 
=== Succesors ===
=== Usages ===
v701 ?68 v700 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a679  <|@  <|@
f <@~|@floating>@ <|@
tid v700 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a132 
index: i684 
=== Succesors ===
=== Usages ===
a685 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a132 index: i684  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a685 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.HashMap$Node
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 90]
stamp: n java.util.HashMap$Node
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v700 
lastLocationAccess: - 
=== Succesors ===
next: v154 
=== Usages ===
a152 v172 v154 
=== Predecessor ===
v477 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v700 lastLocationAccess: - #next: v154  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v154 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: HashMap$HashIterator.next
location: HashMap$HashIterator.next
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v691 
lastLocationAccess: - 
value: a685 
stateAfter: - 
=== Succesors ===
next: v562 
=== Usages ===
=== Predecessor ===
a685 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v691 lastLocationAccess: - value: a685 stateAfter: - #next: v562  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v562 <|@
d <@d|@=== Debug Properties ===
locations: [GC-Card, GC-Card-Queue-Log, GC-Card-Queue-Index, GC-Card-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: j508 
=== Usages ===
=== Predecessor ===
v154 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j508  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j508 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:184) [bci: 1] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: a509 
=== Usages ===
v725 v726 
=== Predecessor ===
v562 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: a509  <|@  <|@
f <@~|@floating>@ <|@
tid a152 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 90]
op: Uncompress
stamp: a java.util.HashMap$Node
=== Inputs ===
value: a685 
=== Succesors ===
=== Usages ===
?68 a509 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a685  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a509 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.FixedValueAnchorNode.getObject(Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:185) [bci: 7] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: a java.util.HashMap$Node
=== Inputs ===
object: a152 
=== Succesors ===
next: j510 
=== Usages ===
j511 
=== Predecessor ===
j508 >@ <|@
instruction <@FixedValueAnchor|@jdk.graal.compiler.nodes.extended.FixedValueAnchorNode>@ object: a152 #next: j510  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j510 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:197) [bci: 56] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: j511 
=== Usages ===
j512 j523 
=== Predecessor ===
a509 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a1 #next: j511  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j511 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:208) [bci: 150] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a509 
=== Succesors ===
next: v515 
=== Usages ===
j512 v516 
=== Predecessor ===
j510 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a509 #next: v515  <|@  <|@
f <@~|@floating>@ <|@
tid j512 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:212) [bci: 165] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: i64
=== Inputs ===
x: j510 
y: j511 
=== Succesors ===
=== Usages ===
v544 
=== Predecessor ===
- >@ <|@
instruction <@^|@jdk.graal.compiler.nodes.calc.XorNode>@ x: j510 y: j511  <|@  <|@
f <@~|@floating>@ <|@
tid v544 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:215) [bci: 193] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
x: j512 
y: j350 
=== Succesors ===
=== Usages ===
v515 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@jdk.graal.compiler.nodes.calc.IntegerTestNode>@ x: j512 y: j350  <|@  <|@
f <@*|@fixed>@ <|@
tid v515 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:215) [bci: 201] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v544 
=== Succesors ===
trueSuccessor: v514 
falseSuccessor: v513 
=== Usages ===
=== Predecessor ===
j511 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v544 #trueSuccessor: v514 #falseSuccessor: v513  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B58" 
    xhandlers
    flags 
    probability 4590797829349172127
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v514 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: v518 
=== Usages ===
=== Predecessor ===
v515 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v518  <|@  <|@
f <@*|@fixed>@ <|@
tid v518 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v519 
=== Predecessor ===
v514 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4605075304317034516
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v513 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:216) [bci: 204] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: v522 
=== Usages ===
=== Predecessor ===
v515 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v522  <|@  <|@
f <@~|@floating>@ <|@
tid v516 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:218) [bci: 218] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j511 
y: j243 
=== Succesors ===
=== Usages ===
v522 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j511 y: j243  <|@  <|@
f <@*|@fixed>@ <|@
tid v522 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:218) [bci: 226] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v516 
=== Succesors ===
trueSuccessor: v521 
falseSuccessor: v517 
=== Usages ===
=== Predecessor ===
v513 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v516 #trueSuccessor: v521 #falseSuccessor: v517  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B58" 
    xhandlers
    flags 
    probability 4590184488480571407
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v521 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: v520 
=== Usages ===
=== Predecessor ===
v522 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v520  <|@  <|@
f <@*|@fixed>@ <|@
tid v520 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v519 
=== Predecessor ===
v521 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4604385295839858706
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v517 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 229] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: i548 
=== Usages ===
=== Predecessor ===
v522 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i548  <|@  <|@
f <@~|@floating>@ <|@
tid j523 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.cardTableAddress(HotSpotG1WriteBarrierSnippets.java:131) [bci: 23]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 232] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: i64 [0 - 36028797018963967] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j510 
y: i328 
=== Succesors ===
=== Usages ===
j545 v728 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j510 y: i328  <|@  <|@
f <@~|@floating>@ <|@
tid v728 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j523 
index: j327 
=== Succesors ===
=== Usages ===
i548 i549 v550 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j523 index: j327  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i548 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:223) [bci: 243] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v728 
lastLocationAccess: - 
=== Succesors ===
next: v527 
=== Usages ===
v555 
=== Predecessor ===
v517 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v728 lastLocationAccess: - #next: v527  <|@  <|@
f <@~|@floating>@ <|@
tid v555 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:227) [bci: 265] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i548 
y: i364 
=== Succesors ===
=== Usages ===
v527 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i548 y: i364  <|@  <|@
f <@*|@fixed>@ <|@
tid v527 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:227) [bci: 276] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v555 
=== Succesors ===
trueSuccessor: v526 
falseSuccessor: v524 
=== Usages ===
=== Predecessor ===
i548 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v555 #trueSuccessor: v526 #falseSuccessor: v524  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B58" 
    xhandlers
    flags 
    probability 4603764288210400477
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v526 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: v525 
=== Usages ===
=== Predecessor ===
v527 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v525  <|@  <|@
f <@*|@fixed>@ <|@
tid v525 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v519 
=== Predecessor ===
v526 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4589632481698830759
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v524 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:228) [bci: 279] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: v528 
=== Usages ===
=== Predecessor ===
v527 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v528  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v528 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_LOAD
fence: STORE_LOAD
location: GC-Card
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.MembarNode.memoryBarrier(MembarNode$FenceKind, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:228) [bci: 285] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: i549 
=== Usages ===
=== Predecessor ===
v524 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: i549  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i549 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:229) [bci: 294] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v728 
lastLocationAccess: - 
=== Succesors ===
next: v532 
=== Usages ===
v556 
=== Predecessor ===
v528 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v728 lastLocationAccess: - #next: v532  <|@  <|@
f <@~|@floating>@ <|@
tid v556 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:230) [bci: 308] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i549 
y: i304 
=== Succesors ===
=== Usages ===
v532 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i549 y: i304  <|@  <|@
f <@*|@fixed>@ <|@
tid v532 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:230) [bci: 319] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v556 
=== Succesors ===
trueSuccessor: v531 
falseSuccessor: v529 
=== Usages ===
=== Predecessor ===
i549 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v556 #trueSuccessor: v531 #falseSuccessor: v529  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B58" 
    xhandlers
    flags 
    probability 4589103330899992928
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v531 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: v530 
=== Usages ===
=== Predecessor ===
v532 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v530  <|@  <|@
f <@*|@fixed>@ <|@
tid v530 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v519 
=== Predecessor ===
v531 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4574598919810748272
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v529 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:231) [bci: 322] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: v550 
=== Usages ===
=== Predecessor ===
v532 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v550  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v550 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:232) [bci: 358] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v728 
lastLocationAccess: - 
value: i304 
stateAfter: - 
=== Succesors ===
next: j551 
=== Usages ===
=== Predecessor ===
v529 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v728 lastLocationAccess: - value: i304 stateAfter: - #next: j551  <|@  <|@
f <@~|@floating>@ <|@
tid v725 <|@
d <@d|@=== Debug Properties ===
displacement: 72
stamp: void*
stride: S1
=== Inputs ===
base: j508 
index: - 
=== Succesors ===
=== Usages ===
j551 v554 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j508 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j551 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:237) [bci: 378] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v725 
lastLocationAccess: - 
=== Succesors ===
next: v537 
=== Usages ===
v534 j547 v727 
=== Predecessor ===
v550 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v725 lastLocationAccess: - #next: v537  <|@  <|@
f <@~|@floating>@ <|@
tid v534 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:238) [bci: 392] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j551 
y: j243 
=== Succesors ===
=== Usages ===
v537 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j551 y: j243  <|@  <|@
f <@~|@floating>@ <|@
tid j545 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.cardTableAddress(HotSpotG1WriteBarrierSnippets.java:131) [bci: 28]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 232] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: i64 [140438306553856 - 36169235325517823] bits:00000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j523 
y: j327 
=== Succesors ===
=== Usages ===
v541 v553 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j523 y: j327  <|@  <|@
f <@*|@fixed>@ <|@
tid v537 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:238) [bci: 398] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v534 
=== Succesors ===
trueSuccessor: v536 
falseSuccessor: v535 
=== Usages ===
=== Predecessor ===
j551 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v534 #trueSuccessor: v536 #falseSuccessor: v535  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4559498341397223717
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v536 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:247) [bci: 458] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: v541 
=== Usages ===
=== Predecessor ===
v537 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v541  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v541 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_post(Word)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-Card-Queue-Index, GC-Card-Queue-Buffer, GC-Card-Queue-Log, GC-Card], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_post
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostBarrierStub(ForeignCallDescriptor, Word) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostBarrierStub(G1WriteBarrierSnippets.java:413) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:247) [bci: 461] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: j545 
=== Succesors ===
next: v542 
=== Usages ===
=== Predecessor ===
v536 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: j545 #next: v542  <|@  <|@
f <@*|@fixed>@ <|@
tid v542 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v519 
=== Predecessor ===
v541 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4573804030045041739
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v535 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:239) [bci: 401] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: j552 
=== Usages ===
=== Predecessor ===
v537 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j552  <|@  <|@
f <@~|@floating>@ <|@
tid v726 <|@
d <@d|@=== Debug Properties ===
displacement: 88
stamp: void*
stride: S1
=== Inputs ===
base: j508 
index: - 
=== Succesors ===
=== Usages ===
j552 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j508 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j552 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:239) [bci: 410] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v726 
lastLocationAccess: - 
=== Succesors ===
next: v553 
=== Usages ===
v727 
=== Predecessor ===
v535 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v726 lastLocationAccess: - #next: v553  <|@  <|@
f <@~|@floating>@ <|@
tid v727 <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j552 
index: j551 
=== Succesors ===
=== Usages ===
v553 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j552 index: j551  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v553 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card-Queue-Log
location: GC-Card-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:244) [bci: 438] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v727 
lastLocationAccess: - 
value: j545 
stateAfter: - 
=== Succesors ===
next: v554 
=== Usages ===
=== Predecessor ===
j552 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v727 lastLocationAccess: - value: j545 stateAfter: - #next: v554  <|@  <|@
f <@~|@floating>@ <|@
tid j547 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:240) [bci: 424] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: i64
=== Inputs ===
x: j551 
y: j295 
=== Succesors ===
=== Usages ===
v554 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j551 y: j295  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v554 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card-Queue-Index
location: GC-Card-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:245) [bci: 452] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v725 
lastLocationAccess: - 
value: j547 
stateAfter: - 
=== Succesors ===
next: v540 
=== Usages ===
=== Predecessor ===
v553 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v725 lastLocationAccess: - value: j547 stateAfter: - #next: v540  <|@  <|@
f <@*|@fixed>@ <|@
tid v540 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v519 
=== Predecessor ===
v554 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B48" "B50" "B52" "B54" "B57" "B56" 
    successors "B59" "B91" 
    xhandlers
    flags 
    probability 4605841980402785416
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v519 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v518 v520 v525 v530 v540 v542 
=== Succesors ===
next: v73 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v518 v520 v525 v530 v540 v542 #next: v73  <|@  <|@
f <@~|@floating>@ <|@
tid v172 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 95]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a685 
=== Succesors ===
=== Usages ===
v73 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a685  <|@  <|@
f <@*|@fixed>@ <|@
tid v73 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 95]
profileData: PROFILED designatedSuccessorProbability: 0.8739340370331193
stamp: void
=== Inputs ===
condition: v172 
=== Succesors ===
trueSuccessor: v72 
falseSuccessor: v70 
=== Usages ===
=== Predecessor ===
v519 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v172 #trueSuccessor: v72 #falseSuccessor: v70  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B66" 
    xhandlers
    flags 
    probability 4604875462812446756
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v72 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 68]
stamp: void
=== Inputs ===
=== Succesors ===
next: v668 
=== Usages ===
=== Predecessor ===
v73 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v668  <|@  <|@
f <@~|@floating>@ <|@
tid v207 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 90]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@4dc6bd49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i63 
y: i683 
=== Succesors ===
=== Usages ===
v668 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i63 y: i683  <|@  <|@
f <@*|@fixed>@ <|@
tid v668 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 90]
profileData: INJECTED designatedSuccessorProbability: 0.5
stamp: void
=== Inputs ===
condition: v207 
=== Succesors ===
trueSuccessor: v667 
falseSuccessor: v664 
=== Usages ===
=== Predecessor ===
v72 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v207 #trueSuccessor: v667 #falseSuccessor: v664  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B64" 
    xhandlers
    flags 
    probability 4600371863185076260
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v667 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: v676 
=== Usages ===
=== Predecessor ===
v668 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v676  <|@  <|@
f <@~|@floating>@ <|@
tid i196 <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
x: i683 
y: i63 
=== Succesors ===
=== Usages ===
j199 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i683 y: i63  <|@  <|@
f <@~|@floating>@ <|@
tid j199 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i196 
=== Succesors ===
=== Usages ===
j238 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i196  <|@  <|@
f <@~|@floating>@ <|@
tid j687 <|@
d <@d|@=== Debug Properties ===
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i63 
=== Succesors ===
=== Usages ===
j238 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i63  <|@  <|@
f <@~|@floating>@ <|@
tid j238 <|@
d <@d|@=== Debug Properties ===
stamp: i64 [-2147483648 - 6442450942]
=== Inputs ===
x: j199 
y: j687 
=== Succesors ===
=== Usages ===
j239 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j199 y: j687  <|@  <|@
f <@~|@floating>@ <|@
tid j200 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1]
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j239 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j239 <|@
d <@d|@=== Debug Properties ===
stamp: i64 [-2147483649 - 6442450941]
=== Inputs ===
x: j238 
y: j200 
=== Succesors ===
=== Usages ===
v203 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j238 y: j200  <|@  <|@
f <@~|@floating>@ <|@
tid j195 <|@
d <@d|@=== Debug Properties ===
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i683 
=== Succesors ===
=== Usages ===
v203 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i683  <|@  <|@
f <@~|@floating>@ <|@
tid v203 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@40aab068
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j239 
y: j195 
=== Succesors ===
=== Usages ===
v676 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j239 y: j195  <|@  <|@
f <@*|@fixed>@ <|@
tid v676 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 90]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v203 
=== Succesors ===
trueSuccessor: v675 
falseSuccessor: v672 
=== Usages ===
=== Predecessor ===
v667 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v203 #trueSuccessor: v675 #falseSuccessor: v672  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4600371863185076260
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v675 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: v674 
=== Usages ===
=== Predecessor ===
v676 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v674  <|@  <|@
f <@~|@floating>@ <|@
tid v204 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@40aab068
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i63 
y: i683 
=== Succesors ===
=== Usages ===
v674 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i63 y: i683  <|@  <|@
f <@*|@fixed>@ <|@
tid v674 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 90]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v204 
=== Succesors ===
trueSuccessor: v665 
falseSuccessor: v673 
=== Usages ===
=== Predecessor ===
v675 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v204 #trueSuccessor: v665 #falseSuccessor: v673  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B67" 
    xhandlers
    flags 
    probability 4600371863185076260
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v665 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: v663 
=== Usages ===
=== Predecessor ===
v674 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v663  <|@  <|@
f <@*|@fixed>@ <|@
tid v663 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v661 
=== Predecessor ===
v665 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v673 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: v671 
=== Usages ===
=== Predecessor ===
v674 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v671  <|@  <|@
f <@*|@fixed>@ <|@
tid v671 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v669 
=== Predecessor ===
v673 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v672 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: v670 
=== Usages ===
=== Predecessor ===
v676 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v670  <|@  <|@
f <@*|@fixed>@ <|@
tid v670 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v669 
=== Predecessor ===
v672 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" "B63" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v669 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 90]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v670 v671 
=== Succesors ===
next: v227 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v670 v671 #next: v227  <|@  <|@
tid ?68 <|@
d <@d|@=== Debug Properties ===
bci: 95
bytecode: ifnull
code: ResolvedJavaMethodBytecode<HashMap$HashIterator.nextNode()>
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
sourceFile: HashMap.java
sourceLine: 1609
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a152 a1 a132 a104 
=== Succesors ===
=== Usages ===
v227 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a152 a1 a132 a104  <|@  <|@
f <@*|@fixed>@ <|@
tid v227 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 158
mayConvertToGuard: true
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 90]
reason: BoundsCheckException
speculation: {0x0000000000000798[index: 60, len: 24, hash: 0x57b7955a]: GuardMovement@2[HotSpotMethod<HashMap$HashIterator.nextNode()>, 68, BoundsCheckException]}
stamp: void
=== Inputs ===
stateBefore: ?68 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v669 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?68  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B67" 
    xhandlers
    flags 
    probability 4600371863185076260
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v664 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: v662 
=== Usages ===
=== Predecessor ===
v668 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v662  <|@  <|@
f <@*|@fixed>@ <|@
tid v662 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v661 
=== Predecessor ===
v664 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" "B62" 
    successors "B68" 
    xhandlers
    flags 
    probability 4604875462812446756
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v661 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 90]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v662 v663 
=== Succesors ===
next: v26 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v662 v663 #next: v26  <|@  <|@
f <@*|@fixed>@ <|@
tid v26 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 68]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v27 
=== Predecessor ===
v661 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" "B88" 
    successors "B69" "B90" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4617565855081504432
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i87 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 68]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v27 
values: i63 i41 
=== Succesors ===
=== Usages ===
v31 i41 v701 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v27 values: i63 i41  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v27 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: -1
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 68]
osrLoop: false
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v26 
=== Succesors ===
next: v38 
=== Usages ===
v35 v49 v51 i87 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v26 #next: v38  <|@  <|@
f <@~|@floating>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 74]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@4dc6bd49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i87 
y: i683 
=== Succesors ===
=== Usages ===
v38 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i87 y: i683  <|@  <|@
f <@*|@fixed>@ <|@
tid v38 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 74]
profileData: PROFILED designatedSuccessorProbability: 0.9812627296505405
stamp: void
=== Inputs ===
condition: v31 
=== Succesors ===
trueSuccessor: v37 
falseSuccessor: v35 
=== Usages ===
=== Predecessor ===
v27 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v31 #trueSuccessor: v37 #falseSuccessor: v35  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B70" "B71" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617455682992505589
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 77]
stamp: void
=== Inputs ===
=== Succesors ===
next: v155 
=== Usages ===
=== Predecessor ===
v38 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v155  <|@  <|@
f <@~|@floating>@ <|@
tid i41 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 86]
stamp: i32
=== Inputs ===
x: i87 
y: i40 
=== Succesors ===
=== Usages ===
v155 i87 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i87 y: i40  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v155 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: HashMap$HashIterator.index
location: HashMap$HashIterator.index
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 87]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v699 
lastLocationAccess: - 
value: i41 
stateAfter: - 
=== Succesors ===
next: v602 
=== Usages ===
=== Predecessor ===
v37 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v699 lastLocationAccess: - value: i41 stateAfter: - #next: v602  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v602 <|@
d <@d|@=== Debug Properties ===
locations: [GC-SATB-Queue-Log, GC-SATB-Marking-Active, GC-SATB-Queue-Index, GC-SATB-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: j563 
=== Usages ===
=== Predecessor ===
v155 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j563  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j563 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:127) [bci: 10]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j564 
=== Usages ===
v729 v731 v732 
=== Predecessor ===
v602 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j564  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j564 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:129) [bci: 21]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v691 
=== Succesors ===
next: i589 
=== Usages ===
v730 
=== Predecessor ===
j563 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: v691 #next: i589  <|@  <|@
f <@~|@floating>@ <|@
tid v729 <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: j563 
index: - 
=== Succesors ===
=== Usages ===
i589 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j563 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i589 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Marking-Active
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:130) [bci: 35]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v729 
lastLocationAccess: - 
=== Succesors ===
next: v568 
=== Usages ===
v596 
=== Predecessor ===
j564 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v729 lastLocationAccess: - #next: v568  <|@  <|@
f <@~|@floating>@ <|@
tid v596 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i589 
y: i304 
=== Succesors ===
=== Usages ===
v568 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i589 y: i304  <|@  <|@
f <@*|@fixed>@ <|@
tid v568 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 217]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v596 
=== Succesors ===
trueSuccessor: v567 
falseSuccessor: v566 
=== Usages ===
=== Predecessor ===
i589 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v596 #trueSuccessor: v567 #falseSuccessor: v566  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4616878716535993821
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v567 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: v571 
=== Usages ===
=== Predecessor ===
v568 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v571  <|@  <|@
f <@*|@fixed>@ <|@
tid v571 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v572 
=== Predecessor ===
v567 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" "B73" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602790951197370563
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v566 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:150) [bci: 220]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: a590 
=== Usages ===
=== Predecessor ===
v568 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a590  <|@  <|@
f <@~|@floating>@ <|@
tid v730 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j564 
index: - 
=== Succesors ===
=== Usages ===
a590 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j564 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a590 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v730 
lastLocationAccess: - 
=== Succesors ===
next: v575 
=== Usages ===
a591 v597 
=== Predecessor ===
v566 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v730 lastLocationAccess: - #next: v575  <|@  <|@
f <@~|@floating>@ <|@
tid v597 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 296]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a590 
=== Succesors ===
=== Usages ===
v575 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a590  <|@  <|@
f <@*|@fixed>@ <|@
tid v575 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 307]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v597 
=== Succesors ===
trueSuccessor: v574 
falseSuccessor: v570 
=== Usages ===
=== Predecessor ===
a590 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v597 #trueSuccessor: v574 #falseSuccessor: v570  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587545991679145066
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v574 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: v573 
=== Usages ===
=== Predecessor ===
v575 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v573  <|@  <|@
f <@*|@fixed>@ <|@
tid v573 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v572 
=== Predecessor ===
v574 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" "B75" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601979936891675385
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v570 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:163) [bci: 310]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: j592 
=== Usages ===
=== Predecessor ===
v575 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j592  <|@  <|@
f <@~|@floating>@ <|@
tid v731 <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: j563 
index: - 
=== Succesors ===
=== Usages ===
j592 v595 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j563 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j592 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:166) [bci: 327]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v731 
lastLocationAccess: - 
=== Succesors ===
next: v580 
=== Usages ===
v577 j588 v733 
=== Predecessor ===
v570 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v731 lastLocationAccess: - #next: v580  <|@  <|@
f <@~|@floating>@ <|@
tid v577 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 341]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j592 
y: j243 
=== Succesors ===
=== Usages ===
v580 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j592 y: j243  <|@  <|@
f <@~|@floating>@ <|@
tid a591 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a590 
=== Succesors ===
=== Usages ===
j582 v585 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a590  <|@  <|@
f <@*|@fixed>@ <|@
tid v580 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 347]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v577 
=== Succesors ===
trueSuccessor: v579 
falseSuccessor: v578 
=== Usages ===
=== Predecessor ===
j592 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v577 #trueSuccessor: v579 #falseSuccessor: v578  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586807474614810003
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v579 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 410]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: v585 
=== Usages ===
=== Predecessor ===
v580 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v585  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v585 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_pre(Object)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-SATB-Queue-Index, GC-SATB-Queue-Buffer, GC-SATB-Queue-Log], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_pre
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(ForeignCallDescriptor, Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(G1WriteBarrierSnippets.java:409) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 413]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: a591 
=== Succesors ===
next: v586 
=== Usages ===
=== Predecessor ===
v579 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: a591 #next: v586  <|@  <|@
f <@*|@fixed>@ <|@
tid v586 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v572 
=== Predecessor ===
v585 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601149105194298439
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v578 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 350]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: j593 
=== Usages ===
=== Predecessor ===
v580 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j593  <|@  <|@
f <@~|@floating>@ <|@
tid v732 <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: j563 
index: - 
=== Succesors ===
=== Usages ===
j593 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j563 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j593 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 359]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v732 
lastLocationAccess: - 
=== Succesors ===
next: j582 
=== Usages ===
v733 
=== Predecessor ===
v578 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v732 lastLocationAccess: - #next: j582  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j582 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 384]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a591 
=== Succesors ===
next: v594 
=== Usages ===
v594 
=== Predecessor ===
j593 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a591 #next: v594  <|@  <|@
f <@~|@floating>@ <|@
tid v733 <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j593 
index: j592 
=== Succesors ===
=== Usages ===
v594 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j593 index: j592  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v594 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Log
location: GC-SATB-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 390]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v733 
lastLocationAccess: - 
value: j582 
stateAfter: - 
=== Succesors ===
next: v595 
=== Usages ===
=== Predecessor ===
j582 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v733 lastLocationAccess: - value: j582 stateAfter: - #next: v595  <|@  <|@
f <@~|@floating>@ <|@
tid j588 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: i64
=== Inputs ===
x: j592 
y: j295 
=== Succesors ===
=== Usages ===
v595 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j592 y: j295  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v595 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Index
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:173) [bci: 404]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v731 
lastLocationAccess: - 
value: j588 
stateAfter: - 
=== Succesors ===
next: v584 
=== Usages ===
=== Predecessor ===
v594 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v731 lastLocationAccess: - value: j588 stateAfter: - #next: v584  <|@  <|@
f <@*|@fixed>@ <|@
tid v584 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v572 
=== Predecessor ===
v595 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B70" "B72" "B75" "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617455682992505589
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v572 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v571 v573 v584 v586 
=== Succesors ===
next: a686 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v571 v573 v584 v586 #next: a686  <|@  <|@
f <@~|@floating>@ <|@
tid v701 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a132 
index: i87 
=== Succesors ===
=== Usages ===
a686 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a132 index: i87  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a686 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.HashMap$Node
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 90]
stamp: n java.util.HashMap$Node
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v701 
lastLocationAccess: - 
=== Succesors ===
next: v167 
=== Usages ===
v167 v174 a603 
=== Predecessor ===
v572 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v701 lastLocationAccess: - #next: v167  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v167 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: HashMap$HashIterator.next
location: HashMap$HashIterator.next
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v691 
lastLocationAccess: - 
value: a686 
stateAfter: - 
=== Succesors ===
next: v658 
=== Usages ===
=== Predecessor ===
a686 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v691 lastLocationAccess: - value: a686 stateAfter: - #next: v658  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v658 <|@
d <@d|@=== Debug Properties ===
locations: [GC-Card, GC-Card-Queue-Log, GC-Card-Queue-Index, GC-Card-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: j604 
=== Usages ===
=== Predecessor ===
v167 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j604  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j604 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:184) [bci: 1] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: a605 
=== Usages ===
v734 v735 
=== Predecessor ===
v658 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: a605  <|@  <|@
f <@~|@floating>@ <|@
tid a603 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
op: Uncompress
stamp: a java.util.HashMap$Node
=== Inputs ===
value: a686 
=== Succesors ===
=== Usages ===
a605 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a686  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a605 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.FixedValueAnchorNode.getObject(Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:185) [bci: 7] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: a java.util.HashMap$Node
=== Inputs ===
object: a603 
=== Succesors ===
next: j606 
=== Usages ===
j607 
=== Predecessor ===
j604 >@ <|@
instruction <@FixedValueAnchor|@jdk.graal.compiler.nodes.extended.FixedValueAnchorNode>@ object: a603 #next: j606  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j606 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:197) [bci: 56] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: j607 
=== Usages ===
j608 j619 
=== Predecessor ===
a605 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a1 #next: j607  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j607 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:208) [bci: 150] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a605 
=== Succesors ===
next: v611 
=== Usages ===
j608 v612 
=== Predecessor ===
j606 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a605 #next: v611  <|@  <|@
f <@~|@floating>@ <|@
tid j608 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:212) [bci: 165] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: i64
=== Inputs ===
x: j606 
y: j607 
=== Succesors ===
=== Usages ===
v640 
=== Predecessor ===
- >@ <|@
instruction <@^|@jdk.graal.compiler.nodes.calc.XorNode>@ x: j606 y: j607  <|@  <|@
f <@~|@floating>@ <|@
tid v640 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:215) [bci: 193] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
x: j608 
y: j350 
=== Succesors ===
=== Usages ===
v611 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@jdk.graal.compiler.nodes.calc.IntegerTestNode>@ x: j608 y: j350  <|@  <|@
f <@*|@fixed>@ <|@
tid v611 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:215) [bci: 201] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v640 
=== Succesors ===
trueSuccessor: v610 
falseSuccessor: v609 
=== Usages ===
=== Predecessor ===
j607 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v640 #trueSuccessor: v610 #falseSuccessor: v609  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602790951197370563
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v610 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: v614 
=== Usages ===
=== Predecessor ===
v611 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v614  <|@  <|@
f <@*|@fixed>@ <|@
tid v614 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v615 
=== Predecessor ===
v610 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4616878716535993821
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v609 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:216) [bci: 204] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: v618 
=== Usages ===
=== Predecessor ===
v611 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v618  <|@  <|@
f <@~|@floating>@ <|@
tid v612 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:218) [bci: 218] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j607 
y: j243 
=== Succesors ===
=== Usages ===
v618 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j607 y: j243  <|@  <|@
f <@*|@fixed>@ <|@
tid v618 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:218) [bci: 226] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v612 
=== Succesors ===
trueSuccessor: v617 
falseSuccessor: v613 
=== Usages ===
=== Predecessor ===
v609 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v612 #trueSuccessor: v617 #falseSuccessor: v613  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601979936891675385
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v617 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: v616 
=== Usages ===
=== Predecessor ===
v618 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v616  <|@  <|@
f <@*|@fixed>@ <|@
tid v616 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v615 
=== Predecessor ===
v617 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4616359446725133229
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v613 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 229] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: i644 
=== Usages ===
=== Predecessor ===
v618 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i644  <|@  <|@
f <@~|@floating>@ <|@
tid j619 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.cardTableAddress(HotSpotG1WriteBarrierSnippets.java:131) [bci: 23]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 232] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: i64 [0 - 36028797018963967] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j606 
y: i328 
=== Succesors ===
=== Usages ===
j641 v737 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j606 y: i328  <|@  <|@
f <@~|@floating>@ <|@
tid v737 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j619 
index: j327 
=== Succesors ===
=== Usages ===
i644 i645 v646 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j619 index: j327  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i644 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:223) [bci: 243] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v737 
lastLocationAccess: - 
=== Succesors ===
next: v623 
=== Usages ===
v651 
=== Predecessor ===
v613 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v737 lastLocationAccess: - #next: v623  <|@  <|@
f <@~|@floating>@ <|@
tid v651 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:227) [bci: 265] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i644 
y: i364 
=== Succesors ===
=== Usages ===
v623 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i644 y: i364  <|@  <|@
f <@*|@fixed>@ <|@
tid v623 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:227) [bci: 276] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v651 
=== Succesors ===
trueSuccessor: v622 
falseSuccessor: v620 
=== Usages ===
=== Predecessor ===
i644 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v651 #trueSuccessor: v622 #falseSuccessor: v620  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4615594589735958993
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v622 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: v621 
=== Usages ===
=== Predecessor ===
v623 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v621  <|@  <|@
f <@*|@fixed>@ <|@
tid v621 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v615 
=== Predecessor ===
v622 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" "B84" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601149105194298438
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v620 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:228) [bci: 279] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: v624 
=== Usages ===
=== Predecessor ===
v623 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v624  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v624 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_LOAD
fence: STORE_LOAD
location: GC-Card
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.MembarNode.memoryBarrier(MembarNode$FenceKind, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:228) [bci: 285] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: i645 
=== Usages ===
=== Predecessor ===
v620 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: i645  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i645 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:229) [bci: 294] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v737 
lastLocationAccess: - 
=== Succesors ===
next: v628 
=== Usages ===
v652 
=== Predecessor ===
v624 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v737 lastLocationAccess: - #next: v628  <|@  <|@
f <@~|@floating>@ <|@
tid v652 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:230) [bci: 308] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i645 
y: i304 
=== Succesors ===
=== Usages ===
v628 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i645 y: i304  <|@  <|@
f <@*|@fixed>@ <|@
tid v628 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:230) [bci: 319] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v652 
=== Succesors ===
trueSuccessor: v627 
falseSuccessor: v625 
=== Usages ===
=== Predecessor ===
i645 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v652 #trueSuccessor: v627 #falseSuccessor: v625  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4600401356666659186
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v627 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: v626 
=== Usages ===
=== Predecessor ===
v628 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v626  <|@  <|@
f <@*|@fixed>@ <|@
tid v626 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v615 
=== Predecessor ===
v627 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" "B86" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586142809256908445
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v625 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:231) [bci: 322] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: v646 
=== Usages ===
=== Predecessor ===
v628 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v646  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v646 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:232) [bci: 358] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v737 
lastLocationAccess: - 
value: i304 
stateAfter: - 
=== Succesors ===
next: j647 
=== Usages ===
=== Predecessor ===
v625 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v737 lastLocationAccess: - value: i304 stateAfter: - #next: j647  <|@  <|@
f <@~|@floating>@ <|@
tid v734 <|@
d <@d|@=== Debug Properties ===
displacement: 72
stamp: void*
stride: S1
=== Inputs ===
base: j604 
index: - 
=== Succesors ===
=== Usages ===
j647 v650 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j604 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j647 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:237) [bci: 378] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v734 
lastLocationAccess: - 
=== Succesors ===
next: v633 
=== Usages ===
v630 j643 v736 
=== Predecessor ===
v646 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v734 lastLocationAccess: - #next: v633  <|@  <|@
f <@~|@floating>@ <|@
tid v630 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:238) [bci: 392] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j647 
y: j243 
=== Succesors ===
=== Usages ===
v633 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j647 y: j243  <|@  <|@
f <@~|@floating>@ <|@
tid j641 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.cardTableAddress(HotSpotG1WriteBarrierSnippets.java:131) [bci: 28]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 232] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: i64 [140438306553856 - 36169235325517823] bits:00000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j619 
y: j327 
=== Succesors ===
=== Usages ===
v637 v649 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j619 y: j327  <|@  <|@
f <@*|@fixed>@ <|@
tid v633 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:238) [bci: 398] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v630 
=== Succesors ===
trueSuccessor: v632 
falseSuccessor: v631 
=== Usages ===
=== Predecessor ===
j647 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v630 #trueSuccessor: v632 #falseSuccessor: v631  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4571435612730574153
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v632 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:247) [bci: 458] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: v637 
=== Usages ===
=== Predecessor ===
v633 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v637  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v637 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_post(Word)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-Card-Queue-Index, GC-Card-Queue-Buffer, GC-Card-Queue-Log, GC-Card], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_post
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostBarrierStub(ForeignCallDescriptor, Word) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostBarrierStub(G1WriteBarrierSnippets.java:413) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:247) [bci: 461] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: j641 
=== Succesors ===
next: v638 
=== Usages ===
=== Predecessor ===
v632 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: j641 #next: v638  <|@  <|@
f <@*|@fixed>@ <|@
tid v638 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v615 
=== Predecessor ===
v637 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4585544610434797044
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v631 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:239) [bci: 401] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: j648 
=== Usages ===
=== Predecessor ===
v633 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j648  <|@  <|@
f <@~|@floating>@ <|@
tid v735 <|@
d <@d|@=== Debug Properties ===
displacement: 88
stamp: void*
stride: S1
=== Inputs ===
base: j604 
index: - 
=== Succesors ===
=== Usages ===
j648 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j604 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j648 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:239) [bci: 410] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v735 
lastLocationAccess: - 
=== Succesors ===
next: v649 
=== Usages ===
v736 
=== Predecessor ===
v631 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v735 lastLocationAccess: - #next: v649  <|@  <|@
f <@~|@floating>@ <|@
tid v736 <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j648 
index: j647 
=== Succesors ===
=== Usages ===
v649 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j648 index: j647  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v649 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card-Queue-Log
location: GC-Card-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:244) [bci: 438] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v736 
lastLocationAccess: - 
value: j641 
stateAfter: - 
=== Succesors ===
next: v650 
=== Usages ===
=== Predecessor ===
j648 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v736 lastLocationAccess: - value: j641 stateAfter: - #next: v650  <|@  <|@
f <@~|@floating>@ <|@
tid j643 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:240) [bci: 424] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: i64
=== Inputs ===
x: j647 
y: j295 
=== Succesors ===
=== Usages ===
v650 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j647 y: j295  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v650 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card-Queue-Index
location: GC-Card-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:245) [bci: 452] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v734 
lastLocationAccess: - 
value: j643 
stateAfter: - 
=== Succesors ===
next: v636 
=== Usages ===
=== Predecessor ===
v649 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v734 lastLocationAccess: - value: j643 stateAfter: - #next: v636  <|@  <|@
f <@*|@fixed>@ <|@
tid v636 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v615 
=== Predecessor ===
v650 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B77" "B79" "B81" "B83" "B86" "B85" 
    successors "B88" "B89" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617455682992505588
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v615 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v614 v616 v621 v626 v636 v638 
=== Succesors ===
next: v53 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v614 v616 v621 v626 v636 v638 #next: v53  <|@  <|@
f <@~|@floating>@ <|@
tid v174 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 95]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a686 
=== Succesors ===
=== Usages ===
v53 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a686  <|@  <|@
f <@*|@fixed>@ <|@
tid v53 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 95]
profileData: PROFILED designatedSuccessorProbability: 0.8739340370331193
stamp: void
=== Inputs ===
condition: v174 
=== Succesors ===
trueSuccessor: v52 
falseSuccessor: v49 
=== Usages ===
=== Predecessor ===
v615 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v174 #trueSuccessor: v52 #falseSuccessor: v49  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B68" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4616728324673108138
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v52 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 68]
stamp: void
=== Inputs ===
=== Succesors ===
next: v51 
=== Usages ===
=== Predecessor ===
v53 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v51  <|@  <|@
f <@*|@fixed>@ <|@
tid v51 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 68]
stamp: void
=== Inputs ===
loopBegin: v27 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v52 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v27  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B95" 
    xhandlers
    flags 
    probability 4603994086100456013
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v49 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1611) [bci: 98]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v27 
=== Succesors ===
next: v48 
=== Usages ===
=== Predecessor ===
v53 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v27 #next: v48  <|@  <|@
f <@*|@fixed>@ <|@
tid v48 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1611) [bci: 98]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v33 
=== Predecessor ===
v49 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B95" 
    xhandlers
    flags 
    probability 4591715434359090862
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v35 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1611) [bci: 98]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v27 
=== Succesors ===
next: v34 
=== Usages ===
=== Predecessor ===
v38 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v27 #next: v34  <|@  <|@
f <@*|@fixed>@ <|@
tid v34 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1611) [bci: 98]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v33 
=== Predecessor ===
v35 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B95" 
    xhandlers
    flags 
    probability 4592396561385874207
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v70 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1611) [bci: 98]
stamp: void
=== Inputs ===
=== Succesors ===
next: v85 
=== Usages ===
=== Predecessor ===
v73 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v85  <|@  <|@
f <@*|@fixed>@ <|@
tid v85 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1611) [bci: 98]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v33 
=== Predecessor ===
v70 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v224 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: v739 
=== Usages ===
=== Predecessor ===
v225 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v739  <|@  <|@
f <@*|@fixed>@ <|@
tid v739 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 144
mayConvertToGuard: true
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 73]
reason: BoundsCheckException
speculation: jdk.vm.ci.meta.SpeculationLog$NoSpeculationReason@7f1c506c
stamp: void
=== Inputs ===
stateBefore: ?16 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v224 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?16  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B95" 
    xhandlers
    flags 
    probability 4580341933595724392
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v59 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1611) [bci: 98]
stamp: void
=== Inputs ===
=== Succesors ===
next: v86 
=== Usages ===
=== Predecessor ===
v61 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v86  <|@  <|@
f <@*|@fixed>@ <|@
tid v86 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1611) [bci: 98]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v33 
=== Predecessor ===
v59 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B95" 
    xhandlers
    flags 
    probability 4593944184856050836
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1611) [bci: 98]
stamp: void
=== Inputs ===
=== Succesors ===
next: v32 
=== Usages ===
=== Predecessor ===
v20 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v32  <|@  <|@
f <@*|@fixed>@ <|@
tid v32 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1611) [bci: 98]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v33 
=== Predecessor ===
v18 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" "B90" "B89" "B91" "B93" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v33 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1611) [bci: 98]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v32 v34 v48 v85 v86 
=== Succesors ===
next: v55 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v32 v34 v48 v85 v86 #next: v55  <|@  <|@
f <@*|@fixed>@ <|@
tid v55 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1611) [bci: 99]
stamp: void
=== Inputs ===
memoryMap: - 
result: a104 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v33 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: a104  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v233 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1604) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v738 
=== Usages ===
=== Predecessor ===
v234 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v738  <|@  <|@
f <@*|@fixed>@ <|@
tid v738 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 231
mayConvertToGuard: true
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1604) [bci: 9]
reason: UnreachedCode
speculation: {0x0000000000000014[index: 0, len: 20, hash: 0xf97a8353]: UnreachedCode@5[HotSpotMethod<HashMap$HashIterator.nextNode()>, 19]}
stamp: void
=== Inputs ===
stateBefore: ?2 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v233 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?2  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGeneration"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B96" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7154f04f slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[_] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v2|DWORD = MOV [v1|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[_] = MOV [v1|DWORD[_] * 8 + 36] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[_] = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v5|DWORD[_] = MOV [v4|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: [v0|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B96 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B8" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B2 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.+] = LEA [v0|QWORD[.] + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD[_] = MOV [v6|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v7|DWORD[_], y: v7|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = UNCOMPRESSPOINTER (input: v7|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v8|QWORD, y: v8|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v10|QWORD + v8|QWORD * 1 - 8], y: v9|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = LEA [v8|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v11|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B4 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" "B7" "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v4|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[*] = XOR (x: v0|QWORD[.], y: v12|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOVE input: long[140438306553856|0x7fba57600000] <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v13|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v12|QWORD[.], y: v12|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v15|QWORD[*] + v14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B13 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B19" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B9 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B19" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B11 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v15|QWORD[*] + v14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B19" 
    xhandlers
    flags 
    probability 4589917419268529874
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B15 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v15|QWORD[*] + v14|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[*] = ADD (x: v15|QWORD[*], y: v14|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v16|QWORD, y: v16|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD + v16|QWORD * 1 - 8], y: v17|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = LEA [v16|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v19|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v17|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" "B13" "B15" "B18" "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B26" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B20 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[.+] = LEA [v0|QWORD[.] + 20] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD[_] = MOV [v20|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v21|DWORD[_], y: v21|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[.] = UNCOMPRESSPOINTER (input: v21|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v22|QWORD, y: v22|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v24|QWORD + v22|QWORD * 1 - 8], y: v23|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = LEA [v22|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v25|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B26" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B22 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v23|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" "B25" "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v5|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v27|QWORD[*] = XOR (x: v0|QWORD[.], y: v26|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v27|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v26|QWORD[.], y: v26|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v28|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v28|QWORD[*] + v14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B37" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B31 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B37" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B27 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B37" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B29 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v28|QWORD[*] + v14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" 
    xhandlers
    flags 
    probability 4589917419268529874
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B33 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v28|QWORD[*] + v14|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD[*] = ADD (x: v28|QWORD[*], y: v14|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v29|QWORD, y: v29|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v31|QWORD + v29|QWORD * 1 - 8], y: v30|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = LEA [v29|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v32|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v30|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B27" "B29" "B31" "B33" "B36" "B35" 
    successors "B38" "B94" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v5|DWORD[_], y: v5|DWORD[_]) trueDestinationProbability: 0.8674348032491496 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B94 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B93" 
    xhandlers
    flags 
    probability 4605988377658638555
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
stack: v26|QWORD[.] 
locals: v0|QWORD[.] - v12|QWORD[.] 
>@ <|@ instruction v33|DWORD = MOV [v3|DWORD[_] * 8 + 12] size: DWORD state [bci:53] <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v33|DWORD, y: v34|DWORD) trueDestinationProbability: 0.9812627296505405 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B93 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B92" 
    xhandlers
    flags 
    probability 4605841980402785416
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v33|DWORD, y: v34|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B92 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4605841980402785416
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = INC v34|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v35|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B47" 
    xhandlers
    flags 
    probability 4605075304317034516
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B41 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B95" 
    xhandlers
    flags 
    probability 4593944184856050836
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B94 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4590797829349172127
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[.+] = LEA [v0|QWORD[.] + 20] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v37|DWORD[_] = MOV [v36|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v37|DWORD[_], y: v37|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4590184488480571407
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v39|QWORD[.] = UNCOMPRESSPOINTER (input: v37|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v38|QWORD, y: v38|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4589632481698830759
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v40|QWORD + v38|QWORD * 1 - 8], y: v39|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = LEA [v38|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v41|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B95" 
    xhandlers
    flags 
    probability 4580341933595724392
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B93 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B47" 
    xhandlers
    flags 
    probability 4576060348729859198
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B43 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4575482130661533308
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v39|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B41" "B43" "B46" "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4605841980402785416
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v42|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v43|DWORD[_] = MOV [v42|QWORD[.] + v34|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v43|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = UNCOMPRESSPOINTER (input: v43|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v45|QWORD[*] = XOR (x: v0|QWORD[.], y: v44|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v45|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4605075304317034516
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v44|QWORD[.], y: v44|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4604385295839858706
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v46|QWORD[*] + v14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B58" 
    xhandlers
    flags 
    probability 4603764288210400477
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B52 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B58" 
    xhandlers
    flags 
    probability 4590797829349172127
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B48 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B58" 
    xhandlers
    flags 
    probability 4590184488480571407
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B50 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4589632481698830759
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v46|QWORD[*] + v14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B58" 
    xhandlers
    flags 
    probability 4589103330899992928
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B54 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4574598919810748272
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v46|QWORD[*] + v14|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[*] = ADD (x: v46|QWORD[*], y: v14|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v47|QWORD, y: v47|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4573804030045041739
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v49|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v49|QWORD + v47|QWORD * 1 - 8], y: v48|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v50|QWORD = LEA [v47|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v50|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4559498341397223717
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v48|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B48" "B50" "B52" "B54" "B57" "B56" 
    successors "B59" "B91" 
    xhandlers
    flags 
    probability 4605841980402785416
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v43|DWORD[_], y: v43|DWORD[_]) trueDestinationProbability: 0.8739340370331193 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B91 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B66" 
    xhandlers
    flags 
    probability 4604875462812446756
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v33|DWORD, y: v35|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B59 -> B60 falseDestination: B59 -> B66 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B67" 
    xhandlers
    flags 
    probability 4600371863185076260
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B64" 
    xhandlers
    flags 
    probability 4600371863185076260
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = SUB (x: v33|DWORD, ~y: v35|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = MOVSXD v51|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v53|QWORD = MOV v35|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD = ADD (x: v52|QWORD, y: v53|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v55|QWORD = DEC v54|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v56|QWORD = MOV v33|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v56|QWORD, y: v55|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B60 -> B61 falseDestination: B60 -> B64 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4600371863185076260
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v33|DWORD, y: v35|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B61 -> B62 falseDestination: B61 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B67" 
    xhandlers
    flags 
    probability 4600371863185076260
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B62 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" "B62" 
    successors "B68" 
    xhandlers
    flags 
    probability 4604875462812446756
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v35|DWORD] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" "B88" 
    successors "B69" "B90" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4617565855081504432
    begin_IR
      LIR
      nr   -1  <|@ instruction [v57|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v33|DWORD, y: v57|DWORD) trueDestinationProbability: 0.9812627296505405 condition: > trueDestination: B68 -> B69 falseDestination: B68 -> B90 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B70" "B71" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617455682992505589
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = INC v57|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v58|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4616878716535993821
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B70 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" "B73" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602790951197370563
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v59|QWORD[.+] = LEA [v0|QWORD[.] + 20] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v60|DWORD[_] = MOV [v59|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v60|DWORD[_], y: v60|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B73 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" "B75" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601979936891675385
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v61|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v62|QWORD[.] = UNCOMPRESSPOINTER (input: v60|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v61|QWORD, y: v61|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B75 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601149105194298439
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v63|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v63|QWORD + v61|QWORD * 1 - 8], y: v62|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v64|QWORD = LEA [v61|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v64|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587545991679145066
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B72 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586807474614810003
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v62|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B70" "B72" "B75" "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617455682992505589
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v65|DWORD[_] = MOV [v42|QWORD[.] + v57|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v65|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v66|QWORD[.] = UNCOMPRESSPOINTER (input: v65|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[*] = XOR (x: v0|QWORD[.], y: v66|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v67|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4616878716535993821
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v66|QWORD[.], y: v66|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4616359446725133229
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v68|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v68|QWORD[*] + v14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4615594589735958993
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B81 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602790951197370563
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B77 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601979936891675385
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B79 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" "B84" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601149105194298438
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v68|QWORD[*] + v14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B82 -> B83 falseDestination: B82 -> B84 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4600401356666659186
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B83 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" "B86" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586142809256908445
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v68|QWORD[*] + v14|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v69|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v70|QWORD[*] = ADD (x: v68|QWORD[*], y: v14|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v69|QWORD, y: v69|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B84 -> B85 falseDestination: B84 -> B86 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4585544610434797044
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v71|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v71|QWORD + v69|QWORD * 1 - 8], y: v70|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v72|QWORD = LEA [v69|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v72|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B86 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4571435612730574153
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v70|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B77" "B79" "B81" "B83" "B86" "B85" 
    successors "B88" "B89" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617455682992505588
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v65|DWORD[_], y: v65|DWORD[_]) trueDestinationProbability: 0.8739340370331193 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B89 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B68" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4616728324673108138
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v58|DWORD] destination: B88 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B95" 
    xhandlers
    flags 
    probability 4603994086100456013
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B89 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B95" 
    xhandlers
    flags 
    probability 4592396561385874207
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B91 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B95" 
    xhandlers
    flags 
    probability 4591715434359090862
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B90 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" "B90" "B89" "B91" "B93" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v12|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -59155 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B64 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" "B63" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -40475 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 1944 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 95]
stack: v44|QWORD[.] 
locals: v0|QWORD[.] v42|QWORD[.] v12|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:95] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -36891 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
stack: v26|QWORD[.] 
locals: v0|QWORD[.] - v12|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:53] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #5          // next:java.util.HashMap$Node
     4: astore_2      
     5: aload_0       
     6: getfield      #0          // this$0:java.util.HashMap
     9: getfield      #2          // java.util.HashMap.modCount:int
    12: aload_0       
    13: getfield      #3          // expectedModCount:int
    16: if_icmpeq     27
    19: new           #39         // java.util.ConcurrentModificationException
    22: dup           
    23: invokespecial #9          // java.util.ConcurrentModificationException.<init>:()void
    26: athrow        
    27: aload_2       
    28: ifnonnull     39
    31: new           #42         // java.util.NoSuchElementException
    34: dup           
    35: invokespecial #10         // java.util.NoSuchElementException.<init>:()void
    38: athrow        
    39: aload_0       
    40: aload_0       
    41: aload_2       
    42: dup_x1        
    43: putfield      #6          // current:java.util.HashMap$Node
    46: getfield      #11         // java.util.HashMap$Node.next:java.util.HashMap$Node
    49: dup_x1        
    50: putfield      #5          // next:java.util.HashMap$Node
    53: ifnonnull     98
    56: aload_0       
    57: getfield      #0          // this$0:java.util.HashMap
    60: getfield      #4          // java.util.HashMap.table:java.util.HashMap$Node[]
    63: dup           
    64: astore_1      
    65: ifnull        98
    68: aload_0       
    69: getfield      #7          // index:int
    72: aload_1       
    73: arraylength   
    74: if_icmpge     98
    77: aload_0       
    78: aload_1       
    79: aload_0       
    80: dup           
    81: getfield      #7          // index:int
    84: dup_x1        
    85: iconst_1      
    86: iadd          
    87: putfield      #7          // index:int
    90: aaload        
    91: dup_x1        
    92: putfield      #5          // next:java.util.HashMap$Node
    95: ifnull        68
    98: aload_2       
    99: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B96" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a677 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: a677  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a! java.util.HashMap$HashIterator
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 v691 v692 v694 v695 ?16 ?68 v699 j314 j415 j510 j606 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v692 <|@
result [v0|QWORD[.] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a677 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a677 <|@
result v1|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.HashMap
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: HashMap$HashIterator.this$0
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1604) [bci: 6]
stamp: n java.util.HashMap
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v692 
lastLocationAccess: - 
=== Succesors ===
next: i678 
=== Usages ===
v697 v693 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v692 lastLocationAccess: - #next: i678  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_0
code: ResolvedJavaMethodBytecode<HashMap$HashIterator.nextNode()>
localsSize: 3
locksSize: 0
sourceFile: HashMap.java
sourceLine: 1603
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
v738 i678 a681 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@~|@floating>@ <|@
tid v693 <|@
result [v1|DWORD[_] * 8 + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a677 
=== Succesors ===
=== Usages ===
i678 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a677  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i678 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: int[-28171|0xffffffffffff91f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: HashMap.modCount
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1604) [bci: 9]
stamp: i32
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v693 
lastLocationAccess: - 
=== Succesors ===
next: a679 
=== Usages ===
v7 
=== Predecessor ===
a677 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v693 lastLocationAccess: - #next: a679  <|@  <|@
f <@~|@floating>@ <|@
tid v697 <|@
result [v1|DWORD[_] * 8 + 36] <|@
d <@d|@=== Debug Properties ===
displacement: 36
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a677 
=== Succesors ===
=== Usages ===
a679 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a677  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a679 <|@
result v3|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.HashMap$Node[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: HashMap.table
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 60]
stamp: n java.util.HashMap$Node[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v697 
lastLocationAccess: - 
=== Succesors ===
next: a680 
=== Usages ===
a132 v698 
=== Predecessor ===
i678 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v697 lastLocationAccess: - #next: a680  <|@  <|@
f <@~|@floating>@ <|@
tid v691 <|@
result [v0|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a680 v128 v154 v167 j374 j564 j469 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a680 <|@
result v4|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.HashMap$Node
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: HashMap$HashIterator.next
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 1]
stamp: n java.util.HashMap$Node
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v691 
lastLocationAccess: - 
=== Succesors ===
next: a681 
=== Usages ===
a104 v120 v696 
=== Predecessor ===
a679 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v691 lastLocationAccess: - #next: a681  <|@  <|@
f <@~|@floating>@ <|@
tid v696 <|@
result [v4|DWORD[_] * 8 + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a680 
=== Succesors ===
=== Usages ===
a681 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a680  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a681 <|@
result v5|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.HashMap$Node
barrierType: NONE
deoptReasonAndAction: int[-31243|0xffffffffffff85f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: HashMap$Node.next
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 46]
stamp: n java.util.HashMap$Node
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v696 
lastLocationAccess: - 
=== Succesors ===
next: i682 
=== Usages ===
a126 v170 v128 
=== Predecessor ===
a680 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v696 lastLocationAccess: - #next: i682  <|@  <|@
f <@~|@floating>@ <|@
tid v694 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i682 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i682 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: HashMap$HashIterator.expectedModCount
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1604) [bci: 13]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v694 
lastLocationAccess: - 
=== Succesors ===
next: v234 
=== Usages ===
v7 
=== Predecessor ===
a681 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v694 lastLocationAccess: - #next: v234  <|@  <|@
f <@~|@floating>@ <|@
tid v7 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1604) [bci: 16]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i678 
y: i682 
=== Succesors ===
=== Usages ===
v234 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i678 y: i682  <|@  <|@
f <@*|@fixed>@ <|@
tid v234 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1604) [bci: 16]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v7 
=== Succesors ===
trueSuccessor: v232 
falseSuccessor: v233 
=== Usages ===
=== Predecessor ===
i682 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v7 #trueSuccessor: v232 #falseSuccessor: v233  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7154f04f slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[_] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v2|DWORD = MOV [v1|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[_] = MOV [v1|DWORD[_] * 8 + 36] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[_] = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v5|DWORD[_] = MOV [v4|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: [v0|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B96 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v232 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1606) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
next: v311 
=== Usages ===
=== Predecessor ===
v234 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v311  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v311 <|@
d <@d|@=== Debug Properties ===
locations: [GC-SATB-Queue-Log, GC-SATB-Marking-Active, GC-SATB-Queue-Index, GC-SATB-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: j267 
=== Usages ===
=== Predecessor ===
v232 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j267  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j267 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:127) [bci: 10]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j268 
=== Usages ===
v702 v704 v705 
=== Predecessor ===
v311 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j268  <|@  <|@
f <@~|@floating>@ <|@
tid v695 <|@
result [v0|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v120 j268 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j268 <|@
result [v0|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:129) [bci: 21]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v695 
=== Succesors ===
next: i297 
=== Usages ===
v703 
=== Predecessor ===
j267 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: v695 #next: i297  <|@  <|@
f <@~|@floating>@ <|@
tid v702 <|@
result [r15|QWORD + 64] <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: j267 
index: - 
=== Succesors ===
=== Usages ===
i297 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j267 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i297 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Marking-Active
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:130) [bci: 35]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v702 
lastLocationAccess: - 
=== Succesors ===
next: v272 
=== Usages ===
v305 
=== Predecessor ===
j268 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v702 lastLocationAccess: - #next: v272  <|@  <|@
f <@~|@floating>@ <|@
tid i304 <|@
result byte[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
rawvalue: 0
stableDimension: 0
stamp: i8 [0]
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v305 v359 v366 v406 v455 v461 v501 v550 v556 v596 v646 v652 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v305 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i297 
y: i304 
=== Succesors ===
=== Usages ===
v272 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i297 y: i304  <|@  <|@
f <@~|@floating>@ <|@
tid j295 <|@
result long[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
rawvalue: -8
stableDimension: 0
stamp: i64 [-8]
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j296 j356 j398 j452 j493 j547 j588 j643 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j243 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1604) [bci: 9]
rawvalue: 0
stableDimension: 0
stamp: i64 [0]
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v630 v612 v482 v577 v281 v320 v340 v516 v387 v421 v439 v534 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v272 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 217]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v305 
=== Succesors ===
trueSuccessor: v271 
falseSuccessor: v270 
=== Usages ===
=== Predecessor ===
i297 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v305 #trueSuccessor: v271 #falseSuccessor: v270  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B8" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v271 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v275 
=== Usages ===
=== Predecessor ===
v272 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v275  <|@  <|@
f <@*|@fixed>@ <|@
tid v275 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v276 
=== Predecessor ===
v271 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B2 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v270 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:150) [bci: 220]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: a298 
=== Usages ===
=== Predecessor ===
v272 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a298  <|@  <|@
f <@~|@floating>@ <|@
tid v703 <|@
result [v6|QWORD[.+]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j268 
index: - 
=== Succesors ===
=== Usages ===
a298 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j268 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a298 <|@
result v7|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v703 
lastLocationAccess: - 
=== Succesors ===
next: v279 
=== Usages ===
a299 v306 
=== Predecessor ===
v270 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v703 lastLocationAccess: - #next: v279  <|@  <|@
f <@~|@floating>@ <|@
tid v306 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 296]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a298 
=== Succesors ===
=== Usages ===
v279 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a298  <|@  <|@
f <@*|@fixed>@ <|@
tid v279 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 307]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v306 
=== Succesors ===
trueSuccessor: v278 
falseSuccessor: v274 
=== Usages ===
=== Predecessor ===
a298 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v306 #trueSuccessor: v278 #falseSuccessor: v274  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.+] = LEA [v0|QWORD[.] + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD[_] = MOV [v6|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v7|DWORD[_], y: v7|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v278 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v277 
=== Usages ===
=== Predecessor ===
v279 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v277  <|@  <|@
f <@*|@fixed>@ <|@
tid v277 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v276 
=== Predecessor ===
v278 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B4 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v274 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:163) [bci: 310]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: j300 
=== Usages ===
=== Predecessor ===
v279 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j300  <|@  <|@
f <@~|@floating>@ <|@
tid v704 <|@
result [r15|QWORD + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: j267 
index: - 
=== Succesors ===
=== Usages ===
j300 v303 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j267 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j300 <|@
result v8|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:166) [bci: 327]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v704 
lastLocationAccess: - 
=== Succesors ===
next: v284 
=== Usages ===
v281 j296 v706 
=== Predecessor ===
v274 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v704 lastLocationAccess: - #next: v284  <|@  <|@
f <@~|@floating>@ <|@
tid v281 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 341]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j300 
y: j243 
=== Succesors ===
=== Usages ===
v284 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j300 y: j243  <|@  <|@
f <@~|@floating>@ <|@
tid a299 <|@
result v9|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a298 
=== Succesors ===
=== Usages ===
j286 v289 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a298  <|@  <|@
f <@*|@fixed>@ <|@
tid v284 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 347]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v281 
=== Succesors ===
trueSuccessor: v283 
falseSuccessor: v282 
=== Usages ===
=== Predecessor ===
j300 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v281 #trueSuccessor: v283 #falseSuccessor: v282  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = UNCOMPRESSPOINTER (input: v7|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v8|QWORD, y: v8|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v283 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 410]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v289 
=== Usages ===
=== Predecessor ===
v284 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v289  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v289 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_pre(Object)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-SATB-Queue-Index, GC-SATB-Queue-Buffer, GC-SATB-Queue-Log], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_pre
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(ForeignCallDescriptor, Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(G1WriteBarrierSnippets.java:409) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 413]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: a299 
=== Succesors ===
next: v290 
=== Usages ===
=== Predecessor ===
v283 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: a299 #next: v290  <|@  <|@
f <@*|@fixed>@ <|@
tid v290 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v276 
=== Predecessor ===
v289 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v282 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 350]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: j301 
=== Usages ===
=== Predecessor ===
v284 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j301  <|@  <|@
f <@~|@floating>@ <|@
tid v705 <|@
result [r15|QWORD + 56] <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: j267 
index: - 
=== Succesors ===
=== Usages ===
j301 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j267 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j301 <|@
result v10|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 359]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v705 
lastLocationAccess: - 
=== Succesors ===
next: j286 
=== Usages ===
v706 
=== Predecessor ===
v282 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v705 lastLocationAccess: - #next: j286  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j286 <|@
result v9|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 384]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a299 
=== Succesors ===
next: v302 
=== Usages ===
v302 
=== Predecessor ===
j301 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a299 #next: v302  <|@  <|@
f <@~|@floating>@ <|@
tid v706 <|@
result [v10|QWORD + v8|QWORD * 1 - 8] <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j301 
index: j300 
=== Succesors ===
=== Usages ===
v302 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j301 index: j300  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v302 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Log
location: GC-SATB-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 390]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v706 
lastLocationAccess: - 
value: j286 
stateAfter: - 
=== Succesors ===
next: v303 
=== Usages ===
=== Predecessor ===
j286 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v706 lastLocationAccess: - value: j286 stateAfter: - #next: v303  <|@  <|@
f <@~|@floating>@ <|@
tid j296 <|@
result v11|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: i64
=== Inputs ===
x: j300 
y: j295 
=== Succesors ===
=== Usages ===
v303 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j300 y: j295  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v303 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Index
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:173) [bci: 404]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v704 
lastLocationAccess: - 
value: j296 
stateAfter: - 
=== Succesors ===
next: v288 
=== Usages ===
=== Predecessor ===
v302 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v704 lastLocationAccess: - value: j296 stateAfter: - #next: v288  <|@  <|@
f <@*|@fixed>@ <|@
tid v288 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v276 
=== Predecessor ===
v303 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v10|QWORD + v8|QWORD * 1 - 8], y: v9|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = LEA [v8|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v11|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" "B7" "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v276 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v275 v277 v288 v290 
=== Succesors ===
next: v120 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v275 v277 v288 v290 #next: v120  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v120 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: HashMap$HashIterator.current
location: HashMap$HashIterator.current
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v695 
lastLocationAccess: - 
value: a680 
stateAfter: - 
=== Succesors ===
next: v372 
=== Usages ===
=== Predecessor ===
v276 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v695 lastLocationAccess: - value: a680 stateAfter: - #next: v372  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v372 <|@
d <@d|@=== Debug Properties ===
locations: [GC-Card, GC-Card-Queue-Log, GC-Card-Queue-Index, GC-Card-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: j312 
=== Usages ===
=== Predecessor ===
v120 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j312  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j312 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:184) [bci: 1] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: a313 
=== Usages ===
v707 v708 
=== Predecessor ===
v372 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: a313  <|@  <|@
f <@~|@floating>@ <|@
tid a104 <|@
result v12|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 1]
op: Uncompress
stamp: a java.util.HashMap$Node
=== Inputs ===
value: a680 
=== Succesors ===
=== Usages ===
?68 a313 ?16 v55 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a680  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a313 <|@
result v12|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.FixedValueAnchorNode.getObject(Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:185) [bci: 7] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: a java.util.HashMap$Node
=== Inputs ===
object: a104 
=== Succesors ===
next: j314 
=== Usages ===
j315 
=== Predecessor ===
j312 >@ <|@
instruction <@FixedValueAnchor|@jdk.graal.compiler.nodes.extended.FixedValueAnchorNode>@ object: a104 #next: j314  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j314 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:197) [bci: 56] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: j315 
=== Usages ===
j316 j329 
=== Predecessor ===
a313 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a1 #next: j315  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j315 <|@
result v12|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:208) [bci: 150] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a313 
=== Succesors ===
next: v319 
=== Usages ===
j316 v320 
=== Predecessor ===
j314 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a313 #next: v319  <|@  <|@
f <@~|@floating>@ <|@
tid j316 <|@
result v13|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:212) [bci: 165] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: i64
=== Inputs ===
x: j314 
y: j315 
=== Succesors ===
=== Usages ===
v351 
=== Predecessor ===
- >@ <|@
instruction <@^|@jdk.graal.compiler.nodes.calc.XorNode>@ x: j314 y: j315  <|@  <|@
f <@~|@floating>@ <|@
tid j350 <|@
result long[-4194304|0xffffffffffc00000] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:215) [bci: 193] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
rawvalue: -4194304
stableDimension: 0
stamp: i64 [-4194304]
stampKind: i64
value: long[-4194304|0xffffffffffc00000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v351 v449 v544 v640 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v351 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:215) [bci: 193] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
=== Inputs ===
x: j316 
y: j350 
=== Succesors ===
=== Usages ===
v319 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@jdk.graal.compiler.nodes.calc.IntegerTestNode>@ x: j316 y: j350  <|@  <|@
f <@~|@floating>@ <|@
tid i364 <|@
result byte[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:227) [bci: 265] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
rawvalue: 2
stableDimension: 0
stamp: i8 [2]
stampKind: i8
value: byte[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
v365 v460 v555 v651 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i328 <|@
result int[9|0x9] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.cardTableAddress(HotSpotG1WriteBarrierSnippets.java:130) [bci: 16]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 232] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
rawvalue: 9
stableDimension: 0
stamp: i32 [9]
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j329 j428 j523 j619 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j327 <|@
result v14|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableStart(GraalHotSpotVMConfig) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.cardTableAddress(HotSpotG1WriteBarrierSnippets.java:129) [bci: 3]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 232] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
rawvalue: 140438306553856
stableDimension: 0
stamp: i64 [140438306553856]
stampKind: i64
value: long[140438306553856|0x7fba57600000]
=== Inputs ===
=== Succesors ===
=== Usages ===
j352 v710 j450 v719 j545 v728 j641 v737 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v319 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:215) [bci: 201] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v351 
=== Succesors ===
trueSuccessor: v318 
falseSuccessor: v317 
=== Usages ===
=== Predecessor ===
j315 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v351 #trueSuccessor: v318 #falseSuccessor: v317  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v4|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[*] = XOR (x: v0|QWORD[.], y: v12|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOVE input: long[140438306553856|0x7fba57600000] <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v13|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B19" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v318 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v322 
=== Usages ===
=== Predecessor ===
v319 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v322  <|@  <|@
f <@*|@fixed>@ <|@
tid v322 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v323 
=== Predecessor ===
v318 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B9 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v317 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:216) [bci: 204] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v326 
=== Usages ===
=== Predecessor ===
v319 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v326  <|@  <|@
f <@~|@floating>@ <|@
tid v320 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:218) [bci: 218] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j315 
y: j243 
=== Succesors ===
=== Usages ===
v326 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j315 y: j243  <|@  <|@
f <@*|@fixed>@ <|@
tid v326 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:218) [bci: 226] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v320 
=== Succesors ===
trueSuccessor: v325 
falseSuccessor: v321 
=== Usages ===
=== Predecessor ===
v317 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v320 #trueSuccessor: v325 #falseSuccessor: v321  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v12|QWORD[.], y: v12|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B19" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v325 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v324 
=== Usages ===
=== Predecessor ===
v326 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v324  <|@  <|@
f <@*|@fixed>@ <|@
tid v324 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v323 
=== Predecessor ===
v325 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B11 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v321 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 229] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: i357 
=== Usages ===
=== Predecessor ===
v326 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i357  <|@  <|@
f <@~|@floating>@ <|@
tid j329 <|@
result v15|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.cardTableAddress(HotSpotG1WriteBarrierSnippets.java:131) [bci: 23]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 232] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: i64 [0 - 36028797018963967] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j314 
y: i328 
=== Succesors ===
=== Usages ===
j352 v710 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j314 y: i328  <|@  <|@
f <@~|@floating>@ <|@
tid v710 <|@
result [v15|QWORD[*] + v14|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j329 
index: j327 
=== Succesors ===
=== Usages ===
i357 i358 v359 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j329 index: j327  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i357 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:223) [bci: 243] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v710 
lastLocationAccess: - 
=== Succesors ===
next: v333 
=== Usages ===
v365 
=== Predecessor ===
v321 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v710 lastLocationAccess: - #next: v333  <|@  <|@
f <@~|@floating>@ <|@
tid v365 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:227) [bci: 265] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i357 
y: i364 
=== Succesors ===
=== Usages ===
v333 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i357 y: i364  <|@  <|@
f <@*|@fixed>@ <|@
tid v333 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:227) [bci: 276] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v365 
=== Succesors ===
trueSuccessor: v332 
falseSuccessor: v330 
=== Usages ===
=== Predecessor ===
i357 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v365 #trueSuccessor: v332 #falseSuccessor: v330  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v15|QWORD[*] + v14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v332 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v331 
=== Usages ===
=== Predecessor ===
v333 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v331  <|@  <|@
f <@*|@fixed>@ <|@
tid v331 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v323 
=== Predecessor ===
v332 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B13 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v330 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:228) [bci: 279] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v334 
=== Usages ===
=== Predecessor ===
v333 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v334  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v334 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_LOAD
fence: STORE_LOAD
location: GC-Card
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.MembarNode.memoryBarrier(MembarNode$FenceKind, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:228) [bci: 285] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: i358 
=== Usages ===
=== Predecessor ===
v330 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: i358  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i358 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:229) [bci: 294] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v710 
lastLocationAccess: - 
=== Succesors ===
next: v338 
=== Usages ===
v366 
=== Predecessor ===
v334 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v710 lastLocationAccess: - #next: v338  <|@  <|@
f <@~|@floating>@ <|@
tid v366 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:230) [bci: 308] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i358 
y: i304 
=== Succesors ===
=== Usages ===
v338 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i358 y: i304  <|@  <|@
f <@*|@fixed>@ <|@
tid v338 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:230) [bci: 319] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v366 
=== Succesors ===
trueSuccessor: v337 
falseSuccessor: v335 
=== Usages ===
=== Predecessor ===
i358 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v366 #trueSuccessor: v337 #falseSuccessor: v335  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v15|QWORD[*] + v14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B19" 
    xhandlers
    flags 
    probability 4589917419268529874
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v337 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v336 
=== Usages ===
=== Predecessor ===
v338 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v336  <|@  <|@
f <@*|@fixed>@ <|@
tid v336 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v323 
=== Predecessor ===
v337 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B15 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v335 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:231) [bci: 322] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v359 
=== Usages ===
=== Predecessor ===
v338 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v359  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v359 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:232) [bci: 358] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v710 
lastLocationAccess: - 
value: i304 
stateAfter: - 
=== Succesors ===
next: j360 
=== Usages ===
=== Predecessor ===
v335 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v710 lastLocationAccess: - value: i304 stateAfter: - #next: j360  <|@  <|@
f <@~|@floating>@ <|@
tid v707 <|@
result [r15|QWORD + 72] <|@
d <@d|@=== Debug Properties ===
displacement: 72
stamp: void*
stride: S1
=== Inputs ===
base: j312 
index: - 
=== Succesors ===
=== Usages ===
j360 v363 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j312 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j360 <|@
result v16|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:237) [bci: 378] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v707 
lastLocationAccess: - 
=== Succesors ===
next: v343 
=== Usages ===
v340 j356 v709 
=== Predecessor ===
v359 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v707 lastLocationAccess: - #next: v343  <|@  <|@
f <@~|@floating>@ <|@
tid v340 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:238) [bci: 392] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j360 
y: j243 
=== Succesors ===
=== Usages ===
v343 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j360 y: j243  <|@  <|@
f <@~|@floating>@ <|@
tid j352 <|@
result v17|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.cardTableAddress(HotSpotG1WriteBarrierSnippets.java:131) [bci: 28]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 232] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: i64 [140438306553856 - 36169235325517823] bits:00000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j329 
y: j327 
=== Succesors ===
=== Usages ===
v347 v362 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j329 y: j327  <|@  <|@
f <@*|@fixed>@ <|@
tid v343 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:238) [bci: 398] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v340 
=== Succesors ===
trueSuccessor: v342 
falseSuccessor: v341 
=== Usages ===
=== Predecessor ===
j360 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v340 #trueSuccessor: v342 #falseSuccessor: v341  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v15|QWORD[*] + v14|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[*] = ADD (x: v15|QWORD[*], y: v14|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v16|QWORD, y: v16|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v342 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:247) [bci: 458] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v347 
=== Usages ===
=== Predecessor ===
v343 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v347  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v347 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_post(Word)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-Card-Queue-Index, GC-Card-Queue-Buffer, GC-Card-Queue-Log, GC-Card], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_post
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostBarrierStub(ForeignCallDescriptor, Word) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostBarrierStub(G1WriteBarrierSnippets.java:413) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:247) [bci: 461] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: j352 
=== Succesors ===
next: v348 
=== Usages ===
=== Predecessor ===
v342 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: j352 #next: v348  <|@  <|@
f <@*|@fixed>@ <|@
tid v348 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v323 
=== Predecessor ===
v347 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v17|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v341 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:239) [bci: 401] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: j361 
=== Usages ===
=== Predecessor ===
v343 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j361  <|@  <|@
f <@~|@floating>@ <|@
tid v708 <|@
result [r15|QWORD + 88] <|@
d <@d|@=== Debug Properties ===
displacement: 88
stamp: void*
stride: S1
=== Inputs ===
base: j312 
index: - 
=== Succesors ===
=== Usages ===
j361 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j312 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j361 <|@
result v18|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:239) [bci: 410] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v708 
lastLocationAccess: - 
=== Succesors ===
next: v362 
=== Usages ===
v709 
=== Predecessor ===
v341 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v708 lastLocationAccess: - #next: v362  <|@  <|@
f <@~|@floating>@ <|@
tid v709 <|@
result [v18|QWORD + v16|QWORD * 1 - 8] <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j361 
index: j360 
=== Succesors ===
=== Usages ===
v362 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j361 index: j360  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v362 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card-Queue-Log
location: GC-Card-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:244) [bci: 438] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v709 
lastLocationAccess: - 
value: j352 
stateAfter: - 
=== Succesors ===
next: v363 
=== Usages ===
=== Predecessor ===
j361 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v709 lastLocationAccess: - value: j352 stateAfter: - #next: v363  <|@  <|@
f <@~|@floating>@ <|@
tid j356 <|@
result v19|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:240) [bci: 424] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: i64
=== Inputs ===
x: j360 
y: j295 
=== Succesors ===
=== Usages ===
v363 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j360 y: j295  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v363 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card-Queue-Index
location: GC-Card-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:245) [bci: 452] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v707 
lastLocationAccess: - 
value: j356 
stateAfter: - 
=== Succesors ===
next: v346 
=== Usages ===
=== Predecessor ===
v362 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v707 lastLocationAccess: - value: j356 stateAfter: - #next: v346  <|@  <|@
f <@*|@fixed>@ <|@
tid v346 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v323 
=== Predecessor ===
v363 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD + v16|QWORD * 1 - 8], y: v17|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = LEA [v16|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v19|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" "B13" "B15" "B18" "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v323 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v322 v324 v331 v336 v346 v348 
=== Succesors ===
next: v412 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v322 v324 v331 v336 v346 v348 #next: v412  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v412 <|@
d <@d|@=== Debug Properties ===
locations: [GC-SATB-Queue-Log, GC-SATB-Marking-Active, GC-SATB-Queue-Index, GC-SATB-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: j373 
=== Usages ===
=== Predecessor ===
v323 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j373  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j373 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:127) [bci: 10]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j374 
=== Usages ===
v711 v713 v714 
=== Predecessor ===
v412 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j374  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j374 <|@
result [v0|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:129) [bci: 21]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v691 
=== Succesors ===
next: i399 
=== Usages ===
v712 
=== Predecessor ===
j373 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: v691 #next: i399  <|@  <|@
f <@~|@floating>@ <|@
tid v711 <|@
result [r15|QWORD + 64] <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: j373 
index: - 
=== Succesors ===
=== Usages ===
i399 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j373 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i399 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Marking-Active
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:130) [bci: 35]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v711 
lastLocationAccess: - 
=== Succesors ===
next: v378 
=== Usages ===
v406 
=== Predecessor ===
j374 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v711 lastLocationAccess: - #next: v378  <|@  <|@
f <@~|@floating>@ <|@
tid v406 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i399 
y: i304 
=== Succesors ===
=== Usages ===
v378 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i399 y: i304  <|@  <|@
f <@*|@fixed>@ <|@
tid v378 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 217]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v406 
=== Succesors ===
trueSuccessor: v377 
falseSuccessor: v376 
=== Usages ===
=== Predecessor ===
i399 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v406 #trueSuccessor: v377 #falseSuccessor: v376  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B26" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v377 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v381 
=== Usages ===
=== Predecessor ===
v378 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v381  <|@  <|@
f <@*|@fixed>@ <|@
tid v381 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v382 
=== Predecessor ===
v377 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B20 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v376 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:150) [bci: 220]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: a400 
=== Usages ===
=== Predecessor ===
v378 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a400  <|@  <|@
f <@~|@floating>@ <|@
tid v712 <|@
result [v20|QWORD[.+]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j374 
index: - 
=== Succesors ===
=== Usages ===
a400 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j374 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a400 <|@
result v21|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v712 
lastLocationAccess: - 
=== Succesors ===
next: v385 
=== Usages ===
a401 v407 
=== Predecessor ===
v376 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v712 lastLocationAccess: - #next: v385  <|@  <|@
f <@~|@floating>@ <|@
tid v407 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 296]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a400 
=== Succesors ===
=== Usages ===
v385 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a400  <|@  <|@
f <@*|@fixed>@ <|@
tid v385 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 307]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v407 
=== Succesors ===
trueSuccessor: v384 
falseSuccessor: v380 
=== Usages ===
=== Predecessor ===
a400 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v407 #trueSuccessor: v384 #falseSuccessor: v380  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[.+] = LEA [v0|QWORD[.] + 20] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD[_] = MOV [v20|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v21|DWORD[_], y: v21|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B26" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v384 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v383 
=== Usages ===
=== Predecessor ===
v385 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v383  <|@  <|@
f <@*|@fixed>@ <|@
tid v383 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v382 
=== Predecessor ===
v384 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B22 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v380 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:163) [bci: 310]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: j402 
=== Usages ===
=== Predecessor ===
v385 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j402  <|@  <|@
f <@~|@floating>@ <|@
tid v713 <|@
result [r15|QWORD + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: j373 
index: - 
=== Succesors ===
=== Usages ===
j402 v405 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j373 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j402 <|@
result v22|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:166) [bci: 327]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v713 
lastLocationAccess: - 
=== Succesors ===
next: v390 
=== Usages ===
v387 j398 v715 
=== Predecessor ===
v380 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v713 lastLocationAccess: - #next: v390  <|@  <|@
f <@~|@floating>@ <|@
tid v387 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 341]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j402 
y: j243 
=== Succesors ===
=== Usages ===
v390 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j402 y: j243  <|@  <|@
f <@~|@floating>@ <|@
tid a401 <|@
result v23|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a400 
=== Succesors ===
=== Usages ===
j392 v395 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a400  <|@  <|@
f <@*|@fixed>@ <|@
tid v390 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 347]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v387 
=== Succesors ===
trueSuccessor: v389 
falseSuccessor: v388 
=== Usages ===
=== Predecessor ===
j402 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v387 #trueSuccessor: v389 #falseSuccessor: v388  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[.] = UNCOMPRESSPOINTER (input: v21|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v22|QWORD, y: v22|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v389 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 410]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v395 
=== Usages ===
=== Predecessor ===
v390 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v395  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v395 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_pre(Object)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-SATB-Queue-Index, GC-SATB-Queue-Buffer, GC-SATB-Queue-Log], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_pre
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(ForeignCallDescriptor, Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(G1WriteBarrierSnippets.java:409) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 413]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: a401 
=== Succesors ===
next: v396 
=== Usages ===
=== Predecessor ===
v389 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: a401 #next: v396  <|@  <|@
f <@*|@fixed>@ <|@
tid v396 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v382 
=== Predecessor ===
v395 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v23|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v388 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 350]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: j403 
=== Usages ===
=== Predecessor ===
v390 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j403  <|@  <|@
f <@~|@floating>@ <|@
tid v714 <|@
result [r15|QWORD + 56] <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: j373 
index: - 
=== Succesors ===
=== Usages ===
j403 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j373 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j403 <|@
result v24|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 359]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v714 
lastLocationAccess: - 
=== Succesors ===
next: j392 
=== Usages ===
v715 
=== Predecessor ===
v388 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v714 lastLocationAccess: - #next: j392  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j392 <|@
result v23|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 384]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a401 
=== Succesors ===
next: v404 
=== Usages ===
v404 
=== Predecessor ===
j403 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a401 #next: v404  <|@  <|@
f <@~|@floating>@ <|@
tid v715 <|@
result [v24|QWORD + v22|QWORD * 1 - 8] <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j403 
index: j402 
=== Succesors ===
=== Usages ===
v404 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j403 index: j402  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v404 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Log
location: GC-SATB-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 390]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v715 
lastLocationAccess: - 
value: j392 
stateAfter: - 
=== Succesors ===
next: v405 
=== Usages ===
=== Predecessor ===
j392 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v715 lastLocationAccess: - value: j392 stateAfter: - #next: v405  <|@  <|@
f <@~|@floating>@ <|@
tid j398 <|@
result v25|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: i64
=== Inputs ===
x: j402 
y: j295 
=== Succesors ===
=== Usages ===
v405 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j402 y: j295  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v405 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Index
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:173) [bci: 404]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v713 
lastLocationAccess: - 
value: j398 
stateAfter: - 
=== Succesors ===
next: v394 
=== Usages ===
=== Predecessor ===
v404 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v713 lastLocationAccess: - value: j398 stateAfter: - #next: v394  <|@  <|@
f <@*|@fixed>@ <|@
tid v394 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v382 
=== Predecessor ===
v405 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v24|QWORD + v22|QWORD * 1 - 8], y: v23|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = LEA [v22|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v25|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" "B25" "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v382 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v381 v383 v394 v396 
=== Succesors ===
next: v128 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v381 v383 v394 v396 #next: v128  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v128 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: HashMap$HashIterator.next
location: HashMap$HashIterator.next
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v691 
lastLocationAccess: - 
value: a681 
stateAfter: - 
=== Succesors ===
next: v467 
=== Usages ===
=== Predecessor ===
v382 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v691 lastLocationAccess: - value: a681 stateAfter: - #next: v467  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v467 <|@
d <@d|@=== Debug Properties ===
locations: [GC-Card, GC-Card-Queue-Log, GC-Card-Queue-Index, GC-Card-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: j413 
=== Usages ===
=== Predecessor ===
v128 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j413  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j413 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:184) [bci: 1] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: a414 
=== Usages ===
v716 v717 
=== Predecessor ===
v467 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: a414  <|@  <|@
f <@~|@floating>@ <|@
tid a126 <|@
result v26|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 46]
op: Uncompress
stamp: a java.util.HashMap$Node
=== Inputs ===
value: a681 
=== Succesors ===
=== Usages ===
?16 a414 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a681  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a414 <|@
result v26|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.FixedValueAnchorNode.getObject(Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:185) [bci: 7] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: a java.util.HashMap$Node
=== Inputs ===
object: a126 
=== Succesors ===
next: j415 
=== Usages ===
j416 
=== Predecessor ===
j413 >@ <|@
instruction <@FixedValueAnchor|@jdk.graal.compiler.nodes.extended.FixedValueAnchorNode>@ object: a126 #next: j415  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j415 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:197) [bci: 56] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: j416 
=== Usages ===
j417 j428 
=== Predecessor ===
a414 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a1 #next: j416  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j416 <|@
result v26|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:208) [bci: 150] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a414 
=== Succesors ===
next: v420 
=== Usages ===
j417 v421 
=== Predecessor ===
j415 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a414 #next: v420  <|@  <|@
f <@~|@floating>@ <|@
tid j417 <|@
result v27|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:212) [bci: 165] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: i64
=== Inputs ===
x: j415 
y: j416 
=== Succesors ===
=== Usages ===
v449 
=== Predecessor ===
- >@ <|@
instruction <@^|@jdk.graal.compiler.nodes.calc.XorNode>@ x: j415 y: j416  <|@  <|@
f <@~|@floating>@ <|@
tid v449 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:215) [bci: 193] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
=== Inputs ===
x: j417 
y: j350 
=== Succesors ===
=== Usages ===
v420 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@jdk.graal.compiler.nodes.calc.IntegerTestNode>@ x: j417 y: j350  <|@  <|@
f <@*|@fixed>@ <|@
tid v420 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:215) [bci: 201] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v449 
=== Succesors ===
trueSuccessor: v419 
falseSuccessor: v418 
=== Usages ===
=== Predecessor ===
j416 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v449 #trueSuccessor: v419 #falseSuccessor: v418  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v5|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v27|QWORD[*] = XOR (x: v0|QWORD[.], y: v26|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v27|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B37" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v419 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v423 
=== Usages ===
=== Predecessor ===
v420 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v423  <|@  <|@
f <@*|@fixed>@ <|@
tid v423 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v424 
=== Predecessor ===
v419 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B27 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v418 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:216) [bci: 204] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v427 
=== Usages ===
=== Predecessor ===
v420 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v427  <|@  <|@
f <@~|@floating>@ <|@
tid v421 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:218) [bci: 218] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j416 
y: j243 
=== Succesors ===
=== Usages ===
v427 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j416 y: j243  <|@  <|@
f <@*|@fixed>@ <|@
tid v427 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:218) [bci: 226] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v421 
=== Succesors ===
trueSuccessor: v426 
falseSuccessor: v422 
=== Usages ===
=== Predecessor ===
v418 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v421 #trueSuccessor: v426 #falseSuccessor: v422  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v26|QWORD[.], y: v26|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B37" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v426 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v425 
=== Usages ===
=== Predecessor ===
v427 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v425  <|@  <|@
f <@*|@fixed>@ <|@
tid v425 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v424 
=== Predecessor ===
v426 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B29 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v422 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 229] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: i453 
=== Usages ===
=== Predecessor ===
v427 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i453  <|@  <|@
f <@~|@floating>@ <|@
tid j428 <|@
result v28|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.cardTableAddress(HotSpotG1WriteBarrierSnippets.java:131) [bci: 23]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 232] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: i64 [0 - 36028797018963967] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j415 
y: i328 
=== Succesors ===
=== Usages ===
j450 v719 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j415 y: i328  <|@  <|@
f <@~|@floating>@ <|@
tid v719 <|@
result [v28|QWORD[*] + v14|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j428 
index: j327 
=== Succesors ===
=== Usages ===
i453 i454 v455 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j428 index: j327  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i453 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:223) [bci: 243] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v719 
lastLocationAccess: - 
=== Succesors ===
next: v432 
=== Usages ===
v460 
=== Predecessor ===
v422 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v719 lastLocationAccess: - #next: v432  <|@  <|@
f <@~|@floating>@ <|@
tid v460 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:227) [bci: 265] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i453 
y: i364 
=== Succesors ===
=== Usages ===
v432 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i453 y: i364  <|@  <|@
f <@*|@fixed>@ <|@
tid v432 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:227) [bci: 276] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v460 
=== Succesors ===
trueSuccessor: v431 
falseSuccessor: v429 
=== Usages ===
=== Predecessor ===
i453 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v460 #trueSuccessor: v431 #falseSuccessor: v429  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v28|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v28|QWORD[*] + v14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B37" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v431 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v430 
=== Usages ===
=== Predecessor ===
v432 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v430  <|@  <|@
f <@*|@fixed>@ <|@
tid v430 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v424 
=== Predecessor ===
v431 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B31 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v429 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:228) [bci: 279] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v433 
=== Usages ===
=== Predecessor ===
v432 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v433  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v433 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_LOAD
fence: STORE_LOAD
location: GC-Card
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.MembarNode.memoryBarrier(MembarNode$FenceKind, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:228) [bci: 285] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: i454 
=== Usages ===
=== Predecessor ===
v429 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: i454  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i454 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:229) [bci: 294] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v719 
lastLocationAccess: - 
=== Succesors ===
next: v437 
=== Usages ===
v461 
=== Predecessor ===
v433 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v719 lastLocationAccess: - #next: v437  <|@  <|@
f <@~|@floating>@ <|@
tid v461 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:230) [bci: 308] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i454 
y: i304 
=== Succesors ===
=== Usages ===
v437 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i454 y: i304  <|@  <|@
f <@*|@fixed>@ <|@
tid v437 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:230) [bci: 319] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v461 
=== Succesors ===
trueSuccessor: v436 
falseSuccessor: v434 
=== Usages ===
=== Predecessor ===
i454 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v461 #trueSuccessor: v436 #falseSuccessor: v434  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v28|QWORD[*] + v14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" 
    xhandlers
    flags 
    probability 4589917419268529874
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v436 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v435 
=== Usages ===
=== Predecessor ===
v437 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v435  <|@  <|@
f <@*|@fixed>@ <|@
tid v435 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v424 
=== Predecessor ===
v436 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B33 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v434 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:231) [bci: 322] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v455 
=== Usages ===
=== Predecessor ===
v437 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v455  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v455 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:232) [bci: 358] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v719 
lastLocationAccess: - 
value: i304 
stateAfter: - 
=== Succesors ===
next: j456 
=== Usages ===
=== Predecessor ===
v434 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v719 lastLocationAccess: - value: i304 stateAfter: - #next: j456  <|@  <|@
f <@~|@floating>@ <|@
tid v716 <|@
result [r15|QWORD + 72] <|@
d <@d|@=== Debug Properties ===
displacement: 72
stamp: void*
stride: S1
=== Inputs ===
base: j413 
index: - 
=== Succesors ===
=== Usages ===
j456 v459 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j413 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j456 <|@
result v29|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:237) [bci: 378] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v716 
lastLocationAccess: - 
=== Succesors ===
next: v442 
=== Usages ===
v439 j452 v718 
=== Predecessor ===
v455 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v716 lastLocationAccess: - #next: v442  <|@  <|@
f <@~|@floating>@ <|@
tid v439 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:238) [bci: 392] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j456 
y: j243 
=== Succesors ===
=== Usages ===
v442 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j456 y: j243  <|@  <|@
f <@~|@floating>@ <|@
tid j450 <|@
result v30|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.cardTableAddress(HotSpotG1WriteBarrierSnippets.java:131) [bci: 28]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 232] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: i64 [140438306553856 - 36169235325517823] bits:00000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j428 
y: j327 
=== Succesors ===
=== Usages ===
v446 v458 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j428 y: j327  <|@  <|@
f <@*|@fixed>@ <|@
tid v442 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:238) [bci: 398] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v439 
=== Succesors ===
trueSuccessor: v441 
falseSuccessor: v440 
=== Usages ===
=== Predecessor ===
j456 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v439 #trueSuccessor: v441 #falseSuccessor: v440  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v28|QWORD[*] + v14|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD[*] = ADD (x: v28|QWORD[*], y: v14|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v29|QWORD, y: v29|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v441 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:247) [bci: 458] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v446 
=== Usages ===
=== Predecessor ===
v442 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v446  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v446 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_post(Word)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-Card-Queue-Index, GC-Card-Queue-Buffer, GC-Card-Queue-Log, GC-Card], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_post
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostBarrierStub(ForeignCallDescriptor, Word) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostBarrierStub(G1WriteBarrierSnippets.java:413) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:247) [bci: 461] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: j450 
=== Succesors ===
next: v447 
=== Usages ===
=== Predecessor ===
v441 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: j450 #next: v447  <|@  <|@
f <@*|@fixed>@ <|@
tid v447 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v424 
=== Predecessor ===
v446 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v30|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v440 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:239) [bci: 401] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: j457 
=== Usages ===
=== Predecessor ===
v442 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j457  <|@  <|@
f <@~|@floating>@ <|@
tid v717 <|@
result [r15|QWORD + 88] <|@
d <@d|@=== Debug Properties ===
displacement: 88
stamp: void*
stride: S1
=== Inputs ===
base: j413 
index: - 
=== Succesors ===
=== Usages ===
j457 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j413 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j457 <|@
result v31|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:239) [bci: 410] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v717 
lastLocationAccess: - 
=== Succesors ===
next: v458 
=== Usages ===
v718 
=== Predecessor ===
v440 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v717 lastLocationAccess: - #next: v458  <|@  <|@
f <@~|@floating>@ <|@
tid v718 <|@
result [v31|QWORD + v29|QWORD * 1 - 8] <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j457 
index: j456 
=== Succesors ===
=== Usages ===
v458 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j457 index: j456  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v458 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card-Queue-Log
location: GC-Card-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:244) [bci: 438] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v718 
lastLocationAccess: - 
value: j450 
stateAfter: - 
=== Succesors ===
next: v459 
=== Usages ===
=== Predecessor ===
j457 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v718 lastLocationAccess: - value: j450 stateAfter: - #next: v459  <|@  <|@
f <@~|@floating>@ <|@
tid j452 <|@
result v32|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:240) [bci: 424] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: i64
=== Inputs ===
x: j456 
y: j295 
=== Succesors ===
=== Usages ===
v459 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j456 y: j295  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v459 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card-Queue-Index
location: GC-Card-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:245) [bci: 452] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v716 
lastLocationAccess: - 
value: j452 
stateAfter: - 
=== Succesors ===
next: v445 
=== Usages ===
=== Predecessor ===
v458 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v716 lastLocationAccess: - value: j452 stateAfter: - #next: v445  <|@  <|@
f <@*|@fixed>@ <|@
tid v445 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v424 
=== Predecessor ===
v459 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v31|QWORD + v29|QWORD * 1 - 8], y: v30|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = LEA [v29|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v32|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B27" "B29" "B31" "B33" "B36" "B35" 
    successors "B38" "B94" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v424 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v423 v425 v430 v435 v445 v447 
=== Succesors ===
next: v20 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v423 v425 v430 v435 v445 v447 #next: v20  <|@  <|@
f <@~|@floating>@ <|@
tid v170 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a681 
=== Succesors ===
=== Usages ===
v20 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a681  <|@  <|@
f <@*|@fixed>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
profileData: PROFILED designatedSuccessorProbability: 0.8674348032491496
stamp: void
=== Inputs ===
condition: v170 
=== Succesors ===
trueSuccessor: v19 
falseSuccessor: v18 
=== Usages ===
=== Predecessor ===
v424 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v170 #trueSuccessor: v19 #falseSuccessor: v18  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v5|DWORD[_], y: v5|DWORD[_]) trueDestinationProbability: 0.8674348032491496 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B94 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B93" 
    xhandlers
    flags 
    probability 4605988377658638555
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 56]
stamp: void
=== Inputs ===
=== Succesors ===
next: i683 
=== Usages ===
=== Predecessor ===
v20 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i683  <|@  <|@
tid ?16 <|@
d <@d|@=== Debug Properties ===
bci: 53
bytecode: ifnonnull
code: ResolvedJavaMethodBytecode<HashMap$HashIterator.nextNode()>
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
sourceFile: HashMap.java
sourceLine: 1608
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a126 a1 - a104 
=== Succesors ===
=== Usages ===
v739 i683 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a126 a1 - a104  <|@  <|@
f <@~|@floating>@ <|@
tid v698 <|@
result [v3|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a679 
=== Succesors ===
=== Usages ===
i683 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a679  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i683 <|@
result v33|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-34315|0xffffffffffff79f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 73]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?16 
guard: - 
address: v698 
lastLocationAccess: - 
=== Succesors ===
next: i684 
=== Usages ===
v31 v58 v143 v207 j195 i196 v204 
=== Predecessor ===
v19 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?16 guard: - address: v698 lastLocationAccess: - #next: i684  <|@  <|@
f <@~|@floating>@ <|@
tid v699 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i684 v141 v155 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i684 <|@
result v34|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: HashMap$HashIterator.index
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 69]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v699 
lastLocationAccess: - 
=== Succesors ===
next: v61 
=== Usages ===
v58 i63 v143 v700 
=== Predecessor ===
i683 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v699 lastLocationAccess: - #next: v61  <|@  <|@
f <@~|@floating>@ <|@
tid v58 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 74]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@4dc6bd49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i684 
y: i683 
=== Succesors ===
=== Usages ===
v61 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i684 y: i683  <|@  <|@
f <@*|@fixed>@ <|@
tid v61 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 74]
profileData: PROFILED designatedSuccessorProbability: 0.9812627296505405
stamp: void
=== Inputs ===
condition: v58 
=== Succesors ===
trueSuccessor: v60 
falseSuccessor: v59 
=== Usages ===
=== Predecessor ===
i684 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v58 #trueSuccessor: v60 #falseSuccessor: v59  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
stack: v26|QWORD[.] 
locals: v0|QWORD[.] - v12|QWORD[.] 
>@ <|@ instruction v33|DWORD = MOV [v3|DWORD[_] * 8 + 12] size: DWORD state [bci:53] <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v33|DWORD, y: v34|DWORD) trueDestinationProbability: 0.9812627296505405 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B93 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B92" 
    xhandlers
    flags 
    probability 4605841980402785416
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v60 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 77]
stamp: void
=== Inputs ===
=== Succesors ===
next: v225 
=== Usages ===
=== Predecessor ===
v61 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v225  <|@  <|@
f <@~|@floating>@ <|@
tid v143 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 90]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@40aab068
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i684 
y: i683 
=== Succesors ===
=== Usages ===
v225 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i684 y: i683  <|@  <|@
f <@*|@fixed>@ <|@
tid v225 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 90]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v143 
=== Succesors ===
trueSuccessor: v222 
falseSuccessor: v224 
=== Usages ===
=== Predecessor ===
v60 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v143 #trueSuccessor: v222 #falseSuccessor: v224  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v33|DWORD, y: v34|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B92 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4605841980402785416
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v222 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: v141 
=== Usages ===
=== Predecessor ===
v225 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v141  <|@  <|@
f <@~|@floating>@ <|@
tid i40 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 85]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i41 i63 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i63 <|@
result v35|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 86]
stamp: i32
=== Inputs ===
x: i684 
y: i40 
=== Succesors ===
=== Usages ===
v141 i87 i196 j687 v204 v207 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i684 y: i40  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v141 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: HashMap$HashIterator.index
location: HashMap$HashIterator.index
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 87]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v699 
lastLocationAccess: - 
value: i63 
stateAfter: - 
=== Succesors ===
next: v507 
=== Usages ===
=== Predecessor ===
v222 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v699 lastLocationAccess: - value: i63 stateAfter: - #next: v507  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v507 <|@
d <@d|@=== Debug Properties ===
locations: [GC-SATB-Queue-Log, GC-SATB-Marking-Active, GC-SATB-Queue-Index, GC-SATB-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: j468 
=== Usages ===
=== Predecessor ===
v141 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j468  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j468 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:127) [bci: 10]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j469 
=== Usages ===
v720 v722 v723 
=== Predecessor ===
v507 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j469  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j469 <|@
result [v0|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:129) [bci: 21]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v691 
=== Succesors ===
next: i494 
=== Usages ===
v721 
=== Predecessor ===
j468 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: v691 #next: i494  <|@  <|@
f <@~|@floating>@ <|@
tid v720 <|@
result [r15|QWORD + 64] <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: j468 
index: - 
=== Succesors ===
=== Usages ===
i494 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j468 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i494 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Marking-Active
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:130) [bci: 35]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v720 
lastLocationAccess: - 
=== Succesors ===
next: v473 
=== Usages ===
v501 
=== Predecessor ===
j469 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v720 lastLocationAccess: - #next: v473  <|@  <|@
f <@~|@floating>@ <|@
tid v501 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i494 
y: i304 
=== Succesors ===
=== Usages ===
v473 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i494 y: i304  <|@  <|@
f <@*|@fixed>@ <|@
tid v473 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 217]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v501 
=== Succesors ===
trueSuccessor: v472 
falseSuccessor: v471 
=== Usages ===
=== Predecessor ===
i494 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v501 #trueSuccessor: v472 #falseSuccessor: v471  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = INC v34|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v35|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B47" 
    xhandlers
    flags 
    probability 4605075304317034516
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v472 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: v476 
=== Usages ===
=== Predecessor ===
v473 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v476  <|@  <|@
f <@*|@fixed>@ <|@
tid v476 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v477 
=== Predecessor ===
v472 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B41 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4590797829349172127
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v471 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:150) [bci: 220]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: a495 
=== Usages ===
=== Predecessor ===
v473 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a495  <|@  <|@
f <@~|@floating>@ <|@
tid v721 <|@
result [v36|QWORD[.+]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j469 
index: - 
=== Succesors ===
=== Usages ===
a495 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j469 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a495 <|@
result v37|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v721 
lastLocationAccess: - 
=== Succesors ===
next: v480 
=== Usages ===
a496 v502 
=== Predecessor ===
v471 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v721 lastLocationAccess: - #next: v480  <|@  <|@
f <@~|@floating>@ <|@
tid v502 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 296]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a495 
=== Succesors ===
=== Usages ===
v480 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a495  <|@  <|@
f <@*|@fixed>@ <|@
tid v480 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 307]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v502 
=== Succesors ===
trueSuccessor: v479 
falseSuccessor: v475 
=== Usages ===
=== Predecessor ===
a495 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v502 #trueSuccessor: v479 #falseSuccessor: v475  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[.+] = LEA [v0|QWORD[.] + 20] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v37|DWORD[_] = MOV [v36|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v37|DWORD[_], y: v37|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B47" 
    xhandlers
    flags 
    probability 4576060348729859198
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v479 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: v478 
=== Usages ===
=== Predecessor ===
v480 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v478  <|@  <|@
f <@*|@fixed>@ <|@
tid v478 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v477 
=== Predecessor ===
v479 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B43 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4590184488480571407
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v475 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:163) [bci: 310]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: j497 
=== Usages ===
=== Predecessor ===
v480 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j497  <|@  <|@
f <@~|@floating>@ <|@
tid v722 <|@
result [r15|QWORD + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: j468 
index: - 
=== Succesors ===
=== Usages ===
j497 v500 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j468 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j497 <|@
result v38|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:166) [bci: 327]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v722 
lastLocationAccess: - 
=== Succesors ===
next: v485 
=== Usages ===
v482 j493 v724 
=== Predecessor ===
v475 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v722 lastLocationAccess: - #next: v485  <|@  <|@
f <@~|@floating>@ <|@
tid v482 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 341]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j497 
y: j243 
=== Succesors ===
=== Usages ===
v485 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j497 y: j243  <|@  <|@
f <@~|@floating>@ <|@
tid a496 <|@
result v39|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a495 
=== Succesors ===
=== Usages ===
j487 v490 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a495  <|@  <|@
f <@*|@fixed>@ <|@
tid v485 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 347]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v482 
=== Succesors ===
trueSuccessor: v484 
falseSuccessor: v483 
=== Usages ===
=== Predecessor ===
j497 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v482 #trueSuccessor: v484 #falseSuccessor: v483  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v39|QWORD[.] = UNCOMPRESSPOINTER (input: v37|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v38|QWORD, y: v38|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4575482130661533308
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v484 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 410]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: v490 
=== Usages ===
=== Predecessor ===
v485 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v490  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v490 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_pre(Object)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-SATB-Queue-Index, GC-SATB-Queue-Buffer, GC-SATB-Queue-Log], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_pre
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(ForeignCallDescriptor, Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(G1WriteBarrierSnippets.java:409) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 413]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: a496 
=== Succesors ===
next: v491 
=== Usages ===
=== Predecessor ===
v484 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: a496 #next: v491  <|@  <|@
f <@*|@fixed>@ <|@
tid v491 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v477 
=== Predecessor ===
v490 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v39|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4589632481698830759
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v483 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 350]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: j498 
=== Usages ===
=== Predecessor ===
v485 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j498  <|@  <|@
f <@~|@floating>@ <|@
tid v723 <|@
result [r15|QWORD + 56] <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: j468 
index: - 
=== Succesors ===
=== Usages ===
j498 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j468 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j498 <|@
result v40|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 359]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v723 
lastLocationAccess: - 
=== Succesors ===
next: j487 
=== Usages ===
v724 
=== Predecessor ===
v483 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v723 lastLocationAccess: - #next: j487  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j487 <|@
result v39|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 384]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a496 
=== Succesors ===
next: v499 
=== Usages ===
v499 
=== Predecessor ===
j498 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a496 #next: v499  <|@  <|@
f <@~|@floating>@ <|@
tid v724 <|@
result [v40|QWORD + v38|QWORD * 1 - 8] <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j498 
index: j497 
=== Succesors ===
=== Usages ===
v499 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j498 index: j497  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v499 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Log
location: GC-SATB-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 390]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v724 
lastLocationAccess: - 
value: j487 
stateAfter: - 
=== Succesors ===
next: v500 
=== Usages ===
=== Predecessor ===
j487 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v724 lastLocationAccess: - value: j487 stateAfter: - #next: v500  <|@  <|@
f <@~|@floating>@ <|@
tid j493 <|@
result v41|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: i64
=== Inputs ===
x: j497 
y: j295 
=== Succesors ===
=== Usages ===
v500 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j497 y: j295  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v500 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Index
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:173) [bci: 404]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v722 
lastLocationAccess: - 
value: j493 
stateAfter: - 
=== Succesors ===
next: v489 
=== Usages ===
=== Predecessor ===
v499 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v722 lastLocationAccess: - value: j493 stateAfter: - #next: v489  <|@  <|@
f <@*|@fixed>@ <|@
tid v489 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v477 
=== Predecessor ===
v500 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v40|QWORD + v38|QWORD * 1 - 8], y: v39|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = LEA [v38|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v41|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B41" "B43" "B46" "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4605841980402785416
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v477 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v476 v478 v489 v491 
=== Succesors ===
next: a685 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v476 v478 v489 v491 #next: a685  <|@  <|@
f <@~|@floating>@ <|@
tid a132 <|@
result v42|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 60]
op: Uncompress
stamp: a java.util.HashMap$Node[]
=== Inputs ===
value: a679 
=== Succesors ===
=== Usages ===
v701 ?68 v700 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a679  <|@  <|@
f <@~|@floating>@ <|@
tid v700 <|@
result [v42|QWORD[.] + v34|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a132 
index: i684 
=== Succesors ===
=== Usages ===
a685 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a132 index: i684  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a685 <|@
result v43|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.HashMap$Node
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 90]
stamp: n java.util.HashMap$Node
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v700 
lastLocationAccess: - 
=== Succesors ===
next: v154 
=== Usages ===
a152 v172 v154 
=== Predecessor ===
v477 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v700 lastLocationAccess: - #next: v154  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v154 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: HashMap$HashIterator.next
location: HashMap$HashIterator.next
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v691 
lastLocationAccess: - 
value: a685 
stateAfter: - 
=== Succesors ===
next: v562 
=== Usages ===
=== Predecessor ===
a685 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v691 lastLocationAccess: - value: a685 stateAfter: - #next: v562  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v562 <|@
d <@d|@=== Debug Properties ===
locations: [GC-Card, GC-Card-Queue-Log, GC-Card-Queue-Index, GC-Card-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: j508 
=== Usages ===
=== Predecessor ===
v154 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j508  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j508 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:184) [bci: 1] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: a509 
=== Usages ===
v725 v726 
=== Predecessor ===
v562 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: a509  <|@  <|@
f <@~|@floating>@ <|@
tid a152 <|@
result v44|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 90]
op: Uncompress
stamp: a java.util.HashMap$Node
=== Inputs ===
value: a685 
=== Succesors ===
=== Usages ===
?68 a509 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a685  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a509 <|@
result v44|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.FixedValueAnchorNode.getObject(Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:185) [bci: 7] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: a java.util.HashMap$Node
=== Inputs ===
object: a152 
=== Succesors ===
next: j510 
=== Usages ===
j511 
=== Predecessor ===
j508 >@ <|@
instruction <@FixedValueAnchor|@jdk.graal.compiler.nodes.extended.FixedValueAnchorNode>@ object: a152 #next: j510  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j510 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:197) [bci: 56] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: j511 
=== Usages ===
j512 j523 
=== Predecessor ===
a509 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a1 #next: j511  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j511 <|@
result v44|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:208) [bci: 150] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a509 
=== Succesors ===
next: v515 
=== Usages ===
j512 v516 
=== Predecessor ===
j510 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a509 #next: v515  <|@  <|@
f <@~|@floating>@ <|@
tid j512 <|@
result v45|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:212) [bci: 165] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: i64
=== Inputs ===
x: j510 
y: j511 
=== Succesors ===
=== Usages ===
v544 
=== Predecessor ===
- >@ <|@
instruction <@^|@jdk.graal.compiler.nodes.calc.XorNode>@ x: j510 y: j511  <|@  <|@
f <@~|@floating>@ <|@
tid v544 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:215) [bci: 193] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
x: j512 
y: j350 
=== Succesors ===
=== Usages ===
v515 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@jdk.graal.compiler.nodes.calc.IntegerTestNode>@ x: j512 y: j350  <|@  <|@
f <@*|@fixed>@ <|@
tid v515 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:215) [bci: 201] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v544 
=== Succesors ===
trueSuccessor: v514 
falseSuccessor: v513 
=== Usages ===
=== Predecessor ===
j511 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v544 #trueSuccessor: v514 #falseSuccessor: v513  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v42|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v43|DWORD[_] = MOV [v42|QWORD[.] + v34|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v43|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = UNCOMPRESSPOINTER (input: v43|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v45|QWORD[*] = XOR (x: v0|QWORD[.], y: v44|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v45|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B58" 
    xhandlers
    flags 
    probability 4590797829349172127
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v514 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: v518 
=== Usages ===
=== Predecessor ===
v515 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v518  <|@  <|@
f <@*|@fixed>@ <|@
tid v518 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v519 
=== Predecessor ===
v514 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B48 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4605075304317034516
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v513 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:216) [bci: 204] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: v522 
=== Usages ===
=== Predecessor ===
v515 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v522  <|@  <|@
f <@~|@floating>@ <|@
tid v516 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:218) [bci: 218] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j511 
y: j243 
=== Succesors ===
=== Usages ===
v522 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j511 y: j243  <|@  <|@
f <@*|@fixed>@ <|@
tid v522 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:218) [bci: 226] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v516 
=== Succesors ===
trueSuccessor: v521 
falseSuccessor: v517 
=== Usages ===
=== Predecessor ===
v513 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v516 #trueSuccessor: v521 #falseSuccessor: v517  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v44|QWORD[.], y: v44|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B58" 
    xhandlers
    flags 
    probability 4590184488480571407
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v521 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: v520 
=== Usages ===
=== Predecessor ===
v522 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v520  <|@  <|@
f <@*|@fixed>@ <|@
tid v520 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v519 
=== Predecessor ===
v521 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B50 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4604385295839858706
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v517 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 229] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: i548 
=== Usages ===
=== Predecessor ===
v522 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i548  <|@  <|@
f <@~|@floating>@ <|@
tid j523 <|@
result v46|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.cardTableAddress(HotSpotG1WriteBarrierSnippets.java:131) [bci: 23]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 232] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: i64 [0 - 36028797018963967] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j510 
y: i328 
=== Succesors ===
=== Usages ===
j545 v728 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j510 y: i328  <|@  <|@
f <@~|@floating>@ <|@
tid v728 <|@
result [v46|QWORD[*] + v14|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j523 
index: j327 
=== Succesors ===
=== Usages ===
i548 i549 v550 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j523 index: j327  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i548 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:223) [bci: 243] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v728 
lastLocationAccess: - 
=== Succesors ===
next: v527 
=== Usages ===
v555 
=== Predecessor ===
v517 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v728 lastLocationAccess: - #next: v527  <|@  <|@
f <@~|@floating>@ <|@
tid v555 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:227) [bci: 265] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i548 
y: i364 
=== Succesors ===
=== Usages ===
v527 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i548 y: i364  <|@  <|@
f <@*|@fixed>@ <|@
tid v527 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:227) [bci: 276] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v555 
=== Succesors ===
trueSuccessor: v526 
falseSuccessor: v524 
=== Usages ===
=== Predecessor ===
i548 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v555 #trueSuccessor: v526 #falseSuccessor: v524  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v46|QWORD[*] + v14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B58" 
    xhandlers
    flags 
    probability 4603764288210400477
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v526 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: v525 
=== Usages ===
=== Predecessor ===
v527 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v525  <|@  <|@
f <@*|@fixed>@ <|@
tid v525 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v519 
=== Predecessor ===
v526 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B52 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4589632481698830759
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v524 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:228) [bci: 279] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: v528 
=== Usages ===
=== Predecessor ===
v527 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v528  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v528 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_LOAD
fence: STORE_LOAD
location: GC-Card
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.MembarNode.memoryBarrier(MembarNode$FenceKind, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:228) [bci: 285] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: i549 
=== Usages ===
=== Predecessor ===
v524 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: i549  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i549 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:229) [bci: 294] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v728 
lastLocationAccess: - 
=== Succesors ===
next: v532 
=== Usages ===
v556 
=== Predecessor ===
v528 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v728 lastLocationAccess: - #next: v532  <|@  <|@
f <@~|@floating>@ <|@
tid v556 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:230) [bci: 308] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i549 
y: i304 
=== Succesors ===
=== Usages ===
v532 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i549 y: i304  <|@  <|@
f <@*|@fixed>@ <|@
tid v532 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:230) [bci: 319] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v556 
=== Succesors ===
trueSuccessor: v531 
falseSuccessor: v529 
=== Usages ===
=== Predecessor ===
i549 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v556 #trueSuccessor: v531 #falseSuccessor: v529  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v46|QWORD[*] + v14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B58" 
    xhandlers
    flags 
    probability 4589103330899992928
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v531 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: v530 
=== Usages ===
=== Predecessor ===
v532 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v530  <|@  <|@
f <@*|@fixed>@ <|@
tid v530 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v519 
=== Predecessor ===
v531 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B54 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4574598919810748272
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v529 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:231) [bci: 322] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: v550 
=== Usages ===
=== Predecessor ===
v532 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v550  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v550 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:232) [bci: 358] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v728 
lastLocationAccess: - 
value: i304 
stateAfter: - 
=== Succesors ===
next: j551 
=== Usages ===
=== Predecessor ===
v529 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v728 lastLocationAccess: - value: i304 stateAfter: - #next: j551  <|@  <|@
f <@~|@floating>@ <|@
tid v725 <|@
result [r15|QWORD + 72] <|@
d <@d|@=== Debug Properties ===
displacement: 72
stamp: void*
stride: S1
=== Inputs ===
base: j508 
index: - 
=== Succesors ===
=== Usages ===
j551 v554 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j508 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j551 <|@
result v47|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:237) [bci: 378] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v725 
lastLocationAccess: - 
=== Succesors ===
next: v537 
=== Usages ===
v534 j547 v727 
=== Predecessor ===
v550 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v725 lastLocationAccess: - #next: v537  <|@  <|@
f <@~|@floating>@ <|@
tid v534 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:238) [bci: 392] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j551 
y: j243 
=== Succesors ===
=== Usages ===
v537 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j551 y: j243  <|@  <|@
f <@~|@floating>@ <|@
tid j545 <|@
result v48|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.cardTableAddress(HotSpotG1WriteBarrierSnippets.java:131) [bci: 28]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 232] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: i64 [140438306553856 - 36169235325517823] bits:00000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j523 
y: j327 
=== Succesors ===
=== Usages ===
v541 v553 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j523 y: j327  <|@  <|@
f <@*|@fixed>@ <|@
tid v537 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:238) [bci: 398] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v534 
=== Succesors ===
trueSuccessor: v536 
falseSuccessor: v535 
=== Usages ===
=== Predecessor ===
j551 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v534 #trueSuccessor: v536 #falseSuccessor: v535  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v46|QWORD[*] + v14|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[*] = ADD (x: v46|QWORD[*], y: v14|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v47|QWORD, y: v47|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4559498341397223717
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v536 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:247) [bci: 458] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: v541 
=== Usages ===
=== Predecessor ===
v537 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v541  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v541 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_post(Word)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-Card-Queue-Index, GC-Card-Queue-Buffer, GC-Card-Queue-Log, GC-Card], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_post
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostBarrierStub(ForeignCallDescriptor, Word) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostBarrierStub(G1WriteBarrierSnippets.java:413) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:247) [bci: 461] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: j545 
=== Succesors ===
next: v542 
=== Usages ===
=== Predecessor ===
v536 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: j545 #next: v542  <|@  <|@
f <@*|@fixed>@ <|@
tid v542 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v519 
=== Predecessor ===
v541 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v48|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4573804030045041739
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v535 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:239) [bci: 401] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: j552 
=== Usages ===
=== Predecessor ===
v537 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j552  <|@  <|@
f <@~|@floating>@ <|@
tid v726 <|@
result [r15|QWORD + 88] <|@
d <@d|@=== Debug Properties ===
displacement: 88
stamp: void*
stride: S1
=== Inputs ===
base: j508 
index: - 
=== Succesors ===
=== Usages ===
j552 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j508 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j552 <|@
result v49|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:239) [bci: 410] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v726 
lastLocationAccess: - 
=== Succesors ===
next: v553 
=== Usages ===
v727 
=== Predecessor ===
v535 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v726 lastLocationAccess: - #next: v553  <|@  <|@
f <@~|@floating>@ <|@
tid v727 <|@
result [v49|QWORD + v47|QWORD * 1 - 8] <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j552 
index: j551 
=== Succesors ===
=== Usages ===
v553 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j552 index: j551  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v553 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card-Queue-Log
location: GC-Card-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:244) [bci: 438] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v727 
lastLocationAccess: - 
value: j545 
stateAfter: - 
=== Succesors ===
next: v554 
=== Usages ===
=== Predecessor ===
j552 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v727 lastLocationAccess: - value: j545 stateAfter: - #next: v554  <|@  <|@
f <@~|@floating>@ <|@
tid j547 <|@
result v50|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:240) [bci: 424] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: i64
=== Inputs ===
x: j551 
y: j295 
=== Succesors ===
=== Usages ===
v554 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j551 y: j295  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v554 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card-Queue-Index
location: GC-Card-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:245) [bci: 452] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v725 
lastLocationAccess: - 
value: j547 
stateAfter: - 
=== Succesors ===
next: v540 
=== Usages ===
=== Predecessor ===
v553 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v725 lastLocationAccess: - value: j547 stateAfter: - #next: v540  <|@  <|@
f <@*|@fixed>@ <|@
tid v540 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v519 
=== Predecessor ===
v554 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v49|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v49|QWORD + v47|QWORD * 1 - 8], y: v48|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v50|QWORD = LEA [v47|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v50|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B48" "B50" "B52" "B54" "B57" "B56" 
    successors "B59" "B91" 
    xhandlers
    flags 
    probability 4605841980402785416
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v519 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v518 v520 v525 v530 v540 v542 
=== Succesors ===
next: v73 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v518 v520 v525 v530 v540 v542 #next: v73  <|@  <|@
f <@~|@floating>@ <|@
tid v172 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 95]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a685 
=== Succesors ===
=== Usages ===
v73 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a685  <|@  <|@
f <@*|@fixed>@ <|@
tid v73 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 95]
profileData: PROFILED designatedSuccessorProbability: 0.8739340370331193
stamp: void
=== Inputs ===
condition: v172 
=== Succesors ===
trueSuccessor: v72 
falseSuccessor: v70 
=== Usages ===
=== Predecessor ===
v519 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v172 #trueSuccessor: v72 #falseSuccessor: v70  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v43|DWORD[_], y: v43|DWORD[_]) trueDestinationProbability: 0.8739340370331193 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B91 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B66" 
    xhandlers
    flags 
    probability 4604875462812446756
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v72 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 68]
stamp: void
=== Inputs ===
=== Succesors ===
next: v668 
=== Usages ===
=== Predecessor ===
v73 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v668  <|@  <|@
f <@~|@floating>@ <|@
tid v207 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 90]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@4dc6bd49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i63 
y: i683 
=== Succesors ===
=== Usages ===
v668 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i63 y: i683  <|@  <|@
f <@*|@fixed>@ <|@
tid v668 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 90]
profileData: INJECTED designatedSuccessorProbability: 0.5
stamp: void
=== Inputs ===
condition: v207 
=== Succesors ===
trueSuccessor: v667 
falseSuccessor: v664 
=== Usages ===
=== Predecessor ===
v72 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v207 #trueSuccessor: v667 #falseSuccessor: v664  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v33|DWORD, y: v35|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B59 -> B60 falseDestination: B59 -> B66 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B64" 
    xhandlers
    flags 
    probability 4600371863185076260
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v667 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: v676 
=== Usages ===
=== Predecessor ===
v668 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v676  <|@  <|@
f <@~|@floating>@ <|@
tid i196 <|@
result v51|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
x: i683 
y: i63 
=== Succesors ===
=== Usages ===
j199 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i683 y: i63  <|@  <|@
f <@~|@floating>@ <|@
tid j199 <|@
result v52|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i196 
=== Succesors ===
=== Usages ===
j238 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i196  <|@  <|@
f <@~|@floating>@ <|@
tid j687 <|@
result v53|QWORD <|@
d <@d|@=== Debug Properties ===
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i63 
=== Succesors ===
=== Usages ===
j238 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i63  <|@  <|@
f <@~|@floating>@ <|@
tid j238 <|@
result v54|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64 [-2147483648 - 6442450942]
=== Inputs ===
x: j199 
y: j687 
=== Succesors ===
=== Usages ===
j239 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j199 y: j687  <|@  <|@
f <@~|@floating>@ <|@
tid j200 <|@
result long[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1]
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j239 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j239 <|@
result v55|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64 [-2147483649 - 6442450941]
=== Inputs ===
x: j238 
y: j200 
=== Succesors ===
=== Usages ===
v203 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j238 y: j200  <|@  <|@
f <@~|@floating>@ <|@
tid j195 <|@
result v56|QWORD <|@
d <@d|@=== Debug Properties ===
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i683 
=== Succesors ===
=== Usages ===
v203 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i683  <|@  <|@
f <@~|@floating>@ <|@
tid v203 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@40aab068
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j239 
y: j195 
=== Succesors ===
=== Usages ===
v676 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j239 y: j195  <|@  <|@
f <@*|@fixed>@ <|@
tid v676 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 90]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v203 
=== Succesors ===
trueSuccessor: v675 
falseSuccessor: v672 
=== Usages ===
=== Predecessor ===
v667 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v203 #trueSuccessor: v675 #falseSuccessor: v672  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = SUB (x: v33|DWORD, ~y: v35|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = MOVSXD v51|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v53|QWORD = MOV v35|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD = ADD (x: v52|QWORD, y: v53|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v55|QWORD = DEC v54|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v56|QWORD = MOV v33|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v56|QWORD, y: v55|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B60 -> B61 falseDestination: B60 -> B64 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4600371863185076260
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v675 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: v674 
=== Usages ===
=== Predecessor ===
v676 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v674  <|@  <|@
f <@~|@floating>@ <|@
tid v204 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@40aab068
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i63 
y: i683 
=== Succesors ===
=== Usages ===
v674 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i63 y: i683  <|@  <|@
f <@*|@fixed>@ <|@
tid v674 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 90]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v204 
=== Succesors ===
trueSuccessor: v665 
falseSuccessor: v673 
=== Usages ===
=== Predecessor ===
v675 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v204 #trueSuccessor: v665 #falseSuccessor: v673  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v33|DWORD, y: v35|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B61 -> B62 falseDestination: B61 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B67" 
    xhandlers
    flags 
    probability 4600371863185076260
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v665 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: v663 
=== Usages ===
=== Predecessor ===
v674 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v663  <|@  <|@
f <@*|@fixed>@ <|@
tid v663 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v661 
=== Predecessor ===
v665 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B62 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v673 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: v671 
=== Usages ===
=== Predecessor ===
v674 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v671  <|@  <|@
f <@*|@fixed>@ <|@
tid v671 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v669 
=== Predecessor ===
v673 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v672 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: v670 
=== Usages ===
=== Predecessor ===
v676 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v670  <|@  <|@
f <@*|@fixed>@ <|@
tid v670 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v669 
=== Predecessor ===
v672 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B64 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" "B63" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v669 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 90]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v670 v671 
=== Succesors ===
next: v227 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v670 v671 #next: v227  <|@  <|@
tid ?68 <|@
d <@d|@=== Debug Properties ===
bci: 95
bytecode: ifnull
code: ResolvedJavaMethodBytecode<HashMap$HashIterator.nextNode()>
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
sourceFile: HashMap.java
sourceLine: 1609
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a152 a1 a132 a104 
=== Succesors ===
=== Usages ===
v227 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a152 a1 a132 a104  <|@  <|@
f <@*|@fixed>@ <|@
tid v227 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 158
mayConvertToGuard: true
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 90]
reason: BoundsCheckException
speculation: {0x0000000000000798[index: 60, len: 24, hash: 0x57b7955a]: GuardMovement@2[HotSpotMethod<HashMap$HashIterator.nextNode()>, 68, BoundsCheckException]}
stamp: void
=== Inputs ===
stateBefore: ?68 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v669 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?68  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -40475 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 1944 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 95]
stack: v44|QWORD[.] 
locals: v0|QWORD[.] v42|QWORD[.] v12|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:95] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B67" 
    xhandlers
    flags 
    probability 4600371863185076260
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v664 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: v662 
=== Usages ===
=== Predecessor ===
v668 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v662  <|@  <|@
f <@*|@fixed>@ <|@
tid v662 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v661 
=== Predecessor ===
v664 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" "B62" 
    successors "B68" 
    xhandlers
    flags 
    probability 4604875462812446756
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v661 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 90]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v662 v663 
=== Succesors ===
next: v26 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v662 v663 #next: v26  <|@  <|@
f <@*|@fixed>@ <|@
tid v26 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 68]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v27 
=== Predecessor ===
v661 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v35|DWORD] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" "B88" 
    successors "B69" "B90" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4617565855081504432
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i87 <|@
result v57|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 68]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v27 
values: i63 i41 
=== Succesors ===
=== Usages ===
v31 i41 v701 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v27 values: i63 i41  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v27 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: -1
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 68]
osrLoop: false
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v26 
=== Succesors ===
next: v38 
=== Usages ===
v35 v49 v51 i87 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v26 #next: v38  <|@  <|@
f <@~|@floating>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 74]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@4dc6bd49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i87 
y: i683 
=== Succesors ===
=== Usages ===
v38 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i87 y: i683  <|@  <|@
f <@*|@fixed>@ <|@
tid v38 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 74]
profileData: PROFILED designatedSuccessorProbability: 0.9812627296505405
stamp: void
=== Inputs ===
condition: v31 
=== Succesors ===
trueSuccessor: v37 
falseSuccessor: v35 
=== Usages ===
=== Predecessor ===
v27 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v31 #trueSuccessor: v37 #falseSuccessor: v35  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v57|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v33|DWORD, y: v57|DWORD) trueDestinationProbability: 0.9812627296505405 condition: > trueDestination: B68 -> B69 falseDestination: B68 -> B90 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B70" "B71" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617455682992505589
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 77]
stamp: void
=== Inputs ===
=== Succesors ===
next: v155 
=== Usages ===
=== Predecessor ===
v38 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v155  <|@  <|@
f <@~|@floating>@ <|@
tid i41 <|@
result v58|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 86]
stamp: i32
=== Inputs ===
x: i87 
y: i40 
=== Succesors ===
=== Usages ===
v155 i87 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i87 y: i40  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v155 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: HashMap$HashIterator.index
location: HashMap$HashIterator.index
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 87]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v699 
lastLocationAccess: - 
value: i41 
stateAfter: - 
=== Succesors ===
next: v602 
=== Usages ===
=== Predecessor ===
v37 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v699 lastLocationAccess: - value: i41 stateAfter: - #next: v602  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v602 <|@
d <@d|@=== Debug Properties ===
locations: [GC-SATB-Queue-Log, GC-SATB-Marking-Active, GC-SATB-Queue-Index, GC-SATB-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: j563 
=== Usages ===
=== Predecessor ===
v155 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j563  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j563 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:127) [bci: 10]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j564 
=== Usages ===
v729 v731 v732 
=== Predecessor ===
v602 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j564  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j564 <|@
result [v0|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:129) [bci: 21]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v691 
=== Succesors ===
next: i589 
=== Usages ===
v730 
=== Predecessor ===
j563 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: v691 #next: i589  <|@  <|@
f <@~|@floating>@ <|@
tid v729 <|@
result [r15|QWORD + 64] <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: j563 
index: - 
=== Succesors ===
=== Usages ===
i589 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j563 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i589 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Marking-Active
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:130) [bci: 35]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v729 
lastLocationAccess: - 
=== Succesors ===
next: v568 
=== Usages ===
v596 
=== Predecessor ===
j564 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v729 lastLocationAccess: - #next: v568  <|@  <|@
f <@~|@floating>@ <|@
tid v596 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i589 
y: i304 
=== Succesors ===
=== Usages ===
v568 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i589 y: i304  <|@  <|@
f <@*|@fixed>@ <|@
tid v568 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 217]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v596 
=== Succesors ===
trueSuccessor: v567 
falseSuccessor: v566 
=== Usages ===
=== Predecessor ===
i589 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v596 #trueSuccessor: v567 #falseSuccessor: v566  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = INC v57|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v58|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4616878716535993821
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v567 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: v571 
=== Usages ===
=== Predecessor ===
v568 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v571  <|@  <|@
f <@*|@fixed>@ <|@
tid v571 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v572 
=== Predecessor ===
v567 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B70 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" "B73" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602790951197370563
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v566 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:150) [bci: 220]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: a590 
=== Usages ===
=== Predecessor ===
v568 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a590  <|@  <|@
f <@~|@floating>@ <|@
tid v730 <|@
result [v59|QWORD[.+]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j564 
index: - 
=== Succesors ===
=== Usages ===
a590 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j564 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a590 <|@
result v60|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v730 
lastLocationAccess: - 
=== Succesors ===
next: v575 
=== Usages ===
a591 v597 
=== Predecessor ===
v566 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v730 lastLocationAccess: - #next: v575  <|@  <|@
f <@~|@floating>@ <|@
tid v597 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 296]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a590 
=== Succesors ===
=== Usages ===
v575 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a590  <|@  <|@
f <@*|@fixed>@ <|@
tid v575 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 307]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v597 
=== Succesors ===
trueSuccessor: v574 
falseSuccessor: v570 
=== Usages ===
=== Predecessor ===
a590 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v597 #trueSuccessor: v574 #falseSuccessor: v570  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v59|QWORD[.+] = LEA [v0|QWORD[.] + 20] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v60|DWORD[_] = MOV [v59|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v60|DWORD[_], y: v60|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B73 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587545991679145066
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v574 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: v573 
=== Usages ===
=== Predecessor ===
v575 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v573  <|@  <|@
f <@*|@fixed>@ <|@
tid v573 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v572 
=== Predecessor ===
v574 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B72 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" "B75" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601979936891675385
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v570 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:163) [bci: 310]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: j592 
=== Usages ===
=== Predecessor ===
v575 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j592  <|@  <|@
f <@~|@floating>@ <|@
tid v731 <|@
result [r15|QWORD + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: j563 
index: - 
=== Succesors ===
=== Usages ===
j592 v595 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j563 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j592 <|@
result v61|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:166) [bci: 327]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v731 
lastLocationAccess: - 
=== Succesors ===
next: v580 
=== Usages ===
v577 j588 v733 
=== Predecessor ===
v570 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v731 lastLocationAccess: - #next: v580  <|@  <|@
f <@~|@floating>@ <|@
tid v577 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 341]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j592 
y: j243 
=== Succesors ===
=== Usages ===
v580 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j592 y: j243  <|@  <|@
f <@~|@floating>@ <|@
tid a591 <|@
result v62|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a590 
=== Succesors ===
=== Usages ===
j582 v585 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a590  <|@  <|@
f <@*|@fixed>@ <|@
tid v580 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 347]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v577 
=== Succesors ===
trueSuccessor: v579 
falseSuccessor: v578 
=== Usages ===
=== Predecessor ===
j592 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v577 #trueSuccessor: v579 #falseSuccessor: v578  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v61|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v62|QWORD[.] = UNCOMPRESSPOINTER (input: v60|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v61|QWORD, y: v61|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B75 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586807474614810003
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v579 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 410]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: v585 
=== Usages ===
=== Predecessor ===
v580 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v585  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v585 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_pre(Object)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-SATB-Queue-Index, GC-SATB-Queue-Buffer, GC-SATB-Queue-Log], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_pre
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(ForeignCallDescriptor, Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(G1WriteBarrierSnippets.java:409) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 413]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: a591 
=== Succesors ===
next: v586 
=== Usages ===
=== Predecessor ===
v579 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: a591 #next: v586  <|@  <|@
f <@*|@fixed>@ <|@
tid v586 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v572 
=== Predecessor ===
v585 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v62|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601149105194298439
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v578 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 350]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: j593 
=== Usages ===
=== Predecessor ===
v580 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j593  <|@  <|@
f <@~|@floating>@ <|@
tid v732 <|@
result [r15|QWORD + 56] <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: j563 
index: - 
=== Succesors ===
=== Usages ===
j593 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j563 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j593 <|@
result v63|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 359]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v732 
lastLocationAccess: - 
=== Succesors ===
next: j582 
=== Usages ===
v733 
=== Predecessor ===
v578 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v732 lastLocationAccess: - #next: j582  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j582 <|@
result v62|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 384]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a591 
=== Succesors ===
next: v594 
=== Usages ===
v594 
=== Predecessor ===
j593 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a591 #next: v594  <|@  <|@
f <@~|@floating>@ <|@
tid v733 <|@
result [v63|QWORD + v61|QWORD * 1 - 8] <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j593 
index: j592 
=== Succesors ===
=== Usages ===
v594 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j593 index: j592  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v594 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Log
location: GC-SATB-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 390]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v733 
lastLocationAccess: - 
value: j582 
stateAfter: - 
=== Succesors ===
next: v595 
=== Usages ===
=== Predecessor ===
j582 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v733 lastLocationAccess: - value: j582 stateAfter: - #next: v595  <|@  <|@
f <@~|@floating>@ <|@
tid j588 <|@
result v64|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: i64
=== Inputs ===
x: j592 
y: j295 
=== Succesors ===
=== Usages ===
v595 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j592 y: j295  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v595 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Index
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:173) [bci: 404]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v731 
lastLocationAccess: - 
value: j588 
stateAfter: - 
=== Succesors ===
next: v584 
=== Usages ===
=== Predecessor ===
v594 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v731 lastLocationAccess: - value: j588 stateAfter: - #next: v584  <|@  <|@
f <@*|@fixed>@ <|@
tid v584 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v572 
=== Predecessor ===
v595 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v63|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v63|QWORD + v61|QWORD * 1 - 8], y: v62|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v64|QWORD = LEA [v61|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v64|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B70" "B72" "B75" "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617455682992505589
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v572 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v571 v573 v584 v586 
=== Succesors ===
next: a686 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v571 v573 v584 v586 #next: a686  <|@  <|@
f <@~|@floating>@ <|@
tid v701 <|@
result [v42|QWORD[.] + v57|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a132 
index: i87 
=== Succesors ===
=== Usages ===
a686 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a132 index: i87  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a686 <|@
result v65|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.HashMap$Node
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 90]
stamp: n java.util.HashMap$Node
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v701 
lastLocationAccess: - 
=== Succesors ===
next: v167 
=== Usages ===
v167 v174 a603 
=== Predecessor ===
v572 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v701 lastLocationAccess: - #next: v167  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v167 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: HashMap$HashIterator.next
location: HashMap$HashIterator.next
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v691 
lastLocationAccess: - 
value: a686 
stateAfter: - 
=== Succesors ===
next: v658 
=== Usages ===
=== Predecessor ===
a686 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v691 lastLocationAccess: - value: a686 stateAfter: - #next: v658  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v658 <|@
d <@d|@=== Debug Properties ===
locations: [GC-Card, GC-Card-Queue-Log, GC-Card-Queue-Index, GC-Card-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: j604 
=== Usages ===
=== Predecessor ===
v167 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j604  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j604 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:184) [bci: 1] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: a605 
=== Usages ===
v734 v735 
=== Predecessor ===
v658 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: a605  <|@  <|@
f <@~|@floating>@ <|@
tid a603 <|@
result v66|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
op: Uncompress
stamp: a java.util.HashMap$Node
=== Inputs ===
value: a686 
=== Succesors ===
=== Usages ===
a605 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a686  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a605 <|@
result v66|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.FixedValueAnchorNode.getObject(Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:185) [bci: 7] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: a java.util.HashMap$Node
=== Inputs ===
object: a603 
=== Succesors ===
next: j606 
=== Usages ===
j607 
=== Predecessor ===
j604 >@ <|@
instruction <@FixedValueAnchor|@jdk.graal.compiler.nodes.extended.FixedValueAnchorNode>@ object: a603 #next: j606  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j606 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:197) [bci: 56] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: j607 
=== Usages ===
j608 j619 
=== Predecessor ===
a605 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a1 #next: j607  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j607 <|@
result v66|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:208) [bci: 150] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a605 
=== Succesors ===
next: v611 
=== Usages ===
j608 v612 
=== Predecessor ===
j606 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a605 #next: v611  <|@  <|@
f <@~|@floating>@ <|@
tid j608 <|@
result v67|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:212) [bci: 165] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: i64
=== Inputs ===
x: j606 
y: j607 
=== Succesors ===
=== Usages ===
v640 
=== Predecessor ===
- >@ <|@
instruction <@^|@jdk.graal.compiler.nodes.calc.XorNode>@ x: j606 y: j607  <|@  <|@
f <@~|@floating>@ <|@
tid v640 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:215) [bci: 193] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
x: j608 
y: j350 
=== Succesors ===
=== Usages ===
v611 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@jdk.graal.compiler.nodes.calc.IntegerTestNode>@ x: j608 y: j350  <|@  <|@
f <@*|@fixed>@ <|@
tid v611 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:215) [bci: 201] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v640 
=== Succesors ===
trueSuccessor: v610 
falseSuccessor: v609 
=== Usages ===
=== Predecessor ===
j607 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v640 #trueSuccessor: v610 #falseSuccessor: v609  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v65|DWORD[_] = MOV [v42|QWORD[.] + v57|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v65|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v66|QWORD[.] = UNCOMPRESSPOINTER (input: v65|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[*] = XOR (x: v0|QWORD[.], y: v66|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v67|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602790951197370563
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v610 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: v614 
=== Usages ===
=== Predecessor ===
v611 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v614  <|@  <|@
f <@*|@fixed>@ <|@
tid v614 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v615 
=== Predecessor ===
v610 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B77 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4616878716535993821
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v609 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:216) [bci: 204] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: v618 
=== Usages ===
=== Predecessor ===
v611 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v618  <|@  <|@
f <@~|@floating>@ <|@
tid v612 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:218) [bci: 218] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j607 
y: j243 
=== Succesors ===
=== Usages ===
v618 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j607 y: j243  <|@  <|@
f <@*|@fixed>@ <|@
tid v618 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:218) [bci: 226] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v612 
=== Succesors ===
trueSuccessor: v617 
falseSuccessor: v613 
=== Usages ===
=== Predecessor ===
v609 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v612 #trueSuccessor: v617 #falseSuccessor: v613  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v66|QWORD[.], y: v66|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601979936891675385
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v617 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: v616 
=== Usages ===
=== Predecessor ===
v618 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v616  <|@  <|@
f <@*|@fixed>@ <|@
tid v616 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v615 
=== Predecessor ===
v617 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B79 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4616359446725133229
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v613 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 229] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: i644 
=== Usages ===
=== Predecessor ===
v618 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i644  <|@  <|@
f <@~|@floating>@ <|@
tid j619 <|@
result v68|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.cardTableAddress(HotSpotG1WriteBarrierSnippets.java:131) [bci: 23]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 232] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: i64 [0 - 36028797018963967] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j606 
y: i328 
=== Succesors ===
=== Usages ===
j641 v737 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j606 y: i328  <|@  <|@
f <@~|@floating>@ <|@
tid v737 <|@
result [v68|QWORD[*] + v14|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j619 
index: j327 
=== Succesors ===
=== Usages ===
i644 i645 v646 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j619 index: j327  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i644 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:223) [bci: 243] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v737 
lastLocationAccess: - 
=== Succesors ===
next: v623 
=== Usages ===
v651 
=== Predecessor ===
v613 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v737 lastLocationAccess: - #next: v623  <|@  <|@
f <@~|@floating>@ <|@
tid v651 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:227) [bci: 265] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i644 
y: i364 
=== Succesors ===
=== Usages ===
v623 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i644 y: i364  <|@  <|@
f <@*|@fixed>@ <|@
tid v623 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:227) [bci: 276] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v651 
=== Succesors ===
trueSuccessor: v622 
falseSuccessor: v620 
=== Usages ===
=== Predecessor ===
i644 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v651 #trueSuccessor: v622 #falseSuccessor: v620  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v68|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v68|QWORD[*] + v14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4615594589735958993
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v622 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: v621 
=== Usages ===
=== Predecessor ===
v623 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v621  <|@  <|@
f <@*|@fixed>@ <|@
tid v621 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v615 
=== Predecessor ===
v622 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B81 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" "B84" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601149105194298438
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v620 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:228) [bci: 279] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: v624 
=== Usages ===
=== Predecessor ===
v623 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v624  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v624 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_LOAD
fence: STORE_LOAD
location: GC-Card
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.MembarNode.memoryBarrier(MembarNode$FenceKind, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:228) [bci: 285] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: i645 
=== Usages ===
=== Predecessor ===
v620 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: i645  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i645 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:229) [bci: 294] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v737 
lastLocationAccess: - 
=== Succesors ===
next: v628 
=== Usages ===
v652 
=== Predecessor ===
v624 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v737 lastLocationAccess: - #next: v628  <|@  <|@
f <@~|@floating>@ <|@
tid v652 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:230) [bci: 308] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i645 
y: i304 
=== Succesors ===
=== Usages ===
v628 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i645 y: i304  <|@  <|@
f <@*|@fixed>@ <|@
tid v628 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:230) [bci: 319] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v652 
=== Succesors ===
trueSuccessor: v627 
falseSuccessor: v625 
=== Usages ===
=== Predecessor ===
i645 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v652 #trueSuccessor: v627 #falseSuccessor: v625  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v68|QWORD[*] + v14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B82 -> B83 falseDestination: B82 -> B84 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4600401356666659186
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v627 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: v626 
=== Usages ===
=== Predecessor ===
v628 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v626  <|@  <|@
f <@*|@fixed>@ <|@
tid v626 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v615 
=== Predecessor ===
v627 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B83 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" "B86" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586142809256908445
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v625 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:231) [bci: 322] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: v646 
=== Usages ===
=== Predecessor ===
v628 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v646  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v646 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:232) [bci: 358] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v737 
lastLocationAccess: - 
value: i304 
stateAfter: - 
=== Succesors ===
next: j647 
=== Usages ===
=== Predecessor ===
v625 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v737 lastLocationAccess: - value: i304 stateAfter: - #next: j647  <|@  <|@
f <@~|@floating>@ <|@
tid v734 <|@
result [r15|QWORD + 72] <|@
d <@d|@=== Debug Properties ===
displacement: 72
stamp: void*
stride: S1
=== Inputs ===
base: j604 
index: - 
=== Succesors ===
=== Usages ===
j647 v650 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j604 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j647 <|@
result v69|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:237) [bci: 378] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v734 
lastLocationAccess: - 
=== Succesors ===
next: v633 
=== Usages ===
v630 j643 v736 
=== Predecessor ===
v646 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v734 lastLocationAccess: - #next: v633  <|@  <|@
f <@~|@floating>@ <|@
tid v630 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:238) [bci: 392] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j647 
y: j243 
=== Succesors ===
=== Usages ===
v633 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j647 y: j243  <|@  <|@
f <@~|@floating>@ <|@
tid j641 <|@
result v70|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.cardTableAddress(HotSpotG1WriteBarrierSnippets.java:131) [bci: 28]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 232] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: i64 [140438306553856 - 36169235325517823] bits:00000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j619 
y: j327 
=== Succesors ===
=== Usages ===
v637 v649 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j619 y: j327  <|@  <|@
f <@*|@fixed>@ <|@
tid v633 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:238) [bci: 398] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v630 
=== Succesors ===
trueSuccessor: v632 
falseSuccessor: v631 
=== Usages ===
=== Predecessor ===
j647 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v630 #trueSuccessor: v632 #falseSuccessor: v631  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v68|QWORD[*] + v14|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v69|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v70|QWORD[*] = ADD (x: v68|QWORD[*], y: v14|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v69|QWORD, y: v69|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B84 -> B85 falseDestination: B84 -> B86 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4571435612730574153
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v632 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:247) [bci: 458] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: v637 
=== Usages ===
=== Predecessor ===
v633 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v637  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v637 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_post(Word)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-Card-Queue-Index, GC-Card-Queue-Buffer, GC-Card-Queue-Log, GC-Card], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_post
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostBarrierStub(ForeignCallDescriptor, Word) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostBarrierStub(G1WriteBarrierSnippets.java:413) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:247) [bci: 461] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: j641 
=== Succesors ===
next: v638 
=== Usages ===
=== Predecessor ===
v632 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: j641 #next: v638  <|@  <|@
f <@*|@fixed>@ <|@
tid v638 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v615 
=== Predecessor ===
v637 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v70|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4585544610434797044
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v631 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:239) [bci: 401] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: j648 
=== Usages ===
=== Predecessor ===
v633 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j648  <|@  <|@
f <@~|@floating>@ <|@
tid v735 <|@
result [r15|QWORD + 88] <|@
d <@d|@=== Debug Properties ===
displacement: 88
stamp: void*
stride: S1
=== Inputs ===
base: j604 
index: - 
=== Succesors ===
=== Usages ===
j648 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j604 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j648 <|@
result v71|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:239) [bci: 410] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v735 
lastLocationAccess: - 
=== Succesors ===
next: v649 
=== Usages ===
v736 
=== Predecessor ===
v631 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v735 lastLocationAccess: - #next: v649  <|@  <|@
f <@~|@floating>@ <|@
tid v736 <|@
result [v71|QWORD + v69|QWORD * 1 - 8] <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j648 
index: j647 
=== Succesors ===
=== Usages ===
v649 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j648 index: j647  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v649 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card-Queue-Log
location: GC-Card-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:244) [bci: 438] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v736 
lastLocationAccess: - 
value: j641 
stateAfter: - 
=== Succesors ===
next: v650 
=== Usages ===
=== Predecessor ===
j648 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v736 lastLocationAccess: - value: j641 stateAfter: - #next: v650  <|@  <|@
f <@~|@floating>@ <|@
tid j643 <|@
result v72|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:240) [bci: 424] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: i64
=== Inputs ===
x: j647 
y: j295 
=== Succesors ===
=== Usages ===
v650 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j647 y: j295  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v650 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card-Queue-Index
location: GC-Card-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:245) [bci: 452] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v734 
lastLocationAccess: - 
value: j643 
stateAfter: - 
=== Succesors ===
next: v636 
=== Usages ===
=== Predecessor ===
v649 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v734 lastLocationAccess: - value: j643 stateAfter: - #next: v636  <|@  <|@
f <@*|@fixed>@ <|@
tid v636 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v615 
=== Predecessor ===
v650 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v71|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v71|QWORD + v69|QWORD * 1 - 8], y: v70|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v72|QWORD = LEA [v69|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v72|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B86 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B77" "B79" "B81" "B83" "B86" "B85" 
    successors "B88" "B89" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617455682992505588
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v615 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v614 v616 v621 v626 v636 v638 
=== Succesors ===
next: v53 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v614 v616 v621 v626 v636 v638 #next: v53  <|@  <|@
f <@~|@floating>@ <|@
tid v174 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 95]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a686 
=== Succesors ===
=== Usages ===
v53 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a686  <|@  <|@
f <@*|@fixed>@ <|@
tid v53 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 95]
profileData: PROFILED designatedSuccessorProbability: 0.8739340370331193
stamp: void
=== Inputs ===
condition: v174 
=== Succesors ===
trueSuccessor: v52 
falseSuccessor: v49 
=== Usages ===
=== Predecessor ===
v615 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v174 #trueSuccessor: v52 #falseSuccessor: v49  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v65|DWORD[_], y: v65|DWORD[_]) trueDestinationProbability: 0.8739340370331193 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B89 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B68" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4616728324673108138
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v52 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 68]
stamp: void
=== Inputs ===
=== Succesors ===
next: v51 
=== Usages ===
=== Predecessor ===
v53 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v51  <|@  <|@
f <@*|@fixed>@ <|@
tid v51 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 68]
stamp: void
=== Inputs ===
loopBegin: v27 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v52 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v27  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v58|DWORD] destination: B88 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B95" 
    xhandlers
    flags 
    probability 4603994086100456013
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v49 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1611) [bci: 98]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v27 
=== Succesors ===
next: v48 
=== Usages ===
=== Predecessor ===
v53 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v27 #next: v48  <|@  <|@
f <@*|@fixed>@ <|@
tid v48 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1611) [bci: 98]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v33 
=== Predecessor ===
v49 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B89 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B95" 
    xhandlers
    flags 
    probability 4591715434359090862
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v35 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1611) [bci: 98]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v27 
=== Succesors ===
next: v34 
=== Usages ===
=== Predecessor ===
v38 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v27 #next: v34  <|@  <|@
f <@*|@fixed>@ <|@
tid v34 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1611) [bci: 98]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v33 
=== Predecessor ===
v35 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B90 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B95" 
    xhandlers
    flags 
    probability 4592396561385874207
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v70 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1611) [bci: 98]
stamp: void
=== Inputs ===
=== Succesors ===
next: v85 
=== Usages ===
=== Predecessor ===
v73 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v85  <|@  <|@
f <@*|@fixed>@ <|@
tid v85 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1611) [bci: 98]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v33 
=== Predecessor ===
v70 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B91 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v224 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: v739 
=== Usages ===
=== Predecessor ===
v225 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v739  <|@  <|@
f <@*|@fixed>@ <|@
tid v739 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 144
mayConvertToGuard: true
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 73]
reason: BoundsCheckException
speculation: jdk.vm.ci.meta.SpeculationLog$NoSpeculationReason@7f1c506c
stamp: void
=== Inputs ===
stateBefore: ?16 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v224 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?16  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -36891 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
stack: v26|QWORD[.] 
locals: v0|QWORD[.] - v12|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:53] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B95" 
    xhandlers
    flags 
    probability 4580341933595724392
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v59 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1611) [bci: 98]
stamp: void
=== Inputs ===
=== Succesors ===
next: v86 
=== Usages ===
=== Predecessor ===
v61 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v86  <|@  <|@
f <@*|@fixed>@ <|@
tid v86 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1611) [bci: 98]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v33 
=== Predecessor ===
v59 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B93 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B95" 
    xhandlers
    flags 
    probability 4593944184856050836
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1611) [bci: 98]
stamp: void
=== Inputs ===
=== Succesors ===
next: v32 
=== Usages ===
=== Predecessor ===
v20 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v32  <|@  <|@
f <@*|@fixed>@ <|@
tid v32 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1611) [bci: 98]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v33 
=== Predecessor ===
v18 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B94 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" "B90" "B89" "B91" "B93" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v33 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1611) [bci: 98]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v32 v34 v48 v85 v86 
=== Succesors ===
next: v55 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v32 v34 v48 v85 v86 #next: v55  <|@  <|@
f <@*|@fixed>@ <|@
tid v55 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1611) [bci: 99]
stamp: void
=== Inputs ===
memoryMap: - 
result: a104 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v33 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: a104  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v12|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v233 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1604) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v738 
=== Usages ===
=== Predecessor ===
v234 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v738  <|@  <|@
f <@*|@fixed>@ <|@
tid v738 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 231
mayConvertToGuard: true
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1604) [bci: 9]
reason: UnreachedCode
speculation: {0x0000000000000014[index: 0, len: 20, hash: 0xf97a8353]: UnreachedCode@5[HotSpotMethod<HashMap$HashIterator.nextNode()>, 19]}
stamp: void
=== Inputs ===
stateBefore: ?2 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v233 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?2  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -59155 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After ConstantLoadOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B96" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7154f04f slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[_] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v2|DWORD = MOV [v1|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[_] = MOV [v1|DWORD[_] * 8 + 36] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[_] = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v5|DWORD[_] = MOV [v4|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: [v0|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B96 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B8" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B2 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.+] = LEA [v0|QWORD[.] + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD[_] = MOV [v6|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v7|DWORD[_], y: v7|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = UNCOMPRESSPOINTER (input: v7|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v8|QWORD, y: v8|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v10|QWORD + v8|QWORD * 1 - 8], y: v9|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = LEA [v8|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v11|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B4 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" "B7" "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v4|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[*] = XOR (x: v0|QWORD[.], y: v12|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOVE input: long[140438306553856|0x7fba57600000] <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v13|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v12|QWORD[.], y: v12|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v15|QWORD[*] + v14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B13 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B19" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B9 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B19" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B11 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v15|QWORD[*] + v14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B19" 
    xhandlers
    flags 
    probability 4589917419268529874
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B15 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v15|QWORD[*] + v14|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[*] = ADD (x: v15|QWORD[*], y: v14|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v16|QWORD, y: v16|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD + v16|QWORD * 1 - 8], y: v17|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = LEA [v16|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v19|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v17|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" "B13" "B15" "B18" "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B26" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B20 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[.+] = LEA [v0|QWORD[.] + 20] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD[_] = MOV [v20|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v21|DWORD[_], y: v21|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[.] = UNCOMPRESSPOINTER (input: v21|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v22|QWORD, y: v22|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v24|QWORD + v22|QWORD * 1 - 8], y: v23|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = LEA [v22|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v25|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B26" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B22 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v23|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" "B25" "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v5|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v27|QWORD[*] = XOR (x: v0|QWORD[.], y: v26|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v27|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v26|QWORD[.], y: v26|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v28|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v28|QWORD[*] + v14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B37" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B31 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B37" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B27 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B37" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B29 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v28|QWORD[*] + v14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" 
    xhandlers
    flags 
    probability 4589917419268529874
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B33 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v28|QWORD[*] + v14|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD[*] = ADD (x: v28|QWORD[*], y: v14|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v29|QWORD, y: v29|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v31|QWORD + v29|QWORD * 1 - 8], y: v30|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = LEA [v29|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v32|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v30|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B27" "B29" "B31" "B33" "B36" "B35" 
    successors "B38" "B94" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v5|DWORD[_], y: v5|DWORD[_]) trueDestinationProbability: 0.8674348032491496 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B94 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B93" 
    xhandlers
    flags 
    probability 4605988377658638555
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
stack: v26|QWORD[.] 
locals: v0|QWORD[.] - v12|QWORD[.] 
>@ <|@ instruction v33|DWORD = MOV [v3|DWORD[_] * 8 + 12] size: DWORD state [bci:53] <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v33|DWORD, y: v34|DWORD) trueDestinationProbability: 0.9812627296505405 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B93 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B92" 
    xhandlers
    flags 
    probability 4605841980402785416
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v33|DWORD, y: v34|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B92 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4605841980402785416
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = INC v34|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v35|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B47" 
    xhandlers
    flags 
    probability 4605075304317034516
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B41 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B95" 
    xhandlers
    flags 
    probability 4593944184856050836
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B94 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4590797829349172127
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[.+] = LEA [v0|QWORD[.] + 20] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v37|DWORD[_] = MOV [v36|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v37|DWORD[_], y: v37|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4590184488480571407
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v39|QWORD[.] = UNCOMPRESSPOINTER (input: v37|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v38|QWORD, y: v38|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4589632481698830759
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v40|QWORD + v38|QWORD * 1 - 8], y: v39|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = LEA [v38|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v41|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B95" 
    xhandlers
    flags 
    probability 4580341933595724392
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B93 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B47" 
    xhandlers
    flags 
    probability 4576060348729859198
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B43 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4575482130661533308
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v39|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B41" "B43" "B46" "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4605841980402785416
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v42|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v43|DWORD[_] = MOV [v42|QWORD[.] + v34|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v43|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = UNCOMPRESSPOINTER (input: v43|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v45|QWORD[*] = XOR (x: v0|QWORD[.], y: v44|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v45|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4605075304317034516
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v44|QWORD[.], y: v44|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4604385295839858706
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v46|QWORD[*] + v14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B58" 
    xhandlers
    flags 
    probability 4603764288210400477
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B52 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B58" 
    xhandlers
    flags 
    probability 4590797829349172127
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B48 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B58" 
    xhandlers
    flags 
    probability 4590184488480571407
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B50 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4589632481698830759
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v46|QWORD[*] + v14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B58" 
    xhandlers
    flags 
    probability 4589103330899992928
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B54 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4574598919810748272
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v46|QWORD[*] + v14|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[*] = ADD (x: v46|QWORD[*], y: v14|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v47|QWORD, y: v47|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4573804030045041739
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v49|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v49|QWORD + v47|QWORD * 1 - 8], y: v48|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v50|QWORD = LEA [v47|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v50|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4559498341397223717
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v48|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B48" "B50" "B52" "B54" "B57" "B56" 
    successors "B59" "B91" 
    xhandlers
    flags 
    probability 4605841980402785416
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v43|DWORD[_], y: v43|DWORD[_]) trueDestinationProbability: 0.8739340370331193 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B91 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B66" 
    xhandlers
    flags 
    probability 4604875462812446756
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v33|DWORD, y: v35|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B59 -> B60 falseDestination: B59 -> B66 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B67" 
    xhandlers
    flags 
    probability 4600371863185076260
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B64" 
    xhandlers
    flags 
    probability 4600371863185076260
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = SUB (x: v33|DWORD, ~y: v35|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = MOVSXD v51|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v53|QWORD = MOV v35|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD = ADD (x: v52|QWORD, y: v53|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v55|QWORD = DEC v54|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v56|QWORD = MOV v33|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v56|QWORD, y: v55|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B60 -> B61 falseDestination: B60 -> B64 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4600371863185076260
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v33|DWORD, y: v35|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B61 -> B62 falseDestination: B61 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B67" 
    xhandlers
    flags 
    probability 4600371863185076260
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B62 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" "B62" 
    successors "B68" 
    xhandlers
    flags 
    probability 4604875462812446756
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v35|DWORD] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" "B88" 
    successors "B69" "B90" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4617565855081504432
    begin_IR
      LIR
      nr   -1  <|@ instruction [v57|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v33|DWORD, y: v57|DWORD) trueDestinationProbability: 0.9812627296505405 condition: > trueDestination: B68 -> B69 falseDestination: B68 -> B90 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B70" "B71" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617455682992505589
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = INC v57|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v58|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4616878716535993821
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B70 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" "B73" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602790951197370563
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v59|QWORD[.+] = LEA [v0|QWORD[.] + 20] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v60|DWORD[_] = MOV [v59|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v60|DWORD[_], y: v60|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B73 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" "B75" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601979936891675385
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v61|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v62|QWORD[.] = UNCOMPRESSPOINTER (input: v60|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v61|QWORD, y: v61|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B75 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601149105194298439
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v63|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v63|QWORD + v61|QWORD * 1 - 8], y: v62|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v64|QWORD = LEA [v61|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v64|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587545991679145066
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B72 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586807474614810003
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v62|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B70" "B72" "B75" "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617455682992505589
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v65|DWORD[_] = MOV [v42|QWORD[.] + v57|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v65|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v66|QWORD[.] = UNCOMPRESSPOINTER (input: v65|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[*] = XOR (x: v0|QWORD[.], y: v66|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v67|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4616878716535993821
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v66|QWORD[.], y: v66|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4616359446725133229
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v68|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v68|QWORD[*] + v14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4615594589735958993
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B81 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602790951197370563
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B77 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601979936891675385
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B79 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" "B84" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601149105194298438
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v68|QWORD[*] + v14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B82 -> B83 falseDestination: B82 -> B84 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4600401356666659186
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B83 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" "B86" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586142809256908445
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v68|QWORD[*] + v14|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v69|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v70|QWORD[*] = ADD (x: v68|QWORD[*], y: v14|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v69|QWORD, y: v69|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B84 -> B85 falseDestination: B84 -> B86 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4585544610434797044
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v71|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v71|QWORD + v69|QWORD * 1 - 8], y: v70|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v72|QWORD = LEA [v69|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v72|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B86 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4571435612730574153
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v70|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B77" "B79" "B81" "B83" "B86" "B85" 
    successors "B88" "B89" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617455682992505588
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v65|DWORD[_], y: v65|DWORD[_]) trueDestinationProbability: 0.8739340370331193 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B89 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B68" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4616728324673108138
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v58|DWORD] destination: B88 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B95" 
    xhandlers
    flags 
    probability 4603994086100456013
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B89 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B95" 
    xhandlers
    flags 
    probability 4592396561385874207
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B91 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B95" 
    xhandlers
    flags 
    probability 4591715434359090862
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B90 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" "B90" "B89" "B91" "B93" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v12|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -59155 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B64 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" "B63" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -40475 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 1944 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 95]
stack: v44|QWORD[.] 
locals: v0|QWORD[.] v42|QWORD[.] v12|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:95] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -36891 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
stack: v26|QWORD[.] 
locals: v0|QWORD[.] - v12|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:53] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #5          // next:java.util.HashMap$Node
     4: astore_2      
     5: aload_0       
     6: getfield      #0          // this$0:java.util.HashMap
     9: getfield      #2          // java.util.HashMap.modCount:int
    12: aload_0       
    13: getfield      #3          // expectedModCount:int
    16: if_icmpeq     27
    19: new           #39         // java.util.ConcurrentModificationException
    22: dup           
    23: invokespecial #9          // java.util.ConcurrentModificationException.<init>:()void
    26: athrow        
    27: aload_2       
    28: ifnonnull     39
    31: new           #42         // java.util.NoSuchElementException
    34: dup           
    35: invokespecial #10         // java.util.NoSuchElementException.<init>:()void
    38: athrow        
    39: aload_0       
    40: aload_0       
    41: aload_2       
    42: dup_x1        
    43: putfield      #6          // current:java.util.HashMap$Node
    46: getfield      #11         // java.util.HashMap$Node.next:java.util.HashMap$Node
    49: dup_x1        
    50: putfield      #5          // next:java.util.HashMap$Node
    53: ifnonnull     98
    56: aload_0       
    57: getfield      #0          // this$0:java.util.HashMap
    60: getfield      #4          // java.util.HashMap.table:java.util.HashMap$Node[]
    63: dup           
    64: astore_1      
    65: ifnull        98
    68: aload_0       
    69: getfield      #7          // index:int
    72: aload_1       
    73: arraylength   
    74: if_icmpge     98
    77: aload_0       
    78: aload_1       
    79: aload_0       
    80: dup           
    81: getfield      #7          // index:int
    84: dup_x1        
    85: iconst_1      
    86: iadd          
    87: putfield      #7          // index:int
    90: aaload        
    91: dup_x1        
    92: putfield      #5          // next:java.util.HashMap$Node
    95: ifnull        68
    98: aload_2       
    99: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After SaveCalleeSaveRegisters"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B96" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7154f04f slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[_] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v2|DWORD = MOV [v1|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[_] = MOV [v1|DWORD[_] * 8 + 36] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[_] = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v5|DWORD[_] = MOV [v4|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: [v0|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B96 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B8" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B2 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.+] = LEA [v0|QWORD[.] + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD[_] = MOV [v6|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v7|DWORD[_], y: v7|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = UNCOMPRESSPOINTER (input: v7|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v8|QWORD, y: v8|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v10|QWORD + v8|QWORD * 1 - 8], y: v9|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = LEA [v8|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v11|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B4 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" "B7" "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v4|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[*] = XOR (x: v0|QWORD[.], y: v12|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOVE input: long[140438306553856|0x7fba57600000] <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v13|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v12|QWORD[.], y: v12|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v15|QWORD[*] + v14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B13 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B19" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B9 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B19" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B11 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v15|QWORD[*] + v14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B19" 
    xhandlers
    flags 
    probability 4589917419268529874
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B15 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v15|QWORD[*] + v14|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[*] = ADD (x: v15|QWORD[*], y: v14|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v16|QWORD, y: v16|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD + v16|QWORD * 1 - 8], y: v17|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = LEA [v16|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v19|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v17|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" "B13" "B15" "B18" "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B26" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B20 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[.+] = LEA [v0|QWORD[.] + 20] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD[_] = MOV [v20|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v21|DWORD[_], y: v21|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[.] = UNCOMPRESSPOINTER (input: v21|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v22|QWORD, y: v22|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v24|QWORD + v22|QWORD * 1 - 8], y: v23|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = LEA [v22|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v25|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B26" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B22 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v23|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" "B25" "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v5|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v27|QWORD[*] = XOR (x: v0|QWORD[.], y: v26|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v27|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v26|QWORD[.], y: v26|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v28|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v28|QWORD[*] + v14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B37" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B31 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B37" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B27 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B37" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B29 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v28|QWORD[*] + v14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" 
    xhandlers
    flags 
    probability 4589917419268529874
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B33 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v28|QWORD[*] + v14|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD[*] = ADD (x: v28|QWORD[*], y: v14|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v29|QWORD, y: v29|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v31|QWORD + v29|QWORD * 1 - 8], y: v30|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = LEA [v29|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v32|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v30|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B27" "B29" "B31" "B33" "B36" "B35" 
    successors "B38" "B94" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v5|DWORD[_], y: v5|DWORD[_]) trueDestinationProbability: 0.8674348032491496 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B94 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B93" 
    xhandlers
    flags 
    probability 4605988377658638555
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
stack: v26|QWORD[.] 
locals: v0|QWORD[.] - v12|QWORD[.] 
>@ <|@ instruction v33|DWORD = MOV [v3|DWORD[_] * 8 + 12] size: DWORD state [bci:53] <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v33|DWORD, y: v34|DWORD) trueDestinationProbability: 0.9812627296505405 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B93 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B92" 
    xhandlers
    flags 
    probability 4605841980402785416
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v33|DWORD, y: v34|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B92 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4605841980402785416
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = INC v34|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v35|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B47" 
    xhandlers
    flags 
    probability 4605075304317034516
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B41 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B95" 
    xhandlers
    flags 
    probability 4593944184856050836
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B94 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4590797829349172127
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[.+] = LEA [v0|QWORD[.] + 20] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v37|DWORD[_] = MOV [v36|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v37|DWORD[_], y: v37|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4590184488480571407
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v39|QWORD[.] = UNCOMPRESSPOINTER (input: v37|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v38|QWORD, y: v38|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4589632481698830759
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v40|QWORD + v38|QWORD * 1 - 8], y: v39|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = LEA [v38|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v41|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B95" 
    xhandlers
    flags 
    probability 4580341933595724392
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B93 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B47" 
    xhandlers
    flags 
    probability 4576060348729859198
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B43 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4575482130661533308
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v39|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B41" "B43" "B46" "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4605841980402785416
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v42|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v43|DWORD[_] = MOV [v42|QWORD[.] + v34|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v43|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = UNCOMPRESSPOINTER (input: v43|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v45|QWORD[*] = XOR (x: v0|QWORD[.], y: v44|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v45|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4605075304317034516
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v44|QWORD[.], y: v44|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4604385295839858706
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v46|QWORD[*] + v14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B58" 
    xhandlers
    flags 
    probability 4603764288210400477
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B52 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B58" 
    xhandlers
    flags 
    probability 4590797829349172127
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B48 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B58" 
    xhandlers
    flags 
    probability 4590184488480571407
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B50 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4589632481698830759
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v46|QWORD[*] + v14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B58" 
    xhandlers
    flags 
    probability 4589103330899992928
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B54 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4574598919810748272
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v46|QWORD[*] + v14|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[*] = ADD (x: v46|QWORD[*], y: v14|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v47|QWORD, y: v47|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4573804030045041739
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v49|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v49|QWORD + v47|QWORD * 1 - 8], y: v48|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v50|QWORD = LEA [v47|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v50|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4559498341397223717
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v48|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B48" "B50" "B52" "B54" "B57" "B56" 
    successors "B59" "B91" 
    xhandlers
    flags 
    probability 4605841980402785416
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v43|DWORD[_], y: v43|DWORD[_]) trueDestinationProbability: 0.8739340370331193 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B91 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B66" 
    xhandlers
    flags 
    probability 4604875462812446756
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v33|DWORD, y: v35|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B59 -> B60 falseDestination: B59 -> B66 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B67" 
    xhandlers
    flags 
    probability 4600371863185076260
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B64" 
    xhandlers
    flags 
    probability 4600371863185076260
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = SUB (x: v33|DWORD, ~y: v35|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = MOVSXD v51|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v53|QWORD = MOV v35|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD = ADD (x: v52|QWORD, y: v53|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v55|QWORD = DEC v54|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v56|QWORD = MOV v33|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v56|QWORD, y: v55|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B60 -> B61 falseDestination: B60 -> B64 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4600371863185076260
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v33|DWORD, y: v35|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B61 -> B62 falseDestination: B61 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B67" 
    xhandlers
    flags 
    probability 4600371863185076260
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B62 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" "B62" 
    successors "B68" 
    xhandlers
    flags 
    probability 4604875462812446756
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v35|DWORD] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" "B88" 
    successors "B69" "B90" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4617565855081504432
    begin_IR
      LIR
      nr   -1  <|@ instruction [v57|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v33|DWORD, y: v57|DWORD) trueDestinationProbability: 0.9812627296505405 condition: > trueDestination: B68 -> B69 falseDestination: B68 -> B90 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B70" "B71" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617455682992505589
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = INC v57|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v58|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4616878716535993821
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B70 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" "B73" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602790951197370563
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v59|QWORD[.+] = LEA [v0|QWORD[.] + 20] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v60|DWORD[_] = MOV [v59|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v60|DWORD[_], y: v60|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B73 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" "B75" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601979936891675385
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v61|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v62|QWORD[.] = UNCOMPRESSPOINTER (input: v60|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v61|QWORD, y: v61|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B75 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601149105194298439
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v63|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v63|QWORD + v61|QWORD * 1 - 8], y: v62|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v64|QWORD = LEA [v61|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v64|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587545991679145066
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B72 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586807474614810003
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v62|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B70" "B72" "B75" "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617455682992505589
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v65|DWORD[_] = MOV [v42|QWORD[.] + v57|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v65|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v66|QWORD[.] = UNCOMPRESSPOINTER (input: v65|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[*] = XOR (x: v0|QWORD[.], y: v66|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v67|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4616878716535993821
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v66|QWORD[.], y: v66|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4616359446725133229
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v68|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v68|QWORD[*] + v14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4615594589735958993
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B81 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602790951197370563
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B77 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601979936891675385
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B79 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" "B84" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601149105194298438
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v68|QWORD[*] + v14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B82 -> B83 falseDestination: B82 -> B84 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4600401356666659186
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B83 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" "B86" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586142809256908445
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v68|QWORD[*] + v14|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v69|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v70|QWORD[*] = ADD (x: v68|QWORD[*], y: v14|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v69|QWORD, y: v69|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B84 -> B85 falseDestination: B84 -> B86 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4585544610434797044
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v71|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v71|QWORD + v69|QWORD * 1 - 8], y: v70|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v72|QWORD = LEA [v69|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v72|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B86 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4571435612730574153
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v70|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B77" "B79" "B81" "B83" "B86" "B85" 
    successors "B88" "B89" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617455682992505588
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v65|DWORD[_], y: v65|DWORD[_]) trueDestinationProbability: 0.8739340370331193 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B89 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B68" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4616728324673108138
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v58|DWORD] destination: B88 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B95" 
    xhandlers
    flags 
    probability 4603994086100456013
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B89 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B95" 
    xhandlers
    flags 
    probability 4592396561385874207
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B91 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B95" 
    xhandlers
    flags 
    probability 4591715434359090862
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B90 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" "B90" "B89" "B91" "B93" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v12|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -59155 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B64 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" "B63" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -40475 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 1944 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 95]
stack: v44|QWORD[.] 
locals: v0|QWORD[.] v42|QWORD[.] v12|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:95] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -36891 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
stack: v26|QWORD[.] 
locals: v0|QWORD[.] - v12|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:53] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #5          // next:java.util.HashMap$Node
     4: astore_2      
     5: aload_0       
     6: getfield      #0          // this$0:java.util.HashMap
     9: getfield      #2          // java.util.HashMap.modCount:int
    12: aload_0       
    13: getfield      #3          // expectedModCount:int
    16: if_icmpeq     27
    19: new           #39         // java.util.ConcurrentModificationException
    22: dup           
    23: invokespecial #9          // java.util.ConcurrentModificationException.<init>:()void
    26: athrow        
    27: aload_2       
    28: ifnonnull     39
    31: new           #42         // java.util.NoSuchElementException
    34: dup           
    35: invokespecial #10         // java.util.NoSuchElementException.<init>:()void
    38: athrow        
    39: aload_0       
    40: aload_0       
    41: aload_2       
    42: dup_x1        
    43: putfield      #6          // current:java.util.HashMap$Node
    46: getfield      #11         // java.util.HashMap$Node.next:java.util.HashMap$Node
    49: dup_x1        
    50: putfield      #5          // next:java.util.HashMap$Node
    53: ifnonnull     98
    56: aload_0       
    57: getfield      #0          // this$0:java.util.HashMap
    60: getfield      #4          // java.util.HashMap.table:java.util.HashMap$Node[]
    63: dup           
    64: astore_1      
    65: ifnull        98
    68: aload_0       
    69: getfield      #7          // index:int
    72: aload_1       
    73: arraylength   
    74: if_icmpge     98
    77: aload_0       
    78: aload_1       
    79: aload_0       
    80: dup           
    81: getfield      #7          // index:int
    84: dup_x1        
    85: iconst_1      
    86: iadd          
    87: putfield      #7          // index:int
    90: aaload        
    91: dup_x1        
    92: putfield      #5          // next:java.util.HashMap$Node
    95: ifnull        68
    98: aload_2       
    99: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B96" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7154f04f slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[_] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v2|DWORD = MOV [v1|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[_] = MOV [v1|DWORD[_] * 8 + 36] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[_] = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v5|DWORD[_] = MOV [v4|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: [v0|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B96 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B8" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B2 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.+] = LEA [v0|QWORD[.] + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD[_] = MOV [v6|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v7|DWORD[_], y: v7|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = UNCOMPRESSPOINTER (input: v7|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v8|QWORD, y: v8|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v10|QWORD + v8|QWORD * 1 - 8], y: v9|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = LEA [v8|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v11|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B4 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" "B7" "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v4|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[*] = XOR (x: v0|QWORD[.], y: v12|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOVE input: long[140438306553856|0x7fba57600000] <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v13|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v12|QWORD[.], y: v12|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v15|QWORD[*] + v14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B13 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B19" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B9 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B19" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B11 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v15|QWORD[*] + v14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B19" 
    xhandlers
    flags 
    probability 4589917419268529874
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B15 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v15|QWORD[*] + v14|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[*] = ADD (x: v15|QWORD[*], y: v14|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v16|QWORD, y: v16|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD + v16|QWORD * 1 - 8], y: v17|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = LEA [v16|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v19|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v17|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" "B13" "B15" "B18" "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B26" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B20 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[.+] = LEA [v0|QWORD[.] + 20] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD[_] = MOV [v20|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v21|DWORD[_], y: v21|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[.] = UNCOMPRESSPOINTER (input: v21|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v22|QWORD, y: v22|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v24|QWORD + v22|QWORD * 1 - 8], y: v23|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = LEA [v22|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v25|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B26" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B22 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v23|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" "B25" "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v5|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v27|QWORD[*] = XOR (x: v0|QWORD[.], y: v26|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v27|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v26|QWORD[.], y: v26|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v28|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v28|QWORD[*] + v14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B37" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B31 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B37" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B27 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B37" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B29 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v28|QWORD[*] + v14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" 
    xhandlers
    flags 
    probability 4589917419268529874
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B33 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v28|QWORD[*] + v14|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD[*] = ADD (x: v28|QWORD[*], y: v14|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v29|QWORD, y: v29|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v31|QWORD + v29|QWORD * 1 - 8], y: v30|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = LEA [v29|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v32|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v30|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B27" "B29" "B31" "B33" "B36" "B35" 
    successors "B38" "B94" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v5|DWORD[_], y: v5|DWORD[_]) trueDestinationProbability: 0.8674348032491496 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B94 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B93" 
    xhandlers
    flags 
    probability 4605988377658638555
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
stack: v26|QWORD[.] 
locals: v0|QWORD[.] - v12|QWORD[.] 
>@ <|@ instruction v33|DWORD = MOV [v3|DWORD[_] * 8 + 12] size: DWORD state [bci:53] <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v33|DWORD, y: v34|DWORD) trueDestinationProbability: 0.9812627296505405 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B93 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B92" 
    xhandlers
    flags 
    probability 4605841980402785416
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v33|DWORD, y: v34|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B92 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4605841980402785416
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = INC v34|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v35|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B47" 
    xhandlers
    flags 
    probability 4605075304317034516
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B41 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B95" 
    xhandlers
    flags 
    probability 4593944184856050836
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B94 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4590797829349172127
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[.+] = LEA [v0|QWORD[.] + 20] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v37|DWORD[_] = MOV [v36|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v37|DWORD[_], y: v37|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4590184488480571407
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v39|QWORD[.] = UNCOMPRESSPOINTER (input: v37|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v38|QWORD, y: v38|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4589632481698830759
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v40|QWORD + v38|QWORD * 1 - 8], y: v39|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = LEA [v38|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v41|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B95" 
    xhandlers
    flags 
    probability 4580341933595724392
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B93 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B47" 
    xhandlers
    flags 
    probability 4576060348729859198
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B43 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4575482130661533308
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v39|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B41" "B43" "B46" "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4605841980402785416
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v42|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v43|DWORD[_] = MOV [v42|QWORD[.] + v34|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v43|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = UNCOMPRESSPOINTER (input: v43|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v45|QWORD[*] = XOR (x: v0|QWORD[.], y: v44|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v45|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4605075304317034516
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v44|QWORD[.], y: v44|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4604385295839858706
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v46|QWORD[*] + v14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B58" 
    xhandlers
    flags 
    probability 4603764288210400477
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B52 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B58" 
    xhandlers
    flags 
    probability 4590797829349172127
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B48 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B58" 
    xhandlers
    flags 
    probability 4590184488480571407
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B50 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4589632481698830759
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v46|QWORD[*] + v14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B58" 
    xhandlers
    flags 
    probability 4589103330899992928
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B54 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4574598919810748272
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v46|QWORD[*] + v14|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[*] = ADD (x: v46|QWORD[*], y: v14|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v47|QWORD, y: v47|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4573804030045041739
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v49|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v49|QWORD + v47|QWORD * 1 - 8], y: v48|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v50|QWORD = LEA [v47|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v50|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4559498341397223717
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v48|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B48" "B50" "B52" "B54" "B57" "B56" 
    successors "B59" "B91" 
    xhandlers
    flags 
    probability 4605841980402785416
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v43|DWORD[_], y: v43|DWORD[_]) trueDestinationProbability: 0.8739340370331193 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B91 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B66" 
    xhandlers
    flags 
    probability 4604875462812446756
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v33|DWORD, y: v35|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B59 -> B60 falseDestination: B59 -> B66 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B67" 
    xhandlers
    flags 
    probability 4600371863185076260
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B64" 
    xhandlers
    flags 
    probability 4600371863185076260
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = SUB (x: v33|DWORD, ~y: v35|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = MOVSXD v51|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v53|QWORD = MOV v35|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD = ADD (x: v52|QWORD, y: v53|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v55|QWORD = DEC v54|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v56|QWORD = MOV v33|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v56|QWORD, y: v55|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B60 -> B61 falseDestination: B60 -> B64 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4600371863185076260
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v33|DWORD, y: v35|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B61 -> B62 falseDestination: B61 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B67" 
    xhandlers
    flags 
    probability 4600371863185076260
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B62 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" "B62" 
    successors "B68" 
    xhandlers
    flags 
    probability 4604875462812446756
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v35|DWORD] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" "B88" 
    successors "B69" "B90" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4617565855081504432
    begin_IR
      LIR
      nr   -1  <|@ instruction [v57|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v33|DWORD, y: v57|DWORD) trueDestinationProbability: 0.9812627296505405 condition: > trueDestination: B68 -> B69 falseDestination: B68 -> B90 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B70" "B71" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617455682992505589
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = INC v57|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v58|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4616878716535993821
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B70 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" "B73" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602790951197370563
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v59|QWORD[.+] = LEA [v0|QWORD[.] + 20] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v60|DWORD[_] = MOV [v59|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v60|DWORD[_], y: v60|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B73 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" "B75" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601979936891675385
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v61|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v62|QWORD[.] = UNCOMPRESSPOINTER (input: v60|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v61|QWORD, y: v61|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B75 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601149105194298439
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v63|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v63|QWORD + v61|QWORD * 1 - 8], y: v62|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v64|QWORD = LEA [v61|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v64|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587545991679145066
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B72 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586807474614810003
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v62|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B70" "B72" "B75" "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617455682992505589
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v65|DWORD[_] = MOV [v42|QWORD[.] + v57|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v65|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v66|QWORD[.] = UNCOMPRESSPOINTER (input: v65|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[*] = XOR (x: v0|QWORD[.], y: v66|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v67|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4616878716535993821
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v66|QWORD[.], y: v66|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4616359446725133229
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v68|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v68|QWORD[*] + v14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4615594589735958993
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B81 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602790951197370563
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B77 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601979936891675385
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B79 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" "B84" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601149105194298438
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v68|QWORD[*] + v14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B82 -> B83 falseDestination: B82 -> B84 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4600401356666659186
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B83 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" "B86" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586142809256908445
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v68|QWORD[*] + v14|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v69|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v70|QWORD[*] = ADD (x: v68|QWORD[*], y: v14|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v69|QWORD, y: v69|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B84 -> B85 falseDestination: B84 -> B86 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4585544610434797044
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v71|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v71|QWORD + v69|QWORD * 1 - 8], y: v70|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v72|QWORD = LEA [v69|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v72|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B86 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4571435612730574153
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v70|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B77" "B79" "B81" "B83" "B86" "B85" 
    successors "B88" "B89" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617455682992505588
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v65|DWORD[_], y: v65|DWORD[_]) trueDestinationProbability: 0.8739340370331193 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B89 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B68" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4616728324673108138
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v58|DWORD] destination: B88 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B95" 
    xhandlers
    flags 
    probability 4603994086100456013
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B89 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B95" 
    xhandlers
    flags 
    probability 4592396561385874207
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B91 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B95" 
    xhandlers
    flags 
    probability 4591715434359090862
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B90 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" "B90" "B89" "B91" "B93" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v12|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -59155 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B64 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" "B63" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -40475 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 1944 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 95]
stack: v44|QWORD[.] 
locals: v0|QWORD[.] v42|QWORD[.] v12|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:95] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -36891 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
stack: v26|QWORD[.] 
locals: v0|QWORD[.] - v12|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:53] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #5          // next:java.util.HashMap$Node
     4: astore_2      
     5: aload_0       
     6: getfield      #0          // this$0:java.util.HashMap
     9: getfield      #2          // java.util.HashMap.modCount:int
    12: aload_0       
    13: getfield      #3          // expectedModCount:int
    16: if_icmpeq     27
    19: new           #39         // java.util.ConcurrentModificationException
    22: dup           
    23: invokespecial #9          // java.util.ConcurrentModificationException.<init>:()void
    26: athrow        
    27: aload_2       
    28: ifnonnull     39
    31: new           #42         // java.util.NoSuchElementException
    34: dup           
    35: invokespecial #10         // java.util.NoSuchElementException.<init>:()void
    38: athrow        
    39: aload_0       
    40: aload_0       
    41: aload_2       
    42: dup_x1        
    43: putfield      #6          // current:java.util.HashMap$Node
    46: getfield      #11         // java.util.HashMap$Node.next:java.util.HashMap$Node
    49: dup_x1        
    50: putfield      #5          // next:java.util.HashMap$Node
    53: ifnonnull     98
    56: aload_0       
    57: getfield      #0          // this$0:java.util.HashMap
    60: getfield      #4          // java.util.HashMap.table:java.util.HashMap$Node[]
    63: dup           
    64: astore_1      
    65: ifnull        98
    68: aload_0       
    69: getfield      #7          // index:int
    72: aload_1       
    73: arraylength   
    74: if_icmpge     98
    77: aload_0       
    78: aload_1       
    79: aload_0       
    80: dup           
    81: getfield      #7          // index:int
    84: dup_x1        
    85: iconst_1      
    86: iadd          
    87: putfield      #7          // index:int
    90: aaload        
    91: dup_x1        
    92: putfield      #5          // next:java.util.HashMap$Node
    95: ifnull        68
    98: aload_2       
    99: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After MarkBasePointers"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B96" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7154f04f slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[_] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v2|DWORD = MOV [v1|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[_] = MOV [v1|DWORD[_] * 8 + 36] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[_] = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v5|DWORD[_] = MOV [v4|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: [v0|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B96 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B8" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B2 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.+] = LEA [v0|QWORD[.] + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD[_] = MOV [v6|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v7|DWORD[_], y: v7|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = UNCOMPRESSPOINTER (input: v7|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v8|QWORD, y: v8|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v10|QWORD + v8|QWORD * 1 - 8], y: v9|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = LEA [v8|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v11|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B4 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" "B7" "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v4|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[*] = XOR (x: v0|QWORD[.], y: v12|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOVE input: long[140438306553856|0x7fba57600000] <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v13|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v12|QWORD[.], y: v12|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v15|QWORD[*] + v14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B13 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B19" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B9 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B19" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B11 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v15|QWORD[*] + v14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B19" 
    xhandlers
    flags 
    probability 4589917419268529874
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B15 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v15|QWORD[*] + v14|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[*] = ADD (x: v15|QWORD[*], y: v14|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v16|QWORD, y: v16|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD + v16|QWORD * 1 - 8], y: v17|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = LEA [v16|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v19|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v17|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" "B13" "B15" "B18" "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B26" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B20 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[.+] = LEA [v0|QWORD[.] + 20] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD[_] = MOV [v20|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v21|DWORD[_], y: v21|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[.] = UNCOMPRESSPOINTER (input: v21|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v22|QWORD, y: v22|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v24|QWORD + v22|QWORD * 1 - 8], y: v23|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = LEA [v22|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v25|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B26" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B22 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v23|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" "B25" "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v5|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v27|QWORD[*] = XOR (x: v0|QWORD[.], y: v26|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v27|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v26|QWORD[.], y: v26|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v28|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v28|QWORD[*] + v14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B37" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B31 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B37" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B27 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B37" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B29 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v28|QWORD[*] + v14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" 
    xhandlers
    flags 
    probability 4589917419268529874
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B33 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v28|QWORD[*] + v14|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD[*] = ADD (x: v28|QWORD[*], y: v14|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v29|QWORD, y: v29|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v31|QWORD + v29|QWORD * 1 - 8], y: v30|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = LEA [v29|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v32|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v30|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B27" "B29" "B31" "B33" "B36" "B35" 
    successors "B38" "B94" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v5|DWORD[_], y: v5|DWORD[_]) trueDestinationProbability: 0.8674348032491496 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B94 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B93" 
    xhandlers
    flags 
    probability 4605988377658638555
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
stack: v26|QWORD[.] 
locals: v0|QWORD[.] - v12|QWORD[.] 
>@ <|@ instruction v33|DWORD = MOV [v3|DWORD[_] * 8 + 12] size: DWORD state [bci:53] <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v33|DWORD, y: v34|DWORD) trueDestinationProbability: 0.9812627296505405 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B93 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B92" 
    xhandlers
    flags 
    probability 4605841980402785416
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v33|DWORD, y: v34|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B92 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4605841980402785416
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = INC v34|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v35|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B47" 
    xhandlers
    flags 
    probability 4605075304317034516
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B41 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B95" 
    xhandlers
    flags 
    probability 4593944184856050836
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B94 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4590797829349172127
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[.+] = LEA [v0|QWORD[.] + 20] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v37|DWORD[_] = MOV [v36|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v37|DWORD[_], y: v37|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4590184488480571407
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v39|QWORD[.] = UNCOMPRESSPOINTER (input: v37|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v38|QWORD, y: v38|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4589632481698830759
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v40|QWORD + v38|QWORD * 1 - 8], y: v39|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = LEA [v38|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v41|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B95" 
    xhandlers
    flags 
    probability 4580341933595724392
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B93 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B47" 
    xhandlers
    flags 
    probability 4576060348729859198
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B43 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4575482130661533308
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v39|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B41" "B43" "B46" "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4605841980402785416
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v42|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v43|DWORD[_] = MOV [v42|QWORD[.] + v34|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v43|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = UNCOMPRESSPOINTER (input: v43|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v45|QWORD[*] = XOR (x: v0|QWORD[.], y: v44|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v45|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4605075304317034516
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v44|QWORD[.], y: v44|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4604385295839858706
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v46|QWORD[*] + v14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B58" 
    xhandlers
    flags 
    probability 4603764288210400477
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B52 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B58" 
    xhandlers
    flags 
    probability 4590797829349172127
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B48 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B58" 
    xhandlers
    flags 
    probability 4590184488480571407
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B50 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4589632481698830759
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v46|QWORD[*] + v14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B58" 
    xhandlers
    flags 
    probability 4589103330899992928
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B54 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4574598919810748272
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v46|QWORD[*] + v14|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[*] = ADD (x: v46|QWORD[*], y: v14|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v47|QWORD, y: v47|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4573804030045041739
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v49|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v49|QWORD + v47|QWORD * 1 - 8], y: v48|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v50|QWORD = LEA [v47|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v50|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4559498341397223717
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v48|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B48" "B50" "B52" "B54" "B57" "B56" 
    successors "B59" "B91" 
    xhandlers
    flags 
    probability 4605841980402785416
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v43|DWORD[_], y: v43|DWORD[_]) trueDestinationProbability: 0.8739340370331193 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B91 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B66" 
    xhandlers
    flags 
    probability 4604875462812446756
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v33|DWORD, y: v35|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B59 -> B60 falseDestination: B59 -> B66 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B67" 
    xhandlers
    flags 
    probability 4600371863185076260
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B64" 
    xhandlers
    flags 
    probability 4600371863185076260
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = SUB (x: v33|DWORD, ~y: v35|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = MOVSXD v51|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v53|QWORD = MOV v35|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD = ADD (x: v52|QWORD, y: v53|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v55|QWORD = DEC v54|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v56|QWORD = MOV v33|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v56|QWORD, y: v55|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B60 -> B61 falseDestination: B60 -> B64 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4600371863185076260
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v33|DWORD, y: v35|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B61 -> B62 falseDestination: B61 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B67" 
    xhandlers
    flags 
    probability 4600371863185076260
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B62 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" "B62" 
    successors "B68" 
    xhandlers
    flags 
    probability 4604875462812446756
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v35|DWORD] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" "B88" 
    successors "B69" "B90" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4617565855081504432
    begin_IR
      LIR
      nr   -1  <|@ instruction [v57|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v33|DWORD, y: v57|DWORD) trueDestinationProbability: 0.9812627296505405 condition: > trueDestination: B68 -> B69 falseDestination: B68 -> B90 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B70" "B71" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617455682992505589
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = INC v57|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v58|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4616878716535993821
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B70 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" "B73" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602790951197370563
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v59|QWORD[.+] = LEA [v0|QWORD[.] + 20] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v60|DWORD[_] = MOV [v59|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v60|DWORD[_], y: v60|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B73 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" "B75" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601979936891675385
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v61|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v62|QWORD[.] = UNCOMPRESSPOINTER (input: v60|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v61|QWORD, y: v61|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B75 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601149105194298439
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v63|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v63|QWORD + v61|QWORD * 1 - 8], y: v62|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v64|QWORD = LEA [v61|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v64|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587545991679145066
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B72 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586807474614810003
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v62|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B70" "B72" "B75" "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617455682992505589
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v65|DWORD[_] = MOV [v42|QWORD[.] + v57|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v65|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v66|QWORD[.] = UNCOMPRESSPOINTER (input: v65|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[*] = XOR (x: v0|QWORD[.], y: v66|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v67|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4616878716535993821
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v66|QWORD[.], y: v66|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4616359446725133229
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v68|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v68|QWORD[*] + v14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4615594589735958993
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B81 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602790951197370563
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B77 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601979936891675385
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B79 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" "B84" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601149105194298438
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v68|QWORD[*] + v14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B82 -> B83 falseDestination: B82 -> B84 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4600401356666659186
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B83 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" "B86" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586142809256908445
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v68|QWORD[*] + v14|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v69|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v70|QWORD[*] = ADD (x: v68|QWORD[*], y: v14|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v69|QWORD, y: v69|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B84 -> B85 falseDestination: B84 -> B86 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4585544610434797044
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v71|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v71|QWORD + v69|QWORD * 1 - 8], y: v70|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v72|QWORD = LEA [v69|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v72|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B86 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4571435612730574153
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v70|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B77" "B79" "B81" "B83" "B86" "B85" 
    successors "B88" "B89" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617455682992505588
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v65|DWORD[_], y: v65|DWORD[_]) trueDestinationProbability: 0.8739340370331193 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B89 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B68" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4616728324673108138
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v58|DWORD] destination: B88 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B95" 
    xhandlers
    flags 
    probability 4603994086100456013
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B89 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B95" 
    xhandlers
    flags 
    probability 4592396561385874207
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B91 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B95" 
    xhandlers
    flags 
    probability 4591715434359090862
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B90 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" "B90" "B89" "B91" "B93" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v12|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -59155 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B64 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" "B63" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -40475 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 1944 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 95]
stack: v44|QWORD[.] 
locals: v0|QWORD[.] v42|QWORD[.] v12|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:95] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -36891 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
stack: v26|QWORD[.] 
locals: v0|QWORD[.] - v12|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:53] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #5          // next:java.util.HashMap$Node
     4: astore_2      
     5: aload_0       
     6: getfield      #0          // this$0:java.util.HashMap
     9: getfield      #2          // java.util.HashMap.modCount:int
    12: aload_0       
    13: getfield      #3          // expectedModCount:int
    16: if_icmpeq     27
    19: new           #39         // java.util.ConcurrentModificationException
    22: dup           
    23: invokespecial #9          // java.util.ConcurrentModificationException.<init>:()void
    26: athrow        
    27: aload_2       
    28: ifnonnull     39
    31: new           #42         // java.util.NoSuchElementException
    34: dup           
    35: invokespecial #10         // java.util.NoSuchElementException.<init>:()void
    38: athrow        
    39: aload_0       
    40: aload_0       
    41: aload_2       
    42: dup_x1        
    43: putfield      #6          // current:java.util.HashMap$Node
    46: getfield      #11         // java.util.HashMap$Node.next:java.util.HashMap$Node
    49: dup_x1        
    50: putfield      #5          // next:java.util.HashMap$Node
    53: ifnonnull     98
    56: aload_0       
    57: getfield      #0          // this$0:java.util.HashMap
    60: getfield      #4          // java.util.HashMap.table:java.util.HashMap$Node[]
    63: dup           
    64: astore_1      
    65: ifnull        98
    68: aload_0       
    69: getfield      #7          // index:int
    72: aload_1       
    73: arraylength   
    74: if_icmpge     98
    77: aload_0       
    78: aload_1       
    79: aload_0       
    80: dup           
    81: getfield      #7          // index:int
    84: dup_x1        
    85: iconst_1      
    86: iadd          
    87: putfield      #7          // index:int
    90: aaload        
    91: dup_x1        
    92: putfield      #5          // next:java.util.HashMap$Node
    95: ifnull        68
    98: aload_2       
    99: areturn       
   <|@
end_bytecodes
begin_cfg
  name "Before register allocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B96" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7154f04f slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD[_] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   10  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v2|DWORD = MOV [v1|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction v3|DWORD[_] = MOV [v1|DWORD[_] * 8 + 36] size: DWORD <|@ <|@
      nr   14  <|@ instruction v4|DWORD[_] = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   16  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v5|DWORD[_] = MOV [v4|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   18  <|@ instruction CMPBRANCH (x: v2|DWORD, y: [v0|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B96 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   22  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B8" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   26  <|@ instruction JUMP ~[] destination: B2 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction v6|QWORD[.+] = LEA [v0|QWORD[.] + 24] size: QWORD <|@ <|@
      nr   32  <|@ instruction v7|DWORD[_] = MOV [v6|QWORD[.+]] size: DWORD <|@ <|@
      nr   34  <|@ instruction TESTBRANCH (x: v7|DWORD[_], y: v7|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction v8|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   40  <|@ instruction v9|QWORD[.] = UNCOMPRESSPOINTER (input: v7|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr   42  <|@ instruction TESTBRANCH (x: v8|QWORD, y: v8|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction v10|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   48  <|@ instruction MOV (x: [v10|QWORD + v8|QWORD * 1 - 8], y: v9|QWORD[.]) size: QWORD <|@ <|@
      nr   50  <|@ instruction v11|QWORD = LEA [v8|QWORD - 8] size: QWORD <|@ <|@
      nr   52  <|@ instruction MOV (x: [r15|QWORD + 40], y: v11|QWORD) size: QWORD <|@ <|@
      nr   54  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction JUMP ~[] destination: B4 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction rsi|QWORD[.] = MOVE v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   64  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   66  <|@ instruction JUMP ~[] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" "B7" "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v4|DWORD[_]) size: DWORD <|@ <|@
      nr   72  <|@ instruction v12|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr   74  <|@ instruction v13|QWORD[*] = XOR (x: v0|QWORD[.], y: v12|QWORD[.]) size: QWORD <|@ <|@
      nr   76  <|@ instruction v14|QWORD = MOVE input: long[140438306553856|0x7fba57600000] <|@ <|@
      nr   78  <|@ instruction TESTCONSTBRANCH v13|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction TESTBRANCH (x: v12|QWORD[.], y: v12|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction v15|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   88  <|@ instruction CMPCONSTBRANCH [v15|QWORD[*] + v14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction JUMP ~[] destination: B13 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B19" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   96  <|@ instruction JUMP ~[] destination: B9 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B19" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  100  <|@ instruction JUMP ~[] destination: B11 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  106  <|@ instruction CMPCONSTBRANCH [v15|QWORD[*] + v14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B19" 
    xhandlers
    flags 
    probability 4589917419268529874
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction JUMP ~[] destination: B15 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction MOVB [v15|QWORD[*] + v14|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  116  <|@ instruction v16|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  118  <|@ instruction v17|QWORD[*] = ADD (x: v15|QWORD[*], y: v14|QWORD) size: QWORD <|@ <|@
      nr  120  <|@ instruction TESTBRANCH (x: v16|QWORD, y: v16|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction v18|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  126  <|@ instruction MOV (x: [v18|QWORD + v16|QWORD * 1 - 8], y: v17|QWORD[*]) size: QWORD <|@ <|@
      nr  128  <|@ instruction v19|QWORD = LEA [v16|QWORD - 8] size: QWORD <|@ <|@
      nr  130  <|@ instruction MOV (x: [r15|QWORD + 72], y: v19|QWORD) size: QWORD <|@ <|@
      nr  132  <|@ instruction JUMP ~[] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction rsi|QWORD = MOVE v17|QWORD[*] moveKind: QWORD <|@ <|@
      nr  138  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  140  <|@ instruction JUMP ~[] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" "B13" "B15" "B18" "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B26" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction JUMP ~[] destination: B20 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction v20|QWORD[.+] = LEA [v0|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  154  <|@ instruction v21|DWORD[_] = MOV [v20|QWORD[.+]] size: DWORD <|@ <|@
      nr  156  <|@ instruction TESTBRANCH (x: v21|DWORD[_], y: v21|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction v22|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  162  <|@ instruction v23|QWORD[.] = UNCOMPRESSPOINTER (input: v21|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr  164  <|@ instruction TESTBRANCH (x: v22|QWORD, y: v22|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction v24|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  170  <|@ instruction MOV (x: [v24|QWORD + v22|QWORD * 1 - 8], y: v23|QWORD[.]) size: QWORD <|@ <|@
      nr  172  <|@ instruction v25|QWORD = LEA [v22|QWORD - 8] size: QWORD <|@ <|@
      nr  174  <|@ instruction MOV (x: [r15|QWORD + 40], y: v25|QWORD) size: QWORD <|@ <|@
      nr  176  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B26" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction JUMP ~[] destination: B22 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction rsi|QWORD[.] = MOVE v23|QWORD[.] moveKind: QWORD <|@ <|@
      nr  186  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  188  <|@ instruction JUMP ~[] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" "B25" "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v5|DWORD[_]) size: DWORD <|@ <|@
      nr  194  <|@ instruction v26|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr  196  <|@ instruction v27|QWORD[*] = XOR (x: v0|QWORD[.], y: v26|QWORD[.]) size: QWORD <|@ <|@
      nr  198  <|@ instruction TESTCONSTBRANCH v27|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction TESTBRANCH (x: v26|QWORD[.], y: v26|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction v28|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  208  <|@ instruction CMPCONSTBRANCH [v28|QWORD[*] + v14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B37" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  212  <|@ instruction JUMP ~[] destination: B31 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B37" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction JUMP ~[] destination: B27 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B37" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  220  <|@ instruction JUMP ~[] destination: B29 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  226  <|@ instruction CMPCONSTBRANCH [v28|QWORD[*] + v14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" 
    xhandlers
    flags 
    probability 4589917419268529874
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  230  <|@ instruction JUMP ~[] destination: B33 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction MOVB [v28|QWORD[*] + v14|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  236  <|@ instruction v29|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  238  <|@ instruction v30|QWORD[*] = ADD (x: v28|QWORD[*], y: v14|QWORD) size: QWORD <|@ <|@
      nr  240  <|@ instruction TESTBRANCH (x: v29|QWORD, y: v29|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  244  <|@ instruction v31|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  246  <|@ instruction MOV (x: [v31|QWORD + v29|QWORD * 1 - 8], y: v30|QWORD[*]) size: QWORD <|@ <|@
      nr  248  <|@ instruction v32|QWORD = LEA [v29|QWORD - 8] size: QWORD <|@ <|@
      nr  250  <|@ instruction MOV (x: [r15|QWORD + 72], y: v32|QWORD) size: QWORD <|@ <|@
      nr  252  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction rsi|QWORD = MOVE v30|QWORD[*] moveKind: QWORD <|@ <|@
      nr  258  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  260  <|@ instruction JUMP ~[] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B27" "B29" "B31" "B33" "B36" "B35" 
    successors "B38" "B94" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction TESTBRANCH (x: v5|DWORD[_], y: v5|DWORD[_]) trueDestinationProbability: 0.8674348032491496 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B94 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B93" 
    xhandlers
    flags 
    probability 4605988377658638555
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
stack: v26|QWORD[.] 
locals: v0|QWORD[.] - v12|QWORD[.] 
>@ <|@ instruction v33|DWORD = MOV [v3|DWORD[_] * 8 + 12] size: DWORD state [bci:53] <|@ <|@
      nr  270  <|@ instruction v34|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  272  <|@ instruction CMPBRANCH (x: v33|DWORD, y: v34|DWORD) trueDestinationProbability: 0.9812627296505405 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B93 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B92" 
    xhandlers
    flags 
    probability 4605841980402785416
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction CMPBRANCH (x: v33|DWORD, y: v34|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B92 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4605841980402785416
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction v35|DWORD = INC v34|DWORD size: DWORD <|@ <|@
      nr  282  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v35|DWORD) size: DWORD <|@ <|@
      nr  284  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B47" 
    xhandlers
    flags 
    probability 4605075304317034516
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  288  <|@ instruction JUMP ~[] destination: B41 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B95" 
    xhandlers
    flags 
    probability 4593944184856050836
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  292  <|@ instruction JUMP ~[] destination: B94 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4590797829349172127
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  296  <|@ instruction v36|QWORD[.+] = LEA [v0|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  298  <|@ instruction v37|DWORD[_] = MOV [v36|QWORD[.+]] size: DWORD <|@ <|@
      nr  300  <|@ instruction TESTBRANCH (x: v37|DWORD[_], y: v37|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4590184488480571407
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  304  <|@ instruction v38|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  306  <|@ instruction v39|QWORD[.] = UNCOMPRESSPOINTER (input: v37|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr  308  <|@ instruction TESTBRANCH (x: v38|QWORD, y: v38|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4589632481698830759
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  312  <|@ instruction v40|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  314  <|@ instruction MOV (x: [v40|QWORD + v38|QWORD * 1 - 8], y: v39|QWORD[.]) size: QWORD <|@ <|@
      nr  316  <|@ instruction v41|QWORD = LEA [v38|QWORD - 8] size: QWORD <|@ <|@
      nr  318  <|@ instruction MOV (x: [r15|QWORD + 40], y: v41|QWORD) size: QWORD <|@ <|@
      nr  320  <|@ instruction JUMP ~[] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B95" 
    xhandlers
    flags 
    probability 4580341933595724392
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction JUMP ~[] destination: B93 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B47" 
    xhandlers
    flags 
    probability 4576060348729859198
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  328  <|@ instruction JUMP ~[] destination: B43 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4575482130661533308
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  332  <|@ instruction rsi|QWORD[.] = MOVE v39|QWORD[.] moveKind: QWORD <|@ <|@
      nr  334  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  336  <|@ instruction JUMP ~[] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B41" "B43" "B46" "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4605841980402785416
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  340  <|@ instruction v42|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr  342  <|@ instruction v43|DWORD[_] = MOV [v42|QWORD[.] + v34|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  344  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v43|DWORD[_]) size: DWORD <|@ <|@
      nr  346  <|@ instruction v44|QWORD[.] = UNCOMPRESSPOINTER (input: v43|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr  348  <|@ instruction v45|QWORD[*] = XOR (x: v0|QWORD[.], y: v44|QWORD[.]) size: QWORD <|@ <|@
      nr  350  <|@ instruction TESTCONSTBRANCH v45|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4605075304317034516
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction TESTBRANCH (x: v44|QWORD[.], y: v44|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4604385295839858706
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  358  <|@ instruction v46|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  360  <|@ instruction CMPCONSTBRANCH [v46|QWORD[*] + v14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B58" 
    xhandlers
    flags 
    probability 4603764288210400477
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  364  <|@ instruction JUMP ~[] destination: B52 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B58" 
    xhandlers
    flags 
    probability 4590797829349172127
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction JUMP ~[] destination: B48 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B58" 
    xhandlers
    flags 
    probability 4590184488480571407
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  372  <|@ instruction JUMP ~[] destination: B50 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4589632481698830759
    begin_IR
      LIR
      nr  374  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  376  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  378  <|@ instruction CMPCONSTBRANCH [v46|QWORD[*] + v14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B58" 
    xhandlers
    flags 
    probability 4589103330899992928
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  382  <|@ instruction JUMP ~[] destination: B54 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4574598919810748272
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ instruction MOVB [v46|QWORD[*] + v14|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  388  <|@ instruction v47|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  390  <|@ instruction v48|QWORD[*] = ADD (x: v46|QWORD[*], y: v14|QWORD) size: QWORD <|@ <|@
      nr  392  <|@ instruction TESTBRANCH (x: v47|QWORD, y: v47|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4573804030045041739
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  396  <|@ instruction v49|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  398  <|@ instruction MOV (x: [v49|QWORD + v47|QWORD * 1 - 8], y: v48|QWORD[*]) size: QWORD <|@ <|@
      nr  400  <|@ instruction v50|QWORD = LEA [v47|QWORD - 8] size: QWORD <|@ <|@
      nr  402  <|@ instruction MOV (x: [r15|QWORD + 72], y: v50|QWORD) size: QWORD <|@ <|@
      nr  404  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4559498341397223717
    begin_IR
      LIR
      nr  406  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  408  <|@ instruction rsi|QWORD = MOVE v48|QWORD[*] moveKind: QWORD <|@ <|@
      nr  410  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  412  <|@ instruction JUMP ~[] destination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B48" "B50" "B52" "B54" "B57" "B56" 
    successors "B59" "B91" 
    xhandlers
    flags 
    probability 4605841980402785416
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction TESTBRANCH (x: v43|DWORD[_], y: v43|DWORD[_]) trueDestinationProbability: 0.8739340370331193 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B91 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B66" 
    xhandlers
    flags 
    probability 4604875462812446756
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  420  <|@ instruction CMPBRANCH (x: v33|DWORD, y: v35|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B59 -> B60 falseDestination: B59 -> B66 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B67" 
    xhandlers
    flags 
    probability 4600371863185076260
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction JUMP ~[] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B64" 
    xhandlers
    flags 
    probability 4600371863185076260
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction v51|DWORD = SUB (x: v33|DWORD, ~y: v35|DWORD) size: DWORD <|@ <|@
      nr  430  <|@ instruction v52|QWORD = MOVSXD v51|DWORD size: QWORD <|@ <|@
      nr  432  <|@ instruction v53|QWORD = MOV v35|DWORD size: DWORD <|@ <|@
      nr  434  <|@ instruction v54|QWORD = ADD (x: v52|QWORD, y: v53|QWORD) size: QWORD <|@ <|@
      nr  436  <|@ instruction v55|QWORD = DEC v54|QWORD size: QWORD <|@ <|@
      nr  438  <|@ instruction v56|QWORD = MOV v33|DWORD size: DWORD <|@ <|@
      nr  440  <|@ instruction CMPBRANCH (x: v56|QWORD, y: v55|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B60 -> B61 falseDestination: B60 -> B64 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4600371863185076260
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction CMPBRANCH (x: v33|DWORD, y: v35|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B61 -> B62 falseDestination: B61 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B67" 
    xhandlers
    flags 
    probability 4600371863185076260
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  448  <|@ instruction JUMP ~[] destination: B62 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" "B62" 
    successors "B68" 
    xhandlers
    flags 
    probability 4604875462812446756
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction JUMP ~[v35|DWORD] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" "B88" 
    successors "B69" "B90" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4617565855081504432
    begin_IR
      LIR
      nr  454  <|@ instruction [v57|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  456  <|@ instruction CMPBRANCH (x: v33|DWORD, y: v57|DWORD) trueDestinationProbability: 0.9812627296505405 condition: > trueDestination: B68 -> B69 falseDestination: B68 -> B90 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B70" "B71" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617455682992505589
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  460  <|@ instruction v58|DWORD = INC v57|DWORD size: DWORD <|@ <|@
      nr  462  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v58|DWORD) size: DWORD <|@ <|@
      nr  464  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4616878716535993821
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  468  <|@ instruction JUMP ~[] destination: B70 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" "B73" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602790951197370563
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction v59|QWORD[.+] = LEA [v0|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  474  <|@ instruction v60|DWORD[_] = MOV [v59|QWORD[.+]] size: DWORD <|@ <|@
      nr  476  <|@ instruction TESTBRANCH (x: v60|DWORD[_], y: v60|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B73 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" "B75" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601979936891675385
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction v61|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  482  <|@ instruction v62|QWORD[.] = UNCOMPRESSPOINTER (input: v60|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr  484  <|@ instruction TESTBRANCH (x: v61|QWORD, y: v61|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B75 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601149105194298439
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  488  <|@ instruction v63|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  490  <|@ instruction MOV (x: [v63|QWORD + v61|QWORD * 1 - 8], y: v62|QWORD[.]) size: QWORD <|@ <|@
      nr  492  <|@ instruction v64|QWORD = LEA [v61|QWORD - 8] size: QWORD <|@ <|@
      nr  494  <|@ instruction MOV (x: [r15|QWORD + 40], y: v64|QWORD) size: QWORD <|@ <|@
      nr  496  <|@ instruction JUMP ~[] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587545991679145066
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  500  <|@ instruction JUMP ~[] destination: B72 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586807474614810003
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction rsi|QWORD[.] = MOVE v62|QWORD[.] moveKind: QWORD <|@ <|@
      nr  506  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  508  <|@ instruction JUMP ~[] destination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B70" "B72" "B75" "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617455682992505589
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  512  <|@ instruction v65|DWORD[_] = MOV [v42|QWORD[.] + v57|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  514  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v65|DWORD[_]) size: DWORD <|@ <|@
      nr  516  <|@ instruction v66|QWORD[.] = UNCOMPRESSPOINTER (input: v65|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr  518  <|@ instruction v67|QWORD[*] = XOR (x: v0|QWORD[.], y: v66|QWORD[.]) size: QWORD <|@ <|@
      nr  520  <|@ instruction TESTCONSTBRANCH v67|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4616878716535993821
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  524  <|@ instruction TESTBRANCH (x: v66|QWORD[.], y: v66|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4616359446725133229
    begin_IR
      LIR
      nr  526  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  528  <|@ instruction v68|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  530  <|@ instruction CMPCONSTBRANCH [v68|QWORD[*] + v14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4615594589735958993
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  534  <|@ instruction JUMP ~[] destination: B81 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602790951197370563
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  538  <|@ instruction JUMP ~[] destination: B77 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601979936891675385
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  542  <|@ instruction JUMP ~[] destination: B79 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" "B84" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601149105194298438
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  546  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  548  <|@ instruction CMPCONSTBRANCH [v68|QWORD[*] + v14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B82 -> B83 falseDestination: B82 -> B84 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4600401356666659186
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  552  <|@ instruction JUMP ~[] destination: B83 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" "B86" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586142809256908445
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction MOVB [v68|QWORD[*] + v14|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  558  <|@ instruction v69|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  560  <|@ instruction v70|QWORD[*] = ADD (x: v68|QWORD[*], y: v14|QWORD) size: QWORD <|@ <|@
      nr  562  <|@ instruction TESTBRANCH (x: v69|QWORD, y: v69|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B84 -> B85 falseDestination: B84 -> B86 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4585544610434797044
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction v71|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  568  <|@ instruction MOV (x: [v71|QWORD + v69|QWORD * 1 - 8], y: v70|QWORD[*]) size: QWORD <|@ <|@
      nr  570  <|@ instruction v72|QWORD = LEA [v69|QWORD - 8] size: QWORD <|@ <|@
      nr  572  <|@ instruction MOV (x: [r15|QWORD + 72], y: v72|QWORD) size: QWORD <|@ <|@
      nr  574  <|@ instruction JUMP ~[] destination: B86 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4571435612730574153
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction rsi|QWORD = MOVE v70|QWORD[*] moveKind: QWORD <|@ <|@
      nr  580  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  582  <|@ instruction JUMP ~[] destination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B77" "B79" "B81" "B83" "B86" "B85" 
    successors "B88" "B89" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617455682992505588
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  586  <|@ instruction TESTBRANCH (x: v65|DWORD[_], y: v65|DWORD[_]) trueDestinationProbability: 0.8739340370331193 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B89 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B68" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4616728324673108138
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  590  <|@ instruction JUMP ~[v58|DWORD] destination: B88 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B95" 
    xhandlers
    flags 
    probability 4603994086100456013
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction JUMP ~[] destination: B89 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B95" 
    xhandlers
    flags 
    probability 4592396561385874207
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  598  <|@ instruction JUMP ~[] destination: B91 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B95" 
    xhandlers
    flags 
    probability 4591715434359090862
    begin_IR
      LIR
      nr  600  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  602  <|@ instruction JUMP ~[] destination: B90 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" "B90" "B89" "B91" "B93" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  606  <|@ instruction rax|QWORD[.] = MOVE v12|QWORD[.] moveKind: QWORD <|@ <|@
      nr  608  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  612  <|@ instruction MOV [r15|QWORD + 1156] y: -59155 size: DWORD <|@ <|@
      nr  614  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  616  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  620  <|@ instruction JUMP ~[] destination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction JUMP ~[] destination: B64 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" "B63" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  628  <|@ instruction MOV [r15|QWORD + 1156] y: -40475 size: DWORD <|@ <|@
      nr  630  <|@ instruction MOV [r15|QWORD + 1168] y: 1944 size: QWORD <|@ <|@
      nr  632  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 95]
stack: v44|QWORD[.] 
locals: v0|QWORD[.] v42|QWORD[.] v12|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:95] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  634  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  636  <|@ instruction MOV [r15|QWORD + 1156] y: -36891 size: DWORD <|@ <|@
      nr  638  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  640  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
stack: v26|QWORD[.] 
locals: v0|QWORD[.] - v12|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:53] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #5          // next:java.util.HashMap$Node
     4: astore_2      
     5: aload_0       
     6: getfield      #0          // this$0:java.util.HashMap
     9: getfield      #2          // java.util.HashMap.modCount:int
    12: aload_0       
    13: getfield      #3          // expectedModCount:int
    16: if_icmpeq     27
    19: new           #39         // java.util.ConcurrentModificationException
    22: dup           
    23: invokespecial #9          // java.util.ConcurrentModificationException.<init>:()void
    26: athrow        
    27: aload_2       
    28: ifnonnull     39
    31: new           #42         // java.util.NoSuchElementException
    34: dup           
    35: invokespecial #10         // java.util.NoSuchElementException.<init>:()void
    38: athrow        
    39: aload_0       
    40: aload_0       
    41: aload_2       
    42: dup_x1        
    43: putfield      #6          // current:java.util.HashMap$Node
    46: getfield      #11         // java.util.HashMap$Node.next:java.util.HashMap$Node
    49: dup_x1        
    50: putfield      #5          // next:java.util.HashMap$Node
    53: ifnonnull     98
    56: aload_0       
    57: getfield      #0          // this$0:java.util.HashMap
    60: getfield      #4          // java.util.HashMap.table:java.util.HashMap$Node[]
    63: dup           
    64: astore_1      
    65: ifnull        98
    68: aload_0       
    69: getfield      #7          // index:int
    72: aload_1       
    73: arraylength   
    74: if_icmpge     98
    77: aload_0       
    78: aload_1       
    79: aload_0       
    80: dup           
    81: getfield      #7          // index:int
    84: dup_x1        
    85: iconst_1      
    86: iadd          
    87: putfield      #7          // index:int
    90: aaload        
    91: dup_x1        
    92: putfield      #5          // next:java.util.HashMap$Node
    95: ifnull        68
    98: aload_2       
    99: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanLifetimeAnalysis"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B96" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7154f04f slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD[_] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   10  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v2|DWORD = MOV [v1|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction v3|DWORD[_] = MOV [v1|DWORD[_] * 8 + 36] size: DWORD <|@ <|@
      nr   14  <|@ instruction v4|DWORD[_] = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   16  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v5|DWORD[_] = MOV [v4|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   18  <|@ instruction CMPBRANCH (x: v2|DWORD, y: [v0|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B96 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   22  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B8" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   26  <|@ instruction JUMP ~[] destination: B2 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction v6|QWORD[.+] = LEA [v0|QWORD[.] + 24] size: QWORD <|@ <|@
      nr   32  <|@ instruction v7|DWORD[_] = MOV [v6|QWORD[.+]] size: DWORD <|@ <|@
      nr   34  <|@ instruction TESTBRANCH (x: v7|DWORD[_], y: v7|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction v8|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   40  <|@ instruction v9|QWORD[.] = UNCOMPRESSPOINTER (input: v7|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr   42  <|@ instruction TESTBRANCH (x: v8|QWORD, y: v8|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction v10|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   48  <|@ instruction MOV (x: [v10|QWORD + v8|QWORD * 1 - 8], y: v9|QWORD[.]) size: QWORD <|@ <|@
      nr   50  <|@ instruction v11|QWORD = LEA [v8|QWORD - 8] size: QWORD <|@ <|@
      nr   52  <|@ instruction MOV (x: [r15|QWORD + 40], y: v11|QWORD) size: QWORD <|@ <|@
      nr   54  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction JUMP ~[] destination: B4 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction rsi|QWORD[.] = MOVE v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   64  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   66  <|@ instruction JUMP ~[] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" "B7" "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v4|DWORD[_]) size: DWORD <|@ <|@
      nr   72  <|@ instruction v12|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr   74  <|@ instruction v13|QWORD[*] = XOR (x: v0|QWORD[.], y: v12|QWORD[.]) size: QWORD <|@ <|@
      nr   76  <|@ instruction v14|QWORD = MOVE input: long[140438306553856|0x7fba57600000] <|@ <|@
      nr   78  <|@ instruction TESTCONSTBRANCH v13|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction TESTBRANCH (x: v12|QWORD[.], y: v12|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction v15|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   88  <|@ instruction CMPCONSTBRANCH [v15|QWORD[*] + v14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction JUMP ~[] destination: B13 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B19" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   96  <|@ instruction JUMP ~[] destination: B9 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B19" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  100  <|@ instruction JUMP ~[] destination: B11 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  106  <|@ instruction CMPCONSTBRANCH [v15|QWORD[*] + v14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B19" 
    xhandlers
    flags 
    probability 4589917419268529874
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction JUMP ~[] destination: B15 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction MOVB [v15|QWORD[*] + v14|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  116  <|@ instruction v16|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  118  <|@ instruction v17|QWORD[*] = ADD (x: v15|QWORD[*], y: v14|QWORD) size: QWORD <|@ <|@
      nr  120  <|@ instruction TESTBRANCH (x: v16|QWORD, y: v16|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction v18|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  126  <|@ instruction MOV (x: [v18|QWORD + v16|QWORD * 1 - 8], y: v17|QWORD[*]) size: QWORD <|@ <|@
      nr  128  <|@ instruction v19|QWORD = LEA [v16|QWORD - 8] size: QWORD <|@ <|@
      nr  130  <|@ instruction MOV (x: [r15|QWORD + 72], y: v19|QWORD) size: QWORD <|@ <|@
      nr  132  <|@ instruction JUMP ~[] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction rsi|QWORD = MOVE v17|QWORD[*] moveKind: QWORD <|@ <|@
      nr  138  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  140  <|@ instruction JUMP ~[] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" "B13" "B15" "B18" "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B26" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction JUMP ~[] destination: B20 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction v20|QWORD[.+] = LEA [v0|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  154  <|@ instruction v21|DWORD[_] = MOV [v20|QWORD[.+]] size: DWORD <|@ <|@
      nr  156  <|@ instruction TESTBRANCH (x: v21|DWORD[_], y: v21|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction v22|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  162  <|@ instruction v23|QWORD[.] = UNCOMPRESSPOINTER (input: v21|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr  164  <|@ instruction TESTBRANCH (x: v22|QWORD, y: v22|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction v24|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  170  <|@ instruction MOV (x: [v24|QWORD + v22|QWORD * 1 - 8], y: v23|QWORD[.]) size: QWORD <|@ <|@
      nr  172  <|@ instruction v25|QWORD = LEA [v22|QWORD - 8] size: QWORD <|@ <|@
      nr  174  <|@ instruction MOV (x: [r15|QWORD + 40], y: v25|QWORD) size: QWORD <|@ <|@
      nr  176  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B26" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction JUMP ~[] destination: B22 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction rsi|QWORD[.] = MOVE v23|QWORD[.] moveKind: QWORD <|@ <|@
      nr  186  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  188  <|@ instruction JUMP ~[] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" "B25" "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v5|DWORD[_]) size: DWORD <|@ <|@
      nr  194  <|@ instruction v26|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr  196  <|@ instruction v27|QWORD[*] = XOR (x: v0|QWORD[.], y: v26|QWORD[.]) size: QWORD <|@ <|@
      nr  198  <|@ instruction TESTCONSTBRANCH v27|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction TESTBRANCH (x: v26|QWORD[.], y: v26|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction v28|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  208  <|@ instruction CMPCONSTBRANCH [v28|QWORD[*] + v14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B37" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  212  <|@ instruction JUMP ~[] destination: B31 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B37" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction JUMP ~[] destination: B27 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B37" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  220  <|@ instruction JUMP ~[] destination: B29 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  226  <|@ instruction CMPCONSTBRANCH [v28|QWORD[*] + v14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" 
    xhandlers
    flags 
    probability 4589917419268529874
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  230  <|@ instruction JUMP ~[] destination: B33 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction MOVB [v28|QWORD[*] + v14|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  236  <|@ instruction v29|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  238  <|@ instruction v30|QWORD[*] = ADD (x: v28|QWORD[*], y: v14|QWORD) size: QWORD <|@ <|@
      nr  240  <|@ instruction TESTBRANCH (x: v29|QWORD, y: v29|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  244  <|@ instruction v31|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  246  <|@ instruction MOV (x: [v31|QWORD + v29|QWORD * 1 - 8], y: v30|QWORD[*]) size: QWORD <|@ <|@
      nr  248  <|@ instruction v32|QWORD = LEA [v29|QWORD - 8] size: QWORD <|@ <|@
      nr  250  <|@ instruction MOV (x: [r15|QWORD + 72], y: v32|QWORD) size: QWORD <|@ <|@
      nr  252  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction rsi|QWORD = MOVE v30|QWORD[*] moveKind: QWORD <|@ <|@
      nr  258  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  260  <|@ instruction JUMP ~[] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B27" "B29" "B31" "B33" "B36" "B35" 
    successors "B38" "B94" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction TESTBRANCH (x: v5|DWORD[_], y: v5|DWORD[_]) trueDestinationProbability: 0.8674348032491496 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B94 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B93" 
    xhandlers
    flags 
    probability 4605988377658638555
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
stack: v26|QWORD[.] 
locals: v0|QWORD[.] - v12|QWORD[.] 
>@ <|@ instruction v33|DWORD = MOV [v3|DWORD[_] * 8 + 12] size: DWORD state [bci:53] <|@ <|@
      nr  270  <|@ instruction v34|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  272  <|@ instruction CMPBRANCH (x: v33|DWORD, y: v34|DWORD) trueDestinationProbability: 0.9812627296505405 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B93 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B92" 
    xhandlers
    flags 
    probability 4605841980402785416
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction CMPBRANCH (x: v33|DWORD, y: v34|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B92 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4605841980402785416
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction v35|DWORD = INC v34|DWORD size: DWORD <|@ <|@
      nr  282  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v35|DWORD) size: DWORD <|@ <|@
      nr  284  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B47" 
    xhandlers
    flags 
    probability 4605075304317034516
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  288  <|@ instruction JUMP ~[] destination: B41 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B95" 
    xhandlers
    flags 
    probability 4593944184856050836
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  292  <|@ instruction JUMP ~[] destination: B94 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4590797829349172127
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  296  <|@ instruction v36|QWORD[.+] = LEA [v0|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  298  <|@ instruction v37|DWORD[_] = MOV [v36|QWORD[.+]] size: DWORD <|@ <|@
      nr  300  <|@ instruction TESTBRANCH (x: v37|DWORD[_], y: v37|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4590184488480571407
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  304  <|@ instruction v38|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  306  <|@ instruction v39|QWORD[.] = UNCOMPRESSPOINTER (input: v37|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr  308  <|@ instruction TESTBRANCH (x: v38|QWORD, y: v38|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4589632481698830759
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  312  <|@ instruction v40|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  314  <|@ instruction MOV (x: [v40|QWORD + v38|QWORD * 1 - 8], y: v39|QWORD[.]) size: QWORD <|@ <|@
      nr  316  <|@ instruction v41|QWORD = LEA [v38|QWORD - 8] size: QWORD <|@ <|@
      nr  318  <|@ instruction MOV (x: [r15|QWORD + 40], y: v41|QWORD) size: QWORD <|@ <|@
      nr  320  <|@ instruction JUMP ~[] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B95" 
    xhandlers
    flags 
    probability 4580341933595724392
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction JUMP ~[] destination: B93 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B47" 
    xhandlers
    flags 
    probability 4576060348729859198
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  328  <|@ instruction JUMP ~[] destination: B43 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4575482130661533308
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  332  <|@ instruction rsi|QWORD[.] = MOVE v39|QWORD[.] moveKind: QWORD <|@ <|@
      nr  334  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  336  <|@ instruction JUMP ~[] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B41" "B43" "B46" "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4605841980402785416
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  340  <|@ instruction v42|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr  342  <|@ instruction v43|DWORD[_] = MOV [v42|QWORD[.] + v34|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  344  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v43|DWORD[_]) size: DWORD <|@ <|@
      nr  346  <|@ instruction v44|QWORD[.] = UNCOMPRESSPOINTER (input: v43|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr  348  <|@ instruction v45|QWORD[*] = XOR (x: v0|QWORD[.], y: v44|QWORD[.]) size: QWORD <|@ <|@
      nr  350  <|@ instruction TESTCONSTBRANCH v45|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4605075304317034516
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction TESTBRANCH (x: v44|QWORD[.], y: v44|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4604385295839858706
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  358  <|@ instruction v46|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  360  <|@ instruction CMPCONSTBRANCH [v46|QWORD[*] + v14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B58" 
    xhandlers
    flags 
    probability 4603764288210400477
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  364  <|@ instruction JUMP ~[] destination: B52 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B58" 
    xhandlers
    flags 
    probability 4590797829349172127
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction JUMP ~[] destination: B48 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B58" 
    xhandlers
    flags 
    probability 4590184488480571407
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  372  <|@ instruction JUMP ~[] destination: B50 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4589632481698830759
    begin_IR
      LIR
      nr  374  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  376  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  378  <|@ instruction CMPCONSTBRANCH [v46|QWORD[*] + v14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B58" 
    xhandlers
    flags 
    probability 4589103330899992928
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  382  <|@ instruction JUMP ~[] destination: B54 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4574598919810748272
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ instruction MOVB [v46|QWORD[*] + v14|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  388  <|@ instruction v47|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  390  <|@ instruction v48|QWORD[*] = ADD (x: v46|QWORD[*], y: v14|QWORD) size: QWORD <|@ <|@
      nr  392  <|@ instruction TESTBRANCH (x: v47|QWORD, y: v47|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4573804030045041739
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  396  <|@ instruction v49|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  398  <|@ instruction MOV (x: [v49|QWORD + v47|QWORD * 1 - 8], y: v48|QWORD[*]) size: QWORD <|@ <|@
      nr  400  <|@ instruction v50|QWORD = LEA [v47|QWORD - 8] size: QWORD <|@ <|@
      nr  402  <|@ instruction MOV (x: [r15|QWORD + 72], y: v50|QWORD) size: QWORD <|@ <|@
      nr  404  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4559498341397223717
    begin_IR
      LIR
      nr  406  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  408  <|@ instruction rsi|QWORD = MOVE v48|QWORD[*] moveKind: QWORD <|@ <|@
      nr  410  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  412  <|@ instruction JUMP ~[] destination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B48" "B50" "B52" "B54" "B57" "B56" 
    successors "B59" "B91" 
    xhandlers
    flags 
    probability 4605841980402785416
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction TESTBRANCH (x: v43|DWORD[_], y: v43|DWORD[_]) trueDestinationProbability: 0.8739340370331193 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B91 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B66" 
    xhandlers
    flags 
    probability 4604875462812446756
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  420  <|@ instruction CMPBRANCH (x: v33|DWORD, y: v35|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B59 -> B60 falseDestination: B59 -> B66 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B67" 
    xhandlers
    flags 
    probability 4600371863185076260
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction JUMP ~[] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B64" 
    xhandlers
    flags 
    probability 4600371863185076260
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction v51|DWORD = SUB (x: v33|DWORD, ~y: v35|DWORD) size: DWORD <|@ <|@
      nr  430  <|@ instruction v52|QWORD = MOVSXD v51|DWORD size: QWORD <|@ <|@
      nr  432  <|@ instruction v53|QWORD = MOV v35|DWORD size: DWORD <|@ <|@
      nr  434  <|@ instruction v54|QWORD = ADD (x: v52|QWORD, y: v53|QWORD) size: QWORD <|@ <|@
      nr  436  <|@ instruction v55|QWORD = DEC v54|QWORD size: QWORD <|@ <|@
      nr  438  <|@ instruction v56|QWORD = MOV v33|DWORD size: DWORD <|@ <|@
      nr  440  <|@ instruction CMPBRANCH (x: v56|QWORD, y: v55|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B60 -> B61 falseDestination: B60 -> B64 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4600371863185076260
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction CMPBRANCH (x: v33|DWORD, y: v35|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B61 -> B62 falseDestination: B61 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B67" 
    xhandlers
    flags 
    probability 4600371863185076260
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  448  <|@ instruction JUMP ~[] destination: B62 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" "B62" 
    successors "B68" 
    xhandlers
    flags 
    probability 4604875462812446756
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction JUMP ~[v35|DWORD] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" "B88" 
    successors "B69" "B90" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4617565855081504432
    begin_IR
      LIR
      nr  454  <|@ instruction [v57|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  456  <|@ instruction CMPBRANCH (x: v33|DWORD, y: v57|DWORD) trueDestinationProbability: 0.9812627296505405 condition: > trueDestination: B68 -> B69 falseDestination: B68 -> B90 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B70" "B71" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617455682992505589
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  460  <|@ instruction v58|DWORD = INC v57|DWORD size: DWORD <|@ <|@
      nr  462  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v58|DWORD) size: DWORD <|@ <|@
      nr  464  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4616878716535993821
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  468  <|@ instruction JUMP ~[] destination: B70 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" "B73" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602790951197370563
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction v59|QWORD[.+] = LEA [v0|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  474  <|@ instruction v60|DWORD[_] = MOV [v59|QWORD[.+]] size: DWORD <|@ <|@
      nr  476  <|@ instruction TESTBRANCH (x: v60|DWORD[_], y: v60|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B73 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" "B75" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601979936891675385
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction v61|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  482  <|@ instruction v62|QWORD[.] = UNCOMPRESSPOINTER (input: v60|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr  484  <|@ instruction TESTBRANCH (x: v61|QWORD, y: v61|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B75 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601149105194298439
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  488  <|@ instruction v63|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  490  <|@ instruction MOV (x: [v63|QWORD + v61|QWORD * 1 - 8], y: v62|QWORD[.]) size: QWORD <|@ <|@
      nr  492  <|@ instruction v64|QWORD = LEA [v61|QWORD - 8] size: QWORD <|@ <|@
      nr  494  <|@ instruction MOV (x: [r15|QWORD + 40], y: v64|QWORD) size: QWORD <|@ <|@
      nr  496  <|@ instruction JUMP ~[] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587545991679145066
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  500  <|@ instruction JUMP ~[] destination: B72 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586807474614810003
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction rsi|QWORD[.] = MOVE v62|QWORD[.] moveKind: QWORD <|@ <|@
      nr  506  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  508  <|@ instruction JUMP ~[] destination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B70" "B72" "B75" "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617455682992505589
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  512  <|@ instruction v65|DWORD[_] = MOV [v42|QWORD[.] + v57|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  514  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v65|DWORD[_]) size: DWORD <|@ <|@
      nr  516  <|@ instruction v66|QWORD[.] = UNCOMPRESSPOINTER (input: v65|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr  518  <|@ instruction v67|QWORD[*] = XOR (x: v0|QWORD[.], y: v66|QWORD[.]) size: QWORD <|@ <|@
      nr  520  <|@ instruction TESTCONSTBRANCH v67|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4616878716535993821
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  524  <|@ instruction TESTBRANCH (x: v66|QWORD[.], y: v66|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4616359446725133229
    begin_IR
      LIR
      nr  526  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  528  <|@ instruction v68|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  530  <|@ instruction CMPCONSTBRANCH [v68|QWORD[*] + v14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4615594589735958993
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  534  <|@ instruction JUMP ~[] destination: B81 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602790951197370563
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  538  <|@ instruction JUMP ~[] destination: B77 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601979936891675385
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  542  <|@ instruction JUMP ~[] destination: B79 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" "B84" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601149105194298438
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  546  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  548  <|@ instruction CMPCONSTBRANCH [v68|QWORD[*] + v14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B82 -> B83 falseDestination: B82 -> B84 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4600401356666659186
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  552  <|@ instruction JUMP ~[] destination: B83 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" "B86" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586142809256908445
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction MOVB [v68|QWORD[*] + v14|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  558  <|@ instruction v69|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  560  <|@ instruction v70|QWORD[*] = ADD (x: v68|QWORD[*], y: v14|QWORD) size: QWORD <|@ <|@
      nr  562  <|@ instruction TESTBRANCH (x: v69|QWORD, y: v69|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B84 -> B85 falseDestination: B84 -> B86 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4585544610434797044
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction v71|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  568  <|@ instruction MOV (x: [v71|QWORD + v69|QWORD * 1 - 8], y: v70|QWORD[*]) size: QWORD <|@ <|@
      nr  570  <|@ instruction v72|QWORD = LEA [v69|QWORD - 8] size: QWORD <|@ <|@
      nr  572  <|@ instruction MOV (x: [r15|QWORD + 72], y: v72|QWORD) size: QWORD <|@ <|@
      nr  574  <|@ instruction JUMP ~[] destination: B86 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4571435612730574153
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction rsi|QWORD = MOVE v70|QWORD[*] moveKind: QWORD <|@ <|@
      nr  580  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  582  <|@ instruction JUMP ~[] destination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B77" "B79" "B81" "B83" "B86" "B85" 
    successors "B88" "B89" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617455682992505588
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  586  <|@ instruction TESTBRANCH (x: v65|DWORD[_], y: v65|DWORD[_]) trueDestinationProbability: 0.8739340370331193 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B89 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B68" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4616728324673108138
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  590  <|@ instruction JUMP ~[v58|DWORD] destination: B88 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B95" 
    xhandlers
    flags 
    probability 4603994086100456013
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction JUMP ~[] destination: B89 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B95" 
    xhandlers
    flags 
    probability 4592396561385874207
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  598  <|@ instruction JUMP ~[] destination: B91 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B95" 
    xhandlers
    flags 
    probability 4591715434359090862
    begin_IR
      LIR
      nr  600  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  602  <|@ instruction JUMP ~[] destination: B90 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" "B90" "B89" "B91" "B93" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  606  <|@ instruction rax|QWORD[.] = MOVE v12|QWORD[.] moveKind: QWORD <|@ <|@
      nr  608  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  612  <|@ instruction MOV [r15|QWORD + 1156] y: -59155 size: DWORD <|@ <|@
      nr  614  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  616  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  620  <|@ instruction JUMP ~[] destination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction JUMP ~[] destination: B64 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" "B63" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  628  <|@ instruction MOV [r15|QWORD + 1156] y: -40475 size: DWORD <|@ <|@
      nr  630  <|@ instruction MOV [r15|QWORD + 1168] y: 1944 size: QWORD <|@ <|@
      nr  632  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 95]
stack: v44|QWORD[.] 
locals: v0|QWORD[.] v42|QWORD[.] v12|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:95] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  634  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  636  <|@ instruction MOV [r15|QWORD + 1156] y: -36891 size: DWORD <|@ <|@
      nr  638  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  640  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
stack: v26|QWORD[.] 
locals: v0|QWORD[.] - v12|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:53] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #5          // next:java.util.HashMap$Node
     4: astore_2      
     5: aload_0       
     6: getfield      #0          // this$0:java.util.HashMap
     9: getfield      #2          // java.util.HashMap.modCount:int
    12: aload_0       
    13: getfield      #3          // expectedModCount:int
    16: if_icmpeq     27
    19: new           #39         // java.util.ConcurrentModificationException
    22: dup           
    23: invokespecial #9          // java.util.ConcurrentModificationException.<init>:()void
    26: athrow        
    27: aload_2       
    28: ifnonnull     39
    31: new           #42         // java.util.NoSuchElementException
    34: dup           
    35: invokespecial #10         // java.util.NoSuchElementException.<init>:()void
    38: athrow        
    39: aload_0       
    40: aload_0       
    41: aload_2       
    42: dup_x1        
    43: putfield      #6          // current:java.util.HashMap$Node
    46: getfield      #11         // java.util.HashMap$Node.next:java.util.HashMap$Node
    49: dup_x1        
    50: putfield      #5          // next:java.util.HashMap$Node
    53: ifnonnull     98
    56: aload_0       
    57: getfield      #0          // this$0:java.util.HashMap
    60: getfield      #4          // java.util.HashMap.table:java.util.HashMap$Node[]
    63: dup           
    64: astore_1      
    65: ifnull        98
    68: aload_0       
    69: getfield      #7          // index:int
    72: aload_1       
    73: arraylength   
    74: if_icmpge     98
    77: aload_0       
    78: aload_1       
    79: aload_0       
    80: dup           
    81: getfield      #7          // index:int
    84: dup_x1        
    85: iconst_1      
    86: iadd          
    87: putfield      #7          // index:int
    90: aaload        
    91: dup_x1        
    92: putfield      #5          // next:java.util.HashMap$Node
    95: ifnull        68
    98: aload_2       
    99: areturn       
   <|@
end_bytecodes
begin_intervals
  name "Before register allocation"
  rax|q fixed "[rax|q]" rax|q v12|q [0, 1[[606, 608[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 2[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v9|q [0, 6[[62, 64[[136, 138[[184, 186[[256, 258[[332, 334[[408, 410[[504, 506[[578, 580[ "NoOptimization"
  v0|q QWORD "[v0|q]" v0|q rsi|q [6, 290[[294, 322[[326, 592[[610, 617[[618, 633[[634, 641[6 MustHaveRegister 8 MustHaveRegister 14 MustHaveRegister 18 MustHaveRegister 30 MustHaveRegister 70 MustHaveRegister 74 ShouldHaveRegister 86 MustHaveRegister 152 MustHaveRegister 192 MustHaveRegister 196 ShouldHaveRegister 206 MustHaveRegister 270 MustHaveRegister 282 MustHaveRegister 296 MustHaveRegister 344 MustHaveRegister 348 ShouldHaveRegister 358 MustHaveRegister 462 MustHaveRegister 472 MustHaveRegister 514 MustHaveRegister 518 ShouldHaveRegister 528 MustHaveRegister 591 LiveAtLoopEnd  "NoSpillStore"
  v1|d DWORD "[v1|d]" v1|d -1 [8, 12[8 MustHaveRegister 10 MustHaveRegister 12 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[v2|d]" v2|d -1 [10, 18[10 MustHaveRegister 18 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[v3|d]" v3|d -1 [12, 290[[294, 322[[326, 340[12 MustHaveRegister 268 MustHaveRegister 340 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[v4|d]" v4|d -1 [14, 72[14 MustHaveRegister 16 MustHaveRegister 70 MustHaveRegister 72 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[v5|d]" v5|d -1 [16, 264[16 MustHaveRegister 192 MustHaveRegister 194 MustHaveRegister 264 MustHaveRegister  "NoSpillStore"
  v6|q QWORD "[v6|q]" v6|q -1 [30, 32[30 MustHaveRegister 32 MustHaveRegister  "NoSpillStore"
  v7|d DWORD "[v7|d]" v7|d -1 [32, 40[32 MustHaveRegister 34 MustHaveRegister 40 MustHaveRegister  "NoSpillStore"
  v8|q QWORD "[v8|q]" v8|q -1 [38, 50[38 MustHaveRegister 42 MustHaveRegister 48 MustHaveRegister 50 MustHaveRegister  "NoSpillStore"
  v9|q QWORD "[v9|q]" v9|q v7|d [40, 48[[60, 62[40 MustHaveRegister 48 MustHaveRegister 62 ShouldHaveRegister  "NoSpillStore"
  v10|q QWORD "[v10|q]" v10|q -1 [46, 48[46 MustHaveRegister 48 MustHaveRegister  "NoSpillStore"
  v11|q QWORD "[v11|q]" v11|q -1 [50, 52[50 MustHaveRegister 52 MustHaveRegister  "NoSpillStore"
  v12|q QWORD "[v12|q]" v12|q v4|d [72, 606[[618, 633[[634, 641[72 MustHaveRegister 74 ShouldHaveRegister 82 MustHaveRegister 606 ShouldHaveRegister  "NoSpillStore"
  v13|q QWORD "[v13|q]" v13|q v0|q [74, 78[74 MustHaveRegister 78 ShouldHaveRegister  "NoSpillStore"
  v14|q QWORD "[v14|q]" v14|q -1 [76, 290[[294, 322[[326, 592[76 MustHaveRegister 88 MustHaveRegister 106 MustHaveRegister 114 MustHaveRegister 118 ShouldHaveRegister 208 MustHaveRegister 226 MustHaveRegister 234 MustHaveRegister 238 ShouldHaveRegister 360 MustHaveRegister 378 MustHaveRegister 386 MustHaveRegister 390 ShouldHaveRegister 530 MustHaveRegister 548 MustHaveRegister 556 MustHaveRegister 560 ShouldHaveRegister 591 LiveAtLoopEnd  "NoSpillStore"
  v15|q QWORD "[v15|q]" v15|q v0|q [86, 90[[102, 108[[112, 118[86 MustHaveRegister 88 MustHaveRegister 106 MustHaveRegister 114 MustHaveRegister 118 ShouldHaveRegister  "NoSpillStore"
  v16|q QWORD "[v16|q]" v16|q -1 [116, 128[116 MustHaveRegister 120 MustHaveRegister 126 MustHaveRegister 128 MustHaveRegister  "NoSpillStore"
  v17|q QWORD "[v17|q]" v17|q v15|q [118, 126[[134, 136[118 MustHaveRegister 126 MustHaveRegister 136 ShouldHaveRegister  "NoSpillStore"
  v18|q QWORD "[v18|q]" v18|q -1 [124, 126[124 MustHaveRegister 126 MustHaveRegister  "NoSpillStore"
  v19|q QWORD "[v19|q]" v19|q -1 [128, 130[128 MustHaveRegister 130 MustHaveRegister  "NoSpillStore"
  v20|q QWORD "[v20|q]" v20|q -1 [152, 154[152 MustHaveRegister 154 MustHaveRegister  "NoSpillStore"
  v21|d DWORD "[v21|d]" v21|d -1 [154, 162[154 MustHaveRegister 156 MustHaveRegister 162 MustHaveRegister  "NoSpillStore"
  v22|q QWORD "[v22|q]" v22|q -1 [160, 172[160 MustHaveRegister 164 MustHaveRegister 170 MustHaveRegister 172 MustHaveRegister  "NoSpillStore"
  v23|q QWORD "[v23|q]" v23|q v21|d [162, 170[[182, 184[162 MustHaveRegister 170 MustHaveRegister 184 ShouldHaveRegister  "NoSpillStore"
  v24|q QWORD "[v24|q]" v24|q -1 [168, 170[168 MustHaveRegister 170 MustHaveRegister  "NoSpillStore"
  v25|q QWORD "[v25|q]" v25|q -1 [172, 174[172 MustHaveRegister 174 MustHaveRegister  "NoSpillStore"
  v26|q QWORD "[v26|q]" v26|q v5|d [194, 278[[634, 641[194 MustHaveRegister 196 ShouldHaveRegister 202 MustHaveRegister  "NoSpillStore"
  v27|q QWORD "[v27|q]" v27|q v0|q [196, 198[196 MustHaveRegister 198 ShouldHaveRegister  "NoSpillStore"
  v28|q QWORD "[v28|q]" v28|q v0|q [206, 210[[222, 228[[232, 238[206 MustHaveRegister 208 MustHaveRegister 226 MustHaveRegister 234 MustHaveRegister 238 ShouldHaveRegister  "NoSpillStore"
  v29|q QWORD "[v29|q]" v29|q -1 [236, 248[236 MustHaveRegister 240 MustHaveRegister 246 MustHaveRegister 248 MustHaveRegister  "NoSpillStore"
  v30|q QWORD "[v30|q]" v30|q v28|q [238, 246[[254, 256[238 MustHaveRegister 246 MustHaveRegister 256 ShouldHaveRegister  "NoSpillStore"
  v31|q QWORD "[v31|q]" v31|q -1 [244, 246[244 MustHaveRegister 246 MustHaveRegister  "NoSpillStore"
  v32|q QWORD "[v32|q]" v32|q -1 [248, 250[248 MustHaveRegister 250 MustHaveRegister  "NoSpillStore"
  v33|d DWORD "[v33|d]" v33|d -1 [268, 290[[294, 322[[326, 592[268 MustHaveRegister 272 MustHaveRegister 276 MustHaveRegister 420 MustHaveRegister 428 MustHaveRegister 438 ShouldHaveRegister 444 MustHaveRegister 456 MustHaveRegister 591 LiveAtLoopEnd  "NoSpillStore"
  v34|d DWORD "[v34|d]" v34|d -1 [270, 290[[294, 322[[326, 342[270 MustHaveRegister 272 ShouldHaveRegister 276 ShouldHaveRegister 280 ShouldHaveRegister 342 MustHaveRegister  "NoSpillStore"
  v35|d DWORD "[v35|d]" v35|d v34|d [280, 290[[294, 322[[326, 453[280 MustHaveRegister 282 MustHaveRegister 420 ShouldHaveRegister 428 ShouldHaveRegister 432 ShouldHaveRegister 444 ShouldHaveRegister 452 ShouldHaveRegister  "NoSpillStore"
  v36|q QWORD "[v36|q]" v36|q -1 [296, 298[296 MustHaveRegister 298 MustHaveRegister  "NoSpillStore"
  v37|d DWORD "[v37|d]" v37|d -1 [298, 306[298 MustHaveRegister 300 MustHaveRegister 306 MustHaveRegister  "NoSpillStore"
  v38|q QWORD "[v38|q]" v38|q -1 [304, 316[304 MustHaveRegister 308 MustHaveRegister 314 MustHaveRegister 316 MustHaveRegister  "NoSpillStore"
  v39|q QWORD "[v39|q]" v39|q v37|d [306, 314[[330, 332[306 MustHaveRegister 314 MustHaveRegister 332 ShouldHaveRegister  "NoSpillStore"
  v40|q QWORD "[v40|q]" v40|q -1 [312, 314[312 MustHaveRegister 314 MustHaveRegister  "NoSpillStore"
  v41|q QWORD "[v41|q]" v41|q -1 [316, 318[316 MustHaveRegister 318 MustHaveRegister  "NoSpillStore"
  v42|q QWORD "[v42|q]" v42|q v3|d [340, 592[[618, 633[340 MustHaveRegister 342 MustHaveRegister 512 MustHaveRegister 591 LiveAtLoopEnd  "NoSpillStore"
  v43|d DWORD "[v43|d]" v43|d -1 [342, 416[342 MustHaveRegister 344 MustHaveRegister 346 MustHaveRegister 416 MustHaveRegister  "NoSpillStore"
  v44|q QWORD "[v44|q]" v44|q v43|d [346, 422[[426, 446[[618, 633[346 MustHaveRegister 348 ShouldHaveRegister 354 MustHaveRegister  "NoSpillStore"
  v45|q QWORD "[v45|q]" v45|q v0|q [348, 350[348 MustHaveRegister 350 ShouldHaveRegister  "NoSpillStore"
  v46|q QWORD "[v46|q]" v46|q v0|q [358, 362[[374, 380[[384, 390[358 MustHaveRegister 360 MustHaveRegister 378 MustHaveRegister 386 MustHaveRegister 390 ShouldHaveRegister  "NoSpillStore"
  v47|q QWORD "[v47|q]" v47|q -1 [388, 400[388 MustHaveRegister 392 MustHaveRegister 398 MustHaveRegister 400 MustHaveRegister  "NoSpillStore"
  v48|q QWORD "[v48|q]" v48|q v46|q [390, 398[[406, 408[390 MustHaveRegister 398 MustHaveRegister 408 ShouldHaveRegister  "NoSpillStore"
  v49|q QWORD "[v49|q]" v49|q -1 [396, 398[396 MustHaveRegister 398 MustHaveRegister  "NoSpillStore"
  v50|q QWORD "[v50|q]" v50|q -1 [400, 402[400 MustHaveRegister 402 MustHaveRegister  "NoSpillStore"
  v51|d DWORD "[v51|d]" v51|d v33|d [428, 430[428 MustHaveRegister 430 ShouldHaveRegister  "NoSpillStore"
  v52|q QWORD "[v52|q]" v52|q -1 [430, 434[430 MustHaveRegister 434 ShouldHaveRegister  "NoSpillStore"
  v53|q QWORD "[v53|q]" v53|q -1 [432, 434[432 MustHaveRegister 434 ShouldHaveRegister  "NoSpillStore"
  v54|q QWORD "[v54|q]" v54|q v52|q [434, 436[434 MustHaveRegister 436 ShouldHaveRegister  "NoSpillStore"
  v55|q QWORD "[v55|q]" v55|q v54|q [436, 440[436 MustHaveRegister 440 ShouldHaveRegister  "NoSpillStore"
  v56|q QWORD "[v56|q]" v56|q -1 [438, 440[438 MustHaveRegister 440 MustHaveRegister  "NoSpillStore"
  v57|d DWORD "[v57|d]" v57|d v58|d [454, 512[456 ShouldHaveRegister 460 ShouldHaveRegister 512 MustHaveRegister  "NoSpillStore"
  v58|d DWORD "[v58|d]" v58|d v57|d [460, 591[460 MustHaveRegister 462 MustHaveRegister 590 ShouldHaveRegister  "NoSpillStore"
  v59|q QWORD "[v59|q]" v59|q -1 [472, 474[472 MustHaveRegister 474 MustHaveRegister  "NoSpillStore"
  v60|d DWORD "[v60|d]" v60|d -1 [474, 482[474 MustHaveRegister 476 MustHaveRegister 482 MustHaveRegister  "NoSpillStore"
  v61|q QWORD "[v61|q]" v61|q -1 [480, 492[480 MustHaveRegister 484 MustHaveRegister 490 MustHaveRegister 492 MustHaveRegister  "NoSpillStore"
  v62|q QWORD "[v62|q]" v62|q v60|d [482, 490[[502, 504[482 MustHaveRegister 490 MustHaveRegister 504 ShouldHaveRegister  "NoSpillStore"
  v63|q QWORD "[v63|q]" v63|q -1 [488, 490[488 MustHaveRegister 490 MustHaveRegister  "NoSpillStore"
  v64|q QWORD "[v64|q]" v64|q -1 [492, 494[492 MustHaveRegister 494 MustHaveRegister  "NoSpillStore"
  v65|d DWORD "[v65|d]" v65|d -1 [512, 586[512 MustHaveRegister 514 MustHaveRegister 516 MustHaveRegister 586 MustHaveRegister  "NoSpillStore"
  v66|q QWORD "[v66|q]" v66|q v65|d [516, 524[516 MustHaveRegister 518 ShouldHaveRegister 524 MustHaveRegister  "NoSpillStore"
  v67|q QWORD "[v67|q]" v67|q v0|q [518, 520[518 MustHaveRegister 520 ShouldHaveRegister  "NoSpillStore"
  v68|q QWORD "[v68|q]" v68|q v0|q [528, 532[[544, 550[[554, 560[528 MustHaveRegister 530 MustHaveRegister 548 MustHaveRegister 556 MustHaveRegister 560 ShouldHaveRegister  "NoSpillStore"
  v69|q QWORD "[v69|q]" v69|q -1 [558, 570[558 MustHaveRegister 562 MustHaveRegister 568 MustHaveRegister 570 MustHaveRegister  "NoSpillStore"
  v70|q QWORD "[v70|q]" v70|q v68|q [560, 568[[576, 578[560 MustHaveRegister 568 MustHaveRegister 578 ShouldHaveRegister  "NoSpillStore"
  v71|q QWORD "[v71|q]" v71|q -1 [566, 568[566 MustHaveRegister 568 MustHaveRegister  "NoSpillStore"
  v72|q QWORD "[v72|q]" v72|q -1 [570, 572[570 MustHaveRegister 572 MustHaveRegister  "NoSpillStore"
end_intervals
begin_intervals
  name "After register allocation"
  rax|q fixed "[rax|q]" rax|q v12|q [0, 1[[606, 608[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 2[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v9|q [0, 6[[62, 64[[136, 138[[184, 186[[256, 258[[332, 334[[408, 410[[504, 506[[578, 580[ "NoOptimization"
  v0|q QWORD "[r10|q]" v0|q rsi|q [6, 290[[294, 322[[326, 592[[610, 617[[618, 633[[634, 641[6 MustHaveRegister 8 MustHaveRegister 14 MustHaveRegister 18 MustHaveRegister 30 MustHaveRegister 70 MustHaveRegister 74 ShouldHaveRegister 86 MustHaveRegister 152 MustHaveRegister 192 MustHaveRegister 196 ShouldHaveRegister 206 MustHaveRegister 270 MustHaveRegister 282 MustHaveRegister 296 MustHaveRegister 344 MustHaveRegister 348 ShouldHaveRegister 358 MustHaveRegister 462 MustHaveRegister 472 MustHaveRegister 514 MustHaveRegister 518 ShouldHaveRegister 528 MustHaveRegister 591 LiveAtLoopEnd  "NoSpillStore"
  v1|d DWORD "[rsi|d]" v1|d -1 [8, 12[8 MustHaveRegister 10 MustHaveRegister 12 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[rax|d]" v2|d -1 [10, 18[10 MustHaveRegister 18 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[r11|d]" v3|d -1 [12, 290[[294, 322[[326, 340[12 MustHaveRegister 268 MustHaveRegister 340 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[r8|d]" v4|d -1 [14, 72[14 MustHaveRegister 16 MustHaveRegister 70 MustHaveRegister 72 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[r9|d]" v5|d -1 [16, 264[16 MustHaveRegister 192 MustHaveRegister 194 MustHaveRegister 264 MustHaveRegister  "NoSpillStore"
  v6|q QWORD "[rsi|q]" v6|q -1 [30, 32[30 MustHaveRegister 32 MustHaveRegister  "NoSpillStore"
  v7|d DWORD "[rsi|d]" v7|d -1 [32, 40[32 MustHaveRegister 34 MustHaveRegister 40 MustHaveRegister  "NoSpillStore"
  v8|q QWORD "[rax|q]" v8|q -1 [38, 50[38 MustHaveRegister 42 MustHaveRegister 48 MustHaveRegister 50 MustHaveRegister  "NoSpillStore"
  v9|q QWORD "[rsi|q]" v9|q v7|d [40, 48[[60, 62[40 MustHaveRegister 48 MustHaveRegister 62 ShouldHaveRegister  "NoSpillStore"
  v10|q QWORD "[rcx|q]" v10|q -1 [46, 48[46 MustHaveRegister 48 MustHaveRegister  "NoSpillStore"
  v11|q QWORD "[rsi|q]" v11|q -1 [50, 52[50 MustHaveRegister 52 MustHaveRegister  "NoSpillStore"
  v12|q QWORD "[r8|q]" v12|q v4|d [72, 606[[618, 633[[634, 641[72 MustHaveRegister 74 ShouldHaveRegister 82 MustHaveRegister 606 ShouldHaveRegister  "NoSpillStore"
  v13|q QWORD "[rsi|q]" v13|q v0|q [74, 78[74 MustHaveRegister 78 ShouldHaveRegister  "NoSpillStore"
  v14|q QWORD "[rax|q]" v14|q -1 [76, 290[[294, 322[[326, 592[76 MustHaveRegister 88 MustHaveRegister 106 MustHaveRegister 114 MustHaveRegister 118 ShouldHaveRegister 208 MustHaveRegister 226 MustHaveRegister 234 MustHaveRegister 238 ShouldHaveRegister 360 MustHaveRegister 378 MustHaveRegister 386 MustHaveRegister 390 ShouldHaveRegister 530 MustHaveRegister 548 MustHaveRegister 556 MustHaveRegister 560 ShouldHaveRegister 591 LiveAtLoopEnd  "NoSpillStore"
  v15|q QWORD "[rsi|q]" v15|q v0|q [86, 90[[102, 108[[112, 118[86 MustHaveRegister 88 MustHaveRegister 106 MustHaveRegister 114 MustHaveRegister 118 ShouldHaveRegister  "NoSpillStore"
  v16|q QWORD "[rcx|q]" v16|q -1 [116, 128[116 MustHaveRegister 120 MustHaveRegister 126 MustHaveRegister 128 MustHaveRegister  "NoSpillStore"
  v17|q QWORD "[rsi|q]" v17|q v15|q [118, 126[[134, 136[118 MustHaveRegister 126 MustHaveRegister 136 ShouldHaveRegister  "NoSpillStore"
  v18|q QWORD "[rbx|q]" v18|q -1 [124, 126[124 MustHaveRegister 126 MustHaveRegister  "NoSpillStore"
  v19|q QWORD "[rsi|q]" v19|q -1 [128, 130[128 MustHaveRegister 130 MustHaveRegister  "NoSpillStore"
  v20|q QWORD "[rsi|q]" v20|q -1 [152, 154[152 MustHaveRegister 154 MustHaveRegister  "NoSpillStore"
  v21|d DWORD "[rsi|d]" v21|d -1 [154, 162[154 MustHaveRegister 156 MustHaveRegister 162 MustHaveRegister  "NoSpillStore"
  v22|q QWORD "[rcx|q]" v22|q -1 [160, 172[160 MustHaveRegister 164 MustHaveRegister 170 MustHaveRegister 172 MustHaveRegister  "NoSpillStore"
  v23|q QWORD "[rsi|q]" v23|q v21|d [162, 170[[182, 184[162 MustHaveRegister 170 MustHaveRegister 184 ShouldHaveRegister  "NoSpillStore"
  v24|q QWORD "[rbx|q]" v24|q -1 [168, 170[168 MustHaveRegister 170 MustHaveRegister  "NoSpillStore"
  v25|q QWORD "[rsi|q]" v25|q -1 [172, 174[172 MustHaveRegister 174 MustHaveRegister  "NoSpillStore"
  v26|q QWORD "[rcx|q]" v26|q v5|d [194, 278[[634, 641[194 MustHaveRegister 196 ShouldHaveRegister 202 MustHaveRegister  "NoSpillStore"
  v27|q QWORD "[rsi|q]" v27|q v0|q [196, 198[196 MustHaveRegister 198 ShouldHaveRegister  "NoSpillStore"
  v28|q QWORD "[rsi|q]" v28|q v0|q [206, 210[[222, 228[[232, 238[206 MustHaveRegister 208 MustHaveRegister 226 MustHaveRegister 234 MustHaveRegister 238 ShouldHaveRegister  "NoSpillStore"
  v29|q QWORD "[rbx|q]" v29|q -1 [236, 248[236 MustHaveRegister 240 MustHaveRegister 246 MustHaveRegister 248 MustHaveRegister  "NoSpillStore"
  v30|q QWORD "[rsi|q]" v30|q v28|q [238, 246[[254, 256[238 MustHaveRegister 246 MustHaveRegister 256 ShouldHaveRegister  "NoSpillStore"
  v31|q QWORD "[rdi|q]" v31|q -1 [244, 246[244 MustHaveRegister 246 MustHaveRegister  "NoSpillStore"
  v32|q QWORD "[rsi|q]" v32|q -1 [248, 250[248 MustHaveRegister 250 MustHaveRegister  "NoSpillStore"
  v33|d DWORD "[r9|d]" v33|d -1 [268, 290[[294, 322[[326, 592[268 MustHaveRegister 272 MustHaveRegister 276 MustHaveRegister 420 MustHaveRegister 428 MustHaveRegister 438 ShouldHaveRegister 444 MustHaveRegister 456 MustHaveRegister 591 LiveAtLoopEnd  "NoSpillStore"
  v34|d DWORD "[rbx|d]" v34|d -1 [270, 290[[294, 322[[326, 342[270 MustHaveRegister 272 ShouldHaveRegister 276 ShouldHaveRegister 280 ShouldHaveRegister 342 MustHaveRegister  "NoSpillStore"
  v35|d DWORD "[rcx|d]" v35|d v34|d [280, 290[[294, 322[[326, 453[280 MustHaveRegister 282 MustHaveRegister 420 ShouldHaveRegister 428 ShouldHaveRegister 432 ShouldHaveRegister 444 ShouldHaveRegister 452 ShouldHaveRegister  "NoSpillStore"
  v36|q QWORD "[rsi|q]" v36|q -1 [296, 298[296 MustHaveRegister 298 MustHaveRegister  "NoSpillStore"
  v37|d DWORD "[rsi|d]" v37|d -1 [298, 306[298 MustHaveRegister 300 MustHaveRegister 306 MustHaveRegister  "NoSpillStore"
  v38|q QWORD "[rdi|q]" v38|q -1 [304, 316[304 MustHaveRegister 308 MustHaveRegister 314 MustHaveRegister 316 MustHaveRegister  "NoSpillStore"
  v39|q QWORD "[rsi|q]" v39|q v37|d [306, 314[[330, 332[306 MustHaveRegister 314 MustHaveRegister 332 ShouldHaveRegister  "NoSpillStore"
  v40|q QWORD "[rdx|q]" v40|q -1 [312, 314[312 MustHaveRegister 314 MustHaveRegister  "NoSpillStore"
  v41|q QWORD "[rsi|q]" v41|q -1 [316, 318[316 MustHaveRegister 318 MustHaveRegister  "NoSpillStore"
  v42|q QWORD "[r11|q]" v42|q v3|d [340, 592[[618, 633[340 MustHaveRegister 342 MustHaveRegister 512 MustHaveRegister 591 LiveAtLoopEnd  "NoSpillStore"
  v43|d DWORD "[rbx|d]" v43|d -1 [342, 416[342 MustHaveRegister 344 MustHaveRegister 346 MustHaveRegister 416 MustHaveRegister  "NoSpillStore"
  v44|q QWORD "[rdi|q]" v44|q v43|d [346, 422[[426, 446[[618, 633[346 MustHaveRegister 348 ShouldHaveRegister 354 MustHaveRegister  "NoSpillStore"
  v45|q QWORD "[rsi|q]" v45|q v0|q [348, 350[348 MustHaveRegister 350 ShouldHaveRegister  "NoSpillStore"
  v46|q QWORD "[rsi|q]" v46|q v0|q [358, 362[[374, 380[[384, 390[358 MustHaveRegister 360 MustHaveRegister 378 MustHaveRegister 386 MustHaveRegister 390 ShouldHaveRegister  "NoSpillStore"
  v47|q QWORD "[rdx|q]" v47|q -1 [388, 400[388 MustHaveRegister 392 MustHaveRegister 398 MustHaveRegister 400 MustHaveRegister  "NoSpillStore"
  v48|q QWORD "[rsi|q]" v48|q v46|q [390, 398[[406, 408[390 MustHaveRegister 398 MustHaveRegister 408 ShouldHaveRegister  "NoSpillStore"
  v49|q QWORD "[rbp|q]" v49|q -1 [396, 398[396 MustHaveRegister 398 MustHaveRegister  "NoSpillStore"
  v50|q QWORD "[rsi|q]" v50|q -1 [400, 402[400 MustHaveRegister 402 MustHaveRegister  "NoSpillStore"
  v51|d DWORD "[rsi|d]" v51|d v33|d [428, 430[428 MustHaveRegister 430 ShouldHaveRegister  "NoSpillStore"
  v52|q QWORD "[rsi|q]" v52|q -1 [430, 434[430 MustHaveRegister 434 ShouldHaveRegister  "NoSpillStore"
  v53|q QWORD "[rbx|q]" v53|q -1 [432, 434[432 MustHaveRegister 434 ShouldHaveRegister  "NoSpillStore"
  v54|q QWORD "[rsi|q]" v54|q v52|q [434, 436[434 MustHaveRegister 436 ShouldHaveRegister  "NoSpillStore"
  v55|q QWORD "[rsi|q]" v55|q v54|q [436, 440[436 MustHaveRegister 440 ShouldHaveRegister  "NoSpillStore"
  v56|q QWORD "[rbx|q]" v56|q -1 [438, 440[438 MustHaveRegister 440 MustHaveRegister  "NoSpillStore"
  v57|d DWORD "[rcx|d]" v57|d v58|d [454, 512[456 ShouldHaveRegister 460 ShouldHaveRegister 512 MustHaveRegister  "NoSpillStore"
  v58|d DWORD "[rbx|d]" v58|d v57|d [460, 591[460 MustHaveRegister 462 MustHaveRegister 590 ShouldHaveRegister  "NoSpillStore"
  v59|q QWORD "[rsi|q]" v59|q -1 [472, 474[472 MustHaveRegister 474 MustHaveRegister  "NoSpillStore"
  v60|d DWORD "[rsi|d]" v60|d -1 [474, 482[474 MustHaveRegister 476 MustHaveRegister 482 MustHaveRegister  "NoSpillStore"
  v61|q QWORD "[rdi|q]" v61|q -1 [480, 492[480 MustHaveRegister 484 MustHaveRegister 490 MustHaveRegister 492 MustHaveRegister  "NoSpillStore"
  v62|q QWORD "[rsi|q]" v62|q v60|d [482, 490[[502, 504[482 MustHaveRegister 490 MustHaveRegister 504 ShouldHaveRegister  "NoSpillStore"
  v63|q QWORD "[rdx|q]" v63|q -1 [488, 490[488 MustHaveRegister 490 MustHaveRegister  "NoSpillStore"
  v64|q QWORD "[rsi|q]" v64|q -1 [492, 494[492 MustHaveRegister 494 MustHaveRegister  "NoSpillStore"
  v65|d DWORD "[rcx|d]" v65|d -1 [512, 586[512 MustHaveRegister 514 MustHaveRegister 516 MustHaveRegister 586 MustHaveRegister  "NoSpillStore"
  v66|q QWORD "[rsi|q]" v66|q v65|d [516, 524[516 MustHaveRegister 518 ShouldHaveRegister 524 MustHaveRegister  "NoSpillStore"
  v67|q QWORD "[rdi|q]" v67|q v0|q [518, 520[518 MustHaveRegister 520 ShouldHaveRegister  "NoSpillStore"
  v68|q QWORD "[rsi|q]" v68|q v0|q [528, 532[[544, 550[[554, 560[528 MustHaveRegister 530 MustHaveRegister 548 MustHaveRegister 556 MustHaveRegister 560 ShouldHaveRegister  "NoSpillStore"
  v69|q QWORD "[rdi|q]" v69|q -1 [558, 570[558 MustHaveRegister 562 MustHaveRegister 568 MustHaveRegister 570 MustHaveRegister  "NoSpillStore"
  v70|q QWORD "[rsi|q]" v70|q v68|q [560, 568[[576, 578[560 MustHaveRegister 568 MustHaveRegister 578 ShouldHaveRegister  "NoSpillStore"
  v71|q QWORD "[rdx|q]" v71|q -1 [566, 568[566 MustHaveRegister 568 MustHaveRegister  "NoSpillStore"
  v72|q QWORD "[rsi|q]" v72|q -1 [570, 572[570 MustHaveRegister 572 MustHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After LinearScanRegisterAllocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B96" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7154f04f slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD[_] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   10  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v2|DWORD = MOV [v1|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction v3|DWORD[_] = MOV [v1|DWORD[_] * 8 + 36] size: DWORD <|@ <|@
      nr   14  <|@ instruction v4|DWORD[_] = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   16  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v5|DWORD[_] = MOV [v4|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   18  <|@ instruction CMPBRANCH (x: v2|DWORD, y: [v0|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B96 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   22  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B8" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   26  <|@ instruction JUMP ~[] destination: B2 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction v6|QWORD[.+] = LEA [v0|QWORD[.] + 24] size: QWORD <|@ <|@
      nr   32  <|@ instruction v7|DWORD[_] = MOV [v6|QWORD[.+]] size: DWORD <|@ <|@
      nr   34  <|@ instruction TESTBRANCH (x: v7|DWORD[_], y: v7|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction v8|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   40  <|@ instruction v9|QWORD[.] = UNCOMPRESSPOINTER (input: v7|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr   42  <|@ instruction TESTBRANCH (x: v8|QWORD, y: v8|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction v10|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   48  <|@ instruction MOV (x: [v10|QWORD + v8|QWORD * 1 - 8], y: v9|QWORD[.]) size: QWORD <|@ <|@
      nr   50  <|@ instruction v11|QWORD = LEA [v8|QWORD - 8] size: QWORD <|@ <|@
      nr   52  <|@ instruction MOV (x: [r15|QWORD + 40], y: v11|QWORD) size: QWORD <|@ <|@
      nr   54  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction JUMP ~[] destination: B4 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction rsi|QWORD[.] = MOVE v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   64  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   66  <|@ instruction JUMP ~[] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" "B7" "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v4|DWORD[_]) size: DWORD <|@ <|@
      nr   72  <|@ instruction v12|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr   74  <|@ instruction v13|QWORD[*] = XOR (x: v0|QWORD[.], y: v12|QWORD[.]) size: QWORD <|@ <|@
      nr   76  <|@ instruction v14|QWORD = MOVE input: long[140438306553856|0x7fba57600000] <|@ <|@
      nr   78  <|@ instruction TESTCONSTBRANCH v13|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction TESTBRANCH (x: v12|QWORD[.], y: v12|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction v15|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   88  <|@ instruction CMPCONSTBRANCH [v15|QWORD[*] + v14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction JUMP ~[] destination: B13 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B19" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   96  <|@ instruction JUMP ~[] destination: B9 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B19" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  100  <|@ instruction JUMP ~[] destination: B11 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  106  <|@ instruction CMPCONSTBRANCH [v15|QWORD[*] + v14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B19" 
    xhandlers
    flags 
    probability 4589917419268529874
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction JUMP ~[] destination: B15 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction MOVB [v15|QWORD[*] + v14|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  116  <|@ instruction v16|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  118  <|@ instruction v17|QWORD[*] = ADD (x: v15|QWORD[*], y: v14|QWORD) size: QWORD <|@ <|@
      nr  120  <|@ instruction TESTBRANCH (x: v16|QWORD, y: v16|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction v18|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  126  <|@ instruction MOV (x: [v18|QWORD + v16|QWORD * 1 - 8], y: v17|QWORD[*]) size: QWORD <|@ <|@
      nr  128  <|@ instruction v19|QWORD = LEA [v16|QWORD - 8] size: QWORD <|@ <|@
      nr  130  <|@ instruction MOV (x: [r15|QWORD + 72], y: v19|QWORD) size: QWORD <|@ <|@
      nr  132  <|@ instruction JUMP ~[] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction rsi|QWORD = MOVE v17|QWORD[*] moveKind: QWORD <|@ <|@
      nr  138  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  140  <|@ instruction JUMP ~[] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" "B13" "B15" "B18" "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B26" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction JUMP ~[] destination: B20 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction v20|QWORD[.+] = LEA [v0|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  154  <|@ instruction v21|DWORD[_] = MOV [v20|QWORD[.+]] size: DWORD <|@ <|@
      nr  156  <|@ instruction TESTBRANCH (x: v21|DWORD[_], y: v21|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction v22|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  162  <|@ instruction v23|QWORD[.] = UNCOMPRESSPOINTER (input: v21|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr  164  <|@ instruction TESTBRANCH (x: v22|QWORD, y: v22|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction v24|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  170  <|@ instruction MOV (x: [v24|QWORD + v22|QWORD * 1 - 8], y: v23|QWORD[.]) size: QWORD <|@ <|@
      nr  172  <|@ instruction v25|QWORD = LEA [v22|QWORD - 8] size: QWORD <|@ <|@
      nr  174  <|@ instruction MOV (x: [r15|QWORD + 40], y: v25|QWORD) size: QWORD <|@ <|@
      nr  176  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B26" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction JUMP ~[] destination: B22 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction rsi|QWORD[.] = MOVE v23|QWORD[.] moveKind: QWORD <|@ <|@
      nr  186  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  188  <|@ instruction JUMP ~[] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" "B25" "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v5|DWORD[_]) size: DWORD <|@ <|@
      nr  194  <|@ instruction v26|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr  196  <|@ instruction v27|QWORD[*] = XOR (x: v0|QWORD[.], y: v26|QWORD[.]) size: QWORD <|@ <|@
      nr  198  <|@ instruction TESTCONSTBRANCH v27|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction TESTBRANCH (x: v26|QWORD[.], y: v26|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction v28|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  208  <|@ instruction CMPCONSTBRANCH [v28|QWORD[*] + v14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B37" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  212  <|@ instruction JUMP ~[] destination: B31 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B37" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction JUMP ~[] destination: B27 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B37" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  220  <|@ instruction JUMP ~[] destination: B29 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  226  <|@ instruction CMPCONSTBRANCH [v28|QWORD[*] + v14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" 
    xhandlers
    flags 
    probability 4589917419268529874
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  230  <|@ instruction JUMP ~[] destination: B33 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction MOVB [v28|QWORD[*] + v14|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  236  <|@ instruction v29|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  238  <|@ instruction v30|QWORD[*] = ADD (x: v28|QWORD[*], y: v14|QWORD) size: QWORD <|@ <|@
      nr  240  <|@ instruction TESTBRANCH (x: v29|QWORD, y: v29|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  244  <|@ instruction v31|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  246  <|@ instruction MOV (x: [v31|QWORD + v29|QWORD * 1 - 8], y: v30|QWORD[*]) size: QWORD <|@ <|@
      nr  248  <|@ instruction v32|QWORD = LEA [v29|QWORD - 8] size: QWORD <|@ <|@
      nr  250  <|@ instruction MOV (x: [r15|QWORD + 72], y: v32|QWORD) size: QWORD <|@ <|@
      nr  252  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction rsi|QWORD = MOVE v30|QWORD[*] moveKind: QWORD <|@ <|@
      nr  258  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  260  <|@ instruction JUMP ~[] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B27" "B29" "B31" "B33" "B36" "B35" 
    successors "B38" "B94" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction TESTBRANCH (x: v5|DWORD[_], y: v5|DWORD[_]) trueDestinationProbability: 0.8674348032491496 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B94 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B93" 
    xhandlers
    flags 
    probability 4605988377658638555
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
stack: v26|QWORD[.] 
locals: v0|QWORD[.] - v12|QWORD[.] 
>@ <|@ instruction v33|DWORD = MOV [v3|DWORD[_] * 8 + 12] size: DWORD state [bci:53] <|@ <|@
      nr  270  <|@ instruction v34|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  272  <|@ instruction CMPBRANCH (x: v33|DWORD, y: v34|DWORD) trueDestinationProbability: 0.9812627296505405 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B93 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B92" 
    xhandlers
    flags 
    probability 4605841980402785416
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction CMPBRANCH (x: v33|DWORD, y: v34|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B92 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4605841980402785416
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction v35|DWORD = INC v34|DWORD size: DWORD <|@ <|@
      nr  282  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v35|DWORD) size: DWORD <|@ <|@
      nr  284  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B47" 
    xhandlers
    flags 
    probability 4605075304317034516
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  288  <|@ instruction JUMP ~[] destination: B41 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B95" 
    xhandlers
    flags 
    probability 4593944184856050836
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  292  <|@ instruction JUMP ~[] destination: B94 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4590797829349172127
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  296  <|@ instruction v36|QWORD[.+] = LEA [v0|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  298  <|@ instruction v37|DWORD[_] = MOV [v36|QWORD[.+]] size: DWORD <|@ <|@
      nr  300  <|@ instruction TESTBRANCH (x: v37|DWORD[_], y: v37|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4590184488480571407
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  304  <|@ instruction v38|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  306  <|@ instruction v39|QWORD[.] = UNCOMPRESSPOINTER (input: v37|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr  308  <|@ instruction TESTBRANCH (x: v38|QWORD, y: v38|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4589632481698830759
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  312  <|@ instruction v40|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  314  <|@ instruction MOV (x: [v40|QWORD + v38|QWORD * 1 - 8], y: v39|QWORD[.]) size: QWORD <|@ <|@
      nr  316  <|@ instruction v41|QWORD = LEA [v38|QWORD - 8] size: QWORD <|@ <|@
      nr  318  <|@ instruction MOV (x: [r15|QWORD + 40], y: v41|QWORD) size: QWORD <|@ <|@
      nr  320  <|@ instruction JUMP ~[] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B95" 
    xhandlers
    flags 
    probability 4580341933595724392
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction JUMP ~[] destination: B93 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B47" 
    xhandlers
    flags 
    probability 4576060348729859198
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  328  <|@ instruction JUMP ~[] destination: B43 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4575482130661533308
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  332  <|@ instruction rsi|QWORD[.] = MOVE v39|QWORD[.] moveKind: QWORD <|@ <|@
      nr  334  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  336  <|@ instruction JUMP ~[] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B41" "B43" "B46" "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4605841980402785416
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  340  <|@ instruction v42|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr  342  <|@ instruction v43|DWORD[_] = MOV [v42|QWORD[.] + v34|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  344  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v43|DWORD[_]) size: DWORD <|@ <|@
      nr  346  <|@ instruction v44|QWORD[.] = UNCOMPRESSPOINTER (input: v43|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr  348  <|@ instruction v45|QWORD[*] = XOR (x: v0|QWORD[.], y: v44|QWORD[.]) size: QWORD <|@ <|@
      nr  350  <|@ instruction TESTCONSTBRANCH v45|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4605075304317034516
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction TESTBRANCH (x: v44|QWORD[.], y: v44|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4604385295839858706
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  358  <|@ instruction v46|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  360  <|@ instruction CMPCONSTBRANCH [v46|QWORD[*] + v14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B58" 
    xhandlers
    flags 
    probability 4603764288210400477
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  364  <|@ instruction JUMP ~[] destination: B52 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B58" 
    xhandlers
    flags 
    probability 4590797829349172127
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction JUMP ~[] destination: B48 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B58" 
    xhandlers
    flags 
    probability 4590184488480571407
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  372  <|@ instruction JUMP ~[] destination: B50 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4589632481698830759
    begin_IR
      LIR
      nr  374  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  376  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  378  <|@ instruction CMPCONSTBRANCH [v46|QWORD[*] + v14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B58" 
    xhandlers
    flags 
    probability 4589103330899992928
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  382  <|@ instruction JUMP ~[] destination: B54 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4574598919810748272
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ instruction MOVB [v46|QWORD[*] + v14|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  388  <|@ instruction v47|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  390  <|@ instruction v48|QWORD[*] = ADD (x: v46|QWORD[*], y: v14|QWORD) size: QWORD <|@ <|@
      nr  392  <|@ instruction TESTBRANCH (x: v47|QWORD, y: v47|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4573804030045041739
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  396  <|@ instruction v49|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  398  <|@ instruction MOV (x: [v49|QWORD + v47|QWORD * 1 - 8], y: v48|QWORD[*]) size: QWORD <|@ <|@
      nr  400  <|@ instruction v50|QWORD = LEA [v47|QWORD - 8] size: QWORD <|@ <|@
      nr  402  <|@ instruction MOV (x: [r15|QWORD + 72], y: v50|QWORD) size: QWORD <|@ <|@
      nr  404  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4559498341397223717
    begin_IR
      LIR
      nr  406  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  408  <|@ instruction rsi|QWORD = MOVE v48|QWORD[*] moveKind: QWORD <|@ <|@
      nr  410  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  412  <|@ instruction JUMP ~[] destination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B48" "B50" "B52" "B54" "B57" "B56" 
    successors "B59" "B91" 
    xhandlers
    flags 
    probability 4605841980402785416
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction TESTBRANCH (x: v43|DWORD[_], y: v43|DWORD[_]) trueDestinationProbability: 0.8739340370331193 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B91 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B66" 
    xhandlers
    flags 
    probability 4604875462812446756
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  420  <|@ instruction CMPBRANCH (x: v33|DWORD, y: v35|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B59 -> B60 falseDestination: B59 -> B66 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B67" 
    xhandlers
    flags 
    probability 4600371863185076260
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction JUMP ~[] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B64" 
    xhandlers
    flags 
    probability 4600371863185076260
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction v51|DWORD = SUB (x: v33|DWORD, ~y: v35|DWORD) size: DWORD <|@ <|@
      nr  430  <|@ instruction v52|QWORD = MOVSXD v51|DWORD size: QWORD <|@ <|@
      nr  432  <|@ instruction v53|QWORD = MOV v35|DWORD size: DWORD <|@ <|@
      nr  434  <|@ instruction v54|QWORD = ADD (x: v52|QWORD, y: v53|QWORD) size: QWORD <|@ <|@
      nr  436  <|@ instruction v55|QWORD = DEC v54|QWORD size: QWORD <|@ <|@
      nr  438  <|@ instruction v56|QWORD = MOV v33|DWORD size: DWORD <|@ <|@
      nr  440  <|@ instruction CMPBRANCH (x: v56|QWORD, y: v55|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B60 -> B61 falseDestination: B60 -> B64 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4600371863185076260
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction CMPBRANCH (x: v33|DWORD, y: v35|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B61 -> B62 falseDestination: B61 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B67" 
    xhandlers
    flags 
    probability 4600371863185076260
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  448  <|@ instruction JUMP ~[] destination: B62 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" "B62" 
    successors "B68" 
    xhandlers
    flags 
    probability 4604875462812446756
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction JUMP ~[v35|DWORD] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" "B88" 
    successors "B69" "B90" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4617565855081504432
    begin_IR
      LIR
      nr  454  <|@ instruction [v57|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  456  <|@ instruction CMPBRANCH (x: v33|DWORD, y: v57|DWORD) trueDestinationProbability: 0.9812627296505405 condition: > trueDestination: B68 -> B69 falseDestination: B68 -> B90 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B70" "B71" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617455682992505589
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  460  <|@ instruction v58|DWORD = INC v57|DWORD size: DWORD <|@ <|@
      nr  462  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v58|DWORD) size: DWORD <|@ <|@
      nr  464  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4616878716535993821
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  468  <|@ instruction JUMP ~[] destination: B70 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" "B73" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602790951197370563
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction v59|QWORD[.+] = LEA [v0|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  474  <|@ instruction v60|DWORD[_] = MOV [v59|QWORD[.+]] size: DWORD <|@ <|@
      nr  476  <|@ instruction TESTBRANCH (x: v60|DWORD[_], y: v60|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B73 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" "B75" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601979936891675385
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction v61|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  482  <|@ instruction v62|QWORD[.] = UNCOMPRESSPOINTER (input: v60|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr  484  <|@ instruction TESTBRANCH (x: v61|QWORD, y: v61|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B75 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601149105194298439
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  488  <|@ instruction v63|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  490  <|@ instruction MOV (x: [v63|QWORD + v61|QWORD * 1 - 8], y: v62|QWORD[.]) size: QWORD <|@ <|@
      nr  492  <|@ instruction v64|QWORD = LEA [v61|QWORD - 8] size: QWORD <|@ <|@
      nr  494  <|@ instruction MOV (x: [r15|QWORD + 40], y: v64|QWORD) size: QWORD <|@ <|@
      nr  496  <|@ instruction JUMP ~[] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587545991679145066
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  500  <|@ instruction JUMP ~[] destination: B72 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586807474614810003
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction rsi|QWORD[.] = MOVE v62|QWORD[.] moveKind: QWORD <|@ <|@
      nr  506  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  508  <|@ instruction JUMP ~[] destination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B70" "B72" "B75" "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617455682992505589
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  512  <|@ instruction v65|DWORD[_] = MOV [v42|QWORD[.] + v57|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  514  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v65|DWORD[_]) size: DWORD <|@ <|@
      nr  516  <|@ instruction v66|QWORD[.] = UNCOMPRESSPOINTER (input: v65|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr  518  <|@ instruction v67|QWORD[*] = XOR (x: v0|QWORD[.], y: v66|QWORD[.]) size: QWORD <|@ <|@
      nr  520  <|@ instruction TESTCONSTBRANCH v67|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4616878716535993821
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  524  <|@ instruction TESTBRANCH (x: v66|QWORD[.], y: v66|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4616359446725133229
    begin_IR
      LIR
      nr  526  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  528  <|@ instruction v68|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  530  <|@ instruction CMPCONSTBRANCH [v68|QWORD[*] + v14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4615594589735958993
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  534  <|@ instruction JUMP ~[] destination: B81 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602790951197370563
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  538  <|@ instruction JUMP ~[] destination: B77 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601979936891675385
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  542  <|@ instruction JUMP ~[] destination: B79 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" "B84" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601149105194298438
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  546  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  548  <|@ instruction CMPCONSTBRANCH [v68|QWORD[*] + v14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B82 -> B83 falseDestination: B82 -> B84 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4600401356666659186
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  552  <|@ instruction JUMP ~[] destination: B83 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" "B86" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586142809256908445
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction MOVB [v68|QWORD[*] + v14|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  558  <|@ instruction v69|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  560  <|@ instruction v70|QWORD[*] = ADD (x: v68|QWORD[*], y: v14|QWORD) size: QWORD <|@ <|@
      nr  562  <|@ instruction TESTBRANCH (x: v69|QWORD, y: v69|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B84 -> B85 falseDestination: B84 -> B86 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4585544610434797044
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction v71|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  568  <|@ instruction MOV (x: [v71|QWORD + v69|QWORD * 1 - 8], y: v70|QWORD[*]) size: QWORD <|@ <|@
      nr  570  <|@ instruction v72|QWORD = LEA [v69|QWORD - 8] size: QWORD <|@ <|@
      nr  572  <|@ instruction MOV (x: [r15|QWORD + 72], y: v72|QWORD) size: QWORD <|@ <|@
      nr  574  <|@ instruction JUMP ~[] destination: B86 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4571435612730574153
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction rsi|QWORD = MOVE v70|QWORD[*] moveKind: QWORD <|@ <|@
      nr  580  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  582  <|@ instruction JUMP ~[] destination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B77" "B79" "B81" "B83" "B86" "B85" 
    successors "B88" "B89" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617455682992505588
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  586  <|@ instruction TESTBRANCH (x: v65|DWORD[_], y: v65|DWORD[_]) trueDestinationProbability: 0.8739340370331193 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B89 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B68" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4616728324673108138
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  590  <|@ instruction JUMP ~[v58|DWORD] destination: B88 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B95" 
    xhandlers
    flags 
    probability 4603994086100456013
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction JUMP ~[] destination: B89 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B95" 
    xhandlers
    flags 
    probability 4592396561385874207
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  598  <|@ instruction JUMP ~[] destination: B91 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B95" 
    xhandlers
    flags 
    probability 4591715434359090862
    begin_IR
      LIR
      nr  600  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  602  <|@ instruction JUMP ~[] destination: B90 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" "B90" "B89" "B91" "B93" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  606  <|@ instruction rax|QWORD[.] = MOVE v12|QWORD[.] moveKind: QWORD <|@ <|@
      nr  608  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  612  <|@ instruction MOV [r15|QWORD + 1156] y: -59155 size: DWORD <|@ <|@
      nr  614  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  616  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  620  <|@ instruction JUMP ~[] destination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction JUMP ~[] destination: B64 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" "B63" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  628  <|@ instruction MOV [r15|QWORD + 1156] y: -40475 size: DWORD <|@ <|@
      nr  630  <|@ instruction MOV [r15|QWORD + 1168] y: 1944 size: QWORD <|@ <|@
      nr  632  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 95]
stack: v44|QWORD[.] 
locals: v0|QWORD[.] v42|QWORD[.] v12|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:95] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  634  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  636  <|@ instruction MOV [r15|QWORD + 1156] y: -36891 size: DWORD <|@ <|@
      nr  638  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  640  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
stack: v26|QWORD[.] 
locals: v0|QWORD[.] - v12|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:53] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #5          // next:java.util.HashMap$Node
     4: astore_2      
     5: aload_0       
     6: getfield      #0          // this$0:java.util.HashMap
     9: getfield      #2          // java.util.HashMap.modCount:int
    12: aload_0       
    13: getfield      #3          // expectedModCount:int
    16: if_icmpeq     27
    19: new           #39         // java.util.ConcurrentModificationException
    22: dup           
    23: invokespecial #9          // java.util.ConcurrentModificationException.<init>:()void
    26: athrow        
    27: aload_2       
    28: ifnonnull     39
    31: new           #42         // java.util.NoSuchElementException
    34: dup           
    35: invokespecial #10         // java.util.NoSuchElementException.<init>:()void
    38: athrow        
    39: aload_0       
    40: aload_0       
    41: aload_2       
    42: dup_x1        
    43: putfield      #6          // current:java.util.HashMap$Node
    46: getfield      #11         // java.util.HashMap$Node.next:java.util.HashMap$Node
    49: dup_x1        
    50: putfield      #5          // next:java.util.HashMap$Node
    53: ifnonnull     98
    56: aload_0       
    57: getfield      #0          // this$0:java.util.HashMap
    60: getfield      #4          // java.util.HashMap.table:java.util.HashMap$Node[]
    63: dup           
    64: astore_1      
    65: ifnull        98
    68: aload_0       
    69: getfield      #7          // index:int
    72: aload_1       
    73: arraylength   
    74: if_icmpge     98
    77: aload_0       
    78: aload_1       
    79: aload_0       
    80: dup           
    81: getfield      #7          // index:int
    84: dup_x1        
    85: iconst_1      
    86: iadd          
    87: putfield      #7          // index:int
    90: aaload        
    91: dup_x1        
    92: putfield      #5          // next:java.util.HashMap$Node
    95: ifnull        68
    98: aload_2       
    99: areturn       
   <|@
end_bytecodes
begin_intervals
  name "After optimize spill position"
  rax|q fixed "[rax|q]" rax|q v12|q [0, 1[[606, 608[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 2[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v9|q [0, 6[[62, 64[[136, 138[[184, 186[[256, 258[[332, 334[[408, 410[[504, 506[[578, 580[ "NoOptimization"
  v0|q QWORD "[r10|q]" v0|q rsi|q [6, 290[[294, 322[[326, 592[[610, 617[[618, 633[[634, 641[6 MustHaveRegister 8 MustHaveRegister 14 MustHaveRegister 18 MustHaveRegister 30 MustHaveRegister 70 MustHaveRegister 74 ShouldHaveRegister 86 MustHaveRegister 152 MustHaveRegister 192 MustHaveRegister 196 ShouldHaveRegister 206 MustHaveRegister 270 MustHaveRegister 282 MustHaveRegister 296 MustHaveRegister 344 MustHaveRegister 348 ShouldHaveRegister 358 MustHaveRegister 462 MustHaveRegister 472 MustHaveRegister 514 MustHaveRegister 518 ShouldHaveRegister 528 MustHaveRegister 591 LiveAtLoopEnd  "NoSpillStore"
  v1|d DWORD "[rsi|d]" v1|d -1 [8, 12[8 MustHaveRegister 10 MustHaveRegister 12 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[rax|d]" v2|d -1 [10, 18[10 MustHaveRegister 18 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[r11|d]" v3|d -1 [12, 290[[294, 322[[326, 340[12 MustHaveRegister 268 MustHaveRegister 340 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[r8|d]" v4|d -1 [14, 72[14 MustHaveRegister 16 MustHaveRegister 70 MustHaveRegister 72 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[r9|d]" v5|d -1 [16, 264[16 MustHaveRegister 192 MustHaveRegister 194 MustHaveRegister 264 MustHaveRegister  "NoSpillStore"
  v6|q QWORD "[rsi|q]" v6|q -1 [30, 32[30 MustHaveRegister 32 MustHaveRegister  "NoSpillStore"
  v7|d DWORD "[rsi|d]" v7|d -1 [32, 40[32 MustHaveRegister 34 MustHaveRegister 40 MustHaveRegister  "NoSpillStore"
  v8|q QWORD "[rax|q]" v8|q -1 [38, 50[38 MustHaveRegister 42 MustHaveRegister 48 MustHaveRegister 50 MustHaveRegister  "NoSpillStore"
  v9|q QWORD "[rsi|q]" v9|q v7|d [40, 48[[60, 62[40 MustHaveRegister 48 MustHaveRegister 62 ShouldHaveRegister  "NoSpillStore"
  v10|q QWORD "[rcx|q]" v10|q -1 [46, 48[46 MustHaveRegister 48 MustHaveRegister  "NoSpillStore"
  v11|q QWORD "[rsi|q]" v11|q -1 [50, 52[50 MustHaveRegister 52 MustHaveRegister  "NoSpillStore"
  v12|q QWORD "[r8|q]" v12|q v4|d [72, 606[[618, 633[[634, 641[72 MustHaveRegister 74 ShouldHaveRegister 82 MustHaveRegister 606 ShouldHaveRegister  "NoSpillStore"
  v13|q QWORD "[rsi|q]" v13|q v0|q [74, 78[74 MustHaveRegister 78 ShouldHaveRegister  "NoSpillStore"
  v14|q QWORD "[rax|q]" v14|q -1 [76, 290[[294, 322[[326, 592[76 MustHaveRegister 88 MustHaveRegister 106 MustHaveRegister 114 MustHaveRegister 118 ShouldHaveRegister 208 MustHaveRegister 226 MustHaveRegister 234 MustHaveRegister 238 ShouldHaveRegister 360 MustHaveRegister 378 MustHaveRegister 386 MustHaveRegister 390 ShouldHaveRegister 530 MustHaveRegister 548 MustHaveRegister 556 MustHaveRegister 560 ShouldHaveRegister 591 LiveAtLoopEnd  "NoSpillStore"
  v15|q QWORD "[rsi|q]" v15|q v0|q [86, 90[[102, 108[[112, 118[86 MustHaveRegister 88 MustHaveRegister 106 MustHaveRegister 114 MustHaveRegister 118 ShouldHaveRegister  "NoSpillStore"
  v16|q QWORD "[rcx|q]" v16|q -1 [116, 128[116 MustHaveRegister 120 MustHaveRegister 126 MustHaveRegister 128 MustHaveRegister  "NoSpillStore"
  v17|q QWORD "[rsi|q]" v17|q v15|q [118, 126[[134, 136[118 MustHaveRegister 126 MustHaveRegister 136 ShouldHaveRegister  "NoSpillStore"
  v18|q QWORD "[rbx|q]" v18|q -1 [124, 126[124 MustHaveRegister 126 MustHaveRegister  "NoSpillStore"
  v19|q QWORD "[rsi|q]" v19|q -1 [128, 130[128 MustHaveRegister 130 MustHaveRegister  "NoSpillStore"
  v20|q QWORD "[rsi|q]" v20|q -1 [152, 154[152 MustHaveRegister 154 MustHaveRegister  "NoSpillStore"
  v21|d DWORD "[rsi|d]" v21|d -1 [154, 162[154 MustHaveRegister 156 MustHaveRegister 162 MustHaveRegister  "NoSpillStore"
  v22|q QWORD "[rcx|q]" v22|q -1 [160, 172[160 MustHaveRegister 164 MustHaveRegister 170 MustHaveRegister 172 MustHaveRegister  "NoSpillStore"
  v23|q QWORD "[rsi|q]" v23|q v21|d [162, 170[[182, 184[162 MustHaveRegister 170 MustHaveRegister 184 ShouldHaveRegister  "NoSpillStore"
  v24|q QWORD "[rbx|q]" v24|q -1 [168, 170[168 MustHaveRegister 170 MustHaveRegister  "NoSpillStore"
  v25|q QWORD "[rsi|q]" v25|q -1 [172, 174[172 MustHaveRegister 174 MustHaveRegister  "NoSpillStore"
  v26|q QWORD "[rcx|q]" v26|q v5|d [194, 278[[634, 641[194 MustHaveRegister 196 ShouldHaveRegister 202 MustHaveRegister  "NoSpillStore"
  v27|q QWORD "[rsi|q]" v27|q v0|q [196, 198[196 MustHaveRegister 198 ShouldHaveRegister  "NoSpillStore"
  v28|q QWORD "[rsi|q]" v28|q v0|q [206, 210[[222, 228[[232, 238[206 MustHaveRegister 208 MustHaveRegister 226 MustHaveRegister 234 MustHaveRegister 238 ShouldHaveRegister  "NoSpillStore"
  v29|q QWORD "[rbx|q]" v29|q -1 [236, 248[236 MustHaveRegister 240 MustHaveRegister 246 MustHaveRegister 248 MustHaveRegister  "NoSpillStore"
  v30|q QWORD "[rsi|q]" v30|q v28|q [238, 246[[254, 256[238 MustHaveRegister 246 MustHaveRegister 256 ShouldHaveRegister  "NoSpillStore"
  v31|q QWORD "[rdi|q]" v31|q -1 [244, 246[244 MustHaveRegister 246 MustHaveRegister  "NoSpillStore"
  v32|q QWORD "[rsi|q]" v32|q -1 [248, 250[248 MustHaveRegister 250 MustHaveRegister  "NoSpillStore"
  v33|d DWORD "[r9|d]" v33|d -1 [268, 290[[294, 322[[326, 592[268 MustHaveRegister 272 MustHaveRegister 276 MustHaveRegister 420 MustHaveRegister 428 MustHaveRegister 438 ShouldHaveRegister 444 MustHaveRegister 456 MustHaveRegister 591 LiveAtLoopEnd  "NoSpillStore"
  v34|d DWORD "[rbx|d]" v34|d -1 [270, 290[[294, 322[[326, 342[270 MustHaveRegister 272 ShouldHaveRegister 276 ShouldHaveRegister 280 ShouldHaveRegister 342 MustHaveRegister  "NoSpillStore"
  v35|d DWORD "[rcx|d]" v35|d v34|d [280, 290[[294, 322[[326, 453[280 MustHaveRegister 282 MustHaveRegister 420 ShouldHaveRegister 428 ShouldHaveRegister 432 ShouldHaveRegister 444 ShouldHaveRegister 452 ShouldHaveRegister  "NoSpillStore"
  v36|q QWORD "[rsi|q]" v36|q -1 [296, 298[296 MustHaveRegister 298 MustHaveRegister  "NoSpillStore"
  v37|d DWORD "[rsi|d]" v37|d -1 [298, 306[298 MustHaveRegister 300 MustHaveRegister 306 MustHaveRegister  "NoSpillStore"
  v38|q QWORD "[rdi|q]" v38|q -1 [304, 316[304 MustHaveRegister 308 MustHaveRegister 314 MustHaveRegister 316 MustHaveRegister  "NoSpillStore"
  v39|q QWORD "[rsi|q]" v39|q v37|d [306, 314[[330, 332[306 MustHaveRegister 314 MustHaveRegister 332 ShouldHaveRegister  "NoSpillStore"
  v40|q QWORD "[rdx|q]" v40|q -1 [312, 314[312 MustHaveRegister 314 MustHaveRegister  "NoSpillStore"
  v41|q QWORD "[rsi|q]" v41|q -1 [316, 318[316 MustHaveRegister 318 MustHaveRegister  "NoSpillStore"
  v42|q QWORD "[r11|q]" v42|q v3|d [340, 592[[618, 633[340 MustHaveRegister 342 MustHaveRegister 512 MustHaveRegister 591 LiveAtLoopEnd  "NoSpillStore"
  v43|d DWORD "[rbx|d]" v43|d -1 [342, 416[342 MustHaveRegister 344 MustHaveRegister 346 MustHaveRegister 416 MustHaveRegister  "NoSpillStore"
  v44|q QWORD "[rdi|q]" v44|q v43|d [346, 422[[426, 446[[618, 633[346 MustHaveRegister 348 ShouldHaveRegister 354 MustHaveRegister  "NoSpillStore"
  v45|q QWORD "[rsi|q]" v45|q v0|q [348, 350[348 MustHaveRegister 350 ShouldHaveRegister  "NoSpillStore"
  v46|q QWORD "[rsi|q]" v46|q v0|q [358, 362[[374, 380[[384, 390[358 MustHaveRegister 360 MustHaveRegister 378 MustHaveRegister 386 MustHaveRegister 390 ShouldHaveRegister  "NoSpillStore"
  v47|q QWORD "[rdx|q]" v47|q -1 [388, 400[388 MustHaveRegister 392 MustHaveRegister 398 MustHaveRegister 400 MustHaveRegister  "NoSpillStore"
  v48|q QWORD "[rsi|q]" v48|q v46|q [390, 398[[406, 408[390 MustHaveRegister 398 MustHaveRegister 408 ShouldHaveRegister  "NoSpillStore"
  v49|q QWORD "[rbp|q]" v49|q -1 [396, 398[396 MustHaveRegister 398 MustHaveRegister  "NoSpillStore"
  v50|q QWORD "[rsi|q]" v50|q -1 [400, 402[400 MustHaveRegister 402 MustHaveRegister  "NoSpillStore"
  v51|d DWORD "[rsi|d]" v51|d v33|d [428, 430[428 MustHaveRegister 430 ShouldHaveRegister  "NoSpillStore"
  v52|q QWORD "[rsi|q]" v52|q -1 [430, 434[430 MustHaveRegister 434 ShouldHaveRegister  "NoSpillStore"
  v53|q QWORD "[rbx|q]" v53|q -1 [432, 434[432 MustHaveRegister 434 ShouldHaveRegister  "NoSpillStore"
  v54|q QWORD "[rsi|q]" v54|q v52|q [434, 436[434 MustHaveRegister 436 ShouldHaveRegister  "NoSpillStore"
  v55|q QWORD "[rsi|q]" v55|q v54|q [436, 440[436 MustHaveRegister 440 ShouldHaveRegister  "NoSpillStore"
  v56|q QWORD "[rbx|q]" v56|q -1 [438, 440[438 MustHaveRegister 440 MustHaveRegister  "NoSpillStore"
  v57|d DWORD "[rcx|d]" v57|d v58|d [454, 512[456 ShouldHaveRegister 460 ShouldHaveRegister 512 MustHaveRegister  "NoSpillStore"
  v58|d DWORD "[rbx|d]" v58|d v57|d [460, 591[460 MustHaveRegister 462 MustHaveRegister 590 ShouldHaveRegister  "NoSpillStore"
  v59|q QWORD "[rsi|q]" v59|q -1 [472, 474[472 MustHaveRegister 474 MustHaveRegister  "NoSpillStore"
  v60|d DWORD "[rsi|d]" v60|d -1 [474, 482[474 MustHaveRegister 476 MustHaveRegister 482 MustHaveRegister  "NoSpillStore"
  v61|q QWORD "[rdi|q]" v61|q -1 [480, 492[480 MustHaveRegister 484 MustHaveRegister 490 MustHaveRegister 492 MustHaveRegister  "NoSpillStore"
  v62|q QWORD "[rsi|q]" v62|q v60|d [482, 490[[502, 504[482 MustHaveRegister 490 MustHaveRegister 504 ShouldHaveRegister  "NoSpillStore"
  v63|q QWORD "[rdx|q]" v63|q -1 [488, 490[488 MustHaveRegister 490 MustHaveRegister  "NoSpillStore"
  v64|q QWORD "[rsi|q]" v64|q -1 [492, 494[492 MustHaveRegister 494 MustHaveRegister  "NoSpillStore"
  v65|d DWORD "[rcx|d]" v65|d -1 [512, 586[512 MustHaveRegister 514 MustHaveRegister 516 MustHaveRegister 586 MustHaveRegister  "NoSpillStore"
  v66|q QWORD "[rsi|q]" v66|q v65|d [516, 524[516 MustHaveRegister 518 ShouldHaveRegister 524 MustHaveRegister  "NoSpillStore"
  v67|q QWORD "[rdi|q]" v67|q v0|q [518, 520[518 MustHaveRegister 520 ShouldHaveRegister  "NoSpillStore"
  v68|q QWORD "[rsi|q]" v68|q v0|q [528, 532[[544, 550[[554, 560[528 MustHaveRegister 530 MustHaveRegister 548 MustHaveRegister 556 MustHaveRegister 560 ShouldHaveRegister  "NoSpillStore"
  v69|q QWORD "[rdi|q]" v69|q -1 [558, 570[558 MustHaveRegister 562 MustHaveRegister 568 MustHaveRegister 570 MustHaveRegister  "NoSpillStore"
  v70|q QWORD "[rsi|q]" v70|q v68|q [560, 568[[576, 578[560 MustHaveRegister 568 MustHaveRegister 578 ShouldHaveRegister  "NoSpillStore"
  v71|q QWORD "[rdx|q]" v71|q -1 [566, 568[566 MustHaveRegister 568 MustHaveRegister  "NoSpillStore"
  v72|q QWORD "[rsi|q]" v72|q -1 [570, 572[570 MustHaveRegister 572 MustHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After LinearScanOptimizeSpillPosition"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B96" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7154f04f slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD[_] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   10  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v2|DWORD = MOV [v1|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction v3|DWORD[_] = MOV [v1|DWORD[_] * 8 + 36] size: DWORD <|@ <|@
      nr   14  <|@ instruction v4|DWORD[_] = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   16  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v5|DWORD[_] = MOV [v4|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   18  <|@ instruction CMPBRANCH (x: v2|DWORD, y: [v0|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B96 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   22  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B8" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   26  <|@ instruction JUMP ~[] destination: B2 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction v6|QWORD[.+] = LEA [v0|QWORD[.] + 24] size: QWORD <|@ <|@
      nr   32  <|@ instruction v7|DWORD[_] = MOV [v6|QWORD[.+]] size: DWORD <|@ <|@
      nr   34  <|@ instruction TESTBRANCH (x: v7|DWORD[_], y: v7|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction v8|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   40  <|@ instruction v9|QWORD[.] = UNCOMPRESSPOINTER (input: v7|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr   42  <|@ instruction TESTBRANCH (x: v8|QWORD, y: v8|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction v10|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   48  <|@ instruction MOV (x: [v10|QWORD + v8|QWORD * 1 - 8], y: v9|QWORD[.]) size: QWORD <|@ <|@
      nr   50  <|@ instruction v11|QWORD = LEA [v8|QWORD - 8] size: QWORD <|@ <|@
      nr   52  <|@ instruction MOV (x: [r15|QWORD + 40], y: v11|QWORD) size: QWORD <|@ <|@
      nr   54  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction JUMP ~[] destination: B4 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction rsi|QWORD[.] = MOVE v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   64  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   66  <|@ instruction JUMP ~[] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" "B7" "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v4|DWORD[_]) size: DWORD <|@ <|@
      nr   72  <|@ instruction v12|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr   74  <|@ instruction v13|QWORD[*] = XOR (x: v0|QWORD[.], y: v12|QWORD[.]) size: QWORD <|@ <|@
      nr   76  <|@ instruction v14|QWORD = MOVE input: long[140438306553856|0x7fba57600000] <|@ <|@
      nr   78  <|@ instruction TESTCONSTBRANCH v13|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction TESTBRANCH (x: v12|QWORD[.], y: v12|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction v15|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   88  <|@ instruction CMPCONSTBRANCH [v15|QWORD[*] + v14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction JUMP ~[] destination: B13 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B19" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   96  <|@ instruction JUMP ~[] destination: B9 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B19" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  100  <|@ instruction JUMP ~[] destination: B11 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  106  <|@ instruction CMPCONSTBRANCH [v15|QWORD[*] + v14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B19" 
    xhandlers
    flags 
    probability 4589917419268529874
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction JUMP ~[] destination: B15 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction MOVB [v15|QWORD[*] + v14|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  116  <|@ instruction v16|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  118  <|@ instruction v17|QWORD[*] = ADD (x: v15|QWORD[*], y: v14|QWORD) size: QWORD <|@ <|@
      nr  120  <|@ instruction TESTBRANCH (x: v16|QWORD, y: v16|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction v18|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  126  <|@ instruction MOV (x: [v18|QWORD + v16|QWORD * 1 - 8], y: v17|QWORD[*]) size: QWORD <|@ <|@
      nr  128  <|@ instruction v19|QWORD = LEA [v16|QWORD - 8] size: QWORD <|@ <|@
      nr  130  <|@ instruction MOV (x: [r15|QWORD + 72], y: v19|QWORD) size: QWORD <|@ <|@
      nr  132  <|@ instruction JUMP ~[] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction rsi|QWORD = MOVE v17|QWORD[*] moveKind: QWORD <|@ <|@
      nr  138  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  140  <|@ instruction JUMP ~[] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" "B13" "B15" "B18" "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B26" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction JUMP ~[] destination: B20 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction v20|QWORD[.+] = LEA [v0|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  154  <|@ instruction v21|DWORD[_] = MOV [v20|QWORD[.+]] size: DWORD <|@ <|@
      nr  156  <|@ instruction TESTBRANCH (x: v21|DWORD[_], y: v21|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction v22|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  162  <|@ instruction v23|QWORD[.] = UNCOMPRESSPOINTER (input: v21|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr  164  <|@ instruction TESTBRANCH (x: v22|QWORD, y: v22|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction v24|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  170  <|@ instruction MOV (x: [v24|QWORD + v22|QWORD * 1 - 8], y: v23|QWORD[.]) size: QWORD <|@ <|@
      nr  172  <|@ instruction v25|QWORD = LEA [v22|QWORD - 8] size: QWORD <|@ <|@
      nr  174  <|@ instruction MOV (x: [r15|QWORD + 40], y: v25|QWORD) size: QWORD <|@ <|@
      nr  176  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B26" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction JUMP ~[] destination: B22 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction rsi|QWORD[.] = MOVE v23|QWORD[.] moveKind: QWORD <|@ <|@
      nr  186  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  188  <|@ instruction JUMP ~[] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" "B25" "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v5|DWORD[_]) size: DWORD <|@ <|@
      nr  194  <|@ instruction v26|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr  196  <|@ instruction v27|QWORD[*] = XOR (x: v0|QWORD[.], y: v26|QWORD[.]) size: QWORD <|@ <|@
      nr  198  <|@ instruction TESTCONSTBRANCH v27|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction TESTBRANCH (x: v26|QWORD[.], y: v26|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction v28|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  208  <|@ instruction CMPCONSTBRANCH [v28|QWORD[*] + v14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B37" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  212  <|@ instruction JUMP ~[] destination: B31 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B37" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction JUMP ~[] destination: B27 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B37" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  220  <|@ instruction JUMP ~[] destination: B29 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  226  <|@ instruction CMPCONSTBRANCH [v28|QWORD[*] + v14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" 
    xhandlers
    flags 
    probability 4589917419268529874
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  230  <|@ instruction JUMP ~[] destination: B33 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction MOVB [v28|QWORD[*] + v14|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  236  <|@ instruction v29|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  238  <|@ instruction v30|QWORD[*] = ADD (x: v28|QWORD[*], y: v14|QWORD) size: QWORD <|@ <|@
      nr  240  <|@ instruction TESTBRANCH (x: v29|QWORD, y: v29|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  244  <|@ instruction v31|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  246  <|@ instruction MOV (x: [v31|QWORD + v29|QWORD * 1 - 8], y: v30|QWORD[*]) size: QWORD <|@ <|@
      nr  248  <|@ instruction v32|QWORD = LEA [v29|QWORD - 8] size: QWORD <|@ <|@
      nr  250  <|@ instruction MOV (x: [r15|QWORD + 72], y: v32|QWORD) size: QWORD <|@ <|@
      nr  252  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction rsi|QWORD = MOVE v30|QWORD[*] moveKind: QWORD <|@ <|@
      nr  258  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  260  <|@ instruction JUMP ~[] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B27" "B29" "B31" "B33" "B36" "B35" 
    successors "B38" "B94" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction TESTBRANCH (x: v5|DWORD[_], y: v5|DWORD[_]) trueDestinationProbability: 0.8674348032491496 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B94 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B93" 
    xhandlers
    flags 
    probability 4605988377658638555
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
stack: v26|QWORD[.] 
locals: v0|QWORD[.] - v12|QWORD[.] 
>@ <|@ instruction v33|DWORD = MOV [v3|DWORD[_] * 8 + 12] size: DWORD state [bci:53] <|@ <|@
      nr  270  <|@ instruction v34|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  272  <|@ instruction CMPBRANCH (x: v33|DWORD, y: v34|DWORD) trueDestinationProbability: 0.9812627296505405 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B93 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B92" 
    xhandlers
    flags 
    probability 4605841980402785416
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction CMPBRANCH (x: v33|DWORD, y: v34|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B92 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4605841980402785416
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction v35|DWORD = INC v34|DWORD size: DWORD <|@ <|@
      nr  282  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v35|DWORD) size: DWORD <|@ <|@
      nr  284  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B47" 
    xhandlers
    flags 
    probability 4605075304317034516
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  288  <|@ instruction JUMP ~[] destination: B41 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B95" 
    xhandlers
    flags 
    probability 4593944184856050836
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  292  <|@ instruction JUMP ~[] destination: B94 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4590797829349172127
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  296  <|@ instruction v36|QWORD[.+] = LEA [v0|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  298  <|@ instruction v37|DWORD[_] = MOV [v36|QWORD[.+]] size: DWORD <|@ <|@
      nr  300  <|@ instruction TESTBRANCH (x: v37|DWORD[_], y: v37|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4590184488480571407
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  304  <|@ instruction v38|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  306  <|@ instruction v39|QWORD[.] = UNCOMPRESSPOINTER (input: v37|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr  308  <|@ instruction TESTBRANCH (x: v38|QWORD, y: v38|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4589632481698830759
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  312  <|@ instruction v40|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  314  <|@ instruction MOV (x: [v40|QWORD + v38|QWORD * 1 - 8], y: v39|QWORD[.]) size: QWORD <|@ <|@
      nr  316  <|@ instruction v41|QWORD = LEA [v38|QWORD - 8] size: QWORD <|@ <|@
      nr  318  <|@ instruction MOV (x: [r15|QWORD + 40], y: v41|QWORD) size: QWORD <|@ <|@
      nr  320  <|@ instruction JUMP ~[] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B95" 
    xhandlers
    flags 
    probability 4580341933595724392
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction JUMP ~[] destination: B93 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B47" 
    xhandlers
    flags 
    probability 4576060348729859198
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  328  <|@ instruction JUMP ~[] destination: B43 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4575482130661533308
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  332  <|@ instruction rsi|QWORD[.] = MOVE v39|QWORD[.] moveKind: QWORD <|@ <|@
      nr  334  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  336  <|@ instruction JUMP ~[] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B41" "B43" "B46" "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4605841980402785416
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  340  <|@ instruction v42|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr  342  <|@ instruction v43|DWORD[_] = MOV [v42|QWORD[.] + v34|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  344  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v43|DWORD[_]) size: DWORD <|@ <|@
      nr  346  <|@ instruction v44|QWORD[.] = UNCOMPRESSPOINTER (input: v43|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr  348  <|@ instruction v45|QWORD[*] = XOR (x: v0|QWORD[.], y: v44|QWORD[.]) size: QWORD <|@ <|@
      nr  350  <|@ instruction TESTCONSTBRANCH v45|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4605075304317034516
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction TESTBRANCH (x: v44|QWORD[.], y: v44|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4604385295839858706
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  358  <|@ instruction v46|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  360  <|@ instruction CMPCONSTBRANCH [v46|QWORD[*] + v14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B58" 
    xhandlers
    flags 
    probability 4603764288210400477
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  364  <|@ instruction JUMP ~[] destination: B52 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B58" 
    xhandlers
    flags 
    probability 4590797829349172127
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction JUMP ~[] destination: B48 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B58" 
    xhandlers
    flags 
    probability 4590184488480571407
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  372  <|@ instruction JUMP ~[] destination: B50 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4589632481698830759
    begin_IR
      LIR
      nr  374  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  376  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  378  <|@ instruction CMPCONSTBRANCH [v46|QWORD[*] + v14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B58" 
    xhandlers
    flags 
    probability 4589103330899992928
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  382  <|@ instruction JUMP ~[] destination: B54 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4574598919810748272
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ instruction MOVB [v46|QWORD[*] + v14|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  388  <|@ instruction v47|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  390  <|@ instruction v48|QWORD[*] = ADD (x: v46|QWORD[*], y: v14|QWORD) size: QWORD <|@ <|@
      nr  392  <|@ instruction TESTBRANCH (x: v47|QWORD, y: v47|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4573804030045041739
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  396  <|@ instruction v49|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  398  <|@ instruction MOV (x: [v49|QWORD + v47|QWORD * 1 - 8], y: v48|QWORD[*]) size: QWORD <|@ <|@
      nr  400  <|@ instruction v50|QWORD = LEA [v47|QWORD - 8] size: QWORD <|@ <|@
      nr  402  <|@ instruction MOV (x: [r15|QWORD + 72], y: v50|QWORD) size: QWORD <|@ <|@
      nr  404  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4559498341397223717
    begin_IR
      LIR
      nr  406  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  408  <|@ instruction rsi|QWORD = MOVE v48|QWORD[*] moveKind: QWORD <|@ <|@
      nr  410  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  412  <|@ instruction JUMP ~[] destination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B48" "B50" "B52" "B54" "B57" "B56" 
    successors "B59" "B91" 
    xhandlers
    flags 
    probability 4605841980402785416
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction TESTBRANCH (x: v43|DWORD[_], y: v43|DWORD[_]) trueDestinationProbability: 0.8739340370331193 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B91 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B66" 
    xhandlers
    flags 
    probability 4604875462812446756
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  420  <|@ instruction CMPBRANCH (x: v33|DWORD, y: v35|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B59 -> B60 falseDestination: B59 -> B66 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B67" 
    xhandlers
    flags 
    probability 4600371863185076260
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction JUMP ~[] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B64" 
    xhandlers
    flags 
    probability 4600371863185076260
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction v51|DWORD = SUB (x: v33|DWORD, ~y: v35|DWORD) size: DWORD <|@ <|@
      nr  430  <|@ instruction v52|QWORD = MOVSXD v51|DWORD size: QWORD <|@ <|@
      nr  432  <|@ instruction v53|QWORD = MOV v35|DWORD size: DWORD <|@ <|@
      nr  434  <|@ instruction v54|QWORD = ADD (x: v52|QWORD, y: v53|QWORD) size: QWORD <|@ <|@
      nr  436  <|@ instruction v55|QWORD = DEC v54|QWORD size: QWORD <|@ <|@
      nr  438  <|@ instruction v56|QWORD = MOV v33|DWORD size: DWORD <|@ <|@
      nr  440  <|@ instruction CMPBRANCH (x: v56|QWORD, y: v55|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B60 -> B61 falseDestination: B60 -> B64 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4600371863185076260
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction CMPBRANCH (x: v33|DWORD, y: v35|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B61 -> B62 falseDestination: B61 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B67" 
    xhandlers
    flags 
    probability 4600371863185076260
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  448  <|@ instruction JUMP ~[] destination: B62 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" "B62" 
    successors "B68" 
    xhandlers
    flags 
    probability 4604875462812446756
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction JUMP ~[v35|DWORD] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" "B88" 
    successors "B69" "B90" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4617565855081504432
    begin_IR
      LIR
      nr  454  <|@ instruction [v57|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  456  <|@ instruction CMPBRANCH (x: v33|DWORD, y: v57|DWORD) trueDestinationProbability: 0.9812627296505405 condition: > trueDestination: B68 -> B69 falseDestination: B68 -> B90 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B70" "B71" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617455682992505589
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  460  <|@ instruction v58|DWORD = INC v57|DWORD size: DWORD <|@ <|@
      nr  462  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v58|DWORD) size: DWORD <|@ <|@
      nr  464  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4616878716535993821
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  468  <|@ instruction JUMP ~[] destination: B70 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" "B73" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602790951197370563
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction v59|QWORD[.+] = LEA [v0|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  474  <|@ instruction v60|DWORD[_] = MOV [v59|QWORD[.+]] size: DWORD <|@ <|@
      nr  476  <|@ instruction TESTBRANCH (x: v60|DWORD[_], y: v60|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B73 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" "B75" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601979936891675385
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction v61|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  482  <|@ instruction v62|QWORD[.] = UNCOMPRESSPOINTER (input: v60|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr  484  <|@ instruction TESTBRANCH (x: v61|QWORD, y: v61|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B75 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601149105194298439
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  488  <|@ instruction v63|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  490  <|@ instruction MOV (x: [v63|QWORD + v61|QWORD * 1 - 8], y: v62|QWORD[.]) size: QWORD <|@ <|@
      nr  492  <|@ instruction v64|QWORD = LEA [v61|QWORD - 8] size: QWORD <|@ <|@
      nr  494  <|@ instruction MOV (x: [r15|QWORD + 40], y: v64|QWORD) size: QWORD <|@ <|@
      nr  496  <|@ instruction JUMP ~[] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587545991679145066
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  500  <|@ instruction JUMP ~[] destination: B72 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586807474614810003
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction rsi|QWORD[.] = MOVE v62|QWORD[.] moveKind: QWORD <|@ <|@
      nr  506  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  508  <|@ instruction JUMP ~[] destination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B70" "B72" "B75" "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617455682992505589
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  512  <|@ instruction v65|DWORD[_] = MOV [v42|QWORD[.] + v57|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  514  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v65|DWORD[_]) size: DWORD <|@ <|@
      nr  516  <|@ instruction v66|QWORD[.] = UNCOMPRESSPOINTER (input: v65|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr  518  <|@ instruction v67|QWORD[*] = XOR (x: v0|QWORD[.], y: v66|QWORD[.]) size: QWORD <|@ <|@
      nr  520  <|@ instruction TESTCONSTBRANCH v67|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4616878716535993821
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  524  <|@ instruction TESTBRANCH (x: v66|QWORD[.], y: v66|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4616359446725133229
    begin_IR
      LIR
      nr  526  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  528  <|@ instruction v68|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  530  <|@ instruction CMPCONSTBRANCH [v68|QWORD[*] + v14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4615594589735958993
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  534  <|@ instruction JUMP ~[] destination: B81 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602790951197370563
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  538  <|@ instruction JUMP ~[] destination: B77 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601979936891675385
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  542  <|@ instruction JUMP ~[] destination: B79 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" "B84" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601149105194298438
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  546  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  548  <|@ instruction CMPCONSTBRANCH [v68|QWORD[*] + v14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B82 -> B83 falseDestination: B82 -> B84 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4600401356666659186
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  552  <|@ instruction JUMP ~[] destination: B83 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" "B86" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586142809256908445
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction MOVB [v68|QWORD[*] + v14|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  558  <|@ instruction v69|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  560  <|@ instruction v70|QWORD[*] = ADD (x: v68|QWORD[*], y: v14|QWORD) size: QWORD <|@ <|@
      nr  562  <|@ instruction TESTBRANCH (x: v69|QWORD, y: v69|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B84 -> B85 falseDestination: B84 -> B86 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4585544610434797044
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction v71|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  568  <|@ instruction MOV (x: [v71|QWORD + v69|QWORD * 1 - 8], y: v70|QWORD[*]) size: QWORD <|@ <|@
      nr  570  <|@ instruction v72|QWORD = LEA [v69|QWORD - 8] size: QWORD <|@ <|@
      nr  572  <|@ instruction MOV (x: [r15|QWORD + 72], y: v72|QWORD) size: QWORD <|@ <|@
      nr  574  <|@ instruction JUMP ~[] destination: B86 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4571435612730574153
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction rsi|QWORD = MOVE v70|QWORD[*] moveKind: QWORD <|@ <|@
      nr  580  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  582  <|@ instruction JUMP ~[] destination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B77" "B79" "B81" "B83" "B86" "B85" 
    successors "B88" "B89" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617455682992505588
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  586  <|@ instruction TESTBRANCH (x: v65|DWORD[_], y: v65|DWORD[_]) trueDestinationProbability: 0.8739340370331193 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B89 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B68" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4616728324673108138
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  590  <|@ instruction JUMP ~[v58|DWORD] destination: B88 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B95" 
    xhandlers
    flags 
    probability 4603994086100456013
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction JUMP ~[] destination: B89 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B95" 
    xhandlers
    flags 
    probability 4592396561385874207
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  598  <|@ instruction JUMP ~[] destination: B91 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B95" 
    xhandlers
    flags 
    probability 4591715434359090862
    begin_IR
      LIR
      nr  600  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  602  <|@ instruction JUMP ~[] destination: B90 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" "B90" "B89" "B91" "B93" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  606  <|@ instruction rax|QWORD[.] = MOVE v12|QWORD[.] moveKind: QWORD <|@ <|@
      nr  608  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  612  <|@ instruction MOV [r15|QWORD + 1156] y: -59155 size: DWORD <|@ <|@
      nr  614  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  616  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  620  <|@ instruction JUMP ~[] destination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction JUMP ~[] destination: B64 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" "B63" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  628  <|@ instruction MOV [r15|QWORD + 1156] y: -40475 size: DWORD <|@ <|@
      nr  630  <|@ instruction MOV [r15|QWORD + 1168] y: 1944 size: QWORD <|@ <|@
      nr  632  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 95]
stack: v44|QWORD[.] 
locals: v0|QWORD[.] v42|QWORD[.] v12|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:95] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  634  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  636  <|@ instruction MOV [r15|QWORD + 1156] y: -36891 size: DWORD <|@ <|@
      nr  638  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  640  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
stack: v26|QWORD[.] 
locals: v0|QWORD[.] - v12|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:53] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #5          // next:java.util.HashMap$Node
     4: astore_2      
     5: aload_0       
     6: getfield      #0          // this$0:java.util.HashMap
     9: getfield      #2          // java.util.HashMap.modCount:int
    12: aload_0       
    13: getfield      #3          // expectedModCount:int
    16: if_icmpeq     27
    19: new           #39         // java.util.ConcurrentModificationException
    22: dup           
    23: invokespecial #9          // java.util.ConcurrentModificationException.<init>:()void
    26: athrow        
    27: aload_2       
    28: ifnonnull     39
    31: new           #42         // java.util.NoSuchElementException
    34: dup           
    35: invokespecial #10         // java.util.NoSuchElementException.<init>:()void
    38: athrow        
    39: aload_0       
    40: aload_0       
    41: aload_2       
    42: dup_x1        
    43: putfield      #6          // current:java.util.HashMap$Node
    46: getfield      #11         // java.util.HashMap$Node.next:java.util.HashMap$Node
    49: dup_x1        
    50: putfield      #5          // next:java.util.HashMap$Node
    53: ifnonnull     98
    56: aload_0       
    57: getfield      #0          // this$0:java.util.HashMap
    60: getfield      #4          // java.util.HashMap.table:java.util.HashMap$Node[]
    63: dup           
    64: astore_1      
    65: ifnull        98
    68: aload_0       
    69: getfield      #7          // index:int
    72: aload_1       
    73: arraylength   
    74: if_icmpge     98
    77: aload_0       
    78: aload_1       
    79: aload_0       
    80: dup           
    81: getfield      #7          // index:int
    84: dup_x1        
    85: iconst_1      
    86: iadd          
    87: putfield      #7          // index:int
    90: aaload        
    91: dup_x1        
    92: putfield      #5          // next:java.util.HashMap$Node
    95: ifnull        68
    98: aload_2       
    99: areturn       
   <|@
end_bytecodes
begin_intervals
  name "After resolve data flow"
  rax|q fixed "[rax|q]" rax|q v12|q [0, 1[[606, 608[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 2[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v9|q [0, 6[[62, 64[[136, 138[[184, 186[[256, 258[[332, 334[[408, 410[[504, 506[[578, 580[ "NoOptimization"
  v0|q QWORD "[r10|q]" v0|q rsi|q [6, 290[[294, 322[[326, 592[[610, 617[[618, 633[[634, 641[6 MustHaveRegister 8 MustHaveRegister 14 MustHaveRegister 18 MustHaveRegister 30 MustHaveRegister 70 MustHaveRegister 74 ShouldHaveRegister 86 MustHaveRegister 152 MustHaveRegister 192 MustHaveRegister 196 ShouldHaveRegister 206 MustHaveRegister 270 MustHaveRegister 282 MustHaveRegister 296 MustHaveRegister 344 MustHaveRegister 348 ShouldHaveRegister 358 MustHaveRegister 462 MustHaveRegister 472 MustHaveRegister 514 MustHaveRegister 518 ShouldHaveRegister 528 MustHaveRegister 591 LiveAtLoopEnd  "NoSpillStore"
  v1|d DWORD "[rsi|d]" v1|d -1 [8, 12[8 MustHaveRegister 10 MustHaveRegister 12 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[rax|d]" v2|d -1 [10, 18[10 MustHaveRegister 18 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[r11|d]" v3|d -1 [12, 290[[294, 322[[326, 340[12 MustHaveRegister 268 MustHaveRegister 340 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[r8|d]" v4|d -1 [14, 72[14 MustHaveRegister 16 MustHaveRegister 70 MustHaveRegister 72 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[r9|d]" v5|d -1 [16, 264[16 MustHaveRegister 192 MustHaveRegister 194 MustHaveRegister 264 MustHaveRegister  "NoSpillStore"
  v6|q QWORD "[rsi|q]" v6|q -1 [30, 32[30 MustHaveRegister 32 MustHaveRegister  "NoSpillStore"
  v7|d DWORD "[rsi|d]" v7|d -1 [32, 40[32 MustHaveRegister 34 MustHaveRegister 40 MustHaveRegister  "NoSpillStore"
  v8|q QWORD "[rax|q]" v8|q -1 [38, 50[38 MustHaveRegister 42 MustHaveRegister 48 MustHaveRegister 50 MustHaveRegister  "NoSpillStore"
  v9|q QWORD "[rsi|q]" v9|q v7|d [40, 48[[60, 62[40 MustHaveRegister 48 MustHaveRegister 62 ShouldHaveRegister  "NoSpillStore"
  v10|q QWORD "[rcx|q]" v10|q -1 [46, 48[46 MustHaveRegister 48 MustHaveRegister  "NoSpillStore"
  v11|q QWORD "[rsi|q]" v11|q -1 [50, 52[50 MustHaveRegister 52 MustHaveRegister  "NoSpillStore"
  v12|q QWORD "[r8|q]" v12|q v4|d [72, 606[[618, 633[[634, 641[72 MustHaveRegister 74 ShouldHaveRegister 82 MustHaveRegister 606 ShouldHaveRegister  "NoSpillStore"
  v13|q QWORD "[rsi|q]" v13|q v0|q [74, 78[74 MustHaveRegister 78 ShouldHaveRegister  "NoSpillStore"
  v14|q QWORD "[rax|q]" v14|q -1 [76, 290[[294, 322[[326, 592[76 MustHaveRegister 88 MustHaveRegister 106 MustHaveRegister 114 MustHaveRegister 118 ShouldHaveRegister 208 MustHaveRegister 226 MustHaveRegister 234 MustHaveRegister 238 ShouldHaveRegister 360 MustHaveRegister 378 MustHaveRegister 386 MustHaveRegister 390 ShouldHaveRegister 530 MustHaveRegister 548 MustHaveRegister 556 MustHaveRegister 560 ShouldHaveRegister 591 LiveAtLoopEnd  "NoSpillStore"
  v15|q QWORD "[rsi|q]" v15|q v0|q [86, 90[[102, 108[[112, 118[86 MustHaveRegister 88 MustHaveRegister 106 MustHaveRegister 114 MustHaveRegister 118 ShouldHaveRegister  "NoSpillStore"
  v16|q QWORD "[rcx|q]" v16|q -1 [116, 128[116 MustHaveRegister 120 MustHaveRegister 126 MustHaveRegister 128 MustHaveRegister  "NoSpillStore"
  v17|q QWORD "[rsi|q]" v17|q v15|q [118, 126[[134, 136[118 MustHaveRegister 126 MustHaveRegister 136 ShouldHaveRegister  "NoSpillStore"
  v18|q QWORD "[rbx|q]" v18|q -1 [124, 126[124 MustHaveRegister 126 MustHaveRegister  "NoSpillStore"
  v19|q QWORD "[rsi|q]" v19|q -1 [128, 130[128 MustHaveRegister 130 MustHaveRegister  "NoSpillStore"
  v20|q QWORD "[rsi|q]" v20|q -1 [152, 154[152 MustHaveRegister 154 MustHaveRegister  "NoSpillStore"
  v21|d DWORD "[rsi|d]" v21|d -1 [154, 162[154 MustHaveRegister 156 MustHaveRegister 162 MustHaveRegister  "NoSpillStore"
  v22|q QWORD "[rcx|q]" v22|q -1 [160, 172[160 MustHaveRegister 164 MustHaveRegister 170 MustHaveRegister 172 MustHaveRegister  "NoSpillStore"
  v23|q QWORD "[rsi|q]" v23|q v21|d [162, 170[[182, 184[162 MustHaveRegister 170 MustHaveRegister 184 ShouldHaveRegister  "NoSpillStore"
  v24|q QWORD "[rbx|q]" v24|q -1 [168, 170[168 MustHaveRegister 170 MustHaveRegister  "NoSpillStore"
  v25|q QWORD "[rsi|q]" v25|q -1 [172, 174[172 MustHaveRegister 174 MustHaveRegister  "NoSpillStore"
  v26|q QWORD "[rcx|q]" v26|q v5|d [194, 278[[634, 641[194 MustHaveRegister 196 ShouldHaveRegister 202 MustHaveRegister  "NoSpillStore"
  v27|q QWORD "[rsi|q]" v27|q v0|q [196, 198[196 MustHaveRegister 198 ShouldHaveRegister  "NoSpillStore"
  v28|q QWORD "[rsi|q]" v28|q v0|q [206, 210[[222, 228[[232, 238[206 MustHaveRegister 208 MustHaveRegister 226 MustHaveRegister 234 MustHaveRegister 238 ShouldHaveRegister  "NoSpillStore"
  v29|q QWORD "[rbx|q]" v29|q -1 [236, 248[236 MustHaveRegister 240 MustHaveRegister 246 MustHaveRegister 248 MustHaveRegister  "NoSpillStore"
  v30|q QWORD "[rsi|q]" v30|q v28|q [238, 246[[254, 256[238 MustHaveRegister 246 MustHaveRegister 256 ShouldHaveRegister  "NoSpillStore"
  v31|q QWORD "[rdi|q]" v31|q -1 [244, 246[244 MustHaveRegister 246 MustHaveRegister  "NoSpillStore"
  v32|q QWORD "[rsi|q]" v32|q -1 [248, 250[248 MustHaveRegister 250 MustHaveRegister  "NoSpillStore"
  v33|d DWORD "[r9|d]" v33|d -1 [268, 290[[294, 322[[326, 592[268 MustHaveRegister 272 MustHaveRegister 276 MustHaveRegister 420 MustHaveRegister 428 MustHaveRegister 438 ShouldHaveRegister 444 MustHaveRegister 456 MustHaveRegister 591 LiveAtLoopEnd  "NoSpillStore"
  v34|d DWORD "[rbx|d]" v34|d -1 [270, 290[[294, 322[[326, 342[270 MustHaveRegister 272 ShouldHaveRegister 276 ShouldHaveRegister 280 ShouldHaveRegister 342 MustHaveRegister  "NoSpillStore"
  v35|d DWORD "[rcx|d]" v35|d v34|d [280, 290[[294, 322[[326, 453[280 MustHaveRegister 282 MustHaveRegister 420 ShouldHaveRegister 428 ShouldHaveRegister 432 ShouldHaveRegister 444 ShouldHaveRegister 452 ShouldHaveRegister  "NoSpillStore"
  v36|q QWORD "[rsi|q]" v36|q -1 [296, 298[296 MustHaveRegister 298 MustHaveRegister  "NoSpillStore"
  v37|d DWORD "[rsi|d]" v37|d -1 [298, 306[298 MustHaveRegister 300 MustHaveRegister 306 MustHaveRegister  "NoSpillStore"
  v38|q QWORD "[rdi|q]" v38|q -1 [304, 316[304 MustHaveRegister 308 MustHaveRegister 314 MustHaveRegister 316 MustHaveRegister  "NoSpillStore"
  v39|q QWORD "[rsi|q]" v39|q v37|d [306, 314[[330, 332[306 MustHaveRegister 314 MustHaveRegister 332 ShouldHaveRegister  "NoSpillStore"
  v40|q QWORD "[rdx|q]" v40|q -1 [312, 314[312 MustHaveRegister 314 MustHaveRegister  "NoSpillStore"
  v41|q QWORD "[rsi|q]" v41|q -1 [316, 318[316 MustHaveRegister 318 MustHaveRegister  "NoSpillStore"
  v42|q QWORD "[r11|q]" v42|q v3|d [340, 592[[618, 633[340 MustHaveRegister 342 MustHaveRegister 512 MustHaveRegister 591 LiveAtLoopEnd  "NoSpillStore"
  v43|d DWORD "[rbx|d]" v43|d -1 [342, 416[342 MustHaveRegister 344 MustHaveRegister 346 MustHaveRegister 416 MustHaveRegister  "NoSpillStore"
  v44|q QWORD "[rdi|q]" v44|q v43|d [346, 422[[426, 446[[618, 633[346 MustHaveRegister 348 ShouldHaveRegister 354 MustHaveRegister  "NoSpillStore"
  v45|q QWORD "[rsi|q]" v45|q v0|q [348, 350[348 MustHaveRegister 350 ShouldHaveRegister  "NoSpillStore"
  v46|q QWORD "[rsi|q]" v46|q v0|q [358, 362[[374, 380[[384, 390[358 MustHaveRegister 360 MustHaveRegister 378 MustHaveRegister 386 MustHaveRegister 390 ShouldHaveRegister  "NoSpillStore"
  v47|q QWORD "[rdx|q]" v47|q -1 [388, 400[388 MustHaveRegister 392 MustHaveRegister 398 MustHaveRegister 400 MustHaveRegister  "NoSpillStore"
  v48|q QWORD "[rsi|q]" v48|q v46|q [390, 398[[406, 408[390 MustHaveRegister 398 MustHaveRegister 408 ShouldHaveRegister  "NoSpillStore"
  v49|q QWORD "[rbp|q]" v49|q -1 [396, 398[396 MustHaveRegister 398 MustHaveRegister  "NoSpillStore"
  v50|q QWORD "[rsi|q]" v50|q -1 [400, 402[400 MustHaveRegister 402 MustHaveRegister  "NoSpillStore"
  v51|d DWORD "[rsi|d]" v51|d v33|d [428, 430[428 MustHaveRegister 430 ShouldHaveRegister  "NoSpillStore"
  v52|q QWORD "[rsi|q]" v52|q -1 [430, 434[430 MustHaveRegister 434 ShouldHaveRegister  "NoSpillStore"
  v53|q QWORD "[rbx|q]" v53|q -1 [432, 434[432 MustHaveRegister 434 ShouldHaveRegister  "NoSpillStore"
  v54|q QWORD "[rsi|q]" v54|q v52|q [434, 436[434 MustHaveRegister 436 ShouldHaveRegister  "NoSpillStore"
  v55|q QWORD "[rsi|q]" v55|q v54|q [436, 440[436 MustHaveRegister 440 ShouldHaveRegister  "NoSpillStore"
  v56|q QWORD "[rbx|q]" v56|q -1 [438, 440[438 MustHaveRegister 440 MustHaveRegister  "NoSpillStore"
  v57|d DWORD "[rcx|d]" v57|d v58|d [454, 512[456 ShouldHaveRegister 460 ShouldHaveRegister 512 MustHaveRegister  "NoSpillStore"
  v58|d DWORD "[rbx|d]" v58|d v57|d [460, 591[460 MustHaveRegister 462 MustHaveRegister 590 ShouldHaveRegister  "NoSpillStore"
  v59|q QWORD "[rsi|q]" v59|q -1 [472, 474[472 MustHaveRegister 474 MustHaveRegister  "NoSpillStore"
  v60|d DWORD "[rsi|d]" v60|d -1 [474, 482[474 MustHaveRegister 476 MustHaveRegister 482 MustHaveRegister  "NoSpillStore"
  v61|q QWORD "[rdi|q]" v61|q -1 [480, 492[480 MustHaveRegister 484 MustHaveRegister 490 MustHaveRegister 492 MustHaveRegister  "NoSpillStore"
  v62|q QWORD "[rsi|q]" v62|q v60|d [482, 490[[502, 504[482 MustHaveRegister 490 MustHaveRegister 504 ShouldHaveRegister  "NoSpillStore"
  v63|q QWORD "[rdx|q]" v63|q -1 [488, 490[488 MustHaveRegister 490 MustHaveRegister  "NoSpillStore"
  v64|q QWORD "[rsi|q]" v64|q -1 [492, 494[492 MustHaveRegister 494 MustHaveRegister  "NoSpillStore"
  v65|d DWORD "[rcx|d]" v65|d -1 [512, 586[512 MustHaveRegister 514 MustHaveRegister 516 MustHaveRegister 586 MustHaveRegister  "NoSpillStore"
  v66|q QWORD "[rsi|q]" v66|q v65|d [516, 524[516 MustHaveRegister 518 ShouldHaveRegister 524 MustHaveRegister  "NoSpillStore"
  v67|q QWORD "[rdi|q]" v67|q v0|q [518, 520[518 MustHaveRegister 520 ShouldHaveRegister  "NoSpillStore"
  v68|q QWORD "[rsi|q]" v68|q v0|q [528, 532[[544, 550[[554, 560[528 MustHaveRegister 530 MustHaveRegister 548 MustHaveRegister 556 MustHaveRegister 560 ShouldHaveRegister  "NoSpillStore"
  v69|q QWORD "[rdi|q]" v69|q -1 [558, 570[558 MustHaveRegister 562 MustHaveRegister 568 MustHaveRegister 570 MustHaveRegister  "NoSpillStore"
  v70|q QWORD "[rsi|q]" v70|q v68|q [560, 568[[576, 578[560 MustHaveRegister 568 MustHaveRegister 578 ShouldHaveRegister  "NoSpillStore"
  v71|q QWORD "[rdx|q]" v71|q -1 [566, 568[566 MustHaveRegister 568 MustHaveRegister  "NoSpillStore"
  v72|q QWORD "[rsi|q]" v72|q -1 [570, 572[570 MustHaveRegister 572 MustHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After SSALinearScanResolveDataFlow"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B96" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7154f04f slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD[_] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   10  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v2|DWORD = MOV [v1|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction v3|DWORD[_] = MOV [v1|DWORD[_] * 8 + 36] size: DWORD <|@ <|@
      nr   14  <|@ instruction v4|DWORD[_] = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   16  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v5|DWORD[_] = MOV [v4|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   18  <|@ instruction CMPBRANCH (x: v2|DWORD, y: [v0|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B96 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   22  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B8" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   26  <|@ instruction JUMP ~[] destination: B2 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction v6|QWORD[.+] = LEA [v0|QWORD[.] + 24] size: QWORD <|@ <|@
      nr   32  <|@ instruction v7|DWORD[_] = MOV [v6|QWORD[.+]] size: DWORD <|@ <|@
      nr   34  <|@ instruction TESTBRANCH (x: v7|DWORD[_], y: v7|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction v8|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   40  <|@ instruction v9|QWORD[.] = UNCOMPRESSPOINTER (input: v7|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr   42  <|@ instruction TESTBRANCH (x: v8|QWORD, y: v8|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction v10|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   48  <|@ instruction MOV (x: [v10|QWORD + v8|QWORD * 1 - 8], y: v9|QWORD[.]) size: QWORD <|@ <|@
      nr   50  <|@ instruction v11|QWORD = LEA [v8|QWORD - 8] size: QWORD <|@ <|@
      nr   52  <|@ instruction MOV (x: [r15|QWORD + 40], y: v11|QWORD) size: QWORD <|@ <|@
      nr   54  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction JUMP ~[] destination: B4 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction rsi|QWORD[.] = MOVE v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   64  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   66  <|@ instruction JUMP ~[] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" "B7" "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v4|DWORD[_]) size: DWORD <|@ <|@
      nr   72  <|@ instruction v12|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr   74  <|@ instruction v13|QWORD[*] = XOR (x: v0|QWORD[.], y: v12|QWORD[.]) size: QWORD <|@ <|@
      nr   76  <|@ instruction v14|QWORD = MOVE input: long[140438306553856|0x7fba57600000] <|@ <|@
      nr   78  <|@ instruction TESTCONSTBRANCH v13|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction TESTBRANCH (x: v12|QWORD[.], y: v12|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction v15|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   88  <|@ instruction CMPCONSTBRANCH [v15|QWORD[*] + v14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction JUMP ~[] destination: B13 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B19" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   96  <|@ instruction JUMP ~[] destination: B9 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B19" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  100  <|@ instruction JUMP ~[] destination: B11 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  106  <|@ instruction CMPCONSTBRANCH [v15|QWORD[*] + v14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B19" 
    xhandlers
    flags 
    probability 4589917419268529874
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction JUMP ~[] destination: B15 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction MOVB [v15|QWORD[*] + v14|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  116  <|@ instruction v16|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  118  <|@ instruction v17|QWORD[*] = ADD (x: v15|QWORD[*], y: v14|QWORD) size: QWORD <|@ <|@
      nr  120  <|@ instruction TESTBRANCH (x: v16|QWORD, y: v16|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction v18|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  126  <|@ instruction MOV (x: [v18|QWORD + v16|QWORD * 1 - 8], y: v17|QWORD[*]) size: QWORD <|@ <|@
      nr  128  <|@ instruction v19|QWORD = LEA [v16|QWORD - 8] size: QWORD <|@ <|@
      nr  130  <|@ instruction MOV (x: [r15|QWORD + 72], y: v19|QWORD) size: QWORD <|@ <|@
      nr  132  <|@ instruction JUMP ~[] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction rsi|QWORD = MOVE v17|QWORD[*] moveKind: QWORD <|@ <|@
      nr  138  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  140  <|@ instruction JUMP ~[] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" "B13" "B15" "B18" "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B26" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction JUMP ~[] destination: B20 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction v20|QWORD[.+] = LEA [v0|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  154  <|@ instruction v21|DWORD[_] = MOV [v20|QWORD[.+]] size: DWORD <|@ <|@
      nr  156  <|@ instruction TESTBRANCH (x: v21|DWORD[_], y: v21|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction v22|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  162  <|@ instruction v23|QWORD[.] = UNCOMPRESSPOINTER (input: v21|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr  164  <|@ instruction TESTBRANCH (x: v22|QWORD, y: v22|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction v24|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  170  <|@ instruction MOV (x: [v24|QWORD + v22|QWORD * 1 - 8], y: v23|QWORD[.]) size: QWORD <|@ <|@
      nr  172  <|@ instruction v25|QWORD = LEA [v22|QWORD - 8] size: QWORD <|@ <|@
      nr  174  <|@ instruction MOV (x: [r15|QWORD + 40], y: v25|QWORD) size: QWORD <|@ <|@
      nr  176  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B26" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction JUMP ~[] destination: B22 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction rsi|QWORD[.] = MOVE v23|QWORD[.] moveKind: QWORD <|@ <|@
      nr  186  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  188  <|@ instruction JUMP ~[] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" "B25" "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v5|DWORD[_]) size: DWORD <|@ <|@
      nr  194  <|@ instruction v26|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr  196  <|@ instruction v27|QWORD[*] = XOR (x: v0|QWORD[.], y: v26|QWORD[.]) size: QWORD <|@ <|@
      nr  198  <|@ instruction TESTCONSTBRANCH v27|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction TESTBRANCH (x: v26|QWORD[.], y: v26|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction v28|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  208  <|@ instruction CMPCONSTBRANCH [v28|QWORD[*] + v14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B37" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  212  <|@ instruction JUMP ~[] destination: B31 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B37" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction JUMP ~[] destination: B27 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B37" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  220  <|@ instruction JUMP ~[] destination: B29 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  226  <|@ instruction CMPCONSTBRANCH [v28|QWORD[*] + v14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" 
    xhandlers
    flags 
    probability 4589917419268529874
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  230  <|@ instruction JUMP ~[] destination: B33 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction MOVB [v28|QWORD[*] + v14|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  236  <|@ instruction v29|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  238  <|@ instruction v30|QWORD[*] = ADD (x: v28|QWORD[*], y: v14|QWORD) size: QWORD <|@ <|@
      nr  240  <|@ instruction TESTBRANCH (x: v29|QWORD, y: v29|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  244  <|@ instruction v31|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  246  <|@ instruction MOV (x: [v31|QWORD + v29|QWORD * 1 - 8], y: v30|QWORD[*]) size: QWORD <|@ <|@
      nr  248  <|@ instruction v32|QWORD = LEA [v29|QWORD - 8] size: QWORD <|@ <|@
      nr  250  <|@ instruction MOV (x: [r15|QWORD + 72], y: v32|QWORD) size: QWORD <|@ <|@
      nr  252  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction rsi|QWORD = MOVE v30|QWORD[*] moveKind: QWORD <|@ <|@
      nr  258  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  260  <|@ instruction JUMP ~[] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B27" "B29" "B31" "B33" "B36" "B35" 
    successors "B38" "B94" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction TESTBRANCH (x: v5|DWORD[_], y: v5|DWORD[_]) trueDestinationProbability: 0.8674348032491496 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B94 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B93" 
    xhandlers
    flags 
    probability 4605988377658638555
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
stack: v26|QWORD[.] 
locals: v0|QWORD[.] - v12|QWORD[.] 
>@ <|@ instruction v33|DWORD = MOV [v3|DWORD[_] * 8 + 12] size: DWORD state [bci:53] <|@ <|@
      nr  270  <|@ instruction v34|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  272  <|@ instruction CMPBRANCH (x: v33|DWORD, y: v34|DWORD) trueDestinationProbability: 0.9812627296505405 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B93 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B92" 
    xhandlers
    flags 
    probability 4605841980402785416
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction CMPBRANCH (x: v33|DWORD, y: v34|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B92 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4605841980402785416
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction v35|DWORD = INC v34|DWORD size: DWORD <|@ <|@
      nr  282  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v35|DWORD) size: DWORD <|@ <|@
      nr  284  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B47" 
    xhandlers
    flags 
    probability 4605075304317034516
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  288  <|@ instruction JUMP ~[] destination: B41 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B95" 
    xhandlers
    flags 
    probability 4593944184856050836
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  292  <|@ instruction JUMP ~[] destination: B94 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4590797829349172127
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  296  <|@ instruction v36|QWORD[.+] = LEA [v0|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  298  <|@ instruction v37|DWORD[_] = MOV [v36|QWORD[.+]] size: DWORD <|@ <|@
      nr  300  <|@ instruction TESTBRANCH (x: v37|DWORD[_], y: v37|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4590184488480571407
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  304  <|@ instruction v38|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  306  <|@ instruction v39|QWORD[.] = UNCOMPRESSPOINTER (input: v37|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr  308  <|@ instruction TESTBRANCH (x: v38|QWORD, y: v38|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4589632481698830759
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  312  <|@ instruction v40|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  314  <|@ instruction MOV (x: [v40|QWORD + v38|QWORD * 1 - 8], y: v39|QWORD[.]) size: QWORD <|@ <|@
      nr  316  <|@ instruction v41|QWORD = LEA [v38|QWORD - 8] size: QWORD <|@ <|@
      nr  318  <|@ instruction MOV (x: [r15|QWORD + 40], y: v41|QWORD) size: QWORD <|@ <|@
      nr  320  <|@ instruction JUMP ~[] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B95" 
    xhandlers
    flags 
    probability 4580341933595724392
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction JUMP ~[] destination: B93 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B47" 
    xhandlers
    flags 
    probability 4576060348729859198
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  328  <|@ instruction JUMP ~[] destination: B43 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4575482130661533308
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  332  <|@ instruction rsi|QWORD[.] = MOVE v39|QWORD[.] moveKind: QWORD <|@ <|@
      nr  334  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  336  <|@ instruction JUMP ~[] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B41" "B43" "B46" "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4605841980402785416
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  340  <|@ instruction v42|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr  342  <|@ instruction v43|DWORD[_] = MOV [v42|QWORD[.] + v34|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  344  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v43|DWORD[_]) size: DWORD <|@ <|@
      nr  346  <|@ instruction v44|QWORD[.] = UNCOMPRESSPOINTER (input: v43|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr  348  <|@ instruction v45|QWORD[*] = XOR (x: v0|QWORD[.], y: v44|QWORD[.]) size: QWORD <|@ <|@
      nr  350  <|@ instruction TESTCONSTBRANCH v45|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4605075304317034516
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction TESTBRANCH (x: v44|QWORD[.], y: v44|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4604385295839858706
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  358  <|@ instruction v46|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  360  <|@ instruction CMPCONSTBRANCH [v46|QWORD[*] + v14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B58" 
    xhandlers
    flags 
    probability 4603764288210400477
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  364  <|@ instruction JUMP ~[] destination: B52 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B58" 
    xhandlers
    flags 
    probability 4590797829349172127
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction JUMP ~[] destination: B48 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B58" 
    xhandlers
    flags 
    probability 4590184488480571407
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  372  <|@ instruction JUMP ~[] destination: B50 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4589632481698830759
    begin_IR
      LIR
      nr  374  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  376  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  378  <|@ instruction CMPCONSTBRANCH [v46|QWORD[*] + v14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B58" 
    xhandlers
    flags 
    probability 4589103330899992928
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  382  <|@ instruction JUMP ~[] destination: B54 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4574598919810748272
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ instruction MOVB [v46|QWORD[*] + v14|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  388  <|@ instruction v47|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  390  <|@ instruction v48|QWORD[*] = ADD (x: v46|QWORD[*], y: v14|QWORD) size: QWORD <|@ <|@
      nr  392  <|@ instruction TESTBRANCH (x: v47|QWORD, y: v47|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4573804030045041739
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  396  <|@ instruction v49|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  398  <|@ instruction MOV (x: [v49|QWORD + v47|QWORD * 1 - 8], y: v48|QWORD[*]) size: QWORD <|@ <|@
      nr  400  <|@ instruction v50|QWORD = LEA [v47|QWORD - 8] size: QWORD <|@ <|@
      nr  402  <|@ instruction MOV (x: [r15|QWORD + 72], y: v50|QWORD) size: QWORD <|@ <|@
      nr  404  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4559498341397223717
    begin_IR
      LIR
      nr  406  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  408  <|@ instruction rsi|QWORD = MOVE v48|QWORD[*] moveKind: QWORD <|@ <|@
      nr  410  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  412  <|@ instruction JUMP ~[] destination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B48" "B50" "B52" "B54" "B57" "B56" 
    successors "B59" "B91" 
    xhandlers
    flags 
    probability 4605841980402785416
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction TESTBRANCH (x: v43|DWORD[_], y: v43|DWORD[_]) trueDestinationProbability: 0.8739340370331193 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B91 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B66" 
    xhandlers
    flags 
    probability 4604875462812446756
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  420  <|@ instruction CMPBRANCH (x: v33|DWORD, y: v35|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B59 -> B60 falseDestination: B59 -> B66 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B67" 
    xhandlers
    flags 
    probability 4600371863185076260
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction JUMP ~[] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B64" 
    xhandlers
    flags 
    probability 4600371863185076260
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction v51|DWORD = SUB (x: v33|DWORD, ~y: v35|DWORD) size: DWORD <|@ <|@
      nr  430  <|@ instruction v52|QWORD = MOVSXD v51|DWORD size: QWORD <|@ <|@
      nr  432  <|@ instruction v53|QWORD = MOV v35|DWORD size: DWORD <|@ <|@
      nr  434  <|@ instruction v54|QWORD = ADD (x: v52|QWORD, y: v53|QWORD) size: QWORD <|@ <|@
      nr  436  <|@ instruction v55|QWORD = DEC v54|QWORD size: QWORD <|@ <|@
      nr  438  <|@ instruction v56|QWORD = MOV v33|DWORD size: DWORD <|@ <|@
      nr  440  <|@ instruction CMPBRANCH (x: v56|QWORD, y: v55|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B60 -> B61 falseDestination: B60 -> B64 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4600371863185076260
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction CMPBRANCH (x: v33|DWORD, y: v35|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B61 -> B62 falseDestination: B61 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B67" 
    xhandlers
    flags 
    probability 4600371863185076260
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  448  <|@ instruction JUMP ~[] destination: B62 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" "B62" 
    successors "B68" 
    xhandlers
    flags 
    probability 4604875462812446756
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction JUMP ~[] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" "B88" 
    successors "B69" "B90" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4617565855081504432
    begin_IR
      LIR
      nr  454  <|@ instruction [v57|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  456  <|@ instruction CMPBRANCH (x: v33|DWORD, y: v57|DWORD) trueDestinationProbability: 0.9812627296505405 condition: > trueDestination: B68 -> B69 falseDestination: B68 -> B90 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B70" "B71" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617455682992505589
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  460  <|@ instruction v58|DWORD = INC v57|DWORD size: DWORD <|@ <|@
      nr  462  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v58|DWORD) size: DWORD <|@ <|@
      nr  464  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4616878716535993821
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  468  <|@ instruction JUMP ~[] destination: B70 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" "B73" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602790951197370563
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction v59|QWORD[.+] = LEA [v0|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  474  <|@ instruction v60|DWORD[_] = MOV [v59|QWORD[.+]] size: DWORD <|@ <|@
      nr  476  <|@ instruction TESTBRANCH (x: v60|DWORD[_], y: v60|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B73 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" "B75" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601979936891675385
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction v61|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  482  <|@ instruction v62|QWORD[.] = UNCOMPRESSPOINTER (input: v60|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr  484  <|@ instruction TESTBRANCH (x: v61|QWORD, y: v61|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B75 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601149105194298439
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  488  <|@ instruction v63|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  490  <|@ instruction MOV (x: [v63|QWORD + v61|QWORD * 1 - 8], y: v62|QWORD[.]) size: QWORD <|@ <|@
      nr  492  <|@ instruction v64|QWORD = LEA [v61|QWORD - 8] size: QWORD <|@ <|@
      nr  494  <|@ instruction MOV (x: [r15|QWORD + 40], y: v64|QWORD) size: QWORD <|@ <|@
      nr  496  <|@ instruction JUMP ~[] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587545991679145066
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  500  <|@ instruction JUMP ~[] destination: B72 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586807474614810003
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction rsi|QWORD[.] = MOVE v62|QWORD[.] moveKind: QWORD <|@ <|@
      nr  506  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  508  <|@ instruction JUMP ~[] destination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B70" "B72" "B75" "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617455682992505589
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  512  <|@ instruction v65|DWORD[_] = MOV [v42|QWORD[.] + v57|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  514  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v65|DWORD[_]) size: DWORD <|@ <|@
      nr  516  <|@ instruction v66|QWORD[.] = UNCOMPRESSPOINTER (input: v65|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr  518  <|@ instruction v67|QWORD[*] = XOR (x: v0|QWORD[.], y: v66|QWORD[.]) size: QWORD <|@ <|@
      nr  520  <|@ instruction TESTCONSTBRANCH v67|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4616878716535993821
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  524  <|@ instruction TESTBRANCH (x: v66|QWORD[.], y: v66|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4616359446725133229
    begin_IR
      LIR
      nr  526  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  528  <|@ instruction v68|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  530  <|@ instruction CMPCONSTBRANCH [v68|QWORD[*] + v14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4615594589735958993
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  534  <|@ instruction JUMP ~[] destination: B81 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602790951197370563
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  538  <|@ instruction JUMP ~[] destination: B77 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601979936891675385
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  542  <|@ instruction JUMP ~[] destination: B79 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" "B84" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601149105194298438
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  546  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  548  <|@ instruction CMPCONSTBRANCH [v68|QWORD[*] + v14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B82 -> B83 falseDestination: B82 -> B84 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4600401356666659186
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  552  <|@ instruction JUMP ~[] destination: B83 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" "B86" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586142809256908445
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction MOVB [v68|QWORD[*] + v14|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  558  <|@ instruction v69|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  560  <|@ instruction v70|QWORD[*] = ADD (x: v68|QWORD[*], y: v14|QWORD) size: QWORD <|@ <|@
      nr  562  <|@ instruction TESTBRANCH (x: v69|QWORD, y: v69|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B84 -> B85 falseDestination: B84 -> B86 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4585544610434797044
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction v71|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  568  <|@ instruction MOV (x: [v71|QWORD + v69|QWORD * 1 - 8], y: v70|QWORD[*]) size: QWORD <|@ <|@
      nr  570  <|@ instruction v72|QWORD = LEA [v69|QWORD - 8] size: QWORD <|@ <|@
      nr  572  <|@ instruction MOV (x: [r15|QWORD + 72], y: v72|QWORD) size: QWORD <|@ <|@
      nr  574  <|@ instruction JUMP ~[] destination: B86 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4571435612730574153
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction rsi|QWORD = MOVE v70|QWORD[*] moveKind: QWORD <|@ <|@
      nr  580  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  582  <|@ instruction JUMP ~[] destination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B77" "B79" "B81" "B83" "B86" "B85" 
    successors "B88" "B89" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617455682992505588
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  586  <|@ instruction TESTBRANCH (x: v65|DWORD[_], y: v65|DWORD[_]) trueDestinationProbability: 0.8739340370331193 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B89 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B68" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4616728324673108138
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v57|DWORD = MOVE v58|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  590  <|@ instruction JUMP ~[] destination: B88 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B95" 
    xhandlers
    flags 
    probability 4603994086100456013
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction JUMP ~[] destination: B89 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B95" 
    xhandlers
    flags 
    probability 4592396561385874207
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  598  <|@ instruction JUMP ~[] destination: B91 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B95" 
    xhandlers
    flags 
    probability 4591715434359090862
    begin_IR
      LIR
      nr  600  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  602  <|@ instruction JUMP ~[] destination: B90 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" "B90" "B89" "B91" "B93" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  606  <|@ instruction rax|QWORD[.] = MOVE v12|QWORD[.] moveKind: QWORD <|@ <|@
      nr  608  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  612  <|@ instruction MOV [r15|QWORD + 1156] y: -59155 size: DWORD <|@ <|@
      nr  614  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  616  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  620  <|@ instruction JUMP ~[] destination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction JUMP ~[] destination: B64 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" "B63" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  628  <|@ instruction MOV [r15|QWORD + 1156] y: -40475 size: DWORD <|@ <|@
      nr  630  <|@ instruction MOV [r15|QWORD + 1168] y: 1944 size: QWORD <|@ <|@
      nr  632  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 95]
stack: v44|QWORD[.] 
locals: v0|QWORD[.] v42|QWORD[.] v12|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:95] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  634  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  636  <|@ instruction MOV [r15|QWORD + 1156] y: -36891 size: DWORD <|@ <|@
      nr  638  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  640  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
stack: v26|QWORD[.] 
locals: v0|QWORD[.] - v12|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:53] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #5          // next:java.util.HashMap$Node
     4: astore_2      
     5: aload_0       
     6: getfield      #0          // this$0:java.util.HashMap
     9: getfield      #2          // java.util.HashMap.modCount:int
    12: aload_0       
    13: getfield      #3          // expectedModCount:int
    16: if_icmpeq     27
    19: new           #39         // java.util.ConcurrentModificationException
    22: dup           
    23: invokespecial #9          // java.util.ConcurrentModificationException.<init>:()void
    26: athrow        
    27: aload_2       
    28: ifnonnull     39
    31: new           #42         // java.util.NoSuchElementException
    34: dup           
    35: invokespecial #10         // java.util.NoSuchElementException.<init>:()void
    38: athrow        
    39: aload_0       
    40: aload_0       
    41: aload_2       
    42: dup_x1        
    43: putfield      #6          // current:java.util.HashMap$Node
    46: getfield      #11         // java.util.HashMap$Node.next:java.util.HashMap$Node
    49: dup_x1        
    50: putfield      #5          // next:java.util.HashMap$Node
    53: ifnonnull     98
    56: aload_0       
    57: getfield      #0          // this$0:java.util.HashMap
    60: getfield      #4          // java.util.HashMap.table:java.util.HashMap$Node[]
    63: dup           
    64: astore_1      
    65: ifnull        98
    68: aload_0       
    69: getfield      #7          // index:int
    72: aload_1       
    73: arraylength   
    74: if_icmpge     98
    77: aload_0       
    78: aload_1       
    79: aload_0       
    80: dup           
    81: getfield      #7          // index:int
    84: dup_x1        
    85: iconst_1      
    86: iadd          
    87: putfield      #7          // index:int
    90: aaload        
    91: dup_x1        
    92: putfield      #5          // next:java.util.HashMap$Node
    95: ifnull        68
    98: aload_2       
    99: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanEliminateSpillMove"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B96" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7154f04f slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD[_] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   10  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v2|DWORD = MOV [v1|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction v3|DWORD[_] = MOV [v1|DWORD[_] * 8 + 36] size: DWORD <|@ <|@
      nr   14  <|@ instruction v4|DWORD[_] = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   16  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v5|DWORD[_] = MOV [v4|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   18  <|@ instruction CMPBRANCH (x: v2|DWORD, y: [v0|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B96 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   22  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B8" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   26  <|@ instruction JUMP ~[] destination: B2 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction v6|QWORD[.+] = LEA [v0|QWORD[.] + 24] size: QWORD <|@ <|@
      nr   32  <|@ instruction v7|DWORD[_] = MOV [v6|QWORD[.+]] size: DWORD <|@ <|@
      nr   34  <|@ instruction TESTBRANCH (x: v7|DWORD[_], y: v7|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction v8|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   40  <|@ instruction v9|QWORD[.] = UNCOMPRESSPOINTER (input: v7|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr   42  <|@ instruction TESTBRANCH (x: v8|QWORD, y: v8|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction v10|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   48  <|@ instruction MOV (x: [v10|QWORD + v8|QWORD * 1 - 8], y: v9|QWORD[.]) size: QWORD <|@ <|@
      nr   50  <|@ instruction v11|QWORD = LEA [v8|QWORD - 8] size: QWORD <|@ <|@
      nr   52  <|@ instruction MOV (x: [r15|QWORD + 40], y: v11|QWORD) size: QWORD <|@ <|@
      nr   54  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction JUMP ~[] destination: B4 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction rsi|QWORD[.] = MOVE v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   64  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   66  <|@ instruction JUMP ~[] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" "B7" "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v4|DWORD[_]) size: DWORD <|@ <|@
      nr   72  <|@ instruction v12|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr   74  <|@ instruction v13|QWORD[*] = XOR (x: v0|QWORD[.], y: v12|QWORD[.]) size: QWORD <|@ <|@
      nr   76  <|@ instruction v14|QWORD = MOVE input: long[140438306553856|0x7fba57600000] <|@ <|@
      nr   78  <|@ instruction TESTCONSTBRANCH v13|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction TESTBRANCH (x: v12|QWORD[.], y: v12|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction v15|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   88  <|@ instruction CMPCONSTBRANCH [v15|QWORD[*] + v14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction JUMP ~[] destination: B13 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B19" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   96  <|@ instruction JUMP ~[] destination: B9 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B19" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  100  <|@ instruction JUMP ~[] destination: B11 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  106  <|@ instruction CMPCONSTBRANCH [v15|QWORD[*] + v14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B19" 
    xhandlers
    flags 
    probability 4589917419268529874
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction JUMP ~[] destination: B15 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction MOVB [v15|QWORD[*] + v14|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  116  <|@ instruction v16|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  118  <|@ instruction v17|QWORD[*] = ADD (x: v15|QWORD[*], y: v14|QWORD) size: QWORD <|@ <|@
      nr  120  <|@ instruction TESTBRANCH (x: v16|QWORD, y: v16|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction v18|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  126  <|@ instruction MOV (x: [v18|QWORD + v16|QWORD * 1 - 8], y: v17|QWORD[*]) size: QWORD <|@ <|@
      nr  128  <|@ instruction v19|QWORD = LEA [v16|QWORD - 8] size: QWORD <|@ <|@
      nr  130  <|@ instruction MOV (x: [r15|QWORD + 72], y: v19|QWORD) size: QWORD <|@ <|@
      nr  132  <|@ instruction JUMP ~[] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction rsi|QWORD = MOVE v17|QWORD[*] moveKind: QWORD <|@ <|@
      nr  138  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  140  <|@ instruction JUMP ~[] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" "B13" "B15" "B18" "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B26" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction JUMP ~[] destination: B20 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction v20|QWORD[.+] = LEA [v0|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  154  <|@ instruction v21|DWORD[_] = MOV [v20|QWORD[.+]] size: DWORD <|@ <|@
      nr  156  <|@ instruction TESTBRANCH (x: v21|DWORD[_], y: v21|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction v22|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  162  <|@ instruction v23|QWORD[.] = UNCOMPRESSPOINTER (input: v21|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr  164  <|@ instruction TESTBRANCH (x: v22|QWORD, y: v22|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction v24|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  170  <|@ instruction MOV (x: [v24|QWORD + v22|QWORD * 1 - 8], y: v23|QWORD[.]) size: QWORD <|@ <|@
      nr  172  <|@ instruction v25|QWORD = LEA [v22|QWORD - 8] size: QWORD <|@ <|@
      nr  174  <|@ instruction MOV (x: [r15|QWORD + 40], y: v25|QWORD) size: QWORD <|@ <|@
      nr  176  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B26" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction JUMP ~[] destination: B22 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction rsi|QWORD[.] = MOVE v23|QWORD[.] moveKind: QWORD <|@ <|@
      nr  186  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  188  <|@ instruction JUMP ~[] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" "B25" "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v5|DWORD[_]) size: DWORD <|@ <|@
      nr  194  <|@ instruction v26|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr  196  <|@ instruction v27|QWORD[*] = XOR (x: v0|QWORD[.], y: v26|QWORD[.]) size: QWORD <|@ <|@
      nr  198  <|@ instruction TESTCONSTBRANCH v27|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction TESTBRANCH (x: v26|QWORD[.], y: v26|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction v28|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  208  <|@ instruction CMPCONSTBRANCH [v28|QWORD[*] + v14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B37" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  212  <|@ instruction JUMP ~[] destination: B31 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B37" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction JUMP ~[] destination: B27 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B37" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  220  <|@ instruction JUMP ~[] destination: B29 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  226  <|@ instruction CMPCONSTBRANCH [v28|QWORD[*] + v14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" 
    xhandlers
    flags 
    probability 4589917419268529874
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  230  <|@ instruction JUMP ~[] destination: B33 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction MOVB [v28|QWORD[*] + v14|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  236  <|@ instruction v29|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  238  <|@ instruction v30|QWORD[*] = ADD (x: v28|QWORD[*], y: v14|QWORD) size: QWORD <|@ <|@
      nr  240  <|@ instruction TESTBRANCH (x: v29|QWORD, y: v29|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  244  <|@ instruction v31|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  246  <|@ instruction MOV (x: [v31|QWORD + v29|QWORD * 1 - 8], y: v30|QWORD[*]) size: QWORD <|@ <|@
      nr  248  <|@ instruction v32|QWORD = LEA [v29|QWORD - 8] size: QWORD <|@ <|@
      nr  250  <|@ instruction MOV (x: [r15|QWORD + 72], y: v32|QWORD) size: QWORD <|@ <|@
      nr  252  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction rsi|QWORD = MOVE v30|QWORD[*] moveKind: QWORD <|@ <|@
      nr  258  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  260  <|@ instruction JUMP ~[] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B27" "B29" "B31" "B33" "B36" "B35" 
    successors "B38" "B94" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction TESTBRANCH (x: v5|DWORD[_], y: v5|DWORD[_]) trueDestinationProbability: 0.8674348032491496 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B94 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B93" 
    xhandlers
    flags 
    probability 4605988377658638555
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
stack: v26|QWORD[.] 
locals: v0|QWORD[.] - v12|QWORD[.] 
>@ <|@ instruction v33|DWORD = MOV [v3|DWORD[_] * 8 + 12] size: DWORD state [bci:53] <|@ <|@
      nr  270  <|@ instruction v34|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  272  <|@ instruction CMPBRANCH (x: v33|DWORD, y: v34|DWORD) trueDestinationProbability: 0.9812627296505405 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B93 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B92" 
    xhandlers
    flags 
    probability 4605841980402785416
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction CMPBRANCH (x: v33|DWORD, y: v34|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B92 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4605841980402785416
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction v35|DWORD = INC v34|DWORD size: DWORD <|@ <|@
      nr  282  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v35|DWORD) size: DWORD <|@ <|@
      nr  284  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B47" 
    xhandlers
    flags 
    probability 4605075304317034516
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  288  <|@ instruction JUMP ~[] destination: B41 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B95" 
    xhandlers
    flags 
    probability 4593944184856050836
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  292  <|@ instruction JUMP ~[] destination: B94 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4590797829349172127
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  296  <|@ instruction v36|QWORD[.+] = LEA [v0|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  298  <|@ instruction v37|DWORD[_] = MOV [v36|QWORD[.+]] size: DWORD <|@ <|@
      nr  300  <|@ instruction TESTBRANCH (x: v37|DWORD[_], y: v37|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4590184488480571407
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  304  <|@ instruction v38|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  306  <|@ instruction v39|QWORD[.] = UNCOMPRESSPOINTER (input: v37|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr  308  <|@ instruction TESTBRANCH (x: v38|QWORD, y: v38|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4589632481698830759
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  312  <|@ instruction v40|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  314  <|@ instruction MOV (x: [v40|QWORD + v38|QWORD * 1 - 8], y: v39|QWORD[.]) size: QWORD <|@ <|@
      nr  316  <|@ instruction v41|QWORD = LEA [v38|QWORD - 8] size: QWORD <|@ <|@
      nr  318  <|@ instruction MOV (x: [r15|QWORD + 40], y: v41|QWORD) size: QWORD <|@ <|@
      nr  320  <|@ instruction JUMP ~[] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B95" 
    xhandlers
    flags 
    probability 4580341933595724392
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction JUMP ~[] destination: B93 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B47" 
    xhandlers
    flags 
    probability 4576060348729859198
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  328  <|@ instruction JUMP ~[] destination: B43 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4575482130661533308
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  332  <|@ instruction rsi|QWORD[.] = MOVE v39|QWORD[.] moveKind: QWORD <|@ <|@
      nr  334  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  336  <|@ instruction JUMP ~[] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B41" "B43" "B46" "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4605841980402785416
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  340  <|@ instruction v42|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr  342  <|@ instruction v43|DWORD[_] = MOV [v42|QWORD[.] + v34|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  344  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v43|DWORD[_]) size: DWORD <|@ <|@
      nr  346  <|@ instruction v44|QWORD[.] = UNCOMPRESSPOINTER (input: v43|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr  348  <|@ instruction v45|QWORD[*] = XOR (x: v0|QWORD[.], y: v44|QWORD[.]) size: QWORD <|@ <|@
      nr  350  <|@ instruction TESTCONSTBRANCH v45|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4605075304317034516
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction TESTBRANCH (x: v44|QWORD[.], y: v44|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4604385295839858706
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  358  <|@ instruction v46|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  360  <|@ instruction CMPCONSTBRANCH [v46|QWORD[*] + v14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B58" 
    xhandlers
    flags 
    probability 4603764288210400477
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  364  <|@ instruction JUMP ~[] destination: B52 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B58" 
    xhandlers
    flags 
    probability 4590797829349172127
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction JUMP ~[] destination: B48 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B58" 
    xhandlers
    flags 
    probability 4590184488480571407
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  372  <|@ instruction JUMP ~[] destination: B50 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4589632481698830759
    begin_IR
      LIR
      nr  374  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  376  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  378  <|@ instruction CMPCONSTBRANCH [v46|QWORD[*] + v14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B58" 
    xhandlers
    flags 
    probability 4589103330899992928
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  382  <|@ instruction JUMP ~[] destination: B54 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4574598919810748272
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ instruction MOVB [v46|QWORD[*] + v14|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  388  <|@ instruction v47|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  390  <|@ instruction v48|QWORD[*] = ADD (x: v46|QWORD[*], y: v14|QWORD) size: QWORD <|@ <|@
      nr  392  <|@ instruction TESTBRANCH (x: v47|QWORD, y: v47|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4573804030045041739
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  396  <|@ instruction v49|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  398  <|@ instruction MOV (x: [v49|QWORD + v47|QWORD * 1 - 8], y: v48|QWORD[*]) size: QWORD <|@ <|@
      nr  400  <|@ instruction v50|QWORD = LEA [v47|QWORD - 8] size: QWORD <|@ <|@
      nr  402  <|@ instruction MOV (x: [r15|QWORD + 72], y: v50|QWORD) size: QWORD <|@ <|@
      nr  404  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4559498341397223717
    begin_IR
      LIR
      nr  406  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  408  <|@ instruction rsi|QWORD = MOVE v48|QWORD[*] moveKind: QWORD <|@ <|@
      nr  410  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  412  <|@ instruction JUMP ~[] destination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B48" "B50" "B52" "B54" "B57" "B56" 
    successors "B59" "B91" 
    xhandlers
    flags 
    probability 4605841980402785416
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction TESTBRANCH (x: v43|DWORD[_], y: v43|DWORD[_]) trueDestinationProbability: 0.8739340370331193 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B91 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B66" 
    xhandlers
    flags 
    probability 4604875462812446756
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  420  <|@ instruction CMPBRANCH (x: v33|DWORD, y: v35|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B59 -> B60 falseDestination: B59 -> B66 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B67" 
    xhandlers
    flags 
    probability 4600371863185076260
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction JUMP ~[] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B64" 
    xhandlers
    flags 
    probability 4600371863185076260
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction v51|DWORD = SUB (x: v33|DWORD, ~y: v35|DWORD) size: DWORD <|@ <|@
      nr  430  <|@ instruction v52|QWORD = MOVSXD v51|DWORD size: QWORD <|@ <|@
      nr  432  <|@ instruction v53|QWORD = MOV v35|DWORD size: DWORD <|@ <|@
      nr  434  <|@ instruction v54|QWORD = ADD (x: v52|QWORD, y: v53|QWORD) size: QWORD <|@ <|@
      nr  436  <|@ instruction v55|QWORD = DEC v54|QWORD size: QWORD <|@ <|@
      nr  438  <|@ instruction v56|QWORD = MOV v33|DWORD size: DWORD <|@ <|@
      nr  440  <|@ instruction CMPBRANCH (x: v56|QWORD, y: v55|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B60 -> B61 falseDestination: B60 -> B64 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4600371863185076260
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction CMPBRANCH (x: v33|DWORD, y: v35|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B61 -> B62 falseDestination: B61 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B67" 
    xhandlers
    flags 
    probability 4600371863185076260
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  448  <|@ instruction JUMP ~[] destination: B62 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" "B62" 
    successors "B68" 
    xhandlers
    flags 
    probability 4604875462812446756
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction JUMP ~[] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" "B88" 
    successors "B69" "B90" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4617565855081504432
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  456  <|@ instruction CMPBRANCH (x: v33|DWORD, y: v57|DWORD) trueDestinationProbability: 0.9812627296505405 condition: > trueDestination: B68 -> B69 falseDestination: B68 -> B90 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B70" "B71" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617455682992505589
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  460  <|@ instruction v58|DWORD = INC v57|DWORD size: DWORD <|@ <|@
      nr  462  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v58|DWORD) size: DWORD <|@ <|@
      nr  464  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4616878716535993821
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  468  <|@ instruction JUMP ~[] destination: B70 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" "B73" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602790951197370563
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction v59|QWORD[.+] = LEA [v0|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  474  <|@ instruction v60|DWORD[_] = MOV [v59|QWORD[.+]] size: DWORD <|@ <|@
      nr  476  <|@ instruction TESTBRANCH (x: v60|DWORD[_], y: v60|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B73 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" "B75" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601979936891675385
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction v61|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  482  <|@ instruction v62|QWORD[.] = UNCOMPRESSPOINTER (input: v60|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr  484  <|@ instruction TESTBRANCH (x: v61|QWORD, y: v61|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B75 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601149105194298439
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  488  <|@ instruction v63|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  490  <|@ instruction MOV (x: [v63|QWORD + v61|QWORD * 1 - 8], y: v62|QWORD[.]) size: QWORD <|@ <|@
      nr  492  <|@ instruction v64|QWORD = LEA [v61|QWORD - 8] size: QWORD <|@ <|@
      nr  494  <|@ instruction MOV (x: [r15|QWORD + 40], y: v64|QWORD) size: QWORD <|@ <|@
      nr  496  <|@ instruction JUMP ~[] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587545991679145066
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  500  <|@ instruction JUMP ~[] destination: B72 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586807474614810003
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction rsi|QWORD[.] = MOVE v62|QWORD[.] moveKind: QWORD <|@ <|@
      nr  506  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  508  <|@ instruction JUMP ~[] destination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B70" "B72" "B75" "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617455682992505589
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  512  <|@ instruction v65|DWORD[_] = MOV [v42|QWORD[.] + v57|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  514  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v65|DWORD[_]) size: DWORD <|@ <|@
      nr  516  <|@ instruction v66|QWORD[.] = UNCOMPRESSPOINTER (input: v65|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr  518  <|@ instruction v67|QWORD[*] = XOR (x: v0|QWORD[.], y: v66|QWORD[.]) size: QWORD <|@ <|@
      nr  520  <|@ instruction TESTCONSTBRANCH v67|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4616878716535993821
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  524  <|@ instruction TESTBRANCH (x: v66|QWORD[.], y: v66|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4616359446725133229
    begin_IR
      LIR
      nr  526  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  528  <|@ instruction v68|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  530  <|@ instruction CMPCONSTBRANCH [v68|QWORD[*] + v14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4615594589735958993
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  534  <|@ instruction JUMP ~[] destination: B81 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602790951197370563
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  538  <|@ instruction JUMP ~[] destination: B77 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601979936891675385
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  542  <|@ instruction JUMP ~[] destination: B79 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" "B84" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601149105194298438
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  546  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  548  <|@ instruction CMPCONSTBRANCH [v68|QWORD[*] + v14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B82 -> B83 falseDestination: B82 -> B84 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4600401356666659186
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  552  <|@ instruction JUMP ~[] destination: B83 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" "B86" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586142809256908445
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction MOVB [v68|QWORD[*] + v14|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  558  <|@ instruction v69|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  560  <|@ instruction v70|QWORD[*] = ADD (x: v68|QWORD[*], y: v14|QWORD) size: QWORD <|@ <|@
      nr  562  <|@ instruction TESTBRANCH (x: v69|QWORD, y: v69|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B84 -> B85 falseDestination: B84 -> B86 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4585544610434797044
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction v71|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  568  <|@ instruction MOV (x: [v71|QWORD + v69|QWORD * 1 - 8], y: v70|QWORD[*]) size: QWORD <|@ <|@
      nr  570  <|@ instruction v72|QWORD = LEA [v69|QWORD - 8] size: QWORD <|@ <|@
      nr  572  <|@ instruction MOV (x: [r15|QWORD + 72], y: v72|QWORD) size: QWORD <|@ <|@
      nr  574  <|@ instruction JUMP ~[] destination: B86 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4571435612730574153
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction rsi|QWORD = MOVE v70|QWORD[*] moveKind: QWORD <|@ <|@
      nr  580  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  582  <|@ instruction JUMP ~[] destination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B77" "B79" "B81" "B83" "B86" "B85" 
    successors "B88" "B89" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617455682992505588
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  586  <|@ instruction TESTBRANCH (x: v65|DWORD[_], y: v65|DWORD[_]) trueDestinationProbability: 0.8739340370331193 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B89 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B68" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4616728324673108138
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v57|DWORD = MOVE v58|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  590  <|@ instruction JUMP ~[] destination: B88 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B95" 
    xhandlers
    flags 
    probability 4603994086100456013
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction JUMP ~[] destination: B89 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B95" 
    xhandlers
    flags 
    probability 4592396561385874207
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  598  <|@ instruction JUMP ~[] destination: B91 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B95" 
    xhandlers
    flags 
    probability 4591715434359090862
    begin_IR
      LIR
      nr  600  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  602  <|@ instruction JUMP ~[] destination: B90 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" "B90" "B89" "B91" "B93" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  606  <|@ instruction rax|QWORD[.] = MOVE v12|QWORD[.] moveKind: QWORD <|@ <|@
      nr  608  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  612  <|@ instruction MOV [r15|QWORD + 1156] y: -59155 size: DWORD <|@ <|@
      nr  614  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  616  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  620  <|@ instruction JUMP ~[] destination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction JUMP ~[] destination: B64 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" "B63" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  628  <|@ instruction MOV [r15|QWORD + 1156] y: -40475 size: DWORD <|@ <|@
      nr  630  <|@ instruction MOV [r15|QWORD + 1168] y: 1944 size: QWORD <|@ <|@
      nr  632  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 95]
stack: v44|QWORD[.] 
locals: v0|QWORD[.] v42|QWORD[.] v12|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:95] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  634  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  636  <|@ instruction MOV [r15|QWORD + 1156] y: -36891 size: DWORD <|@ <|@
      nr  638  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  640  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
stack: v26|QWORD[.] 
locals: v0|QWORD[.] - v12|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:53] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #5          // next:java.util.HashMap$Node
     4: astore_2      
     5: aload_0       
     6: getfield      #0          // this$0:java.util.HashMap
     9: getfield      #2          // java.util.HashMap.modCount:int
    12: aload_0       
    13: getfield      #3          // expectedModCount:int
    16: if_icmpeq     27
    19: new           #39         // java.util.ConcurrentModificationException
    22: dup           
    23: invokespecial #9          // java.util.ConcurrentModificationException.<init>:()void
    26: athrow        
    27: aload_2       
    28: ifnonnull     39
    31: new           #42         // java.util.NoSuchElementException
    34: dup           
    35: invokespecial #10         // java.util.NoSuchElementException.<init>:()void
    38: athrow        
    39: aload_0       
    40: aload_0       
    41: aload_2       
    42: dup_x1        
    43: putfield      #6          // current:java.util.HashMap$Node
    46: getfield      #11         // java.util.HashMap$Node.next:java.util.HashMap$Node
    49: dup_x1        
    50: putfield      #5          // next:java.util.HashMap$Node
    53: ifnonnull     98
    56: aload_0       
    57: getfield      #0          // this$0:java.util.HashMap
    60: getfield      #4          // java.util.HashMap.table:java.util.HashMap$Node[]
    63: dup           
    64: astore_1      
    65: ifnull        98
    68: aload_0       
    69: getfield      #7          // index:int
    72: aload_1       
    73: arraylength   
    74: if_icmpge     98
    77: aload_0       
    78: aload_1       
    79: aload_0       
    80: dup           
    81: getfield      #7          // index:int
    84: dup_x1        
    85: iconst_1      
    86: iadd          
    87: putfield      #7          // index:int
    90: aaload        
    91: dup_x1        
    92: putfield      #5          // next:java.util.HashMap$Node
    95: ifnull        68
    98: aload_2       
    99: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScanAssignLocations"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B96" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7154f04f slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction rsi|DWORD[_] = MOV [r10|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   10  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: r10|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = MOV [rsi|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction r11|DWORD[_] = MOV [rsi|DWORD[_] * 8 + 36] size: DWORD <|@ <|@
      nr   14  <|@ instruction r8|DWORD[_] = MOV [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   16  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: r10|QWORD[.] - - 
>@ <|@ instruction r9|DWORD[_] = MOV [r8|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   18  <|@ instruction CMPBRANCH (x: rax|DWORD, y: [r10|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B96 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   22  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B8" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   26  <|@ instruction JUMP ~[] destination: B2 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 24] size: QWORD <|@ <|@
      nr   32  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr   34  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction rax|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   40  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr   42  <|@ instruction TESTBRANCH (x: rax|QWORD, y: rax|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   48  <|@ instruction MOV (x: [rcx|QWORD + rax|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr   50  <|@ instruction rsi|QWORD = LEA [rax|QWORD - 8] size: QWORD <|@ <|@
      nr   52  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   54  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction JUMP ~[] destination: B4 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   66  <|@ instruction JUMP ~[] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" "B7" "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction MOV (x: [r10|QWORD[.] + 24], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr   72  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr   74  <|@ instruction rsi|QWORD[*] = XOR (x: r10|QWORD[.], y: r8|QWORD[.]) size: QWORD <|@ <|@
      nr   76  <|@ instruction rax|QWORD = MOVE input: long[140438306553856|0x7fba57600000] <|@ <|@
      nr   78  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction TESTBRANCH (x: r8|QWORD[.], y: r8|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   88  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rax|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction JUMP ~[] destination: B13 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B19" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   96  <|@ instruction JUMP ~[] destination: B9 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B19" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  100  <|@ instruction JUMP ~[] destination: B11 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  106  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rax|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B19" 
    xhandlers
    flags 
    probability 4589917419268529874
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction JUMP ~[] destination: B15 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction MOVB [rsi|QWORD[*] + rax|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  116  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  118  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rax|QWORD) size: QWORD <|@ <|@
      nr  120  <|@ instruction TESTBRANCH (x: rcx|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  126  <|@ instruction MOV (x: [rbx|QWORD + rcx|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  128  <|@ instruction rsi|QWORD = LEA [rcx|QWORD - 8] size: QWORD <|@ <|@
      nr  130  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  132  <|@ instruction JUMP ~[] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  138  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  140  <|@ instruction JUMP ~[] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" "B13" "B15" "B18" "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B26" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction JUMP ~[] destination: B20 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  154  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  156  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  162  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr  164  <|@ instruction TESTBRANCH (x: rcx|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  170  <|@ instruction MOV (x: [rbx|QWORD + rcx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  172  <|@ instruction rsi|QWORD = LEA [rcx|QWORD - 8] size: QWORD <|@ <|@
      nr  174  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  176  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B26" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction JUMP ~[] destination: B22 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  188  <|@ instruction JUMP ~[] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" "B25" "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: r9|DWORD[_]) size: DWORD <|@ <|@
      nr  194  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr  196  <|@ instruction rsi|QWORD[*] = XOR (x: r10|QWORD[.], y: rcx|QWORD[.]) size: QWORD <|@ <|@
      nr  198  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  208  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rax|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B37" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  212  <|@ instruction JUMP ~[] destination: B31 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B37" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction JUMP ~[] destination: B27 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B37" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  220  <|@ instruction JUMP ~[] destination: B29 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  226  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rax|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" 
    xhandlers
    flags 
    probability 4589917419268529874
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  230  <|@ instruction JUMP ~[] destination: B33 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction MOVB [rsi|QWORD[*] + rax|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  236  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  238  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rax|QWORD) size: QWORD <|@ <|@
      nr  240  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  244  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  246  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  248  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  250  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  252  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  258  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  260  <|@ instruction JUMP ~[] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B27" "B29" "B31" "B33" "B36" "B35" 
    successors "B38" "B94" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction TESTBRANCH (x: r9|DWORD[_], y: r9|DWORD[_]) trueDestinationProbability: 0.8674348032491496 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B94 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B93" 
    xhandlers
    flags 
    probability 4605988377658638555
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
stack: rcx|QWORD[.] 
locals: r10|QWORD[.] - r8|QWORD[.] 
>@ <|@ instruction r9|DWORD = MOV [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:53] <|@ <|@
      nr  270  <|@ instruction rbx|DWORD = MOV [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  272  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.9812627296505405 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B93 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B92" 
    xhandlers
    flags 
    probability 4605841980402785416
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B92 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4605841980402785416
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction rcx|DWORD = INC rbx|DWORD size: DWORD <|@ <|@
      nr  282  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  284  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B47" 
    xhandlers
    flags 
    probability 4605075304317034516
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  288  <|@ instruction JUMP ~[] destination: B41 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B95" 
    xhandlers
    flags 
    probability 4593944184856050836
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  292  <|@ instruction JUMP ~[] destination: B94 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4590797829349172127
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  296  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  298  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  300  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4590184488480571407
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  304  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  306  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr  308  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4589632481698830759
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  312  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  314  <|@ instruction MOV (x: [rdx|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  316  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  318  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  320  <|@ instruction JUMP ~[] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B95" 
    xhandlers
    flags 
    probability 4580341933595724392
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction JUMP ~[] destination: B93 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B47" 
    xhandlers
    flags 
    probability 4576060348729859198
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  328  <|@ instruction JUMP ~[] destination: B43 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4575482130661533308
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  336  <|@ instruction JUMP ~[] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B41" "B43" "B46" "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4605841980402785416
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  340  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr  342  <|@ instruction rbx|DWORD[_] = MOV [r11|QWORD[.] + rbx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  344  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: rbx|DWORD[_]) size: DWORD <|@ <|@
      nr  346  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr  348  <|@ instruction rsi|QWORD[*] = XOR (x: r10|QWORD[.], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  350  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4605075304317034516
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction TESTBRANCH (x: rdi|QWORD[.], y: rdi|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4604385295839858706
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  358  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  360  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rax|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B58" 
    xhandlers
    flags 
    probability 4603764288210400477
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  364  <|@ instruction JUMP ~[] destination: B52 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B58" 
    xhandlers
    flags 
    probability 4590797829349172127
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction JUMP ~[] destination: B48 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B58" 
    xhandlers
    flags 
    probability 4590184488480571407
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  372  <|@ instruction JUMP ~[] destination: B50 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4589632481698830759
    begin_IR
      LIR
      nr  374  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  376  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  378  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rax|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B58" 
    xhandlers
    flags 
    probability 4589103330899992928
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  382  <|@ instruction JUMP ~[] destination: B54 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4574598919810748272
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ instruction MOVB [rsi|QWORD[*] + rax|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  388  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  390  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rax|QWORD) size: QWORD <|@ <|@
      nr  392  <|@ instruction TESTBRANCH (x: rdx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4573804030045041739
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  396  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  398  <|@ instruction MOV (x: [rbp|QWORD + rdx|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  400  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr  402  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  404  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4559498341397223717
    begin_IR
      LIR
      nr  406  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  408  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  410  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  412  <|@ instruction JUMP ~[] destination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B48" "B50" "B52" "B54" "B57" "B56" 
    successors "B59" "B91" 
    xhandlers
    flags 
    probability 4605841980402785416
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction TESTBRANCH (x: rbx|DWORD[_], y: rbx|DWORD[_]) trueDestinationProbability: 0.8739340370331193 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B91 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B66" 
    xhandlers
    flags 
    probability 4604875462812446756
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  420  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B59 -> B60 falseDestination: B59 -> B66 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B67" 
    xhandlers
    flags 
    probability 4600371863185076260
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction JUMP ~[] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B64" 
    xhandlers
    flags 
    probability 4600371863185076260
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction rsi|DWORD = SUB (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  430  <|@ instruction rsi|QWORD = MOVSXD rsi|DWORD size: QWORD <|@ <|@
      nr  432  <|@ instruction rbx|QWORD = MOV rcx|DWORD size: DWORD <|@ <|@
      nr  434  <|@ instruction rsi|QWORD = ADD (x: rsi|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr  436  <|@ instruction rsi|QWORD = DEC rsi|QWORD size: QWORD <|@ <|@
      nr  438  <|@ instruction rbx|QWORD = MOV r9|DWORD size: DWORD <|@ <|@
      nr  440  <|@ instruction CMPBRANCH (x: rbx|QWORD, y: rsi|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B60 -> B61 falseDestination: B60 -> B64 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4600371863185076260
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B61 -> B62 falseDestination: B61 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B67" 
    xhandlers
    flags 
    probability 4600371863185076260
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  448  <|@ instruction JUMP ~[] destination: B62 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" "B62" 
    successors "B68" 
    xhandlers
    flags 
    probability 4604875462812446756
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction JUMP ~[] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" "B88" 
    successors "B69" "B90" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4617565855081504432
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  456  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.9812627296505405 condition: > trueDestination: B68 -> B69 falseDestination: B68 -> B90 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B70" "B71" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617455682992505589
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  460  <|@ instruction rbx|DWORD = INC rcx|DWORD size: DWORD <|@ <|@
      nr  462  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  464  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4616878716535993821
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  468  <|@ instruction JUMP ~[] destination: B70 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" "B73" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602790951197370563
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  474  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  476  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B73 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" "B75" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601979936891675385
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  482  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr  484  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B75 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601149105194298439
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  488  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  490  <|@ instruction MOV (x: [rdx|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  492  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  494  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  496  <|@ instruction JUMP ~[] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587545991679145066
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  500  <|@ instruction JUMP ~[] destination: B72 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586807474614810003
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  508  <|@ instruction JUMP ~[] destination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B70" "B72" "B75" "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617455682992505589
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  512  <|@ instruction rcx|DWORD[_] = MOV [r11|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  514  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr  516  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr  518  <|@ instruction rdi|QWORD[*] = XOR (x: r10|QWORD[.], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  520  <|@ instruction TESTCONSTBRANCH rdi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4616878716535993821
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  524  <|@ instruction TESTBRANCH (x: rsi|QWORD[.], y: rsi|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4616359446725133229
    begin_IR
      LIR
      nr  526  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  528  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  530  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rax|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4615594589735958993
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  534  <|@ instruction JUMP ~[] destination: B81 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602790951197370563
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  538  <|@ instruction JUMP ~[] destination: B77 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601979936891675385
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  542  <|@ instruction JUMP ~[] destination: B79 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" "B84" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601149105194298438
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  546  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  548  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rax|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B82 -> B83 falseDestination: B82 -> B84 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4600401356666659186
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  552  <|@ instruction JUMP ~[] destination: B83 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" "B86" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586142809256908445
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction MOVB [rsi|QWORD[*] + rax|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  558  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  560  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rax|QWORD) size: QWORD <|@ <|@
      nr  562  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B84 -> B85 falseDestination: B84 -> B86 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4585544610434797044
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  568  <|@ instruction MOV (x: [rdx|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  570  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  572  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  574  <|@ instruction JUMP ~[] destination: B86 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4571435612730574153
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  580  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  582  <|@ instruction JUMP ~[] destination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B77" "B79" "B81" "B83" "B86" "B85" 
    successors "B88" "B89" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617455682992505588
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  586  <|@ instruction TESTBRANCH (x: rcx|DWORD[_], y: rcx|DWORD[_]) trueDestinationProbability: 0.8739340370331193 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B89 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B68" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4616728324673108138
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  590  <|@ instruction JUMP ~[] destination: B88 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B95" 
    xhandlers
    flags 
    probability 4603994086100456013
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction JUMP ~[] destination: B89 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B95" 
    xhandlers
    flags 
    probability 4592396561385874207
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  598  <|@ instruction JUMP ~[] destination: B91 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B95" 
    xhandlers
    flags 
    probability 4591715434359090862
    begin_IR
      LIR
      nr  600  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  602  <|@ instruction JUMP ~[] destination: B90 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" "B90" "B89" "B91" "B93" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  606  <|@ instruction rax|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  608  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  612  <|@ instruction MOV [r15|QWORD + 1156] y: -59155 size: DWORD <|@ <|@
      nr  614  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  616  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: r10|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  620  <|@ instruction JUMP ~[] destination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction JUMP ~[] destination: B64 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" "B63" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  628  <|@ instruction MOV [r15|QWORD + 1156] y: -40475 size: DWORD <|@ <|@
      nr  630  <|@ instruction MOV [r15|QWORD + 1168] y: 1944 size: QWORD <|@ <|@
      nr  632  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 95]
stack: rdi|QWORD[.] 
locals: r10|QWORD[.] r11|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:95] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  634  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  636  <|@ instruction MOV [r15|QWORD + 1156] y: -36891 size: DWORD <|@ <|@
      nr  638  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  640  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
stack: rcx|QWORD[.] 
locals: r10|QWORD[.] - r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:53] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #5          // next:java.util.HashMap$Node
     4: astore_2      
     5: aload_0       
     6: getfield      #0          // this$0:java.util.HashMap
     9: getfield      #2          // java.util.HashMap.modCount:int
    12: aload_0       
    13: getfield      #3          // expectedModCount:int
    16: if_icmpeq     27
    19: new           #39         // java.util.ConcurrentModificationException
    22: dup           
    23: invokespecial #9          // java.util.ConcurrentModificationException.<init>:()void
    26: athrow        
    27: aload_2       
    28: ifnonnull     39
    31: new           #42         // java.util.NoSuchElementException
    34: dup           
    35: invokespecial #10         // java.util.NoSuchElementException.<init>:()void
    38: athrow        
    39: aload_0       
    40: aload_0       
    41: aload_2       
    42: dup_x1        
    43: putfield      #6          // current:java.util.HashMap$Node
    46: getfield      #11         // java.util.HashMap$Node.next:java.util.HashMap$Node
    49: dup_x1        
    50: putfield      #5          // next:java.util.HashMap$Node
    53: ifnonnull     98
    56: aload_0       
    57: getfield      #0          // this$0:java.util.HashMap
    60: getfield      #4          // java.util.HashMap.table:java.util.HashMap$Node[]
    63: dup           
    64: astore_1      
    65: ifnull        98
    68: aload_0       
    69: getfield      #7          // index:int
    72: aload_1       
    73: arraylength   
    74: if_icmpge     98
    77: aload_0       
    78: aload_1       
    79: aload_0       
    80: dup           
    81: getfield      #7          // index:int
    84: dup_x1        
    85: iconst_1      
    86: iadd          
    87: putfield      #7          // index:int
    90: aaload        
    91: dup_x1        
    92: putfield      #5          // next:java.util.HashMap$Node
    95: ifnull        68
    98: aload_2       
    99: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScan"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B96" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7154f04f slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction rsi|DWORD[_] = MOV [r10|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   10  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: r10|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = MOV [rsi|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction r11|DWORD[_] = MOV [rsi|DWORD[_] * 8 + 36] size: DWORD <|@ <|@
      nr   14  <|@ instruction r8|DWORD[_] = MOV [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   16  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: r10|QWORD[.] - - 
>@ <|@ instruction r9|DWORD[_] = MOV [r8|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   18  <|@ instruction CMPBRANCH (x: rax|DWORD, y: [r10|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B96 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   22  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B8" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   26  <|@ instruction JUMP ~[] destination: B2 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 24] size: QWORD <|@ <|@
      nr   32  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr   34  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction rax|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   40  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr   42  <|@ instruction TESTBRANCH (x: rax|QWORD, y: rax|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   48  <|@ instruction MOV (x: [rcx|QWORD + rax|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr   50  <|@ instruction rsi|QWORD = LEA [rax|QWORD - 8] size: QWORD <|@ <|@
      nr   52  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   54  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction JUMP ~[] destination: B4 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   66  <|@ instruction JUMP ~[] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" "B7" "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction MOV (x: [r10|QWORD[.] + 24], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr   72  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr   74  <|@ instruction rsi|QWORD[*] = XOR (x: r10|QWORD[.], y: r8|QWORD[.]) size: QWORD <|@ <|@
      nr   76  <|@ instruction rax|QWORD = MOVE input: long[140438306553856|0x7fba57600000] <|@ <|@
      nr   78  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction TESTBRANCH (x: r8|QWORD[.], y: r8|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   88  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rax|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction JUMP ~[] destination: B13 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B19" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   96  <|@ instruction JUMP ~[] destination: B9 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B19" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  100  <|@ instruction JUMP ~[] destination: B11 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  106  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rax|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B19" 
    xhandlers
    flags 
    probability 4589917419268529874
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction JUMP ~[] destination: B15 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction MOVB [rsi|QWORD[*] + rax|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  116  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  118  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rax|QWORD) size: QWORD <|@ <|@
      nr  120  <|@ instruction TESTBRANCH (x: rcx|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  126  <|@ instruction MOV (x: [rbx|QWORD + rcx|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  128  <|@ instruction rsi|QWORD = LEA [rcx|QWORD - 8] size: QWORD <|@ <|@
      nr  130  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  132  <|@ instruction JUMP ~[] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  138  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  140  <|@ instruction JUMP ~[] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" "B13" "B15" "B18" "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B26" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction JUMP ~[] destination: B20 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  154  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  156  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  162  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr  164  <|@ instruction TESTBRANCH (x: rcx|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  170  <|@ instruction MOV (x: [rbx|QWORD + rcx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  172  <|@ instruction rsi|QWORD = LEA [rcx|QWORD - 8] size: QWORD <|@ <|@
      nr  174  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  176  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B26" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction JUMP ~[] destination: B22 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  188  <|@ instruction JUMP ~[] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" "B25" "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: r9|DWORD[_]) size: DWORD <|@ <|@
      nr  194  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr  196  <|@ instruction rsi|QWORD[*] = XOR (x: r10|QWORD[.], y: rcx|QWORD[.]) size: QWORD <|@ <|@
      nr  198  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  208  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rax|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B37" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  212  <|@ instruction JUMP ~[] destination: B31 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B37" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction JUMP ~[] destination: B27 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B37" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  220  <|@ instruction JUMP ~[] destination: B29 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  226  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rax|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" 
    xhandlers
    flags 
    probability 4589917419268529874
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  230  <|@ instruction JUMP ~[] destination: B33 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction MOVB [rsi|QWORD[*] + rax|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  236  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  238  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rax|QWORD) size: QWORD <|@ <|@
      nr  240  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  244  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  246  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  248  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  250  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  252  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  258  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  260  <|@ instruction JUMP ~[] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B27" "B29" "B31" "B33" "B36" "B35" 
    successors "B38" "B94" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction TESTBRANCH (x: r9|DWORD[_], y: r9|DWORD[_]) trueDestinationProbability: 0.8674348032491496 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B94 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B93" 
    xhandlers
    flags 
    probability 4605988377658638555
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
stack: rcx|QWORD[.] 
locals: r10|QWORD[.] - r8|QWORD[.] 
>@ <|@ instruction r9|DWORD = MOV [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:53] <|@ <|@
      nr  270  <|@ instruction rbx|DWORD = MOV [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  272  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.9812627296505405 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B93 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B92" 
    xhandlers
    flags 
    probability 4605841980402785416
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B92 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4605841980402785416
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction rcx|DWORD = INC rbx|DWORD size: DWORD <|@ <|@
      nr  282  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  284  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B47" 
    xhandlers
    flags 
    probability 4605075304317034516
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  288  <|@ instruction JUMP ~[] destination: B41 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B95" 
    xhandlers
    flags 
    probability 4593944184856050836
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  292  <|@ instruction JUMP ~[] destination: B94 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4590797829349172127
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  296  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  298  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  300  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4590184488480571407
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  304  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  306  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr  308  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4589632481698830759
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  312  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  314  <|@ instruction MOV (x: [rdx|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  316  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  318  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  320  <|@ instruction JUMP ~[] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B95" 
    xhandlers
    flags 
    probability 4580341933595724392
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction JUMP ~[] destination: B93 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B47" 
    xhandlers
    flags 
    probability 4576060348729859198
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  328  <|@ instruction JUMP ~[] destination: B43 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4575482130661533308
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  336  <|@ instruction JUMP ~[] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B41" "B43" "B46" "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4605841980402785416
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  340  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr  342  <|@ instruction rbx|DWORD[_] = MOV [r11|QWORD[.] + rbx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  344  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: rbx|DWORD[_]) size: DWORD <|@ <|@
      nr  346  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr  348  <|@ instruction rsi|QWORD[*] = XOR (x: r10|QWORD[.], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  350  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4605075304317034516
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction TESTBRANCH (x: rdi|QWORD[.], y: rdi|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4604385295839858706
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  358  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  360  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rax|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B58" 
    xhandlers
    flags 
    probability 4603764288210400477
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  364  <|@ instruction JUMP ~[] destination: B52 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B58" 
    xhandlers
    flags 
    probability 4590797829349172127
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction JUMP ~[] destination: B48 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B58" 
    xhandlers
    flags 
    probability 4590184488480571407
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  372  <|@ instruction JUMP ~[] destination: B50 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4589632481698830759
    begin_IR
      LIR
      nr  374  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  376  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  378  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rax|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B58" 
    xhandlers
    flags 
    probability 4589103330899992928
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  382  <|@ instruction JUMP ~[] destination: B54 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4574598919810748272
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ instruction MOVB [rsi|QWORD[*] + rax|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  388  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  390  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rax|QWORD) size: QWORD <|@ <|@
      nr  392  <|@ instruction TESTBRANCH (x: rdx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4573804030045041739
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  396  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  398  <|@ instruction MOV (x: [rbp|QWORD + rdx|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  400  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr  402  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  404  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4559498341397223717
    begin_IR
      LIR
      nr  406  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  408  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  410  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  412  <|@ instruction JUMP ~[] destination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B48" "B50" "B52" "B54" "B57" "B56" 
    successors "B59" "B91" 
    xhandlers
    flags 
    probability 4605841980402785416
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction TESTBRANCH (x: rbx|DWORD[_], y: rbx|DWORD[_]) trueDestinationProbability: 0.8739340370331193 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B91 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B66" 
    xhandlers
    flags 
    probability 4604875462812446756
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  420  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B59 -> B60 falseDestination: B59 -> B66 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B67" 
    xhandlers
    flags 
    probability 4600371863185076260
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction JUMP ~[] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B64" 
    xhandlers
    flags 
    probability 4600371863185076260
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction rsi|DWORD = SUB (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  430  <|@ instruction rsi|QWORD = MOVSXD rsi|DWORD size: QWORD <|@ <|@
      nr  432  <|@ instruction rbx|QWORD = MOV rcx|DWORD size: DWORD <|@ <|@
      nr  434  <|@ instruction rsi|QWORD = ADD (x: rsi|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr  436  <|@ instruction rsi|QWORD = DEC rsi|QWORD size: QWORD <|@ <|@
      nr  438  <|@ instruction rbx|QWORD = MOV r9|DWORD size: DWORD <|@ <|@
      nr  440  <|@ instruction CMPBRANCH (x: rbx|QWORD, y: rsi|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B60 -> B61 falseDestination: B60 -> B64 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4600371863185076260
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B61 -> B62 falseDestination: B61 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B67" 
    xhandlers
    flags 
    probability 4600371863185076260
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  448  <|@ instruction JUMP ~[] destination: B62 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" "B62" 
    successors "B68" 
    xhandlers
    flags 
    probability 4604875462812446756
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction JUMP ~[] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" "B88" 
    successors "B69" "B90" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4617565855081504432
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  456  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.9812627296505405 condition: > trueDestination: B68 -> B69 falseDestination: B68 -> B90 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B70" "B71" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617455682992505589
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  460  <|@ instruction rbx|DWORD = INC rcx|DWORD size: DWORD <|@ <|@
      nr  462  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  464  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4616878716535993821
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  468  <|@ instruction JUMP ~[] destination: B70 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" "B73" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602790951197370563
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  474  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  476  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B73 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" "B75" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601979936891675385
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  482  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr  484  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B75 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601149105194298439
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  488  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  490  <|@ instruction MOV (x: [rdx|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  492  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  494  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  496  <|@ instruction JUMP ~[] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587545991679145066
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  500  <|@ instruction JUMP ~[] destination: B72 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586807474614810003
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  508  <|@ instruction JUMP ~[] destination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B70" "B72" "B75" "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617455682992505589
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  512  <|@ instruction rcx|DWORD[_] = MOV [r11|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  514  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr  516  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr  518  <|@ instruction rdi|QWORD[*] = XOR (x: r10|QWORD[.], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  520  <|@ instruction TESTCONSTBRANCH rdi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4616878716535993821
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  524  <|@ instruction TESTBRANCH (x: rsi|QWORD[.], y: rsi|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4616359446725133229
    begin_IR
      LIR
      nr  526  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  528  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  530  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rax|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4615594589735958993
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  534  <|@ instruction JUMP ~[] destination: B81 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602790951197370563
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  538  <|@ instruction JUMP ~[] destination: B77 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601979936891675385
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  542  <|@ instruction JUMP ~[] destination: B79 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" "B84" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601149105194298438
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  546  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  548  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rax|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B82 -> B83 falseDestination: B82 -> B84 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4600401356666659186
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  552  <|@ instruction JUMP ~[] destination: B83 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" "B86" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586142809256908445
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction MOVB [rsi|QWORD[*] + rax|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  558  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  560  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rax|QWORD) size: QWORD <|@ <|@
      nr  562  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B84 -> B85 falseDestination: B84 -> B86 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4585544610434797044
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  568  <|@ instruction MOV (x: [rdx|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  570  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  572  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  574  <|@ instruction JUMP ~[] destination: B86 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4571435612730574153
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  580  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  582  <|@ instruction JUMP ~[] destination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B77" "B79" "B81" "B83" "B86" "B85" 
    successors "B88" "B89" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617455682992505588
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  586  <|@ instruction TESTBRANCH (x: rcx|DWORD[_], y: rcx|DWORD[_]) trueDestinationProbability: 0.8739340370331193 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B89 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B68" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4616728324673108138
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  590  <|@ instruction JUMP ~[] destination: B88 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B95" 
    xhandlers
    flags 
    probability 4603994086100456013
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction JUMP ~[] destination: B89 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B95" 
    xhandlers
    flags 
    probability 4592396561385874207
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  598  <|@ instruction JUMP ~[] destination: B91 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B95" 
    xhandlers
    flags 
    probability 4591715434359090862
    begin_IR
      LIR
      nr  600  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  602  <|@ instruction JUMP ~[] destination: B90 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" "B90" "B89" "B91" "B93" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  606  <|@ instruction rax|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  608  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  612  <|@ instruction MOV [r15|QWORD + 1156] y: -59155 size: DWORD <|@ <|@
      nr  614  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  616  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: r10|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  620  <|@ instruction JUMP ~[] destination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction JUMP ~[] destination: B64 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" "B63" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  628  <|@ instruction MOV [r15|QWORD + 1156] y: -40475 size: DWORD <|@ <|@
      nr  630  <|@ instruction MOV [r15|QWORD + 1168] y: 1944 size: QWORD <|@ <|@
      nr  632  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 95]
stack: rdi|QWORD[.] 
locals: r10|QWORD[.] r11|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:95] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  634  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  636  <|@ instruction MOV [r15|QWORD + 1156] y: -36891 size: DWORD <|@ <|@
      nr  638  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  640  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
stack: rcx|QWORD[.] 
locals: r10|QWORD[.] - r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:53] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #5          // next:java.util.HashMap$Node
     4: astore_2      
     5: aload_0       
     6: getfield      #0          // this$0:java.util.HashMap
     9: getfield      #2          // java.util.HashMap.modCount:int
    12: aload_0       
    13: getfield      #3          // expectedModCount:int
    16: if_icmpeq     27
    19: new           #39         // java.util.ConcurrentModificationException
    22: dup           
    23: invokespecial #9          // java.util.ConcurrentModificationException.<init>:()void
    26: athrow        
    27: aload_2       
    28: ifnonnull     39
    31: new           #42         // java.util.NoSuchElementException
    34: dup           
    35: invokespecial #10         // java.util.NoSuchElementException.<init>:()void
    38: athrow        
    39: aload_0       
    40: aload_0       
    41: aload_2       
    42: dup_x1        
    43: putfield      #6          // current:java.util.HashMap$Node
    46: getfield      #11         // java.util.HashMap$Node.next:java.util.HashMap$Node
    49: dup_x1        
    50: putfield      #5          // next:java.util.HashMap$Node
    53: ifnonnull     98
    56: aload_0       
    57: getfield      #0          // this$0:java.util.HashMap
    60: getfield      #4          // java.util.HashMap.table:java.util.HashMap$Node[]
    63: dup           
    64: astore_1      
    65: ifnull        98
    68: aload_0       
    69: getfield      #7          // index:int
    72: aload_1       
    73: arraylength   
    74: if_icmpge     98
    77: aload_0       
    78: aload_1       
    79: aload_0       
    80: dup           
    81: getfield      #7          // index:int
    84: dup_x1        
    85: iconst_1      
    86: iadd          
    87: putfield      #7          // index:int
    90: aaload        
    91: dup_x1        
    92: putfield      #5          // next:java.util.HashMap$Node
    95: ifnull        68
    98: aload_2       
    99: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LSStackSlotAllocator"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B96" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7154f04f slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction rsi|DWORD[_] = MOV [r10|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   10  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: r10|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = MOV [rsi|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction r11|DWORD[_] = MOV [rsi|DWORD[_] * 8 + 36] size: DWORD <|@ <|@
      nr   14  <|@ instruction r8|DWORD[_] = MOV [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   16  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: r10|QWORD[.] - - 
>@ <|@ instruction r9|DWORD[_] = MOV [r8|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   18  <|@ instruction CMPBRANCH (x: rax|DWORD, y: [r10|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B96 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   22  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B8" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   26  <|@ instruction JUMP ~[] destination: B2 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 24] size: QWORD <|@ <|@
      nr   32  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr   34  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction rax|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   40  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr   42  <|@ instruction TESTBRANCH (x: rax|QWORD, y: rax|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   48  <|@ instruction MOV (x: [rcx|QWORD + rax|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr   50  <|@ instruction rsi|QWORD = LEA [rax|QWORD - 8] size: QWORD <|@ <|@
      nr   52  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   54  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction JUMP ~[] destination: B4 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   66  <|@ instruction JUMP ~[] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" "B7" "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction MOV (x: [r10|QWORD[.] + 24], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr   72  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr   74  <|@ instruction rsi|QWORD[*] = XOR (x: r10|QWORD[.], y: r8|QWORD[.]) size: QWORD <|@ <|@
      nr   76  <|@ instruction rax|QWORD = MOVE input: long[140438306553856|0x7fba57600000] <|@ <|@
      nr   78  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction TESTBRANCH (x: r8|QWORD[.], y: r8|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   88  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rax|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction JUMP ~[] destination: B13 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B19" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   96  <|@ instruction JUMP ~[] destination: B9 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B19" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  100  <|@ instruction JUMP ~[] destination: B11 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  106  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rax|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B19" 
    xhandlers
    flags 
    probability 4589917419268529874
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction JUMP ~[] destination: B15 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction MOVB [rsi|QWORD[*] + rax|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  116  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  118  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rax|QWORD) size: QWORD <|@ <|@
      nr  120  <|@ instruction TESTBRANCH (x: rcx|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  126  <|@ instruction MOV (x: [rbx|QWORD + rcx|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  128  <|@ instruction rsi|QWORD = LEA [rcx|QWORD - 8] size: QWORD <|@ <|@
      nr  130  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  132  <|@ instruction JUMP ~[] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  138  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  140  <|@ instruction JUMP ~[] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" "B13" "B15" "B18" "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B26" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction JUMP ~[] destination: B20 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  154  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  156  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  162  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr  164  <|@ instruction TESTBRANCH (x: rcx|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  170  <|@ instruction MOV (x: [rbx|QWORD + rcx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  172  <|@ instruction rsi|QWORD = LEA [rcx|QWORD - 8] size: QWORD <|@ <|@
      nr  174  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  176  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B26" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction JUMP ~[] destination: B22 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  188  <|@ instruction JUMP ~[] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" "B25" "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: r9|DWORD[_]) size: DWORD <|@ <|@
      nr  194  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr  196  <|@ instruction rsi|QWORD[*] = XOR (x: r10|QWORD[.], y: rcx|QWORD[.]) size: QWORD <|@ <|@
      nr  198  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  208  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rax|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B37" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  212  <|@ instruction JUMP ~[] destination: B31 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B37" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction JUMP ~[] destination: B27 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B37" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  220  <|@ instruction JUMP ~[] destination: B29 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  226  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rax|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" 
    xhandlers
    flags 
    probability 4589917419268529874
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  230  <|@ instruction JUMP ~[] destination: B33 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction MOVB [rsi|QWORD[*] + rax|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  236  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  238  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rax|QWORD) size: QWORD <|@ <|@
      nr  240  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  244  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  246  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  248  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  250  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  252  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  258  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  260  <|@ instruction JUMP ~[] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B27" "B29" "B31" "B33" "B36" "B35" 
    successors "B38" "B94" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction TESTBRANCH (x: r9|DWORD[_], y: r9|DWORD[_]) trueDestinationProbability: 0.8674348032491496 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B94 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B93" 
    xhandlers
    flags 
    probability 4605988377658638555
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
stack: rcx|QWORD[.] 
locals: r10|QWORD[.] - r8|QWORD[.] 
>@ <|@ instruction r9|DWORD = MOV [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:53] <|@ <|@
      nr  270  <|@ instruction rbx|DWORD = MOV [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  272  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.9812627296505405 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B93 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B92" 
    xhandlers
    flags 
    probability 4605841980402785416
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B92 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4605841980402785416
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction rcx|DWORD = INC rbx|DWORD size: DWORD <|@ <|@
      nr  282  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  284  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B47" 
    xhandlers
    flags 
    probability 4605075304317034516
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  288  <|@ instruction JUMP ~[] destination: B41 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B95" 
    xhandlers
    flags 
    probability 4593944184856050836
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  292  <|@ instruction JUMP ~[] destination: B94 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4590797829349172127
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  296  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  298  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  300  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4590184488480571407
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  304  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  306  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr  308  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4589632481698830759
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  312  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  314  <|@ instruction MOV (x: [rdx|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  316  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  318  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  320  <|@ instruction JUMP ~[] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B95" 
    xhandlers
    flags 
    probability 4580341933595724392
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction JUMP ~[] destination: B93 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B47" 
    xhandlers
    flags 
    probability 4576060348729859198
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  328  <|@ instruction JUMP ~[] destination: B43 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4575482130661533308
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  336  <|@ instruction JUMP ~[] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B41" "B43" "B46" "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4605841980402785416
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  340  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr  342  <|@ instruction rbx|DWORD[_] = MOV [r11|QWORD[.] + rbx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  344  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: rbx|DWORD[_]) size: DWORD <|@ <|@
      nr  346  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr  348  <|@ instruction rsi|QWORD[*] = XOR (x: r10|QWORD[.], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  350  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4605075304317034516
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction TESTBRANCH (x: rdi|QWORD[.], y: rdi|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4604385295839858706
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  358  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  360  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rax|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B58" 
    xhandlers
    flags 
    probability 4603764288210400477
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  364  <|@ instruction JUMP ~[] destination: B52 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B58" 
    xhandlers
    flags 
    probability 4590797829349172127
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction JUMP ~[] destination: B48 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B58" 
    xhandlers
    flags 
    probability 4590184488480571407
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  372  <|@ instruction JUMP ~[] destination: B50 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4589632481698830759
    begin_IR
      LIR
      nr  374  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  376  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  378  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rax|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B58" 
    xhandlers
    flags 
    probability 4589103330899992928
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  382  <|@ instruction JUMP ~[] destination: B54 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4574598919810748272
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ instruction MOVB [rsi|QWORD[*] + rax|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  388  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  390  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rax|QWORD) size: QWORD <|@ <|@
      nr  392  <|@ instruction TESTBRANCH (x: rdx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4573804030045041739
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  396  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  398  <|@ instruction MOV (x: [rbp|QWORD + rdx|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  400  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr  402  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  404  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4559498341397223717
    begin_IR
      LIR
      nr  406  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  408  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  410  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  412  <|@ instruction JUMP ~[] destination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B48" "B50" "B52" "B54" "B57" "B56" 
    successors "B59" "B91" 
    xhandlers
    flags 
    probability 4605841980402785416
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction TESTBRANCH (x: rbx|DWORD[_], y: rbx|DWORD[_]) trueDestinationProbability: 0.8739340370331193 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B91 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B66" 
    xhandlers
    flags 
    probability 4604875462812446756
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  420  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B59 -> B60 falseDestination: B59 -> B66 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B67" 
    xhandlers
    flags 
    probability 4600371863185076260
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction JUMP ~[] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B64" 
    xhandlers
    flags 
    probability 4600371863185076260
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction rsi|DWORD = SUB (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  430  <|@ instruction rsi|QWORD = MOVSXD rsi|DWORD size: QWORD <|@ <|@
      nr  432  <|@ instruction rbx|QWORD = MOV rcx|DWORD size: DWORD <|@ <|@
      nr  434  <|@ instruction rsi|QWORD = ADD (x: rsi|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr  436  <|@ instruction rsi|QWORD = DEC rsi|QWORD size: QWORD <|@ <|@
      nr  438  <|@ instruction rbx|QWORD = MOV r9|DWORD size: DWORD <|@ <|@
      nr  440  <|@ instruction CMPBRANCH (x: rbx|QWORD, y: rsi|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B60 -> B61 falseDestination: B60 -> B64 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4600371863185076260
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B61 -> B62 falseDestination: B61 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B67" 
    xhandlers
    flags 
    probability 4600371863185076260
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  448  <|@ instruction JUMP ~[] destination: B62 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" "B62" 
    successors "B68" 
    xhandlers
    flags 
    probability 4604875462812446756
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction JUMP ~[] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" "B88" 
    successors "B69" "B90" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4617565855081504432
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  456  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.9812627296505405 condition: > trueDestination: B68 -> B69 falseDestination: B68 -> B90 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B70" "B71" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617455682992505589
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  460  <|@ instruction rbx|DWORD = INC rcx|DWORD size: DWORD <|@ <|@
      nr  462  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  464  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4616878716535993821
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  468  <|@ instruction JUMP ~[] destination: B70 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" "B73" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602790951197370563
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  474  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  476  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B73 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" "B75" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601979936891675385
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  482  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr  484  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B75 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601149105194298439
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  488  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  490  <|@ instruction MOV (x: [rdx|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  492  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  494  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  496  <|@ instruction JUMP ~[] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587545991679145066
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  500  <|@ instruction JUMP ~[] destination: B72 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586807474614810003
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  508  <|@ instruction JUMP ~[] destination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B70" "B72" "B75" "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617455682992505589
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  512  <|@ instruction rcx|DWORD[_] = MOV [r11|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  514  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr  516  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr  518  <|@ instruction rdi|QWORD[*] = XOR (x: r10|QWORD[.], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  520  <|@ instruction TESTCONSTBRANCH rdi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4616878716535993821
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  524  <|@ instruction TESTBRANCH (x: rsi|QWORD[.], y: rsi|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4616359446725133229
    begin_IR
      LIR
      nr  526  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  528  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  530  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rax|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4615594589735958993
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  534  <|@ instruction JUMP ~[] destination: B81 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602790951197370563
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  538  <|@ instruction JUMP ~[] destination: B77 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601979936891675385
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  542  <|@ instruction JUMP ~[] destination: B79 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" "B84" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601149105194298438
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  546  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  548  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rax|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B82 -> B83 falseDestination: B82 -> B84 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4600401356666659186
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  552  <|@ instruction JUMP ~[] destination: B83 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" "B86" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586142809256908445
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction MOVB [rsi|QWORD[*] + rax|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  558  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  560  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rax|QWORD) size: QWORD <|@ <|@
      nr  562  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B84 -> B85 falseDestination: B84 -> B86 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4585544610434797044
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  568  <|@ instruction MOV (x: [rdx|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  570  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  572  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  574  <|@ instruction JUMP ~[] destination: B86 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4571435612730574153
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  580  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  582  <|@ instruction JUMP ~[] destination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B77" "B79" "B81" "B83" "B86" "B85" 
    successors "B88" "B89" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617455682992505588
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  586  <|@ instruction TESTBRANCH (x: rcx|DWORD[_], y: rcx|DWORD[_]) trueDestinationProbability: 0.8739340370331193 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B89 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B68" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4616728324673108138
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  590  <|@ instruction JUMP ~[] destination: B88 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B95" 
    xhandlers
    flags 
    probability 4603994086100456013
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction JUMP ~[] destination: B89 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B95" 
    xhandlers
    flags 
    probability 4592396561385874207
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  598  <|@ instruction JUMP ~[] destination: B91 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B95" 
    xhandlers
    flags 
    probability 4591715434359090862
    begin_IR
      LIR
      nr  600  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  602  <|@ instruction JUMP ~[] destination: B90 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" "B90" "B89" "B91" "B93" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  606  <|@ instruction rax|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  608  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  612  <|@ instruction MOV [r15|QWORD + 1156] y: -59155 size: DWORD <|@ <|@
      nr  614  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  616  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: r10|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  620  <|@ instruction JUMP ~[] destination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction JUMP ~[] destination: B64 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" "B63" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  628  <|@ instruction MOV [r15|QWORD + 1156] y: -40475 size: DWORD <|@ <|@
      nr  630  <|@ instruction MOV [r15|QWORD + 1168] y: 1944 size: QWORD <|@ <|@
      nr  632  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 95]
stack: rdi|QWORD[.] 
locals: r10|QWORD[.] r11|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:95] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  634  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  636  <|@ instruction MOV [r15|QWORD + 1156] y: -36891 size: DWORD <|@ <|@
      nr  638  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  640  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
stack: rcx|QWORD[.] 
locals: r10|QWORD[.] - r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:53] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #5          // next:java.util.HashMap$Node
     4: astore_2      
     5: aload_0       
     6: getfield      #0          // this$0:java.util.HashMap
     9: getfield      #2          // java.util.HashMap.modCount:int
    12: aload_0       
    13: getfield      #3          // expectedModCount:int
    16: if_icmpeq     27
    19: new           #39         // java.util.ConcurrentModificationException
    22: dup           
    23: invokespecial #9          // java.util.ConcurrentModificationException.<init>:()void
    26: athrow        
    27: aload_2       
    28: ifnonnull     39
    31: new           #42         // java.util.NoSuchElementException
    34: dup           
    35: invokespecial #10         // java.util.NoSuchElementException.<init>:()void
    38: athrow        
    39: aload_0       
    40: aload_0       
    41: aload_2       
    42: dup_x1        
    43: putfield      #6          // current:java.util.HashMap$Node
    46: getfield      #11         // java.util.HashMap$Node.next:java.util.HashMap$Node
    49: dup_x1        
    50: putfield      #5          // next:java.util.HashMap$Node
    53: ifnonnull     98
    56: aload_0       
    57: getfield      #0          // this$0:java.util.HashMap
    60: getfield      #4          // java.util.HashMap.table:java.util.HashMap$Node[]
    63: dup           
    64: astore_1      
    65: ifnull        98
    68: aload_0       
    69: getfield      #7          // index:int
    72: aload_1       
    73: arraylength   
    74: if_icmpge     98
    77: aload_0       
    78: aload_1       
    79: aload_0       
    80: dup           
    81: getfield      #7          // index:int
    84: dup_x1        
    85: iconst_1      
    86: iadd          
    87: putfield      #7          // index:int
    90: aaload        
    91: dup_x1        
    92: putfield      #5          // next:java.util.HashMap$Node
    95: ifnull        68
    98: aload_2       
    99: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B96" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7154f04f slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction rsi|DWORD[_] = MOV [r10|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   10  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: r10|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = MOV [rsi|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction r11|DWORD[_] = MOV [rsi|DWORD[_] * 8 + 36] size: DWORD <|@ <|@
      nr   14  <|@ instruction r8|DWORD[_] = MOV [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   16  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: r10|QWORD[.] - - 
>@ <|@ instruction r9|DWORD[_] = MOV [r8|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   18  <|@ instruction CMPBRANCH (x: rax|DWORD, y: [r10|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B96 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   22  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B8" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   26  <|@ instruction JUMP ~[] destination: B2 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 24] size: QWORD <|@ <|@
      nr   32  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr   34  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction rax|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   40  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr   42  <|@ instruction TESTBRANCH (x: rax|QWORD, y: rax|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   48  <|@ instruction MOV (x: [rcx|QWORD + rax|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr   50  <|@ instruction rsi|QWORD = LEA [rax|QWORD - 8] size: QWORD <|@ <|@
      nr   52  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   54  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction JUMP ~[] destination: B4 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   66  <|@ instruction JUMP ~[] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" "B7" "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction MOV (x: [r10|QWORD[.] + 24], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr   72  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr   74  <|@ instruction rsi|QWORD[*] = XOR (x: r10|QWORD[.], y: r8|QWORD[.]) size: QWORD <|@ <|@
      nr   76  <|@ instruction rax|QWORD = MOVE input: long[140438306553856|0x7fba57600000] <|@ <|@
      nr   78  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction TESTBRANCH (x: r8|QWORD[.], y: r8|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   88  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rax|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction JUMP ~[] destination: B13 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B19" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   96  <|@ instruction JUMP ~[] destination: B9 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B19" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  100  <|@ instruction JUMP ~[] destination: B11 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  106  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rax|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B19" 
    xhandlers
    flags 
    probability 4589917419268529874
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction JUMP ~[] destination: B15 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction MOVB [rsi|QWORD[*] + rax|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  116  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  118  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rax|QWORD) size: QWORD <|@ <|@
      nr  120  <|@ instruction TESTBRANCH (x: rcx|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  126  <|@ instruction MOV (x: [rbx|QWORD + rcx|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  128  <|@ instruction rsi|QWORD = LEA [rcx|QWORD - 8] size: QWORD <|@ <|@
      nr  130  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  132  <|@ instruction JUMP ~[] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  138  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  140  <|@ instruction JUMP ~[] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" "B13" "B15" "B18" "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B26" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction JUMP ~[] destination: B20 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  154  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  156  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  162  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr  164  <|@ instruction TESTBRANCH (x: rcx|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  170  <|@ instruction MOV (x: [rbx|QWORD + rcx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  172  <|@ instruction rsi|QWORD = LEA [rcx|QWORD - 8] size: QWORD <|@ <|@
      nr  174  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  176  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B26" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction JUMP ~[] destination: B22 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  188  <|@ instruction JUMP ~[] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" "B25" "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: r9|DWORD[_]) size: DWORD <|@ <|@
      nr  194  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr  196  <|@ instruction rsi|QWORD[*] = XOR (x: r10|QWORD[.], y: rcx|QWORD[.]) size: QWORD <|@ <|@
      nr  198  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  208  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rax|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B37" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  212  <|@ instruction JUMP ~[] destination: B31 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B37" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction JUMP ~[] destination: B27 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B37" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  220  <|@ instruction JUMP ~[] destination: B29 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  226  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rax|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" 
    xhandlers
    flags 
    probability 4589917419268529874
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  230  <|@ instruction JUMP ~[] destination: B33 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction MOVB [rsi|QWORD[*] + rax|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  236  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  238  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rax|QWORD) size: QWORD <|@ <|@
      nr  240  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  244  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  246  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  248  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  250  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  252  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  258  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  260  <|@ instruction JUMP ~[] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B27" "B29" "B31" "B33" "B36" "B35" 
    successors "B38" "B94" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction TESTBRANCH (x: r9|DWORD[_], y: r9|DWORD[_]) trueDestinationProbability: 0.8674348032491496 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B94 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B93" 
    xhandlers
    flags 
    probability 4605988377658638555
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
stack: rcx|QWORD[.] 
locals: r10|QWORD[.] - r8|QWORD[.] 
>@ <|@ instruction r9|DWORD = MOV [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:53] <|@ <|@
      nr  270  <|@ instruction rbx|DWORD = MOV [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  272  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.9812627296505405 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B93 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B92" 
    xhandlers
    flags 
    probability 4605841980402785416
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B92 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4605841980402785416
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction rcx|DWORD = INC rbx|DWORD size: DWORD <|@ <|@
      nr  282  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  284  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B47" 
    xhandlers
    flags 
    probability 4605075304317034516
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  288  <|@ instruction JUMP ~[] destination: B41 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B95" 
    xhandlers
    flags 
    probability 4593944184856050836
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  292  <|@ instruction JUMP ~[] destination: B94 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4590797829349172127
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  296  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  298  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  300  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4590184488480571407
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  304  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  306  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr  308  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4589632481698830759
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  312  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  314  <|@ instruction MOV (x: [rdx|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  316  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  318  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  320  <|@ instruction JUMP ~[] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B95" 
    xhandlers
    flags 
    probability 4580341933595724392
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction JUMP ~[] destination: B93 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B47" 
    xhandlers
    flags 
    probability 4576060348729859198
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  328  <|@ instruction JUMP ~[] destination: B43 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4575482130661533308
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  336  <|@ instruction JUMP ~[] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B41" "B43" "B46" "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4605841980402785416
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  340  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr  342  <|@ instruction rbx|DWORD[_] = MOV [r11|QWORD[.] + rbx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  344  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: rbx|DWORD[_]) size: DWORD <|@ <|@
      nr  346  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr  348  <|@ instruction rsi|QWORD[*] = XOR (x: r10|QWORD[.], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  350  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4605075304317034516
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction TESTBRANCH (x: rdi|QWORD[.], y: rdi|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4604385295839858706
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  358  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  360  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rax|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B58" 
    xhandlers
    flags 
    probability 4603764288210400477
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  364  <|@ instruction JUMP ~[] destination: B52 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B58" 
    xhandlers
    flags 
    probability 4590797829349172127
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction JUMP ~[] destination: B48 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B58" 
    xhandlers
    flags 
    probability 4590184488480571407
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  372  <|@ instruction JUMP ~[] destination: B50 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4589632481698830759
    begin_IR
      LIR
      nr  374  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  376  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  378  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rax|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B58" 
    xhandlers
    flags 
    probability 4589103330899992928
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  382  <|@ instruction JUMP ~[] destination: B54 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4574598919810748272
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ instruction MOVB [rsi|QWORD[*] + rax|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  388  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  390  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rax|QWORD) size: QWORD <|@ <|@
      nr  392  <|@ instruction TESTBRANCH (x: rdx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4573804030045041739
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  396  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  398  <|@ instruction MOV (x: [rbp|QWORD + rdx|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  400  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr  402  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  404  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4559498341397223717
    begin_IR
      LIR
      nr  406  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  408  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  410  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  412  <|@ instruction JUMP ~[] destination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B48" "B50" "B52" "B54" "B57" "B56" 
    successors "B59" "B91" 
    xhandlers
    flags 
    probability 4605841980402785416
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction TESTBRANCH (x: rbx|DWORD[_], y: rbx|DWORD[_]) trueDestinationProbability: 0.8739340370331193 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B91 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B66" 
    xhandlers
    flags 
    probability 4604875462812446756
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  420  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B59 -> B60 falseDestination: B59 -> B66 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B67" 
    xhandlers
    flags 
    probability 4600371863185076260
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction JUMP ~[] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B64" 
    xhandlers
    flags 
    probability 4600371863185076260
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction rsi|DWORD = SUB (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  430  <|@ instruction rsi|QWORD = MOVSXD rsi|DWORD size: QWORD <|@ <|@
      nr  432  <|@ instruction rbx|QWORD = MOV rcx|DWORD size: DWORD <|@ <|@
      nr  434  <|@ instruction rsi|QWORD = ADD (x: rsi|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr  436  <|@ instruction rsi|QWORD = DEC rsi|QWORD size: QWORD <|@ <|@
      nr  438  <|@ instruction rbx|QWORD = MOV r9|DWORD size: DWORD <|@ <|@
      nr  440  <|@ instruction CMPBRANCH (x: rbx|QWORD, y: rsi|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B60 -> B61 falseDestination: B60 -> B64 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4600371863185076260
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B61 -> B62 falseDestination: B61 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B67" 
    xhandlers
    flags 
    probability 4600371863185076260
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  448  <|@ instruction JUMP ~[] destination: B62 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" "B62" 
    successors "B68" 
    xhandlers
    flags 
    probability 4604875462812446756
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction JUMP ~[] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" "B88" 
    successors "B69" "B90" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4617565855081504432
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  456  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.9812627296505405 condition: > trueDestination: B68 -> B69 falseDestination: B68 -> B90 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B70" "B71" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617455682992505589
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  460  <|@ instruction rbx|DWORD = INC rcx|DWORD size: DWORD <|@ <|@
      nr  462  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  464  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4616878716535993821
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  468  <|@ instruction JUMP ~[] destination: B70 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" "B73" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602790951197370563
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  474  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  476  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B73 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" "B75" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601979936891675385
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  482  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr  484  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B75 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601149105194298439
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  488  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  490  <|@ instruction MOV (x: [rdx|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  492  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  494  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  496  <|@ instruction JUMP ~[] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587545991679145066
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  500  <|@ instruction JUMP ~[] destination: B72 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586807474614810003
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  508  <|@ instruction JUMP ~[] destination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B70" "B72" "B75" "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617455682992505589
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  512  <|@ instruction rcx|DWORD[_] = MOV [r11|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  514  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr  516  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr  518  <|@ instruction rdi|QWORD[*] = XOR (x: r10|QWORD[.], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  520  <|@ instruction TESTCONSTBRANCH rdi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4616878716535993821
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  524  <|@ instruction TESTBRANCH (x: rsi|QWORD[.], y: rsi|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4616359446725133229
    begin_IR
      LIR
      nr  526  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  528  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  530  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rax|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4615594589735958993
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  534  <|@ instruction JUMP ~[] destination: B81 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602790951197370563
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  538  <|@ instruction JUMP ~[] destination: B77 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601979936891675385
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  542  <|@ instruction JUMP ~[] destination: B79 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" "B84" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601149105194298438
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  546  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  548  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rax|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B82 -> B83 falseDestination: B82 -> B84 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4600401356666659186
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  552  <|@ instruction JUMP ~[] destination: B83 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" "B86" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586142809256908445
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction MOVB [rsi|QWORD[*] + rax|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  558  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  560  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rax|QWORD) size: QWORD <|@ <|@
      nr  562  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B84 -> B85 falseDestination: B84 -> B86 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4585544610434797044
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  568  <|@ instruction MOV (x: [rdx|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  570  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  572  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  574  <|@ instruction JUMP ~[] destination: B86 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4571435612730574153
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  580  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  582  <|@ instruction JUMP ~[] destination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B77" "B79" "B81" "B83" "B86" "B85" 
    successors "B88" "B89" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617455682992505588
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  586  <|@ instruction TESTBRANCH (x: rcx|DWORD[_], y: rcx|DWORD[_]) trueDestinationProbability: 0.8739340370331193 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B89 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B68" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4616728324673108138
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  590  <|@ instruction JUMP ~[] destination: B88 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B95" 
    xhandlers
    flags 
    probability 4603994086100456013
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction JUMP ~[] destination: B89 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B95" 
    xhandlers
    flags 
    probability 4592396561385874207
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  598  <|@ instruction JUMP ~[] destination: B91 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B95" 
    xhandlers
    flags 
    probability 4591715434359090862
    begin_IR
      LIR
      nr  600  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  602  <|@ instruction JUMP ~[] destination: B90 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" "B90" "B89" "B91" "B93" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  606  <|@ instruction rax|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  608  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  612  <|@ instruction MOV [r15|QWORD + 1156] y: -59155 size: DWORD <|@ <|@
      nr  614  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  616  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: r10|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  620  <|@ instruction JUMP ~[] destination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction JUMP ~[] destination: B64 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" "B63" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  628  <|@ instruction MOV [r15|QWORD + 1156] y: -40475 size: DWORD <|@ <|@
      nr  630  <|@ instruction MOV [r15|QWORD + 1168] y: 1944 size: QWORD <|@ <|@
      nr  632  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 95]
stack: rdi|QWORD[.] 
locals: r10|QWORD[.] r11|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:95] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  634  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  636  <|@ instruction MOV [r15|QWORD + 1156] y: -36891 size: DWORD <|@ <|@
      nr  638  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  640  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
stack: rcx|QWORD[.] 
locals: r10|QWORD[.] - r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:53] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #5          // next:java.util.HashMap$Node
     4: astore_2      
     5: aload_0       
     6: getfield      #0          // this$0:java.util.HashMap
     9: getfield      #2          // java.util.HashMap.modCount:int
    12: aload_0       
    13: getfield      #3          // expectedModCount:int
    16: if_icmpeq     27
    19: new           #39         // java.util.ConcurrentModificationException
    22: dup           
    23: invokespecial #9          // java.util.ConcurrentModificationException.<init>:()void
    26: athrow        
    27: aload_2       
    28: ifnonnull     39
    31: new           #42         // java.util.NoSuchElementException
    34: dup           
    35: invokespecial #10         // java.util.NoSuchElementException.<init>:()void
    38: athrow        
    39: aload_0       
    40: aload_0       
    41: aload_2       
    42: dup_x1        
    43: putfield      #6          // current:java.util.HashMap$Node
    46: getfield      #11         // java.util.HashMap$Node.next:java.util.HashMap$Node
    49: dup_x1        
    50: putfield      #5          // next:java.util.HashMap$Node
    53: ifnonnull     98
    56: aload_0       
    57: getfield      #0          // this$0:java.util.HashMap
    60: getfield      #4          // java.util.HashMap.table:java.util.HashMap$Node[]
    63: dup           
    64: astore_1      
    65: ifnull        98
    68: aload_0       
    69: getfield      #7          // index:int
    72: aload_1       
    73: arraylength   
    74: if_icmpge     98
    77: aload_0       
    78: aload_1       
    79: aload_0       
    80: dup           
    81: getfield      #7          // index:int
    84: dup_x1        
    85: iconst_1      
    86: iadd          
    87: putfield      #7          // index:int
    90: aaload        
    91: dup_x1        
    92: putfield      #5          // next:java.util.HashMap$Node
    95: ifnull        68
    98: aload_2       
    99: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After EdgeMoveOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B96" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7154f04f slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction rsi|DWORD[_] = MOV [r10|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   10  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: r10|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = MOV [rsi|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction r11|DWORD[_] = MOV [rsi|DWORD[_] * 8 + 36] size: DWORD <|@ <|@
      nr   14  <|@ instruction r8|DWORD[_] = MOV [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   16  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: r10|QWORD[.] - - 
>@ <|@ instruction r9|DWORD[_] = MOV [r8|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   18  <|@ instruction CMPBRANCH (x: rax|DWORD, y: [r10|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B96 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   22  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B8" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   26  <|@ instruction JUMP ~[] destination: B2 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 24] size: QWORD <|@ <|@
      nr   32  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr   34  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction rax|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   40  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr   42  <|@ instruction TESTBRANCH (x: rax|QWORD, y: rax|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   48  <|@ instruction MOV (x: [rcx|QWORD + rax|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr   50  <|@ instruction rsi|QWORD = LEA [rax|QWORD - 8] size: QWORD <|@ <|@
      nr   52  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   54  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction JUMP ~[] destination: B4 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   66  <|@ instruction JUMP ~[] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" "B7" "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction MOV (x: [r10|QWORD[.] + 24], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr   72  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr   74  <|@ instruction rsi|QWORD[*] = XOR (x: r10|QWORD[.], y: r8|QWORD[.]) size: QWORD <|@ <|@
      nr   76  <|@ instruction rax|QWORD = MOVE input: long[140438306553856|0x7fba57600000] <|@ <|@
      nr   78  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction TESTBRANCH (x: r8|QWORD[.], y: r8|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   88  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rax|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction JUMP ~[] destination: B13 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B19" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   96  <|@ instruction JUMP ~[] destination: B9 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B19" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  100  <|@ instruction JUMP ~[] destination: B11 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  106  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rax|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B19" 
    xhandlers
    flags 
    probability 4589917419268529874
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction JUMP ~[] destination: B15 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction MOVB [rsi|QWORD[*] + rax|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  116  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  118  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rax|QWORD) size: QWORD <|@ <|@
      nr  120  <|@ instruction TESTBRANCH (x: rcx|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  126  <|@ instruction MOV (x: [rbx|QWORD + rcx|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  128  <|@ instruction rsi|QWORD = LEA [rcx|QWORD - 8] size: QWORD <|@ <|@
      nr  130  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  132  <|@ instruction JUMP ~[] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  138  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  140  <|@ instruction JUMP ~[] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" "B13" "B15" "B18" "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B26" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction JUMP ~[] destination: B20 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  154  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  156  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  162  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr  164  <|@ instruction TESTBRANCH (x: rcx|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  170  <|@ instruction MOV (x: [rbx|QWORD + rcx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  172  <|@ instruction rsi|QWORD = LEA [rcx|QWORD - 8] size: QWORD <|@ <|@
      nr  174  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  176  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B26" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction JUMP ~[] destination: B22 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  188  <|@ instruction JUMP ~[] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" "B25" "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: r9|DWORD[_]) size: DWORD <|@ <|@
      nr  194  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr  196  <|@ instruction rsi|QWORD[*] = XOR (x: r10|QWORD[.], y: rcx|QWORD[.]) size: QWORD <|@ <|@
      nr  198  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  208  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rax|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B37" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  212  <|@ instruction JUMP ~[] destination: B31 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B37" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction JUMP ~[] destination: B27 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B37" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  220  <|@ instruction JUMP ~[] destination: B29 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  226  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rax|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" 
    xhandlers
    flags 
    probability 4589917419268529874
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  230  <|@ instruction JUMP ~[] destination: B33 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction MOVB [rsi|QWORD[*] + rax|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  236  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  238  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rax|QWORD) size: QWORD <|@ <|@
      nr  240  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  244  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  246  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  248  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  250  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  252  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  258  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  260  <|@ instruction JUMP ~[] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B27" "B29" "B31" "B33" "B36" "B35" 
    successors "B38" "B94" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction TESTBRANCH (x: r9|DWORD[_], y: r9|DWORD[_]) trueDestinationProbability: 0.8674348032491496 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B94 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B93" 
    xhandlers
    flags 
    probability 4605988377658638555
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
stack: rcx|QWORD[.] 
locals: r10|QWORD[.] - r8|QWORD[.] 
>@ <|@ instruction r9|DWORD = MOV [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:53] <|@ <|@
      nr  270  <|@ instruction rbx|DWORD = MOV [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  272  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.9812627296505405 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B93 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B92" 
    xhandlers
    flags 
    probability 4605841980402785416
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B92 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4605841980402785416
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction rcx|DWORD = INC rbx|DWORD size: DWORD <|@ <|@
      nr  282  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  284  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B47" 
    xhandlers
    flags 
    probability 4605075304317034516
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  288  <|@ instruction JUMP ~[] destination: B41 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B95" 
    xhandlers
    flags 
    probability 4593944184856050836
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  292  <|@ instruction JUMP ~[] destination: B94 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4590797829349172127
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  296  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  298  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  300  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4590184488480571407
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  304  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  306  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr  308  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4589632481698830759
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  312  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  314  <|@ instruction MOV (x: [rdx|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  316  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  318  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  320  <|@ instruction JUMP ~[] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B95" 
    xhandlers
    flags 
    probability 4580341933595724392
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction JUMP ~[] destination: B93 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B47" 
    xhandlers
    flags 
    probability 4576060348729859198
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  328  <|@ instruction JUMP ~[] destination: B43 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4575482130661533308
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  336  <|@ instruction JUMP ~[] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B41" "B43" "B46" "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4605841980402785416
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  340  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr  342  <|@ instruction rbx|DWORD[_] = MOV [r11|QWORD[.] + rbx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  344  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: rbx|DWORD[_]) size: DWORD <|@ <|@
      nr  346  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr  348  <|@ instruction rsi|QWORD[*] = XOR (x: r10|QWORD[.], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  350  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4605075304317034516
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction TESTBRANCH (x: rdi|QWORD[.], y: rdi|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4604385295839858706
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  358  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  360  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rax|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B58" 
    xhandlers
    flags 
    probability 4603764288210400477
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  364  <|@ instruction JUMP ~[] destination: B52 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B58" 
    xhandlers
    flags 
    probability 4590797829349172127
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction JUMP ~[] destination: B48 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B58" 
    xhandlers
    flags 
    probability 4590184488480571407
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  372  <|@ instruction JUMP ~[] destination: B50 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4589632481698830759
    begin_IR
      LIR
      nr  374  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  376  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  378  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rax|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B58" 
    xhandlers
    flags 
    probability 4589103330899992928
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  382  <|@ instruction JUMP ~[] destination: B54 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4574598919810748272
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ instruction MOVB [rsi|QWORD[*] + rax|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  388  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  390  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rax|QWORD) size: QWORD <|@ <|@
      nr  392  <|@ instruction TESTBRANCH (x: rdx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4573804030045041739
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  396  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  398  <|@ instruction MOV (x: [rbp|QWORD + rdx|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  400  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr  402  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  404  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4559498341397223717
    begin_IR
      LIR
      nr  406  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  408  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  410  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  412  <|@ instruction JUMP ~[] destination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B48" "B50" "B52" "B54" "B57" "B56" 
    successors "B59" "B91" 
    xhandlers
    flags 
    probability 4605841980402785416
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction TESTBRANCH (x: rbx|DWORD[_], y: rbx|DWORD[_]) trueDestinationProbability: 0.8739340370331193 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B91 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B66" 
    xhandlers
    flags 
    probability 4604875462812446756
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  420  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B59 -> B60 falseDestination: B59 -> B66 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B67" 
    xhandlers
    flags 
    probability 4600371863185076260
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction JUMP ~[] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B64" 
    xhandlers
    flags 
    probability 4600371863185076260
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction rsi|DWORD = SUB (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  430  <|@ instruction rsi|QWORD = MOVSXD rsi|DWORD size: QWORD <|@ <|@
      nr  432  <|@ instruction rbx|QWORD = MOV rcx|DWORD size: DWORD <|@ <|@
      nr  434  <|@ instruction rsi|QWORD = ADD (x: rsi|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr  436  <|@ instruction rsi|QWORD = DEC rsi|QWORD size: QWORD <|@ <|@
      nr  438  <|@ instruction rbx|QWORD = MOV r9|DWORD size: DWORD <|@ <|@
      nr  440  <|@ instruction CMPBRANCH (x: rbx|QWORD, y: rsi|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B60 -> B61 falseDestination: B60 -> B64 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4600371863185076260
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B61 -> B62 falseDestination: B61 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B67" 
    xhandlers
    flags 
    probability 4600371863185076260
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  448  <|@ instruction JUMP ~[] destination: B62 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" "B62" 
    successors "B68" 
    xhandlers
    flags 
    probability 4604875462812446756
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction JUMP ~[] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" "B88" 
    successors "B69" "B90" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4617565855081504432
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  456  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.9812627296505405 condition: > trueDestination: B68 -> B69 falseDestination: B68 -> B90 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B70" "B71" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617455682992505589
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  460  <|@ instruction rbx|DWORD = INC rcx|DWORD size: DWORD <|@ <|@
      nr  462  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  464  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4616878716535993821
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  468  <|@ instruction JUMP ~[] destination: B70 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" "B73" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602790951197370563
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  474  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  476  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B73 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" "B75" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601979936891675385
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  482  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr  484  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B75 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601149105194298439
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  488  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  490  <|@ instruction MOV (x: [rdx|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  492  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  494  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  496  <|@ instruction JUMP ~[] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587545991679145066
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  500  <|@ instruction JUMP ~[] destination: B72 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586807474614810003
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  508  <|@ instruction JUMP ~[] destination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B70" "B72" "B75" "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617455682992505589
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  512  <|@ instruction rcx|DWORD[_] = MOV [r11|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  514  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr  516  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr  518  <|@ instruction rdi|QWORD[*] = XOR (x: r10|QWORD[.], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  520  <|@ instruction TESTCONSTBRANCH rdi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4616878716535993821
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  524  <|@ instruction TESTBRANCH (x: rsi|QWORD[.], y: rsi|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4616359446725133229
    begin_IR
      LIR
      nr  526  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  528  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  530  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rax|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4615594589735958993
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  534  <|@ instruction JUMP ~[] destination: B81 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602790951197370563
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  538  <|@ instruction JUMP ~[] destination: B77 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601979936891675385
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  542  <|@ instruction JUMP ~[] destination: B79 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" "B84" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601149105194298438
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  546  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  548  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rax|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B82 -> B83 falseDestination: B82 -> B84 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4600401356666659186
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  552  <|@ instruction JUMP ~[] destination: B83 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" "B86" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586142809256908445
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction MOVB [rsi|QWORD[*] + rax|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  558  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  560  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rax|QWORD) size: QWORD <|@ <|@
      nr  562  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B84 -> B85 falseDestination: B84 -> B86 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4585544610434797044
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  568  <|@ instruction MOV (x: [rdx|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  570  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  572  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  574  <|@ instruction JUMP ~[] destination: B86 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4571435612730574153
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  580  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  582  <|@ instruction JUMP ~[] destination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B77" "B79" "B81" "B83" "B86" "B85" 
    successors "B88" "B89" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617455682992505588
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  586  <|@ instruction TESTBRANCH (x: rcx|DWORD[_], y: rcx|DWORD[_]) trueDestinationProbability: 0.8739340370331193 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B89 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B68" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4616728324673108138
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  590  <|@ instruction JUMP ~[] destination: B88 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B95" 
    xhandlers
    flags 
    probability 4603994086100456013
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction JUMP ~[] destination: B89 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B95" 
    xhandlers
    flags 
    probability 4592396561385874207
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  598  <|@ instruction JUMP ~[] destination: B91 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B95" 
    xhandlers
    flags 
    probability 4591715434359090862
    begin_IR
      LIR
      nr  600  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  602  <|@ instruction JUMP ~[] destination: B90 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" "B90" "B89" "B91" "B93" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  606  <|@ instruction rax|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  608  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  612  <|@ instruction MOV [r15|QWORD + 1156] y: -59155 size: DWORD <|@ <|@
      nr  614  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  616  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: r10|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  620  <|@ instruction JUMP ~[] destination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction JUMP ~[] destination: B64 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" "B63" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  628  <|@ instruction MOV [r15|QWORD + 1156] y: -40475 size: DWORD <|@ <|@
      nr  630  <|@ instruction MOV [r15|QWORD + 1168] y: 1944 size: QWORD <|@ <|@
      nr  632  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 95]
stack: rdi|QWORD[.] 
locals: r10|QWORD[.] r11|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:95] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  634  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  636  <|@ instruction MOV [r15|QWORD + 1156] y: -36891 size: DWORD <|@ <|@
      nr  638  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  640  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
stack: rcx|QWORD[.] 
locals: r10|QWORD[.] - r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:53] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #5          // next:java.util.HashMap$Node
     4: astore_2      
     5: aload_0       
     6: getfield      #0          // this$0:java.util.HashMap
     9: getfield      #2          // java.util.HashMap.modCount:int
    12: aload_0       
    13: getfield      #3          // expectedModCount:int
    16: if_icmpeq     27
    19: new           #39         // java.util.ConcurrentModificationException
    22: dup           
    23: invokespecial #9          // java.util.ConcurrentModificationException.<init>:()void
    26: athrow        
    27: aload_2       
    28: ifnonnull     39
    31: new           #42         // java.util.NoSuchElementException
    34: dup           
    35: invokespecial #10         // java.util.NoSuchElementException.<init>:()void
    38: athrow        
    39: aload_0       
    40: aload_0       
    41: aload_2       
    42: dup_x1        
    43: putfield      #6          // current:java.util.HashMap$Node
    46: getfield      #11         // java.util.HashMap$Node.next:java.util.HashMap$Node
    49: dup_x1        
    50: putfield      #5          // next:java.util.HashMap$Node
    53: ifnonnull     98
    56: aload_0       
    57: getfield      #0          // this$0:java.util.HashMap
    60: getfield      #4          // java.util.HashMap.table:java.util.HashMap$Node[]
    63: dup           
    64: astore_1      
    65: ifnull        98
    68: aload_0       
    69: getfield      #7          // index:int
    72: aload_1       
    73: arraylength   
    74: if_icmpge     98
    77: aload_0       
    78: aload_1       
    79: aload_0       
    80: dup           
    81: getfield      #7          // index:int
    84: dup_x1        
    85: iconst_1      
    86: iadd          
    87: putfield      #7          // index:int
    90: aaload        
    91: dup_x1        
    92: putfield      #5          // next:java.util.HashMap$Node
    95: ifnull        68
    98: aload_2       
    99: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After RedundantMoveElimination"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B96" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7154f04f slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction rsi|DWORD[_] = MOV [r10|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   10  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: r10|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = MOV [rsi|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction r11|DWORD[_] = MOV [rsi|DWORD[_] * 8 + 36] size: DWORD <|@ <|@
      nr   14  <|@ instruction r8|DWORD[_] = MOV [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   16  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: r10|QWORD[.] - - 
>@ <|@ instruction r9|DWORD[_] = MOV [r8|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   18  <|@ instruction CMPBRANCH (x: rax|DWORD, y: [r10|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B96 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   22  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B8" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   26  <|@ instruction JUMP ~[] destination: B2 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 24] size: QWORD <|@ <|@
      nr   32  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr   34  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction rax|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   40  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr   42  <|@ instruction TESTBRANCH (x: rax|QWORD, y: rax|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   48  <|@ instruction MOV (x: [rcx|QWORD + rax|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr   50  <|@ instruction rsi|QWORD = LEA [rax|QWORD - 8] size: QWORD <|@ <|@
      nr   52  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   54  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction JUMP ~[] destination: B4 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   66  <|@ instruction JUMP ~[] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" "B7" "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction MOV (x: [r10|QWORD[.] + 24], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr   72  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr   74  <|@ instruction rsi|QWORD[*] = XOR (x: r10|QWORD[.], y: r8|QWORD[.]) size: QWORD <|@ <|@
      nr   76  <|@ instruction rax|QWORD = MOVE input: long[140438306553856|0x7fba57600000] <|@ <|@
      nr   78  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction TESTBRANCH (x: r8|QWORD[.], y: r8|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   88  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rax|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction JUMP ~[] destination: B13 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B19" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   96  <|@ instruction JUMP ~[] destination: B9 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B19" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  100  <|@ instruction JUMP ~[] destination: B11 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  106  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rax|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B19" 
    xhandlers
    flags 
    probability 4589917419268529874
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction JUMP ~[] destination: B15 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction MOVB [rsi|QWORD[*] + rax|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  116  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  118  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rax|QWORD) size: QWORD <|@ <|@
      nr  120  <|@ instruction TESTBRANCH (x: rcx|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  126  <|@ instruction MOV (x: [rbx|QWORD + rcx|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  128  <|@ instruction rsi|QWORD = LEA [rcx|QWORD - 8] size: QWORD <|@ <|@
      nr  130  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  132  <|@ instruction JUMP ~[] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  138  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  140  <|@ instruction JUMP ~[] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" "B13" "B15" "B18" "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B26" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction JUMP ~[] destination: B20 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  154  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  156  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  162  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr  164  <|@ instruction TESTBRANCH (x: rcx|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  170  <|@ instruction MOV (x: [rbx|QWORD + rcx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  172  <|@ instruction rsi|QWORD = LEA [rcx|QWORD - 8] size: QWORD <|@ <|@
      nr  174  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  176  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B26" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction JUMP ~[] destination: B22 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  188  <|@ instruction JUMP ~[] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" "B25" "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: r9|DWORD[_]) size: DWORD <|@ <|@
      nr  194  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr  196  <|@ instruction rsi|QWORD[*] = XOR (x: r10|QWORD[.], y: rcx|QWORD[.]) size: QWORD <|@ <|@
      nr  198  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  208  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rax|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B37" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  212  <|@ instruction JUMP ~[] destination: B31 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B37" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction JUMP ~[] destination: B27 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B37" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  220  <|@ instruction JUMP ~[] destination: B29 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  226  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rax|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" 
    xhandlers
    flags 
    probability 4589917419268529874
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  230  <|@ instruction JUMP ~[] destination: B33 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction MOVB [rsi|QWORD[*] + rax|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  236  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  238  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rax|QWORD) size: QWORD <|@ <|@
      nr  240  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  244  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  246  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  248  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  250  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  252  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  258  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  260  <|@ instruction JUMP ~[] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B27" "B29" "B31" "B33" "B36" "B35" 
    successors "B38" "B94" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction TESTBRANCH (x: r9|DWORD[_], y: r9|DWORD[_]) trueDestinationProbability: 0.8674348032491496 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B94 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B93" 
    xhandlers
    flags 
    probability 4605988377658638555
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
stack: rcx|QWORD[.] 
locals: r10|QWORD[.] - r8|QWORD[.] 
>@ <|@ instruction r9|DWORD = MOV [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:53] <|@ <|@
      nr  270  <|@ instruction rbx|DWORD = MOV [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  272  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.9812627296505405 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B93 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B92" 
    xhandlers
    flags 
    probability 4605841980402785416
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B92 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4605841980402785416
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction rcx|DWORD = INC rbx|DWORD size: DWORD <|@ <|@
      nr  282  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  284  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B47" 
    xhandlers
    flags 
    probability 4605075304317034516
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  288  <|@ instruction JUMP ~[] destination: B41 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B95" 
    xhandlers
    flags 
    probability 4593944184856050836
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  292  <|@ instruction JUMP ~[] destination: B94 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4590797829349172127
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  296  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  298  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  300  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4590184488480571407
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  304  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  306  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr  308  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4589632481698830759
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  312  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  314  <|@ instruction MOV (x: [rdx|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  316  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  318  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  320  <|@ instruction JUMP ~[] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B95" 
    xhandlers
    flags 
    probability 4580341933595724392
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction JUMP ~[] destination: B93 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B47" 
    xhandlers
    flags 
    probability 4576060348729859198
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  328  <|@ instruction JUMP ~[] destination: B43 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4575482130661533308
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  336  <|@ instruction JUMP ~[] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B41" "B43" "B46" "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4605841980402785416
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  340  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr  342  <|@ instruction rbx|DWORD[_] = MOV [r11|QWORD[.] + rbx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  344  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: rbx|DWORD[_]) size: DWORD <|@ <|@
      nr  346  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr  348  <|@ instruction rsi|QWORD[*] = XOR (x: r10|QWORD[.], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  350  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4605075304317034516
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction TESTBRANCH (x: rdi|QWORD[.], y: rdi|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4604385295839858706
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  358  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  360  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rax|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B58" 
    xhandlers
    flags 
    probability 4603764288210400477
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  364  <|@ instruction JUMP ~[] destination: B52 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B58" 
    xhandlers
    flags 
    probability 4590797829349172127
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction JUMP ~[] destination: B48 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B58" 
    xhandlers
    flags 
    probability 4590184488480571407
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  372  <|@ instruction JUMP ~[] destination: B50 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4589632481698830759
    begin_IR
      LIR
      nr  374  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  376  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  378  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rax|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B58" 
    xhandlers
    flags 
    probability 4589103330899992928
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  382  <|@ instruction JUMP ~[] destination: B54 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4574598919810748272
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ instruction MOVB [rsi|QWORD[*] + rax|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  388  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  390  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rax|QWORD) size: QWORD <|@ <|@
      nr  392  <|@ instruction TESTBRANCH (x: rdx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4573804030045041739
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  396  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  398  <|@ instruction MOV (x: [rbp|QWORD + rdx|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  400  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr  402  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  404  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4559498341397223717
    begin_IR
      LIR
      nr  406  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  408  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  410  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  412  <|@ instruction JUMP ~[] destination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B48" "B50" "B52" "B54" "B57" "B56" 
    successors "B59" "B91" 
    xhandlers
    flags 
    probability 4605841980402785416
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction TESTBRANCH (x: rbx|DWORD[_], y: rbx|DWORD[_]) trueDestinationProbability: 0.8739340370331193 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B91 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B66" 
    xhandlers
    flags 
    probability 4604875462812446756
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  420  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B59 -> B60 falseDestination: B59 -> B66 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B67" 
    xhandlers
    flags 
    probability 4600371863185076260
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction JUMP ~[] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B64" 
    xhandlers
    flags 
    probability 4600371863185076260
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction rsi|DWORD = SUB (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  430  <|@ instruction rsi|QWORD = MOVSXD rsi|DWORD size: QWORD <|@ <|@
      nr  432  <|@ instruction rbx|QWORD = MOV rcx|DWORD size: DWORD <|@ <|@
      nr  434  <|@ instruction rsi|QWORD = ADD (x: rsi|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr  436  <|@ instruction rsi|QWORD = DEC rsi|QWORD size: QWORD <|@ <|@
      nr  438  <|@ instruction rbx|QWORD = MOV r9|DWORD size: DWORD <|@ <|@
      nr  440  <|@ instruction CMPBRANCH (x: rbx|QWORD, y: rsi|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B60 -> B61 falseDestination: B60 -> B64 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4600371863185076260
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B61 -> B62 falseDestination: B61 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B67" 
    xhandlers
    flags 
    probability 4600371863185076260
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  448  <|@ instruction JUMP ~[] destination: B62 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" "B62" 
    successors "B68" 
    xhandlers
    flags 
    probability 4604875462812446756
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction JUMP ~[] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" "B88" 
    successors "B69" "B90" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4617565855081504432
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  456  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.9812627296505405 condition: > trueDestination: B68 -> B69 falseDestination: B68 -> B90 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B70" "B71" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617455682992505589
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  460  <|@ instruction rbx|DWORD = INC rcx|DWORD size: DWORD <|@ <|@
      nr  462  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  464  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4616878716535993821
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  468  <|@ instruction JUMP ~[] destination: B70 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" "B73" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602790951197370563
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  474  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  476  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B73 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" "B75" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601979936891675385
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  482  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr  484  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B75 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601149105194298439
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  488  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  490  <|@ instruction MOV (x: [rdx|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  492  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  494  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  496  <|@ instruction JUMP ~[] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587545991679145066
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  500  <|@ instruction JUMP ~[] destination: B72 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586807474614810003
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  508  <|@ instruction JUMP ~[] destination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B70" "B72" "B75" "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617455682992505589
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  512  <|@ instruction rcx|DWORD[_] = MOV [r11|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  514  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr  516  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr  518  <|@ instruction rdi|QWORD[*] = XOR (x: r10|QWORD[.], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  520  <|@ instruction TESTCONSTBRANCH rdi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4616878716535993821
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  524  <|@ instruction TESTBRANCH (x: rsi|QWORD[.], y: rsi|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4616359446725133229
    begin_IR
      LIR
      nr  526  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  528  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  530  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rax|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4615594589735958993
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  534  <|@ instruction JUMP ~[] destination: B81 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602790951197370563
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  538  <|@ instruction JUMP ~[] destination: B77 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601979936891675385
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  542  <|@ instruction JUMP ~[] destination: B79 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" "B84" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601149105194298438
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  546  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  548  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rax|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B82 -> B83 falseDestination: B82 -> B84 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4600401356666659186
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  552  <|@ instruction JUMP ~[] destination: B83 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" "B86" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586142809256908445
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction MOVB [rsi|QWORD[*] + rax|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  558  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  560  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rax|QWORD) size: QWORD <|@ <|@
      nr  562  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B84 -> B85 falseDestination: B84 -> B86 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4585544610434797044
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  568  <|@ instruction MOV (x: [rdx|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  570  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  572  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  574  <|@ instruction JUMP ~[] destination: B86 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4571435612730574153
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  580  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  582  <|@ instruction JUMP ~[] destination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B77" "B79" "B81" "B83" "B86" "B85" 
    successors "B88" "B89" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617455682992505588
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  586  <|@ instruction TESTBRANCH (x: rcx|DWORD[_], y: rcx|DWORD[_]) trueDestinationProbability: 0.8739340370331193 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B89 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B68" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4616728324673108138
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  590  <|@ instruction JUMP ~[] destination: B88 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B95" 
    xhandlers
    flags 
    probability 4603994086100456013
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction JUMP ~[] destination: B89 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B95" 
    xhandlers
    flags 
    probability 4592396561385874207
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  598  <|@ instruction JUMP ~[] destination: B91 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B95" 
    xhandlers
    flags 
    probability 4591715434359090862
    begin_IR
      LIR
      nr  600  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  602  <|@ instruction JUMP ~[] destination: B90 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" "B90" "B89" "B91" "B93" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  606  <|@ instruction rax|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  608  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  612  <|@ instruction MOV [r15|QWORD + 1156] y: -59155 size: DWORD <|@ <|@
      nr  614  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  616  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: r10|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  620  <|@ instruction JUMP ~[] destination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction JUMP ~[] destination: B64 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" "B63" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  628  <|@ instruction MOV [r15|QWORD + 1156] y: -40475 size: DWORD <|@ <|@
      nr  630  <|@ instruction MOV [r15|QWORD + 1168] y: 1944 size: QWORD <|@ <|@
      nr  632  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 95]
stack: rdi|QWORD[.] 
locals: r10|QWORD[.] r11|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:95] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  634  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  636  <|@ instruction MOV [r15|QWORD + 1156] y: -36891 size: DWORD <|@ <|@
      nr  638  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  640  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
stack: rcx|QWORD[.] 
locals: r10|QWORD[.] - r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:53] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #5          // next:java.util.HashMap$Node
     4: astore_2      
     5: aload_0       
     6: getfield      #0          // this$0:java.util.HashMap
     9: getfield      #2          // java.util.HashMap.modCount:int
    12: aload_0       
    13: getfield      #3          // expectedModCount:int
    16: if_icmpeq     27
    19: new           #39         // java.util.ConcurrentModificationException
    22: dup           
    23: invokespecial #9          // java.util.ConcurrentModificationException.<init>:()void
    26: athrow        
    27: aload_2       
    28: ifnonnull     39
    31: new           #42         // java.util.NoSuchElementException
    34: dup           
    35: invokespecial #10         // java.util.NoSuchElementException.<init>:()void
    38: athrow        
    39: aload_0       
    40: aload_0       
    41: aload_2       
    42: dup_x1        
    43: putfield      #6          // current:java.util.HashMap$Node
    46: getfield      #11         // java.util.HashMap$Node.next:java.util.HashMap$Node
    49: dup_x1        
    50: putfield      #5          // next:java.util.HashMap$Node
    53: ifnonnull     98
    56: aload_0       
    57: getfield      #0          // this$0:java.util.HashMap
    60: getfield      #4          // java.util.HashMap.table:java.util.HashMap$Node[]
    63: dup           
    64: astore_1      
    65: ifnull        98
    68: aload_0       
    69: getfield      #7          // index:int
    72: aload_1       
    73: arraylength   
    74: if_icmpge     98
    77: aload_0       
    78: aload_1       
    79: aload_0       
    80: dup           
    81: getfield      #7          // index:int
    84: dup_x1        
    85: iconst_1      
    86: iadd          
    87: putfield      #7          // index:int
    90: aaload        
    91: dup_x1        
    92: putfield      #5          // next:java.util.HashMap$Node
    95: ifnull        68
    98: aload_2       
    99: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After NullCheckOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B96" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7154f04f slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction rsi|DWORD[_] = MOV [r10|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   10  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: r10|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = MOV [rsi|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction r11|DWORD[_] = MOV [rsi|DWORD[_] * 8 + 36] size: DWORD <|@ <|@
      nr   14  <|@ instruction r8|DWORD[_] = MOV [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   16  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: r10|QWORD[.] - - 
>@ <|@ instruction r9|DWORD[_] = MOV [r8|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   18  <|@ instruction CMPBRANCH (x: rax|DWORD, y: [r10|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B96 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   22  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B8" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   26  <|@ instruction JUMP ~[] destination: B2 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 24] size: QWORD <|@ <|@
      nr   32  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr   34  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction rax|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   40  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr   42  <|@ instruction TESTBRANCH (x: rax|QWORD, y: rax|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   48  <|@ instruction MOV (x: [rcx|QWORD + rax|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr   50  <|@ instruction rsi|QWORD = LEA [rax|QWORD - 8] size: QWORD <|@ <|@
      nr   52  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   54  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction JUMP ~[] destination: B4 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   66  <|@ instruction JUMP ~[] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" "B7" "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction MOV (x: [r10|QWORD[.] + 24], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr   72  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr   74  <|@ instruction rsi|QWORD[*] = XOR (x: r10|QWORD[.], y: r8|QWORD[.]) size: QWORD <|@ <|@
      nr   76  <|@ instruction rax|QWORD = MOVE input: long[140438306553856|0x7fba57600000] <|@ <|@
      nr   78  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction TESTBRANCH (x: r8|QWORD[.], y: r8|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   88  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rax|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction JUMP ~[] destination: B13 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B19" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   96  <|@ instruction JUMP ~[] destination: B9 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B19" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  100  <|@ instruction JUMP ~[] destination: B11 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  106  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rax|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B19" 
    xhandlers
    flags 
    probability 4589917419268529874
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction JUMP ~[] destination: B15 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction MOVB [rsi|QWORD[*] + rax|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  116  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  118  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rax|QWORD) size: QWORD <|@ <|@
      nr  120  <|@ instruction TESTBRANCH (x: rcx|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  126  <|@ instruction MOV (x: [rbx|QWORD + rcx|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  128  <|@ instruction rsi|QWORD = LEA [rcx|QWORD - 8] size: QWORD <|@ <|@
      nr  130  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  132  <|@ instruction JUMP ~[] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  138  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  140  <|@ instruction JUMP ~[] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" "B13" "B15" "B18" "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B26" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction JUMP ~[] destination: B20 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  154  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  156  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  162  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr  164  <|@ instruction TESTBRANCH (x: rcx|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  170  <|@ instruction MOV (x: [rbx|QWORD + rcx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  172  <|@ instruction rsi|QWORD = LEA [rcx|QWORD - 8] size: QWORD <|@ <|@
      nr  174  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  176  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B26" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction JUMP ~[] destination: B22 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  188  <|@ instruction JUMP ~[] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" "B25" "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: r9|DWORD[_]) size: DWORD <|@ <|@
      nr  194  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr  196  <|@ instruction rsi|QWORD[*] = XOR (x: r10|QWORD[.], y: rcx|QWORD[.]) size: QWORD <|@ <|@
      nr  198  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  208  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rax|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B37" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  212  <|@ instruction JUMP ~[] destination: B31 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B37" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction JUMP ~[] destination: B27 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B37" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  220  <|@ instruction JUMP ~[] destination: B29 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  226  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rax|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" 
    xhandlers
    flags 
    probability 4589917419268529874
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  230  <|@ instruction JUMP ~[] destination: B33 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction MOVB [rsi|QWORD[*] + rax|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  236  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  238  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rax|QWORD) size: QWORD <|@ <|@
      nr  240  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  244  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  246  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  248  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  250  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  252  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  258  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  260  <|@ instruction JUMP ~[] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B27" "B29" "B31" "B33" "B36" "B35" 
    successors "B38" "B94" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction TESTBRANCH (x: r9|DWORD[_], y: r9|DWORD[_]) trueDestinationProbability: 0.8674348032491496 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B94 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B93" 
    xhandlers
    flags 
    probability 4605988377658638555
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
stack: rcx|QWORD[.] 
locals: r10|QWORD[.] - r8|QWORD[.] 
>@ <|@ instruction r9|DWORD = MOV [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:53] <|@ <|@
      nr  270  <|@ instruction rbx|DWORD = MOV [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  272  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.9812627296505405 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B93 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B92" 
    xhandlers
    flags 
    probability 4605841980402785416
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B92 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4605841980402785416
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction rcx|DWORD = INC rbx|DWORD size: DWORD <|@ <|@
      nr  282  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  284  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B47" 
    xhandlers
    flags 
    probability 4605075304317034516
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  288  <|@ instruction JUMP ~[] destination: B41 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B95" 
    xhandlers
    flags 
    probability 4593944184856050836
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  292  <|@ instruction JUMP ~[] destination: B94 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4590797829349172127
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  296  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  298  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  300  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4590184488480571407
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  304  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  306  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr  308  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4589632481698830759
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  312  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  314  <|@ instruction MOV (x: [rdx|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  316  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  318  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  320  <|@ instruction JUMP ~[] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B95" 
    xhandlers
    flags 
    probability 4580341933595724392
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction JUMP ~[] destination: B93 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B47" 
    xhandlers
    flags 
    probability 4576060348729859198
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  328  <|@ instruction JUMP ~[] destination: B43 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4575482130661533308
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  336  <|@ instruction JUMP ~[] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B41" "B43" "B46" "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4605841980402785416
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  340  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr  342  <|@ instruction rbx|DWORD[_] = MOV [r11|QWORD[.] + rbx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  344  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: rbx|DWORD[_]) size: DWORD <|@ <|@
      nr  346  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr  348  <|@ instruction rsi|QWORD[*] = XOR (x: r10|QWORD[.], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  350  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4605075304317034516
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction TESTBRANCH (x: rdi|QWORD[.], y: rdi|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4604385295839858706
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  358  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  360  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rax|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B58" 
    xhandlers
    flags 
    probability 4603764288210400477
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  364  <|@ instruction JUMP ~[] destination: B52 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B58" 
    xhandlers
    flags 
    probability 4590797829349172127
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction JUMP ~[] destination: B48 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B58" 
    xhandlers
    flags 
    probability 4590184488480571407
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  372  <|@ instruction JUMP ~[] destination: B50 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4589632481698830759
    begin_IR
      LIR
      nr  374  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  376  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  378  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rax|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B58" 
    xhandlers
    flags 
    probability 4589103330899992928
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  382  <|@ instruction JUMP ~[] destination: B54 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4574598919810748272
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ instruction MOVB [rsi|QWORD[*] + rax|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  388  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  390  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rax|QWORD) size: QWORD <|@ <|@
      nr  392  <|@ instruction TESTBRANCH (x: rdx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4573804030045041739
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  396  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  398  <|@ instruction MOV (x: [rbp|QWORD + rdx|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  400  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr  402  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  404  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4559498341397223717
    begin_IR
      LIR
      nr  406  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  408  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  410  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  412  <|@ instruction JUMP ~[] destination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B48" "B50" "B52" "B54" "B57" "B56" 
    successors "B59" "B91" 
    xhandlers
    flags 
    probability 4605841980402785416
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction TESTBRANCH (x: rbx|DWORD[_], y: rbx|DWORD[_]) trueDestinationProbability: 0.8739340370331193 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B91 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B66" 
    xhandlers
    flags 
    probability 4604875462812446756
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  420  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B59 -> B60 falseDestination: B59 -> B66 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B67" 
    xhandlers
    flags 
    probability 4600371863185076260
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction JUMP ~[] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B64" 
    xhandlers
    flags 
    probability 4600371863185076260
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction rsi|DWORD = SUB (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  430  <|@ instruction rsi|QWORD = MOVSXD rsi|DWORD size: QWORD <|@ <|@
      nr  432  <|@ instruction rbx|QWORD = MOV rcx|DWORD size: DWORD <|@ <|@
      nr  434  <|@ instruction rsi|QWORD = ADD (x: rsi|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr  436  <|@ instruction rsi|QWORD = DEC rsi|QWORD size: QWORD <|@ <|@
      nr  438  <|@ instruction rbx|QWORD = MOV r9|DWORD size: DWORD <|@ <|@
      nr  440  <|@ instruction CMPBRANCH (x: rbx|QWORD, y: rsi|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B60 -> B61 falseDestination: B60 -> B64 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4600371863185076260
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B61 -> B62 falseDestination: B61 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B67" 
    xhandlers
    flags 
    probability 4600371863185076260
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  448  <|@ instruction JUMP ~[] destination: B62 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" "B62" 
    successors "B68" 
    xhandlers
    flags 
    probability 4604875462812446756
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction JUMP ~[] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" "B88" 
    successors "B69" "B90" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4617565855081504432
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  456  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.9812627296505405 condition: > trueDestination: B68 -> B69 falseDestination: B68 -> B90 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B70" "B71" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617455682992505589
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  460  <|@ instruction rbx|DWORD = INC rcx|DWORD size: DWORD <|@ <|@
      nr  462  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  464  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4616878716535993821
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  468  <|@ instruction JUMP ~[] destination: B70 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" "B73" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602790951197370563
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  474  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  476  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B73 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" "B75" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601979936891675385
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  482  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr  484  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B75 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601149105194298439
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  488  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  490  <|@ instruction MOV (x: [rdx|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  492  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  494  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  496  <|@ instruction JUMP ~[] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587545991679145066
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  500  <|@ instruction JUMP ~[] destination: B72 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586807474614810003
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  508  <|@ instruction JUMP ~[] destination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B70" "B72" "B75" "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617455682992505589
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  512  <|@ instruction rcx|DWORD[_] = MOV [r11|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  514  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr  516  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr  518  <|@ instruction rdi|QWORD[*] = XOR (x: r10|QWORD[.], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  520  <|@ instruction TESTCONSTBRANCH rdi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4616878716535993821
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  524  <|@ instruction TESTBRANCH (x: rsi|QWORD[.], y: rsi|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4616359446725133229
    begin_IR
      LIR
      nr  526  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  528  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  530  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rax|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4615594589735958993
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  534  <|@ instruction JUMP ~[] destination: B81 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602790951197370563
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  538  <|@ instruction JUMP ~[] destination: B77 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601979936891675385
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  542  <|@ instruction JUMP ~[] destination: B79 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" "B84" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601149105194298438
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  546  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  548  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rax|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B82 -> B83 falseDestination: B82 -> B84 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4600401356666659186
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  552  <|@ instruction JUMP ~[] destination: B83 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" "B86" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586142809256908445
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction MOVB [rsi|QWORD[*] + rax|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  558  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  560  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rax|QWORD) size: QWORD <|@ <|@
      nr  562  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B84 -> B85 falseDestination: B84 -> B86 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4585544610434797044
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  568  <|@ instruction MOV (x: [rdx|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  570  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  572  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  574  <|@ instruction JUMP ~[] destination: B86 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4571435612730574153
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  580  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  582  <|@ instruction JUMP ~[] destination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B77" "B79" "B81" "B83" "B86" "B85" 
    successors "B88" "B89" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617455682992505588
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  586  <|@ instruction TESTBRANCH (x: rcx|DWORD[_], y: rcx|DWORD[_]) trueDestinationProbability: 0.8739340370331193 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B89 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B68" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4616728324673108138
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  590  <|@ instruction JUMP ~[] destination: B88 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B95" 
    xhandlers
    flags 
    probability 4603994086100456013
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction JUMP ~[] destination: B89 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B95" 
    xhandlers
    flags 
    probability 4592396561385874207
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  598  <|@ instruction JUMP ~[] destination: B91 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B95" 
    xhandlers
    flags 
    probability 4591715434359090862
    begin_IR
      LIR
      nr  600  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  602  <|@ instruction JUMP ~[] destination: B90 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" "B90" "B89" "B91" "B93" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  606  <|@ instruction rax|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  608  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  612  <|@ instruction MOV [r15|QWORD + 1156] y: -59155 size: DWORD <|@ <|@
      nr  614  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  616  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: r10|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  620  <|@ instruction JUMP ~[] destination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction JUMP ~[] destination: B64 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" "B63" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  628  <|@ instruction MOV [r15|QWORD + 1156] y: -40475 size: DWORD <|@ <|@
      nr  630  <|@ instruction MOV [r15|QWORD + 1168] y: 1944 size: QWORD <|@ <|@
      nr  632  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 95]
stack: rdi|QWORD[.] 
locals: r10|QWORD[.] r11|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:95] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  634  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  636  <|@ instruction MOV [r15|QWORD + 1156] y: -36891 size: DWORD <|@ <|@
      nr  638  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  640  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
stack: rcx|QWORD[.] 
locals: r10|QWORD[.] - r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:53] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #5          // next:java.util.HashMap$Node
     4: astore_2      
     5: aload_0       
     6: getfield      #0          // this$0:java.util.HashMap
     9: getfield      #2          // java.util.HashMap.modCount:int
    12: aload_0       
    13: getfield      #3          // expectedModCount:int
    16: if_icmpeq     27
    19: new           #39         // java.util.ConcurrentModificationException
    22: dup           
    23: invokespecial #9          // java.util.ConcurrentModificationException.<init>:()void
    26: athrow        
    27: aload_2       
    28: ifnonnull     39
    31: new           #42         // java.util.NoSuchElementException
    34: dup           
    35: invokespecial #10         // java.util.NoSuchElementException.<init>:()void
    38: athrow        
    39: aload_0       
    40: aload_0       
    41: aload_2       
    42: dup_x1        
    43: putfield      #6          // current:java.util.HashMap$Node
    46: getfield      #11         // java.util.HashMap$Node.next:java.util.HashMap$Node
    49: dup_x1        
    50: putfield      #5          // next:java.util.HashMap$Node
    53: ifnonnull     98
    56: aload_0       
    57: getfield      #0          // this$0:java.util.HashMap
    60: getfield      #4          // java.util.HashMap.table:java.util.HashMap$Node[]
    63: dup           
    64: astore_1      
    65: ifnull        98
    68: aload_0       
    69: getfield      #7          // index:int
    72: aload_1       
    73: arraylength   
    74: if_icmpge     98
    77: aload_0       
    78: aload_1       
    79: aload_0       
    80: dup           
    81: getfield      #7          // index:int
    84: dup_x1        
    85: iconst_1      
    86: iadd          
    87: putfield      #7          // index:int
    90: aaload        
    91: dup_x1        
    92: putfield      #5          // next:java.util.HashMap$Node
    95: ifnull        68
    98: aload_2       
    99: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After ControlFlowOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B96" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7154f04f slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction rsi|DWORD[_] = MOV [r10|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   10  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: r10|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = MOV [rsi|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction r11|DWORD[_] = MOV [rsi|DWORD[_] * 8 + 36] size: DWORD <|@ <|@
      nr   14  <|@ instruction r8|DWORD[_] = MOV [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   16  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: r10|QWORD[.] - - 
>@ <|@ instruction r9|DWORD[_] = MOV [r8|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   18  <|@ instruction CMPBRANCH (x: rax|DWORD, y: [r10|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B96 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B8" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   22  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B1 -> B8 falseDestination: B1 -> B3 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B8" "B5" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 24] size: QWORD <|@ <|@
      nr   32  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr   34  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B3 -> B8 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction rax|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   40  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr   42  <|@ instruction TESTBRANCH (x: rax|QWORD, y: rax|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   48  <|@ instruction MOV (x: [rcx|QWORD + rax|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr   50  <|@ instruction rsi|QWORD = LEA [rax|QWORD - 8] size: QWORD <|@ <|@
      nr   52  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   54  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   66  <|@ instruction JUMP ~[] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B7" "B6" 
    successors "B19" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction MOV (x: [r10|QWORD[.] + 24], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr   72  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr   74  <|@ instruction rsi|QWORD[*] = XOR (x: r10|QWORD[.], y: r8|QWORD[.]) size: QWORD <|@ <|@
      nr   76  <|@ instruction rax|QWORD = MOVE input: long[140438306553856|0x7fba57600000] <|@ <|@
      nr   78  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B8 -> B19 falseDestination: B8 -> B10 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B19" "B12" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction TESTBRANCH (x: r8|QWORD[.], y: r8|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B10 -> B19 falseDestination: B10 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B19" "B14" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   88  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rax|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B12 -> B19 falseDestination: B12 -> B14 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" "B16" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  106  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rax|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B14 -> B19 falseDestination: B14 -> B16 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction MOVB [rsi|QWORD[*] + rax|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  116  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  118  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rax|QWORD) size: QWORD <|@ <|@
      nr  120  <|@ instruction TESTBRANCH (x: rcx|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  126  <|@ instruction MOV (x: [rbx|QWORD + rcx|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  128  <|@ instruction rsi|QWORD = LEA [rcx|QWORD - 8] size: QWORD <|@ <|@
      nr  130  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  132  <|@ instruction JUMP ~[] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  138  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  140  <|@ instruction JUMP ~[] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" "B12" "B14" "B18" "B17" 
    successors "B26" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B19 -> B26 falseDestination: B19 -> B21 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B26" "B23" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  154  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  156  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B21 -> B26 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  162  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr  164  <|@ instruction TESTBRANCH (x: rcx|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  170  <|@ instruction MOV (x: [rbx|QWORD + rcx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  172  <|@ instruction rsi|QWORD = LEA [rcx|QWORD - 8] size: QWORD <|@ <|@
      nr  174  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  176  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  188  <|@ instruction JUMP ~[] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B19" "B21" "B25" "B24" 
    successors "B37" "B28" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: r9|DWORD[_]) size: DWORD <|@ <|@
      nr  194  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr  196  <|@ instruction rsi|QWORD[*] = XOR (x: r10|QWORD[.], y: rcx|QWORD[.]) size: QWORD <|@ <|@
      nr  198  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B26 -> B37 falseDestination: B26 -> B28 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B37" "B30" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B28 -> B37 falseDestination: B28 -> B30 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B37" "B32" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  208  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rax|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B30 -> B37 falseDestination: B30 -> B32 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B37" "B34" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  226  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rax|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B32 -> B37 falseDestination: B32 -> B34 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction MOVB [rsi|QWORD[*] + rax|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  236  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  238  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rax|QWORD) size: QWORD <|@ <|@
      nr  240  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  244  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  246  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  248  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  250  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  252  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  258  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  260  <|@ instruction JUMP ~[] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B26" "B28" "B30" "B32" "B36" "B35" 
    successors "B38" "B95" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction TESTBRANCH (x: r9|DWORD[_], y: r9|DWORD[_]) trueDestinationProbability: 0.8674348032491496 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B95 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B95" 
    xhandlers
    flags 
    probability 4605988377658638555
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
stack: rcx|QWORD[.] 
locals: r10|QWORD[.] - r8|QWORD[.] 
>@ <|@ instruction r9|DWORD = MOV [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:53] <|@ <|@
      nr  270  <|@ instruction rbx|DWORD = MOV [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  272  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.9812627296505405 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B95 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B92" 
    xhandlers
    flags 
    probability 4605841980402785416
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B92 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B47" "B42" 
    xhandlers
    flags 
    probability 4605841980402785416
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction rcx|DWORD = INC rbx|DWORD size: DWORD <|@ <|@
      nr  282  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  284  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B40 -> B47 falseDestination: B40 -> B42 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B47" "B44" 
    xhandlers
    flags 
    probability 4590797829349172127
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  296  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  298  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  300  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B47 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4590184488480571407
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  304  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  306  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr  308  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4589632481698830759
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  312  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  314  <|@ instruction MOV (x: [rdx|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  316  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  318  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  320  <|@ instruction JUMP ~[] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4575482130661533308
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  336  <|@ instruction JUMP ~[] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B40" "B42" "B46" "B45" 
    successors "B58" "B49" 
    xhandlers
    flags 
    probability 4605841980402785416
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  340  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr  342  <|@ instruction rbx|DWORD[_] = MOV [r11|QWORD[.] + rbx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  344  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: rbx|DWORD[_]) size: DWORD <|@ <|@
      nr  346  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr  348  <|@ instruction rsi|QWORD[*] = XOR (x: r10|QWORD[.], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  350  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B47 -> B58 falseDestination: B47 -> B49 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B58" "B51" 
    xhandlers
    flags 
    probability 4605075304317034516
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction TESTBRANCH (x: rdi|QWORD[.], y: rdi|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B49 -> B58 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B58" "B53" 
    xhandlers
    flags 
    probability 4604385295839858706
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  358  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  360  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rax|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B51 -> B58 falseDestination: B51 -> B53 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B58" "B55" 
    xhandlers
    flags 
    probability 4589632481698830759
    begin_IR
      LIR
      nr  374  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  376  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  378  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rax|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B53 -> B58 falseDestination: B53 -> B55 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4574598919810748272
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ instruction MOVB [rsi|QWORD[*] + rax|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  388  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  390  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rax|QWORD) size: QWORD <|@ <|@
      nr  392  <|@ instruction TESTBRANCH (x: rdx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4573804030045041739
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  396  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  398  <|@ instruction MOV (x: [rbp|QWORD + rdx|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  400  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr  402  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  404  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4559498341397223717
    begin_IR
      LIR
      nr  406  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  408  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  410  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  412  <|@ instruction JUMP ~[] destination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B47" "B49" "B51" "B53" "B57" "B56" 
    successors "B59" "B95" 
    xhandlers
    flags 
    probability 4605841980402785416
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction TESTBRANCH (x: rbx|DWORD[_], y: rbx|DWORD[_]) trueDestinationProbability: 0.8739340370331193 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B95 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B68" 
    xhandlers
    flags 
    probability 4604875462812446756
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  420  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B59 -> B60 falseDestination: B59 -> B68 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B65" 
    xhandlers
    flags 
    probability 4600371863185076260
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction rsi|DWORD = SUB (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  430  <|@ instruction rsi|QWORD = MOVSXD rsi|DWORD size: QWORD <|@ <|@
      nr  432  <|@ instruction rbx|QWORD = MOV rcx|DWORD size: DWORD <|@ <|@
      nr  434  <|@ instruction rsi|QWORD = ADD (x: rsi|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr  436  <|@ instruction rsi|QWORD = DEC rsi|QWORD size: QWORD <|@ <|@
      nr  438  <|@ instruction rbx|QWORD = MOV r9|DWORD size: DWORD <|@ <|@
      nr  440  <|@ instruction CMPBRANCH (x: rbx|QWORD, y: rsi|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B60 -> B61 falseDestination: B60 -> B65 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B68" "B65" 
    xhandlers
    flags 
    probability 4600371863185076260
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B61 -> B68 falseDestination: B61 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B59" "B61" "B88" 
    successors "B69" "B95" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4617565855081504432
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  456  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.9812627296505405 condition: > trueDestination: B68 -> B69 falseDestination: B68 -> B95 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B76" "B71" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617455682992505589
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  460  <|@ instruction rbx|DWORD = INC rcx|DWORD size: DWORD <|@ <|@
      nr  462  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  464  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B69 -> B76 falseDestination: B69 -> B71 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B76" "B73" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602790951197370563
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  474  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  476  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B71 -> B76 falseDestination: B71 -> B73 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" "B75" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601979936891675385
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  482  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr  484  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B75 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601149105194298439
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  488  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  490  <|@ instruction MOV (x: [rdx|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  492  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  494  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  496  <|@ instruction JUMP ~[] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586807474614810003
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  508  <|@ instruction JUMP ~[] destination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B69" "B71" "B75" "B74" 
    successors "B87" "B78" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617455682992505589
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  512  <|@ instruction rcx|DWORD[_] = MOV [r11|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  514  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr  516  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr  518  <|@ instruction rdi|QWORD[*] = XOR (x: r10|QWORD[.], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  520  <|@ instruction TESTCONSTBRANCH rdi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B76 -> B87 falseDestination: B76 -> B78 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B87" "B80" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4616878716535993821
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  524  <|@ instruction TESTBRANCH (x: rsi|QWORD[.], y: rsi|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B78 -> B87 falseDestination: B78 -> B80 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B87" "B82" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4616359446725133229
    begin_IR
      LIR
      nr  526  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  528  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  530  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rax|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B80 -> B87 falseDestination: B80 -> B82 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B87" "B84" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601149105194298438
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  546  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  548  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rax|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B82 -> B87 falseDestination: B82 -> B84 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" "B86" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586142809256908445
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction MOVB [rsi|QWORD[*] + rax|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  558  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  560  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rax|QWORD) size: QWORD <|@ <|@
      nr  562  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B84 -> B85 falseDestination: B84 -> B86 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4585544610434797044
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  568  <|@ instruction MOV (x: [rdx|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  570  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  572  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  574  <|@ instruction JUMP ~[] destination: B86 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4571435612730574153
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  580  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  582  <|@ instruction JUMP ~[] destination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B76" "B78" "B80" "B82" "B86" "B85" 
    successors "B88" "B95" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617455682992505588
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  586  <|@ instruction TESTBRANCH (x: rcx|DWORD[_], y: rcx|DWORD[_]) trueDestinationProbability: 0.8739340370331193 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B95 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B68" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4616728324673108138
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  590  <|@ instruction JUMP ~[] destination: B88 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B37" "B68" "B87" "B58" "B38" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  606  <|@ instruction rax|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  608  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  612  <|@ instruction MOV [r15|QWORD + 1156] y: -59155 size: DWORD <|@ <|@
      nr  614  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  616  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: r10|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B60" "B61" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  628  <|@ instruction MOV [r15|QWORD + 1156] y: -40475 size: DWORD <|@ <|@
      nr  630  <|@ instruction MOV [r15|QWORD + 1168] y: 1944 size: QWORD <|@ <|@
      nr  632  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 95]
stack: rdi|QWORD[.] 
locals: r10|QWORD[.] r11|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:95] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  634  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  636  <|@ instruction MOV [r15|QWORD + 1156] y: -36891 size: DWORD <|@ <|@
      nr  638  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  640  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
stack: rcx|QWORD[.] 
locals: r10|QWORD[.] - r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:53] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #5          // next:java.util.HashMap$Node
     4: astore_2      
     5: aload_0       
     6: getfield      #0          // this$0:java.util.HashMap
     9: getfield      #2          // java.util.HashMap.modCount:int
    12: aload_0       
    13: getfield      #3          // expectedModCount:int
    16: if_icmpeq     27
    19: new           #39         // java.util.ConcurrentModificationException
    22: dup           
    23: invokespecial #9          // java.util.ConcurrentModificationException.<init>:()void
    26: athrow        
    27: aload_2       
    28: ifnonnull     39
    31: new           #42         // java.util.NoSuchElementException
    34: dup           
    35: invokespecial #10         // java.util.NoSuchElementException.<init>:()void
    38: athrow        
    39: aload_0       
    40: aload_0       
    41: aload_2       
    42: dup_x1        
    43: putfield      #6          // current:java.util.HashMap$Node
    46: getfield      #11         // java.util.HashMap$Node.next:java.util.HashMap$Node
    49: dup_x1        
    50: putfield      #5          // next:java.util.HashMap$Node
    53: ifnonnull     98
    56: aload_0       
    57: getfield      #0          // this$0:java.util.HashMap
    60: getfield      #4          // java.util.HashMap.table:java.util.HashMap$Node[]
    63: dup           
    64: astore_1      
    65: ifnull        98
    68: aload_0       
    69: getfield      #7          // index:int
    72: aload_1       
    73: arraylength   
    74: if_icmpge     98
    77: aload_0       
    78: aload_1       
    79: aload_0       
    80: dup           
    81: getfield      #7          // index:int
    84: dup_x1        
    85: iconst_1      
    86: iadd          
    87: putfield      #7          // index:int
    90: aaload        
    91: dup_x1        
    92: putfield      #5          // next:java.util.HashMap$Node
    95: ifnull        68
    98: aload_2       
    99: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After ComputeCodeEmissionOrder"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B96" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7154f04f slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction rsi|DWORD[_] = MOV [r10|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   10  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: r10|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = MOV [rsi|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction r11|DWORD[_] = MOV [rsi|DWORD[_] * 8 + 36] size: DWORD <|@ <|@
      nr   14  <|@ instruction r8|DWORD[_] = MOV [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   16  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: r10|QWORD[.] - - 
>@ <|@ instruction r9|DWORD[_] = MOV [r8|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   18  <|@ instruction CMPBRANCH (x: rax|DWORD, y: [r10|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B96 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B8" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   22  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B1 -> B8 falseDestination: B1 -> B3 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B7" "B6" 
    successors "B19" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction MOV (x: [r10|QWORD[.] + 24], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr   72  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr   74  <|@ instruction rsi|QWORD[*] = XOR (x: r10|QWORD[.], y: r8|QWORD[.]) size: QWORD <|@ <|@
      nr   76  <|@ instruction rax|QWORD = MOVE input: long[140438306553856|0x7fba57600000] <|@ <|@
      nr   78  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B8 -> B19 falseDestination: B8 -> B10 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B19" "B12" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction TESTBRANCH (x: r8|QWORD[.], y: r8|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B10 -> B19 falseDestination: B10 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B19" "B14" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   88  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rax|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B12 -> B19 falseDestination: B12 -> B14 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" "B12" "B14" "B18" "B17" 
    successors "B26" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B19 -> B26 falseDestination: B19 -> B21 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B19" "B21" "B25" "B24" 
    successors "B37" "B28" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: r9|DWORD[_]) size: DWORD <|@ <|@
      nr  194  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr  196  <|@ instruction rsi|QWORD[*] = XOR (x: r10|QWORD[.], y: rcx|QWORD[.]) size: QWORD <|@ <|@
      nr  198  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B26 -> B37 falseDestination: B26 -> B28 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B37" "B30" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B28 -> B37 falseDestination: B28 -> B30 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B37" "B32" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  208  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rax|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B30 -> B37 falseDestination: B30 -> B32 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B26" "B28" "B30" "B32" "B36" "B35" 
    successors "B38" "B95" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction TESTBRANCH (x: r9|DWORD[_], y: r9|DWORD[_]) trueDestinationProbability: 0.8674348032491496 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B95 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B37" "B68" "B87" "B58" "B38" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  606  <|@ instruction rax|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  608  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B95" 
    xhandlers
    flags 
    probability 4605988377658638555
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
stack: rcx|QWORD[.] 
locals: r10|QWORD[.] - r8|QWORD[.] 
>@ <|@ instruction r9|DWORD = MOV [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:53] <|@ <|@
      nr  270  <|@ instruction rbx|DWORD = MOV [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  272  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.9812627296505405 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B95 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B92" 
    xhandlers
    flags 
    probability 4605841980402785416
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B92 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B47" "B42" 
    xhandlers
    flags 
    probability 4605841980402785416
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction rcx|DWORD = INC rbx|DWORD size: DWORD <|@ <|@
      nr  282  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  284  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B40 -> B47 falseDestination: B40 -> B42 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B40" "B42" "B46" "B45" 
    successors "B58" "B49" 
    xhandlers
    flags 
    probability 4605841980402785416
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  340  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr  342  <|@ instruction rbx|DWORD[_] = MOV [r11|QWORD[.] + rbx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  344  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: rbx|DWORD[_]) size: DWORD <|@ <|@
      nr  346  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr  348  <|@ instruction rsi|QWORD[*] = XOR (x: r10|QWORD[.], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  350  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B47 -> B58 falseDestination: B47 -> B49 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B58" "B51" 
    xhandlers
    flags 
    probability 4605075304317034516
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction TESTBRANCH (x: rdi|QWORD[.], y: rdi|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B49 -> B58 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B58" "B53" 
    xhandlers
    flags 
    probability 4604385295839858706
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  358  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  360  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rax|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B51 -> B58 falseDestination: B51 -> B53 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B47" "B49" "B51" "B53" "B57" "B56" 
    successors "B59" "B95" 
    xhandlers
    flags 
    probability 4605841980402785416
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction TESTBRANCH (x: rbx|DWORD[_], y: rbx|DWORD[_]) trueDestinationProbability: 0.8739340370331193 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B95 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B68" 
    xhandlers
    flags 
    probability 4604875462812446756
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  420  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B59 -> B60 falseDestination: B59 -> B68 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B76" "B71" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617455682992505589
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  460  <|@ instruction rbx|DWORD = INC rcx|DWORD size: DWORD <|@ <|@
      nr  462  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  464  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B69 -> B76 falseDestination: B69 -> B71 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B69" "B71" "B75" "B74" 
    successors "B87" "B78" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617455682992505589
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  512  <|@ instruction rcx|DWORD[_] = MOV [r11|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  514  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr  516  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr  518  <|@ instruction rdi|QWORD[*] = XOR (x: r10|QWORD[.], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  520  <|@ instruction TESTCONSTBRANCH rdi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B76 -> B87 falseDestination: B76 -> B78 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B87" "B80" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4616878716535993821
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  524  <|@ instruction TESTBRANCH (x: rsi|QWORD[.], y: rsi|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B78 -> B87 falseDestination: B78 -> B80 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B87" "B82" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4616359446725133229
    begin_IR
      LIR
      nr  526  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  528  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  530  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rax|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B80 -> B87 falseDestination: B80 -> B82 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B76" "B78" "B80" "B82" "B86" "B85" 
    successors "B88" "B95" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617455682992505588
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  586  <|@ instruction TESTBRANCH (x: rcx|DWORD[_], y: rcx|DWORD[_]) trueDestinationProbability: 0.8739340370331193 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B95 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B68" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4616728324673108138
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  590  <|@ instruction JUMP ~[] destination: B88 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B59" "B61" "B88" 
    successors "B69" "B95" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4617565855081504432
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  456  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.9812627296505405 condition: > trueDestination: B68 -> B69 falseDestination: B68 -> B95 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B76" "B73" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602790951197370563
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  474  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  476  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B71 -> B76 falseDestination: B71 -> B73 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" "B75" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601979936891675385
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  482  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr  484  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B75 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601149105194298439
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  488  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  490  <|@ instruction MOV (x: [rdx|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  492  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  494  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  496  <|@ instruction JUMP ~[] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B87" "B84" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601149105194298438
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  546  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  548  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rax|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B82 -> B87 falseDestination: B82 -> B84 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" "B86" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586142809256908445
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction MOVB [rsi|QWORD[*] + rax|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  558  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  560  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rax|QWORD) size: QWORD <|@ <|@
      nr  562  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B84 -> B85 falseDestination: B84 -> B86 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4585544610434797044
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  568  <|@ instruction MOV (x: [rdx|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  570  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  572  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  574  <|@ instruction JUMP ~[] destination: B86 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586807474614810003
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  508  <|@ instruction JUMP ~[] destination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4571435612730574153
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  580  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  582  <|@ instruction JUMP ~[] destination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B65" 
    xhandlers
    flags 
    probability 4600371863185076260
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction rsi|DWORD = SUB (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  430  <|@ instruction rsi|QWORD = MOVSXD rsi|DWORD size: QWORD <|@ <|@
      nr  432  <|@ instruction rbx|QWORD = MOV rcx|DWORD size: DWORD <|@ <|@
      nr  434  <|@ instruction rsi|QWORD = ADD (x: rsi|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr  436  <|@ instruction rsi|QWORD = DEC rsi|QWORD size: QWORD <|@ <|@
      nr  438  <|@ instruction rbx|QWORD = MOV r9|DWORD size: DWORD <|@ <|@
      nr  440  <|@ instruction CMPBRANCH (x: rbx|QWORD, y: rsi|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B60 -> B61 falseDestination: B60 -> B65 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B68" "B65" 
    xhandlers
    flags 
    probability 4600371863185076260
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B61 -> B68 falseDestination: B61 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B8" "B5" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 24] size: QWORD <|@ <|@
      nr   32  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr   34  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B3 -> B8 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction rax|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   40  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr   42  <|@ instruction TESTBRANCH (x: rax|QWORD, y: rax|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   48  <|@ instruction MOV (x: [rcx|QWORD + rax|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr   50  <|@ instruction rsi|QWORD = LEA [rax|QWORD - 8] size: QWORD <|@ <|@
      nr   52  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   54  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B26" "B23" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  154  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  156  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B21 -> B26 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  162  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr  164  <|@ instruction TESTBRANCH (x: rcx|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  170  <|@ instruction MOV (x: [rbx|QWORD + rcx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  172  <|@ instruction rsi|QWORD = LEA [rcx|QWORD - 8] size: QWORD <|@ <|@
      nr  174  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  176  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B47" "B44" 
    xhandlers
    flags 
    probability 4590797829349172127
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  296  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  298  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  300  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B47 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4590184488480571407
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  304  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  306  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr  308  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4589632481698830759
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  312  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  314  <|@ instruction MOV (x: [rdx|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  316  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  318  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  320  <|@ instruction JUMP ~[] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" "B16" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  106  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rax|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B14 -> B19 falseDestination: B14 -> B16 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B37" "B34" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  226  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rax|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B32 -> B37 falseDestination: B32 -> B34 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B58" "B55" 
    xhandlers
    flags 
    probability 4589632481698830759
    begin_IR
      LIR
      nr  374  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  376  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  378  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rax|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B53 -> B58 falseDestination: B53 -> B55 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4574598919810748272
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ instruction MOVB [rsi|QWORD[*] + rax|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  388  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  390  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rax|QWORD) size: QWORD <|@ <|@
      nr  392  <|@ instruction TESTBRANCH (x: rdx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4573804030045041739
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  396  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  398  <|@ instruction MOV (x: [rbp|QWORD + rdx|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  400  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr  402  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  404  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   66  <|@ instruction JUMP ~[] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  188  <|@ instruction JUMP ~[] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction MOVB [rsi|QWORD[*] + rax|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  236  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  238  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rax|QWORD) size: QWORD <|@ <|@
      nr  240  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  244  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  246  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  248  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  250  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  252  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction MOVB [rsi|QWORD[*] + rax|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  116  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  118  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rax|QWORD) size: QWORD <|@ <|@
      nr  120  <|@ instruction TESTBRANCH (x: rcx|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  126  <|@ instruction MOV (x: [rbx|QWORD + rcx|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  128  <|@ instruction rsi|QWORD = LEA [rcx|QWORD - 8] size: QWORD <|@ <|@
      nr  130  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  132  <|@ instruction JUMP ~[] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4575482130661533308
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  336  <|@ instruction JUMP ~[] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  258  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  260  <|@ instruction JUMP ~[] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  138  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  140  <|@ instruction JUMP ~[] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4559498341397223717
    begin_IR
      LIR
      nr  406  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  408  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  410  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  412  <|@ instruction JUMP ~[] destination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B60" "B61" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  628  <|@ instruction MOV [r15|QWORD + 1156] y: -40475 size: DWORD <|@ <|@
      nr  630  <|@ instruction MOV [r15|QWORD + 1168] y: 1944 size: QWORD <|@ <|@
      nr  632  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 95]
stack: rdi|QWORD[.] 
locals: r10|QWORD[.] r11|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:95] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  612  <|@ instruction MOV [r15|QWORD + 1156] y: -59155 size: DWORD <|@ <|@
      nr  614  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  616  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: r10|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  634  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  636  <|@ instruction MOV [r15|QWORD + 1156] y: -36891 size: DWORD <|@ <|@
      nr  638  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  640  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
stack: rcx|QWORD[.] 
locals: r10|QWORD[.] - r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:53] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #5          // next:java.util.HashMap$Node
     4: astore_2      
     5: aload_0       
     6: getfield      #0          // this$0:java.util.HashMap
     9: getfield      #2          // java.util.HashMap.modCount:int
    12: aload_0       
    13: getfield      #3          // expectedModCount:int
    16: if_icmpeq     27
    19: new           #39         // java.util.ConcurrentModificationException
    22: dup           
    23: invokespecial #9          // java.util.ConcurrentModificationException.<init>:()void
    26: athrow        
    27: aload_2       
    28: ifnonnull     39
    31: new           #42         // java.util.NoSuchElementException
    34: dup           
    35: invokespecial #10         // java.util.NoSuchElementException.<init>:()void
    38: athrow        
    39: aload_0       
    40: aload_0       
    41: aload_2       
    42: dup_x1        
    43: putfield      #6          // current:java.util.HashMap$Node
    46: getfield      #11         // java.util.HashMap$Node.next:java.util.HashMap$Node
    49: dup_x1        
    50: putfield      #5          // next:java.util.HashMap$Node
    53: ifnonnull     98
    56: aload_0       
    57: getfield      #0          // this$0:java.util.HashMap
    60: getfield      #4          // java.util.HashMap.table:java.util.HashMap$Node[]
    63: dup           
    64: astore_1      
    65: ifnull        98
    68: aload_0       
    69: getfield      #7          // index:int
    72: aload_1       
    73: arraylength   
    74: if_icmpge     98
    77: aload_0       
    78: aload_1       
    79: aload_0       
    80: dup           
    81: getfield      #7          // index:int
    84: dup_x1        
    85: iconst_1      
    86: iadd          
    87: putfield      #7          // index:int
    90: aaload        
    91: dup_x1        
    92: putfield      #5          // next:java.util.HashMap$Node
    95: ifnull        68
    98: aload_2       
    99: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After StackMoveOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B96" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7154f04f slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction rsi|DWORD[_] = MOV [r10|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   10  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: r10|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = MOV [rsi|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction r11|DWORD[_] = MOV [rsi|DWORD[_] * 8 + 36] size: DWORD <|@ <|@
      nr   14  <|@ instruction r8|DWORD[_] = MOV [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   16  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: r10|QWORD[.] - - 
>@ <|@ instruction r9|DWORD[_] = MOV [r8|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   18  <|@ instruction CMPBRANCH (x: rax|DWORD, y: [r10|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B96 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B8" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   22  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B1 -> B8 falseDestination: B1 -> B3 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B7" "B6" 
    successors "B19" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction MOV (x: [r10|QWORD[.] + 24], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr   72  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr   74  <|@ instruction rsi|QWORD[*] = XOR (x: r10|QWORD[.], y: r8|QWORD[.]) size: QWORD <|@ <|@
      nr   76  <|@ instruction rax|QWORD = MOVE input: long[140438306553856|0x7fba57600000] <|@ <|@
      nr   78  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B8 -> B19 falseDestination: B8 -> B10 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B19" "B12" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction TESTBRANCH (x: r8|QWORD[.], y: r8|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B10 -> B19 falseDestination: B10 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B19" "B14" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   88  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rax|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B12 -> B19 falseDestination: B12 -> B14 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" "B12" "B14" "B18" "B17" 
    successors "B26" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B19 -> B26 falseDestination: B19 -> B21 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B19" "B21" "B25" "B24" 
    successors "B37" "B28" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: r9|DWORD[_]) size: DWORD <|@ <|@
      nr  194  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr  196  <|@ instruction rsi|QWORD[*] = XOR (x: r10|QWORD[.], y: rcx|QWORD[.]) size: QWORD <|@ <|@
      nr  198  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B26 -> B37 falseDestination: B26 -> B28 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B37" "B30" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B28 -> B37 falseDestination: B28 -> B30 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B37" "B32" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  208  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rax|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B30 -> B37 falseDestination: B30 -> B32 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B26" "B28" "B30" "B32" "B36" "B35" 
    successors "B38" "B95" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction TESTBRANCH (x: r9|DWORD[_], y: r9|DWORD[_]) trueDestinationProbability: 0.8674348032491496 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B95 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B37" "B68" "B87" "B58" "B38" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  606  <|@ instruction rax|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  608  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B95" 
    xhandlers
    flags 
    probability 4605988377658638555
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
stack: rcx|QWORD[.] 
locals: r10|QWORD[.] - r8|QWORD[.] 
>@ <|@ instruction r9|DWORD = MOV [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:53] <|@ <|@
      nr  270  <|@ instruction rbx|DWORD = MOV [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  272  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.9812627296505405 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B95 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B92" 
    xhandlers
    flags 
    probability 4605841980402785416
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B92 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B47" "B42" 
    xhandlers
    flags 
    probability 4605841980402785416
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction rcx|DWORD = INC rbx|DWORD size: DWORD <|@ <|@
      nr  282  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  284  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B40 -> B47 falseDestination: B40 -> B42 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B40" "B42" "B46" "B45" 
    successors "B58" "B49" 
    xhandlers
    flags 
    probability 4605841980402785416
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  340  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr  342  <|@ instruction rbx|DWORD[_] = MOV [r11|QWORD[.] + rbx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  344  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: rbx|DWORD[_]) size: DWORD <|@ <|@
      nr  346  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr  348  <|@ instruction rsi|QWORD[*] = XOR (x: r10|QWORD[.], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  350  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B47 -> B58 falseDestination: B47 -> B49 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B58" "B51" 
    xhandlers
    flags 
    probability 4605075304317034516
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction TESTBRANCH (x: rdi|QWORD[.], y: rdi|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B49 -> B58 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B58" "B53" 
    xhandlers
    flags 
    probability 4604385295839858706
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  358  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  360  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rax|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B51 -> B58 falseDestination: B51 -> B53 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B47" "B49" "B51" "B53" "B57" "B56" 
    successors "B59" "B95" 
    xhandlers
    flags 
    probability 4605841980402785416
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction TESTBRANCH (x: rbx|DWORD[_], y: rbx|DWORD[_]) trueDestinationProbability: 0.8739340370331193 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B95 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B68" 
    xhandlers
    flags 
    probability 4604875462812446756
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  420  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B59 -> B60 falseDestination: B59 -> B68 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B76" "B71" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617455682992505589
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  460  <|@ instruction rbx|DWORD = INC rcx|DWORD size: DWORD <|@ <|@
      nr  462  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  464  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B69 -> B76 falseDestination: B69 -> B71 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B69" "B71" "B75" "B74" 
    successors "B87" "B78" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617455682992505589
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  512  <|@ instruction rcx|DWORD[_] = MOV [r11|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  514  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr  516  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr  518  <|@ instruction rdi|QWORD[*] = XOR (x: r10|QWORD[.], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  520  <|@ instruction TESTCONSTBRANCH rdi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B76 -> B87 falseDestination: B76 -> B78 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B87" "B80" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4616878716535993821
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  524  <|@ instruction TESTBRANCH (x: rsi|QWORD[.], y: rsi|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B78 -> B87 falseDestination: B78 -> B80 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B87" "B82" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4616359446725133229
    begin_IR
      LIR
      nr  526  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  528  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  530  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rax|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B80 -> B87 falseDestination: B80 -> B82 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B76" "B78" "B80" "B82" "B86" "B85" 
    successors "B88" "B95" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617455682992505588
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  586  <|@ instruction TESTBRANCH (x: rcx|DWORD[_], y: rcx|DWORD[_]) trueDestinationProbability: 0.8739340370331193 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B95 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B68" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4616728324673108138
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  590  <|@ instruction JUMP ~[] destination: B88 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B59" "B61" "B88" 
    successors "B69" "B95" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4617565855081504432
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  456  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.9812627296505405 condition: > trueDestination: B68 -> B69 falseDestination: B68 -> B95 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B76" "B73" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602790951197370563
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  474  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  476  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B71 -> B76 falseDestination: B71 -> B73 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" "B75" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601979936891675385
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  482  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr  484  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B75 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601149105194298439
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  488  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  490  <|@ instruction MOV (x: [rdx|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  492  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  494  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  496  <|@ instruction JUMP ~[] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B87" "B84" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601149105194298438
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  546  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  548  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rax|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B82 -> B87 falseDestination: B82 -> B84 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" "B86" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586142809256908445
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction MOVB [rsi|QWORD[*] + rax|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  558  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  560  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rax|QWORD) size: QWORD <|@ <|@
      nr  562  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B84 -> B85 falseDestination: B84 -> B86 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4585544610434797044
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  568  <|@ instruction MOV (x: [rdx|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  570  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  572  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  574  <|@ instruction JUMP ~[] destination: B86 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586807474614810003
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  508  <|@ instruction JUMP ~[] destination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4571435612730574153
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  580  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  582  <|@ instruction JUMP ~[] destination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B65" 
    xhandlers
    flags 
    probability 4600371863185076260
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction rsi|DWORD = SUB (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  430  <|@ instruction rsi|QWORD = MOVSXD rsi|DWORD size: QWORD <|@ <|@
      nr  432  <|@ instruction rbx|QWORD = MOV rcx|DWORD size: DWORD <|@ <|@
      nr  434  <|@ instruction rsi|QWORD = ADD (x: rsi|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr  436  <|@ instruction rsi|QWORD = DEC rsi|QWORD size: QWORD <|@ <|@
      nr  438  <|@ instruction rbx|QWORD = MOV r9|DWORD size: DWORD <|@ <|@
      nr  440  <|@ instruction CMPBRANCH (x: rbx|QWORD, y: rsi|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B60 -> B61 falseDestination: B60 -> B65 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B68" "B65" 
    xhandlers
    flags 
    probability 4600371863185076260
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B61 -> B68 falseDestination: B61 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B8" "B5" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 24] size: QWORD <|@ <|@
      nr   32  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr   34  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B3 -> B8 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction rax|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   40  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr   42  <|@ instruction TESTBRANCH (x: rax|QWORD, y: rax|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   48  <|@ instruction MOV (x: [rcx|QWORD + rax|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr   50  <|@ instruction rsi|QWORD = LEA [rax|QWORD - 8] size: QWORD <|@ <|@
      nr   52  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   54  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B26" "B23" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  154  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  156  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B21 -> B26 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  162  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr  164  <|@ instruction TESTBRANCH (x: rcx|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  170  <|@ instruction MOV (x: [rbx|QWORD + rcx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  172  <|@ instruction rsi|QWORD = LEA [rcx|QWORD - 8] size: QWORD <|@ <|@
      nr  174  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  176  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B47" "B44" 
    xhandlers
    flags 
    probability 4590797829349172127
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  296  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  298  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  300  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B47 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4590184488480571407
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  304  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  306  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr  308  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4589632481698830759
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  312  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  314  <|@ instruction MOV (x: [rdx|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  316  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  318  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  320  <|@ instruction JUMP ~[] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" "B16" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  106  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rax|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B14 -> B19 falseDestination: B14 -> B16 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B37" "B34" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  226  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rax|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B32 -> B37 falseDestination: B32 -> B34 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B58" "B55" 
    xhandlers
    flags 
    probability 4589632481698830759
    begin_IR
      LIR
      nr  374  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  376  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  378  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rax|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B53 -> B58 falseDestination: B53 -> B55 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4574598919810748272
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ instruction MOVB [rsi|QWORD[*] + rax|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  388  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  390  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rax|QWORD) size: QWORD <|@ <|@
      nr  392  <|@ instruction TESTBRANCH (x: rdx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4573804030045041739
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  396  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  398  <|@ instruction MOV (x: [rbp|QWORD + rdx|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  400  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr  402  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  404  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   66  <|@ instruction JUMP ~[] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  188  <|@ instruction JUMP ~[] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction MOVB [rsi|QWORD[*] + rax|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  236  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  238  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rax|QWORD) size: QWORD <|@ <|@
      nr  240  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  244  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  246  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  248  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  250  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  252  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction MOVB [rsi|QWORD[*] + rax|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  116  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  118  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rax|QWORD) size: QWORD <|@ <|@
      nr  120  <|@ instruction TESTBRANCH (x: rcx|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  126  <|@ instruction MOV (x: [rbx|QWORD + rcx|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  128  <|@ instruction rsi|QWORD = LEA [rcx|QWORD - 8] size: QWORD <|@ <|@
      nr  130  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  132  <|@ instruction JUMP ~[] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4575482130661533308
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  336  <|@ instruction JUMP ~[] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  258  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  260  <|@ instruction JUMP ~[] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  138  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  140  <|@ instruction JUMP ~[] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4559498341397223717
    begin_IR
      LIR
      nr  406  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  408  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  410  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  412  <|@ instruction JUMP ~[] destination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B60" "B61" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  628  <|@ instruction MOV [r15|QWORD + 1156] y: -40475 size: DWORD <|@ <|@
      nr  630  <|@ instruction MOV [r15|QWORD + 1168] y: 1944 size: QWORD <|@ <|@
      nr  632  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 95]
stack: rdi|QWORD[.] 
locals: r10|QWORD[.] r11|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:95] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  612  <|@ instruction MOV [r15|QWORD + 1156] y: -59155 size: DWORD <|@ <|@
      nr  614  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  616  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: r10|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  634  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  636  <|@ instruction MOV [r15|QWORD + 1156] y: -36891 size: DWORD <|@ <|@
      nr  638  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  640  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
stack: rcx|QWORD[.] 
locals: r10|QWORD[.] - r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:53] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #5          // next:java.util.HashMap$Node
     4: astore_2      
     5: aload_0       
     6: getfield      #0          // this$0:java.util.HashMap
     9: getfield      #2          // java.util.HashMap.modCount:int
    12: aload_0       
    13: getfield      #3          // expectedModCount:int
    16: if_icmpeq     27
    19: new           #39         // java.util.ConcurrentModificationException
    22: dup           
    23: invokespecial #9          // java.util.ConcurrentModificationException.<init>:()void
    26: athrow        
    27: aload_2       
    28: ifnonnull     39
    31: new           #42         // java.util.NoSuchElementException
    34: dup           
    35: invokespecial #10         // java.util.NoSuchElementException.<init>:()void
    38: athrow        
    39: aload_0       
    40: aload_0       
    41: aload_2       
    42: dup_x1        
    43: putfield      #6          // current:java.util.HashMap$Node
    46: getfield      #11         // java.util.HashMap$Node.next:java.util.HashMap$Node
    49: dup_x1        
    50: putfield      #5          // next:java.util.HashMap$Node
    53: ifnonnull     98
    56: aload_0       
    57: getfield      #0          // this$0:java.util.HashMap
    60: getfield      #4          // java.util.HashMap.table:java.util.HashMap$Node[]
    63: dup           
    64: astore_1      
    65: ifnull        98
    68: aload_0       
    69: getfield      #7          // index:int
    72: aload_1       
    73: arraylength   
    74: if_icmpge     98
    77: aload_0       
    78: aload_1       
    79: aload_0       
    80: dup           
    81: getfield      #7          // index:int
    84: dup_x1        
    85: iconst_1      
    86: iadd          
    87: putfield      #7          // index:int
    90: aaload        
    91: dup_x1        
    92: putfield      #5          // next:java.util.HashMap$Node
    95: ifnull        68
    98: aload_2       
    99: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B96" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7154f04f slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction rsi|DWORD[_] = MOV [r10|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   10  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: r10|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = MOV [rsi|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction r11|DWORD[_] = MOV [rsi|DWORD[_] * 8 + 36] size: DWORD <|@ <|@
      nr   14  <|@ instruction r8|DWORD[_] = MOV [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   16  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: r10|QWORD[.] - - 
>@ <|@ instruction r9|DWORD[_] = MOV [r8|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   18  <|@ instruction CMPBRANCH (x: rax|DWORD, y: [r10|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B96 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B8" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   22  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B1 -> B8 falseDestination: B1 -> B3 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B7" "B6" 
    successors "B19" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction MOV (x: [r10|QWORD[.] + 24], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr   72  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr   74  <|@ instruction rsi|QWORD[*] = XOR (x: r10|QWORD[.], y: r8|QWORD[.]) size: QWORD <|@ <|@
      nr   76  <|@ instruction rax|QWORD = MOVE input: long[140438306553856|0x7fba57600000] <|@ <|@
      nr   78  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B8 -> B19 falseDestination: B8 -> B10 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B19" "B12" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction TESTBRANCH (x: r8|QWORD[.], y: r8|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B10 -> B19 falseDestination: B10 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B19" "B14" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   88  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rax|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B12 -> B19 falseDestination: B12 -> B14 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" "B12" "B14" "B18" "B17" 
    successors "B26" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B19 -> B26 falseDestination: B19 -> B21 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B19" "B21" "B25" "B24" 
    successors "B37" "B28" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: r9|DWORD[_]) size: DWORD <|@ <|@
      nr  194  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr  196  <|@ instruction rsi|QWORD[*] = XOR (x: r10|QWORD[.], y: rcx|QWORD[.]) size: QWORD <|@ <|@
      nr  198  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B26 -> B37 falseDestination: B26 -> B28 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B37" "B30" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B28 -> B37 falseDestination: B28 -> B30 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B37" "B32" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  208  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rax|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B30 -> B37 falseDestination: B30 -> B32 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B26" "B28" "B30" "B32" "B36" "B35" 
    successors "B38" "B95" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction TESTBRANCH (x: r9|DWORD[_], y: r9|DWORD[_]) trueDestinationProbability: 0.8674348032491496 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B95 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B37" "B68" "B87" "B58" "B38" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  606  <|@ instruction rax|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  608  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B95" 
    xhandlers
    flags 
    probability 4605988377658638555
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
stack: rcx|QWORD[.] 
locals: r10|QWORD[.] - r8|QWORD[.] 
>@ <|@ instruction r9|DWORD = MOV [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:53] <|@ <|@
      nr  270  <|@ instruction rbx|DWORD = MOV [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  272  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.9812627296505405 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B95 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B92" 
    xhandlers
    flags 
    probability 4605841980402785416
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B92 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B47" "B42" 
    xhandlers
    flags 
    probability 4605841980402785416
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction rcx|DWORD = INC rbx|DWORD size: DWORD <|@ <|@
      nr  282  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  284  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B40 -> B47 falseDestination: B40 -> B42 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B40" "B42" "B46" "B45" 
    successors "B58" "B49" 
    xhandlers
    flags 
    probability 4605841980402785416
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  340  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr  342  <|@ instruction rbx|DWORD[_] = MOV [r11|QWORD[.] + rbx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  344  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: rbx|DWORD[_]) size: DWORD <|@ <|@
      nr  346  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr  348  <|@ instruction rsi|QWORD[*] = XOR (x: r10|QWORD[.], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  350  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B47 -> B58 falseDestination: B47 -> B49 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B58" "B51" 
    xhandlers
    flags 
    probability 4605075304317034516
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction TESTBRANCH (x: rdi|QWORD[.], y: rdi|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B49 -> B58 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B58" "B53" 
    xhandlers
    flags 
    probability 4604385295839858706
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  358  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  360  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rax|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B51 -> B58 falseDestination: B51 -> B53 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B47" "B49" "B51" "B53" "B57" "B56" 
    successors "B59" "B95" 
    xhandlers
    flags 
    probability 4605841980402785416
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction TESTBRANCH (x: rbx|DWORD[_], y: rbx|DWORD[_]) trueDestinationProbability: 0.8739340370331193 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B95 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B68" 
    xhandlers
    flags 
    probability 4604875462812446756
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  420  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B59 -> B60 falseDestination: B59 -> B68 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B76" "B71" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617455682992505589
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  460  <|@ instruction rbx|DWORD = INC rcx|DWORD size: DWORD <|@ <|@
      nr  462  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  464  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B69 -> B76 falseDestination: B69 -> B71 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B69" "B71" "B75" "B74" 
    successors "B87" "B78" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617455682992505589
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  512  <|@ instruction rcx|DWORD[_] = MOV [r11|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  514  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr  516  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr  518  <|@ instruction rdi|QWORD[*] = XOR (x: r10|QWORD[.], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  520  <|@ instruction TESTCONSTBRANCH rdi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B76 -> B87 falseDestination: B76 -> B78 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B87" "B80" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4616878716535993821
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  524  <|@ instruction TESTBRANCH (x: rsi|QWORD[.], y: rsi|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B78 -> B87 falseDestination: B78 -> B80 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B87" "B82" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4616359446725133229
    begin_IR
      LIR
      nr  526  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  528  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  530  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rax|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B80 -> B87 falseDestination: B80 -> B82 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B76" "B78" "B80" "B82" "B86" "B85" 
    successors "B88" "B95" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617455682992505588
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  586  <|@ instruction TESTBRANCH (x: rcx|DWORD[_], y: rcx|DWORD[_]) trueDestinationProbability: 0.8739340370331193 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B95 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B68" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4616728324673108138
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  590  <|@ instruction JUMP ~[] destination: B88 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B59" "B61" "B88" 
    successors "B69" "B95" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4617565855081504432
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  456  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.9812627296505405 condition: > trueDestination: B68 -> B69 falseDestination: B68 -> B95 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B76" "B73" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602790951197370563
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  474  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  476  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B71 -> B76 falseDestination: B71 -> B73 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" "B75" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601979936891675385
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  482  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr  484  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B75 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601149105194298439
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  488  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  490  <|@ instruction MOV (x: [rdx|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  492  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  494  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  496  <|@ instruction JUMP ~[] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B87" "B84" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601149105194298438
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  546  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  548  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rax|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B82 -> B87 falseDestination: B82 -> B84 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" "B86" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586142809256908445
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction MOVB [rsi|QWORD[*] + rax|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  558  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  560  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rax|QWORD) size: QWORD <|@ <|@
      nr  562  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B84 -> B85 falseDestination: B84 -> B86 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4585544610434797044
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  568  <|@ instruction MOV (x: [rdx|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  570  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  572  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  574  <|@ instruction JUMP ~[] destination: B86 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586807474614810003
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  508  <|@ instruction JUMP ~[] destination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4571435612730574153
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  580  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  582  <|@ instruction JUMP ~[] destination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B65" 
    xhandlers
    flags 
    probability 4600371863185076260
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction rsi|DWORD = SUB (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  430  <|@ instruction rsi|QWORD = MOVSXD rsi|DWORD size: QWORD <|@ <|@
      nr  432  <|@ instruction rbx|QWORD = MOV rcx|DWORD size: DWORD <|@ <|@
      nr  434  <|@ instruction rsi|QWORD = ADD (x: rsi|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr  436  <|@ instruction rsi|QWORD = DEC rsi|QWORD size: QWORD <|@ <|@
      nr  438  <|@ instruction rbx|QWORD = MOV r9|DWORD size: DWORD <|@ <|@
      nr  440  <|@ instruction CMPBRANCH (x: rbx|QWORD, y: rsi|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B60 -> B61 falseDestination: B60 -> B65 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B68" "B65" 
    xhandlers
    flags 
    probability 4600371863185076260
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B61 -> B68 falseDestination: B61 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B8" "B5" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 24] size: QWORD <|@ <|@
      nr   32  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr   34  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B3 -> B8 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction rax|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   40  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr   42  <|@ instruction TESTBRANCH (x: rax|QWORD, y: rax|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   48  <|@ instruction MOV (x: [rcx|QWORD + rax|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr   50  <|@ instruction rsi|QWORD = LEA [rax|QWORD - 8] size: QWORD <|@ <|@
      nr   52  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   54  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B26" "B23" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  154  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  156  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B21 -> B26 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  162  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr  164  <|@ instruction TESTBRANCH (x: rcx|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  170  <|@ instruction MOV (x: [rbx|QWORD + rcx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  172  <|@ instruction rsi|QWORD = LEA [rcx|QWORD - 8] size: QWORD <|@ <|@
      nr  174  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  176  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B47" "B44" 
    xhandlers
    flags 
    probability 4590797829349172127
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  296  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  298  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  300  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B47 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4590184488480571407
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  304  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  306  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr  308  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4589632481698830759
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  312  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  314  <|@ instruction MOV (x: [rdx|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  316  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  318  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  320  <|@ instruction JUMP ~[] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" "B16" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  106  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rax|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B14 -> B19 falseDestination: B14 -> B16 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B37" "B34" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  226  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rax|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B32 -> B37 falseDestination: B32 -> B34 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B58" "B55" 
    xhandlers
    flags 
    probability 4589632481698830759
    begin_IR
      LIR
      nr  374  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  376  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  378  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rax|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B53 -> B58 falseDestination: B53 -> B55 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4574598919810748272
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ instruction MOVB [rsi|QWORD[*] + rax|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  388  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  390  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rax|QWORD) size: QWORD <|@ <|@
      nr  392  <|@ instruction TESTBRANCH (x: rdx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4573804030045041739
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  396  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  398  <|@ instruction MOV (x: [rbp|QWORD + rdx|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  400  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr  402  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  404  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   66  <|@ instruction JUMP ~[] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  188  <|@ instruction JUMP ~[] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction MOVB [rsi|QWORD[*] + rax|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  236  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  238  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rax|QWORD) size: QWORD <|@ <|@
      nr  240  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  244  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  246  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  248  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  250  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  252  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction MOVB [rsi|QWORD[*] + rax|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  116  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  118  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rax|QWORD) size: QWORD <|@ <|@
      nr  120  <|@ instruction TESTBRANCH (x: rcx|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  126  <|@ instruction MOV (x: [rbx|QWORD + rcx|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  128  <|@ instruction rsi|QWORD = LEA [rcx|QWORD - 8] size: QWORD <|@ <|@
      nr  130  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  132  <|@ instruction JUMP ~[] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4575482130661533308
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  336  <|@ instruction JUMP ~[] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  258  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  260  <|@ instruction JUMP ~[] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  138  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  140  <|@ instruction JUMP ~[] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4559498341397223717
    begin_IR
      LIR
      nr  406  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  408  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  410  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  412  <|@ instruction JUMP ~[] destination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B60" "B61" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  628  <|@ instruction MOV [r15|QWORD + 1156] y: -40475 size: DWORD <|@ <|@
      nr  630  <|@ instruction MOV [r15|QWORD + 1168] y: 1944 size: QWORD <|@ <|@
      nr  632  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 95]
stack: rdi|QWORD[.] 
locals: r10|QWORD[.] r11|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:95] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  612  <|@ instruction MOV [r15|QWORD + 1156] y: -59155 size: DWORD <|@ <|@
      nr  614  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  616  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: r10|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  634  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  636  <|@ instruction MOV [r15|QWORD + 1156] y: -36891 size: DWORD <|@ <|@
      nr  638  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  640  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
stack: rcx|QWORD[.] 
locals: r10|QWORD[.] - r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:53] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #5          // next:java.util.HashMap$Node
     4: astore_2      
     5: aload_0       
     6: getfield      #0          // this$0:java.util.HashMap
     9: getfield      #2          // java.util.HashMap.modCount:int
    12: aload_0       
    13: getfield      #3          // expectedModCount:int
    16: if_icmpeq     27
    19: new           #39         // java.util.ConcurrentModificationException
    22: dup           
    23: invokespecial #9          // java.util.ConcurrentModificationException.<init>:()void
    26: athrow        
    27: aload_2       
    28: ifnonnull     39
    31: new           #42         // java.util.NoSuchElementException
    34: dup           
    35: invokespecial #10         // java.util.NoSuchElementException.<init>:()void
    38: athrow        
    39: aload_0       
    40: aload_0       
    41: aload_2       
    42: dup_x1        
    43: putfield      #6          // current:java.util.HashMap$Node
    46: getfield      #11         // java.util.HashMap$Node.next:java.util.HashMap$Node
    49: dup_x1        
    50: putfield      #5          // next:java.util.HashMap$Node
    53: ifnonnull     98
    56: aload_0       
    57: getfield      #0          // this$0:java.util.HashMap
    60: getfield      #4          // java.util.HashMap.table:java.util.HashMap$Node[]
    63: dup           
    64: astore_1      
    65: ifnull        98
    68: aload_0       
    69: getfield      #7          // index:int
    72: aload_1       
    73: arraylength   
    74: if_icmpge     98
    77: aload_0       
    78: aload_1       
    79: aload_0       
    80: dup           
    81: getfield      #7          // index:int
    84: dup_x1        
    85: iconst_1      
    86: iadd          
    87: putfield      #7          // index:int
    90: aaload        
    91: dup_x1        
    92: putfield      #5          // next:java.util.HashMap$Node
    95: ifnull        68
    98: aload_2       
    99: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LocationMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B96" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7154f04f slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction rsi|DWORD[_] = MOV [r10|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   10  <|@ st <@st|@reference-map: [rsi:0, r10:0]
live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: r10|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = MOV [rsi|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction r11|DWORD[_] = MOV [rsi|DWORD[_] * 8 + 36] size: DWORD <|@ <|@
      nr   14  <|@ instruction r8|DWORD[_] = MOV [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   16  <|@ st <@st|@reference-map: [r8:0, r10:0, r11:0]
live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: r10|QWORD[.] - - 
>@ <|@ instruction r9|DWORD[_] = MOV [r8|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   18  <|@ instruction CMPBRANCH (x: rax|DWORD, y: [r10|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B96 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B8" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   22  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B1 -> B8 falseDestination: B1 -> B3 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B7" "B6" 
    successors "B19" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction MOV (x: [r10|QWORD[.] + 24], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr   72  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr   74  <|@ instruction rsi|QWORD[*] = XOR (x: r10|QWORD[.], y: r8|QWORD[.]) size: QWORD <|@ <|@
      nr   76  <|@ instruction rax|QWORD = MOVE input: long[140438306553856|0x7fba57600000] <|@ <|@
      nr   78  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B8 -> B19 falseDestination: B8 -> B10 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B19" "B12" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction TESTBRANCH (x: r8|QWORD[.], y: r8|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B10 -> B19 falseDestination: B10 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B19" "B14" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   88  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rax|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B12 -> B19 falseDestination: B12 -> B14 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" "B12" "B14" "B18" "B17" 
    successors "B26" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B19 -> B26 falseDestination: B19 -> B21 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B19" "B21" "B25" "B24" 
    successors "B37" "B28" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: r9|DWORD[_]) size: DWORD <|@ <|@
      nr  194  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr  196  <|@ instruction rsi|QWORD[*] = XOR (x: r10|QWORD[.], y: rcx|QWORD[.]) size: QWORD <|@ <|@
      nr  198  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B26 -> B37 falseDestination: B26 -> B28 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B37" "B30" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B28 -> B37 falseDestination: B28 -> B30 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B37" "B32" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  208  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rax|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B30 -> B37 falseDestination: B30 -> B32 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B26" "B28" "B30" "B32" "B36" "B35" 
    successors "B38" "B95" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction TESTBRANCH (x: r9|DWORD[_], y: r9|DWORD[_]) trueDestinationProbability: 0.8674348032491496 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B95 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B37" "B68" "B87" "B58" "B38" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  606  <|@ instruction rax|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  608  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B95" 
    xhandlers
    flags 
    probability 4605988377658638555
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ st <@st|@reference-map: [rcx:0, r8:0, r10:0, r11:0]
live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
stack: rcx|QWORD[.] 
locals: r10|QWORD[.] - r8|QWORD[.] 
>@ <|@ instruction r9|DWORD = MOV [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:53] <|@ <|@
      nr  270  <|@ instruction rbx|DWORD = MOV [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  272  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.9812627296505405 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B95 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B92" 
    xhandlers
    flags 
    probability 4605841980402785416
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B92 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B47" "B42" 
    xhandlers
    flags 
    probability 4605841980402785416
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction rcx|DWORD = INC rbx|DWORD size: DWORD <|@ <|@
      nr  282  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  284  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B40 -> B47 falseDestination: B40 -> B42 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B40" "B42" "B46" "B45" 
    successors "B58" "B49" 
    xhandlers
    flags 
    probability 4605841980402785416
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  340  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr  342  <|@ instruction rbx|DWORD[_] = MOV [r11|QWORD[.] + rbx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  344  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: rbx|DWORD[_]) size: DWORD <|@ <|@
      nr  346  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr  348  <|@ instruction rsi|QWORD[*] = XOR (x: r10|QWORD[.], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  350  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B47 -> B58 falseDestination: B47 -> B49 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B58" "B51" 
    xhandlers
    flags 
    probability 4605075304317034516
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction TESTBRANCH (x: rdi|QWORD[.], y: rdi|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B49 -> B58 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B58" "B53" 
    xhandlers
    flags 
    probability 4604385295839858706
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  358  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  360  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rax|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B51 -> B58 falseDestination: B51 -> B53 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B47" "B49" "B51" "B53" "B57" "B56" 
    successors "B59" "B95" 
    xhandlers
    flags 
    probability 4605841980402785416
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction TESTBRANCH (x: rbx|DWORD[_], y: rbx|DWORD[_]) trueDestinationProbability: 0.8739340370331193 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B95 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B68" 
    xhandlers
    flags 
    probability 4604875462812446756
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  420  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B59 -> B60 falseDestination: B59 -> B68 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B76" "B71" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617455682992505589
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  460  <|@ instruction rbx|DWORD = INC rcx|DWORD size: DWORD <|@ <|@
      nr  462  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  464  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B69 -> B76 falseDestination: B69 -> B71 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B69" "B71" "B75" "B74" 
    successors "B87" "B78" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617455682992505589
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  512  <|@ instruction rcx|DWORD[_] = MOV [r11|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  514  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr  516  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr  518  <|@ instruction rdi|QWORD[*] = XOR (x: r10|QWORD[.], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  520  <|@ instruction TESTCONSTBRANCH rdi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B76 -> B87 falseDestination: B76 -> B78 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B87" "B80" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4616878716535993821
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  524  <|@ instruction TESTBRANCH (x: rsi|QWORD[.], y: rsi|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B78 -> B87 falseDestination: B78 -> B80 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B87" "B82" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4616359446725133229
    begin_IR
      LIR
      nr  526  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  528  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  530  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rax|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B80 -> B87 falseDestination: B80 -> B82 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B76" "B78" "B80" "B82" "B86" "B85" 
    successors "B88" "B95" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617455682992505588
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  586  <|@ instruction TESTBRANCH (x: rcx|DWORD[_], y: rcx|DWORD[_]) trueDestinationProbability: 0.8739340370331193 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B95 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B68" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4616728324673108138
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  590  <|@ instruction JUMP ~[] destination: B88 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B59" "B61" "B88" 
    successors "B69" "B95" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4617565855081504432
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  456  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.9812627296505405 condition: > trueDestination: B68 -> B69 falseDestination: B68 -> B95 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B76" "B73" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602790951197370563
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  474  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  476  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B71 -> B76 falseDestination: B71 -> B73 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" "B75" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601979936891675385
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  482  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr  484  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B75 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601149105194298439
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  488  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  490  <|@ instruction MOV (x: [rdx|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  492  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  494  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  496  <|@ instruction JUMP ~[] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B87" "B84" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601149105194298438
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  546  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  548  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rax|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B82 -> B87 falseDestination: B82 -> B84 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" "B86" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586142809256908445
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction MOVB [rsi|QWORD[*] + rax|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  558  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  560  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rax|QWORD) size: QWORD <|@ <|@
      nr  562  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B84 -> B85 falseDestination: B84 -> B86 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4585544610434797044
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  568  <|@ instruction MOV (x: [rdx|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  570  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  572  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  574  <|@ instruction JUMP ~[] destination: B86 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586807474614810003
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  508  <|@ instruction JUMP ~[] destination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4571435612730574153
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  580  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  582  <|@ instruction JUMP ~[] destination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B65" 
    xhandlers
    flags 
    probability 4600371863185076260
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction rsi|DWORD = SUB (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  430  <|@ instruction rsi|QWORD = MOVSXD rsi|DWORD size: QWORD <|@ <|@
      nr  432  <|@ instruction rbx|QWORD = MOV rcx|DWORD size: DWORD <|@ <|@
      nr  434  <|@ instruction rsi|QWORD = ADD (x: rsi|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr  436  <|@ instruction rsi|QWORD = DEC rsi|QWORD size: QWORD <|@ <|@
      nr  438  <|@ instruction rbx|QWORD = MOV r9|DWORD size: DWORD <|@ <|@
      nr  440  <|@ instruction CMPBRANCH (x: rbx|QWORD, y: rsi|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B60 -> B61 falseDestination: B60 -> B65 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B68" "B65" 
    xhandlers
    flags 
    probability 4600371863185076260
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B61 -> B68 falseDestination: B61 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B8" "B5" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 24] size: QWORD <|@ <|@
      nr   32  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr   34  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B3 -> B8 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction rax|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   40  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr   42  <|@ instruction TESTBRANCH (x: rax|QWORD, y: rax|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   48  <|@ instruction MOV (x: [rcx|QWORD + rax|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr   50  <|@ instruction rsi|QWORD = LEA [rax|QWORD - 8] size: QWORD <|@ <|@
      nr   52  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   54  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B26" "B23" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  154  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  156  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B21 -> B26 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  162  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr  164  <|@ instruction TESTBRANCH (x: rcx|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  170  <|@ instruction MOV (x: [rbx|QWORD + rcx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  172  <|@ instruction rsi|QWORD = LEA [rcx|QWORD - 8] size: QWORD <|@ <|@
      nr  174  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  176  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B47" "B44" 
    xhandlers
    flags 
    probability 4590797829349172127
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  296  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  298  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  300  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B47 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4590184488480571407
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  304  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  306  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr  308  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4589632481698830759
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  312  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  314  <|@ instruction MOV (x: [rdx|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  316  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  318  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  320  <|@ instruction JUMP ~[] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" "B16" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  106  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rax|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B14 -> B19 falseDestination: B14 -> B16 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B37" "B34" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  226  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rax|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B32 -> B37 falseDestination: B32 -> B34 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B58" "B55" 
    xhandlers
    flags 
    probability 4589632481698830759
    begin_IR
      LIR
      nr  374  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  376  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  378  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rax|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B53 -> B58 falseDestination: B53 -> B55 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4574598919810748272
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ instruction MOVB [rsi|QWORD[*] + rax|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  388  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  390  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rax|QWORD) size: QWORD <|@ <|@
      nr  392  <|@ instruction TESTBRANCH (x: rdx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4573804030045041739
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  396  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  398  <|@ instruction MOV (x: [rbp|QWORD + rdx|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  400  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr  402  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  404  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   66  <|@ instruction JUMP ~[] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  188  <|@ instruction JUMP ~[] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction MOVB [rsi|QWORD[*] + rax|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  236  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  238  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rax|QWORD) size: QWORD <|@ <|@
      nr  240  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  244  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  246  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  248  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  250  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  252  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction MOVB [rsi|QWORD[*] + rax|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  116  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  118  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rax|QWORD) size: QWORD <|@ <|@
      nr  120  <|@ instruction TESTBRANCH (x: rcx|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  126  <|@ instruction MOV (x: [rbx|QWORD + rcx|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  128  <|@ instruction rsi|QWORD = LEA [rcx|QWORD - 8] size: QWORD <|@ <|@
      nr  130  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  132  <|@ instruction JUMP ~[] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4575482130661533308
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  336  <|@ instruction JUMP ~[] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  258  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  260  <|@ instruction JUMP ~[] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  138  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  140  <|@ instruction JUMP ~[] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4559498341397223717
    begin_IR
      LIR
      nr  406  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  408  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  410  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  412  <|@ instruction JUMP ~[] destination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B60" "B61" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  628  <|@ instruction MOV [r15|QWORD + 1156] y: -40475 size: DWORD <|@ <|@
      nr  630  <|@ instruction MOV [r15|QWORD + 1168] y: 1944 size: QWORD <|@ <|@
      nr  632  <|@ st <@st|@reference-map: [rdi:0, r8:0, r10:0, r11:0]
live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 95]
stack: rdi|QWORD[.] 
locals: r10|QWORD[.] r11|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:95] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  612  <|@ instruction MOV [r15|QWORD + 1156] y: -59155 size: DWORD <|@ <|@
      nr  614  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  616  <|@ st <@st|@reference-map: [r10:0]
live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: r10|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  634  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  636  <|@ instruction MOV [r15|QWORD + 1156] y: -36891 size: DWORD <|@ <|@
      nr  638  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  640  <|@ st <@st|@reference-map: [rcx:0, r8:0, r10:0]
live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
stack: rcx|QWORD[.] 
locals: r10|QWORD[.] - r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:53] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #5          // next:java.util.HashMap$Node
     4: astore_2      
     5: aload_0       
     6: getfield      #0          // this$0:java.util.HashMap
     9: getfield      #2          // java.util.HashMap.modCount:int
    12: aload_0       
    13: getfield      #3          // expectedModCount:int
    16: if_icmpeq     27
    19: new           #39         // java.util.ConcurrentModificationException
    22: dup           
    23: invokespecial #9          // java.util.ConcurrentModificationException.<init>:()void
    26: athrow        
    27: aload_2       
    28: ifnonnull     39
    31: new           #42         // java.util.NoSuchElementException
    34: dup           
    35: invokespecial #10         // java.util.NoSuchElementException.<init>:()void
    38: athrow        
    39: aload_0       
    40: aload_0       
    41: aload_2       
    42: dup_x1        
    43: putfield      #6          // current:java.util.HashMap$Node
    46: getfield      #11         // java.util.HashMap$Node.next:java.util.HashMap$Node
    49: dup_x1        
    50: putfield      #5          // next:java.util.HashMap$Node
    53: ifnonnull     98
    56: aload_0       
    57: getfield      #0          // this$0:java.util.HashMap
    60: getfield      #4          // java.util.HashMap.table:java.util.HashMap$Node[]
    63: dup           
    64: astore_1      
    65: ifnull        98
    68: aload_0       
    69: getfield      #7          // index:int
    72: aload_1       
    73: arraylength   
    74: if_icmpge     98
    77: aload_0       
    78: aload_1       
    79: aload_0       
    80: dup           
    81: getfield      #7          // index:int
    84: dup_x1        
    85: iconst_1      
    86: iadd          
    87: putfield      #7          // index:int
    90: aaload        
    91: dup_x1        
    92: putfield      #5          // next:java.util.HashMap$Node
    95: ifnull        68
    98: aload_2       
    99: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After FinalCodeAnalysisStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B96" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7154f04f slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction rsi|DWORD[_] = MOV [r10|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   10  <|@ st <@st|@reference-map: [rsi:0, r10:0]
live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: r10|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = MOV [rsi|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction r11|DWORD[_] = MOV [rsi|DWORD[_] * 8 + 36] size: DWORD <|@ <|@
      nr   14  <|@ instruction r8|DWORD[_] = MOV [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   16  <|@ st <@st|@reference-map: [r8:0, r10:0, r11:0]
live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: r10|QWORD[.] - - 
>@ <|@ instruction r9|DWORD[_] = MOV [r8|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   18  <|@ instruction CMPBRANCH (x: rax|DWORD, y: [r10|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B96 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B8" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   22  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B1 -> B8 falseDestination: B1 -> B3 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B7" "B6" 
    successors "B19" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction MOV (x: [r10|QWORD[.] + 24], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr   72  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr   74  <|@ instruction rsi|QWORD[*] = XOR (x: r10|QWORD[.], y: r8|QWORD[.]) size: QWORD <|@ <|@
      nr   76  <|@ instruction rax|QWORD = MOVE input: long[140438306553856|0x7fba57600000] <|@ <|@
      nr   78  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B8 -> B19 falseDestination: B8 -> B10 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B19" "B12" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction TESTBRANCH (x: r8|QWORD[.], y: r8|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B10 -> B19 falseDestination: B10 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B19" "B14" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   88  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rax|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B12 -> B19 falseDestination: B12 -> B14 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" "B12" "B14" "B18" "B17" 
    successors "B26" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B19 -> B26 falseDestination: B19 -> B21 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B19" "B21" "B25" "B24" 
    successors "B37" "B28" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: r9|DWORD[_]) size: DWORD <|@ <|@
      nr  194  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr  196  <|@ instruction rsi|QWORD[*] = XOR (x: r10|QWORD[.], y: rcx|QWORD[.]) size: QWORD <|@ <|@
      nr  198  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B26 -> B37 falseDestination: B26 -> B28 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B37" "B30" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B28 -> B37 falseDestination: B28 -> B30 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B37" "B32" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  208  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rax|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B30 -> B37 falseDestination: B30 -> B32 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B26" "B28" "B30" "B32" "B36" "B35" 
    successors "B38" "B95" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction TESTBRANCH (x: r9|DWORD[_], y: r9|DWORD[_]) trueDestinationProbability: 0.8674348032491496 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B95 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B37" "B68" "B87" "B58" "B38" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  606  <|@ instruction rax|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  608  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B95" 
    xhandlers
    flags 
    probability 4605988377658638555
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ st <@st|@reference-map: [rcx:0, r8:0, r10:0, r11:0]
live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
stack: rcx|QWORD[.] 
locals: r10|QWORD[.] - r8|QWORD[.] 
>@ <|@ instruction r9|DWORD = MOV [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:53] <|@ <|@
      nr  270  <|@ instruction rbx|DWORD = MOV [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  272  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.9812627296505405 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B95 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B92" 
    xhandlers
    flags 
    probability 4605841980402785416
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B92 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B47" "B42" 
    xhandlers
    flags 
    probability 4605841980402785416
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction rcx|DWORD = INC rbx|DWORD size: DWORD <|@ <|@
      nr  282  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  284  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B40 -> B47 falseDestination: B40 -> B42 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B40" "B42" "B46" "B45" 
    successors "B58" "B49" 
    xhandlers
    flags 
    probability 4605841980402785416
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  340  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr  342  <|@ instruction rbx|DWORD[_] = MOV [r11|QWORD[.] + rbx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  344  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: rbx|DWORD[_]) size: DWORD <|@ <|@
      nr  346  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr  348  <|@ instruction rsi|QWORD[*] = XOR (x: r10|QWORD[.], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  350  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B47 -> B58 falseDestination: B47 -> B49 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B58" "B51" 
    xhandlers
    flags 
    probability 4605075304317034516
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction TESTBRANCH (x: rdi|QWORD[.], y: rdi|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B49 -> B58 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B58" "B53" 
    xhandlers
    flags 
    probability 4604385295839858706
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  358  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  360  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rax|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B51 -> B58 falseDestination: B51 -> B53 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B47" "B49" "B51" "B53" "B57" "B56" 
    successors "B59" "B95" 
    xhandlers
    flags 
    probability 4605841980402785416
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction TESTBRANCH (x: rbx|DWORD[_], y: rbx|DWORD[_]) trueDestinationProbability: 0.8739340370331193 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B95 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B68" 
    xhandlers
    flags 
    probability 4604875462812446756
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  420  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B59 -> B60 falseDestination: B59 -> B68 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B76" "B71" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617455682992505589
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  460  <|@ instruction rbx|DWORD = INC rcx|DWORD size: DWORD <|@ <|@
      nr  462  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  464  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B69 -> B76 falseDestination: B69 -> B71 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B69" "B71" "B75" "B74" 
    successors "B87" "B78" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617455682992505589
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  512  <|@ instruction rcx|DWORD[_] = MOV [r11|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  514  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr  516  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr  518  <|@ instruction rdi|QWORD[*] = XOR (x: r10|QWORD[.], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  520  <|@ instruction TESTCONSTBRANCH rdi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B76 -> B87 falseDestination: B76 -> B78 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B87" "B80" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4616878716535993821
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  524  <|@ instruction TESTBRANCH (x: rsi|QWORD[.], y: rsi|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B78 -> B87 falseDestination: B78 -> B80 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B87" "B82" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4616359446725133229
    begin_IR
      LIR
      nr  526  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  528  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  530  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rax|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B80 -> B87 falseDestination: B80 -> B82 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B76" "B78" "B80" "B82" "B86" "B85" 
    successors "B88" "B95" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617455682992505588
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  586  <|@ instruction TESTBRANCH (x: rcx|DWORD[_], y: rcx|DWORD[_]) trueDestinationProbability: 0.8739340370331193 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B95 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B68" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4616728324673108138
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  590  <|@ instruction JUMP ~[] destination: B88 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B59" "B61" "B88" 
    successors "B69" "B95" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4617565855081504432
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  456  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.9812627296505405 condition: > trueDestination: B68 -> B69 falseDestination: B68 -> B95 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B76" "B73" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602790951197370563
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  474  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  476  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B71 -> B76 falseDestination: B71 -> B73 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" "B75" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601979936891675385
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  482  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr  484  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B75 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601149105194298439
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  488  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  490  <|@ instruction MOV (x: [rdx|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  492  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  494  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  496  <|@ instruction JUMP ~[] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B87" "B84" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601149105194298438
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  546  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  548  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rax|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B82 -> B87 falseDestination: B82 -> B84 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" "B86" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586142809256908445
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction MOVB [rsi|QWORD[*] + rax|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  558  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  560  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rax|QWORD) size: QWORD <|@ <|@
      nr  562  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B84 -> B85 falseDestination: B84 -> B86 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4585544610434797044
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  568  <|@ instruction MOV (x: [rdx|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  570  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  572  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  574  <|@ instruction JUMP ~[] destination: B86 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586807474614810003
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  508  <|@ instruction JUMP ~[] destination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4571435612730574153
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  580  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  582  <|@ instruction JUMP ~[] destination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B65" 
    xhandlers
    flags 
    probability 4600371863185076260
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction rsi|DWORD = SUB (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  430  <|@ instruction rsi|QWORD = MOVSXD rsi|DWORD size: QWORD <|@ <|@
      nr  432  <|@ instruction rbx|QWORD = MOV rcx|DWORD size: DWORD <|@ <|@
      nr  434  <|@ instruction rsi|QWORD = ADD (x: rsi|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr  436  <|@ instruction rsi|QWORD = DEC rsi|QWORD size: QWORD <|@ <|@
      nr  438  <|@ instruction rbx|QWORD = MOV r9|DWORD size: DWORD <|@ <|@
      nr  440  <|@ instruction CMPBRANCH (x: rbx|QWORD, y: rsi|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B60 -> B61 falseDestination: B60 -> B65 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B68" "B65" 
    xhandlers
    flags 
    probability 4600371863185076260
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B61 -> B68 falseDestination: B61 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B8" "B5" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 24] size: QWORD <|@ <|@
      nr   32  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr   34  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B3 -> B8 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction rax|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   40  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr   42  <|@ instruction TESTBRANCH (x: rax|QWORD, y: rax|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   48  <|@ instruction MOV (x: [rcx|QWORD + rax|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr   50  <|@ instruction rsi|QWORD = LEA [rax|QWORD - 8] size: QWORD <|@ <|@
      nr   52  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   54  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B26" "B23" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  154  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  156  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B21 -> B26 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  162  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr  164  <|@ instruction TESTBRANCH (x: rcx|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  170  <|@ instruction MOV (x: [rbx|QWORD + rcx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  172  <|@ instruction rsi|QWORD = LEA [rcx|QWORD - 8] size: QWORD <|@ <|@
      nr  174  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  176  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B47" "B44" 
    xhandlers
    flags 
    probability 4590797829349172127
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  296  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  298  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  300  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B47 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4590184488480571407
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  304  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  306  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3 <|@ <|@
      nr  308  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4589632481698830759
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  312  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  314  <|@ instruction MOV (x: [rdx|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  316  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  318  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  320  <|@ instruction JUMP ~[] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" "B16" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  106  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rax|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B14 -> B19 falseDestination: B14 -> B16 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B37" "B34" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  226  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rax|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B32 -> B37 falseDestination: B32 -> B34 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B58" "B55" 
    xhandlers
    flags 
    probability 4589632481698830759
    begin_IR
      LIR
      nr  374  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  376  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  378  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rax|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B53 -> B58 falseDestination: B53 -> B55 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4574598919810748272
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ instruction MOVB [rsi|QWORD[*] + rax|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  388  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  390  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rax|QWORD) size: QWORD <|@ <|@
      nr  392  <|@ instruction TESTBRANCH (x: rdx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4573804030045041739
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  396  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  398  <|@ instruction MOV (x: [rbp|QWORD + rdx|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  400  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr  402  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  404  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   66  <|@ instruction JUMP ~[] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  188  <|@ instruction JUMP ~[] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction MOVB [rsi|QWORD[*] + rax|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  236  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  238  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rax|QWORD) size: QWORD <|@ <|@
      nr  240  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  244  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  246  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  248  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  250  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  252  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction MOVB [rsi|QWORD[*] + rax|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  116  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  118  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rax|QWORD) size: QWORD <|@ <|@
      nr  120  <|@ instruction TESTBRANCH (x: rcx|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  126  <|@ instruction MOV (x: [rbx|QWORD + rcx|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  128  <|@ instruction rsi|QWORD = LEA [rcx|QWORD - 8] size: QWORD <|@ <|@
      nr  130  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  132  <|@ instruction JUMP ~[] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4575482130661533308
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  336  <|@ instruction JUMP ~[] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  258  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  260  <|@ instruction JUMP ~[] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  138  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  140  <|@ instruction JUMP ~[] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4559498341397223717
    begin_IR
      LIR
      nr  406  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  408  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  410  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  412  <|@ instruction JUMP ~[] destination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B60" "B61" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  628  <|@ instruction MOV [r15|QWORD + 1156] y: -40475 size: DWORD <|@ <|@
      nr  630  <|@ instruction MOV [r15|QWORD + 1168] y: 1944 size: QWORD <|@ <|@
      nr  632  <|@ st <@st|@reference-map: [rdi:0, r8:0, r10:0, r11:0]
live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 95]
stack: rdi|QWORD[.] 
locals: r10|QWORD[.] r11|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:95] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  612  <|@ instruction MOV [r15|QWORD + 1156] y: -59155 size: DWORD <|@ <|@
      nr  614  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  616  <|@ st <@st|@reference-map: [r10:0]
live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: r10|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  634  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  636  <|@ instruction MOV [r15|QWORD + 1156] y: -36891 size: DWORD <|@ <|@
      nr  638  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  640  <|@ st <@st|@reference-map: [rcx:0, r8:0, r10:0]
live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
stack: rcx|QWORD[.] 
locals: r10|QWORD[.] - r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:53] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #5          // next:java.util.HashMap$Node
     4: astore_2      
     5: aload_0       
     6: getfield      #0          // this$0:java.util.HashMap
     9: getfield      #2          // java.util.HashMap.modCount:int
    12: aload_0       
    13: getfield      #3          // expectedModCount:int
    16: if_icmpeq     27
    19: new           #39         // java.util.ConcurrentModificationException
    22: dup           
    23: invokespecial #9          // java.util.ConcurrentModificationException.<init>:()void
    26: athrow        
    27: aload_2       
    28: ifnonnull     39
    31: new           #42         // java.util.NoSuchElementException
    34: dup           
    35: invokespecial #10         // java.util.NoSuchElementException.<init>:()void
    38: athrow        
    39: aload_0       
    40: aload_0       
    41: aload_2       
    42: dup_x1        
    43: putfield      #6          // current:java.util.HashMap$Node
    46: getfield      #11         // java.util.HashMap$Node.next:java.util.HashMap$Node
    49: dup_x1        
    50: putfield      #5          // next:java.util.HashMap$Node
    53: ifnonnull     98
    56: aload_0       
    57: getfield      #0          // this$0:java.util.HashMap
    60: getfield      #4          // java.util.HashMap.table:java.util.HashMap$Node[]
    63: dup           
    64: astore_1      
    65: ifnull        98
    68: aload_0       
    69: getfield      #7          // index:int
    72: aload_1       
    73: arraylength   
    74: if_icmpge     98
    77: aload_0       
    78: aload_1       
    79: aload_0       
    80: dup           
    81: getfield      #7          // index:int
    84: dup_x1        
    85: iconst_1      
    86: iadd          
    87: putfield      #7          // index:int
    90: aaload        
    91: dup_x1        
    92: putfield      #5          // next:java.util.HashMap$Node
    95: ifnull        68
    98: aload_2       
    99: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849bc000000fbb97f00004d03d44d33e4493bc20f85e3ffffff66669089842400c0feff4883ec189041817f20000000000f856004000048896c24104c8bd6418b721c8b04f518000000448b1cf524000000458b4214468b0cc518000000413b420c0f85e903000041807f40000f852b0200004589421849c1e003498bf24933f048b800006057ba7f000048f7c60000c0ff0f841a0000004d85c00f8411000000498bf248c1ee09803c06020f858b02000041807f40000f851602000045894a14418bc948c1e103498bf24833f148f7c60000c0ff0f841a0000004885c90f8411000000498bf248c1ee09803c06020f855c0200004585c90f841a000000498bc0488b6c24104883c418493ba7500400000f8790030000c3468b0cdd0c000000418b5a10443bcb7ed5443bcb0f86420300008bcbffc141894a1041807f40000f85c301000049c1e303418b5c9b1041895a148bfb48c1e703498bf24833f748f7c60000c0ff0f841a0000004885ff0f8411000000498bf248c1ee09803c06020f85e001000085db0f8571ffffff443bc90f8fde000000e95b00000066908bd9ffc341895a1041807f40000f8550000000418b4c8b1041894a148bf148c1e603498bfa4833fe48f7c70000c0ff0f841a0000004885f60f8411000000498bf248c1ee09803c06020f854200000085c90f850affffff8bcb443bc97fa2e9fefeffff498d72148b3685f674a6498b7f2848c1e6034885ff0f8445000000498b57384889743af8488d77f849897728eb82f083042400803c060074b3c6040600498b7f484803f04885ff0f841d000000498b57584889743af8488d77f849897748eb8ce800000000e946ffffffe800000000e978ffffff418bf12bf14863f68bd94803f348ffce418bd9483bde0f869e010000443bc90f875dffffffe990010000498d72188b3685f60f84c7fdffff498b472848c1e6034885c00f84e1000000498b4f3848897401f8488d70f849897728e9a0fdffff498d72148b3685f60f84dcfdffff498b4f2848c1e6034885c90f84b6000000498b5f384889740bf8488d71f849897728e9b5fdffff498d72148b3685f60f842ffeffff498b7f2848c1e6034885ff0f84df000000498b57384889743af8488d77f849897728e908fefffff083042400803c06000f8466fdffffe98b000000f083042400803c06000f8495fdffffe94d000000f083042400803c06000f8411feffffc6040600498b57484803f04885d20f849c000000498b6f5848897415f8488d72f849897748e9e7fdffffe800000000e9cbfcffffe800000000e90bfdffffc6040600498b5f484803f04885db0f844a000000498b7f584889741ff8488d73f849897748e919fdffffc6040600498b4f484803f04885c90f842a000000498b5f584889740bf8488d71f849897748e9acfcffffe800000000e935fdffffe800000000e9dbfcffffe800000000e98efcffffe800000000e957fdffff41c78784040000e561ffff49c7879004000098070000e8000000000f1f84000000000041c78784040000ed18ffff49c7879004000014000000e8000000000f1f84000000000041c78784040000e56fffff49c7879004000000000000e8000000000f1f84000000000048896c2410e800000000e991fbfffff4488d0d5cfcffff49898f68040000e943fbfffff441c78784040000f591ffff49c7879004000000000000e8000000000f1f84000000000041c78784040000f585ffff49c7879004000000000000e8000000000f1f84000000000041c78784040000f579ffff49c7879004000000000000e8000000000f1f840000000000e800000000f4e800000000f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7fba7b6335c8, value=140438496891008]:0x7fba62b85080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 63 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7154f04f slotKind: QWORD  <||@
  Comment 63 6 r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 66 8 rsi|DWORD[_] = MOV [r10|QWORD[.] + 28] size: DWORD  <||@
  Comment 70 10 rax|DWORD = MOV [rsi|DWORD[_] * 8 + 24] size: DWORD state [bci:0]  <||@
  Comment 70 [rsi:0, r10:0]at java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |r10|QWORD[.]  |-  |-   <||@
  Comment 70 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 77 12 r11|DWORD[_] = MOV [rsi|DWORD[_] * 8 + 36] size: DWORD  <||@
  Comment 85 14 r8|DWORD[_] = MOV [r10|QWORD[.] + 20] size: DWORD  <||@
  Comment 89 16 r9|DWORD[_] = MOV [r8|DWORD[_] * 8 + 24] size: DWORD state [bci:0]  <||@
  Comment 89 [r8:0, r10:0, r11:0]at java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |r10|QWORD[.]  |-  |-   <||@
  Comment 89 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 97 18 CMPBRANCH (x: rax|DWORD, y: [r10|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B96 size: DWORD  <||@
  Comment 107 block B1 null  <||@
  Comment 107 20 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 107 22 CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B1 -> B8 falseDestination: B1 -> B3 y: 0 size: BYTE inlinedY: null  <||@
  Comment 118 block B8 null  <||@
  Comment 118 68 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 118 70 MOV (x: [r10|QWORD[.] + 24], y: r8|DWORD[_]) size: DWORD  <||@
  Comment 122 72 r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3  <||@
  Comment 126 74 rsi|QWORD[*] = XOR (x: r10|QWORD[.], y: r8|QWORD[.]) size: QWORD  <||@
  Comment 132 76 rax|QWORD = MOVE input: long[140438306553856|0x7fba57600000]  <||@
  Comment 142 78 TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B8 -> B19 falseDestination: B8 -> B10 y: -4194304 size: QWORD  <||@
  Comment 155 block B10 null  <||@
  Comment 155 80 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 155 82 TESTBRANCH (x: r8|QWORD[.], y: r8|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B10 -> B19 falseDestination: B10 -> B12 size: QWORD  <||@
  Comment 164 block B12 null  <||@
  Comment 164 84 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 164 86 rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD  <||@
  Comment 171 88 CMPCONSTBRANCH [rsi|QWORD[*] + rax|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B12 -> B19 falseDestination: B12 -> B14 y: 2 size: BYTE inlinedY: null  <||@
  Comment 181 block B19 null  <||@
  Comment 181 142 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 181 144 CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B19 -> B26 falseDestination: B19 -> B21 y: 0 size: BYTE inlinedY: null  <||@
  Comment 192 block B26 null  <||@
  Comment 192 190 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 192 192 MOV (x: [r10|QWORD[.] + 20], y: r9|DWORD[_]) size: DWORD  <||@
  Comment 196 194 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3  <||@
  Comment 203 196 rsi|QWORD[*] = XOR (x: r10|QWORD[.], y: rcx|QWORD[.]) size: QWORD  <||@
  Comment 209 198 TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B26 -> B37 falseDestination: B26 -> B28 y: -4194304 size: QWORD  <||@
  Comment 222 block B28 null  <||@
  Comment 222 200 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 222 202 TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B28 -> B37 falseDestination: B28 -> B30 size: QWORD  <||@
  Comment 231 block B30 null  <||@
  Comment 231 204 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 231 206 rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD  <||@
  Comment 238 208 CMPCONSTBRANCH [rsi|QWORD[*] + rax|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B30 -> B37 falseDestination: B30 -> B32 y: 2 size: BYTE inlinedY: null  <||@
  Comment 248 block B37 null  <||@
  Comment 248 262 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 248 264 TESTBRANCH (x: r9|DWORD[_], y: r9|DWORD[_]) trueDestinationProbability: 0.8674348032491496 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B95 size: DWORD  <||@
  Comment 257 block B95 null  <||@
  Comment 257 604 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 257 606 rax|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 260 608 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9  <||@
  Comment 269 POLL_RETURN_FAR  <||@
  Comment 283 block B38 null  <||@
  Comment 283 266 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 283 268 r9|DWORD = MOV [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:53]  <||@
  Comment 283 [rcx:0, r8:0, r10:0, r11:0]at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53, duringCall: false, rethrow: false]
              |0             |1  |2           
     locals:  |r10|QWORD[.]  |-  |r8|QWORD[.] 
     stack:   |rcx|QWORD[.]  |   |              <||@
  Comment 283 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 291 270 rbx|DWORD = MOV [r10|QWORD[.] + 16] size: DWORD  <||@
  Comment 295 272 CMPBRANCH (x: r9|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.9812627296505405 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B95 size: DWORD  <||@
  Comment 300 block B39 null  <||@
  Comment 300 274 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 300 276 CMPBRANCH (x: r9|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B92 size: DWORD  <||@
  Comment 309 block B40 null  <||@
  Comment 309 278 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 309 280 rcx|DWORD = INC rbx|DWORD size: DWORD  <||@
  Comment 313 282 MOV (x: [r10|QWORD[.] + 16], y: rcx|DWORD) size: DWORD  <||@
  Comment 317 284 CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B40 -> B47 falseDestination: B40 -> B42 y: 0 size: BYTE inlinedY: null  <||@
  Comment 328 block B47 null  <||@
  Comment 328 338 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 328 340 r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3  <||@
  Comment 332 342 rbx|DWORD[_] = MOV [r11|QWORD[.] + rbx|DWORD * 4 + 16] size: DWORD  <||@
  Comment 337 344 MOV (x: [r10|QWORD[.] + 20], y: rbx|DWORD[_]) size: DWORD  <||@
  Comment 341 346 rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3  <||@
  Comment 347 348 rsi|QWORD[*] = XOR (x: r10|QWORD[.], y: rdi|QWORD[.]) size: QWORD  <||@
  Comment 353 350 TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B47 -> B58 falseDestination: B47 -> B49 y: -4194304 size: QWORD  <||@
  Comment 366 block B49 null  <||@
  Comment 366 352 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 366 354 TESTBRANCH (x: rdi|QWORD[.], y: rdi|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B49 -> B58 falseDestination: B49 -> B51 size: QWORD  <||@
  Comment 375 block B51 null  <||@
  Comment 375 356 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 375 358 rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD  <||@
  Comment 382 360 CMPCONSTBRANCH [rsi|QWORD[*] + rax|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B51 -> B58 falseDestination: B51 -> B53 y: 2 size: BYTE inlinedY: null  <||@
  Comment 392 block B58 null  <||@
  Comment 392 414 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 392 416 TESTBRANCH (x: rbx|DWORD[_], y: rbx|DWORD[_]) trueDestinationProbability: 0.8739340370331193 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B95 size: DWORD  <||@
  Comment 400 block B59 null  <||@
  Comment 400 418 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 400 420 CMPBRANCH (x: r9|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B59 -> B60 falseDestination: B59 -> B68 size: DWORD  <||@
  Comment 414 block B69 loop 0 depth 1 header:27|LoopBegin  <||@
  Comment 414 458 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 416 460 rbx|DWORD = INC rcx|DWORD size: DWORD  <||@
  Comment 420 462 MOV (x: [r10|QWORD[.] + 16], y: rbx|DWORD) size: DWORD  <||@
  Comment 424 464 CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B69 -> B76 falseDestination: B69 -> B71 y: 0 size: BYTE inlinedY: null  <||@
  Comment 435 block B76 loop 0 depth 1 header:27|LoopBegin  <||@
  Comment 435 510 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 435 512 rcx|DWORD[_] = MOV [r11|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD  <||@
  Comment 440 514 MOV (x: [r10|QWORD[.] + 20], y: rcx|DWORD[_]) size: DWORD  <||@
  Comment 444 516 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3  <||@
  Comment 450 518 rdi|QWORD[*] = XOR (x: r10|QWORD[.], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 456 520 TESTCONSTBRANCH rdi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B76 -> B87 falseDestination: B76 -> B78 y: -4194304 size: QWORD  <||@
  Comment 469 block B78 loop 0 depth 1 header:27|LoopBegin  <||@
  Comment 469 522 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 469 524 TESTBRANCH (x: rsi|QWORD[.], y: rsi|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B78 -> B87 falseDestination: B78 -> B80 size: QWORD  <||@
  Comment 478 block B80 loop 0 depth 1 header:27|LoopBegin  <||@
  Comment 478 526 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 478 528 rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD  <||@
  Comment 485 530 CMPCONSTBRANCH [rsi|QWORD[*] + rax|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B80 -> B87 falseDestination: B80 -> B82 y: 2 size: BYTE inlinedY: null  <||@
  Comment 495 block B87 loop 0 depth 1 header:27|LoopBegin  <||@
  Comment 495 584 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 495 586 TESTBRANCH (x: rcx|DWORD[_], y: rcx|DWORD[_]) trueDestinationProbability: 0.8739340370331193 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B95 size: DWORD  <||@
  Comment 503 block B88 loop 0 depth 1 header:27|LoopBegin  <||@
  Comment 503 588 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 503 -1 rcx|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 505 590 JUMP ~[] destination: B88 -> B68  <||@
  Comment 505 block B68 loop 0 depth 1 header:27|LoopBegin  <||@
  Comment 505 454 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 505 456 CMPBRANCH (x: r9|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.9812627296505405 condition: > trueDestination: B68 -> B69 falseDestination: B68 -> B95 size: DWORD  <||@
  Comment 515 block B71 loop 0 depth 1 header:27|LoopBegin  <||@
  Comment 515 470 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 515 472 rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD  <||@
  Comment 519 474 rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD  <||@
  Comment 521 476 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B71 -> B76 falseDestination: B71 -> B73 size: DWORD  <||@
  Comment 525 block B73 loop 0 depth 1 header:27|LoopBegin  <||@
  Comment 525 478 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 525 480 rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD  <||@
  Comment 529 482 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3  <||@
  Comment 533 484 TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B75 size: QWORD  <||@
  Comment 542 block B75 loop 0 depth 1 header:27|LoopBegin  <||@
  Comment 542 486 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 542 488 rdx|QWORD = MOV [r15|QWORD + 56] size: QWORD  <||@
  Comment 546 490 MOV (x: [rdx|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 551 492 rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD  <||@
  Comment 555 494 MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD  <||@
  Comment 559 496 JUMP ~[] destination: B75 -> B76  <||@
  Comment 561 block B82 loop 0 depth 1 header:27|LoopBegin  <||@
  Comment 561 544 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 561 546 MEMBAR barriers: 4  <||@
  Comment 566 548 CMPCONSTBRANCH [rsi|QWORD[*] + rax|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B82 -> B87 falseDestination: B82 -> B84 y: 0 size: BYTE inlinedY: null  <||@
  Comment 572 block B84 loop 0 depth 1 header:27|LoopBegin  <||@
  Comment 572 554 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 572 556 MOVB [rsi|QWORD[*] + rax|QWORD * 1] y: 0 size: BYTE  <||@
  Comment 576 558 rdi|QWORD = MOV [r15|QWORD + 72] size: QWORD  <||@
  Comment 580 560 rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rax|QWORD) size: QWORD  <||@
  Comment 583 562 TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B84 -> B85 falseDestination: B84 -> B86 size: QWORD  <||@
  Comment 592 block B86 loop 0 depth 1 header:27|LoopBegin  <||@
  Comment 592 564 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 592 566 rdx|QWORD = MOV [r15|QWORD + 88] size: QWORD  <||@
  Comment 596 568 MOV (x: [rdx|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD  <||@
  Comment 601 570 rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD  <||@
  Comment 605 572 MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD  <||@
  Comment 609 574 JUMP ~[] destination: B86 -> B87  <||@
  Comment 611 block B74 loop 0 depth 1 header:27|LoopBegin  <||@
  Comment 611 502 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 611 506 - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]  <||@
  Comment 611 {Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]}  <||@
  Comment 616 508 JUMP ~[] destination: B74 -> B76  <||@
  Comment 621 block B85 loop 0 depth 1 header:27|LoopBegin  <||@
  Comment 621 576 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 621 578 rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 621 580 - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]  <||@
  Comment 621 {Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]}  <||@
  Comment 626 582 JUMP ~[] destination: B85 -> B87  <||@
  Comment 631 block B60 null  <||@
  Comment 631 426 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 631 428 rsi|DWORD = SUB (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 636 430 rsi|QWORD = MOVSXD rsi|DWORD size: QWORD  <||@
  Comment 639 432 rbx|QWORD = MOV rcx|DWORD size: DWORD  <||@
  Comment 641 434 rsi|QWORD = ADD (x: rsi|QWORD, y: rbx|QWORD) size: QWORD  <||@
  Comment 644 436 rsi|QWORD = DEC rsi|QWORD size: QWORD  <||@
  Comment 647 438 rbx|QWORD = MOV r9|DWORD size: DWORD  <||@
  Comment 650 440 CMPBRANCH (x: rbx|QWORD, y: rsi|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B60 -> B61 falseDestination: B60 -> B65 size: QWORD  <||@
  Comment 659 block B61 null  <||@
  Comment 659 442 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 659 444 CMPBRANCH (x: r9|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B61 -> B68 falseDestination: B61 -> B65 size: DWORD  <||@
  Comment 673 block B3 null  <||@
  Comment 673 28 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 673 30 rsi|QWORD[.+] = LEA [r10|QWORD[.] + 24] size: QWORD  <||@
  Comment 677 32 rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD  <||@
  Comment 679 34 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B3 -> B8 falseDestination: B3 -> B5 size: DWORD  <||@
  Comment 687 block B5 null  <||@
  Comment 687 36 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 687 38 rax|QWORD = MOV [r15|QWORD + 40] size: QWORD  <||@
  Comment 691 40 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3  <||@
  Comment 695 42 TESTBRANCH (x: rax|QWORD, y: rax|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD  <||@
  Comment 704 block B7 null  <||@
  Comment 704 44 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 704 46 rcx|QWORD = MOV [r15|QWORD + 56] size: QWORD  <||@
  Comment 708 48 MOV (x: [rcx|QWORD + rax|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 713 50 rsi|QWORD = LEA [rax|QWORD - 8] size: QWORD  <||@
  Comment 717 52 MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD  <||@
  Comment 721 54 JUMP ~[] destination: B7 -> B8  <||@
  Comment 726 block B21 null  <||@
  Comment 726 150 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 726 152 rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD  <||@
  Comment 730 154 rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD  <||@
  Comment 732 156 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B21 -> B26 falseDestination: B21 -> B23 size: DWORD  <||@
  Comment 740 block B23 null  <||@
  Comment 740 158 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 740 160 rcx|QWORD = MOV [r15|QWORD + 40] size: QWORD  <||@
  Comment 744 162 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3  <||@
  Comment 748 164 TESTBRANCH (x: rcx|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: QWORD  <||@
  Comment 757 block B25 null  <||@
  Comment 757 166 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 757 168 rbx|QWORD = MOV [r15|QWORD + 56] size: QWORD  <||@
  Comment 761 170 MOV (x: [rbx|QWORD + rcx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 766 172 rsi|QWORD = LEA [rcx|QWORD - 8] size: QWORD  <||@
  Comment 770 174 MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD  <||@
  Comment 774 176 JUMP ~[] destination: B25 -> B26  <||@
  Comment 779 block B42 null  <||@
  Comment 779 294 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 779 296 rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD  <||@
  Comment 783 298 rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD  <||@
  Comment 785 300 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B47 falseDestination: B42 -> B44 size: DWORD  <||@
  Comment 793 block B44 null  <||@
  Comment 793 302 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 793 304 rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD  <||@
  Comment 797 306 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3  <||@
  Comment 801 308 TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: QWORD  <||@
  Comment 810 block B46 null  <||@
  Comment 810 310 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 810 312 rdx|QWORD = MOV [r15|QWORD + 56] size: QWORD  <||@
  Comment 814 314 MOV (x: [rdx|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 819 316 rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD  <||@
  Comment 823 318 MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD  <||@
  Comment 827 320 JUMP ~[] destination: B46 -> B47  <||@
  Comment 832 block B14 null  <||@
  Comment 832 102 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 832 104 MEMBAR barriers: 4  <||@
  Comment 837 106 CMPCONSTBRANCH [rsi|QWORD[*] + rax|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B14 -> B19 falseDestination: B14 -> B16 y: 0 size: BYTE inlinedY: null  <||@
  Comment 852 block B32 null  <||@
  Comment 852 222 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 852 224 MEMBAR barriers: 4  <||@
  Comment 857 226 CMPCONSTBRANCH [rsi|QWORD[*] + rax|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B32 -> B37 falseDestination: B32 -> B34 y: 0 size: BYTE inlinedY: null  <||@
  Comment 872 block B53 null  <||@
  Comment 872 374 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 872 376 MEMBAR barriers: 4  <||@
  Comment 877 378 CMPCONSTBRANCH [rsi|QWORD[*] + rax|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B53 -> B58 falseDestination: B53 -> B55 y: 0 size: BYTE inlinedY: null  <||@
  Comment 887 block B55 null  <||@
  Comment 887 384 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 887 386 MOVB [rsi|QWORD[*] + rax|QWORD * 1] y: 0 size: BYTE  <||@
  Comment 891 388 rdx|QWORD = MOV [r15|QWORD + 72] size: QWORD  <||@
  Comment 895 390 rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rax|QWORD) size: QWORD  <||@
  Comment 898 392 TESTBRANCH (x: rdx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: QWORD  <||@
  Comment 907 block B57 null  <||@
  Comment 907 394 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 907 396 rbp|QWORD = MOV [r15|QWORD + 88] size: QWORD  <||@
  Comment 911 398 MOV (x: [rbp|QWORD + rdx|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD  <||@
  Comment 916 400 rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD  <||@
  Comment 920 402 MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD  <||@
  Comment 924 404 JUMP ~[] destination: B57 -> B58  <||@
  Comment 929 block B6 null  <||@
  Comment 929 60 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 929 64 - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]  <||@
  Comment 929 {Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]}  <||@
  Comment 934 66 JUMP ~[] destination: B6 -> B8  <||@
  Comment 939 block B24 null  <||@
  Comment 939 182 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 939 186 - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]  <||@
  Comment 939 {Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]}  <||@
  Comment 944 188 JUMP ~[] destination: B24 -> B26  <||@
  Comment 949 block B34 null  <||@
  Comment 949 232 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 949 234 MOVB [rsi|QWORD[*] + rax|QWORD * 1] y: 0 size: BYTE  <||@
  Comment 953 236 rbx|QWORD = MOV [r15|QWORD + 72] size: QWORD  <||@
  Comment 957 238 rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rax|QWORD) size: QWORD  <||@
  Comment 960 240 TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: QWORD  <||@
  Comment 969 block B36 null  <||@
  Comment 969 242 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 969 244 rdi|QWORD = MOV [r15|QWORD + 88] size: QWORD  <||@
  Comment 973 246 MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD  <||@
  Comment 978 248 rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD  <||@
  Comment 982 250 MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD  <||@
  Comment 986 252 JUMP ~[] destination: B36 -> B37  <||@
  Comment 991 block B16 null  <||@
  Comment 991 112 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 991 114 MOVB [rsi|QWORD[*] + rax|QWORD * 1] y: 0 size: BYTE  <||@
  Comment 995 116 rcx|QWORD = MOV [r15|QWORD + 72] size: QWORD  <||@
  Comment 999 118 rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rax|QWORD) size: QWORD  <||@
  Comment 1002 120 TESTBRANCH (x: rcx|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: QWORD  <||@
  Comment 1011 block B18 null  <||@
  Comment 1011 122 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1011 124 rbx|QWORD = MOV [r15|QWORD + 88] size: QWORD  <||@
  Comment 1015 126 MOV (x: [rbx|QWORD + rcx|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD  <||@
  Comment 1020 128 rsi|QWORD = LEA [rcx|QWORD - 8] size: QWORD  <||@
  Comment 1024 130 MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD  <||@
  Comment 1028 132 JUMP ~[] destination: B18 -> B19  <||@
  Comment 1033 block B45 null  <||@
  Comment 1033 330 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1033 334 - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]  <||@
  Comment 1033 {Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]}  <||@
  Comment 1038 336 JUMP ~[] destination: B45 -> B47  <||@
  Comment 1043 block B35 null  <||@
  Comment 1043 254 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1043 256 rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 1043 258 - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]  <||@
  Comment 1043 {Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]}  <||@
  Comment 1048 260 JUMP ~[] destination: B35 -> B37  <||@
  Comment 1053 block B17 null  <||@
  Comment 1053 134 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1053 136 rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 1053 138 - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]  <||@
  Comment 1053 {Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]}  <||@
  Comment 1058 140 JUMP ~[] destination: B17 -> B19  <||@
  Comment 1063 block B56 null  <||@
  Comment 1063 406 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1063 408 rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 1063 410 - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]  <||@
  Comment 1063 {Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]}  <||@
  Comment 1068 412 JUMP ~[] destination: B56 -> B58  <||@
  Comment 1073 block B65 null  <||@
  Comment 1073 626 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1073 628 MOV [r15|QWORD + 1156] y: -40475 size: DWORD  <||@
  Comment 1084 630 MOV [r15|QWORD + 1168] y: 1944 size: QWORD  <||@
  Comment 1095 632 DEOPT info [bci:95]  <||@
  Comment 1095 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7fba7b6335a8, value=140438496915834]:0x7fba62b8b17a}  <||@
  Comment 1100 [rdi:0, r8:0, r10:0, r11:0]at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 95, duringCall: false, rethrow: false]
              |0             |1             |2           
     locals:  |r10|QWORD[.]  |r11|QWORD[.]  |r8|QWORD[.] 
     stack:   |rdi|QWORD[.]  |              |              <||@
  Comment 1108 block B96 null  <||@
  Comment 1108 610 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1108 612 MOV [r15|QWORD + 1156] y: -59155 size: DWORD  <||@
  Comment 1119 614 MOV [r15|QWORD + 1168] y: 20 size: QWORD  <||@
  Comment 1130 616 DEOPT info [bci:0]  <||@
  Comment 1130 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7fba7b6335a8, value=140438496915834]:0x7fba62b8b17a}  <||@
  Comment 1135 [r10:0]at java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |r10|QWORD[.]  |-  |-   <||@
  Comment 1143 block B92 null  <||@
  Comment 1143 634 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1143 636 MOV [r15|QWORD + 1156] y: -36891 size: DWORD  <||@
  Comment 1154 638 MOV [r15|QWORD + 1168] y: 0 size: QWORD  <||@
  Comment 1165 640 DEOPT info [bci:53]  <||@
  Comment 1165 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7fba7b6335a8, value=140438496915834]:0x7fba62b8b17a}  <||@
  Comment 1170 [rcx:0, r8:0, r10:0]at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53, duringCall: false, rethrow: false]
              |0             |1  |2           
     locals:  |r10|QWORD[.]  |-  |r8|QWORD[.] 
     stack:   |rcx|QWORD[.]  |   |              <||@
  Comment 1183 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7fba7b633598, value=140438496784928]:0x7fba62b6b220}  <||@
  Comment 1208 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7fba7b6335a0, value=140438496919552]:0x7fba62b8c000}  <||@
  Comment 1236 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7fba7b6335a8, value=140438496915834]:0x7fba62b8b17a}  <||@
  Comment 1241 [rsi:0, r10:0]at java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |r10|QWORD[.]  |-  |-   <||@
  Comment 1271 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7fba7b6335a8, value=140438496915834]:0x7fba62b8b17a}  <||@
  Comment 1276 [r8:0, r10:0, r11:0]at java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |r10|QWORD[.]  |-  |-   <||@
  Comment 1306 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7fba7b6335a8, value=140438496915834]:0x7fba62b8b17a}  <||@
  Comment 1311 [rcx:0, r8:0, r10:0, r11:0]at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53, duringCall: false, rethrow: false]
              |0             |1  |2           
     locals:  |r10|QWORD[.]  |-  |r8|QWORD[.] 
     stack:   |rcx|QWORD[.]  |   |              <||@
  Comment 1319 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7fba62cc5f00:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1319 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 1325 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7fba7b6335b8, value=140438496915232]:0x7fba62b8af20}  <||@
  Comment 1325 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-1831[java.util.HashMap$HashIterator.nextNode()]"
  method "HotSpotCompilation-1831[java.util.HashMap$HashIterator.nextNode()]"
  date 1714038178893
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 7fba6362f5a0 448b560849bc000000fbb97f00004d03d44d33e4493bc20f85c35a55ff66669089842400c0feff4883ec189041817f20030000000f856004000048896c24104c8bd6418b721c8b04f518000000448b1cf524000000458b4214468b0cc518000000413b420c0f85e903000041807f40000f852b0200004589421849c1e003498bf24933f048b800006057ba7f000048f7c60000c0ff0f841a0000004d85c00f8411000000498bf248c1ee09803c06020f858b02000041807f40000f851602000045894a14418bc948c1e103498bf24833f148f7c60000c0ff0f841a0000004885c90f8411000000498bf248c1ee09803c06020f855c0200004585c90f841a000000498bc0488b6c24104883c418493ba7500400000f8790030000c3468b0cdd0c000000418b5a10443bcb7ed5443bcb0f86420300008bcbffc141894a1041807f40000f85c301000049c1e303418b5c9b1041895a148bfb48c1e703498bf24833f748f7c60000c0ff0f841a0000004885ff0f8411000000498bf248c1ee09803c06020f85e001000085db0f8571ffffff443bc90f8fde000000e95b00000066908bd9ffc341895a1041807f40000f8550000000418b4c8b1041894a148bf148c1e603498bfa4833fe48f7c70000c0ff0f841a0000004885f60f8411000000498bf248c1ee09803c06020f854200000085c90f850affffff8bcb443bc97fa2e9fefeffff498d72148b3685f674a6498b7f2848c1e6034885ff0f8445000000498b57384889743af8488d77f849897728eb82f083042400803c060074b3c6040600498b7f484803f04885ff0f841d000000498b57584889743af8488d77f849897748eb8ce8f86969ffe946ffffffe8eea769ffe978ffffff418bf12bf14863f68bd94803f348ffce418bd9483bde0f869e010000443bc90f875dffffffe990010000498d72188b3685f60f84c7fdffff498b472848c1e6034885c00f84e1000000498b4f3848897401f8488d70f849897728e9a0fdffff498d72148b3685f60f84dcfdffff498b4f2848c1e6034885c90f84b6000000498b5f384889740bf8488d71f849897728e9b5fdffff498d72148b3685f60f842ffeffff498b7f2848c1e6034885ff0f84df000000498b57384889743af8488d77f849897728e908fefffff083042400803c06000f8466fdffffe98b000000f083042400803c06000f8495fdffffe94d000000f083042400803c06000f8411feffffc6040600498b57484803f04885d20f849c000000498b6f5848897415f8488d72f849897748e9e7fdffffe8ba6869ffe9cbfcffffe8b06869ffe90bfdffffc6040600498b5f484803f04885db0f844a000000498b7f584889741ff8488d73f849897748e919fdffffc6040600498b4f484803f04885c90f842a000000498b5f584889740bf8488d71f849897748e9acfcffffe8526869ffe935fdffffe848a669ffe9dbfcffffe83ea669ffe98efcffffe834a669ffe957fdffff41c78784040000e561ffff49c7879004000098070000e88eb755ff0f1f84000000000041c78784040000ed18ffff49c7879004000014000000e86bb755ff0f1f84000000000041c78784040000e56fffff49c7879004000000000000e848b755ff0f1f84000000000048896c2410e8dcb753ffe991fbfffff4488d0d5cfcffff49898f68040000e9a3c555fff441c78784040000f591ffff49c7879004000000000000e801b755ff0f1f84000000000041c78784040000f585ffff49c7879004000000000000e8deb655ff0f1f84000000000041c78784040000f579ffff49c7879004000000000000e8bbb655ff0f1f840000000000e8346469fff4e84eb455fff4f4f4f4f4f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7fba7b6335c8, value=140438496891008]:0x7fba62b85080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 63 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7154f04f slotKind: QWORD  <||@
  Comment 63 6 r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 66 8 rsi|DWORD[_] = MOV [r10|QWORD[.] + 28] size: DWORD  <||@
  Comment 70 10 rax|DWORD = MOV [rsi|DWORD[_] * 8 + 24] size: DWORD state [bci:0]  <||@
  Comment 70 [rsi:0, r10:0]at java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |r10|QWORD[.]  |-  |-   <||@
  Comment 70 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 77 12 r11|DWORD[_] = MOV [rsi|DWORD[_] * 8 + 36] size: DWORD  <||@
  Comment 85 14 r8|DWORD[_] = MOV [r10|QWORD[.] + 20] size: DWORD  <||@
  Comment 89 16 r9|DWORD[_] = MOV [r8|DWORD[_] * 8 + 24] size: DWORD state [bci:0]  <||@
  Comment 89 [r8:0, r10:0, r11:0]at java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |r10|QWORD[.]  |-  |-   <||@
  Comment 89 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 97 18 CMPBRANCH (x: rax|DWORD, y: [r10|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B96 size: DWORD  <||@
  Comment 107 block B1 null  <||@
  Comment 107 20 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 107 22 CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B1 -> B8 falseDestination: B1 -> B3 y: 0 size: BYTE inlinedY: null  <||@
  Comment 118 block B8 null  <||@
  Comment 118 68 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 118 70 MOV (x: [r10|QWORD[.] + 24], y: r8|DWORD[_]) size: DWORD  <||@
  Comment 122 72 r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3  <||@
  Comment 126 74 rsi|QWORD[*] = XOR (x: r10|QWORD[.], y: r8|QWORD[.]) size: QWORD  <||@
  Comment 132 76 rax|QWORD = MOVE input: long[140438306553856|0x7fba57600000]  <||@
  Comment 142 78 TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B8 -> B19 falseDestination: B8 -> B10 y: -4194304 size: QWORD  <||@
  Comment 155 block B10 null  <||@
  Comment 155 80 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 155 82 TESTBRANCH (x: r8|QWORD[.], y: r8|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B10 -> B19 falseDestination: B10 -> B12 size: QWORD  <||@
  Comment 164 block B12 null  <||@
  Comment 164 84 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 164 86 rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD  <||@
  Comment 171 88 CMPCONSTBRANCH [rsi|QWORD[*] + rax|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B12 -> B19 falseDestination: B12 -> B14 y: 2 size: BYTE inlinedY: null  <||@
  Comment 181 block B19 null  <||@
  Comment 181 142 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 181 144 CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B19 -> B26 falseDestination: B19 -> B21 y: 0 size: BYTE inlinedY: null  <||@
  Comment 192 block B26 null  <||@
  Comment 192 190 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 192 192 MOV (x: [r10|QWORD[.] + 20], y: r9|DWORD[_]) size: DWORD  <||@
  Comment 196 194 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3  <||@
  Comment 203 196 rsi|QWORD[*] = XOR (x: r10|QWORD[.], y: rcx|QWORD[.]) size: QWORD  <||@
  Comment 209 198 TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B26 -> B37 falseDestination: B26 -> B28 y: -4194304 size: QWORD  <||@
  Comment 222 block B28 null  <||@
  Comment 222 200 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 222 202 TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B28 -> B37 falseDestination: B28 -> B30 size: QWORD  <||@
  Comment 231 block B30 null  <||@
  Comment 231 204 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 231 206 rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD  <||@
  Comment 238 208 CMPCONSTBRANCH [rsi|QWORD[*] + rax|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B30 -> B37 falseDestination: B30 -> B32 y: 2 size: BYTE inlinedY: null  <||@
  Comment 248 block B37 null  <||@
  Comment 248 262 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 248 264 TESTBRANCH (x: r9|DWORD[_], y: r9|DWORD[_]) trueDestinationProbability: 0.8674348032491496 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B95 size: DWORD  <||@
  Comment 257 block B95 null  <||@
  Comment 257 604 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 257 606 rax|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 260 608 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9  <||@
  Comment 269 POLL_RETURN_FAR  <||@
  Comment 283 block B38 null  <||@
  Comment 283 266 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 283 268 r9|DWORD = MOV [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:53]  <||@
  Comment 283 [rcx:0, r8:0, r10:0, r11:0]at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53, duringCall: false, rethrow: false]
              |0             |1  |2           
     locals:  |r10|QWORD[.]  |-  |r8|QWORD[.] 
     stack:   |rcx|QWORD[.]  |   |              <||@
  Comment 283 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 291 270 rbx|DWORD = MOV [r10|QWORD[.] + 16] size: DWORD  <||@
  Comment 295 272 CMPBRANCH (x: r9|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.9812627296505405 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B95 size: DWORD  <||@
  Comment 300 block B39 null  <||@
  Comment 300 274 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 300 276 CMPBRANCH (x: r9|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B92 size: DWORD  <||@
  Comment 309 block B40 null  <||@
  Comment 309 278 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 309 280 rcx|DWORD = INC rbx|DWORD size: DWORD  <||@
  Comment 313 282 MOV (x: [r10|QWORD[.] + 16], y: rcx|DWORD) size: DWORD  <||@
  Comment 317 284 CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B40 -> B47 falseDestination: B40 -> B42 y: 0 size: BYTE inlinedY: null  <||@
  Comment 328 block B47 null  <||@
  Comment 328 338 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 328 340 r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3  <||@
  Comment 332 342 rbx|DWORD[_] = MOV [r11|QWORD[.] + rbx|DWORD * 4 + 16] size: DWORD  <||@
  Comment 337 344 MOV (x: [r10|QWORD[.] + 20], y: rbx|DWORD[_]) size: DWORD  <||@
  Comment 341 346 rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3  <||@
  Comment 347 348 rsi|QWORD[*] = XOR (x: r10|QWORD[.], y: rdi|QWORD[.]) size: QWORD  <||@
  Comment 353 350 TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B47 -> B58 falseDestination: B47 -> B49 y: -4194304 size: QWORD  <||@
  Comment 366 block B49 null  <||@
  Comment 366 352 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 366 354 TESTBRANCH (x: rdi|QWORD[.], y: rdi|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B49 -> B58 falseDestination: B49 -> B51 size: QWORD  <||@
  Comment 375 block B51 null  <||@
  Comment 375 356 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 375 358 rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD  <||@
  Comment 382 360 CMPCONSTBRANCH [rsi|QWORD[*] + rax|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B51 -> B58 falseDestination: B51 -> B53 y: 2 size: BYTE inlinedY: null  <||@
  Comment 392 block B58 null  <||@
  Comment 392 414 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 392 416 TESTBRANCH (x: rbx|DWORD[_], y: rbx|DWORD[_]) trueDestinationProbability: 0.8739340370331193 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B95 size: DWORD  <||@
  Comment 400 block B59 null  <||@
  Comment 400 418 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 400 420 CMPBRANCH (x: r9|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B59 -> B60 falseDestination: B59 -> B68 size: DWORD  <||@
  Comment 414 block B69 loop 0 depth 1 header:27|LoopBegin  <||@
  Comment 414 458 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 416 460 rbx|DWORD = INC rcx|DWORD size: DWORD  <||@
  Comment 420 462 MOV (x: [r10|QWORD[.] + 16], y: rbx|DWORD) size: DWORD  <||@
  Comment 424 464 CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B69 -> B76 falseDestination: B69 -> B71 y: 0 size: BYTE inlinedY: null  <||@
  Comment 435 block B76 loop 0 depth 1 header:27|LoopBegin  <||@
  Comment 435 510 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 435 512 rcx|DWORD[_] = MOV [r11|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD  <||@
  Comment 440 514 MOV (x: [r10|QWORD[.] + 20], y: rcx|DWORD[_]) size: DWORD  <||@
  Comment 444 516 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3  <||@
  Comment 450 518 rdi|QWORD[*] = XOR (x: r10|QWORD[.], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 456 520 TESTCONSTBRANCH rdi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B76 -> B87 falseDestination: B76 -> B78 y: -4194304 size: QWORD  <||@
  Comment 469 block B78 loop 0 depth 1 header:27|LoopBegin  <||@
  Comment 469 522 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 469 524 TESTBRANCH (x: rsi|QWORD[.], y: rsi|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B78 -> B87 falseDestination: B78 -> B80 size: QWORD  <||@
  Comment 478 block B80 loop 0 depth 1 header:27|LoopBegin  <||@
  Comment 478 526 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 478 528 rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD  <||@
  Comment 485 530 CMPCONSTBRANCH [rsi|QWORD[*] + rax|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B80 -> B87 falseDestination: B80 -> B82 y: 2 size: BYTE inlinedY: null  <||@
  Comment 495 block B87 loop 0 depth 1 header:27|LoopBegin  <||@
  Comment 495 584 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 495 586 TESTBRANCH (x: rcx|DWORD[_], y: rcx|DWORD[_]) trueDestinationProbability: 0.8739340370331193 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B95 size: DWORD  <||@
  Comment 503 block B88 loop 0 depth 1 header:27|LoopBegin  <||@
  Comment 503 588 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 503 -1 rcx|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 505 590 JUMP ~[] destination: B88 -> B68  <||@
  Comment 505 block B68 loop 0 depth 1 header:27|LoopBegin  <||@
  Comment 505 454 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 505 456 CMPBRANCH (x: r9|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.9812627296505405 condition: > trueDestination: B68 -> B69 falseDestination: B68 -> B95 size: DWORD  <||@
  Comment 515 block B71 loop 0 depth 1 header:27|LoopBegin  <||@
  Comment 515 470 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 515 472 rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD  <||@
  Comment 519 474 rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD  <||@
  Comment 521 476 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B71 -> B76 falseDestination: B71 -> B73 size: DWORD  <||@
  Comment 525 block B73 loop 0 depth 1 header:27|LoopBegin  <||@
  Comment 525 478 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 525 480 rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD  <||@
  Comment 529 482 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3  <||@
  Comment 533 484 TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B75 size: QWORD  <||@
  Comment 542 block B75 loop 0 depth 1 header:27|LoopBegin  <||@
  Comment 542 486 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 542 488 rdx|QWORD = MOV [r15|QWORD + 56] size: QWORD  <||@
  Comment 546 490 MOV (x: [rdx|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 551 492 rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD  <||@
  Comment 555 494 MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD  <||@
  Comment 559 496 JUMP ~[] destination: B75 -> B76  <||@
  Comment 561 block B82 loop 0 depth 1 header:27|LoopBegin  <||@
  Comment 561 544 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 561 546 MEMBAR barriers: 4  <||@
  Comment 566 548 CMPCONSTBRANCH [rsi|QWORD[*] + rax|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B82 -> B87 falseDestination: B82 -> B84 y: 0 size: BYTE inlinedY: null  <||@
  Comment 572 block B84 loop 0 depth 1 header:27|LoopBegin  <||@
  Comment 572 554 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 572 556 MOVB [rsi|QWORD[*] + rax|QWORD * 1] y: 0 size: BYTE  <||@
  Comment 576 558 rdi|QWORD = MOV [r15|QWORD + 72] size: QWORD  <||@
  Comment 580 560 rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rax|QWORD) size: QWORD  <||@
  Comment 583 562 TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B84 -> B85 falseDestination: B84 -> B86 size: QWORD  <||@
  Comment 592 block B86 loop 0 depth 1 header:27|LoopBegin  <||@
  Comment 592 564 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 592 566 rdx|QWORD = MOV [r15|QWORD + 88] size: QWORD  <||@
  Comment 596 568 MOV (x: [rdx|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD  <||@
  Comment 601 570 rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD  <||@
  Comment 605 572 MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD  <||@
  Comment 609 574 JUMP ~[] destination: B86 -> B87  <||@
  Comment 611 block B74 loop 0 depth 1 header:27|LoopBegin  <||@
  Comment 611 502 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 611 506 - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]  <||@
  Comment 611 {Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]}  <||@
  Comment 616 508 JUMP ~[] destination: B74 -> B76  <||@
  Comment 621 block B85 loop 0 depth 1 header:27|LoopBegin  <||@
  Comment 621 576 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 621 578 rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 621 580 - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]  <||@
  Comment 621 {Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]}  <||@
  Comment 626 582 JUMP ~[] destination: B85 -> B87  <||@
  Comment 631 block B60 null  <||@
  Comment 631 426 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 631 428 rsi|DWORD = SUB (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 636 430 rsi|QWORD = MOVSXD rsi|DWORD size: QWORD  <||@
  Comment 639 432 rbx|QWORD = MOV rcx|DWORD size: DWORD  <||@
  Comment 641 434 rsi|QWORD = ADD (x: rsi|QWORD, y: rbx|QWORD) size: QWORD  <||@
  Comment 644 436 rsi|QWORD = DEC rsi|QWORD size: QWORD  <||@
  Comment 647 438 rbx|QWORD = MOV r9|DWORD size: DWORD  <||@
  Comment 650 440 CMPBRANCH (x: rbx|QWORD, y: rsi|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B60 -> B61 falseDestination: B60 -> B65 size: QWORD  <||@
  Comment 659 block B61 null  <||@
  Comment 659 442 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 659 444 CMPBRANCH (x: r9|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B61 -> B68 falseDestination: B61 -> B65 size: DWORD  <||@
  Comment 673 block B3 null  <||@
  Comment 673 28 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 673 30 rsi|QWORD[.+] = LEA [r10|QWORD[.] + 24] size: QWORD  <||@
  Comment 677 32 rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD  <||@
  Comment 679 34 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B3 -> B8 falseDestination: B3 -> B5 size: DWORD  <||@
  Comment 687 block B5 null  <||@
  Comment 687 36 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 687 38 rax|QWORD = MOV [r15|QWORD + 40] size: QWORD  <||@
  Comment 691 40 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3  <||@
  Comment 695 42 TESTBRANCH (x: rax|QWORD, y: rax|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD  <||@
  Comment 704 block B7 null  <||@
  Comment 704 44 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 704 46 rcx|QWORD = MOV [r15|QWORD + 56] size: QWORD  <||@
  Comment 708 48 MOV (x: [rcx|QWORD + rax|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 713 50 rsi|QWORD = LEA [rax|QWORD - 8] size: QWORD  <||@
  Comment 717 52 MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD  <||@
  Comment 721 54 JUMP ~[] destination: B7 -> B8  <||@
  Comment 726 block B21 null  <||@
  Comment 726 150 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 726 152 rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD  <||@
  Comment 730 154 rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD  <||@
  Comment 732 156 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B21 -> B26 falseDestination: B21 -> B23 size: DWORD  <||@
  Comment 740 block B23 null  <||@
  Comment 740 158 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 740 160 rcx|QWORD = MOV [r15|QWORD + 40] size: QWORD  <||@
  Comment 744 162 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3  <||@
  Comment 748 164 TESTBRANCH (x: rcx|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: QWORD  <||@
  Comment 757 block B25 null  <||@
  Comment 757 166 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 757 168 rbx|QWORD = MOV [r15|QWORD + 56] size: QWORD  <||@
  Comment 761 170 MOV (x: [rbx|QWORD + rcx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 766 172 rsi|QWORD = LEA [rcx|QWORD - 8] size: QWORD  <||@
  Comment 770 174 MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD  <||@
  Comment 774 176 JUMP ~[] destination: B25 -> B26  <||@
  Comment 779 block B42 null  <||@
  Comment 779 294 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 779 296 rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD  <||@
  Comment 783 298 rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD  <||@
  Comment 785 300 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B47 falseDestination: B42 -> B44 size: DWORD  <||@
  Comment 793 block B44 null  <||@
  Comment 793 302 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 793 304 rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD  <||@
  Comment 797 306 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5f5da3a1 encoding: base: 0 shift: 3  <||@
  Comment 801 308 TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: QWORD  <||@
  Comment 810 block B46 null  <||@
  Comment 810 310 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 810 312 rdx|QWORD = MOV [r15|QWORD + 56] size: QWORD  <||@
  Comment 814 314 MOV (x: [rdx|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 819 316 rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD  <||@
  Comment 823 318 MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD  <||@
  Comment 827 320 JUMP ~[] destination: B46 -> B47  <||@
  Comment 832 block B14 null  <||@
  Comment 832 102 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 832 104 MEMBAR barriers: 4  <||@
  Comment 837 106 CMPCONSTBRANCH [rsi|QWORD[*] + rax|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B14 -> B19 falseDestination: B14 -> B16 y: 0 size: BYTE inlinedY: null  <||@
  Comment 852 block B32 null  <||@
  Comment 852 222 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 852 224 MEMBAR barriers: 4  <||@
  Comment 857 226 CMPCONSTBRANCH [rsi|QWORD[*] + rax|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B32 -> B37 falseDestination: B32 -> B34 y: 0 size: BYTE inlinedY: null  <||@
  Comment 872 block B53 null  <||@
  Comment 872 374 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 872 376 MEMBAR barriers: 4  <||@
  Comment 877 378 CMPCONSTBRANCH [rsi|QWORD[*] + rax|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B53 -> B58 falseDestination: B53 -> B55 y: 0 size: BYTE inlinedY: null  <||@
  Comment 887 block B55 null  <||@
  Comment 887 384 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 887 386 MOVB [rsi|QWORD[*] + rax|QWORD * 1] y: 0 size: BYTE  <||@
  Comment 891 388 rdx|QWORD = MOV [r15|QWORD + 72] size: QWORD  <||@
  Comment 895 390 rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rax|QWORD) size: QWORD  <||@
  Comment 898 392 TESTBRANCH (x: rdx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: QWORD  <||@
  Comment 907 block B57 null  <||@
  Comment 907 394 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 907 396 rbp|QWORD = MOV [r15|QWORD + 88] size: QWORD  <||@
  Comment 911 398 MOV (x: [rbp|QWORD + rdx|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD  <||@
  Comment 916 400 rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD  <||@
  Comment 920 402 MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD  <||@
  Comment 924 404 JUMP ~[] destination: B57 -> B58  <||@
  Comment 929 block B6 null  <||@
  Comment 929 60 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 929 64 - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]  <||@
  Comment 929 {Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]}  <||@
  Comment 934 66 JUMP ~[] destination: B6 -> B8  <||@
  Comment 939 block B24 null  <||@
  Comment 939 182 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 939 186 - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]  <||@
  Comment 939 {Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]}  <||@
  Comment 944 188 JUMP ~[] destination: B24 -> B26  <||@
  Comment 949 block B34 null  <||@
  Comment 949 232 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 949 234 MOVB [rsi|QWORD[*] + rax|QWORD * 1] y: 0 size: BYTE  <||@
  Comment 953 236 rbx|QWORD = MOV [r15|QWORD + 72] size: QWORD  <||@
  Comment 957 238 rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rax|QWORD) size: QWORD  <||@
  Comment 960 240 TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: QWORD  <||@
  Comment 969 block B36 null  <||@
  Comment 969 242 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 969 244 rdi|QWORD = MOV [r15|QWORD + 88] size: QWORD  <||@
  Comment 973 246 MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD  <||@
  Comment 978 248 rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD  <||@
  Comment 982 250 MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD  <||@
  Comment 986 252 JUMP ~[] destination: B36 -> B37  <||@
  Comment 991 block B16 null  <||@
  Comment 991 112 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 991 114 MOVB [rsi|QWORD[*] + rax|QWORD * 1] y: 0 size: BYTE  <||@
  Comment 995 116 rcx|QWORD = MOV [r15|QWORD + 72] size: QWORD  <||@
  Comment 999 118 rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rax|QWORD) size: QWORD  <||@
  Comment 1002 120 TESTBRANCH (x: rcx|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: QWORD  <||@
  Comment 1011 block B18 null  <||@
  Comment 1011 122 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1011 124 rbx|QWORD = MOV [r15|QWORD + 88] size: QWORD  <||@
  Comment 1015 126 MOV (x: [rbx|QWORD + rcx|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD  <||@
  Comment 1020 128 rsi|QWORD = LEA [rcx|QWORD - 8] size: QWORD  <||@
  Comment 1024 130 MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD  <||@
  Comment 1028 132 JUMP ~[] destination: B18 -> B19  <||@
  Comment 1033 block B45 null  <||@
  Comment 1033 330 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1033 334 - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]  <||@
  Comment 1033 {Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]}  <||@
  Comment 1038 336 JUMP ~[] destination: B45 -> B47  <||@
  Comment 1043 block B35 null  <||@
  Comment 1043 254 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1043 256 rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 1043 258 - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]  <||@
  Comment 1043 {Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]}  <||@
  Comment 1048 260 JUMP ~[] destination: B35 -> B37  <||@
  Comment 1053 block B17 null  <||@
  Comment 1053 134 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1053 136 rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 1053 138 - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]  <||@
  Comment 1053 {Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]}  <||@
  Comment 1058 140 JUMP ~[] destination: B17 -> B19  <||@
  Comment 1063 block B56 null  <||@
  Comment 1063 406 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1063 408 rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 1063 410 - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]  <||@
  Comment 1063 {Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]}  <||@
  Comment 1068 412 JUMP ~[] destination: B56 -> B58  <||@
  Comment 1073 block B65 null  <||@
  Comment 1073 626 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1073 628 MOV [r15|QWORD + 1156] y: -40475 size: DWORD  <||@
  Comment 1084 630 MOV [r15|QWORD + 1168] y: 1944 size: QWORD  <||@
  Comment 1095 632 DEOPT info [bci:95]  <||@
  Comment 1095 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7fba7b6335a8, value=140438496915834]:0x7fba62b8b17a}  <||@
  Comment 1100 [rdi:0, r8:0, r10:0, r11:0]at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 95, duringCall: false, rethrow: false]
              |0             |1             |2           
     locals:  |r10|QWORD[.]  |r11|QWORD[.]  |r8|QWORD[.] 
     stack:   |rdi|QWORD[.]  |              |              <||@
  Comment 1108 block B96 null  <||@
  Comment 1108 610 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1108 612 MOV [r15|QWORD + 1156] y: -59155 size: DWORD  <||@
  Comment 1119 614 MOV [r15|QWORD + 1168] y: 20 size: QWORD  <||@
  Comment 1130 616 DEOPT info [bci:0]  <||@
  Comment 1130 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7fba7b6335a8, value=140438496915834]:0x7fba62b8b17a}  <||@
  Comment 1135 [r10:0]at java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |r10|QWORD[.]  |-  |-   <||@
  Comment 1143 block B92 null  <||@
  Comment 1143 634 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1143 636 MOV [r15|QWORD + 1156] y: -36891 size: DWORD  <||@
  Comment 1154 638 MOV [r15|QWORD + 1168] y: 0 size: QWORD  <||@
  Comment 1165 640 DEOPT info [bci:53]  <||@
  Comment 1165 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7fba7b6335a8, value=140438496915834]:0x7fba62b8b17a}  <||@
  Comment 1170 [rcx:0, r8:0, r10:0]at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53, duringCall: false, rethrow: false]
              |0             |1  |2           
     locals:  |r10|QWORD[.]  |-  |r8|QWORD[.] 
     stack:   |rcx|QWORD[.]  |   |              <||@
  Comment 1183 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7fba7b633598, value=140438496784928]:0x7fba62b6b220}  <||@
  Comment 1208 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7fba7b6335a0, value=140438496919552]:0x7fba62b8c000}  <||@
  Comment 1236 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7fba7b6335a8, value=140438496915834]:0x7fba62b8b17a}  <||@
  Comment 1241 [rsi:0, r10:0]at java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |r10|QWORD[.]  |-  |-   <||@
  Comment 1271 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7fba7b6335a8, value=140438496915834]:0x7fba62b8b17a}  <||@
  Comment 1276 [r8:0, r10:0, r11:0]at java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |r10|QWORD[.]  |-  |-   <||@
  Comment 1306 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7fba7b6335a8, value=140438496915834]:0x7fba62b8b17a}  <||@
  Comment 1311 [rcx:0, r8:0, r10:0, r11:0]at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53, duringCall: false, rethrow: false]
              |0             |1  |2           
     locals:  |r10|QWORD[.]  |-  |r8|QWORD[.] 
     stack:   |rcx|QWORD[.]  |   |              <||@
  Comment 1319 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7fba62cc5f00:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1319 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 1325 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7fba7b6335b8, value=140438496915232]:0x7fba62b8af20}  <||@
  Comment 1325 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
