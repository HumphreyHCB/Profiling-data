begin_compilation
  name " HotSpotCompilation-2908[java.lang.StringLatin1.inflate(byte[], int, char[], int, int)]"
  method "HotSpotCompilation-2908[java.lang.StringLatin1.inflate(byte[], int, char[], int, int)]"
  date 1714038185494
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v37 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: v37  <|@  <|@
f <@~|@floating>@ <|@
tid i5 <|@
d <@d|@=== Debug Properties ===
index: 4
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?6 v139 i243 i127 v55 i404 v210 v242 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i21 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 12]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i22 i23 i30 i38 i39 i54 v55 i214 i215 i216 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v55 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 7]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@4dc6bd49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i5 
y: i21 
=== Succesors ===
=== Usages ===
v37 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i5 y: i21  <|@  <|@
f <@*|@fixed>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 7]
profileData: PROFILED designatedSuccessorProbability: 0.027132876049413834
stamp: void
=== Inputs ===
condition: v55 
=== Succesors ===
trueSuccessor: v35 
falseSuccessor: v36 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v55 #trueSuccessor: v35 #falseSuccessor: v36  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B24" 
    xhandlers
    flags 
    probability 4583477740478224256
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v35 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:766) [bci: 33]
stamp: void
=== Inputs ===
=== Succesors ===
next: v49 
=== Usages ===
=== Predecessor ===
v37 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v49  <|@  <|@
f <@*|@fixed>@ <|@
tid v49 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:766) [bci: 33]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v47 
=== Predecessor ===
v35 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v36 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: i460 
=== Usages ===
=== Predecessor ===
v37 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i460  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a# byte[]
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?6 v519 v517 v497 v498 v501 v503 v505 v507 v509 v511 v513 v515 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?6 v498 i39 v63 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a3 <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: a# char[]
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?6 v520 v518 v499 v500 v502 v504 v506 v508 v510 v512 v514 v516 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i4 <|@
d <@d|@=== Debug Properties ===
index: 3
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?6 v500 i38 v78 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?6 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: iconst_0
code: ResolvedJavaMethodBytecode<StringLatin1.inflate(byte[], int, char[], int, int)>
localsSize: 6
locksSize: 0
sourceFile: StringLatin1.java
sourceLine: 763
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i2 a3 i4 i5 
=== Succesors ===
=== Usages ===
v411 i460 i461 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 a3 i4 i5  <|@  <|@
f <@~|@floating>@ <|@
tid v497 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i460 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i460 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-14859|0xffffffffffffc5f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?6 
guard: - 
address: v497 
lastLocationAccess: - 
=== Succesors ===
next: v433 
=== Usages ===
v63 v135 j125 
=== Predecessor ===
v36 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?6 guard: - address: v497 lastLocationAccess: - #next: v433  <|@  <|@
f <@~|@floating>@ <|@
tid j416 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
rawvalue: 24
stableDimension: 0
stamp: i64 [24]
stampKind: i64
value: long[24|0x18]
=== Inputs ===
=== Succesors ===
=== Usages ===
j410 j410 j410 j410 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i39 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 17]
stamp: i32
=== Inputs ===
x: i2 
y: i21 
=== Succesors ===
=== Usages ===
v135 i52 j129 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i2 y: i21  <|@  <|@
f <@~|@floating>@ <|@
tid i126 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i32 [-1]
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i127 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i127 <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
x: i5 
y: i126 
=== Succesors ===
=== Usages ===
j473 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i5 y: i126  <|@  <|@
f <@~|@floating>@ <|@
tid j473 <|@
d <@d|@=== Debug Properties ===
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i127 
=== Succesors ===
=== Usages ===
j132 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i127  <|@  <|@
f <@~|@floating>@ <|@
tid j131 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1]
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j132 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j132 <|@
d <@d|@=== Debug Properties ===
stamp: i64 [-1 - 4294967294]
=== Inputs ===
x: j473 
y: j131 
=== Succesors ===
=== Usages ===
j133 j144 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j473 y: j131  <|@  <|@
f <@~|@floating>@ <|@
tid i138 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
rawvalue: 2
stableDimension: 0
stamp: i32 [2]
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
v139 i243 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v139 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@4dc6bd49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i5 
y: i138 
=== Succesors ===
=== Usages ===
v433 v449 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i5 y: i138  <|@  <|@
f <@*|@fixed>@ <|@
tid v433 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
profileData: INJECTED designatedSuccessorProbability: 0.5
stamp: void
=== Inputs ===
condition: v139 
=== Succesors ===
trueSuccessor: v429 
falseSuccessor: v432 
=== Usages ===
=== Predecessor ===
i460 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v139 #trueSuccessor: v429 #falseSuccessor: v432  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v429 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
next: v427 
=== Usages ===
=== Predecessor ===
v433 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v427  <|@  <|@
f <@*|@fixed>@ <|@
tid v427 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v426 
=== Predecessor ===
v429 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B30" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v432 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
next: v441 
=== Usages ===
=== Predecessor ===
v433 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v441  <|@  <|@
f <@~|@floating>@ <|@
tid j129 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i39 
=== Succesors ===
=== Usages ===
j133 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i39  <|@  <|@
f <@~|@floating>@ <|@
tid j133 <|@
d <@d|@=== Debug Properties ===
stamp: i64 [-2147483649 - 6442450941]
=== Inputs ===
x: j129 
y: j132 
=== Succesors ===
=== Usages ===
v134 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j129 y: j132  <|@  <|@
f <@~|@floating>@ <|@
tid j125 <|@
d <@d|@=== Debug Properties ===
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i460 
=== Succesors ===
=== Usages ===
v134 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i460  <|@  <|@
f <@~|@floating>@ <|@
tid v134 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@40aab068
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j133 
y: j125 
=== Succesors ===
=== Usages ===
v441 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j133 y: j125  <|@  <|@
f <@~|@floating>@ <|@
tid i415 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
rawvalue: -22811
stableDimension: 0
stamp: i32 [-22811]
stampKind: i32
value: int[-22811|0xffffffffffffa6e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i409 i409 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v441 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v134 
=== Succesors ===
trueSuccessor: v440 
falseSuccessor: v437 
=== Usages ===
=== Predecessor ===
v432 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v134 #trueSuccessor: v440 #falseSuccessor: v437  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B29" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v440 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
next: v439 
=== Usages ===
=== Predecessor ===
v441 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v439  <|@  <|@
f <@~|@floating>@ <|@
tid v135 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@40aab068
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i39 
y: i460 
=== Succesors ===
=== Usages ===
v439 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i39 y: i460  <|@  <|@
f <@*|@fixed>@ <|@
tid v439 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v135 
=== Succesors ===
trueSuccessor: v430 
falseSuccessor: v438 
=== Usages ===
=== Predecessor ===
v440 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v135 #trueSuccessor: v430 #falseSuccessor: v438  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v430 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
next: v428 
=== Usages ===
=== Predecessor ===
v439 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v428  <|@  <|@
f <@*|@fixed>@ <|@
tid v428 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v426 
=== Predecessor ===
v430 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v426 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v427 v428 
=== Succesors ===
next: i461 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v427 v428 #next: i461  <|@  <|@
f <@~|@floating>@ <|@
tid v499 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
i461 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i461 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-18955|0xffffffffffffb5f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?6 
guard: - 
address: v499 
lastLocationAccess: - 
=== Succesors ===
next: v449 
=== Usages ===
v78 v146 j142 
=== Predecessor ===
v426 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?6 guard: - address: v499 lastLocationAccess: - #next: v449  <|@  <|@
f <@~|@floating>@ <|@
tid i38 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 12]
stamp: i32
=== Inputs ===
x: i4 
y: i21 
=== Succesors ===
=== Usages ===
v146 i53 j143 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i4 y: i21  <|@  <|@
f <@*|@fixed>@ <|@
tid v449 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
profileData: INJECTED designatedSuccessorProbability: 0.5
stamp: void
=== Inputs ===
condition: v139 
=== Succesors ===
trueSuccessor: v445 
falseSuccessor: v448 
=== Usages ===
=== Predecessor ===
i461 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v139 #trueSuccessor: v445 #falseSuccessor: v448  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v445 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v443 
=== Usages ===
=== Predecessor ===
v449 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v443  <|@  <|@
f <@*|@fixed>@ <|@
tid v443 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v442 
=== Predecessor ===
v445 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B28" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v448 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v457 
=== Usages ===
=== Predecessor ===
v449 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v457  <|@  <|@
f <@~|@floating>@ <|@
tid j143 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i38 
=== Succesors ===
=== Usages ===
j144 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i38  <|@  <|@
f <@~|@floating>@ <|@
tid j144 <|@
d <@d|@=== Debug Properties ===
stamp: i64 [-2147483649 - 6442450941]
=== Inputs ===
x: j132 
y: j143 
=== Succesors ===
=== Usages ===
v145 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j132 y: j143  <|@  <|@
f <@~|@floating>@ <|@
tid j142 <|@
d <@d|@=== Debug Properties ===
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i461 
=== Succesors ===
=== Usages ===
v145 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i461  <|@  <|@
f <@~|@floating>@ <|@
tid v145 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@40aab068
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j144 
y: j142 
=== Succesors ===
=== Usages ===
v457 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j144 y: j142  <|@  <|@
f <@~|@floating>@ <|@
tid i418 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
rawvalue: -25371
stableDimension: 0
stamp: i32 [-25371]
stampKind: i32
value: int[-25371|0xffffffffffff9ce5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i409 i409 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v457 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v145 
=== Succesors ===
trueSuccessor: v456 
falseSuccessor: v453 
=== Usages ===
=== Predecessor ===
v448 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v145 #trueSuccessor: v456 #falseSuccessor: v453  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B27" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v456 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v455 
=== Usages ===
=== Predecessor ===
v457 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v455  <|@  <|@
f <@~|@floating>@ <|@
tid v146 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@40aab068
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i38 
y: i461 
=== Succesors ===
=== Usages ===
v455 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i38 y: i461  <|@  <|@
f <@*|@fixed>@ <|@
tid v455 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v146 
=== Succesors ===
trueSuccessor: v446 
falseSuccessor: v454 
=== Usages ===
=== Predecessor ===
v456 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v146 #trueSuccessor: v446 #falseSuccessor: v454  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v446 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v444 
=== Usages ===
=== Predecessor ===
v455 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v444  <|@  <|@
f <@*|@fixed>@ <|@
tid v444 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v442 
=== Predecessor ===
v446 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" "B11" 
    successors "B13" "B26" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v442 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v443 v444 
=== Succesors ===
next: v170 
=== Usages ===
v150 v235 v204 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v443 v444 #next: v170  <|@  <|@
f <@~|@floating>@ <|@
tid v63 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@40aab068
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i460 
=== Succesors ===
=== Usages ===
v170 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i2 y: i460  <|@  <|@
f <@~|@floating>@ <|@
tid j408 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
rawvalue: 0
stableDimension: 0
stamp: i64 [0]
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j410 j410 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v170 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v63 
=== Succesors ===
trueSuccessor: v167 
falseSuccessor: v169 
=== Usages ===
=== Predecessor ===
v442 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v63 #trueSuccessor: v167 #falseSuccessor: v169  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B25" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v167 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
next: v174 
=== Usages ===
=== Predecessor ===
v170 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v174  <|@  <|@
f <@~|@floating>@ <|@
tid v78 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@40aab068
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i4 
y: i461 
=== Succesors ===
=== Usages ===
v174 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i4 y: i461  <|@  <|@
f <@*|@fixed>@ <|@
tid v174 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v78 
=== Succesors ===
trueSuccessor: v171 
falseSuccessor: v173 
=== Usages ===
=== Predecessor ===
v167 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v78 #trueSuccessor: v171 #falseSuccessor: v173  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v171 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: i462 
=== Usages ===
v86 
=== Predecessor ===
v174 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i462  <|@  <|@
f <@~|@floating>@ <|@
tid v498 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: i2 
=== Succesors ===
=== Usages ===
i462 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: i2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i462 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v498 
lastLocationAccess: - 
=== Succesors ===
next: v86 
=== Usages ===
i111 
=== Predecessor ===
v171 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v498 lastLocationAccess: - #next: v86  <|@  <|@
f <@~|@floating>@ <|@
tid v500 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S2
=== Inputs ===
base: a3 
index: i4 
=== Succesors ===
=== Usages ===
v86 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: i4  <|@  <|@
f <@~|@floating>@ <|@
tid i111 <|@
d <@d|@=== Debug Properties ===
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
resultBits: 16
stamp: i16 [0 - 255] bits:00000000xxxxxxxx
=== Inputs ===
value: i462 
=== Succesors ===
=== Usages ===
v86 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i462  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v86 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: char
location: Array: char
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v171 
address: v500 
lastLocationAccess: - 
value: i111 
stateAfter: - 
=== Succesors ===
next: v9 
=== Usages ===
=== Predecessor ===
i462 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v171 address: v500 lastLocationAccess: - value: i111 stateAfter: - #next: v9  <|@  <|@
f <@~|@floating>@ <|@
tid i241 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 3
stableDimension: 0
stamp: i32 [3]
stampKind: i32
value: int[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
v242 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v242 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@4dc6bd49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i5 
y: i241 
=== Succesors ===
=== Usages ===
i243 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i5 y: i241  <|@  <|@
f <@~|@floating>@ <|@
tid i243 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-2147483648 - 2]
=== Inputs ===
condition: v242 
trueValue: i5 
falseValue: i138 
=== Succesors ===
=== Usages ===
v15 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v242 trueValue: i5 falseValue: i138  <|@  <|@
f <@*|@fixed>@ <|@
tid v9 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v10 
=== Predecessor ===
v86 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607026540791548873
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i54 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 3]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v10 
values: i21 i30 
=== Succesors ===
=== Usages ===
i30 v15 i189 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v10 values: i21 i30  <|@  <|@
f <@~|@floating>@ <|@
tid i53 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 3]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v10 
values: i38 i22 
=== Succesors ===
=== Usages ===
v502 i22 i188 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v10 values: i38 i22  <|@  <|@
f <@~|@floating>@ <|@
tid i52 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 3]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v10 
values: i39 i23 
=== Succesors ===
=== Usages ===
v501 i23 i187 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v10 values: i39 i23  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v10 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: -1
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 35.85565799139098
loopType: PRE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 3]
osrLoop: false
peelings: 1
rotated: false
splits: 2
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v9 
=== Succesors ===
next: v20 
=== Usages ===
i54 i53 i52 v17 v31 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v9 #next: v20  <|@  <|@
f <@~|@floating>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 7]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@4dc6bd49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i54 
y: i243 
=== Succesors ===
=== Usages ===
v20 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i54 y: i243  <|@  <|@
f <@*|@fixed>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 7]
profileData: INJECTED designatedSuccessorProbability: 0.01
stamp: void
=== Inputs ===
condition: v15 
=== Succesors ===
trueSuccessor: v19 
falseSuccessor: v17 
=== Usages ===
=== Predecessor ===
v10 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v15 #trueSuccessor: v19 #falseSuccessor: v17  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576818467378667813
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: i463 
=== Usages ===
v150 
=== Predecessor ===
v20 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i463  <|@  <|@
f <@~|@floating>@ <|@
tid v501 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: i52 
=== Succesors ===
=== Usages ===
i463 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: i52  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i463 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v501 
lastLocationAccess: - 
=== Succesors ===
next: v106 
=== Usages ===
i115 
=== Predecessor ===
v19 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v501 lastLocationAccess: - #next: v106  <|@  <|@
f <@~|@floating>@ <|@
tid v150 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
=== Inputs ===
guards: v442 v19 
=== Succesors ===
=== Usages ===
v106 
=== Predecessor ===
- >@ <|@
instruction <@MultiGuard|@jdk.graal.compiler.nodes.extended.MultiGuardNode>@ guards: v442 v19  <|@  <|@
f <@~|@floating>@ <|@
tid v502 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S2
=== Inputs ===
base: a3 
index: i53 
=== Succesors ===
=== Usages ===
v106 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: i53  <|@  <|@
f <@~|@floating>@ <|@
tid i115 <|@
d <@d|@=== Debug Properties ===
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
resultBits: 16
stamp: i16 [0 - 255] bits:00000000xxxxxxxx
=== Inputs ===
value: i463 
=== Succesors ===
=== Usages ===
v106 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i463  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v106 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: char
location: Array: char
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v150 
address: v502 
lastLocationAccess: - 
value: i115 
stateAfter: - 
=== Succesors ===
next: v31 
=== Usages ===
=== Predecessor ===
i463 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v150 address: v502 lastLocationAccess: - value: i115 stateAfter: - #next: v31  <|@  <|@
f <@~|@floating>@ <|@
tid i23 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 17]
stamp: i32
=== Inputs ===
x: i52 
y: i21 
=== Succesors ===
=== Usages ===
i52 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i52 y: i21  <|@  <|@
f <@~|@floating>@ <|@
tid i22 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 12]
stamp: i32
=== Inputs ===
x: i53 
y: i21 
=== Succesors ===
=== Usages ===
i53 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i53 y: i21  <|@  <|@
f <@~|@floating>@ <|@
tid i30 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 27]
stamp: i32
=== Inputs ===
x: i54 
y: i21 
=== Succesors ===
=== Usages ===
i54 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i54 y: i21  <|@  <|@
f <@*|@fixed>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 3]
stamp: void
=== Inputs ===
loopBegin: v10 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v106 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v10  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:766) [bci: 33]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v10 
=== Succesors ===
next: v205 
=== Usages ===
=== Predecessor ===
v20 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v10 #next: v205  <|@  <|@
f <@~|@floating>@ <|@
tid i387 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 8
stableDimension: 0
stamp: i32 [8]
stampKind: i32
value: int[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i399 i397 i398 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i403 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8
stableDimension: 0
stamp: i32 [-8]
stampKind: i32
value: int[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i404 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i404 <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
x: i5 
y: i403 
=== Succesors ===
=== Usages ===
v179 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i5 y: i403  <|@  <|@
f <@*|@fixed>@ <|@
tid v205 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v178 
=== Predecessor ===
v17 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B19" 
    successors "B19" "B20" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4616595334800895638
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i187 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 3]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v178 
values: i52 i398 
=== Succesors ===
=== Usages ===
j475 v503 i218 i398 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v178 values: i52 i398  <|@  <|@
f <@~|@floating>@ <|@
tid i188 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 3]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v178 
values: i53 i397 
=== Succesors ===
=== Usages ===
j478 v504 i219 i397 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v178 values: i53 i397  <|@  <|@
f <@~|@floating>@ <|@
tid i189 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 3]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v178 
values: i54 i399 
=== Succesors ===
=== Usages ===
v179 i399 i220 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v178 values: i54 i399  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v178 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 10
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 35.85565799139098
loopType: MAIN_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 3]
osrLoop: false
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 8
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v205 
=== Succesors ===
next: v182 
=== Usages ===
v180 v186 i187 i188 i189 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v205 #next: v182  <|@  <|@
f <@~|@floating>@ <|@
tid v179 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 7]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@4dc6bd49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i189 
y: i404 
=== Succesors ===
=== Usages ===
v182 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i189 y: i404  <|@  <|@
f <@*|@fixed>@ <|@
tid v182 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 7]
profileData: INJECTED designatedSuccessorProbability: 0.7768831908782481
stamp: void
=== Inputs ===
condition: v179 
=== Succesors ===
trueSuccessor: v181 
falseSuccessor: v180 
=== Usages ===
=== Predecessor ===
v178 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v179 #trueSuccessor: v181 #falseSuccessor: v180  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4614810349538580443
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v181 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: i464 
=== Usages ===
v204 
=== Predecessor ===
v182 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i464  <|@  <|@
f <@~|@floating>@ <|@
tid v503 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: i187 
=== Succesors ===
=== Usages ===
i464 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: i187  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i464 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v503 
lastLocationAccess: - 
=== Succesors ===
next: v197 
=== Usages ===
i200 
=== Predecessor ===
v181 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v503 lastLocationAccess: - #next: v197  <|@  <|@
f <@~|@floating>@ <|@
tid v204 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
=== Inputs ===
guards: v442 v181 
=== Succesors ===
=== Usages ===
v377 v197 v351 v261 v365 v293 v337 v307 
=== Predecessor ===
- >@ <|@
instruction <@MultiGuard|@jdk.graal.compiler.nodes.extended.MultiGuardNode>@ guards: v442 v181  <|@  <|@
f <@~|@floating>@ <|@
tid v504 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S2
=== Inputs ===
base: a3 
index: i188 
=== Succesors ===
=== Usages ===
v197 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: i188  <|@  <|@
f <@~|@floating>@ <|@
tid i200 <|@
d <@d|@=== Debug Properties ===
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
resultBits: 16
stamp: i16 [0 - 255] bits:00000000xxxxxxxx
=== Inputs ===
value: i464 
=== Succesors ===
=== Usages ===
v197 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i464  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v197 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: char
location: Array: char
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v204 
address: v504 
lastLocationAccess: - 
value: i200 
stateAfter: - 
=== Succesors ===
next: i465 
=== Usages ===
=== Predecessor ===
i464 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v204 address: v504 lastLocationAccess: - value: i200 stateAfter: - #next: i465  <|@  <|@
f <@~|@floating>@ <|@
tid j475 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i187 
=== Succesors ===
=== Usages ===
v507 v509 v511 v513 v515 v517 v519 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i187  <|@  <|@
f <@~|@floating>@ <|@
tid v507 <|@
d <@d|@=== Debug Properties ===
displacement: 17
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: j475 
=== Succesors ===
=== Usages ===
i465 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: j475  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i465 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v507 
lastLocationAccess: - 
=== Succesors ===
next: v261 
=== Usages ===
i264 
=== Predecessor ===
v197 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v507 lastLocationAccess: - #next: v261  <|@  <|@
f <@~|@floating>@ <|@
tid j478 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i188 
=== Succesors ===
=== Usages ===
v508 v510 v512 v514 v516 v518 v520 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i188  <|@  <|@
f <@~|@floating>@ <|@
tid v508 <|@
d <@d|@=== Debug Properties ===
displacement: 18
stamp: void*
stride: S2
=== Inputs ===
base: a3 
index: j478 
=== Succesors ===
=== Usages ===
v261 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: j478  <|@  <|@
f <@~|@floating>@ <|@
tid i264 <|@
d <@d|@=== Debug Properties ===
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
resultBits: 16
stamp: i16 [0 - 255] bits:00000000xxxxxxxx
=== Inputs ===
value: i465 
=== Succesors ===
=== Usages ===
v261 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i465  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v261 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: char
location: Array: char
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v204 
address: v508 
lastLocationAccess: - 
value: i264 
stateAfter: - 
=== Succesors ===
next: i466 
=== Usages ===
=== Predecessor ===
i465 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v204 address: v508 lastLocationAccess: - value: i264 stateAfter: - #next: i466  <|@  <|@
f <@~|@floating>@ <|@
tid v509 <|@
d <@d|@=== Debug Properties ===
displacement: 18
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: j475 
=== Succesors ===
=== Usages ===
i466 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: j475  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i466 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v509 
lastLocationAccess: - 
=== Succesors ===
next: v293 
=== Usages ===
i296 
=== Predecessor ===
v261 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v509 lastLocationAccess: - #next: v293  <|@  <|@
f <@~|@floating>@ <|@
tid v510 <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S2
=== Inputs ===
base: a3 
index: j478 
=== Succesors ===
=== Usages ===
v293 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: j478  <|@  <|@
f <@~|@floating>@ <|@
tid i296 <|@
d <@d|@=== Debug Properties ===
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
resultBits: 16
stamp: i16 [0 - 255] bits:00000000xxxxxxxx
=== Inputs ===
value: i466 
=== Succesors ===
=== Usages ===
v293 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i466  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v293 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: char
location: Array: char
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v204 
address: v510 
lastLocationAccess: - 
value: i296 
stateAfter: - 
=== Succesors ===
next: i467 
=== Usages ===
=== Predecessor ===
i466 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v204 address: v510 lastLocationAccess: - value: i296 stateAfter: - #next: i467  <|@  <|@
f <@~|@floating>@ <|@
tid v511 <|@
d <@d|@=== Debug Properties ===
displacement: 19
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: j475 
=== Succesors ===
=== Usages ===
i467 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: j475  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i467 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v511 
lastLocationAccess: - 
=== Succesors ===
next: v307 
=== Usages ===
i310 
=== Predecessor ===
v293 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v511 lastLocationAccess: - #next: v307  <|@  <|@
f <@~|@floating>@ <|@
tid v512 <|@
d <@d|@=== Debug Properties ===
displacement: 22
stamp: void*
stride: S2
=== Inputs ===
base: a3 
index: j478 
=== Succesors ===
=== Usages ===
v307 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: j478  <|@  <|@
f <@~|@floating>@ <|@
tid i310 <|@
d <@d|@=== Debug Properties ===
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
resultBits: 16
stamp: i16 [0 - 255] bits:00000000xxxxxxxx
=== Inputs ===
value: i467 
=== Succesors ===
=== Usages ===
v307 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i467  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v307 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: char
location: Array: char
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v204 
address: v512 
lastLocationAccess: - 
value: i310 
stateAfter: - 
=== Succesors ===
next: i468 
=== Usages ===
=== Predecessor ===
i467 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v204 address: v512 lastLocationAccess: - value: i310 stateAfter: - #next: i468  <|@  <|@
f <@~|@floating>@ <|@
tid v513 <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: j475 
=== Succesors ===
=== Usages ===
i468 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: j475  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i468 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v513 
lastLocationAccess: - 
=== Succesors ===
next: v337 
=== Usages ===
i340 
=== Predecessor ===
v307 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v513 lastLocationAccess: - #next: v337  <|@  <|@
f <@~|@floating>@ <|@
tid v514 <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S2
=== Inputs ===
base: a3 
index: j478 
=== Succesors ===
=== Usages ===
v337 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: j478  <|@  <|@
f <@~|@floating>@ <|@
tid i340 <|@
d <@d|@=== Debug Properties ===
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
resultBits: 16
stamp: i16 [0 - 255] bits:00000000xxxxxxxx
=== Inputs ===
value: i468 
=== Succesors ===
=== Usages ===
v337 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i468  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v337 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: char
location: Array: char
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v204 
address: v514 
lastLocationAccess: - 
value: i340 
stateAfter: - 
=== Succesors ===
next: i469 
=== Usages ===
=== Predecessor ===
i468 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v204 address: v514 lastLocationAccess: - value: i340 stateAfter: - #next: i469  <|@  <|@
f <@~|@floating>@ <|@
tid v515 <|@
d <@d|@=== Debug Properties ===
displacement: 21
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: j475 
=== Succesors ===
=== Usages ===
i469 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: j475  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i469 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v515 
lastLocationAccess: - 
=== Succesors ===
next: v351 
=== Usages ===
i354 
=== Predecessor ===
v337 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v515 lastLocationAccess: - #next: v351  <|@  <|@
f <@~|@floating>@ <|@
tid v516 <|@
d <@d|@=== Debug Properties ===
displacement: 26
stamp: void*
stride: S2
=== Inputs ===
base: a3 
index: j478 
=== Succesors ===
=== Usages ===
v351 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: j478  <|@  <|@
f <@~|@floating>@ <|@
tid i354 <|@
d <@d|@=== Debug Properties ===
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
resultBits: 16
stamp: i16 [0 - 255] bits:00000000xxxxxxxx
=== Inputs ===
value: i469 
=== Succesors ===
=== Usages ===
v351 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i469  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v351 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: char
location: Array: char
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v204 
address: v516 
lastLocationAccess: - 
value: i354 
stateAfter: - 
=== Succesors ===
next: i470 
=== Usages ===
=== Predecessor ===
i469 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v204 address: v516 lastLocationAccess: - value: i354 stateAfter: - #next: i470  <|@  <|@
f <@~|@floating>@ <|@
tid v517 <|@
d <@d|@=== Debug Properties ===
displacement: 22
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: j475 
=== Succesors ===
=== Usages ===
i470 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: j475  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i470 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v517 
lastLocationAccess: - 
=== Succesors ===
next: v365 
=== Usages ===
i368 
=== Predecessor ===
v351 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v517 lastLocationAccess: - #next: v365  <|@  <|@
f <@~|@floating>@ <|@
tid v518 <|@
d <@d|@=== Debug Properties ===
displacement: 28
stamp: void*
stride: S2
=== Inputs ===
base: a3 
index: j478 
=== Succesors ===
=== Usages ===
v365 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: j478  <|@  <|@
f <@~|@floating>@ <|@
tid i368 <|@
d <@d|@=== Debug Properties ===
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
resultBits: 16
stamp: i16 [0 - 255] bits:00000000xxxxxxxx
=== Inputs ===
value: i470 
=== Succesors ===
=== Usages ===
v365 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i470  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v365 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: char
location: Array: char
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v204 
address: v518 
lastLocationAccess: - 
value: i368 
stateAfter: - 
=== Succesors ===
next: i471 
=== Usages ===
=== Predecessor ===
i470 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v204 address: v518 lastLocationAccess: - value: i368 stateAfter: - #next: i471  <|@  <|@
f <@~|@floating>@ <|@
tid v519 <|@
d <@d|@=== Debug Properties ===
displacement: 23
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: j475 
=== Succesors ===
=== Usages ===
i471 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: j475  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i471 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v519 
lastLocationAccess: - 
=== Succesors ===
next: v377 
=== Usages ===
i380 
=== Predecessor ===
v365 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v519 lastLocationAccess: - #next: v377  <|@  <|@
f <@~|@floating>@ <|@
tid v520 <|@
d <@d|@=== Debug Properties ===
displacement: 30
stamp: void*
stride: S2
=== Inputs ===
base: a3 
index: j478 
=== Succesors ===
=== Usages ===
v377 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: j478  <|@  <|@
f <@~|@floating>@ <|@
tid i380 <|@
d <@d|@=== Debug Properties ===
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
resultBits: 16
stamp: i16 [0 - 255] bits:00000000xxxxxxxx
=== Inputs ===
value: i471 
=== Succesors ===
=== Usages ===
v377 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i471  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v377 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: char
location: Array: char
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v204 
address: v520 
lastLocationAccess: - 
value: i380 
stateAfter: - 
=== Succesors ===
next: v186 
=== Usages ===
=== Predecessor ===
i471 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v204 address: v520 lastLocationAccess: - value: i380 stateAfter: - #next: v186  <|@  <|@
f <@~|@floating>@ <|@
tid i399 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 27]
stamp: i32
=== Inputs ===
x: i189 
y: i387 
=== Succesors ===
=== Usages ===
i189 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i189 y: i387  <|@  <|@
f <@~|@floating>@ <|@
tid i397 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 12]
stamp: i32
=== Inputs ===
x: i188 
y: i387 
=== Succesors ===
=== Usages ===
i188 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i188 y: i387  <|@  <|@
f <@~|@floating>@ <|@
tid i398 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 17]
stamp: i32
=== Inputs ===
x: i187 
y: i387 
=== Succesors ===
=== Usages ===
i187 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i187 y: i387  <|@  <|@
f <@*|@fixed>@ <|@
tid v186 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 3]
stamp: void
=== Inputs ===
loopBegin: v178 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v377 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v178  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4606938027579086147
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v180 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:766) [bci: 33]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v178 
=== Succesors ===
next: v236 
=== Usages ===
=== Predecessor ===
v182 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v178 #next: v236  <|@  <|@
f <@*|@fixed>@ <|@
tid v236 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v209 
=== Predecessor ===
v180 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" 
    successors "B22" "B23" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607026540791548872
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i218 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 3]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v209 
values: i187 i215 
=== Succesors ===
=== Usages ===
i215 v505 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v209 values: i187 i215  <|@  <|@
f <@~|@floating>@ <|@
tid i219 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 3]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v209 
values: i188 i214 
=== Succesors ===
=== Usages ===
i214 v506 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v209 values: i188 i214  <|@  <|@
f <@~|@floating>@ <|@
tid i220 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 3]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v209 
values: i189 i216 
=== Succesors ===
=== Usages ===
v210 i216 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v209 values: i189 i216  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v209 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 10
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 35.85565799139098
loopType: POST_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 3]
osrLoop: false
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v236 
=== Succesors ===
next: v213 
=== Usages ===
v211 v217 i218 i219 i220 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v236 #next: v213  <|@  <|@
f <@~|@floating>@ <|@
tid v210 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 7]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@4dc6bd49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i220 
y: i5 
=== Succesors ===
=== Usages ===
v213 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i220 y: i5  <|@  <|@
f <@*|@fixed>@ <|@
tid v213 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 7]
profileData: INJECTED designatedSuccessorProbability: 0.01
stamp: void
=== Inputs ===
condition: v210 
=== Succesors ===
trueSuccessor: v212 
falseSuccessor: v211 
=== Usages ===
=== Predecessor ===
v209 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v210 #trueSuccessor: v212 #falseSuccessor: v211  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576818467378667812
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v212 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: i472 
=== Usages ===
v235 
=== Predecessor ===
v213 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i472  <|@  <|@
f <@~|@floating>@ <|@
tid v505 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: i218 
=== Succesors ===
=== Usages ===
i472 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: i218  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i472 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v505 
lastLocationAccess: - 
=== Succesors ===
next: v228 
=== Usages ===
i231 
=== Predecessor ===
v212 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v505 lastLocationAccess: - #next: v228  <|@  <|@
f <@~|@floating>@ <|@
tid v235 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
=== Inputs ===
guards: v442 v212 
=== Succesors ===
=== Usages ===
v228 
=== Predecessor ===
- >@ <|@
instruction <@MultiGuard|@jdk.graal.compiler.nodes.extended.MultiGuardNode>@ guards: v442 v212  <|@  <|@
f <@~|@floating>@ <|@
tid v506 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S2
=== Inputs ===
base: a3 
index: i219 
=== Succesors ===
=== Usages ===
v228 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: i219  <|@  <|@
f <@~|@floating>@ <|@
tid i231 <|@
d <@d|@=== Debug Properties ===
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
resultBits: 16
stamp: i16 [0 - 255] bits:00000000xxxxxxxx
=== Inputs ===
value: i472 
=== Succesors ===
=== Usages ===
v228 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i472  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v228 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: char
location: Array: char
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v235 
address: v506 
lastLocationAccess: - 
value: i231 
stateAfter: - 
=== Succesors ===
next: v217 
=== Usages ===
=== Predecessor ===
i472 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v235 address: v506 lastLocationAccess: - value: i231 stateAfter: - #next: v217  <|@  <|@
f <@~|@floating>@ <|@
tid i216 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 27]
stamp: i32
=== Inputs ===
x: i220 
y: i21 
=== Succesors ===
=== Usages ===
i220 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i220 y: i21  <|@  <|@
f <@~|@floating>@ <|@
tid i214 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 12]
stamp: i32
=== Inputs ===
x: i219 
y: i21 
=== Succesors ===
=== Usages ===
i219 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i219 y: i21  <|@  <|@
f <@~|@floating>@ <|@
tid i215 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 17]
stamp: i32
=== Inputs ===
x: i218 
y: i21 
=== Succesors ===
=== Usages ===
i218 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i218 y: i21  <|@  <|@
f <@*|@fixed>@ <|@
tid v217 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 3]
stamp: void
=== Inputs ===
loopBegin: v209 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v228 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v209  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4606938027579086147
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v211 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:766) [bci: 33]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v209 
=== Succesors ===
next: v48 
=== Usages ===
=== Predecessor ===
v213 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v209 #next: v48  <|@  <|@
f <@*|@fixed>@ <|@
tid v48 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:766) [bci: 33]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v47 
=== Predecessor ===
v211 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v47 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:766) [bci: 33]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v48 v49 
=== Succesors ===
next: v32 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v48 v49 #next: v32  <|@  <|@
f <@*|@fixed>@ <|@
tid v32 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:766) [bci: 33]
stamp: void
=== Inputs ===
memoryMap: - 
result: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v47 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v173 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v421 
=== Usages ===
=== Predecessor ===
v174 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v421  <|@  <|@
f <@~|@floating>@ <|@
tid i422 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
rawvalue: -20251
stableDimension: 0
stamp: i32 [-20251]
stampKind: i32
value: int[-20251|0xffffffffffffb0e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i409 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v421 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v405 
=== Predecessor ===
v173 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v169 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
next: v419 
=== Usages ===
=== Predecessor ===
v170 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v419  <|@  <|@
f <@~|@floating>@ <|@
tid i420 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
rawvalue: -16411
stableDimension: 0
stamp: i32 [-16411]
stampKind: i32
value: int[-16411|0xffffffffffffbfe5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i409 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v419 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v405 
=== Predecessor ===
v169 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v454 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v459 
=== Usages ===
=== Predecessor ===
v455 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v459  <|@  <|@
f <@*|@fixed>@ <|@
tid v459 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v405 
=== Predecessor ===
v454 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v453 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v417 
=== Usages ===
=== Predecessor ===
v457 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v417  <|@  <|@
f <@*|@fixed>@ <|@
tid v417 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v405 
=== Predecessor ===
v453 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v438 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
next: v458 
=== Usages ===
=== Predecessor ===
v439 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v458  <|@  <|@
f <@*|@fixed>@ <|@
tid v458 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v405 
=== Predecessor ===
v438 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v437 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
next: v414 
=== Usages ===
=== Predecessor ===
v441 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v414  <|@  <|@
f <@*|@fixed>@ <|@
tid v414 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v405 
=== Predecessor ===
v437 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B28" "B26" "B25" "B29" "B27" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i409 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: i32 [-25371 - -16411] bits:1...10xxxxxx11100101
valueDescription: i32
=== Inputs ===
merge: v405 
values: i415 i418 i420 i422 i415 i418 
=== Succesors ===
=== Usages ===
v411 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v405 values: i415 i418 i420 i422 i415 i418  <|@  <|@
f <@~|@floating>@ <|@
tid j410 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: i64 [0 - 24] bits:0...0xx000
valueDescription: i64
=== Inputs ===
merge: v405 
values: j416 j416 j408 j408 j416 j416 
=== Succesors ===
=== Usages ===
v411 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v405 values: j416 j416 j408 j408 j416 j416  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v405 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v414 v417 v419 v421 v458 v459 
=== Succesors ===
next: v411 
=== Usages ===
i409 j410 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v414 v417 v419 v421 v458 v459 #next: v411  <|@  <|@
f <@*|@fixed>@ <|@
tid v411 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: void
=== Inputs ===
stateBefore: ?6 
actionAndReason: i409 
speculation: j410 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v405 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?6 actionAndReason: i409 speculation: j410  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGeneration"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@20983de9 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v4|DWORD trueDestinationProbability: 0.027132876049413834 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD - 
>@ <|@ instruction v5|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = INC v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = DEC v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOV v7|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = DEC v8|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v4|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B30" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOVSXD v6|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = ADD (x: v10|QWORD, y: v9|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOV v5|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v12|QWORD, y: v11|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B30 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B29" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v5|DWORD, y: v6|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD - 
>@ <|@ instruction v13|DWORD = MOV [v2|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = INC v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v4|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B28" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOVSXD v14|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = ADD (x: v15|QWORD, y: v9|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOV v13|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v17|QWORD, y: v16|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B28 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B27" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v14|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" "B11" 
    successors "B13" "B26" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v5|DWORD, y: v1|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B25" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v3|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = MOVZXB [v0|QWORD[.] + v1|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v3|DWORD * 2 + 16], y: v18|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction CMP v4|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v4|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1], v14|DWORD, v6|DWORD] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607026540791548873
    begin_IR
      LIR
      nr   -1  <|@ instruction [v20|DWORD, v21|DWORD, v22|DWORD] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v19|DWORD, y: v20|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576818467378667813
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = MOVZXB [v0|QWORD[.] + v22|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v21|DWORD * 2 + 16], y: v23|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = INC v22|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = INC v21|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = INC v20|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v26|DWORD, v25|DWORD, v24|DWORD] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = LEA [v4|DWORD - 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v22|DWORD, v21|DWORD, v20|DWORD] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B19" 
    successors "B19" "B20" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4616595334800895638
    begin_IR
      LIR
      nr   -1  <|@ instruction [v28|DWORD, v29|DWORD, v30|DWORD] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v27|DWORD, y: v30|DWORD) trueDestinationProbability: 0.7768831908782481 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4614810349538580443
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = MOVZXB [v0|QWORD[.] + v28|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v29|DWORD * 2 + 16], y: v31|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = MOVSXD v28|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = MOVSXD v29|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = MOVZXB [v0|QWORD[.] + v32|QWORD * 1 + 17] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v33|QWORD * 2 + 18], y: v34|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = MOVZXB [v0|QWORD[.] + v32|QWORD * 1 + 18] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v33|QWORD * 2 + 20], y: v35|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = MOVZXB [v0|QWORD[.] + v32|QWORD * 1 + 19] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v33|QWORD * 2 + 22], y: v36|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = MOVZXB [v0|QWORD[.] + v32|QWORD * 1 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v33|QWORD * 2 + 24], y: v37|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = MOVZXB [v0|QWORD[.] + v32|QWORD * 1 + 21] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v33|QWORD * 2 + 26], y: v38|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = MOVZXB [v0|QWORD[.] + v32|QWORD * 1 + 22] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v33|QWORD * 2 + 28], y: v39|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v40|DWORD = MOVZXB [v0|QWORD[.] + v32|QWORD * 1 + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v33|QWORD * 2 + 30], y: v40|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = LEA [v30|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = LEA [v29|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = LEA [v28|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v43|DWORD, v42|DWORD, v41|DWORD] destination: B19 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4606938027579086147
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v28|DWORD, v29|DWORD, v30|DWORD] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" 
    successors "B22" "B23" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607026540791548872
    begin_IR
      LIR
      nr   -1  <|@ instruction [v44|DWORD, v45|DWORD, v46|DWORD] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v46|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576818467378667812
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = MOVZXB [v0|QWORD[.] + v44|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v45|DWORD * 2 + 16], y: v47|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = INC v46|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v49|DWORD = INC v45|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = INC v44|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v50|DWORD, v49|DWORD, v48|DWORD] destination: B22 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4606938027579086147
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B24" 
    xhandlers
    flags 
    probability 4583477740478224256
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B1 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-22811|0xffffffffffffa6e5], long[24|0x18]] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-16411|0xffffffffffffbfe5], long[0|0x0]] destination: B26 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-20251|0xffffffffffffb0e5], long[0|0x0]] destination: B25 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-25371|0xffffffffffff9ce5], long[24|0x18]] destination: B27 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-25371|0xffffffffffff9ce5], long[24|0x18]] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-22811|0xffffffffffffa6e5], long[24|0x18]] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B28" "B26" "B25" "B29" "B27" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr   -1  <|@ instruction [v51|DWORD, v52|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v51|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v52|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore        5
     3: iload         5
     5: iload         4
     7: if_icmpge     33
    10: aload_2       
    11: iload_3       
    12: iinc          
    15: aload_0       
    16: iload_1       
    17: iinc          
    20: baload        
    21: sipush        255
    24: iand          
    25: i2c           
    26: castore       
    27: iinc          
    30: goto          3
    33: return        
   <|@
end_bytecodes
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v37 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: v37  <|@  <|@
f <@~|@floating>@ <|@
tid i5 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
index: 4
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?6 v139 i243 i127 v55 i404 v210 v242 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i21 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 12]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i22 i23 i30 i38 i39 i54 v55 i214 i215 i216 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v55 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 7]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@4dc6bd49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i5 
y: i21 
=== Succesors ===
=== Usages ===
v37 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i5 y: i21  <|@  <|@
f <@*|@fixed>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 7]
profileData: PROFILED designatedSuccessorProbability: 0.027132876049413834
stamp: void
=== Inputs ===
condition: v55 
=== Succesors ===
trueSuccessor: v35 
falseSuccessor: v36 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v55 #trueSuccessor: v35 #falseSuccessor: v36  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@20983de9 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v4|DWORD trueDestinationProbability: 0.027132876049413834 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B24" 
    xhandlers
    flags 
    probability 4583477740478224256
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v35 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:766) [bci: 33]
stamp: void
=== Inputs ===
=== Succesors ===
next: v49 
=== Usages ===
=== Predecessor ===
v37 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v49  <|@  <|@
f <@*|@fixed>@ <|@
tid v49 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:766) [bci: 33]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v47 
=== Predecessor ===
v35 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B1 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v36 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: i460 
=== Usages ===
=== Predecessor ===
v37 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i460  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a# byte[]
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?6 v519 v517 v497 v498 v501 v503 v505 v507 v509 v511 v513 v515 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
result v1|DWORD <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?6 v498 i39 v63 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a3 <|@
result v2|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: a# char[]
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?6 v520 v518 v499 v500 v502 v504 v506 v508 v510 v512 v514 v516 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i4 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
index: 3
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?6 v500 i38 v78 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?6 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: iconst_0
code: ResolvedJavaMethodBytecode<StringLatin1.inflate(byte[], int, char[], int, int)>
localsSize: 6
locksSize: 0
sourceFile: StringLatin1.java
sourceLine: 763
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i2 a3 i4 i5 
=== Succesors ===
=== Usages ===
v411 i460 i461 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 a3 i4 i5  <|@  <|@
f <@~|@floating>@ <|@
tid v497 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i460 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i460 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-14859|0xffffffffffffc5f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?6 
guard: - 
address: v497 
lastLocationAccess: - 
=== Succesors ===
next: v433 
=== Usages ===
v63 v135 j125 
=== Predecessor ===
v36 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?6 guard: - address: v497 lastLocationAccess: - #next: v433  <|@  <|@
f <@~|@floating>@ <|@
tid j416 <|@
result long[24|0x18] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
rawvalue: 24
stableDimension: 0
stamp: i64 [24]
stampKind: i64
value: long[24|0x18]
=== Inputs ===
=== Succesors ===
=== Usages ===
j410 j410 j410 j410 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i39 <|@
result v6|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 17]
stamp: i32
=== Inputs ===
x: i2 
y: i21 
=== Succesors ===
=== Usages ===
v135 i52 j129 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i2 y: i21  <|@  <|@
f <@~|@floating>@ <|@
tid i126 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i32 [-1]
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i127 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i127 <|@
result v7|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
x: i5 
y: i126 
=== Succesors ===
=== Usages ===
j473 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i5 y: i126  <|@  <|@
f <@~|@floating>@ <|@
tid j473 <|@
result v8|QWORD <|@
d <@d|@=== Debug Properties ===
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i127 
=== Succesors ===
=== Usages ===
j132 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i127  <|@  <|@
f <@~|@floating>@ <|@
tid j131 <|@
result long[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1]
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j132 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j132 <|@
result v9|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64 [-1 - 4294967294]
=== Inputs ===
x: j473 
y: j131 
=== Succesors ===
=== Usages ===
j133 j144 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j473 y: j131  <|@  <|@
f <@~|@floating>@ <|@
tid i138 <|@
result int[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
rawvalue: 2
stableDimension: 0
stamp: i32 [2]
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
v139 i243 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v139 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@4dc6bd49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i5 
y: i138 
=== Succesors ===
=== Usages ===
v433 v449 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i5 y: i138  <|@  <|@
f <@*|@fixed>@ <|@
tid v433 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
profileData: INJECTED designatedSuccessorProbability: 0.5
stamp: void
=== Inputs ===
condition: v139 
=== Succesors ===
trueSuccessor: v429 
falseSuccessor: v432 
=== Usages ===
=== Predecessor ===
i460 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v139 #trueSuccessor: v429 #falseSuccessor: v432  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD - 
>@ <|@ instruction v5|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = INC v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = DEC v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOV v7|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = DEC v8|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v4|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v429 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
next: v427 
=== Usages ===
=== Predecessor ===
v433 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v427  <|@  <|@
f <@*|@fixed>@ <|@
tid v427 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v426 
=== Predecessor ===
v429 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B30" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v432 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
next: v441 
=== Usages ===
=== Predecessor ===
v433 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v441  <|@  <|@
f <@~|@floating>@ <|@
tid j129 <|@
result v10|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i39 
=== Succesors ===
=== Usages ===
j133 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i39  <|@  <|@
f <@~|@floating>@ <|@
tid j133 <|@
result v11|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64 [-2147483649 - 6442450941]
=== Inputs ===
x: j129 
y: j132 
=== Succesors ===
=== Usages ===
v134 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j129 y: j132  <|@  <|@
f <@~|@floating>@ <|@
tid j125 <|@
result v12|QWORD <|@
d <@d|@=== Debug Properties ===
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i460 
=== Succesors ===
=== Usages ===
v134 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i460  <|@  <|@
f <@~|@floating>@ <|@
tid v134 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@40aab068
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j133 
y: j125 
=== Succesors ===
=== Usages ===
v441 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j133 y: j125  <|@  <|@
f <@~|@floating>@ <|@
tid i415 <|@
result int[-22811|0xffffffffffffa6e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
rawvalue: -22811
stableDimension: 0
stamp: i32 [-22811]
stampKind: i32
value: int[-22811|0xffffffffffffa6e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i409 i409 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v441 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v134 
=== Succesors ===
trueSuccessor: v440 
falseSuccessor: v437 
=== Usages ===
=== Predecessor ===
v432 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v134 #trueSuccessor: v440 #falseSuccessor: v437  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOVSXD v6|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = ADD (x: v10|QWORD, y: v9|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOV v5|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v12|QWORD, y: v11|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B30 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B29" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v440 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
next: v439 
=== Usages ===
=== Predecessor ===
v441 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v439  <|@  <|@
f <@~|@floating>@ <|@
tid v135 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@40aab068
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i39 
y: i460 
=== Succesors ===
=== Usages ===
v439 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i39 y: i460  <|@  <|@
f <@*|@fixed>@ <|@
tid v439 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v135 
=== Succesors ===
trueSuccessor: v430 
falseSuccessor: v438 
=== Usages ===
=== Predecessor ===
v440 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v135 #trueSuccessor: v430 #falseSuccessor: v438  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v5|DWORD, y: v6|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v430 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
next: v428 
=== Usages ===
=== Predecessor ===
v439 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v428  <|@  <|@
f <@*|@fixed>@ <|@
tid v428 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v426 
=== Predecessor ===
v430 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v426 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v427 v428 
=== Succesors ===
next: i461 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v427 v428 #next: i461  <|@  <|@
f <@~|@floating>@ <|@
tid v499 <|@
result [v2|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
i461 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i461 <|@
result v13|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-18955|0xffffffffffffb5f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?6 
guard: - 
address: v499 
lastLocationAccess: - 
=== Succesors ===
next: v449 
=== Usages ===
v78 v146 j142 
=== Predecessor ===
v426 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?6 guard: - address: v499 lastLocationAccess: - #next: v449  <|@  <|@
f <@~|@floating>@ <|@
tid i38 <|@
result v14|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 12]
stamp: i32
=== Inputs ===
x: i4 
y: i21 
=== Succesors ===
=== Usages ===
v146 i53 j143 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i4 y: i21  <|@  <|@
f <@*|@fixed>@ <|@
tid v449 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
profileData: INJECTED designatedSuccessorProbability: 0.5
stamp: void
=== Inputs ===
condition: v139 
=== Succesors ===
trueSuccessor: v445 
falseSuccessor: v448 
=== Usages ===
=== Predecessor ===
i461 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v139 #trueSuccessor: v445 #falseSuccessor: v448  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD - 
>@ <|@ instruction v13|DWORD = MOV [v2|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = INC v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v4|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v445 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v443 
=== Usages ===
=== Predecessor ===
v449 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v443  <|@  <|@
f <@*|@fixed>@ <|@
tid v443 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v442 
=== Predecessor ===
v445 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B28" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v448 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v457 
=== Usages ===
=== Predecessor ===
v449 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v457  <|@  <|@
f <@~|@floating>@ <|@
tid j143 <|@
result v15|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i38 
=== Succesors ===
=== Usages ===
j144 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i38  <|@  <|@
f <@~|@floating>@ <|@
tid j144 <|@
result v16|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64 [-2147483649 - 6442450941]
=== Inputs ===
x: j132 
y: j143 
=== Succesors ===
=== Usages ===
v145 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j132 y: j143  <|@  <|@
f <@~|@floating>@ <|@
tid j142 <|@
result v17|QWORD <|@
d <@d|@=== Debug Properties ===
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i461 
=== Succesors ===
=== Usages ===
v145 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i461  <|@  <|@
f <@~|@floating>@ <|@
tid v145 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@40aab068
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j144 
y: j142 
=== Succesors ===
=== Usages ===
v457 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j144 y: j142  <|@  <|@
f <@~|@floating>@ <|@
tid i418 <|@
result int[-25371|0xffffffffffff9ce5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
rawvalue: -25371
stableDimension: 0
stamp: i32 [-25371]
stampKind: i32
value: int[-25371|0xffffffffffff9ce5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i409 i409 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v457 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v145 
=== Succesors ===
trueSuccessor: v456 
falseSuccessor: v453 
=== Usages ===
=== Predecessor ===
v448 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v145 #trueSuccessor: v456 #falseSuccessor: v453  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOVSXD v14|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = ADD (x: v15|QWORD, y: v9|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOV v13|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v17|QWORD, y: v16|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B28 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B27" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v456 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v455 
=== Usages ===
=== Predecessor ===
v457 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v455  <|@  <|@
f <@~|@floating>@ <|@
tid v146 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@40aab068
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i38 
y: i461 
=== Succesors ===
=== Usages ===
v455 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i38 y: i461  <|@  <|@
f <@*|@fixed>@ <|@
tid v455 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v146 
=== Succesors ===
trueSuccessor: v446 
falseSuccessor: v454 
=== Usages ===
=== Predecessor ===
v456 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v146 #trueSuccessor: v446 #falseSuccessor: v454  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v14|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v446 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v444 
=== Usages ===
=== Predecessor ===
v455 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v444  <|@  <|@
f <@*|@fixed>@ <|@
tid v444 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v442 
=== Predecessor ===
v446 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" "B11" 
    successors "B13" "B26" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v442 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v443 v444 
=== Succesors ===
next: v170 
=== Usages ===
v150 v235 v204 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v443 v444 #next: v170  <|@  <|@
f <@~|@floating>@ <|@
tid v63 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@40aab068
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i460 
=== Succesors ===
=== Usages ===
v170 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i2 y: i460  <|@  <|@
f <@~|@floating>@ <|@
tid j408 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
rawvalue: 0
stableDimension: 0
stamp: i64 [0]
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j410 j410 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v170 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v63 
=== Succesors ===
trueSuccessor: v167 
falseSuccessor: v169 
=== Usages ===
=== Predecessor ===
v442 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v63 #trueSuccessor: v167 #falseSuccessor: v169  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v5|DWORD, y: v1|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B25" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v167 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
next: v174 
=== Usages ===
=== Predecessor ===
v170 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v174  <|@  <|@
f <@~|@floating>@ <|@
tid v78 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@40aab068
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i4 
y: i461 
=== Succesors ===
=== Usages ===
v174 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i4 y: i461  <|@  <|@
f <@*|@fixed>@ <|@
tid v174 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v78 
=== Succesors ===
trueSuccessor: v171 
falseSuccessor: v173 
=== Usages ===
=== Predecessor ===
v167 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v78 #trueSuccessor: v171 #falseSuccessor: v173  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v3|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v171 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: i462 
=== Usages ===
v86 
=== Predecessor ===
v174 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i462  <|@  <|@
f <@~|@floating>@ <|@
tid v498 <|@
result [v0|QWORD[.] + v1|DWORD * 1 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: i2 
=== Succesors ===
=== Usages ===
i462 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: i2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i462 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v498 
lastLocationAccess: - 
=== Succesors ===
next: v86 
=== Usages ===
i111 
=== Predecessor ===
v171 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v498 lastLocationAccess: - #next: v86  <|@  <|@
f <@~|@floating>@ <|@
tid v500 <|@
result [v2|QWORD[.] + v3|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S2
=== Inputs ===
base: a3 
index: i4 
=== Succesors ===
=== Usages ===
v86 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: i4  <|@  <|@
f <@~|@floating>@ <|@
tid i111 <|@
result v18|DWORD <|@
d <@d|@=== Debug Properties ===
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
resultBits: 16
stamp: i16 [0 - 255] bits:00000000xxxxxxxx
=== Inputs ===
value: i462 
=== Succesors ===
=== Usages ===
v86 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i462  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v86 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: char
location: Array: char
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v171 
address: v500 
lastLocationAccess: - 
value: i111 
stateAfter: - 
=== Succesors ===
next: v9 
=== Usages ===
=== Predecessor ===
i462 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v171 address: v500 lastLocationAccess: - value: i111 stateAfter: - #next: v9  <|@  <|@
f <@~|@floating>@ <|@
tid i241 <|@
result int[3|0x3] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 3
stableDimension: 0
stamp: i32 [3]
stampKind: i32
value: int[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
v242 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v242 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@4dc6bd49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i5 
y: i241 
=== Succesors ===
=== Usages ===
i243 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i5 y: i241  <|@  <|@
f <@~|@floating>@ <|@
tid i243 <|@
result v19|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-2147483648 - 2]
=== Inputs ===
condition: v242 
trueValue: i5 
falseValue: i138 
=== Succesors ===
=== Usages ===
v15 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v242 trueValue: i5 falseValue: i138  <|@  <|@
f <@*|@fixed>@ <|@
tid v9 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v10 
=== Predecessor ===
v86 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = MOVZXB [v0|QWORD[.] + v1|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v3|DWORD * 2 + 16], y: v18|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction CMP v4|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v4|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1], v14|DWORD, v6|DWORD] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607026540791548873
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i54 <|@
result v20|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 3]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v10 
values: i21 i30 
=== Succesors ===
=== Usages ===
i30 v15 i189 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v10 values: i21 i30  <|@  <|@
f <@~|@floating>@ <|@
tid i53 <|@
result v21|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 3]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v10 
values: i38 i22 
=== Succesors ===
=== Usages ===
v502 i22 i188 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v10 values: i38 i22  <|@  <|@
f <@~|@floating>@ <|@
tid i52 <|@
result v22|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 3]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v10 
values: i39 i23 
=== Succesors ===
=== Usages ===
v501 i23 i187 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v10 values: i39 i23  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v10 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: -1
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 35.85565799139098
loopType: PRE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 3]
osrLoop: false
peelings: 1
rotated: false
splits: 2
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v9 
=== Succesors ===
next: v20 
=== Usages ===
i54 i53 i52 v17 v31 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v9 #next: v20  <|@  <|@
f <@~|@floating>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 7]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@4dc6bd49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i54 
y: i243 
=== Succesors ===
=== Usages ===
v20 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i54 y: i243  <|@  <|@
f <@*|@fixed>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 7]
profileData: INJECTED designatedSuccessorProbability: 0.01
stamp: void
=== Inputs ===
condition: v15 
=== Succesors ===
trueSuccessor: v19 
falseSuccessor: v17 
=== Usages ===
=== Predecessor ===
v10 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v15 #trueSuccessor: v19 #falseSuccessor: v17  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v20|DWORD, v21|DWORD, v22|DWORD] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v19|DWORD, y: v20|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576818467378667813
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: i463 
=== Usages ===
v150 
=== Predecessor ===
v20 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i463  <|@  <|@
f <@~|@floating>@ <|@
tid v501 <|@
result [v0|QWORD[.] + v22|DWORD * 1 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: i52 
=== Succesors ===
=== Usages ===
i463 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: i52  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i463 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v501 
lastLocationAccess: - 
=== Succesors ===
next: v106 
=== Usages ===
i115 
=== Predecessor ===
v19 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v501 lastLocationAccess: - #next: v106  <|@  <|@
f <@~|@floating>@ <|@
tid v150 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
=== Inputs ===
guards: v442 v19 
=== Succesors ===
=== Usages ===
v106 
=== Predecessor ===
- >@ <|@
instruction <@MultiGuard|@jdk.graal.compiler.nodes.extended.MultiGuardNode>@ guards: v442 v19  <|@  <|@
f <@~|@floating>@ <|@
tid v502 <|@
result [v2|QWORD[.] + v21|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S2
=== Inputs ===
base: a3 
index: i53 
=== Succesors ===
=== Usages ===
v106 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: i53  <|@  <|@
f <@~|@floating>@ <|@
tid i115 <|@
result v23|DWORD <|@
d <@d|@=== Debug Properties ===
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
resultBits: 16
stamp: i16 [0 - 255] bits:00000000xxxxxxxx
=== Inputs ===
value: i463 
=== Succesors ===
=== Usages ===
v106 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i463  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v106 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: char
location: Array: char
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v150 
address: v502 
lastLocationAccess: - 
value: i115 
stateAfter: - 
=== Succesors ===
next: v31 
=== Usages ===
=== Predecessor ===
i463 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v150 address: v502 lastLocationAccess: - value: i115 stateAfter: - #next: v31  <|@  <|@
f <@~|@floating>@ <|@
tid i23 <|@
result v24|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 17]
stamp: i32
=== Inputs ===
x: i52 
y: i21 
=== Succesors ===
=== Usages ===
i52 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i52 y: i21  <|@  <|@
f <@~|@floating>@ <|@
tid i22 <|@
result v25|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 12]
stamp: i32
=== Inputs ===
x: i53 
y: i21 
=== Succesors ===
=== Usages ===
i53 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i53 y: i21  <|@  <|@
f <@~|@floating>@ <|@
tid i30 <|@
result v26|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 27]
stamp: i32
=== Inputs ===
x: i54 
y: i21 
=== Succesors ===
=== Usages ===
i54 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i54 y: i21  <|@  <|@
f <@*|@fixed>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 3]
stamp: void
=== Inputs ===
loopBegin: v10 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v106 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v10  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = MOVZXB [v0|QWORD[.] + v22|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v21|DWORD * 2 + 16], y: v23|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = INC v22|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = INC v21|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = INC v20|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v26|DWORD, v25|DWORD, v24|DWORD] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:766) [bci: 33]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v10 
=== Succesors ===
next: v205 
=== Usages ===
=== Predecessor ===
v20 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v10 #next: v205  <|@  <|@
f <@~|@floating>@ <|@
tid i387 <|@
result int[8|0x8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 8
stableDimension: 0
stamp: i32 [8]
stampKind: i32
value: int[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i399 i397 i398 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i403 <|@
result int[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8
stableDimension: 0
stamp: i32 [-8]
stampKind: i32
value: int[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i404 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i404 <|@
result v27|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
x: i5 
y: i403 
=== Succesors ===
=== Usages ===
v179 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i5 y: i403  <|@  <|@
f <@*|@fixed>@ <|@
tid v205 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v178 
=== Predecessor ===
v17 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = LEA [v4|DWORD - 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v22|DWORD, v21|DWORD, v20|DWORD] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B19" 
    successors "B19" "B20" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4616595334800895638
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i187 <|@
result v28|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 3]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v178 
values: i52 i398 
=== Succesors ===
=== Usages ===
j475 v503 i218 i398 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v178 values: i52 i398  <|@  <|@
f <@~|@floating>@ <|@
tid i188 <|@
result v29|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 3]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v178 
values: i53 i397 
=== Succesors ===
=== Usages ===
j478 v504 i219 i397 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v178 values: i53 i397  <|@  <|@
f <@~|@floating>@ <|@
tid i189 <|@
result v30|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 3]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v178 
values: i54 i399 
=== Succesors ===
=== Usages ===
v179 i399 i220 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v178 values: i54 i399  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v178 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 10
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 35.85565799139098
loopType: MAIN_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 3]
osrLoop: false
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 8
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v205 
=== Succesors ===
next: v182 
=== Usages ===
v180 v186 i187 i188 i189 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v205 #next: v182  <|@  <|@
f <@~|@floating>@ <|@
tid v179 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 7]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@4dc6bd49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i189 
y: i404 
=== Succesors ===
=== Usages ===
v182 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i189 y: i404  <|@  <|@
f <@*|@fixed>@ <|@
tid v182 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 7]
profileData: INJECTED designatedSuccessorProbability: 0.7768831908782481
stamp: void
=== Inputs ===
condition: v179 
=== Succesors ===
trueSuccessor: v181 
falseSuccessor: v180 
=== Usages ===
=== Predecessor ===
v178 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v179 #trueSuccessor: v181 #falseSuccessor: v180  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v28|DWORD, v29|DWORD, v30|DWORD] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v27|DWORD, y: v30|DWORD) trueDestinationProbability: 0.7768831908782481 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4614810349538580443
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v181 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: i464 
=== Usages ===
v204 
=== Predecessor ===
v182 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i464  <|@  <|@
f <@~|@floating>@ <|@
tid v503 <|@
result [v0|QWORD[.] + v28|DWORD * 1 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: i187 
=== Succesors ===
=== Usages ===
i464 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: i187  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i464 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v503 
lastLocationAccess: - 
=== Succesors ===
next: v197 
=== Usages ===
i200 
=== Predecessor ===
v181 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v503 lastLocationAccess: - #next: v197  <|@  <|@
f <@~|@floating>@ <|@
tid v204 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
=== Inputs ===
guards: v442 v181 
=== Succesors ===
=== Usages ===
v377 v197 v351 v261 v365 v293 v337 v307 
=== Predecessor ===
- >@ <|@
instruction <@MultiGuard|@jdk.graal.compiler.nodes.extended.MultiGuardNode>@ guards: v442 v181  <|@  <|@
f <@~|@floating>@ <|@
tid v504 <|@
result [v2|QWORD[.] + v29|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S2
=== Inputs ===
base: a3 
index: i188 
=== Succesors ===
=== Usages ===
v197 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: i188  <|@  <|@
f <@~|@floating>@ <|@
tid i200 <|@
result v31|DWORD <|@
d <@d|@=== Debug Properties ===
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
resultBits: 16
stamp: i16 [0 - 255] bits:00000000xxxxxxxx
=== Inputs ===
value: i464 
=== Succesors ===
=== Usages ===
v197 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i464  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v197 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: char
location: Array: char
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v204 
address: v504 
lastLocationAccess: - 
value: i200 
stateAfter: - 
=== Succesors ===
next: i465 
=== Usages ===
=== Predecessor ===
i464 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v204 address: v504 lastLocationAccess: - value: i200 stateAfter: - #next: i465  <|@  <|@
f <@~|@floating>@ <|@
tid j475 <|@
result v32|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i187 
=== Succesors ===
=== Usages ===
v507 v509 v511 v513 v515 v517 v519 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i187  <|@  <|@
f <@~|@floating>@ <|@
tid v507 <|@
result [v0|QWORD[.] + v32|QWORD * 1 + 17] <|@
d <@d|@=== Debug Properties ===
displacement: 17
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: j475 
=== Succesors ===
=== Usages ===
i465 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: j475  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i465 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v507 
lastLocationAccess: - 
=== Succesors ===
next: v261 
=== Usages ===
i264 
=== Predecessor ===
v197 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v507 lastLocationAccess: - #next: v261  <|@  <|@
f <@~|@floating>@ <|@
tid j478 <|@
result v33|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i188 
=== Succesors ===
=== Usages ===
v508 v510 v512 v514 v516 v518 v520 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i188  <|@  <|@
f <@~|@floating>@ <|@
tid v508 <|@
result [v2|QWORD[.] + v33|QWORD * 2 + 18] <|@
d <@d|@=== Debug Properties ===
displacement: 18
stamp: void*
stride: S2
=== Inputs ===
base: a3 
index: j478 
=== Succesors ===
=== Usages ===
v261 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: j478  <|@  <|@
f <@~|@floating>@ <|@
tid i264 <|@
result v34|DWORD <|@
d <@d|@=== Debug Properties ===
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
resultBits: 16
stamp: i16 [0 - 255] bits:00000000xxxxxxxx
=== Inputs ===
value: i465 
=== Succesors ===
=== Usages ===
v261 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i465  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v261 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: char
location: Array: char
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v204 
address: v508 
lastLocationAccess: - 
value: i264 
stateAfter: - 
=== Succesors ===
next: i466 
=== Usages ===
=== Predecessor ===
i465 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v204 address: v508 lastLocationAccess: - value: i264 stateAfter: - #next: i466  <|@  <|@
f <@~|@floating>@ <|@
tid v509 <|@
result [v0|QWORD[.] + v32|QWORD * 1 + 18] <|@
d <@d|@=== Debug Properties ===
displacement: 18
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: j475 
=== Succesors ===
=== Usages ===
i466 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: j475  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i466 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v509 
lastLocationAccess: - 
=== Succesors ===
next: v293 
=== Usages ===
i296 
=== Predecessor ===
v261 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v509 lastLocationAccess: - #next: v293  <|@  <|@
f <@~|@floating>@ <|@
tid v510 <|@
result [v2|QWORD[.] + v33|QWORD * 2 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S2
=== Inputs ===
base: a3 
index: j478 
=== Succesors ===
=== Usages ===
v293 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: j478  <|@  <|@
f <@~|@floating>@ <|@
tid i296 <|@
result v35|DWORD <|@
d <@d|@=== Debug Properties ===
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
resultBits: 16
stamp: i16 [0 - 255] bits:00000000xxxxxxxx
=== Inputs ===
value: i466 
=== Succesors ===
=== Usages ===
v293 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i466  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v293 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: char
location: Array: char
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v204 
address: v510 
lastLocationAccess: - 
value: i296 
stateAfter: - 
=== Succesors ===
next: i467 
=== Usages ===
=== Predecessor ===
i466 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v204 address: v510 lastLocationAccess: - value: i296 stateAfter: - #next: i467  <|@  <|@
f <@~|@floating>@ <|@
tid v511 <|@
result [v0|QWORD[.] + v32|QWORD * 1 + 19] <|@
d <@d|@=== Debug Properties ===
displacement: 19
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: j475 
=== Succesors ===
=== Usages ===
i467 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: j475  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i467 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v511 
lastLocationAccess: - 
=== Succesors ===
next: v307 
=== Usages ===
i310 
=== Predecessor ===
v293 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v511 lastLocationAccess: - #next: v307  <|@  <|@
f <@~|@floating>@ <|@
tid v512 <|@
result [v2|QWORD[.] + v33|QWORD * 2 + 22] <|@
d <@d|@=== Debug Properties ===
displacement: 22
stamp: void*
stride: S2
=== Inputs ===
base: a3 
index: j478 
=== Succesors ===
=== Usages ===
v307 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: j478  <|@  <|@
f <@~|@floating>@ <|@
tid i310 <|@
result v36|DWORD <|@
d <@d|@=== Debug Properties ===
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
resultBits: 16
stamp: i16 [0 - 255] bits:00000000xxxxxxxx
=== Inputs ===
value: i467 
=== Succesors ===
=== Usages ===
v307 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i467  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v307 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: char
location: Array: char
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v204 
address: v512 
lastLocationAccess: - 
value: i310 
stateAfter: - 
=== Succesors ===
next: i468 
=== Usages ===
=== Predecessor ===
i467 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v204 address: v512 lastLocationAccess: - value: i310 stateAfter: - #next: i468  <|@  <|@
f <@~|@floating>@ <|@
tid v513 <|@
result [v0|QWORD[.] + v32|QWORD * 1 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: j475 
=== Succesors ===
=== Usages ===
i468 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: j475  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i468 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v513 
lastLocationAccess: - 
=== Succesors ===
next: v337 
=== Usages ===
i340 
=== Predecessor ===
v307 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v513 lastLocationAccess: - #next: v337  <|@  <|@
f <@~|@floating>@ <|@
tid v514 <|@
result [v2|QWORD[.] + v33|QWORD * 2 + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S2
=== Inputs ===
base: a3 
index: j478 
=== Succesors ===
=== Usages ===
v337 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: j478  <|@  <|@
f <@~|@floating>@ <|@
tid i340 <|@
result v37|DWORD <|@
d <@d|@=== Debug Properties ===
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
resultBits: 16
stamp: i16 [0 - 255] bits:00000000xxxxxxxx
=== Inputs ===
value: i468 
=== Succesors ===
=== Usages ===
v337 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i468  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v337 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: char
location: Array: char
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v204 
address: v514 
lastLocationAccess: - 
value: i340 
stateAfter: - 
=== Succesors ===
next: i469 
=== Usages ===
=== Predecessor ===
i468 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v204 address: v514 lastLocationAccess: - value: i340 stateAfter: - #next: i469  <|@  <|@
f <@~|@floating>@ <|@
tid v515 <|@
result [v0|QWORD[.] + v32|QWORD * 1 + 21] <|@
d <@d|@=== Debug Properties ===
displacement: 21
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: j475 
=== Succesors ===
=== Usages ===
i469 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: j475  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i469 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v515 
lastLocationAccess: - 
=== Succesors ===
next: v351 
=== Usages ===
i354 
=== Predecessor ===
v337 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v515 lastLocationAccess: - #next: v351  <|@  <|@
f <@~|@floating>@ <|@
tid v516 <|@
result [v2|QWORD[.] + v33|QWORD * 2 + 26] <|@
d <@d|@=== Debug Properties ===
displacement: 26
stamp: void*
stride: S2
=== Inputs ===
base: a3 
index: j478 
=== Succesors ===
=== Usages ===
v351 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: j478  <|@  <|@
f <@~|@floating>@ <|@
tid i354 <|@
result v38|DWORD <|@
d <@d|@=== Debug Properties ===
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
resultBits: 16
stamp: i16 [0 - 255] bits:00000000xxxxxxxx
=== Inputs ===
value: i469 
=== Succesors ===
=== Usages ===
v351 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i469  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v351 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: char
location: Array: char
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v204 
address: v516 
lastLocationAccess: - 
value: i354 
stateAfter: - 
=== Succesors ===
next: i470 
=== Usages ===
=== Predecessor ===
i469 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v204 address: v516 lastLocationAccess: - value: i354 stateAfter: - #next: i470  <|@  <|@
f <@~|@floating>@ <|@
tid v517 <|@
result [v0|QWORD[.] + v32|QWORD * 1 + 22] <|@
d <@d|@=== Debug Properties ===
displacement: 22
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: j475 
=== Succesors ===
=== Usages ===
i470 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: j475  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i470 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v517 
lastLocationAccess: - 
=== Succesors ===
next: v365 
=== Usages ===
i368 
=== Predecessor ===
v351 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v517 lastLocationAccess: - #next: v365  <|@  <|@
f <@~|@floating>@ <|@
tid v518 <|@
result [v2|QWORD[.] + v33|QWORD * 2 + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
stamp: void*
stride: S2
=== Inputs ===
base: a3 
index: j478 
=== Succesors ===
=== Usages ===
v365 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: j478  <|@  <|@
f <@~|@floating>@ <|@
tid i368 <|@
result v39|DWORD <|@
d <@d|@=== Debug Properties ===
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
resultBits: 16
stamp: i16 [0 - 255] bits:00000000xxxxxxxx
=== Inputs ===
value: i470 
=== Succesors ===
=== Usages ===
v365 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i470  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v365 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: char
location: Array: char
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v204 
address: v518 
lastLocationAccess: - 
value: i368 
stateAfter: - 
=== Succesors ===
next: i471 
=== Usages ===
=== Predecessor ===
i470 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v204 address: v518 lastLocationAccess: - value: i368 stateAfter: - #next: i471  <|@  <|@
f <@~|@floating>@ <|@
tid v519 <|@
result [v0|QWORD[.] + v32|QWORD * 1 + 23] <|@
d <@d|@=== Debug Properties ===
displacement: 23
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: j475 
=== Succesors ===
=== Usages ===
i471 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: j475  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i471 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v519 
lastLocationAccess: - 
=== Succesors ===
next: v377 
=== Usages ===
i380 
=== Predecessor ===
v365 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v519 lastLocationAccess: - #next: v377  <|@  <|@
f <@~|@floating>@ <|@
tid v520 <|@
result [v2|QWORD[.] + v33|QWORD * 2 + 30] <|@
d <@d|@=== Debug Properties ===
displacement: 30
stamp: void*
stride: S2
=== Inputs ===
base: a3 
index: j478 
=== Succesors ===
=== Usages ===
v377 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: j478  <|@  <|@
f <@~|@floating>@ <|@
tid i380 <|@
result v40|DWORD <|@
d <@d|@=== Debug Properties ===
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
resultBits: 16
stamp: i16 [0 - 255] bits:00000000xxxxxxxx
=== Inputs ===
value: i471 
=== Succesors ===
=== Usages ===
v377 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i471  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v377 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: char
location: Array: char
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v204 
address: v520 
lastLocationAccess: - 
value: i380 
stateAfter: - 
=== Succesors ===
next: v186 
=== Usages ===
=== Predecessor ===
i471 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v204 address: v520 lastLocationAccess: - value: i380 stateAfter: - #next: v186  <|@  <|@
f <@~|@floating>@ <|@
tid i399 <|@
result v41|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 27]
stamp: i32
=== Inputs ===
x: i189 
y: i387 
=== Succesors ===
=== Usages ===
i189 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i189 y: i387  <|@  <|@
f <@~|@floating>@ <|@
tid i397 <|@
result v42|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 12]
stamp: i32
=== Inputs ===
x: i188 
y: i387 
=== Succesors ===
=== Usages ===
i188 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i188 y: i387  <|@  <|@
f <@~|@floating>@ <|@
tid i398 <|@
result v43|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 17]
stamp: i32
=== Inputs ===
x: i187 
y: i387 
=== Succesors ===
=== Usages ===
i187 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i187 y: i387  <|@  <|@
f <@*|@fixed>@ <|@
tid v186 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 3]
stamp: void
=== Inputs ===
loopBegin: v178 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v377 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v178  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = MOVZXB [v0|QWORD[.] + v28|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v29|DWORD * 2 + 16], y: v31|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = MOVSXD v28|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = MOVSXD v29|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = MOVZXB [v0|QWORD[.] + v32|QWORD * 1 + 17] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v33|QWORD * 2 + 18], y: v34|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = MOVZXB [v0|QWORD[.] + v32|QWORD * 1 + 18] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v33|QWORD * 2 + 20], y: v35|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = MOVZXB [v0|QWORD[.] + v32|QWORD * 1 + 19] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v33|QWORD * 2 + 22], y: v36|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = MOVZXB [v0|QWORD[.] + v32|QWORD * 1 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v33|QWORD * 2 + 24], y: v37|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = MOVZXB [v0|QWORD[.] + v32|QWORD * 1 + 21] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v33|QWORD * 2 + 26], y: v38|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = MOVZXB [v0|QWORD[.] + v32|QWORD * 1 + 22] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v33|QWORD * 2 + 28], y: v39|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v40|DWORD = MOVZXB [v0|QWORD[.] + v32|QWORD * 1 + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v33|QWORD * 2 + 30], y: v40|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = LEA [v30|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = LEA [v29|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = LEA [v28|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v43|DWORD, v42|DWORD, v41|DWORD] destination: B19 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4606938027579086147
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v180 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:766) [bci: 33]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v178 
=== Succesors ===
next: v236 
=== Usages ===
=== Predecessor ===
v182 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v178 #next: v236  <|@  <|@
f <@*|@fixed>@ <|@
tid v236 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v209 
=== Predecessor ===
v180 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v28|DWORD, v29|DWORD, v30|DWORD] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" 
    successors "B22" "B23" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607026540791548872
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i218 <|@
result v44|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 3]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v209 
values: i187 i215 
=== Succesors ===
=== Usages ===
i215 v505 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v209 values: i187 i215  <|@  <|@
f <@~|@floating>@ <|@
tid i219 <|@
result v45|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 3]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v209 
values: i188 i214 
=== Succesors ===
=== Usages ===
i214 v506 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v209 values: i188 i214  <|@  <|@
f <@~|@floating>@ <|@
tid i220 <|@
result v46|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 3]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v209 
values: i189 i216 
=== Succesors ===
=== Usages ===
v210 i216 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v209 values: i189 i216  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v209 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 10
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 35.85565799139098
loopType: POST_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 3]
osrLoop: false
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v236 
=== Succesors ===
next: v213 
=== Usages ===
v211 v217 i218 i219 i220 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v236 #next: v213  <|@  <|@
f <@~|@floating>@ <|@
tid v210 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 7]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@4dc6bd49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i220 
y: i5 
=== Succesors ===
=== Usages ===
v213 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i220 y: i5  <|@  <|@
f <@*|@fixed>@ <|@
tid v213 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 7]
profileData: INJECTED designatedSuccessorProbability: 0.01
stamp: void
=== Inputs ===
condition: v210 
=== Succesors ===
trueSuccessor: v212 
falseSuccessor: v211 
=== Usages ===
=== Predecessor ===
v209 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v210 #trueSuccessor: v212 #falseSuccessor: v211  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v44|DWORD, v45|DWORD, v46|DWORD] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v46|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576818467378667812
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v212 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: i472 
=== Usages ===
v235 
=== Predecessor ===
v213 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i472  <|@  <|@
f <@~|@floating>@ <|@
tid v505 <|@
result [v0|QWORD[.] + v44|DWORD * 1 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: i218 
=== Succesors ===
=== Usages ===
i472 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: i218  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i472 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v505 
lastLocationAccess: - 
=== Succesors ===
next: v228 
=== Usages ===
i231 
=== Predecessor ===
v212 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v505 lastLocationAccess: - #next: v228  <|@  <|@
f <@~|@floating>@ <|@
tid v235 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
=== Inputs ===
guards: v442 v212 
=== Succesors ===
=== Usages ===
v228 
=== Predecessor ===
- >@ <|@
instruction <@MultiGuard|@jdk.graal.compiler.nodes.extended.MultiGuardNode>@ guards: v442 v212  <|@  <|@
f <@~|@floating>@ <|@
tid v506 <|@
result [v2|QWORD[.] + v45|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S2
=== Inputs ===
base: a3 
index: i219 
=== Succesors ===
=== Usages ===
v228 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: i219  <|@  <|@
f <@~|@floating>@ <|@
tid i231 <|@
result v47|DWORD <|@
d <@d|@=== Debug Properties ===
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
resultBits: 16
stamp: i16 [0 - 255] bits:00000000xxxxxxxx
=== Inputs ===
value: i472 
=== Succesors ===
=== Usages ===
v228 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i472  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v228 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: char
location: Array: char
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v235 
address: v506 
lastLocationAccess: - 
value: i231 
stateAfter: - 
=== Succesors ===
next: v217 
=== Usages ===
=== Predecessor ===
i472 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v235 address: v506 lastLocationAccess: - value: i231 stateAfter: - #next: v217  <|@  <|@
f <@~|@floating>@ <|@
tid i216 <|@
result v48|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 27]
stamp: i32
=== Inputs ===
x: i220 
y: i21 
=== Succesors ===
=== Usages ===
i220 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i220 y: i21  <|@  <|@
f <@~|@floating>@ <|@
tid i214 <|@
result v49|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 12]
stamp: i32
=== Inputs ===
x: i219 
y: i21 
=== Succesors ===
=== Usages ===
i219 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i219 y: i21  <|@  <|@
f <@~|@floating>@ <|@
tid i215 <|@
result v50|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 17]
stamp: i32
=== Inputs ===
x: i218 
y: i21 
=== Succesors ===
=== Usages ===
i218 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i218 y: i21  <|@  <|@
f <@*|@fixed>@ <|@
tid v217 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 3]
stamp: void
=== Inputs ===
loopBegin: v209 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v228 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v209  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = MOVZXB [v0|QWORD[.] + v44|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v45|DWORD * 2 + 16], y: v47|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = INC v46|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v49|DWORD = INC v45|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = INC v44|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v50|DWORD, v49|DWORD, v48|DWORD] destination: B22 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4606938027579086147
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v211 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:766) [bci: 33]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v209 
=== Succesors ===
next: v48 
=== Usages ===
=== Predecessor ===
v213 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v209 #next: v48  <|@  <|@
f <@*|@fixed>@ <|@
tid v48 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:766) [bci: 33]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v47 
=== Predecessor ===
v211 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v47 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:766) [bci: 33]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v48 v49 
=== Succesors ===
next: v32 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v48 v49 #next: v32  <|@  <|@
f <@*|@fixed>@ <|@
tid v32 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:766) [bci: 33]
stamp: void
=== Inputs ===
memoryMap: - 
result: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v47 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v173 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v421 
=== Usages ===
=== Predecessor ===
v174 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v421  <|@  <|@
f <@~|@floating>@ <|@
tid i422 <|@
result int[-20251|0xffffffffffffb0e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
rawvalue: -20251
stableDimension: 0
stamp: i32 [-20251]
stampKind: i32
value: int[-20251|0xffffffffffffb0e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i409 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v421 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v405 
=== Predecessor ===
v173 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-20251|0xffffffffffffb0e5], long[0|0x0]] destination: B25 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v169 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
next: v419 
=== Usages ===
=== Predecessor ===
v170 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v419  <|@  <|@
f <@~|@floating>@ <|@
tid i420 <|@
result int[-16411|0xffffffffffffbfe5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
rawvalue: -16411
stableDimension: 0
stamp: i32 [-16411]
stampKind: i32
value: int[-16411|0xffffffffffffbfe5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i409 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v419 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v405 
=== Predecessor ===
v169 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-16411|0xffffffffffffbfe5], long[0|0x0]] destination: B26 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v454 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v459 
=== Usages ===
=== Predecessor ===
v455 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v459  <|@  <|@
f <@*|@fixed>@ <|@
tid v459 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v405 
=== Predecessor ===
v454 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-25371|0xffffffffffff9ce5], long[24|0x18]] destination: B27 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v453 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v417 
=== Usages ===
=== Predecessor ===
v457 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v417  <|@  <|@
f <@*|@fixed>@ <|@
tid v417 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v405 
=== Predecessor ===
v453 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-25371|0xffffffffffff9ce5], long[24|0x18]] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v438 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
next: v458 
=== Usages ===
=== Predecessor ===
v439 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v458  <|@  <|@
f <@*|@fixed>@ <|@
tid v458 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v405 
=== Predecessor ===
v438 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-22811|0xffffffffffffa6e5], long[24|0x18]] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v437 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
next: v414 
=== Usages ===
=== Predecessor ===
v441 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v414  <|@  <|@
f <@*|@fixed>@ <|@
tid v414 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v405 
=== Predecessor ===
v437 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-22811|0xffffffffffffa6e5], long[24|0x18]] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B28" "B26" "B25" "B29" "B27" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i409 <|@
result v51|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: i32 [-25371 - -16411] bits:1...10xxxxxx11100101
valueDescription: i32
=== Inputs ===
merge: v405 
values: i415 i418 i420 i422 i415 i418 
=== Succesors ===
=== Usages ===
v411 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v405 values: i415 i418 i420 i422 i415 i418  <|@  <|@
f <@~|@floating>@ <|@
tid j410 <|@
result v52|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: i64 [0 - 24] bits:0...0xx000
valueDescription: i64
=== Inputs ===
merge: v405 
values: j416 j416 j408 j408 j416 j416 
=== Succesors ===
=== Usages ===
v411 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v405 values: j416 j416 j408 j408 j416 j416  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v405 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v414 v417 v419 v421 v458 v459 
=== Succesors ===
next: v411 
=== Usages ===
i409 j410 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v414 v417 v419 v421 v458 v459 #next: v411  <|@  <|@
f <@*|@fixed>@ <|@
tid v411 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: void
=== Inputs ===
stateBefore: ?6 
actionAndReason: i409 
speculation: j410 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v405 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?6 actionAndReason: i409 speculation: j410  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v51|DWORD, v52|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v51|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v52|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After ConstantLoadOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@20983de9 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v4|DWORD trueDestinationProbability: 0.027132876049413834 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD - 
>@ <|@ instruction v5|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = INC v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = DEC v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOV v7|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = DEC v8|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v4|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B30" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOVSXD v6|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = ADD (x: v10|QWORD, y: v9|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOV v5|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v12|QWORD, y: v11|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B30 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B29" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v5|DWORD, y: v6|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD - 
>@ <|@ instruction v13|DWORD = MOV [v2|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = INC v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v4|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B28" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOVSXD v14|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = ADD (x: v15|QWORD, y: v9|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOV v13|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v17|QWORD, y: v16|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B28 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B27" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v14|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" "B11" 
    successors "B13" "B26" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v5|DWORD, y: v1|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B25" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v3|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = MOVZXB [v0|QWORD[.] + v1|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v3|DWORD * 2 + 16], y: v18|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction CMP v4|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v4|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1], v14|DWORD, v6|DWORD] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607026540791548873
    begin_IR
      LIR
      nr   -1  <|@ instruction [v20|DWORD, v21|DWORD, v22|DWORD] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v19|DWORD, y: v20|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576818467378667813
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = MOVZXB [v0|QWORD[.] + v22|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v21|DWORD * 2 + 16], y: v23|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = INC v22|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = INC v21|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = INC v20|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v26|DWORD, v25|DWORD, v24|DWORD] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = LEA [v4|DWORD - 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v22|DWORD, v21|DWORD, v20|DWORD] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B19" 
    successors "B19" "B20" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4616595334800895638
    begin_IR
      LIR
      nr   -1  <|@ instruction [v28|DWORD, v29|DWORD, v30|DWORD] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v27|DWORD, y: v30|DWORD) trueDestinationProbability: 0.7768831908782481 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4614810349538580443
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = MOVZXB [v0|QWORD[.] + v28|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v29|DWORD * 2 + 16], y: v31|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = MOVSXD v28|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = MOVSXD v29|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = MOVZXB [v0|QWORD[.] + v32|QWORD * 1 + 17] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v33|QWORD * 2 + 18], y: v34|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = MOVZXB [v0|QWORD[.] + v32|QWORD * 1 + 18] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v33|QWORD * 2 + 20], y: v35|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = MOVZXB [v0|QWORD[.] + v32|QWORD * 1 + 19] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v33|QWORD * 2 + 22], y: v36|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = MOVZXB [v0|QWORD[.] + v32|QWORD * 1 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v33|QWORD * 2 + 24], y: v37|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = MOVZXB [v0|QWORD[.] + v32|QWORD * 1 + 21] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v33|QWORD * 2 + 26], y: v38|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = MOVZXB [v0|QWORD[.] + v32|QWORD * 1 + 22] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v33|QWORD * 2 + 28], y: v39|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v40|DWORD = MOVZXB [v0|QWORD[.] + v32|QWORD * 1 + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v33|QWORD * 2 + 30], y: v40|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = LEA [v30|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = LEA [v29|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = LEA [v28|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v43|DWORD, v42|DWORD, v41|DWORD] destination: B19 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4606938027579086147
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v28|DWORD, v29|DWORD, v30|DWORD] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" 
    successors "B22" "B23" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607026540791548872
    begin_IR
      LIR
      nr   -1  <|@ instruction [v44|DWORD, v45|DWORD, v46|DWORD] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v46|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576818467378667812
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = MOVZXB [v0|QWORD[.] + v44|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v45|DWORD * 2 + 16], y: v47|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = INC v46|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v49|DWORD = INC v45|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = INC v44|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v50|DWORD, v49|DWORD, v48|DWORD] destination: B22 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4606938027579086147
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B24" 
    xhandlers
    flags 
    probability 4583477740478224256
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B1 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-22811|0xffffffffffffa6e5], long[24|0x18]] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-16411|0xffffffffffffbfe5], long[0|0x0]] destination: B26 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-20251|0xffffffffffffb0e5], long[0|0x0]] destination: B25 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-25371|0xffffffffffff9ce5], long[24|0x18]] destination: B27 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-25371|0xffffffffffff9ce5], long[24|0x18]] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-22811|0xffffffffffffa6e5], long[24|0x18]] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B28" "B26" "B25" "B29" "B27" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr   -1  <|@ instruction [v51|DWORD, v52|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v51|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v52|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore        5
     3: iload         5
     5: iload         4
     7: if_icmpge     33
    10: aload_2       
    11: iload_3       
    12: iinc          
    15: aload_0       
    16: iload_1       
    17: iinc          
    20: baload        
    21: sipush        255
    24: iand          
    25: i2c           
    26: castore       
    27: iinc          
    30: goto          3
    33: return        
   <|@
end_bytecodes
begin_cfg
  name "After SaveCalleeSaveRegisters"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@20983de9 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v4|DWORD trueDestinationProbability: 0.027132876049413834 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD - 
>@ <|@ instruction v5|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = INC v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = DEC v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOV v7|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = DEC v8|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v4|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B30" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOVSXD v6|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = ADD (x: v10|QWORD, y: v9|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOV v5|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v12|QWORD, y: v11|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B30 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B29" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v5|DWORD, y: v6|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD - 
>@ <|@ instruction v13|DWORD = MOV [v2|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = INC v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v4|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B28" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOVSXD v14|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = ADD (x: v15|QWORD, y: v9|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOV v13|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v17|QWORD, y: v16|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B28 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B27" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v14|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" "B11" 
    successors "B13" "B26" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v5|DWORD, y: v1|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B25" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v3|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = MOVZXB [v0|QWORD[.] + v1|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v3|DWORD * 2 + 16], y: v18|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction CMP v4|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v4|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1], v14|DWORD, v6|DWORD] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607026540791548873
    begin_IR
      LIR
      nr   -1  <|@ instruction [v20|DWORD, v21|DWORD, v22|DWORD] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v19|DWORD, y: v20|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576818467378667813
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = MOVZXB [v0|QWORD[.] + v22|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v21|DWORD * 2 + 16], y: v23|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = INC v22|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = INC v21|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = INC v20|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v26|DWORD, v25|DWORD, v24|DWORD] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = LEA [v4|DWORD - 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v22|DWORD, v21|DWORD, v20|DWORD] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B19" 
    successors "B19" "B20" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4616595334800895638
    begin_IR
      LIR
      nr   -1  <|@ instruction [v28|DWORD, v29|DWORD, v30|DWORD] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v27|DWORD, y: v30|DWORD) trueDestinationProbability: 0.7768831908782481 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4614810349538580443
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = MOVZXB [v0|QWORD[.] + v28|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v29|DWORD * 2 + 16], y: v31|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = MOVSXD v28|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = MOVSXD v29|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = MOVZXB [v0|QWORD[.] + v32|QWORD * 1 + 17] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v33|QWORD * 2 + 18], y: v34|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = MOVZXB [v0|QWORD[.] + v32|QWORD * 1 + 18] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v33|QWORD * 2 + 20], y: v35|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = MOVZXB [v0|QWORD[.] + v32|QWORD * 1 + 19] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v33|QWORD * 2 + 22], y: v36|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = MOVZXB [v0|QWORD[.] + v32|QWORD * 1 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v33|QWORD * 2 + 24], y: v37|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = MOVZXB [v0|QWORD[.] + v32|QWORD * 1 + 21] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v33|QWORD * 2 + 26], y: v38|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = MOVZXB [v0|QWORD[.] + v32|QWORD * 1 + 22] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v33|QWORD * 2 + 28], y: v39|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v40|DWORD = MOVZXB [v0|QWORD[.] + v32|QWORD * 1 + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v33|QWORD * 2 + 30], y: v40|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = LEA [v30|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = LEA [v29|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = LEA [v28|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v43|DWORD, v42|DWORD, v41|DWORD] destination: B19 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4606938027579086147
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v28|DWORD, v29|DWORD, v30|DWORD] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" 
    successors "B22" "B23" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607026540791548872
    begin_IR
      LIR
      nr   -1  <|@ instruction [v44|DWORD, v45|DWORD, v46|DWORD] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v46|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576818467378667812
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = MOVZXB [v0|QWORD[.] + v44|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v45|DWORD * 2 + 16], y: v47|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = INC v46|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v49|DWORD = INC v45|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = INC v44|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v50|DWORD, v49|DWORD, v48|DWORD] destination: B22 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4606938027579086147
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B24" 
    xhandlers
    flags 
    probability 4583477740478224256
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B1 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-22811|0xffffffffffffa6e5], long[24|0x18]] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-16411|0xffffffffffffbfe5], long[0|0x0]] destination: B26 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-20251|0xffffffffffffb0e5], long[0|0x0]] destination: B25 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-25371|0xffffffffffff9ce5], long[24|0x18]] destination: B27 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-25371|0xffffffffffff9ce5], long[24|0x18]] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-22811|0xffffffffffffa6e5], long[24|0x18]] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B28" "B26" "B25" "B29" "B27" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr   -1  <|@ instruction [v51|DWORD, v52|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v51|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v52|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore        5
     3: iload         5
     5: iload         4
     7: if_icmpge     33
    10: aload_2       
    11: iload_3       
    12: iinc          
    15: aload_0       
    16: iload_1       
    17: iinc          
    20: baload        
    21: sipush        255
    24: iand          
    25: i2c           
    26: castore       
    27: iinc          
    30: goto          3
    33: return        
   <|@
end_bytecodes
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@20983de9 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v4|DWORD trueDestinationProbability: 0.027132876049413834 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD - 
>@ <|@ instruction v5|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = INC v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = DEC v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOV v7|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = DEC v8|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v4|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B30" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOVSXD v6|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = ADD (x: v10|QWORD, y: v9|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOV v5|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v12|QWORD, y: v11|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B30 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B29" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v5|DWORD, y: v6|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD - 
>@ <|@ instruction v13|DWORD = MOV [v2|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = INC v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v4|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B28" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOVSXD v14|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = ADD (x: v15|QWORD, y: v9|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOV v13|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v17|QWORD, y: v16|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B28 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B27" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v14|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" "B11" 
    successors "B13" "B26" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v5|DWORD, y: v1|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B25" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v3|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = MOVZXB [v0|QWORD[.] + v1|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v3|DWORD * 2 + 16], y: v18|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction CMP v4|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v4|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1], v14|DWORD, v6|DWORD] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607026540791548873
    begin_IR
      LIR
      nr   -1  <|@ instruction [v20|DWORD, v21|DWORD, v22|DWORD] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v19|DWORD, y: v20|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576818467378667813
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = MOVZXB [v0|QWORD[.] + v22|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v21|DWORD * 2 + 16], y: v23|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = INC v22|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = INC v21|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = INC v20|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v26|DWORD, v25|DWORD, v24|DWORD] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = LEA [v4|DWORD - 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v22|DWORD, v21|DWORD, v20|DWORD] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B19" 
    successors "B19" "B20" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4616595334800895638
    begin_IR
      LIR
      nr   -1  <|@ instruction [v28|DWORD, v29|DWORD, v30|DWORD] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v27|DWORD, y: v30|DWORD) trueDestinationProbability: 0.7768831908782481 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4614810349538580443
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = MOVZXB [v0|QWORD[.] + v28|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v29|DWORD * 2 + 16], y: v31|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = MOVSXD v28|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = MOVSXD v29|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = MOVZXB [v0|QWORD[.] + v32|QWORD * 1 + 17] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v33|QWORD * 2 + 18], y: v34|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = MOVZXB [v0|QWORD[.] + v32|QWORD * 1 + 18] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v33|QWORD * 2 + 20], y: v35|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = MOVZXB [v0|QWORD[.] + v32|QWORD * 1 + 19] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v33|QWORD * 2 + 22], y: v36|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = MOVZXB [v0|QWORD[.] + v32|QWORD * 1 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v33|QWORD * 2 + 24], y: v37|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = MOVZXB [v0|QWORD[.] + v32|QWORD * 1 + 21] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v33|QWORD * 2 + 26], y: v38|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = MOVZXB [v0|QWORD[.] + v32|QWORD * 1 + 22] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v33|QWORD * 2 + 28], y: v39|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v40|DWORD = MOVZXB [v0|QWORD[.] + v32|QWORD * 1 + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v33|QWORD * 2 + 30], y: v40|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = LEA [v30|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = LEA [v29|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = LEA [v28|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v43|DWORD, v42|DWORD, v41|DWORD] destination: B19 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4606938027579086147
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v28|DWORD, v29|DWORD, v30|DWORD] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" 
    successors "B22" "B23" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607026540791548872
    begin_IR
      LIR
      nr   -1  <|@ instruction [v44|DWORD, v45|DWORD, v46|DWORD] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v46|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576818467378667812
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = MOVZXB [v0|QWORD[.] + v44|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v45|DWORD * 2 + 16], y: v47|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = INC v46|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v49|DWORD = INC v45|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = INC v44|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v50|DWORD, v49|DWORD, v48|DWORD] destination: B22 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4606938027579086147
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B24" 
    xhandlers
    flags 
    probability 4583477740478224256
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B1 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-22811|0xffffffffffffa6e5], long[24|0x18]] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-16411|0xffffffffffffbfe5], long[0|0x0]] destination: B26 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-20251|0xffffffffffffb0e5], long[0|0x0]] destination: B25 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-25371|0xffffffffffff9ce5], long[24|0x18]] destination: B27 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-25371|0xffffffffffff9ce5], long[24|0x18]] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-22811|0xffffffffffffa6e5], long[24|0x18]] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B28" "B26" "B25" "B29" "B27" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr   -1  <|@ instruction [v51|DWORD, v52|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v51|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v52|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore        5
     3: iload         5
     5: iload         4
     7: if_icmpge     33
    10: aload_2       
    11: iload_3       
    12: iinc          
    15: aload_0       
    16: iload_1       
    17: iinc          
    20: baload        
    21: sipush        255
    24: iand          
    25: i2c           
    26: castore       
    27: iinc          
    30: goto          3
    33: return        
   <|@
end_bytecodes
begin_cfg
  name "After MarkBasePointers"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@20983de9 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v4|DWORD trueDestinationProbability: 0.027132876049413834 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD - 
>@ <|@ instruction v5|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = INC v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = DEC v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOV v7|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = DEC v8|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v4|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B30" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOVSXD v6|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = ADD (x: v10|QWORD, y: v9|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOV v5|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v12|QWORD, y: v11|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B30 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B29" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v5|DWORD, y: v6|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD - 
>@ <|@ instruction v13|DWORD = MOV [v2|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = INC v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v4|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B28" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOVSXD v14|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = ADD (x: v15|QWORD, y: v9|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOV v13|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v17|QWORD, y: v16|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B28 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B27" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v14|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" "B11" 
    successors "B13" "B26" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v5|DWORD, y: v1|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B25" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v3|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = MOVZXB [v0|QWORD[.] + v1|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v3|DWORD * 2 + 16], y: v18|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction CMP v4|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v4|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1], v14|DWORD, v6|DWORD] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607026540791548873
    begin_IR
      LIR
      nr   -1  <|@ instruction [v20|DWORD, v21|DWORD, v22|DWORD] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v19|DWORD, y: v20|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576818467378667813
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = MOVZXB [v0|QWORD[.] + v22|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v21|DWORD * 2 + 16], y: v23|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = INC v22|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = INC v21|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = INC v20|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v26|DWORD, v25|DWORD, v24|DWORD] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = LEA [v4|DWORD - 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v22|DWORD, v21|DWORD, v20|DWORD] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B19" 
    successors "B19" "B20" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4616595334800895638
    begin_IR
      LIR
      nr   -1  <|@ instruction [v28|DWORD, v29|DWORD, v30|DWORD] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v27|DWORD, y: v30|DWORD) trueDestinationProbability: 0.7768831908782481 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4614810349538580443
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = MOVZXB [v0|QWORD[.] + v28|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v29|DWORD * 2 + 16], y: v31|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = MOVSXD v28|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = MOVSXD v29|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = MOVZXB [v0|QWORD[.] + v32|QWORD * 1 + 17] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v33|QWORD * 2 + 18], y: v34|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = MOVZXB [v0|QWORD[.] + v32|QWORD * 1 + 18] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v33|QWORD * 2 + 20], y: v35|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = MOVZXB [v0|QWORD[.] + v32|QWORD * 1 + 19] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v33|QWORD * 2 + 22], y: v36|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = MOVZXB [v0|QWORD[.] + v32|QWORD * 1 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v33|QWORD * 2 + 24], y: v37|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = MOVZXB [v0|QWORD[.] + v32|QWORD * 1 + 21] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v33|QWORD * 2 + 26], y: v38|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = MOVZXB [v0|QWORD[.] + v32|QWORD * 1 + 22] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v33|QWORD * 2 + 28], y: v39|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v40|DWORD = MOVZXB [v0|QWORD[.] + v32|QWORD * 1 + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v33|QWORD * 2 + 30], y: v40|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = LEA [v30|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = LEA [v29|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = LEA [v28|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v43|DWORD, v42|DWORD, v41|DWORD] destination: B19 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4606938027579086147
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v28|DWORD, v29|DWORD, v30|DWORD] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" 
    successors "B22" "B23" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607026540791548872
    begin_IR
      LIR
      nr   -1  <|@ instruction [v44|DWORD, v45|DWORD, v46|DWORD] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v46|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576818467378667812
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = MOVZXB [v0|QWORD[.] + v44|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v45|DWORD * 2 + 16], y: v47|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = INC v46|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v49|DWORD = INC v45|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = INC v44|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v50|DWORD, v49|DWORD, v48|DWORD] destination: B22 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4606938027579086147
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B24" 
    xhandlers
    flags 
    probability 4583477740478224256
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B1 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-22811|0xffffffffffffa6e5], long[24|0x18]] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-16411|0xffffffffffffbfe5], long[0|0x0]] destination: B26 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-20251|0xffffffffffffb0e5], long[0|0x0]] destination: B25 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-25371|0xffffffffffff9ce5], long[24|0x18]] destination: B27 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-25371|0xffffffffffff9ce5], long[24|0x18]] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-22811|0xffffffffffffa6e5], long[24|0x18]] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B28" "B26" "B25" "B29" "B27" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr   -1  <|@ instruction [v51|DWORD, v52|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v51|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v52|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore        5
     3: iload         5
     5: iload         4
     7: if_icmpge     33
    10: aload_2       
    11: iload_3       
    12: iinc          
    15: aload_0       
    16: iload_1       
    17: iinc          
    20: baload        
    21: sipush        255
    24: iand          
    25: i2c           
    26: castore       
    27: iinc          
    30: goto          3
    33: return        
   <|@
end_bytecodes
begin_cfg
  name "Before register allocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@20983de9 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction v2|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   12  <|@ instruction v3|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   14  <|@ instruction v4|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   16  <|@ instruction CMPCONSTBRANCH v4|DWORD trueDestinationProbability: 0.027132876049413834 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   20  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD - 
>@ <|@ instruction v5|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   22  <|@ instruction v6|DWORD = INC v1|DWORD size: DWORD <|@ <|@
      nr   24  <|@ instruction v7|DWORD = DEC v4|DWORD size: DWORD <|@ <|@
      nr   26  <|@ instruction v8|QWORD = MOV v7|DWORD size: DWORD <|@ <|@
      nr   28  <|@ instruction v9|QWORD = DEC v8|QWORD size: QWORD <|@ <|@
      nr   30  <|@ instruction CMPCONSTBRANCH v4|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B30" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction v10|QWORD = MOVSXD v6|DWORD size: QWORD <|@ <|@
      nr   36  <|@ instruction v11|QWORD = ADD (x: v10|QWORD, y: v9|QWORD) size: QWORD <|@ <|@
      nr   38  <|@ instruction v12|QWORD = MOV v5|DWORD size: DWORD <|@ <|@
      nr   40  <|@ instruction CMPBRANCH (x: v12|QWORD, y: v11|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B30 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B29" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction CMPBRANCH (x: v5|DWORD, y: v6|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction JUMP ~[] destination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD - 
>@ <|@ instruction v13|DWORD = MOV [v2|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   58  <|@ instruction v14|DWORD = INC v3|DWORD size: DWORD <|@ <|@
      nr   60  <|@ instruction CMPCONSTBRANCH v4|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B28" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction v15|QWORD = MOVSXD v14|DWORD size: QWORD <|@ <|@
      nr   66  <|@ instruction v16|QWORD = ADD (x: v15|QWORD, y: v9|QWORD) size: QWORD <|@ <|@
      nr   68  <|@ instruction v17|QWORD = MOV v13|DWORD size: DWORD <|@ <|@
      nr   70  <|@ instruction CMPBRANCH (x: v17|QWORD, y: v16|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B28 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B27" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v14|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction JUMP ~[] destination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" "B11" 
    successors "B13" "B26" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction CMPBRANCH (x: v5|DWORD, y: v1|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B25" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v3|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction v18|DWORD = MOVZXB [v0|QWORD[.] + v1|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   96  <|@ instruction MOV (x: [v2|QWORD[.] + v3|DWORD * 2 + 16], y: v18|DWORD) size: WORD <|@ <|@
      nr   98  <|@ instruction CMP v4|DWORD y: 3 size: DWORD <|@ <|@
      nr  100  <|@ instruction v19|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v4|DWORD) condition: < <|@ <|@
      nr  102  <|@ instruction JUMP ~[int[1|0x1], v14|DWORD, v6|DWORD] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607026540791548873
    begin_IR
      LIR
      nr  104  <|@ instruction [v20|DWORD, v21|DWORD, v22|DWORD] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  106  <|@ instruction CMPBRANCH (x: v19|DWORD, y: v20|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576818467378667813
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction v23|DWORD = MOVZXB [v0|QWORD[.] + v22|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  112  <|@ instruction MOV (x: [v2|QWORD[.] + v21|DWORD * 2 + 16], y: v23|DWORD) size: WORD <|@ <|@
      nr  114  <|@ instruction v24|DWORD = INC v22|DWORD size: DWORD <|@ <|@
      nr  116  <|@ instruction v25|DWORD = INC v21|DWORD size: DWORD <|@ <|@
      nr  118  <|@ instruction v26|DWORD = INC v20|DWORD size: DWORD <|@ <|@
      nr  120  <|@ instruction JUMP ~[v26|DWORD, v25|DWORD, v24|DWORD] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction v27|DWORD = LEA [v4|DWORD - 8] size: DWORD <|@ <|@
      nr  126  <|@ instruction JUMP ~[v22|DWORD, v21|DWORD, v20|DWORD] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B19" 
    successors "B19" "B20" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4616595334800895638
    begin_IR
      LIR
      nr  128  <|@ instruction [v28|DWORD, v29|DWORD, v30|DWORD] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  130  <|@ instruction CMPBRANCH (x: v27|DWORD, y: v30|DWORD) trueDestinationProbability: 0.7768831908782481 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4614810349538580443
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  134  <|@ instruction v31|DWORD = MOVZXB [v0|QWORD[.] + v28|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  136  <|@ instruction MOV (x: [v2|QWORD[.] + v29|DWORD * 2 + 16], y: v31|DWORD) size: WORD <|@ <|@
      nr  138  <|@ instruction v32|QWORD = MOVSXD v28|DWORD size: QWORD <|@ <|@
      nr  140  <|@ instruction v33|QWORD = MOVSXD v29|DWORD size: QWORD <|@ <|@
      nr  142  <|@ instruction v34|DWORD = MOVZXB [v0|QWORD[.] + v32|QWORD * 1 + 17] size: DWORD <|@ <|@
      nr  144  <|@ instruction MOV (x: [v2|QWORD[.] + v33|QWORD * 2 + 18], y: v34|DWORD) size: WORD <|@ <|@
      nr  146  <|@ instruction v35|DWORD = MOVZXB [v0|QWORD[.] + v32|QWORD * 1 + 18] size: DWORD <|@ <|@
      nr  148  <|@ instruction MOV (x: [v2|QWORD[.] + v33|QWORD * 2 + 20], y: v35|DWORD) size: WORD <|@ <|@
      nr  150  <|@ instruction v36|DWORD = MOVZXB [v0|QWORD[.] + v32|QWORD * 1 + 19] size: DWORD <|@ <|@
      nr  152  <|@ instruction MOV (x: [v2|QWORD[.] + v33|QWORD * 2 + 22], y: v36|DWORD) size: WORD <|@ <|@
      nr  154  <|@ instruction v37|DWORD = MOVZXB [v0|QWORD[.] + v32|QWORD * 1 + 20] size: DWORD <|@ <|@
      nr  156  <|@ instruction MOV (x: [v2|QWORD[.] + v33|QWORD * 2 + 24], y: v37|DWORD) size: WORD <|@ <|@
      nr  158  <|@ instruction v38|DWORD = MOVZXB [v0|QWORD[.] + v32|QWORD * 1 + 21] size: DWORD <|@ <|@
      nr  160  <|@ instruction MOV (x: [v2|QWORD[.] + v33|QWORD * 2 + 26], y: v38|DWORD) size: WORD <|@ <|@
      nr  162  <|@ instruction v39|DWORD = MOVZXB [v0|QWORD[.] + v32|QWORD * 1 + 22] size: DWORD <|@ <|@
      nr  164  <|@ instruction MOV (x: [v2|QWORD[.] + v33|QWORD * 2 + 28], y: v39|DWORD) size: WORD <|@ <|@
      nr  166  <|@ instruction v40|DWORD = MOVZXB [v0|QWORD[.] + v32|QWORD * 1 + 23] size: DWORD <|@ <|@
      nr  168  <|@ instruction MOV (x: [v2|QWORD[.] + v33|QWORD * 2 + 30], y: v40|DWORD) size: WORD <|@ <|@
      nr  170  <|@ instruction v41|DWORD = LEA [v30|DWORD + 8] size: DWORD <|@ <|@
      nr  172  <|@ instruction v42|DWORD = LEA [v29|DWORD + 8] size: DWORD <|@ <|@
      nr  174  <|@ instruction v43|DWORD = LEA [v28|DWORD + 8] size: DWORD <|@ <|@
      nr  176  <|@ instruction JUMP ~[v43|DWORD, v42|DWORD, v41|DWORD] destination: B19 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4606938027579086147
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction JUMP ~[v28|DWORD, v29|DWORD, v30|DWORD] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" 
    successors "B22" "B23" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607026540791548872
    begin_IR
      LIR
      nr  182  <|@ instruction [v44|DWORD, v45|DWORD, v46|DWORD] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  184  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v46|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576818467378667812
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction v47|DWORD = MOVZXB [v0|QWORD[.] + v44|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  190  <|@ instruction MOV (x: [v2|QWORD[.] + v45|DWORD * 2 + 16], y: v47|DWORD) size: WORD <|@ <|@
      nr  192  <|@ instruction v48|DWORD = INC v46|DWORD size: DWORD <|@ <|@
      nr  194  <|@ instruction v49|DWORD = INC v45|DWORD size: DWORD <|@ <|@
      nr  196  <|@ instruction v50|DWORD = INC v44|DWORD size: DWORD <|@ <|@
      nr  198  <|@ instruction JUMP ~[v50|DWORD, v49|DWORD, v48|DWORD] destination: B22 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4606938027579086147
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B24" 
    xhandlers
    flags 
    probability 4583477740478224256
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction JUMP ~[] destination: B1 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction JUMP ~[int[-22811|0xffffffffffffa6e5], long[24|0x18]] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction JUMP ~[int[-16411|0xffffffffffffbfe5], long[0|0x0]] destination: B26 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction JUMP ~[int[-20251|0xffffffffffffb0e5], long[0|0x0]] destination: B25 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction JUMP ~[int[-25371|0xffffffffffff9ce5], long[24|0x18]] destination: B27 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  230  <|@ instruction JUMP ~[int[-25371|0xffffffffffff9ce5], long[24|0x18]] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction JUMP ~[int[-22811|0xffffffffffffa6e5], long[24|0x18]] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B28" "B26" "B25" "B29" "B27" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr  236  <|@ instruction [v51|DWORD, v52|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  238  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v51|DWORD) size: DWORD <|@ <|@
      nr  240  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v52|QWORD) size: QWORD <|@ <|@
      nr  242  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore        5
     3: iload         5
     5: iload         4
     7: if_icmpge     33
    10: aload_2       
    11: iload_3       
    12: iinc          
    15: aload_0       
    16: iload_1       
    17: iinc          
    20: baload        
    21: sipush        255
    24: iand          
    25: i2c           
    26: castore       
    27: iinc          
    30: goto          3
    33: return        
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanLifetimeAnalysis"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@20983de9 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction v2|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   12  <|@ instruction v3|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   14  <|@ instruction v4|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   16  <|@ instruction CMPCONSTBRANCH v4|DWORD trueDestinationProbability: 0.027132876049413834 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   20  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD - 
>@ <|@ instruction v5|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   22  <|@ instruction v6|DWORD = INC v1|DWORD size: DWORD <|@ <|@
      nr   24  <|@ instruction v7|DWORD = DEC v4|DWORD size: DWORD <|@ <|@
      nr   26  <|@ instruction v8|QWORD = MOV v7|DWORD size: DWORD <|@ <|@
      nr   28  <|@ instruction v9|QWORD = DEC v8|QWORD size: QWORD <|@ <|@
      nr   30  <|@ instruction CMPCONSTBRANCH v4|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B30" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction v10|QWORD = MOVSXD v6|DWORD size: QWORD <|@ <|@
      nr   36  <|@ instruction v11|QWORD = ADD (x: v10|QWORD, y: v9|QWORD) size: QWORD <|@ <|@
      nr   38  <|@ instruction v12|QWORD = MOV v5|DWORD size: DWORD <|@ <|@
      nr   40  <|@ instruction CMPBRANCH (x: v12|QWORD, y: v11|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B30 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B29" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction CMPBRANCH (x: v5|DWORD, y: v6|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction JUMP ~[] destination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD - 
>@ <|@ instruction v13|DWORD = MOV [v2|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   58  <|@ instruction v14|DWORD = INC v3|DWORD size: DWORD <|@ <|@
      nr   60  <|@ instruction CMPCONSTBRANCH v4|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B28" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction v15|QWORD = MOVSXD v14|DWORD size: QWORD <|@ <|@
      nr   66  <|@ instruction v16|QWORD = ADD (x: v15|QWORD, y: v9|QWORD) size: QWORD <|@ <|@
      nr   68  <|@ instruction v17|QWORD = MOV v13|DWORD size: DWORD <|@ <|@
      nr   70  <|@ instruction CMPBRANCH (x: v17|QWORD, y: v16|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B28 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B27" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v14|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction JUMP ~[] destination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" "B11" 
    successors "B13" "B26" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction CMPBRANCH (x: v5|DWORD, y: v1|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B25" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v3|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction v18|DWORD = MOVZXB [v0|QWORD[.] + v1|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   96  <|@ instruction MOV (x: [v2|QWORD[.] + v3|DWORD * 2 + 16], y: v18|DWORD) size: WORD <|@ <|@
      nr   98  <|@ instruction CMP v4|DWORD y: 3 size: DWORD <|@ <|@
      nr  100  <|@ instruction v19|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v4|DWORD) condition: < <|@ <|@
      nr  102  <|@ instruction JUMP ~[int[1|0x1], v14|DWORD, v6|DWORD] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607026540791548873
    begin_IR
      LIR
      nr  104  <|@ instruction [v20|DWORD, v21|DWORD, v22|DWORD] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  106  <|@ instruction CMPBRANCH (x: v19|DWORD, y: v20|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576818467378667813
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction v23|DWORD = MOVZXB [v0|QWORD[.] + v22|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  112  <|@ instruction MOV (x: [v2|QWORD[.] + v21|DWORD * 2 + 16], y: v23|DWORD) size: WORD <|@ <|@
      nr  114  <|@ instruction v24|DWORD = INC v22|DWORD size: DWORD <|@ <|@
      nr  116  <|@ instruction v25|DWORD = INC v21|DWORD size: DWORD <|@ <|@
      nr  118  <|@ instruction v26|DWORD = INC v20|DWORD size: DWORD <|@ <|@
      nr  120  <|@ instruction JUMP ~[v26|DWORD, v25|DWORD, v24|DWORD] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction v27|DWORD = LEA [v4|DWORD - 8] size: DWORD <|@ <|@
      nr  126  <|@ instruction JUMP ~[v22|DWORD, v21|DWORD, v20|DWORD] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B19" 
    successors "B19" "B20" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4616595334800895638
    begin_IR
      LIR
      nr  128  <|@ instruction [v28|DWORD, v29|DWORD, v30|DWORD] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  130  <|@ instruction CMPBRANCH (x: v27|DWORD, y: v30|DWORD) trueDestinationProbability: 0.7768831908782481 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4614810349538580443
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  134  <|@ instruction v31|DWORD = MOVZXB [v0|QWORD[.] + v28|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  136  <|@ instruction MOV (x: [v2|QWORD[.] + v29|DWORD * 2 + 16], y: v31|DWORD) size: WORD <|@ <|@
      nr  138  <|@ instruction v32|QWORD = MOVSXD v28|DWORD size: QWORD <|@ <|@
      nr  140  <|@ instruction v33|QWORD = MOVSXD v29|DWORD size: QWORD <|@ <|@
      nr  142  <|@ instruction v34|DWORD = MOVZXB [v0|QWORD[.] + v32|QWORD * 1 + 17] size: DWORD <|@ <|@
      nr  144  <|@ instruction MOV (x: [v2|QWORD[.] + v33|QWORD * 2 + 18], y: v34|DWORD) size: WORD <|@ <|@
      nr  146  <|@ instruction v35|DWORD = MOVZXB [v0|QWORD[.] + v32|QWORD * 1 + 18] size: DWORD <|@ <|@
      nr  148  <|@ instruction MOV (x: [v2|QWORD[.] + v33|QWORD * 2 + 20], y: v35|DWORD) size: WORD <|@ <|@
      nr  150  <|@ instruction v36|DWORD = MOVZXB [v0|QWORD[.] + v32|QWORD * 1 + 19] size: DWORD <|@ <|@
      nr  152  <|@ instruction MOV (x: [v2|QWORD[.] + v33|QWORD * 2 + 22], y: v36|DWORD) size: WORD <|@ <|@
      nr  154  <|@ instruction v37|DWORD = MOVZXB [v0|QWORD[.] + v32|QWORD * 1 + 20] size: DWORD <|@ <|@
      nr  156  <|@ instruction MOV (x: [v2|QWORD[.] + v33|QWORD * 2 + 24], y: v37|DWORD) size: WORD <|@ <|@
      nr  158  <|@ instruction v38|DWORD = MOVZXB [v0|QWORD[.] + v32|QWORD * 1 + 21] size: DWORD <|@ <|@
      nr  160  <|@ instruction MOV (x: [v2|QWORD[.] + v33|QWORD * 2 + 26], y: v38|DWORD) size: WORD <|@ <|@
      nr  162  <|@ instruction v39|DWORD = MOVZXB [v0|QWORD[.] + v32|QWORD * 1 + 22] size: DWORD <|@ <|@
      nr  164  <|@ instruction MOV (x: [v2|QWORD[.] + v33|QWORD * 2 + 28], y: v39|DWORD) size: WORD <|@ <|@
      nr  166  <|@ instruction v40|DWORD = MOVZXB [v0|QWORD[.] + v32|QWORD * 1 + 23] size: DWORD <|@ <|@
      nr  168  <|@ instruction MOV (x: [v2|QWORD[.] + v33|QWORD * 2 + 30], y: v40|DWORD) size: WORD <|@ <|@
      nr  170  <|@ instruction v41|DWORD = LEA [v30|DWORD + 8] size: DWORD <|@ <|@
      nr  172  <|@ instruction v42|DWORD = LEA [v29|DWORD + 8] size: DWORD <|@ <|@
      nr  174  <|@ instruction v43|DWORD = LEA [v28|DWORD + 8] size: DWORD <|@ <|@
      nr  176  <|@ instruction JUMP ~[v43|DWORD, v42|DWORD, v41|DWORD] destination: B19 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4606938027579086147
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction JUMP ~[v28|DWORD, v29|DWORD, v30|DWORD] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" 
    successors "B22" "B23" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607026540791548872
    begin_IR
      LIR
      nr  182  <|@ instruction [v44|DWORD, v45|DWORD, v46|DWORD] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  184  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v46|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576818467378667812
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction v47|DWORD = MOVZXB [v0|QWORD[.] + v44|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  190  <|@ instruction MOV (x: [v2|QWORD[.] + v45|DWORD * 2 + 16], y: v47|DWORD) size: WORD <|@ <|@
      nr  192  <|@ instruction v48|DWORD = INC v46|DWORD size: DWORD <|@ <|@
      nr  194  <|@ instruction v49|DWORD = INC v45|DWORD size: DWORD <|@ <|@
      nr  196  <|@ instruction v50|DWORD = INC v44|DWORD size: DWORD <|@ <|@
      nr  198  <|@ instruction JUMP ~[v50|DWORD, v49|DWORD, v48|DWORD] destination: B22 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4606938027579086147
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B24" 
    xhandlers
    flags 
    probability 4583477740478224256
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction JUMP ~[] destination: B1 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction JUMP ~[int[-22811|0xffffffffffffa6e5], long[24|0x18]] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction JUMP ~[int[-16411|0xffffffffffffbfe5], long[0|0x0]] destination: B26 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction JUMP ~[int[-20251|0xffffffffffffb0e5], long[0|0x0]] destination: B25 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction JUMP ~[int[-25371|0xffffffffffff9ce5], long[24|0x18]] destination: B27 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  230  <|@ instruction JUMP ~[int[-25371|0xffffffffffff9ce5], long[24|0x18]] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction JUMP ~[int[-22811|0xffffffffffffa6e5], long[24|0x18]] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B28" "B26" "B25" "B29" "B27" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr  236  <|@ instruction [v51|DWORD, v52|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  238  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v51|DWORD) size: DWORD <|@ <|@
      nr  240  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v52|QWORD) size: QWORD <|@ <|@
      nr  242  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore        5
     3: iload         5
     5: iload         4
     7: if_icmpge     33
    10: aload_2       
    11: iload_3       
    12: iinc          
    15: aload_0       
    16: iload_1       
    17: iinc          
    20: baload        
    21: sipush        255
    24: iand          
    25: i2c           
    26: castore       
    27: iinc          
    30: goto          3
    33: return        
   <|@
end_bytecodes
begin_intervals
  name "Before register allocation"
  rcx|q fixed "[rcx|q]" rcx|q -1 [0, 10[ "NoSpillStore"
  rdx|d fixed "[rdx|d]" rdx|d -1 [0, 8[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 2[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q -1 [0, 6[ "NoSpillStore"
  r8|d fixed "[r8|d]" r8|d -1 [0, 12[ "NoSpillStore"
  r9|d fixed "[r9|d]" r9|d -1 [0, 14[ "NoSpillStore"
  v0|q QWORD "[v0|q]" v0|q rsi|q [6, 200[[212, 243[6 MustHaveRegister 20 MustHaveRegister 94 MustHaveRegister 110 MustHaveRegister 121 LiveAtLoopEnd 134 MustHaveRegister 142 MustHaveRegister 146 MustHaveRegister 150 MustHaveRegister 154 MustHaveRegister 158 MustHaveRegister 162 MustHaveRegister 166 MustHaveRegister 177 LiveAtLoopEnd 188 MustHaveRegister 199 LiveAtLoopEnd  "NoSpillStore"
  v1|d DWORD "[v1|d]" v1|d rdx|d [8, 94[[212, 243[8 MustHaveRegister 22 ShouldHaveRegister 86 ShouldHaveRegister 94 MustHaveRegister  "NoSpillStore"
  v2|q QWORD "[v2|q]" v2|q rcx|q [10, 200[[212, 243[10 MustHaveRegister 56 MustHaveRegister 96 MustHaveRegister 112 MustHaveRegister 121 LiveAtLoopEnd 136 MustHaveRegister 144 MustHaveRegister 148 MustHaveRegister 152 MustHaveRegister 156 MustHaveRegister 160 MustHaveRegister 164 MustHaveRegister 168 MustHaveRegister 177 LiveAtLoopEnd 190 MustHaveRegister 199 LiveAtLoopEnd  "NoSpillStore"
  v3|d DWORD "[v3|d]" v3|d r8|d [12, 96[[212, 243[12 MustHaveRegister 58 ShouldHaveRegister 90 ShouldHaveRegister 96 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[v4|d]" v4|d r9|d [14, 200[[212, 243[14 MustHaveRegister 16 ShouldHaveRegister 24 ShouldHaveRegister 30 ShouldHaveRegister 60 ShouldHaveRegister 98 ShouldHaveRegister 100 MustHaveRegister 124 MustHaveRegister 184 MustHaveRegister 199 LiveAtLoopEnd  "NoSpillStore"
  v5|d DWORD "[v5|d]" v5|d -1 [20, 86[20 MustHaveRegister 38 ShouldHaveRegister 44 MustHaveRegister 86 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[v6|d]" v6|d v1|d [22, 103[22 MustHaveRegister 34 ShouldHaveRegister 44 ShouldHaveRegister 102 ShouldHaveRegister  "NoSpillStore"
  v7|d DWORD "[v7|d]" v7|d v4|d [24, 26[24 MustHaveRegister 26 ShouldHaveRegister  "NoSpillStore"
  v8|q QWORD "[v8|q]" v8|q -1 [26, 28[26 MustHaveRegister 28 ShouldHaveRegister  "NoSpillStore"
  v9|q QWORD "[v9|q]" v9|q v8|q [28, 66[28 MustHaveRegister 36 ShouldHaveRegister 66 ShouldHaveRegister  "NoSpillStore"
  v10|q QWORD "[v10|q]" v10|q -1 [34, 36[34 MustHaveRegister 36 ShouldHaveRegister  "NoSpillStore"
  v11|q QWORD "[v11|q]" v11|q v10|q [36, 40[36 MustHaveRegister 40 ShouldHaveRegister  "NoSpillStore"
  v12|q QWORD "[v12|q]" v12|q -1 [38, 40[38 MustHaveRegister 40 MustHaveRegister  "NoSpillStore"
  v13|d DWORD "[v13|d]" v13|d -1 [56, 90[56 MustHaveRegister 68 ShouldHaveRegister 74 MustHaveRegister 90 MustHaveRegister  "NoSpillStore"
  v14|d DWORD "[v14|d]" v14|d v3|d [58, 103[58 MustHaveRegister 64 ShouldHaveRegister 74 ShouldHaveRegister 102 ShouldHaveRegister  "NoSpillStore"
  v15|q QWORD "[v15|q]" v15|q -1 [64, 66[64 MustHaveRegister 66 ShouldHaveRegister  "NoSpillStore"
  v16|q QWORD "[v16|q]" v16|q v15|q [66, 70[66 MustHaveRegister 70 ShouldHaveRegister  "NoSpillStore"
  v17|q QWORD "[v17|q]" v17|q -1 [68, 70[68 MustHaveRegister 70 MustHaveRegister  "NoSpillStore"
  v18|d DWORD "[v18|d]" v18|d -1 [94, 96[94 MustHaveRegister 96 MustHaveRegister  "NoSpillStore"
  v19|d DWORD "[v19|d]" v19|d -1 [100, 122[100 MustHaveRegister 106 MustHaveRegister 121 LiveAtLoopEnd  "NoSpillStore"
  v20|d DWORD "[v20|d]" v20|d v26|d [104, 118[[122, 127[106 ShouldHaveRegister 118 ShouldHaveRegister 126 ShouldHaveRegister  "NoSpillStore"
  v21|d DWORD "[v21|d]" v21|d v14|d [104, 116[[122, 127[112 MustHaveRegister 116 ShouldHaveRegister 126 ShouldHaveRegister  "NoSpillStore"
  v22|d DWORD "[v22|d]" v22|d v6|d [104, 114[[122, 127[110 MustHaveRegister 114 ShouldHaveRegister 126 ShouldHaveRegister  "NoSpillStore"
  v23|d DWORD "[v23|d]" v23|d -1 [110, 112[110 MustHaveRegister 112 MustHaveRegister  "NoSpillStore"
  v24|d DWORD "[v24|d]" v24|d v22|d [114, 121[114 MustHaveRegister 120 ShouldHaveRegister  "NoSpillStore"
  v25|d DWORD "[v25|d]" v25|d v21|d [116, 121[116 MustHaveRegister 120 ShouldHaveRegister  "NoSpillStore"
  v26|d DWORD "[v26|d]" v26|d v20|d [118, 121[118 MustHaveRegister 120 ShouldHaveRegister  "NoSpillStore"
  v27|d DWORD "[v27|d]" v27|d -1 [124, 178[124 MustHaveRegister 130 MustHaveRegister 177 LiveAtLoopEnd  "NoSpillStore"
  v28|d DWORD "[v28|d]" v28|d v43|d [128, 174[[178, 181[134 MustHaveRegister 138 ShouldHaveRegister 174 MustHaveRegister 180 ShouldHaveRegister  "NoSpillStore"
  v29|d DWORD "[v29|d]" v29|d v42|d [128, 172[[178, 181[136 MustHaveRegister 140 ShouldHaveRegister 172 MustHaveRegister 180 ShouldHaveRegister  "NoSpillStore"
  v30|d DWORD "[v30|d]" v30|d v41|d [128, 170[[178, 181[130 ShouldHaveRegister 170 MustHaveRegister 180 ShouldHaveRegister  "NoSpillStore"
  v31|d DWORD "[v31|d]" v31|d -1 [134, 136[134 MustHaveRegister 136 MustHaveRegister  "NoSpillStore"
  v32|q QWORD "[v32|q]" v32|q -1 [138, 166[138 MustHaveRegister 142 MustHaveRegister 146 MustHaveRegister 150 MustHaveRegister 154 MustHaveRegister 158 MustHaveRegister 162 MustHaveRegister 166 MustHaveRegister  "NoSpillStore"
  v33|q QWORD "[v33|q]" v33|q -1 [140, 168[140 MustHaveRegister 144 MustHaveRegister 148 MustHaveRegister 152 MustHaveRegister 156 MustHaveRegister 160 MustHaveRegister 164 MustHaveRegister 168 MustHaveRegister  "NoSpillStore"
  v34|d DWORD "[v34|d]" v34|d -1 [142, 144[142 MustHaveRegister 144 MustHaveRegister  "NoSpillStore"
  v35|d DWORD "[v35|d]" v35|d -1 [146, 148[146 MustHaveRegister 148 MustHaveRegister  "NoSpillStore"
  v36|d DWORD "[v36|d]" v36|d -1 [150, 152[150 MustHaveRegister 152 MustHaveRegister  "NoSpillStore"
  v37|d DWORD "[v37|d]" v37|d -1 [154, 156[154 MustHaveRegister 156 MustHaveRegister  "NoSpillStore"
  v38|d DWORD "[v38|d]" v38|d -1 [158, 160[158 MustHaveRegister 160 MustHaveRegister  "NoSpillStore"
  v39|d DWORD "[v39|d]" v39|d -1 [162, 164[162 MustHaveRegister 164 MustHaveRegister  "NoSpillStore"
  v40|d DWORD "[v40|d]" v40|d -1 [166, 168[166 MustHaveRegister 168 MustHaveRegister  "NoSpillStore"
  v41|d DWORD "[v41|d]" v41|d v30|d [170, 177[170 MustHaveRegister 176 ShouldHaveRegister  "NoSpillStore"
  v42|d DWORD "[v42|d]" v42|d v29|d [172, 177[172 MustHaveRegister 176 ShouldHaveRegister  "NoSpillStore"
  v43|d DWORD "[v43|d]" v43|d v28|d [174, 177[174 MustHaveRegister 176 ShouldHaveRegister  "NoSpillStore"
  v44|d DWORD "[v44|d]" v44|d v28|d [182, 196[188 MustHaveRegister 196 ShouldHaveRegister  "NoSpillStore"
  v45|d DWORD "[v45|d]" v45|d v29|d [182, 194[190 MustHaveRegister 194 ShouldHaveRegister  "NoSpillStore"
  v46|d DWORD "[v46|d]" v46|d v30|d [182, 192[184 ShouldHaveRegister 192 ShouldHaveRegister  "NoSpillStore"
  v47|d DWORD "[v47|d]" v47|d -1 [188, 190[188 MustHaveRegister 190 MustHaveRegister  "NoSpillStore"
  v48|d DWORD "[v48|d]" v48|d v46|d [192, 199[192 MustHaveRegister 198 ShouldHaveRegister  "NoSpillStore"
  v49|d DWORD "[v49|d]" v49|d v45|d [194, 199[194 MustHaveRegister 198 ShouldHaveRegister  "NoSpillStore"
  v50|d DWORD "[v50|d]" v50|d v44|d [196, 199[196 MustHaveRegister 198 ShouldHaveRegister  "NoSpillStore"
  v51|d DWORD "[v51|d]" v51|d -1 [236, 238[238 MustHaveRegister  "NoSpillStore"
  v52|q QWORD "[v52|q]" v52|q -1 [236, 240[240 MustHaveRegister  "NoSpillStore"
end_intervals
begin_intervals
  name "After register allocation"
  rcx|q fixed "[rcx|q]" rcx|q -1 [0, 10[ "NoSpillStore"
  rdx|d fixed "[rdx|d]" rdx|d -1 [0, 8[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 2[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q -1 [0, 6[ "NoSpillStore"
  r8|d fixed "[r8|d]" r8|d -1 [0, 12[ "NoSpillStore"
  r9|d fixed "[r9|d]" r9|d -1 [0, 14[ "NoSpillStore"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [6, 200[[212, 243[6 MustHaveRegister 20 MustHaveRegister 94 MustHaveRegister 110 MustHaveRegister 121 LiveAtLoopEnd 134 MustHaveRegister 142 MustHaveRegister 146 MustHaveRegister 150 MustHaveRegister 154 MustHaveRegister 158 MustHaveRegister 162 MustHaveRegister 166 MustHaveRegister 177 LiveAtLoopEnd 188 MustHaveRegister 199 LiveAtLoopEnd  "NoSpillStore"
  v1|d DWORD "[rdx|d]" v1|d rdx|d [8, 94[[212, 243[8 MustHaveRegister 22 ShouldHaveRegister 86 ShouldHaveRegister 94 MustHaveRegister  "NoSpillStore"
  v2|q QWORD "[rcx|q]" v2|q rcx|q [10, 200[[212, 243[10 MustHaveRegister 56 MustHaveRegister 96 MustHaveRegister 112 MustHaveRegister 121 LiveAtLoopEnd 136 MustHaveRegister 144 MustHaveRegister 148 MustHaveRegister 152 MustHaveRegister 156 MustHaveRegister 160 MustHaveRegister 164 MustHaveRegister 168 MustHaveRegister 177 LiveAtLoopEnd 190 MustHaveRegister 199 LiveAtLoopEnd  "NoSpillStore"
  v3|d DWORD "[r8|d]" v3|d r8|d [12, 96[[212, 243[12 MustHaveRegister 58 ShouldHaveRegister 90 ShouldHaveRegister 96 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[r9|d]" v4|d r9|d [14, 200[[212, 243[14 MustHaveRegister 16 ShouldHaveRegister 24 ShouldHaveRegister 30 ShouldHaveRegister 60 ShouldHaveRegister 98 ShouldHaveRegister 100 MustHaveRegister 124 MustHaveRegister 184 MustHaveRegister 199 LiveAtLoopEnd  "NoSpillStore"
  v5|d DWORD "[r10|d]" v5|d -1 [20, 86[20 MustHaveRegister 38 ShouldHaveRegister 44 MustHaveRegister 86 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[r11|d]" v6|d v1|d [22, 103[22 MustHaveRegister 34 ShouldHaveRegister 44 ShouldHaveRegister 102 ShouldHaveRegister  "NoSpillStore"
  v7|d DWORD "[rbx|d]" v7|d v4|d [24, 26[24 MustHaveRegister 26 ShouldHaveRegister  "NoSpillStore"
  v8|q QWORD "[rbx|q]" v8|q -1 [26, 28[26 MustHaveRegister 28 ShouldHaveRegister  "NoSpillStore"
  v9|q QWORD "[rbx|q]" v9|q v8|q [28, 66[28 MustHaveRegister 36 ShouldHaveRegister 66 ShouldHaveRegister  "NoSpillStore"
  v10|q QWORD "[rdi|q]" v10|q -1 [34, 36[34 MustHaveRegister 36 ShouldHaveRegister  "NoSpillStore"
  v11|q QWORD "[rdi|q]" v11|q v10|q [36, 40[36 MustHaveRegister 40 ShouldHaveRegister  "NoSpillStore"
  v12|q QWORD "[rax|q]" v12|q -1 [38, 40[38 MustHaveRegister 40 MustHaveRegister  "NoSpillStore"
  v13|d DWORD "[rdi|d]" v13|d -1 [56, 90[56 MustHaveRegister 68 ShouldHaveRegister 74 MustHaveRegister 90 MustHaveRegister  "NoSpillStore"
  v14|d DWORD "[rax|d]" v14|d v3|d [58, 103[58 MustHaveRegister 64 ShouldHaveRegister 74 ShouldHaveRegister 102 ShouldHaveRegister  "NoSpillStore"
  v15|q QWORD "[rbp|q]" v15|q -1 [64, 66[64 MustHaveRegister 66 ShouldHaveRegister  "NoSpillStore"
  v16|q QWORD "[rbp|q]" v16|q v15|q [66, 70[66 MustHaveRegister 70 ShouldHaveRegister  "NoSpillStore"
  v17|q QWORD "[rbx|q]" v17|q -1 [68, 70[68 MustHaveRegister 70 MustHaveRegister  "NoSpillStore"
  v18|d DWORD "[r10|d]" v18|d -1 [94, 96[94 MustHaveRegister 96 MustHaveRegister  "NoSpillStore"
  v19|d DWORD "[r10|d]" v19|d -1 [100, 122[100 MustHaveRegister 106 MustHaveRegister 121 LiveAtLoopEnd  "NoSpillStore"
  v20|d DWORD "[r11|d]" v20|d v26|d [104, 118[[122, 127[106 ShouldHaveRegister 118 ShouldHaveRegister 126 ShouldHaveRegister  "NoSpillStore"
  v21|d DWORD "[rax|d]" v21|d v14|d [104, 116[[122, 127[112 MustHaveRegister 116 ShouldHaveRegister 126 ShouldHaveRegister  "NoSpillStore"
  v22|d DWORD "[r8|d]" v22|d v6|d [104, 114[[122, 127[110 MustHaveRegister 114 ShouldHaveRegister 126 ShouldHaveRegister  "NoSpillStore"
  v23|d DWORD "[rbx|d]" v23|d -1 [110, 112[110 MustHaveRegister 112 MustHaveRegister  "NoSpillStore"
  v24|d DWORD "[r8|d]" v24|d v22|d [114, 121[114 MustHaveRegister 120 ShouldHaveRegister  "NoSpillStore"
  v25|d DWORD "[rax|d]" v25|d v21|d [116, 121[116 MustHaveRegister 120 ShouldHaveRegister  "NoSpillStore"
  v26|d DWORD "[r11|d]" v26|d v20|d [118, 121[118 MustHaveRegister 120 ShouldHaveRegister  "NoSpillStore"
  v27|d DWORD "[r10|d]" v27|d -1 [124, 178[124 MustHaveRegister 130 MustHaveRegister 177 LiveAtLoopEnd  "NoSpillStore"
  v28|d DWORD "[r11|d]" v28|d v43|d [128, 174[[178, 181[134 MustHaveRegister 138 ShouldHaveRegister 174 MustHaveRegister 180 ShouldHaveRegister  "NoSpillStore"
  v29|d DWORD "[r8|d]" v29|d v42|d [128, 172[[178, 181[136 MustHaveRegister 140 ShouldHaveRegister 172 MustHaveRegister 180 ShouldHaveRegister  "NoSpillStore"
  v30|d DWORD "[rbx|d]" v30|d v41|d [128, 170[[178, 181[130 ShouldHaveRegister 170 MustHaveRegister 180 ShouldHaveRegister  "NoSpillStore"
  v31|d DWORD "[rdi|d]" v31|d -1 [134, 136[134 MustHaveRegister 136 MustHaveRegister  "NoSpillStore"
  v32|q QWORD "[rdi|q]" v32|q -1 [138, 166[138 MustHaveRegister 142 MustHaveRegister 146 MustHaveRegister 150 MustHaveRegister 154 MustHaveRegister 158 MustHaveRegister 162 MustHaveRegister 166 MustHaveRegister  "NoSpillStore"
  v33|q QWORD "[rdx|q]" v33|q -1 [140, 168[140 MustHaveRegister 144 MustHaveRegister 148 MustHaveRegister 152 MustHaveRegister 156 MustHaveRegister 160 MustHaveRegister 164 MustHaveRegister 168 MustHaveRegister  "NoSpillStore"
  v34|d DWORD "[rax|d]" v34|d -1 [142, 144[142 MustHaveRegister 144 MustHaveRegister  "NoSpillStore"
  v35|d DWORD "[rax|d]" v35|d -1 [146, 148[146 MustHaveRegister 148 MustHaveRegister  "NoSpillStore"
  v36|d DWORD "[rax|d]" v36|d -1 [150, 152[150 MustHaveRegister 152 MustHaveRegister  "NoSpillStore"
  v37|d DWORD "[rax|d]" v37|d -1 [154, 156[154 MustHaveRegister 156 MustHaveRegister  "NoSpillStore"
  v38|d DWORD "[rax|d]" v38|d -1 [158, 160[158 MustHaveRegister 160 MustHaveRegister  "NoSpillStore"
  v39|d DWORD "[rax|d]" v39|d -1 [162, 164[162 MustHaveRegister 164 MustHaveRegister  "NoSpillStore"
  v40|d DWORD "[rdi|d]" v40|d -1 [166, 168[166 MustHaveRegister 168 MustHaveRegister  "NoSpillStore"
  v41|d DWORD "[rbx|d]" v41|d v30|d [170, 177[170 MustHaveRegister 176 ShouldHaveRegister  "NoSpillStore"
  v42|d DWORD "[r8|d]" v42|d v29|d [172, 177[172 MustHaveRegister 176 ShouldHaveRegister  "NoSpillStore"
  v43|d DWORD "[r11|d]" v43|d v28|d [174, 177[174 MustHaveRegister 176 ShouldHaveRegister  "NoSpillStore"
  v44|d DWORD "[r11|d]" v44|d v28|d [182, 196[188 MustHaveRegister 196 ShouldHaveRegister  "NoSpillStore"
  v45|d DWORD "[r8|d]" v45|d v29|d [182, 194[190 MustHaveRegister 194 ShouldHaveRegister  "NoSpillStore"
  v46|d DWORD "[rbx|d]" v46|d v30|d [182, 192[184 ShouldHaveRegister 192 ShouldHaveRegister  "NoSpillStore"
  v47|d DWORD "[r10|d]" v47|d -1 [188, 190[188 MustHaveRegister 190 MustHaveRegister  "NoSpillStore"
  v48|d DWORD "[rbx|d]" v48|d v46|d [192, 199[192 MustHaveRegister 198 ShouldHaveRegister  "NoSpillStore"
  v49|d DWORD "[r8|d]" v49|d v45|d [194, 199[194 MustHaveRegister 198 ShouldHaveRegister  "NoSpillStore"
  v50|d DWORD "[r11|d]" v50|d v44|d [196, 199[196 MustHaveRegister 198 ShouldHaveRegister  "NoSpillStore"
  v51|d DWORD "[r10|d]" v51|d -1 [236, 238[238 MustHaveRegister  "NoSpillStore"
  v52|q QWORD "[r11|q]" v52|q -1 [236, 240[240 MustHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After LinearScanRegisterAllocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@20983de9 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction v2|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   12  <|@ instruction v3|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   14  <|@ instruction v4|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   16  <|@ instruction CMPCONSTBRANCH v4|DWORD trueDestinationProbability: 0.027132876049413834 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   20  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD - 
>@ <|@ instruction v5|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   22  <|@ instruction v6|DWORD = INC v1|DWORD size: DWORD <|@ <|@
      nr   24  <|@ instruction v7|DWORD = DEC v4|DWORD size: DWORD <|@ <|@
      nr   26  <|@ instruction v8|QWORD = MOV v7|DWORD size: DWORD <|@ <|@
      nr   28  <|@ instruction v9|QWORD = DEC v8|QWORD size: QWORD <|@ <|@
      nr   30  <|@ instruction CMPCONSTBRANCH v4|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B30" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction v10|QWORD = MOVSXD v6|DWORD size: QWORD <|@ <|@
      nr   36  <|@ instruction v11|QWORD = ADD (x: v10|QWORD, y: v9|QWORD) size: QWORD <|@ <|@
      nr   38  <|@ instruction v12|QWORD = MOV v5|DWORD size: DWORD <|@ <|@
      nr   40  <|@ instruction CMPBRANCH (x: v12|QWORD, y: v11|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B30 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B29" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction CMPBRANCH (x: v5|DWORD, y: v6|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction JUMP ~[] destination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD - 
>@ <|@ instruction v13|DWORD = MOV [v2|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   58  <|@ instruction v14|DWORD = INC v3|DWORD size: DWORD <|@ <|@
      nr   60  <|@ instruction CMPCONSTBRANCH v4|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B28" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction v15|QWORD = MOVSXD v14|DWORD size: QWORD <|@ <|@
      nr   66  <|@ instruction v16|QWORD = ADD (x: v15|QWORD, y: v9|QWORD) size: QWORD <|@ <|@
      nr   68  <|@ instruction v17|QWORD = MOV v13|DWORD size: DWORD <|@ <|@
      nr   70  <|@ instruction CMPBRANCH (x: v17|QWORD, y: v16|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B28 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B27" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v14|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction JUMP ~[] destination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" "B11" 
    successors "B13" "B26" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction CMPBRANCH (x: v5|DWORD, y: v1|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B25" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v3|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction v18|DWORD = MOVZXB [v0|QWORD[.] + v1|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   96  <|@ instruction MOV (x: [v2|QWORD[.] + v3|DWORD * 2 + 16], y: v18|DWORD) size: WORD <|@ <|@
      nr   98  <|@ instruction CMP v4|DWORD y: 3 size: DWORD <|@ <|@
      nr  100  <|@ instruction v19|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v4|DWORD) condition: < <|@ <|@
      nr  102  <|@ instruction JUMP ~[int[1|0x1], v14|DWORD, v6|DWORD] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607026540791548873
    begin_IR
      LIR
      nr  104  <|@ instruction [v20|DWORD, v21|DWORD, v22|DWORD] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  106  <|@ instruction CMPBRANCH (x: v19|DWORD, y: v20|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576818467378667813
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction v23|DWORD = MOVZXB [v0|QWORD[.] + v22|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  112  <|@ instruction MOV (x: [v2|QWORD[.] + v21|DWORD * 2 + 16], y: v23|DWORD) size: WORD <|@ <|@
      nr  114  <|@ instruction v24|DWORD = INC v22|DWORD size: DWORD <|@ <|@
      nr  116  <|@ instruction v25|DWORD = INC v21|DWORD size: DWORD <|@ <|@
      nr  118  <|@ instruction v26|DWORD = INC v20|DWORD size: DWORD <|@ <|@
      nr  120  <|@ instruction JUMP ~[v26|DWORD, v25|DWORD, v24|DWORD] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction v27|DWORD = LEA [v4|DWORD - 8] size: DWORD <|@ <|@
      nr  126  <|@ instruction JUMP ~[v22|DWORD, v21|DWORD, v20|DWORD] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B19" 
    successors "B19" "B20" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4616595334800895638
    begin_IR
      LIR
      nr  128  <|@ instruction [v28|DWORD, v29|DWORD, v30|DWORD] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  130  <|@ instruction CMPBRANCH (x: v27|DWORD, y: v30|DWORD) trueDestinationProbability: 0.7768831908782481 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4614810349538580443
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  134  <|@ instruction v31|DWORD = MOVZXB [v0|QWORD[.] + v28|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  136  <|@ instruction MOV (x: [v2|QWORD[.] + v29|DWORD * 2 + 16], y: v31|DWORD) size: WORD <|@ <|@
      nr  138  <|@ instruction v32|QWORD = MOVSXD v28|DWORD size: QWORD <|@ <|@
      nr  140  <|@ instruction v33|QWORD = MOVSXD v29|DWORD size: QWORD <|@ <|@
      nr  142  <|@ instruction v34|DWORD = MOVZXB [v0|QWORD[.] + v32|QWORD * 1 + 17] size: DWORD <|@ <|@
      nr  144  <|@ instruction MOV (x: [v2|QWORD[.] + v33|QWORD * 2 + 18], y: v34|DWORD) size: WORD <|@ <|@
      nr  146  <|@ instruction v35|DWORD = MOVZXB [v0|QWORD[.] + v32|QWORD * 1 + 18] size: DWORD <|@ <|@
      nr  148  <|@ instruction MOV (x: [v2|QWORD[.] + v33|QWORD * 2 + 20], y: v35|DWORD) size: WORD <|@ <|@
      nr  150  <|@ instruction v36|DWORD = MOVZXB [v0|QWORD[.] + v32|QWORD * 1 + 19] size: DWORD <|@ <|@
      nr  152  <|@ instruction MOV (x: [v2|QWORD[.] + v33|QWORD * 2 + 22], y: v36|DWORD) size: WORD <|@ <|@
      nr  154  <|@ instruction v37|DWORD = MOVZXB [v0|QWORD[.] + v32|QWORD * 1 + 20] size: DWORD <|@ <|@
      nr  156  <|@ instruction MOV (x: [v2|QWORD[.] + v33|QWORD * 2 + 24], y: v37|DWORD) size: WORD <|@ <|@
      nr  158  <|@ instruction v38|DWORD = MOVZXB [v0|QWORD[.] + v32|QWORD * 1 + 21] size: DWORD <|@ <|@
      nr  160  <|@ instruction MOV (x: [v2|QWORD[.] + v33|QWORD * 2 + 26], y: v38|DWORD) size: WORD <|@ <|@
      nr  162  <|@ instruction v39|DWORD = MOVZXB [v0|QWORD[.] + v32|QWORD * 1 + 22] size: DWORD <|@ <|@
      nr  164  <|@ instruction MOV (x: [v2|QWORD[.] + v33|QWORD * 2 + 28], y: v39|DWORD) size: WORD <|@ <|@
      nr  166  <|@ instruction v40|DWORD = MOVZXB [v0|QWORD[.] + v32|QWORD * 1 + 23] size: DWORD <|@ <|@
      nr  168  <|@ instruction MOV (x: [v2|QWORD[.] + v33|QWORD * 2 + 30], y: v40|DWORD) size: WORD <|@ <|@
      nr  170  <|@ instruction v41|DWORD = LEA [v30|DWORD + 8] size: DWORD <|@ <|@
      nr  172  <|@ instruction v42|DWORD = LEA [v29|DWORD + 8] size: DWORD <|@ <|@
      nr  174  <|@ instruction v43|DWORD = LEA [v28|DWORD + 8] size: DWORD <|@ <|@
      nr  176  <|@ instruction JUMP ~[v43|DWORD, v42|DWORD, v41|DWORD] destination: B19 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4606938027579086147
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction JUMP ~[v28|DWORD, v29|DWORD, v30|DWORD] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" 
    successors "B22" "B23" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607026540791548872
    begin_IR
      LIR
      nr  182  <|@ instruction [v44|DWORD, v45|DWORD, v46|DWORD] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  184  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v46|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576818467378667812
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction v47|DWORD = MOVZXB [v0|QWORD[.] + v44|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  190  <|@ instruction MOV (x: [v2|QWORD[.] + v45|DWORD * 2 + 16], y: v47|DWORD) size: WORD <|@ <|@
      nr  192  <|@ instruction v48|DWORD = INC v46|DWORD size: DWORD <|@ <|@
      nr  194  <|@ instruction v49|DWORD = INC v45|DWORD size: DWORD <|@ <|@
      nr  196  <|@ instruction v50|DWORD = INC v44|DWORD size: DWORD <|@ <|@
      nr  198  <|@ instruction JUMP ~[v50|DWORD, v49|DWORD, v48|DWORD] destination: B22 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4606938027579086147
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B24" 
    xhandlers
    flags 
    probability 4583477740478224256
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction JUMP ~[] destination: B1 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction JUMP ~[int[-22811|0xffffffffffffa6e5], long[24|0x18]] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction JUMP ~[int[-16411|0xffffffffffffbfe5], long[0|0x0]] destination: B26 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction JUMP ~[int[-20251|0xffffffffffffb0e5], long[0|0x0]] destination: B25 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction JUMP ~[int[-25371|0xffffffffffff9ce5], long[24|0x18]] destination: B27 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  230  <|@ instruction JUMP ~[int[-25371|0xffffffffffff9ce5], long[24|0x18]] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction JUMP ~[int[-22811|0xffffffffffffa6e5], long[24|0x18]] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B28" "B26" "B25" "B29" "B27" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr  236  <|@ instruction [v51|DWORD, v52|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  238  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v51|DWORD) size: DWORD <|@ <|@
      nr  240  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v52|QWORD) size: QWORD <|@ <|@
      nr  242  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore        5
     3: iload         5
     5: iload         4
     7: if_icmpge     33
    10: aload_2       
    11: iload_3       
    12: iinc          
    15: aload_0       
    16: iload_1       
    17: iinc          
    20: baload        
    21: sipush        255
    24: iand          
    25: i2c           
    26: castore       
    27: iinc          
    30: goto          3
    33: return        
   <|@
end_bytecodes
begin_intervals
  name "After optimize spill position"
  rcx|q fixed "[rcx|q]" rcx|q -1 [0, 10[ "NoSpillStore"
  rdx|d fixed "[rdx|d]" rdx|d -1 [0, 8[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 2[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q -1 [0, 6[ "NoSpillStore"
  r8|d fixed "[r8|d]" r8|d -1 [0, 12[ "NoSpillStore"
  r9|d fixed "[r9|d]" r9|d -1 [0, 14[ "NoSpillStore"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [6, 200[[212, 243[6 MustHaveRegister 20 MustHaveRegister 94 MustHaveRegister 110 MustHaveRegister 121 LiveAtLoopEnd 134 MustHaveRegister 142 MustHaveRegister 146 MustHaveRegister 150 MustHaveRegister 154 MustHaveRegister 158 MustHaveRegister 162 MustHaveRegister 166 MustHaveRegister 177 LiveAtLoopEnd 188 MustHaveRegister 199 LiveAtLoopEnd  "NoSpillStore"
  v1|d DWORD "[rdx|d]" v1|d rdx|d [8, 94[[212, 243[8 MustHaveRegister 22 ShouldHaveRegister 86 ShouldHaveRegister 94 MustHaveRegister  "NoSpillStore"
  v2|q QWORD "[rcx|q]" v2|q rcx|q [10, 200[[212, 243[10 MustHaveRegister 56 MustHaveRegister 96 MustHaveRegister 112 MustHaveRegister 121 LiveAtLoopEnd 136 MustHaveRegister 144 MustHaveRegister 148 MustHaveRegister 152 MustHaveRegister 156 MustHaveRegister 160 MustHaveRegister 164 MustHaveRegister 168 MustHaveRegister 177 LiveAtLoopEnd 190 MustHaveRegister 199 LiveAtLoopEnd  "NoSpillStore"
  v3|d DWORD "[r8|d]" v3|d r8|d [12, 96[[212, 243[12 MustHaveRegister 58 ShouldHaveRegister 90 ShouldHaveRegister 96 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[r9|d]" v4|d r9|d [14, 200[[212, 243[14 MustHaveRegister 16 ShouldHaveRegister 24 ShouldHaveRegister 30 ShouldHaveRegister 60 ShouldHaveRegister 98 ShouldHaveRegister 100 MustHaveRegister 124 MustHaveRegister 184 MustHaveRegister 199 LiveAtLoopEnd  "NoSpillStore"
  v5|d DWORD "[r10|d]" v5|d -1 [20, 86[20 MustHaveRegister 38 ShouldHaveRegister 44 MustHaveRegister 86 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[r11|d]" v6|d v1|d [22, 103[22 MustHaveRegister 34 ShouldHaveRegister 44 ShouldHaveRegister 102 ShouldHaveRegister  "NoSpillStore"
  v7|d DWORD "[rbx|d]" v7|d v4|d [24, 26[24 MustHaveRegister 26 ShouldHaveRegister  "NoSpillStore"
  v8|q QWORD "[rbx|q]" v8|q -1 [26, 28[26 MustHaveRegister 28 ShouldHaveRegister  "NoSpillStore"
  v9|q QWORD "[rbx|q]" v9|q v8|q [28, 66[28 MustHaveRegister 36 ShouldHaveRegister 66 ShouldHaveRegister  "NoSpillStore"
  v10|q QWORD "[rdi|q]" v10|q -1 [34, 36[34 MustHaveRegister 36 ShouldHaveRegister  "NoSpillStore"
  v11|q QWORD "[rdi|q]" v11|q v10|q [36, 40[36 MustHaveRegister 40 ShouldHaveRegister  "NoSpillStore"
  v12|q QWORD "[rax|q]" v12|q -1 [38, 40[38 MustHaveRegister 40 MustHaveRegister  "NoSpillStore"
  v13|d DWORD "[rdi|d]" v13|d -1 [56, 90[56 MustHaveRegister 68 ShouldHaveRegister 74 MustHaveRegister 90 MustHaveRegister  "NoSpillStore"
  v14|d DWORD "[rax|d]" v14|d v3|d [58, 103[58 MustHaveRegister 64 ShouldHaveRegister 74 ShouldHaveRegister 102 ShouldHaveRegister  "NoSpillStore"
  v15|q QWORD "[rbp|q]" v15|q -1 [64, 66[64 MustHaveRegister 66 ShouldHaveRegister  "NoSpillStore"
  v16|q QWORD "[rbp|q]" v16|q v15|q [66, 70[66 MustHaveRegister 70 ShouldHaveRegister  "NoSpillStore"
  v17|q QWORD "[rbx|q]" v17|q -1 [68, 70[68 MustHaveRegister 70 MustHaveRegister  "NoSpillStore"
  v18|d DWORD "[r10|d]" v18|d -1 [94, 96[94 MustHaveRegister 96 MustHaveRegister  "NoSpillStore"
  v19|d DWORD "[r10|d]" v19|d -1 [100, 122[100 MustHaveRegister 106 MustHaveRegister 121 LiveAtLoopEnd  "NoSpillStore"
  v20|d DWORD "[r11|d]" v20|d v26|d [104, 118[[122, 127[106 ShouldHaveRegister 118 ShouldHaveRegister 126 ShouldHaveRegister  "NoSpillStore"
  v21|d DWORD "[rax|d]" v21|d v14|d [104, 116[[122, 127[112 MustHaveRegister 116 ShouldHaveRegister 126 ShouldHaveRegister  "NoSpillStore"
  v22|d DWORD "[r8|d]" v22|d v6|d [104, 114[[122, 127[110 MustHaveRegister 114 ShouldHaveRegister 126 ShouldHaveRegister  "NoSpillStore"
  v23|d DWORD "[rbx|d]" v23|d -1 [110, 112[110 MustHaveRegister 112 MustHaveRegister  "NoSpillStore"
  v24|d DWORD "[r8|d]" v24|d v22|d [114, 121[114 MustHaveRegister 120 ShouldHaveRegister  "NoSpillStore"
  v25|d DWORD "[rax|d]" v25|d v21|d [116, 121[116 MustHaveRegister 120 ShouldHaveRegister  "NoSpillStore"
  v26|d DWORD "[r11|d]" v26|d v20|d [118, 121[118 MustHaveRegister 120 ShouldHaveRegister  "NoSpillStore"
  v27|d DWORD "[r10|d]" v27|d -1 [124, 178[124 MustHaveRegister 130 MustHaveRegister 177 LiveAtLoopEnd  "NoSpillStore"
  v28|d DWORD "[r11|d]" v28|d v43|d [128, 174[[178, 181[134 MustHaveRegister 138 ShouldHaveRegister 174 MustHaveRegister 180 ShouldHaveRegister  "NoSpillStore"
  v29|d DWORD "[r8|d]" v29|d v42|d [128, 172[[178, 181[136 MustHaveRegister 140 ShouldHaveRegister 172 MustHaveRegister 180 ShouldHaveRegister  "NoSpillStore"
  v30|d DWORD "[rbx|d]" v30|d v41|d [128, 170[[178, 181[130 ShouldHaveRegister 170 MustHaveRegister 180 ShouldHaveRegister  "NoSpillStore"
  v31|d DWORD "[rdi|d]" v31|d -1 [134, 136[134 MustHaveRegister 136 MustHaveRegister  "NoSpillStore"
  v32|q QWORD "[rdi|q]" v32|q -1 [138, 166[138 MustHaveRegister 142 MustHaveRegister 146 MustHaveRegister 150 MustHaveRegister 154 MustHaveRegister 158 MustHaveRegister 162 MustHaveRegister 166 MustHaveRegister  "NoSpillStore"
  v33|q QWORD "[rdx|q]" v33|q -1 [140, 168[140 MustHaveRegister 144 MustHaveRegister 148 MustHaveRegister 152 MustHaveRegister 156 MustHaveRegister 160 MustHaveRegister 164 MustHaveRegister 168 MustHaveRegister  "NoSpillStore"
  v34|d DWORD "[rax|d]" v34|d -1 [142, 144[142 MustHaveRegister 144 MustHaveRegister  "NoSpillStore"
  v35|d DWORD "[rax|d]" v35|d -1 [146, 148[146 MustHaveRegister 148 MustHaveRegister  "NoSpillStore"
  v36|d DWORD "[rax|d]" v36|d -1 [150, 152[150 MustHaveRegister 152 MustHaveRegister  "NoSpillStore"
  v37|d DWORD "[rax|d]" v37|d -1 [154, 156[154 MustHaveRegister 156 MustHaveRegister  "NoSpillStore"
  v38|d DWORD "[rax|d]" v38|d -1 [158, 160[158 MustHaveRegister 160 MustHaveRegister  "NoSpillStore"
  v39|d DWORD "[rax|d]" v39|d -1 [162, 164[162 MustHaveRegister 164 MustHaveRegister  "NoSpillStore"
  v40|d DWORD "[rdi|d]" v40|d -1 [166, 168[166 MustHaveRegister 168 MustHaveRegister  "NoSpillStore"
  v41|d DWORD "[rbx|d]" v41|d v30|d [170, 177[170 MustHaveRegister 176 ShouldHaveRegister  "NoSpillStore"
  v42|d DWORD "[r8|d]" v42|d v29|d [172, 177[172 MustHaveRegister 176 ShouldHaveRegister  "NoSpillStore"
  v43|d DWORD "[r11|d]" v43|d v28|d [174, 177[174 MustHaveRegister 176 ShouldHaveRegister  "NoSpillStore"
  v44|d DWORD "[r11|d]" v44|d v28|d [182, 196[188 MustHaveRegister 196 ShouldHaveRegister  "NoSpillStore"
  v45|d DWORD "[r8|d]" v45|d v29|d [182, 194[190 MustHaveRegister 194 ShouldHaveRegister  "NoSpillStore"
  v46|d DWORD "[rbx|d]" v46|d v30|d [182, 192[184 ShouldHaveRegister 192 ShouldHaveRegister  "NoSpillStore"
  v47|d DWORD "[r10|d]" v47|d -1 [188, 190[188 MustHaveRegister 190 MustHaveRegister  "NoSpillStore"
  v48|d DWORD "[rbx|d]" v48|d v46|d [192, 199[192 MustHaveRegister 198 ShouldHaveRegister  "NoSpillStore"
  v49|d DWORD "[r8|d]" v49|d v45|d [194, 199[194 MustHaveRegister 198 ShouldHaveRegister  "NoSpillStore"
  v50|d DWORD "[r11|d]" v50|d v44|d [196, 199[196 MustHaveRegister 198 ShouldHaveRegister  "NoSpillStore"
  v51|d DWORD "[r10|d]" v51|d -1 [236, 238[238 MustHaveRegister  "NoSpillStore"
  v52|q QWORD "[r11|q]" v52|q -1 [236, 240[240 MustHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After LinearScanOptimizeSpillPosition"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@20983de9 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction v2|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   12  <|@ instruction v3|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   14  <|@ instruction v4|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   16  <|@ instruction CMPCONSTBRANCH v4|DWORD trueDestinationProbability: 0.027132876049413834 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   20  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD - 
>@ <|@ instruction v5|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   22  <|@ instruction v6|DWORD = INC v1|DWORD size: DWORD <|@ <|@
      nr   24  <|@ instruction v7|DWORD = DEC v4|DWORD size: DWORD <|@ <|@
      nr   26  <|@ instruction v8|QWORD = MOV v7|DWORD size: DWORD <|@ <|@
      nr   28  <|@ instruction v9|QWORD = DEC v8|QWORD size: QWORD <|@ <|@
      nr   30  <|@ instruction CMPCONSTBRANCH v4|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B30" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction v10|QWORD = MOVSXD v6|DWORD size: QWORD <|@ <|@
      nr   36  <|@ instruction v11|QWORD = ADD (x: v10|QWORD, y: v9|QWORD) size: QWORD <|@ <|@
      nr   38  <|@ instruction v12|QWORD = MOV v5|DWORD size: DWORD <|@ <|@
      nr   40  <|@ instruction CMPBRANCH (x: v12|QWORD, y: v11|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B30 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B29" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction CMPBRANCH (x: v5|DWORD, y: v6|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction JUMP ~[] destination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD - 
>@ <|@ instruction v13|DWORD = MOV [v2|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   58  <|@ instruction v14|DWORD = INC v3|DWORD size: DWORD <|@ <|@
      nr   60  <|@ instruction CMPCONSTBRANCH v4|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B28" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction v15|QWORD = MOVSXD v14|DWORD size: QWORD <|@ <|@
      nr   66  <|@ instruction v16|QWORD = ADD (x: v15|QWORD, y: v9|QWORD) size: QWORD <|@ <|@
      nr   68  <|@ instruction v17|QWORD = MOV v13|DWORD size: DWORD <|@ <|@
      nr   70  <|@ instruction CMPBRANCH (x: v17|QWORD, y: v16|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B28 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B27" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v14|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction JUMP ~[] destination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" "B11" 
    successors "B13" "B26" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction CMPBRANCH (x: v5|DWORD, y: v1|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B25" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v3|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction v18|DWORD = MOVZXB [v0|QWORD[.] + v1|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   96  <|@ instruction MOV (x: [v2|QWORD[.] + v3|DWORD * 2 + 16], y: v18|DWORD) size: WORD <|@ <|@
      nr   98  <|@ instruction CMP v4|DWORD y: 3 size: DWORD <|@ <|@
      nr  100  <|@ instruction v19|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v4|DWORD) condition: < <|@ <|@
      nr  102  <|@ instruction JUMP ~[int[1|0x1], v14|DWORD, v6|DWORD] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607026540791548873
    begin_IR
      LIR
      nr  104  <|@ instruction [v20|DWORD, v21|DWORD, v22|DWORD] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  106  <|@ instruction CMPBRANCH (x: v19|DWORD, y: v20|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576818467378667813
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction v23|DWORD = MOVZXB [v0|QWORD[.] + v22|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  112  <|@ instruction MOV (x: [v2|QWORD[.] + v21|DWORD * 2 + 16], y: v23|DWORD) size: WORD <|@ <|@
      nr  114  <|@ instruction v24|DWORD = INC v22|DWORD size: DWORD <|@ <|@
      nr  116  <|@ instruction v25|DWORD = INC v21|DWORD size: DWORD <|@ <|@
      nr  118  <|@ instruction v26|DWORD = INC v20|DWORD size: DWORD <|@ <|@
      nr  120  <|@ instruction JUMP ~[v26|DWORD, v25|DWORD, v24|DWORD] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction v27|DWORD = LEA [v4|DWORD - 8] size: DWORD <|@ <|@
      nr  126  <|@ instruction JUMP ~[v22|DWORD, v21|DWORD, v20|DWORD] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B19" 
    successors "B19" "B20" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4616595334800895638
    begin_IR
      LIR
      nr  128  <|@ instruction [v28|DWORD, v29|DWORD, v30|DWORD] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  130  <|@ instruction CMPBRANCH (x: v27|DWORD, y: v30|DWORD) trueDestinationProbability: 0.7768831908782481 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4614810349538580443
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  134  <|@ instruction v31|DWORD = MOVZXB [v0|QWORD[.] + v28|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  136  <|@ instruction MOV (x: [v2|QWORD[.] + v29|DWORD * 2 + 16], y: v31|DWORD) size: WORD <|@ <|@
      nr  138  <|@ instruction v32|QWORD = MOVSXD v28|DWORD size: QWORD <|@ <|@
      nr  140  <|@ instruction v33|QWORD = MOVSXD v29|DWORD size: QWORD <|@ <|@
      nr  142  <|@ instruction v34|DWORD = MOVZXB [v0|QWORD[.] + v32|QWORD * 1 + 17] size: DWORD <|@ <|@
      nr  144  <|@ instruction MOV (x: [v2|QWORD[.] + v33|QWORD * 2 + 18], y: v34|DWORD) size: WORD <|@ <|@
      nr  146  <|@ instruction v35|DWORD = MOVZXB [v0|QWORD[.] + v32|QWORD * 1 + 18] size: DWORD <|@ <|@
      nr  148  <|@ instruction MOV (x: [v2|QWORD[.] + v33|QWORD * 2 + 20], y: v35|DWORD) size: WORD <|@ <|@
      nr  150  <|@ instruction v36|DWORD = MOVZXB [v0|QWORD[.] + v32|QWORD * 1 + 19] size: DWORD <|@ <|@
      nr  152  <|@ instruction MOV (x: [v2|QWORD[.] + v33|QWORD * 2 + 22], y: v36|DWORD) size: WORD <|@ <|@
      nr  154  <|@ instruction v37|DWORD = MOVZXB [v0|QWORD[.] + v32|QWORD * 1 + 20] size: DWORD <|@ <|@
      nr  156  <|@ instruction MOV (x: [v2|QWORD[.] + v33|QWORD * 2 + 24], y: v37|DWORD) size: WORD <|@ <|@
      nr  158  <|@ instruction v38|DWORD = MOVZXB [v0|QWORD[.] + v32|QWORD * 1 + 21] size: DWORD <|@ <|@
      nr  160  <|@ instruction MOV (x: [v2|QWORD[.] + v33|QWORD * 2 + 26], y: v38|DWORD) size: WORD <|@ <|@
      nr  162  <|@ instruction v39|DWORD = MOVZXB [v0|QWORD[.] + v32|QWORD * 1 + 22] size: DWORD <|@ <|@
      nr  164  <|@ instruction MOV (x: [v2|QWORD[.] + v33|QWORD * 2 + 28], y: v39|DWORD) size: WORD <|@ <|@
      nr  166  <|@ instruction v40|DWORD = MOVZXB [v0|QWORD[.] + v32|QWORD * 1 + 23] size: DWORD <|@ <|@
      nr  168  <|@ instruction MOV (x: [v2|QWORD[.] + v33|QWORD * 2 + 30], y: v40|DWORD) size: WORD <|@ <|@
      nr  170  <|@ instruction v41|DWORD = LEA [v30|DWORD + 8] size: DWORD <|@ <|@
      nr  172  <|@ instruction v42|DWORD = LEA [v29|DWORD + 8] size: DWORD <|@ <|@
      nr  174  <|@ instruction v43|DWORD = LEA [v28|DWORD + 8] size: DWORD <|@ <|@
      nr  176  <|@ instruction JUMP ~[v43|DWORD, v42|DWORD, v41|DWORD] destination: B19 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4606938027579086147
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction JUMP ~[v28|DWORD, v29|DWORD, v30|DWORD] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" 
    successors "B22" "B23" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607026540791548872
    begin_IR
      LIR
      nr  182  <|@ instruction [v44|DWORD, v45|DWORD, v46|DWORD] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  184  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v46|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576818467378667812
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction v47|DWORD = MOVZXB [v0|QWORD[.] + v44|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  190  <|@ instruction MOV (x: [v2|QWORD[.] + v45|DWORD * 2 + 16], y: v47|DWORD) size: WORD <|@ <|@
      nr  192  <|@ instruction v48|DWORD = INC v46|DWORD size: DWORD <|@ <|@
      nr  194  <|@ instruction v49|DWORD = INC v45|DWORD size: DWORD <|@ <|@
      nr  196  <|@ instruction v50|DWORD = INC v44|DWORD size: DWORD <|@ <|@
      nr  198  <|@ instruction JUMP ~[v50|DWORD, v49|DWORD, v48|DWORD] destination: B22 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4606938027579086147
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B24" 
    xhandlers
    flags 
    probability 4583477740478224256
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction JUMP ~[] destination: B1 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction JUMP ~[int[-22811|0xffffffffffffa6e5], long[24|0x18]] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction JUMP ~[int[-16411|0xffffffffffffbfe5], long[0|0x0]] destination: B26 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction JUMP ~[int[-20251|0xffffffffffffb0e5], long[0|0x0]] destination: B25 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction JUMP ~[int[-25371|0xffffffffffff9ce5], long[24|0x18]] destination: B27 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  230  <|@ instruction JUMP ~[int[-25371|0xffffffffffff9ce5], long[24|0x18]] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction JUMP ~[int[-22811|0xffffffffffffa6e5], long[24|0x18]] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B28" "B26" "B25" "B29" "B27" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr  236  <|@ instruction [v51|DWORD, v52|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  238  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v51|DWORD) size: DWORD <|@ <|@
      nr  240  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v52|QWORD) size: QWORD <|@ <|@
      nr  242  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore        5
     3: iload         5
     5: iload         4
     7: if_icmpge     33
    10: aload_2       
    11: iload_3       
    12: iinc          
    15: aload_0       
    16: iload_1       
    17: iinc          
    20: baload        
    21: sipush        255
    24: iand          
    25: i2c           
    26: castore       
    27: iinc          
    30: goto          3
    33: return        
   <|@
end_bytecodes
begin_intervals
  name "After resolve data flow"
  rcx|q fixed "[rcx|q]" rcx|q -1 [0, 10[ "NoSpillStore"
  rdx|d fixed "[rdx|d]" rdx|d -1 [0, 8[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 2[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q -1 [0, 6[ "NoSpillStore"
  r8|d fixed "[r8|d]" r8|d -1 [0, 12[ "NoSpillStore"
  r9|d fixed "[r9|d]" r9|d -1 [0, 14[ "NoSpillStore"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [6, 200[[212, 243[6 MustHaveRegister 20 MustHaveRegister 94 MustHaveRegister 110 MustHaveRegister 121 LiveAtLoopEnd 134 MustHaveRegister 142 MustHaveRegister 146 MustHaveRegister 150 MustHaveRegister 154 MustHaveRegister 158 MustHaveRegister 162 MustHaveRegister 166 MustHaveRegister 177 LiveAtLoopEnd 188 MustHaveRegister 199 LiveAtLoopEnd  "NoSpillStore"
  v1|d DWORD "[rdx|d]" v1|d rdx|d [8, 94[[212, 243[8 MustHaveRegister 22 ShouldHaveRegister 86 ShouldHaveRegister 94 MustHaveRegister  "NoSpillStore"
  v2|q QWORD "[rcx|q]" v2|q rcx|q [10, 200[[212, 243[10 MustHaveRegister 56 MustHaveRegister 96 MustHaveRegister 112 MustHaveRegister 121 LiveAtLoopEnd 136 MustHaveRegister 144 MustHaveRegister 148 MustHaveRegister 152 MustHaveRegister 156 MustHaveRegister 160 MustHaveRegister 164 MustHaveRegister 168 MustHaveRegister 177 LiveAtLoopEnd 190 MustHaveRegister 199 LiveAtLoopEnd  "NoSpillStore"
  v3|d DWORD "[r8|d]" v3|d r8|d [12, 96[[212, 243[12 MustHaveRegister 58 ShouldHaveRegister 90 ShouldHaveRegister 96 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[r9|d]" v4|d r9|d [14, 200[[212, 243[14 MustHaveRegister 16 ShouldHaveRegister 24 ShouldHaveRegister 30 ShouldHaveRegister 60 ShouldHaveRegister 98 ShouldHaveRegister 100 MustHaveRegister 124 MustHaveRegister 184 MustHaveRegister 199 LiveAtLoopEnd  "NoSpillStore"
  v5|d DWORD "[r10|d]" v5|d -1 [20, 86[20 MustHaveRegister 38 ShouldHaveRegister 44 MustHaveRegister 86 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[r11|d]" v6|d v1|d [22, 103[22 MustHaveRegister 34 ShouldHaveRegister 44 ShouldHaveRegister 102 ShouldHaveRegister  "NoSpillStore"
  v7|d DWORD "[rbx|d]" v7|d v4|d [24, 26[24 MustHaveRegister 26 ShouldHaveRegister  "NoSpillStore"
  v8|q QWORD "[rbx|q]" v8|q -1 [26, 28[26 MustHaveRegister 28 ShouldHaveRegister  "NoSpillStore"
  v9|q QWORD "[rbx|q]" v9|q v8|q [28, 66[28 MustHaveRegister 36 ShouldHaveRegister 66 ShouldHaveRegister  "NoSpillStore"
  v10|q QWORD "[rdi|q]" v10|q -1 [34, 36[34 MustHaveRegister 36 ShouldHaveRegister  "NoSpillStore"
  v11|q QWORD "[rdi|q]" v11|q v10|q [36, 40[36 MustHaveRegister 40 ShouldHaveRegister  "NoSpillStore"
  v12|q QWORD "[rax|q]" v12|q -1 [38, 40[38 MustHaveRegister 40 MustHaveRegister  "NoSpillStore"
  v13|d DWORD "[rdi|d]" v13|d -1 [56, 90[56 MustHaveRegister 68 ShouldHaveRegister 74 MustHaveRegister 90 MustHaveRegister  "NoSpillStore"
  v14|d DWORD "[rax|d]" v14|d v3|d [58, 103[58 MustHaveRegister 64 ShouldHaveRegister 74 ShouldHaveRegister 102 ShouldHaveRegister  "NoSpillStore"
  v15|q QWORD "[rbp|q]" v15|q -1 [64, 66[64 MustHaveRegister 66 ShouldHaveRegister  "NoSpillStore"
  v16|q QWORD "[rbp|q]" v16|q v15|q [66, 70[66 MustHaveRegister 70 ShouldHaveRegister  "NoSpillStore"
  v17|q QWORD "[rbx|q]" v17|q -1 [68, 70[68 MustHaveRegister 70 MustHaveRegister  "NoSpillStore"
  v18|d DWORD "[r10|d]" v18|d -1 [94, 96[94 MustHaveRegister 96 MustHaveRegister  "NoSpillStore"
  v19|d DWORD "[r10|d]" v19|d -1 [100, 122[100 MustHaveRegister 106 MustHaveRegister 121 LiveAtLoopEnd  "NoSpillStore"
  v20|d DWORD "[r11|d]" v20|d v26|d [104, 118[[122, 127[106 ShouldHaveRegister 118 ShouldHaveRegister 126 ShouldHaveRegister  "NoSpillStore"
  v21|d DWORD "[rax|d]" v21|d v14|d [104, 116[[122, 127[112 MustHaveRegister 116 ShouldHaveRegister 126 ShouldHaveRegister  "NoSpillStore"
  v22|d DWORD "[r8|d]" v22|d v6|d [104, 114[[122, 127[110 MustHaveRegister 114 ShouldHaveRegister 126 ShouldHaveRegister  "NoSpillStore"
  v23|d DWORD "[rbx|d]" v23|d -1 [110, 112[110 MustHaveRegister 112 MustHaveRegister  "NoSpillStore"
  v24|d DWORD "[r8|d]" v24|d v22|d [114, 121[114 MustHaveRegister 120 ShouldHaveRegister  "NoSpillStore"
  v25|d DWORD "[rax|d]" v25|d v21|d [116, 121[116 MustHaveRegister 120 ShouldHaveRegister  "NoSpillStore"
  v26|d DWORD "[r11|d]" v26|d v20|d [118, 121[118 MustHaveRegister 120 ShouldHaveRegister  "NoSpillStore"
  v27|d DWORD "[r10|d]" v27|d -1 [124, 178[124 MustHaveRegister 130 MustHaveRegister 177 LiveAtLoopEnd  "NoSpillStore"
  v28|d DWORD "[r11|d]" v28|d v43|d [128, 174[[178, 181[134 MustHaveRegister 138 ShouldHaveRegister 174 MustHaveRegister 180 ShouldHaveRegister  "NoSpillStore"
  v29|d DWORD "[r8|d]" v29|d v42|d [128, 172[[178, 181[136 MustHaveRegister 140 ShouldHaveRegister 172 MustHaveRegister 180 ShouldHaveRegister  "NoSpillStore"
  v30|d DWORD "[rbx|d]" v30|d v41|d [128, 170[[178, 181[130 ShouldHaveRegister 170 MustHaveRegister 180 ShouldHaveRegister  "NoSpillStore"
  v31|d DWORD "[rdi|d]" v31|d -1 [134, 136[134 MustHaveRegister 136 MustHaveRegister  "NoSpillStore"
  v32|q QWORD "[rdi|q]" v32|q -1 [138, 166[138 MustHaveRegister 142 MustHaveRegister 146 MustHaveRegister 150 MustHaveRegister 154 MustHaveRegister 158 MustHaveRegister 162 MustHaveRegister 166 MustHaveRegister  "NoSpillStore"
  v33|q QWORD "[rdx|q]" v33|q -1 [140, 168[140 MustHaveRegister 144 MustHaveRegister 148 MustHaveRegister 152 MustHaveRegister 156 MustHaveRegister 160 MustHaveRegister 164 MustHaveRegister 168 MustHaveRegister  "NoSpillStore"
  v34|d DWORD "[rax|d]" v34|d -1 [142, 144[142 MustHaveRegister 144 MustHaveRegister  "NoSpillStore"
  v35|d DWORD "[rax|d]" v35|d -1 [146, 148[146 MustHaveRegister 148 MustHaveRegister  "NoSpillStore"
  v36|d DWORD "[rax|d]" v36|d -1 [150, 152[150 MustHaveRegister 152 MustHaveRegister  "NoSpillStore"
  v37|d DWORD "[rax|d]" v37|d -1 [154, 156[154 MustHaveRegister 156 MustHaveRegister  "NoSpillStore"
  v38|d DWORD "[rax|d]" v38|d -1 [158, 160[158 MustHaveRegister 160 MustHaveRegister  "NoSpillStore"
  v39|d DWORD "[rax|d]" v39|d -1 [162, 164[162 MustHaveRegister 164 MustHaveRegister  "NoSpillStore"
  v40|d DWORD "[rdi|d]" v40|d -1 [166, 168[166 MustHaveRegister 168 MustHaveRegister  "NoSpillStore"
  v41|d DWORD "[rbx|d]" v41|d v30|d [170, 177[170 MustHaveRegister 176 ShouldHaveRegister  "NoSpillStore"
  v42|d DWORD "[r8|d]" v42|d v29|d [172, 177[172 MustHaveRegister 176 ShouldHaveRegister  "NoSpillStore"
  v43|d DWORD "[r11|d]" v43|d v28|d [174, 177[174 MustHaveRegister 176 ShouldHaveRegister  "NoSpillStore"
  v44|d DWORD "[r11|d]" v44|d v28|d [182, 196[188 MustHaveRegister 196 ShouldHaveRegister  "NoSpillStore"
  v45|d DWORD "[r8|d]" v45|d v29|d [182, 194[190 MustHaveRegister 194 ShouldHaveRegister  "NoSpillStore"
  v46|d DWORD "[rbx|d]" v46|d v30|d [182, 192[184 ShouldHaveRegister 192 ShouldHaveRegister  "NoSpillStore"
  v47|d DWORD "[r10|d]" v47|d -1 [188, 190[188 MustHaveRegister 190 MustHaveRegister  "NoSpillStore"
  v48|d DWORD "[rbx|d]" v48|d v46|d [192, 199[192 MustHaveRegister 198 ShouldHaveRegister  "NoSpillStore"
  v49|d DWORD "[r8|d]" v49|d v45|d [194, 199[194 MustHaveRegister 198 ShouldHaveRegister  "NoSpillStore"
  v50|d DWORD "[r11|d]" v50|d v44|d [196, 199[196 MustHaveRegister 198 ShouldHaveRegister  "NoSpillStore"
  v51|d DWORD "[r10|d]" v51|d -1 [236, 238[238 MustHaveRegister  "NoSpillStore"
  v52|q QWORD "[r11|q]" v52|q -1 [236, 240[240 MustHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After SSALinearScanResolveDataFlow"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@20983de9 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction v2|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   12  <|@ instruction v3|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   14  <|@ instruction v4|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   16  <|@ instruction CMPCONSTBRANCH v4|DWORD trueDestinationProbability: 0.027132876049413834 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   20  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD - 
>@ <|@ instruction v5|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   22  <|@ instruction v6|DWORD = INC v1|DWORD size: DWORD <|@ <|@
      nr   24  <|@ instruction v7|DWORD = DEC v4|DWORD size: DWORD <|@ <|@
      nr   26  <|@ instruction v8|QWORD = MOV v7|DWORD size: DWORD <|@ <|@
      nr   28  <|@ instruction v9|QWORD = DEC v8|QWORD size: QWORD <|@ <|@
      nr   30  <|@ instruction CMPCONSTBRANCH v4|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B30" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction v10|QWORD = MOVSXD v6|DWORD size: QWORD <|@ <|@
      nr   36  <|@ instruction v11|QWORD = ADD (x: v10|QWORD, y: v9|QWORD) size: QWORD <|@ <|@
      nr   38  <|@ instruction v12|QWORD = MOV v5|DWORD size: DWORD <|@ <|@
      nr   40  <|@ instruction CMPBRANCH (x: v12|QWORD, y: v11|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B30 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B29" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction CMPBRANCH (x: v5|DWORD, y: v6|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction JUMP ~[] destination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD - 
>@ <|@ instruction v13|DWORD = MOV [v2|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   58  <|@ instruction v14|DWORD = INC v3|DWORD size: DWORD <|@ <|@
      nr   60  <|@ instruction CMPCONSTBRANCH v4|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B28" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction v15|QWORD = MOVSXD v14|DWORD size: QWORD <|@ <|@
      nr   66  <|@ instruction v16|QWORD = ADD (x: v15|QWORD, y: v9|QWORD) size: QWORD <|@ <|@
      nr   68  <|@ instruction v17|QWORD = MOV v13|DWORD size: DWORD <|@ <|@
      nr   70  <|@ instruction CMPBRANCH (x: v17|QWORD, y: v16|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B28 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B27" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v14|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction JUMP ~[] destination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" "B11" 
    successors "B13" "B26" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction CMPBRANCH (x: v5|DWORD, y: v1|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B25" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v3|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction v18|DWORD = MOVZXB [v0|QWORD[.] + v1|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   96  <|@ instruction MOV (x: [v2|QWORD[.] + v3|DWORD * 2 + 16], y: v18|DWORD) size: WORD <|@ <|@
      nr   98  <|@ instruction CMP v4|DWORD y: 3 size: DWORD <|@ <|@
      nr  100  <|@ instruction v19|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v4|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = MOVE v6|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  102  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607026540791548873
    begin_IR
      LIR
      nr  104  <|@ instruction [v20|DWORD, v21|DWORD, v22|DWORD] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  106  <|@ instruction CMPBRANCH (x: v19|DWORD, y: v20|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576818467378667813
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction v23|DWORD = MOVZXB [v0|QWORD[.] + v22|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  112  <|@ instruction MOV (x: [v2|QWORD[.] + v21|DWORD * 2 + 16], y: v23|DWORD) size: WORD <|@ <|@
      nr  114  <|@ instruction v24|DWORD = INC v22|DWORD size: DWORD <|@ <|@
      nr  116  <|@ instruction v25|DWORD = INC v21|DWORD size: DWORD <|@ <|@
      nr  118  <|@ instruction v26|DWORD = INC v20|DWORD size: DWORD <|@ <|@
      nr  120  <|@ instruction JUMP ~[] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction v27|DWORD = LEA [v4|DWORD - 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = MOVE v20|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = MOVE v22|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = MOVE v21|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  126  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B19" 
    successors "B19" "B20" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4616595334800895638
    begin_IR
      LIR
      nr  128  <|@ instruction [v28|DWORD, v29|DWORD, v30|DWORD] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  130  <|@ instruction CMPBRANCH (x: v27|DWORD, y: v30|DWORD) trueDestinationProbability: 0.7768831908782481 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4614810349538580443
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  134  <|@ instruction v31|DWORD = MOVZXB [v0|QWORD[.] + v28|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  136  <|@ instruction MOV (x: [v2|QWORD[.] + v29|DWORD * 2 + 16], y: v31|DWORD) size: WORD <|@ <|@
      nr  138  <|@ instruction v32|QWORD = MOVSXD v28|DWORD size: QWORD <|@ <|@
      nr  140  <|@ instruction v33|QWORD = MOVSXD v29|DWORD size: QWORD <|@ <|@
      nr  142  <|@ instruction v34|DWORD = MOVZXB [v0|QWORD[.] + v32|QWORD * 1 + 17] size: DWORD <|@ <|@
      nr  144  <|@ instruction MOV (x: [v2|QWORD[.] + v33|QWORD * 2 + 18], y: v34|DWORD) size: WORD <|@ <|@
      nr  146  <|@ instruction v35|DWORD = MOVZXB [v0|QWORD[.] + v32|QWORD * 1 + 18] size: DWORD <|@ <|@
      nr  148  <|@ instruction MOV (x: [v2|QWORD[.] + v33|QWORD * 2 + 20], y: v35|DWORD) size: WORD <|@ <|@
      nr  150  <|@ instruction v36|DWORD = MOVZXB [v0|QWORD[.] + v32|QWORD * 1 + 19] size: DWORD <|@ <|@
      nr  152  <|@ instruction MOV (x: [v2|QWORD[.] + v33|QWORD * 2 + 22], y: v36|DWORD) size: WORD <|@ <|@
      nr  154  <|@ instruction v37|DWORD = MOVZXB [v0|QWORD[.] + v32|QWORD * 1 + 20] size: DWORD <|@ <|@
      nr  156  <|@ instruction MOV (x: [v2|QWORD[.] + v33|QWORD * 2 + 24], y: v37|DWORD) size: WORD <|@ <|@
      nr  158  <|@ instruction v38|DWORD = MOVZXB [v0|QWORD[.] + v32|QWORD * 1 + 21] size: DWORD <|@ <|@
      nr  160  <|@ instruction MOV (x: [v2|QWORD[.] + v33|QWORD * 2 + 26], y: v38|DWORD) size: WORD <|@ <|@
      nr  162  <|@ instruction v39|DWORD = MOVZXB [v0|QWORD[.] + v32|QWORD * 1 + 22] size: DWORD <|@ <|@
      nr  164  <|@ instruction MOV (x: [v2|QWORD[.] + v33|QWORD * 2 + 28], y: v39|DWORD) size: WORD <|@ <|@
      nr  166  <|@ instruction v40|DWORD = MOVZXB [v0|QWORD[.] + v32|QWORD * 1 + 23] size: DWORD <|@ <|@
      nr  168  <|@ instruction MOV (x: [v2|QWORD[.] + v33|QWORD * 2 + 30], y: v40|DWORD) size: WORD <|@ <|@
      nr  170  <|@ instruction v41|DWORD = LEA [v30|DWORD + 8] size: DWORD <|@ <|@
      nr  172  <|@ instruction v42|DWORD = LEA [v29|DWORD + 8] size: DWORD <|@ <|@
      nr  174  <|@ instruction v43|DWORD = LEA [v28|DWORD + 8] size: DWORD <|@ <|@
      nr  176  <|@ instruction JUMP ~[] destination: B19 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4606938027579086147
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction JUMP ~[] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" 
    successors "B22" "B23" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607026540791548872
    begin_IR
      LIR
      nr  182  <|@ instruction [v44|DWORD, v45|DWORD, v46|DWORD] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  184  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v46|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576818467378667812
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction v47|DWORD = MOVZXB [v0|QWORD[.] + v44|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  190  <|@ instruction MOV (x: [v2|QWORD[.] + v45|DWORD * 2 + 16], y: v47|DWORD) size: WORD <|@ <|@
      nr  192  <|@ instruction v48|DWORD = INC v46|DWORD size: DWORD <|@ <|@
      nr  194  <|@ instruction v49|DWORD = INC v45|DWORD size: DWORD <|@ <|@
      nr  196  <|@ instruction v50|DWORD = INC v44|DWORD size: DWORD <|@ <|@
      nr  198  <|@ instruction JUMP ~[] destination: B22 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4606938027579086147
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B24" 
    xhandlers
    flags 
    probability 4583477740478224256
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction JUMP ~[] destination: B1 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = MOVE input: int[-22811|0xffffffffffffa6e5] // MoveResolver resolve mapping <|@ <|@
      nr  214  <|@ instruction JUMP ~[] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = MOVE input: int[-16411|0xffffffffffffbfe5] // MoveResolver resolve mapping <|@ <|@
      nr  218  <|@ instruction JUMP ~[] destination: B26 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = MOVE input: int[-20251|0xffffffffffffb0e5] // MoveResolver resolve mapping <|@ <|@
      nr  222  <|@ instruction JUMP ~[] destination: B25 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = MOVE input: int[-25371|0xffffffffffff9ce5] // MoveResolver resolve mapping <|@ <|@
      nr  226  <|@ instruction JUMP ~[] destination: B27 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = MOVE input: int[-25371|0xffffffffffff9ce5] // MoveResolver resolve mapping <|@ <|@
      nr  230  <|@ instruction JUMP ~[] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = MOVE input: int[-22811|0xffffffffffffa6e5] // MoveResolver resolve mapping <|@ <|@
      nr  234  <|@ instruction JUMP ~[] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B28" "B26" "B25" "B29" "B27" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr  236  <|@ instruction [v51|DWORD, v52|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  238  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v51|DWORD) size: DWORD <|@ <|@
      nr  240  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v52|QWORD) size: QWORD <|@ <|@
      nr  242  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore        5
     3: iload         5
     5: iload         4
     7: if_icmpge     33
    10: aload_2       
    11: iload_3       
    12: iinc          
    15: aload_0       
    16: iload_1       
    17: iinc          
    20: baload        
    21: sipush        255
    24: iand          
    25: i2c           
    26: castore       
    27: iinc          
    30: goto          3
    33: return        
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanEliminateSpillMove"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@20983de9 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction v2|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   12  <|@ instruction v3|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   14  <|@ instruction v4|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   16  <|@ instruction CMPCONSTBRANCH v4|DWORD trueDestinationProbability: 0.027132876049413834 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   20  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD - 
>@ <|@ instruction v5|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   22  <|@ instruction v6|DWORD = INC v1|DWORD size: DWORD <|@ <|@
      nr   24  <|@ instruction v7|DWORD = DEC v4|DWORD size: DWORD <|@ <|@
      nr   26  <|@ instruction v8|QWORD = MOV v7|DWORD size: DWORD <|@ <|@
      nr   28  <|@ instruction v9|QWORD = DEC v8|QWORD size: QWORD <|@ <|@
      nr   30  <|@ instruction CMPCONSTBRANCH v4|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B30" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction v10|QWORD = MOVSXD v6|DWORD size: QWORD <|@ <|@
      nr   36  <|@ instruction v11|QWORD = ADD (x: v10|QWORD, y: v9|QWORD) size: QWORD <|@ <|@
      nr   38  <|@ instruction v12|QWORD = MOV v5|DWORD size: DWORD <|@ <|@
      nr   40  <|@ instruction CMPBRANCH (x: v12|QWORD, y: v11|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B30 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B29" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction CMPBRANCH (x: v5|DWORD, y: v6|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction JUMP ~[] destination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD - 
>@ <|@ instruction v13|DWORD = MOV [v2|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   58  <|@ instruction v14|DWORD = INC v3|DWORD size: DWORD <|@ <|@
      nr   60  <|@ instruction CMPCONSTBRANCH v4|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B28" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction v15|QWORD = MOVSXD v14|DWORD size: QWORD <|@ <|@
      nr   66  <|@ instruction v16|QWORD = ADD (x: v15|QWORD, y: v9|QWORD) size: QWORD <|@ <|@
      nr   68  <|@ instruction v17|QWORD = MOV v13|DWORD size: DWORD <|@ <|@
      nr   70  <|@ instruction CMPBRANCH (x: v17|QWORD, y: v16|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B28 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B27" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v14|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction JUMP ~[] destination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" "B11" 
    successors "B13" "B26" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction CMPBRANCH (x: v5|DWORD, y: v1|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B25" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v3|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction v18|DWORD = MOVZXB [v0|QWORD[.] + v1|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   96  <|@ instruction MOV (x: [v2|QWORD[.] + v3|DWORD * 2 + 16], y: v18|DWORD) size: WORD <|@ <|@
      nr   98  <|@ instruction CMP v4|DWORD y: 3 size: DWORD <|@ <|@
      nr  100  <|@ instruction v19|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v4|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = MOVE v6|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  102  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607026540791548873
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  106  <|@ instruction CMPBRANCH (x: v19|DWORD, y: v20|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576818467378667813
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction v23|DWORD = MOVZXB [v0|QWORD[.] + v22|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  112  <|@ instruction MOV (x: [v2|QWORD[.] + v21|DWORD * 2 + 16], y: v23|DWORD) size: WORD <|@ <|@
      nr  114  <|@ instruction v24|DWORD = INC v22|DWORD size: DWORD <|@ <|@
      nr  116  <|@ instruction v25|DWORD = INC v21|DWORD size: DWORD <|@ <|@
      nr  118  <|@ instruction v26|DWORD = INC v20|DWORD size: DWORD <|@ <|@
      nr  120  <|@ instruction JUMP ~[] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction v27|DWORD = LEA [v4|DWORD - 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = MOVE v20|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = MOVE v22|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = MOVE v21|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  126  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B19" 
    successors "B19" "B20" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4616595334800895638
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  130  <|@ instruction CMPBRANCH (x: v27|DWORD, y: v30|DWORD) trueDestinationProbability: 0.7768831908782481 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4614810349538580443
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  134  <|@ instruction v31|DWORD = MOVZXB [v0|QWORD[.] + v28|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  136  <|@ instruction MOV (x: [v2|QWORD[.] + v29|DWORD * 2 + 16], y: v31|DWORD) size: WORD <|@ <|@
      nr  138  <|@ instruction v32|QWORD = MOVSXD v28|DWORD size: QWORD <|@ <|@
      nr  140  <|@ instruction v33|QWORD = MOVSXD v29|DWORD size: QWORD <|@ <|@
      nr  142  <|@ instruction v34|DWORD = MOVZXB [v0|QWORD[.] + v32|QWORD * 1 + 17] size: DWORD <|@ <|@
      nr  144  <|@ instruction MOV (x: [v2|QWORD[.] + v33|QWORD * 2 + 18], y: v34|DWORD) size: WORD <|@ <|@
      nr  146  <|@ instruction v35|DWORD = MOVZXB [v0|QWORD[.] + v32|QWORD * 1 + 18] size: DWORD <|@ <|@
      nr  148  <|@ instruction MOV (x: [v2|QWORD[.] + v33|QWORD * 2 + 20], y: v35|DWORD) size: WORD <|@ <|@
      nr  150  <|@ instruction v36|DWORD = MOVZXB [v0|QWORD[.] + v32|QWORD * 1 + 19] size: DWORD <|@ <|@
      nr  152  <|@ instruction MOV (x: [v2|QWORD[.] + v33|QWORD * 2 + 22], y: v36|DWORD) size: WORD <|@ <|@
      nr  154  <|@ instruction v37|DWORD = MOVZXB [v0|QWORD[.] + v32|QWORD * 1 + 20] size: DWORD <|@ <|@
      nr  156  <|@ instruction MOV (x: [v2|QWORD[.] + v33|QWORD * 2 + 24], y: v37|DWORD) size: WORD <|@ <|@
      nr  158  <|@ instruction v38|DWORD = MOVZXB [v0|QWORD[.] + v32|QWORD * 1 + 21] size: DWORD <|@ <|@
      nr  160  <|@ instruction MOV (x: [v2|QWORD[.] + v33|QWORD * 2 + 26], y: v38|DWORD) size: WORD <|@ <|@
      nr  162  <|@ instruction v39|DWORD = MOVZXB [v0|QWORD[.] + v32|QWORD * 1 + 22] size: DWORD <|@ <|@
      nr  164  <|@ instruction MOV (x: [v2|QWORD[.] + v33|QWORD * 2 + 28], y: v39|DWORD) size: WORD <|@ <|@
      nr  166  <|@ instruction v40|DWORD = MOVZXB [v0|QWORD[.] + v32|QWORD * 1 + 23] size: DWORD <|@ <|@
      nr  168  <|@ instruction MOV (x: [v2|QWORD[.] + v33|QWORD * 2 + 30], y: v40|DWORD) size: WORD <|@ <|@
      nr  170  <|@ instruction v41|DWORD = LEA [v30|DWORD + 8] size: DWORD <|@ <|@
      nr  172  <|@ instruction v42|DWORD = LEA [v29|DWORD + 8] size: DWORD <|@ <|@
      nr  174  <|@ instruction v43|DWORD = LEA [v28|DWORD + 8] size: DWORD <|@ <|@
      nr  176  <|@ instruction JUMP ~[] destination: B19 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4606938027579086147
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction JUMP ~[] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" 
    successors "B22" "B23" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607026540791548872
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  184  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v46|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576818467378667812
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction v47|DWORD = MOVZXB [v0|QWORD[.] + v44|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  190  <|@ instruction MOV (x: [v2|QWORD[.] + v45|DWORD * 2 + 16], y: v47|DWORD) size: WORD <|@ <|@
      nr  192  <|@ instruction v48|DWORD = INC v46|DWORD size: DWORD <|@ <|@
      nr  194  <|@ instruction v49|DWORD = INC v45|DWORD size: DWORD <|@ <|@
      nr  196  <|@ instruction v50|DWORD = INC v44|DWORD size: DWORD <|@ <|@
      nr  198  <|@ instruction JUMP ~[] destination: B22 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4606938027579086147
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B24" 
    xhandlers
    flags 
    probability 4583477740478224256
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction JUMP ~[] destination: B1 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = MOVE input: int[-22811|0xffffffffffffa6e5] // MoveResolver resolve mapping <|@ <|@
      nr  214  <|@ instruction JUMP ~[] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = MOVE input: int[-16411|0xffffffffffffbfe5] // MoveResolver resolve mapping <|@ <|@
      nr  218  <|@ instruction JUMP ~[] destination: B26 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = MOVE input: int[-20251|0xffffffffffffb0e5] // MoveResolver resolve mapping <|@ <|@
      nr  222  <|@ instruction JUMP ~[] destination: B25 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = MOVE input: int[-25371|0xffffffffffff9ce5] // MoveResolver resolve mapping <|@ <|@
      nr  226  <|@ instruction JUMP ~[] destination: B27 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = MOVE input: int[-25371|0xffffffffffff9ce5] // MoveResolver resolve mapping <|@ <|@
      nr  230  <|@ instruction JUMP ~[] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = MOVE input: int[-22811|0xffffffffffffa6e5] // MoveResolver resolve mapping <|@ <|@
      nr  234  <|@ instruction JUMP ~[] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B28" "B26" "B25" "B29" "B27" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  238  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v51|DWORD) size: DWORD <|@ <|@
      nr  240  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v52|QWORD) size: QWORD <|@ <|@
      nr  242  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore        5
     3: iload         5
     5: iload         4
     7: if_icmpge     33
    10: aload_2       
    11: iload_3       
    12: iinc          
    15: aload_0       
    16: iload_1       
    17: iinc          
    20: baload        
    21: sipush        255
    24: iand          
    25: i2c           
    26: castore       
    27: iinc          
    30: goto          3
    33: return        
   <|@
end_bytecodes
begin_cfg
  name "After LinearScanAssignLocations"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@20983de9 slotKind: QWORD <|@ <|@
      nr   16  <|@ instruction CMPCONSTBRANCH r9|DWORD trueDestinationProbability: 0.027132876049413834 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   20  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] r8|DWORD r9|DWORD - 
>@ <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   22  <|@ instruction r11|DWORD = INC rdx|DWORD size: DWORD <|@ <|@
      nr   24  <|@ instruction rbx|DWORD = DEC r9|DWORD size: DWORD <|@ <|@
      nr   26  <|@ instruction rbx|QWORD = MOV rbx|DWORD size: DWORD <|@ <|@
      nr   28  <|@ instruction rbx|QWORD = DEC rbx|QWORD size: QWORD <|@ <|@
      nr   30  <|@ instruction CMPCONSTBRANCH r9|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B30" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction rdi|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr   36  <|@ instruction rdi|QWORD = ADD (x: rdi|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr   38  <|@ instruction rax|QWORD = MOV r10|DWORD size: DWORD <|@ <|@
      nr   40  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rdi|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B30 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B29" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction JUMP ~[] destination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] r8|DWORD r9|DWORD - 
>@ <|@ instruction rdi|DWORD = MOV [rcx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   58  <|@ instruction rax|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr   60  <|@ instruction CMPCONSTBRANCH r9|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B28" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction rbp|QWORD = MOVSXD rax|DWORD size: QWORD <|@ <|@
      nr   66  <|@ instruction rbp|QWORD = ADD (x: rbp|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr   68  <|@ instruction rbx|QWORD = MOV rdi|DWORD size: DWORD <|@ <|@
      nr   70  <|@ instruction CMPBRANCH (x: rbx|QWORD, y: rbp|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B28 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B27" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction JUMP ~[] destination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" "B11" 
    successors "B13" "B26" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B25" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction r10|DWORD = MOVZXB [rsi|QWORD[.] + rdx|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   96  <|@ instruction MOV (x: [rcx|QWORD[.] + r8|DWORD * 2 + 16], y: r10|DWORD) size: WORD <|@ <|@
      nr   98  <|@ instruction CMP r9|DWORD y: 3 size: DWORD <|@ <|@
      nr  100  <|@ instruction r10|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r9|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  102  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607026540791548873
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  106  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576818467378667813
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction rbx|DWORD = MOVZXB [rsi|QWORD[.] + r8|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  112  <|@ instruction MOV (x: [rcx|QWORD[.] + rax|DWORD * 2 + 16], y: rbx|DWORD) size: WORD <|@ <|@
      nr  114  <|@ instruction r8|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr  116  <|@ instruction rax|DWORD = INC rax|DWORD size: DWORD <|@ <|@
      nr  118  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  120  <|@ instruction JUMP ~[] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction r10|DWORD = LEA [r9|DWORD - 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  126  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B19" 
    successors "B19" "B20" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4616595334800895638
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  130  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.7768831908782481 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4614810349538580443
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  134  <|@ instruction rdi|DWORD = MOVZXB [rsi|QWORD[.] + r11|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  136  <|@ instruction MOV (x: [rcx|QWORD[.] + r8|DWORD * 2 + 16], y: rdi|DWORD) size: WORD <|@ <|@
      nr  138  <|@ instruction rdi|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr  140  <|@ instruction rdx|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr  142  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 17] size: DWORD <|@ <|@
      nr  144  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 18], y: rax|DWORD) size: WORD <|@ <|@
      nr  146  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 18] size: DWORD <|@ <|@
      nr  148  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 20], y: rax|DWORD) size: WORD <|@ <|@
      nr  150  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 19] size: DWORD <|@ <|@
      nr  152  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 22], y: rax|DWORD) size: WORD <|@ <|@
      nr  154  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 20] size: DWORD <|@ <|@
      nr  156  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 24], y: rax|DWORD) size: WORD <|@ <|@
      nr  158  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 21] size: DWORD <|@ <|@
      nr  160  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 26], y: rax|DWORD) size: WORD <|@ <|@
      nr  162  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 22] size: DWORD <|@ <|@
      nr  164  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 28], y: rax|DWORD) size: WORD <|@ <|@
      nr  166  <|@ instruction rdi|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 23] size: DWORD <|@ <|@
      nr  168  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 30], y: rdi|DWORD) size: WORD <|@ <|@
      nr  170  <|@ instruction rbx|DWORD = LEA [rbx|DWORD + 8] size: DWORD <|@ <|@
      nr  172  <|@ instruction r8|DWORD = LEA [r8|DWORD + 8] size: DWORD <|@ <|@
      nr  174  <|@ instruction r11|DWORD = LEA [r11|DWORD + 8] size: DWORD <|@ <|@
      nr  176  <|@ instruction JUMP ~[] destination: B19 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4606938027579086147
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction JUMP ~[] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" 
    successors "B22" "B23" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607026540791548872
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  184  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576818467378667812
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction r10|DWORD = MOVZXB [rsi|QWORD[.] + r11|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  190  <|@ instruction MOV (x: [rcx|QWORD[.] + r8|DWORD * 2 + 16], y: r10|DWORD) size: WORD <|@ <|@
      nr  192  <|@ instruction rbx|DWORD = INC rbx|DWORD size: DWORD <|@ <|@
      nr  194  <|@ instruction r8|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr  196  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  198  <|@ instruction JUMP ~[] destination: B22 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4606938027579086147
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B24" 
    xhandlers
    flags 
    probability 4583477740478224256
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction JUMP ~[] destination: B1 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-22811|0xffffffffffffa6e5] // MoveResolver resolve mapping <|@ <|@
      nr  214  <|@ instruction JUMP ~[] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-16411|0xffffffffffffbfe5] // MoveResolver resolve mapping <|@ <|@
      nr  218  <|@ instruction JUMP ~[] destination: B26 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-20251|0xffffffffffffb0e5] // MoveResolver resolve mapping <|@ <|@
      nr  222  <|@ instruction JUMP ~[] destination: B25 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-25371|0xffffffffffff9ce5] // MoveResolver resolve mapping <|@ <|@
      nr  226  <|@ instruction JUMP ~[] destination: B27 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-25371|0xffffffffffff9ce5] // MoveResolver resolve mapping <|@ <|@
      nr  230  <|@ instruction JUMP ~[] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-22811|0xffffffffffffa6e5] // MoveResolver resolve mapping <|@ <|@
      nr  234  <|@ instruction JUMP ~[] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B28" "B26" "B25" "B29" "B27" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  238  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  240  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  242  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] r8|DWORD r9|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore        5
     3: iload         5
     5: iload         4
     7: if_icmpge     33
    10: aload_2       
    11: iload_3       
    12: iinc          
    15: aload_0       
    16: iload_1       
    17: iinc          
    20: baload        
    21: sipush        255
    24: iand          
    25: i2c           
    26: castore       
    27: iinc          
    30: goto          3
    33: return        
   <|@
end_bytecodes
begin_cfg
  name "After LinearScan"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@20983de9 slotKind: QWORD <|@ <|@
      nr   16  <|@ instruction CMPCONSTBRANCH r9|DWORD trueDestinationProbability: 0.027132876049413834 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   20  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] r8|DWORD r9|DWORD - 
>@ <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   22  <|@ instruction r11|DWORD = INC rdx|DWORD size: DWORD <|@ <|@
      nr   24  <|@ instruction rbx|DWORD = DEC r9|DWORD size: DWORD <|@ <|@
      nr   26  <|@ instruction rbx|QWORD = MOV rbx|DWORD size: DWORD <|@ <|@
      nr   28  <|@ instruction rbx|QWORD = DEC rbx|QWORD size: QWORD <|@ <|@
      nr   30  <|@ instruction CMPCONSTBRANCH r9|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B30" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction rdi|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr   36  <|@ instruction rdi|QWORD = ADD (x: rdi|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr   38  <|@ instruction rax|QWORD = MOV r10|DWORD size: DWORD <|@ <|@
      nr   40  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rdi|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B30 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B29" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction JUMP ~[] destination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] r8|DWORD r9|DWORD - 
>@ <|@ instruction rdi|DWORD = MOV [rcx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   58  <|@ instruction rax|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr   60  <|@ instruction CMPCONSTBRANCH r9|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B28" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction rbp|QWORD = MOVSXD rax|DWORD size: QWORD <|@ <|@
      nr   66  <|@ instruction rbp|QWORD = ADD (x: rbp|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr   68  <|@ instruction rbx|QWORD = MOV rdi|DWORD size: DWORD <|@ <|@
      nr   70  <|@ instruction CMPBRANCH (x: rbx|QWORD, y: rbp|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B28 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B27" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction JUMP ~[] destination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" "B11" 
    successors "B13" "B26" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B25" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction r10|DWORD = MOVZXB [rsi|QWORD[.] + rdx|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   96  <|@ instruction MOV (x: [rcx|QWORD[.] + r8|DWORD * 2 + 16], y: r10|DWORD) size: WORD <|@ <|@
      nr   98  <|@ instruction CMP r9|DWORD y: 3 size: DWORD <|@ <|@
      nr  100  <|@ instruction r10|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r9|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  102  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607026540791548873
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  106  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576818467378667813
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction rbx|DWORD = MOVZXB [rsi|QWORD[.] + r8|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  112  <|@ instruction MOV (x: [rcx|QWORD[.] + rax|DWORD * 2 + 16], y: rbx|DWORD) size: WORD <|@ <|@
      nr  114  <|@ instruction r8|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr  116  <|@ instruction rax|DWORD = INC rax|DWORD size: DWORD <|@ <|@
      nr  118  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  120  <|@ instruction JUMP ~[] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction r10|DWORD = LEA [r9|DWORD - 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  126  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B19" 
    successors "B19" "B20" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4616595334800895638
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  130  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.7768831908782481 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4614810349538580443
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  134  <|@ instruction rdi|DWORD = MOVZXB [rsi|QWORD[.] + r11|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  136  <|@ instruction MOV (x: [rcx|QWORD[.] + r8|DWORD * 2 + 16], y: rdi|DWORD) size: WORD <|@ <|@
      nr  138  <|@ instruction rdi|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr  140  <|@ instruction rdx|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr  142  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 17] size: DWORD <|@ <|@
      nr  144  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 18], y: rax|DWORD) size: WORD <|@ <|@
      nr  146  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 18] size: DWORD <|@ <|@
      nr  148  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 20], y: rax|DWORD) size: WORD <|@ <|@
      nr  150  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 19] size: DWORD <|@ <|@
      nr  152  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 22], y: rax|DWORD) size: WORD <|@ <|@
      nr  154  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 20] size: DWORD <|@ <|@
      nr  156  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 24], y: rax|DWORD) size: WORD <|@ <|@
      nr  158  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 21] size: DWORD <|@ <|@
      nr  160  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 26], y: rax|DWORD) size: WORD <|@ <|@
      nr  162  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 22] size: DWORD <|@ <|@
      nr  164  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 28], y: rax|DWORD) size: WORD <|@ <|@
      nr  166  <|@ instruction rdi|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 23] size: DWORD <|@ <|@
      nr  168  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 30], y: rdi|DWORD) size: WORD <|@ <|@
      nr  170  <|@ instruction rbx|DWORD = LEA [rbx|DWORD + 8] size: DWORD <|@ <|@
      nr  172  <|@ instruction r8|DWORD = LEA [r8|DWORD + 8] size: DWORD <|@ <|@
      nr  174  <|@ instruction r11|DWORD = LEA [r11|DWORD + 8] size: DWORD <|@ <|@
      nr  176  <|@ instruction JUMP ~[] destination: B19 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4606938027579086147
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction JUMP ~[] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" 
    successors "B22" "B23" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607026540791548872
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  184  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576818467378667812
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction r10|DWORD = MOVZXB [rsi|QWORD[.] + r11|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  190  <|@ instruction MOV (x: [rcx|QWORD[.] + r8|DWORD * 2 + 16], y: r10|DWORD) size: WORD <|@ <|@
      nr  192  <|@ instruction rbx|DWORD = INC rbx|DWORD size: DWORD <|@ <|@
      nr  194  <|@ instruction r8|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr  196  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  198  <|@ instruction JUMP ~[] destination: B22 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4606938027579086147
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B24" 
    xhandlers
    flags 
    probability 4583477740478224256
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction JUMP ~[] destination: B1 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-22811|0xffffffffffffa6e5] // MoveResolver resolve mapping <|@ <|@
      nr  214  <|@ instruction JUMP ~[] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-16411|0xffffffffffffbfe5] // MoveResolver resolve mapping <|@ <|@
      nr  218  <|@ instruction JUMP ~[] destination: B26 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-20251|0xffffffffffffb0e5] // MoveResolver resolve mapping <|@ <|@
      nr  222  <|@ instruction JUMP ~[] destination: B25 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-25371|0xffffffffffff9ce5] // MoveResolver resolve mapping <|@ <|@
      nr  226  <|@ instruction JUMP ~[] destination: B27 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-25371|0xffffffffffff9ce5] // MoveResolver resolve mapping <|@ <|@
      nr  230  <|@ instruction JUMP ~[] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-22811|0xffffffffffffa6e5] // MoveResolver resolve mapping <|@ <|@
      nr  234  <|@ instruction JUMP ~[] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B28" "B26" "B25" "B29" "B27" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  238  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  240  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  242  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] r8|DWORD r9|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore        5
     3: iload         5
     5: iload         4
     7: if_icmpge     33
    10: aload_2       
    11: iload_3       
    12: iinc          
    15: aload_0       
    16: iload_1       
    17: iinc          
    20: baload        
    21: sipush        255
    24: iand          
    25: i2c           
    26: castore       
    27: iinc          
    30: goto          3
    33: return        
   <|@
end_bytecodes
begin_cfg
  name "After LSStackSlotAllocator"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@20983de9 slotKind: QWORD <|@ <|@
      nr   16  <|@ instruction CMPCONSTBRANCH r9|DWORD trueDestinationProbability: 0.027132876049413834 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   20  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] r8|DWORD r9|DWORD - 
>@ <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   22  <|@ instruction r11|DWORD = INC rdx|DWORD size: DWORD <|@ <|@
      nr   24  <|@ instruction rbx|DWORD = DEC r9|DWORD size: DWORD <|@ <|@
      nr   26  <|@ instruction rbx|QWORD = MOV rbx|DWORD size: DWORD <|@ <|@
      nr   28  <|@ instruction rbx|QWORD = DEC rbx|QWORD size: QWORD <|@ <|@
      nr   30  <|@ instruction CMPCONSTBRANCH r9|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B30" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction rdi|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr   36  <|@ instruction rdi|QWORD = ADD (x: rdi|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr   38  <|@ instruction rax|QWORD = MOV r10|DWORD size: DWORD <|@ <|@
      nr   40  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rdi|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B30 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B29" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction JUMP ~[] destination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] r8|DWORD r9|DWORD - 
>@ <|@ instruction rdi|DWORD = MOV [rcx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   58  <|@ instruction rax|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr   60  <|@ instruction CMPCONSTBRANCH r9|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B28" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction rbp|QWORD = MOVSXD rax|DWORD size: QWORD <|@ <|@
      nr   66  <|@ instruction rbp|QWORD = ADD (x: rbp|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr   68  <|@ instruction rbx|QWORD = MOV rdi|DWORD size: DWORD <|@ <|@
      nr   70  <|@ instruction CMPBRANCH (x: rbx|QWORD, y: rbp|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B28 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B27" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction JUMP ~[] destination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" "B11" 
    successors "B13" "B26" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B25" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction r10|DWORD = MOVZXB [rsi|QWORD[.] + rdx|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   96  <|@ instruction MOV (x: [rcx|QWORD[.] + r8|DWORD * 2 + 16], y: r10|DWORD) size: WORD <|@ <|@
      nr   98  <|@ instruction CMP r9|DWORD y: 3 size: DWORD <|@ <|@
      nr  100  <|@ instruction r10|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r9|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  102  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607026540791548873
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  106  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576818467378667813
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction rbx|DWORD = MOVZXB [rsi|QWORD[.] + r8|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  112  <|@ instruction MOV (x: [rcx|QWORD[.] + rax|DWORD * 2 + 16], y: rbx|DWORD) size: WORD <|@ <|@
      nr  114  <|@ instruction r8|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr  116  <|@ instruction rax|DWORD = INC rax|DWORD size: DWORD <|@ <|@
      nr  118  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  120  <|@ instruction JUMP ~[] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction r10|DWORD = LEA [r9|DWORD - 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  126  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B19" 
    successors "B19" "B20" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4616595334800895638
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  130  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.7768831908782481 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4614810349538580443
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  134  <|@ instruction rdi|DWORD = MOVZXB [rsi|QWORD[.] + r11|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  136  <|@ instruction MOV (x: [rcx|QWORD[.] + r8|DWORD * 2 + 16], y: rdi|DWORD) size: WORD <|@ <|@
      nr  138  <|@ instruction rdi|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr  140  <|@ instruction rdx|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr  142  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 17] size: DWORD <|@ <|@
      nr  144  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 18], y: rax|DWORD) size: WORD <|@ <|@
      nr  146  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 18] size: DWORD <|@ <|@
      nr  148  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 20], y: rax|DWORD) size: WORD <|@ <|@
      nr  150  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 19] size: DWORD <|@ <|@
      nr  152  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 22], y: rax|DWORD) size: WORD <|@ <|@
      nr  154  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 20] size: DWORD <|@ <|@
      nr  156  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 24], y: rax|DWORD) size: WORD <|@ <|@
      nr  158  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 21] size: DWORD <|@ <|@
      nr  160  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 26], y: rax|DWORD) size: WORD <|@ <|@
      nr  162  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 22] size: DWORD <|@ <|@
      nr  164  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 28], y: rax|DWORD) size: WORD <|@ <|@
      nr  166  <|@ instruction rdi|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 23] size: DWORD <|@ <|@
      nr  168  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 30], y: rdi|DWORD) size: WORD <|@ <|@
      nr  170  <|@ instruction rbx|DWORD = LEA [rbx|DWORD + 8] size: DWORD <|@ <|@
      nr  172  <|@ instruction r8|DWORD = LEA [r8|DWORD + 8] size: DWORD <|@ <|@
      nr  174  <|@ instruction r11|DWORD = LEA [r11|DWORD + 8] size: DWORD <|@ <|@
      nr  176  <|@ instruction JUMP ~[] destination: B19 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4606938027579086147
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction JUMP ~[] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" 
    successors "B22" "B23" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607026540791548872
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  184  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576818467378667812
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction r10|DWORD = MOVZXB [rsi|QWORD[.] + r11|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  190  <|@ instruction MOV (x: [rcx|QWORD[.] + r8|DWORD * 2 + 16], y: r10|DWORD) size: WORD <|@ <|@
      nr  192  <|@ instruction rbx|DWORD = INC rbx|DWORD size: DWORD <|@ <|@
      nr  194  <|@ instruction r8|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr  196  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  198  <|@ instruction JUMP ~[] destination: B22 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4606938027579086147
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B24" 
    xhandlers
    flags 
    probability 4583477740478224256
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction JUMP ~[] destination: B1 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-22811|0xffffffffffffa6e5] // MoveResolver resolve mapping <|@ <|@
      nr  214  <|@ instruction JUMP ~[] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-16411|0xffffffffffffbfe5] // MoveResolver resolve mapping <|@ <|@
      nr  218  <|@ instruction JUMP ~[] destination: B26 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-20251|0xffffffffffffb0e5] // MoveResolver resolve mapping <|@ <|@
      nr  222  <|@ instruction JUMP ~[] destination: B25 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-25371|0xffffffffffff9ce5] // MoveResolver resolve mapping <|@ <|@
      nr  226  <|@ instruction JUMP ~[] destination: B27 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-25371|0xffffffffffff9ce5] // MoveResolver resolve mapping <|@ <|@
      nr  230  <|@ instruction JUMP ~[] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-22811|0xffffffffffffa6e5] // MoveResolver resolve mapping <|@ <|@
      nr  234  <|@ instruction JUMP ~[] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B28" "B26" "B25" "B29" "B27" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  238  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  240  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  242  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] r8|DWORD r9|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore        5
     3: iload         5
     5: iload         4
     7: if_icmpge     33
    10: aload_2       
    11: iload_3       
    12: iinc          
    15: aload_0       
    16: iload_1       
    17: iinc          
    20: baload        
    21: sipush        255
    24: iand          
    25: i2c           
    26: castore       
    27: iinc          
    30: goto          3
    33: return        
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@20983de9 slotKind: QWORD <|@ <|@
      nr   16  <|@ instruction CMPCONSTBRANCH r9|DWORD trueDestinationProbability: 0.027132876049413834 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   20  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] r8|DWORD r9|DWORD - 
>@ <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   22  <|@ instruction r11|DWORD = INC rdx|DWORD size: DWORD <|@ <|@
      nr   24  <|@ instruction rbx|DWORD = DEC r9|DWORD size: DWORD <|@ <|@
      nr   26  <|@ instruction rbx|QWORD = MOV rbx|DWORD size: DWORD <|@ <|@
      nr   28  <|@ instruction rbx|QWORD = DEC rbx|QWORD size: QWORD <|@ <|@
      nr   30  <|@ instruction CMPCONSTBRANCH r9|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B30" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction rdi|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr   36  <|@ instruction rdi|QWORD = ADD (x: rdi|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr   38  <|@ instruction rax|QWORD = MOV r10|DWORD size: DWORD <|@ <|@
      nr   40  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rdi|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B30 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B29" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction JUMP ~[] destination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] r8|DWORD r9|DWORD - 
>@ <|@ instruction rdi|DWORD = MOV [rcx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   58  <|@ instruction rax|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr   60  <|@ instruction CMPCONSTBRANCH r9|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B28" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction rbp|QWORD = MOVSXD rax|DWORD size: QWORD <|@ <|@
      nr   66  <|@ instruction rbp|QWORD = ADD (x: rbp|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr   68  <|@ instruction rbx|QWORD = MOV rdi|DWORD size: DWORD <|@ <|@
      nr   70  <|@ instruction CMPBRANCH (x: rbx|QWORD, y: rbp|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B28 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B27" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction JUMP ~[] destination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" "B11" 
    successors "B13" "B26" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B25" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction r10|DWORD = MOVZXB [rsi|QWORD[.] + rdx|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   96  <|@ instruction MOV (x: [rcx|QWORD[.] + r8|DWORD * 2 + 16], y: r10|DWORD) size: WORD <|@ <|@
      nr   98  <|@ instruction CMP r9|DWORD y: 3 size: DWORD <|@ <|@
      nr  100  <|@ instruction r10|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r9|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  102  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607026540791548873
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  106  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576818467378667813
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction rbx|DWORD = MOVZXB [rsi|QWORD[.] + r8|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  112  <|@ instruction MOV (x: [rcx|QWORD[.] + rax|DWORD * 2 + 16], y: rbx|DWORD) size: WORD <|@ <|@
      nr  114  <|@ instruction r8|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr  116  <|@ instruction rax|DWORD = INC rax|DWORD size: DWORD <|@ <|@
      nr  118  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  120  <|@ instruction JUMP ~[] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction r10|DWORD = LEA [r9|DWORD - 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  126  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B19" 
    successors "B19" "B20" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4616595334800895638
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  130  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.7768831908782481 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4614810349538580443
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  134  <|@ instruction rdi|DWORD = MOVZXB [rsi|QWORD[.] + r11|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  136  <|@ instruction MOV (x: [rcx|QWORD[.] + r8|DWORD * 2 + 16], y: rdi|DWORD) size: WORD <|@ <|@
      nr  138  <|@ instruction rdi|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr  140  <|@ instruction rdx|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr  142  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 17] size: DWORD <|@ <|@
      nr  144  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 18], y: rax|DWORD) size: WORD <|@ <|@
      nr  146  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 18] size: DWORD <|@ <|@
      nr  148  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 20], y: rax|DWORD) size: WORD <|@ <|@
      nr  150  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 19] size: DWORD <|@ <|@
      nr  152  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 22], y: rax|DWORD) size: WORD <|@ <|@
      nr  154  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 20] size: DWORD <|@ <|@
      nr  156  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 24], y: rax|DWORD) size: WORD <|@ <|@
      nr  158  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 21] size: DWORD <|@ <|@
      nr  160  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 26], y: rax|DWORD) size: WORD <|@ <|@
      nr  162  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 22] size: DWORD <|@ <|@
      nr  164  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 28], y: rax|DWORD) size: WORD <|@ <|@
      nr  166  <|@ instruction rdi|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 23] size: DWORD <|@ <|@
      nr  168  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 30], y: rdi|DWORD) size: WORD <|@ <|@
      nr  170  <|@ instruction rbx|DWORD = LEA [rbx|DWORD + 8] size: DWORD <|@ <|@
      nr  172  <|@ instruction r8|DWORD = LEA [r8|DWORD + 8] size: DWORD <|@ <|@
      nr  174  <|@ instruction r11|DWORD = LEA [r11|DWORD + 8] size: DWORD <|@ <|@
      nr  176  <|@ instruction JUMP ~[] destination: B19 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4606938027579086147
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction JUMP ~[] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" 
    successors "B22" "B23" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607026540791548872
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  184  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576818467378667812
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction r10|DWORD = MOVZXB [rsi|QWORD[.] + r11|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  190  <|@ instruction MOV (x: [rcx|QWORD[.] + r8|DWORD * 2 + 16], y: r10|DWORD) size: WORD <|@ <|@
      nr  192  <|@ instruction rbx|DWORD = INC rbx|DWORD size: DWORD <|@ <|@
      nr  194  <|@ instruction r8|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr  196  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  198  <|@ instruction JUMP ~[] destination: B22 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4606938027579086147
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B24" 
    xhandlers
    flags 
    probability 4583477740478224256
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction JUMP ~[] destination: B1 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-22811|0xffffffffffffa6e5] // MoveResolver resolve mapping <|@ <|@
      nr  214  <|@ instruction JUMP ~[] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-16411|0xffffffffffffbfe5] // MoveResolver resolve mapping <|@ <|@
      nr  218  <|@ instruction JUMP ~[] destination: B26 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-20251|0xffffffffffffb0e5] // MoveResolver resolve mapping <|@ <|@
      nr  222  <|@ instruction JUMP ~[] destination: B25 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-25371|0xffffffffffff9ce5] // MoveResolver resolve mapping <|@ <|@
      nr  226  <|@ instruction JUMP ~[] destination: B27 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-25371|0xffffffffffff9ce5] // MoveResolver resolve mapping <|@ <|@
      nr  230  <|@ instruction JUMP ~[] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-22811|0xffffffffffffa6e5] // MoveResolver resolve mapping <|@ <|@
      nr  234  <|@ instruction JUMP ~[] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B28" "B26" "B25" "B29" "B27" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  238  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  240  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  242  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] r8|DWORD r9|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore        5
     3: iload         5
     5: iload         4
     7: if_icmpge     33
    10: aload_2       
    11: iload_3       
    12: iinc          
    15: aload_0       
    16: iload_1       
    17: iinc          
    20: baload        
    21: sipush        255
    24: iand          
    25: i2c           
    26: castore       
    27: iinc          
    30: goto          3
    33: return        
   <|@
end_bytecodes
begin_cfg
  name "After EdgeMoveOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@20983de9 slotKind: QWORD <|@ <|@
      nr   16  <|@ instruction CMPCONSTBRANCH r9|DWORD trueDestinationProbability: 0.027132876049413834 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   20  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] r8|DWORD r9|DWORD - 
>@ <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   22  <|@ instruction r11|DWORD = INC rdx|DWORD size: DWORD <|@ <|@
      nr   24  <|@ instruction rbx|DWORD = DEC r9|DWORD size: DWORD <|@ <|@
      nr   26  <|@ instruction rbx|QWORD = MOV rbx|DWORD size: DWORD <|@ <|@
      nr   28  <|@ instruction rbx|QWORD = DEC rbx|QWORD size: QWORD <|@ <|@
      nr   30  <|@ instruction CMPCONSTBRANCH r9|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B30" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction rdi|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr   36  <|@ instruction rdi|QWORD = ADD (x: rdi|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr   38  <|@ instruction rax|QWORD = MOV r10|DWORD size: DWORD <|@ <|@
      nr   40  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rdi|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B30 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B29" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction JUMP ~[] destination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] r8|DWORD r9|DWORD - 
>@ <|@ instruction rdi|DWORD = MOV [rcx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   58  <|@ instruction rax|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr   60  <|@ instruction CMPCONSTBRANCH r9|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B28" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction rbp|QWORD = MOVSXD rax|DWORD size: QWORD <|@ <|@
      nr   66  <|@ instruction rbp|QWORD = ADD (x: rbp|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr   68  <|@ instruction rbx|QWORD = MOV rdi|DWORD size: DWORD <|@ <|@
      nr   70  <|@ instruction CMPBRANCH (x: rbx|QWORD, y: rbp|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B28 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B27" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction JUMP ~[] destination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" "B11" 
    successors "B13" "B26" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B25" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction r10|DWORD = MOVZXB [rsi|QWORD[.] + rdx|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   96  <|@ instruction MOV (x: [rcx|QWORD[.] + r8|DWORD * 2 + 16], y: r10|DWORD) size: WORD <|@ <|@
      nr   98  <|@ instruction CMP r9|DWORD y: 3 size: DWORD <|@ <|@
      nr  100  <|@ instruction r10|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r9|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  102  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607026540791548873
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  106  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576818467378667813
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction rbx|DWORD = MOVZXB [rsi|QWORD[.] + r8|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  112  <|@ instruction MOV (x: [rcx|QWORD[.] + rax|DWORD * 2 + 16], y: rbx|DWORD) size: WORD <|@ <|@
      nr  114  <|@ instruction r8|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr  116  <|@ instruction rax|DWORD = INC rax|DWORD size: DWORD <|@ <|@
      nr  118  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  120  <|@ instruction JUMP ~[] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction r10|DWORD = LEA [r9|DWORD - 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  126  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B19" 
    successors "B19" "B20" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4616595334800895638
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  130  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.7768831908782481 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4614810349538580443
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  134  <|@ instruction rdi|DWORD = MOVZXB [rsi|QWORD[.] + r11|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  136  <|@ instruction MOV (x: [rcx|QWORD[.] + r8|DWORD * 2 + 16], y: rdi|DWORD) size: WORD <|@ <|@
      nr  138  <|@ instruction rdi|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr  140  <|@ instruction rdx|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr  142  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 17] size: DWORD <|@ <|@
      nr  144  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 18], y: rax|DWORD) size: WORD <|@ <|@
      nr  146  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 18] size: DWORD <|@ <|@
      nr  148  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 20], y: rax|DWORD) size: WORD <|@ <|@
      nr  150  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 19] size: DWORD <|@ <|@
      nr  152  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 22], y: rax|DWORD) size: WORD <|@ <|@
      nr  154  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 20] size: DWORD <|@ <|@
      nr  156  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 24], y: rax|DWORD) size: WORD <|@ <|@
      nr  158  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 21] size: DWORD <|@ <|@
      nr  160  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 26], y: rax|DWORD) size: WORD <|@ <|@
      nr  162  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 22] size: DWORD <|@ <|@
      nr  164  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 28], y: rax|DWORD) size: WORD <|@ <|@
      nr  166  <|@ instruction rdi|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 23] size: DWORD <|@ <|@
      nr  168  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 30], y: rdi|DWORD) size: WORD <|@ <|@
      nr  170  <|@ instruction rbx|DWORD = LEA [rbx|DWORD + 8] size: DWORD <|@ <|@
      nr  172  <|@ instruction r8|DWORD = LEA [r8|DWORD + 8] size: DWORD <|@ <|@
      nr  174  <|@ instruction r11|DWORD = LEA [r11|DWORD + 8] size: DWORD <|@ <|@
      nr  176  <|@ instruction JUMP ~[] destination: B19 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4606938027579086147
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction JUMP ~[] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" 
    successors "B22" "B23" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607026540791548872
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  184  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576818467378667812
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction r10|DWORD = MOVZXB [rsi|QWORD[.] + r11|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  190  <|@ instruction MOV (x: [rcx|QWORD[.] + r8|DWORD * 2 + 16], y: r10|DWORD) size: WORD <|@ <|@
      nr  192  <|@ instruction rbx|DWORD = INC rbx|DWORD size: DWORD <|@ <|@
      nr  194  <|@ instruction r8|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr  196  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  198  <|@ instruction JUMP ~[] destination: B22 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4606938027579086147
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B24" 
    xhandlers
    flags 
    probability 4583477740478224256
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction JUMP ~[] destination: B1 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-22811|0xffffffffffffa6e5] // MoveResolver resolve mapping <|@ <|@
      nr  214  <|@ instruction JUMP ~[] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-16411|0xffffffffffffbfe5] // MoveResolver resolve mapping <|@ <|@
      nr  218  <|@ instruction JUMP ~[] destination: B26 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-20251|0xffffffffffffb0e5] // MoveResolver resolve mapping <|@ <|@
      nr  222  <|@ instruction JUMP ~[] destination: B25 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-25371|0xffffffffffff9ce5] // MoveResolver resolve mapping <|@ <|@
      nr  226  <|@ instruction JUMP ~[] destination: B27 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-25371|0xffffffffffff9ce5] // MoveResolver resolve mapping <|@ <|@
      nr  230  <|@ instruction JUMP ~[] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-22811|0xffffffffffffa6e5] // MoveResolver resolve mapping <|@ <|@
      nr  234  <|@ instruction JUMP ~[] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B28" "B26" "B25" "B29" "B27" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  238  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  240  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  242  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] r8|DWORD r9|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore        5
     3: iload         5
     5: iload         4
     7: if_icmpge     33
    10: aload_2       
    11: iload_3       
    12: iinc          
    15: aload_0       
    16: iload_1       
    17: iinc          
    20: baload        
    21: sipush        255
    24: iand          
    25: i2c           
    26: castore       
    27: iinc          
    30: goto          3
    33: return        
   <|@
end_bytecodes
begin_cfg
  name "After RedundantMoveElimination"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@20983de9 slotKind: QWORD <|@ <|@
      nr   16  <|@ instruction CMPCONSTBRANCH r9|DWORD trueDestinationProbability: 0.027132876049413834 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   20  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] r8|DWORD r9|DWORD - 
>@ <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   22  <|@ instruction r11|DWORD = INC rdx|DWORD size: DWORD <|@ <|@
      nr   24  <|@ instruction rbx|DWORD = DEC r9|DWORD size: DWORD <|@ <|@
      nr   26  <|@ instruction rbx|QWORD = MOV rbx|DWORD size: DWORD <|@ <|@
      nr   28  <|@ instruction rbx|QWORD = DEC rbx|QWORD size: QWORD <|@ <|@
      nr   30  <|@ instruction CMPCONSTBRANCH r9|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B30" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction rdi|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr   36  <|@ instruction rdi|QWORD = ADD (x: rdi|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr   38  <|@ instruction rax|QWORD = MOV r10|DWORD size: DWORD <|@ <|@
      nr   40  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rdi|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B30 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B29" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction JUMP ~[] destination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] r8|DWORD r9|DWORD - 
>@ <|@ instruction rdi|DWORD = MOV [rcx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   58  <|@ instruction rax|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr   60  <|@ instruction CMPCONSTBRANCH r9|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B28" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction rbp|QWORD = MOVSXD rax|DWORD size: QWORD <|@ <|@
      nr   66  <|@ instruction rbp|QWORD = ADD (x: rbp|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr   68  <|@ instruction rbx|QWORD = MOV rdi|DWORD size: DWORD <|@ <|@
      nr   70  <|@ instruction CMPBRANCH (x: rbx|QWORD, y: rbp|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B28 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B27" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction JUMP ~[] destination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" "B11" 
    successors "B13" "B26" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B25" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction r10|DWORD = MOVZXB [rsi|QWORD[.] + rdx|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   96  <|@ instruction MOV (x: [rcx|QWORD[.] + r8|DWORD * 2 + 16], y: r10|DWORD) size: WORD <|@ <|@
      nr   98  <|@ instruction CMP r9|DWORD y: 3 size: DWORD <|@ <|@
      nr  100  <|@ instruction r10|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r9|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  102  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607026540791548873
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  106  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576818467378667813
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction rbx|DWORD = MOVZXB [rsi|QWORD[.] + r8|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  112  <|@ instruction MOV (x: [rcx|QWORD[.] + rax|DWORD * 2 + 16], y: rbx|DWORD) size: WORD <|@ <|@
      nr  114  <|@ instruction r8|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr  116  <|@ instruction rax|DWORD = INC rax|DWORD size: DWORD <|@ <|@
      nr  118  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  120  <|@ instruction JUMP ~[] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction r10|DWORD = LEA [r9|DWORD - 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  126  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B19" 
    successors "B19" "B20" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4616595334800895638
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  130  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.7768831908782481 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4614810349538580443
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  134  <|@ instruction rdi|DWORD = MOVZXB [rsi|QWORD[.] + r11|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  136  <|@ instruction MOV (x: [rcx|QWORD[.] + r8|DWORD * 2 + 16], y: rdi|DWORD) size: WORD <|@ <|@
      nr  138  <|@ instruction rdi|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr  140  <|@ instruction rdx|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr  142  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 17] size: DWORD <|@ <|@
      nr  144  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 18], y: rax|DWORD) size: WORD <|@ <|@
      nr  146  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 18] size: DWORD <|@ <|@
      nr  148  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 20], y: rax|DWORD) size: WORD <|@ <|@
      nr  150  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 19] size: DWORD <|@ <|@
      nr  152  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 22], y: rax|DWORD) size: WORD <|@ <|@
      nr  154  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 20] size: DWORD <|@ <|@
      nr  156  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 24], y: rax|DWORD) size: WORD <|@ <|@
      nr  158  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 21] size: DWORD <|@ <|@
      nr  160  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 26], y: rax|DWORD) size: WORD <|@ <|@
      nr  162  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 22] size: DWORD <|@ <|@
      nr  164  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 28], y: rax|DWORD) size: WORD <|@ <|@
      nr  166  <|@ instruction rdi|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 23] size: DWORD <|@ <|@
      nr  168  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 30], y: rdi|DWORD) size: WORD <|@ <|@
      nr  170  <|@ instruction rbx|DWORD = LEA [rbx|DWORD + 8] size: DWORD <|@ <|@
      nr  172  <|@ instruction r8|DWORD = LEA [r8|DWORD + 8] size: DWORD <|@ <|@
      nr  174  <|@ instruction r11|DWORD = LEA [r11|DWORD + 8] size: DWORD <|@ <|@
      nr  176  <|@ instruction JUMP ~[] destination: B19 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4606938027579086147
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction JUMP ~[] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" 
    successors "B22" "B23" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607026540791548872
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  184  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576818467378667812
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction r10|DWORD = MOVZXB [rsi|QWORD[.] + r11|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  190  <|@ instruction MOV (x: [rcx|QWORD[.] + r8|DWORD * 2 + 16], y: r10|DWORD) size: WORD <|@ <|@
      nr  192  <|@ instruction rbx|DWORD = INC rbx|DWORD size: DWORD <|@ <|@
      nr  194  <|@ instruction r8|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr  196  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  198  <|@ instruction JUMP ~[] destination: B22 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4606938027579086147
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B24" 
    xhandlers
    flags 
    probability 4583477740478224256
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction JUMP ~[] destination: B1 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-22811|0xffffffffffffa6e5] // MoveResolver resolve mapping <|@ <|@
      nr  214  <|@ instruction JUMP ~[] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-16411|0xffffffffffffbfe5] // MoveResolver resolve mapping <|@ <|@
      nr  218  <|@ instruction JUMP ~[] destination: B26 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-20251|0xffffffffffffb0e5] // MoveResolver resolve mapping <|@ <|@
      nr  222  <|@ instruction JUMP ~[] destination: B25 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-25371|0xffffffffffff9ce5] // MoveResolver resolve mapping <|@ <|@
      nr  226  <|@ instruction JUMP ~[] destination: B27 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-25371|0xffffffffffff9ce5] // MoveResolver resolve mapping <|@ <|@
      nr  230  <|@ instruction JUMP ~[] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-22811|0xffffffffffffa6e5] // MoveResolver resolve mapping <|@ <|@
      nr  234  <|@ instruction JUMP ~[] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B28" "B26" "B25" "B29" "B27" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  238  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  240  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  242  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] r8|DWORD r9|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore        5
     3: iload         5
     5: iload         4
     7: if_icmpge     33
    10: aload_2       
    11: iload_3       
    12: iinc          
    15: aload_0       
    16: iload_1       
    17: iinc          
    20: baload        
    21: sipush        255
    24: iand          
    25: i2c           
    26: castore       
    27: iinc          
    30: goto          3
    33: return        
   <|@
end_bytecodes
begin_cfg
  name "After NullCheckOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@20983de9 slotKind: QWORD <|@ <|@
      nr   16  <|@ instruction CMPCONSTBRANCH r9|DWORD trueDestinationProbability: 0.027132876049413834 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   20  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] r8|DWORD r9|DWORD - 
>@ <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   22  <|@ instruction r11|DWORD = INC rdx|DWORD size: DWORD <|@ <|@
      nr   24  <|@ instruction rbx|DWORD = DEC r9|DWORD size: DWORD <|@ <|@
      nr   26  <|@ instruction rbx|QWORD = MOV rbx|DWORD size: DWORD <|@ <|@
      nr   28  <|@ instruction rbx|QWORD = DEC rbx|QWORD size: QWORD <|@ <|@
      nr   30  <|@ instruction CMPCONSTBRANCH r9|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B30" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction rdi|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr   36  <|@ instruction rdi|QWORD = ADD (x: rdi|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr   38  <|@ instruction rax|QWORD = MOV r10|DWORD size: DWORD <|@ <|@
      nr   40  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rdi|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B30 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B29" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction JUMP ~[] destination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] r8|DWORD r9|DWORD - 
>@ <|@ instruction rdi|DWORD = MOV [rcx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   58  <|@ instruction rax|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr   60  <|@ instruction CMPCONSTBRANCH r9|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B28" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction rbp|QWORD = MOVSXD rax|DWORD size: QWORD <|@ <|@
      nr   66  <|@ instruction rbp|QWORD = ADD (x: rbp|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr   68  <|@ instruction rbx|QWORD = MOV rdi|DWORD size: DWORD <|@ <|@
      nr   70  <|@ instruction CMPBRANCH (x: rbx|QWORD, y: rbp|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B28 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B27" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction JUMP ~[] destination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" "B11" 
    successors "B13" "B26" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B25" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction r10|DWORD = MOVZXB [rsi|QWORD[.] + rdx|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   96  <|@ instruction MOV (x: [rcx|QWORD[.] + r8|DWORD * 2 + 16], y: r10|DWORD) size: WORD <|@ <|@
      nr   98  <|@ instruction CMP r9|DWORD y: 3 size: DWORD <|@ <|@
      nr  100  <|@ instruction r10|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r9|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  102  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607026540791548873
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  106  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576818467378667813
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction rbx|DWORD = MOVZXB [rsi|QWORD[.] + r8|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  112  <|@ instruction MOV (x: [rcx|QWORD[.] + rax|DWORD * 2 + 16], y: rbx|DWORD) size: WORD <|@ <|@
      nr  114  <|@ instruction r8|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr  116  <|@ instruction rax|DWORD = INC rax|DWORD size: DWORD <|@ <|@
      nr  118  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  120  <|@ instruction JUMP ~[] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction r10|DWORD = LEA [r9|DWORD - 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  126  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B19" 
    successors "B19" "B20" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4616595334800895638
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  130  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.7768831908782481 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4614810349538580443
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  134  <|@ instruction rdi|DWORD = MOVZXB [rsi|QWORD[.] + r11|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  136  <|@ instruction MOV (x: [rcx|QWORD[.] + r8|DWORD * 2 + 16], y: rdi|DWORD) size: WORD <|@ <|@
      nr  138  <|@ instruction rdi|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr  140  <|@ instruction rdx|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr  142  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 17] size: DWORD <|@ <|@
      nr  144  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 18], y: rax|DWORD) size: WORD <|@ <|@
      nr  146  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 18] size: DWORD <|@ <|@
      nr  148  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 20], y: rax|DWORD) size: WORD <|@ <|@
      nr  150  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 19] size: DWORD <|@ <|@
      nr  152  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 22], y: rax|DWORD) size: WORD <|@ <|@
      nr  154  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 20] size: DWORD <|@ <|@
      nr  156  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 24], y: rax|DWORD) size: WORD <|@ <|@
      nr  158  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 21] size: DWORD <|@ <|@
      nr  160  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 26], y: rax|DWORD) size: WORD <|@ <|@
      nr  162  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 22] size: DWORD <|@ <|@
      nr  164  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 28], y: rax|DWORD) size: WORD <|@ <|@
      nr  166  <|@ instruction rdi|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 23] size: DWORD <|@ <|@
      nr  168  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 30], y: rdi|DWORD) size: WORD <|@ <|@
      nr  170  <|@ instruction rbx|DWORD = LEA [rbx|DWORD + 8] size: DWORD <|@ <|@
      nr  172  <|@ instruction r8|DWORD = LEA [r8|DWORD + 8] size: DWORD <|@ <|@
      nr  174  <|@ instruction r11|DWORD = LEA [r11|DWORD + 8] size: DWORD <|@ <|@
      nr  176  <|@ instruction JUMP ~[] destination: B19 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4606938027579086147
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction JUMP ~[] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" 
    successors "B22" "B23" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607026540791548872
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  184  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576818467378667812
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction r10|DWORD = MOVZXB [rsi|QWORD[.] + r11|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  190  <|@ instruction MOV (x: [rcx|QWORD[.] + r8|DWORD * 2 + 16], y: r10|DWORD) size: WORD <|@ <|@
      nr  192  <|@ instruction rbx|DWORD = INC rbx|DWORD size: DWORD <|@ <|@
      nr  194  <|@ instruction r8|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr  196  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  198  <|@ instruction JUMP ~[] destination: B22 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4606938027579086147
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B24" 
    xhandlers
    flags 
    probability 4583477740478224256
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction JUMP ~[] destination: B1 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-22811|0xffffffffffffa6e5] // MoveResolver resolve mapping <|@ <|@
      nr  214  <|@ instruction JUMP ~[] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-16411|0xffffffffffffbfe5] // MoveResolver resolve mapping <|@ <|@
      nr  218  <|@ instruction JUMP ~[] destination: B26 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-20251|0xffffffffffffb0e5] // MoveResolver resolve mapping <|@ <|@
      nr  222  <|@ instruction JUMP ~[] destination: B25 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-25371|0xffffffffffff9ce5] // MoveResolver resolve mapping <|@ <|@
      nr  226  <|@ instruction JUMP ~[] destination: B27 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-25371|0xffffffffffff9ce5] // MoveResolver resolve mapping <|@ <|@
      nr  230  <|@ instruction JUMP ~[] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-22811|0xffffffffffffa6e5] // MoveResolver resolve mapping <|@ <|@
      nr  234  <|@ instruction JUMP ~[] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B28" "B26" "B25" "B29" "B27" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  238  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  240  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  242  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] r8|DWORD r9|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore        5
     3: iload         5
     5: iload         4
     7: if_icmpge     33
    10: aload_2       
    11: iload_3       
    12: iinc          
    15: aload_0       
    16: iload_1       
    17: iinc          
    20: baload        
    21: sipush        255
    24: iand          
    25: i2c           
    26: castore       
    27: iinc          
    30: goto          3
    33: return        
   <|@
end_bytecodes
begin_cfg
  name "After ControlFlowOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B24" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@20983de9 slotKind: QWORD <|@ <|@
      nr   16  <|@ instruction CMPCONSTBRANCH r9|DWORD trueDestinationProbability: 0.027132876049413834 condition: < trueDestination: B0 -> B24 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" "B4" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   20  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] r8|DWORD r9|DWORD - 
>@ <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   22  <|@ instruction r11|DWORD = INC rdx|DWORD size: DWORD <|@ <|@
      nr   24  <|@ instruction rbx|DWORD = DEC r9|DWORD size: DWORD <|@ <|@
      nr   26  <|@ instruction rbx|QWORD = MOV rbx|DWORD size: DWORD <|@ <|@
      nr   28  <|@ instruction rbx|QWORD = DEC rbx|QWORD size: QWORD <|@ <|@
      nr   30  <|@ instruction CMPCONSTBRANCH r9|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B7 falseDestination: B2 -> B4 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B30" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction rdi|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr   36  <|@ instruction rdi|QWORD = ADD (x: rdi|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr   38  <|@ instruction rax|QWORD = MOV r10|DWORD size: DWORD <|@ <|@
      nr   40  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rdi|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B30 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B29" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B7 falseDestination: B5 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" "B5" 
    successors "B12" "B9" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] r8|DWORD r9|DWORD - 
>@ <|@ instruction rdi|DWORD = MOV [rcx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   58  <|@ instruction rax|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr   60  <|@ instruction CMPCONSTBRANCH r9|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B7 -> B12 falseDestination: B7 -> B9 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B28" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction rbp|QWORD = MOVSXD rax|DWORD size: QWORD <|@ <|@
      nr   66  <|@ instruction rbp|QWORD = ADD (x: rbp|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr   68  <|@ instruction rbx|QWORD = MOV rdi|DWORD size: DWORD <|@ <|@
      nr   70  <|@ instruction CMPBRANCH (x: rbx|QWORD, y: rbp|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B28 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B27" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B10 -> B12 falseDestination: B10 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B7" "B10" 
    successors "B13" "B26" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B25" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction r10|DWORD = MOVZXB [rsi|QWORD[.] + rdx|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   96  <|@ instruction MOV (x: [rcx|QWORD[.] + r8|DWORD * 2 + 16], y: r10|DWORD) size: WORD <|@ <|@
      nr   98  <|@ instruction CMP r9|DWORD y: 3 size: DWORD <|@ <|@
      nr  100  <|@ instruction r10|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r9|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  102  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607026540791548873
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  106  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576818467378667813
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction rbx|DWORD = MOVZXB [rsi|QWORD[.] + r8|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  112  <|@ instruction MOV (x: [rcx|QWORD[.] + rax|DWORD * 2 + 16], y: rbx|DWORD) size: WORD <|@ <|@
      nr  114  <|@ instruction r8|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr  116  <|@ instruction rax|DWORD = INC rax|DWORD size: DWORD <|@ <|@
      nr  118  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  120  <|@ instruction JUMP ~[] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction r10|DWORD = LEA [r9|DWORD - 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  126  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B19" 
    successors "B19" "B21" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4616595334800895638
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  130  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.7768831908782481 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4614810349538580443
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  134  <|@ instruction rdi|DWORD = MOVZXB [rsi|QWORD[.] + r11|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  136  <|@ instruction MOV (x: [rcx|QWORD[.] + r8|DWORD * 2 + 16], y: rdi|DWORD) size: WORD <|@ <|@
      nr  138  <|@ instruction rdi|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr  140  <|@ instruction rdx|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr  142  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 17] size: DWORD <|@ <|@
      nr  144  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 18], y: rax|DWORD) size: WORD <|@ <|@
      nr  146  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 18] size: DWORD <|@ <|@
      nr  148  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 20], y: rax|DWORD) size: WORD <|@ <|@
      nr  150  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 19] size: DWORD <|@ <|@
      nr  152  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 22], y: rax|DWORD) size: WORD <|@ <|@
      nr  154  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 20] size: DWORD <|@ <|@
      nr  156  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 24], y: rax|DWORD) size: WORD <|@ <|@
      nr  158  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 21] size: DWORD <|@ <|@
      nr  160  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 26], y: rax|DWORD) size: WORD <|@ <|@
      nr  162  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 22] size: DWORD <|@ <|@
      nr  164  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 28], y: rax|DWORD) size: WORD <|@ <|@
      nr  166  <|@ instruction rdi|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 23] size: DWORD <|@ <|@
      nr  168  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 30], y: rdi|DWORD) size: WORD <|@ <|@
      nr  170  <|@ instruction rbx|DWORD = LEA [rbx|DWORD + 8] size: DWORD <|@ <|@
      nr  172  <|@ instruction r8|DWORD = LEA [r8|DWORD + 8] size: DWORD <|@ <|@
      nr  174  <|@ instruction r11|DWORD = LEA [r11|DWORD + 8] size: DWORD <|@ <|@
      nr  176  <|@ instruction JUMP ~[] destination: B19 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B18" "B22" 
    successors "B22" "B24" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607026540791548872
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  184  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576818467378667812
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction r10|DWORD = MOVZXB [rsi|QWORD[.] + r11|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  190  <|@ instruction MOV (x: [rcx|QWORD[.] + r8|DWORD * 2 + 16], y: r10|DWORD) size: WORD <|@ <|@
      nr  192  <|@ instruction rbx|DWORD = INC rbx|DWORD size: DWORD <|@ <|@
      nr  194  <|@ instruction r8|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr  196  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  198  <|@ instruction JUMP ~[] destination: B22 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B21" "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-22811|0xffffffffffffa6e5] // MoveResolver resolve mapping <|@ <|@
      nr  214  <|@ instruction JUMP ~[] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-16411|0xffffffffffffbfe5] // MoveResolver resolve mapping <|@ <|@
      nr  218  <|@ instruction JUMP ~[] destination: B26 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-20251|0xffffffffffffb0e5] // MoveResolver resolve mapping <|@ <|@
      nr  222  <|@ instruction JUMP ~[] destination: B25 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-25371|0xffffffffffff9ce5] // MoveResolver resolve mapping <|@ <|@
      nr  226  <|@ instruction JUMP ~[] destination: B27 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-25371|0xffffffffffff9ce5] // MoveResolver resolve mapping <|@ <|@
      nr  230  <|@ instruction JUMP ~[] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-22811|0xffffffffffffa6e5] // MoveResolver resolve mapping <|@ <|@
      nr  234  <|@ instruction JUMP ~[] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B28" "B26" "B25" "B29" "B27" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  238  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  240  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  242  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] r8|DWORD r9|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore        5
     3: iload         5
     5: iload         4
     7: if_icmpge     33
    10: aload_2       
    11: iload_3       
    12: iinc          
    15: aload_0       
    16: iload_1       
    17: iinc          
    20: baload        
    21: sipush        255
    24: iand          
    25: i2c           
    26: castore       
    27: iinc          
    30: goto          3
    33: return        
   <|@
end_bytecodes
begin_cfg
  name "After ComputeCodeEmissionOrder"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B24" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@20983de9 slotKind: QWORD <|@ <|@
      nr   16  <|@ instruction CMPCONSTBRANCH r9|DWORD trueDestinationProbability: 0.027132876049413834 condition: < trueDestination: B0 -> B24 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" "B4" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   20  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] r8|DWORD r9|DWORD - 
>@ <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   22  <|@ instruction r11|DWORD = INC rdx|DWORD size: DWORD <|@ <|@
      nr   24  <|@ instruction rbx|DWORD = DEC r9|DWORD size: DWORD <|@ <|@
      nr   26  <|@ instruction rbx|QWORD = MOV rbx|DWORD size: DWORD <|@ <|@
      nr   28  <|@ instruction rbx|QWORD = DEC rbx|QWORD size: QWORD <|@ <|@
      nr   30  <|@ instruction CMPCONSTBRANCH r9|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B7 falseDestination: B2 -> B4 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B30" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction rdi|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr   36  <|@ instruction rdi|QWORD = ADD (x: rdi|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr   38  <|@ instruction rax|QWORD = MOV r10|DWORD size: DWORD <|@ <|@
      nr   40  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rdi|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B30 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B29" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B7 falseDestination: B5 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" "B5" 
    successors "B12" "B9" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] r8|DWORD r9|DWORD - 
>@ <|@ instruction rdi|DWORD = MOV [rcx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   58  <|@ instruction rax|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr   60  <|@ instruction CMPCONSTBRANCH r9|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B7 -> B12 falseDestination: B7 -> B9 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B28" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction rbp|QWORD = MOVSXD rax|DWORD size: QWORD <|@ <|@
      nr   66  <|@ instruction rbp|QWORD = ADD (x: rbp|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr   68  <|@ instruction rbx|QWORD = MOV rdi|DWORD size: DWORD <|@ <|@
      nr   70  <|@ instruction CMPBRANCH (x: rbx|QWORD, y: rbp|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B28 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B27" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B10 -> B12 falseDestination: B10 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B7" "B10" 
    successors "B13" "B26" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B25" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction r10|DWORD = MOVZXB [rsi|QWORD[.] + rdx|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   96  <|@ instruction MOV (x: [rcx|QWORD[.] + r8|DWORD * 2 + 16], y: r10|DWORD) size: WORD <|@ <|@
      nr   98  <|@ instruction CMP r9|DWORD y: 3 size: DWORD <|@ <|@
      nr  100  <|@ instruction r10|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r9|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  102  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576818467378667813
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction rbx|DWORD = MOVZXB [rsi|QWORD[.] + r8|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  112  <|@ instruction MOV (x: [rcx|QWORD[.] + rax|DWORD * 2 + 16], y: rbx|DWORD) size: WORD <|@ <|@
      nr  114  <|@ instruction r8|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr  116  <|@ instruction rax|DWORD = INC rax|DWORD size: DWORD <|@ <|@
      nr  118  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  120  <|@ instruction JUMP ~[] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607026540791548873
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  106  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B21" "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction r10|DWORD = LEA [r9|DWORD - 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  126  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4614810349538580443
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  134  <|@ instruction rdi|DWORD = MOVZXB [rsi|QWORD[.] + r11|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  136  <|@ instruction MOV (x: [rcx|QWORD[.] + r8|DWORD * 2 + 16], y: rdi|DWORD) size: WORD <|@ <|@
      nr  138  <|@ instruction rdi|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr  140  <|@ instruction rdx|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr  142  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 17] size: DWORD <|@ <|@
      nr  144  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 18], y: rax|DWORD) size: WORD <|@ <|@
      nr  146  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 18] size: DWORD <|@ <|@
      nr  148  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 20], y: rax|DWORD) size: WORD <|@ <|@
      nr  150  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 19] size: DWORD <|@ <|@
      nr  152  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 22], y: rax|DWORD) size: WORD <|@ <|@
      nr  154  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 20] size: DWORD <|@ <|@
      nr  156  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 24], y: rax|DWORD) size: WORD <|@ <|@
      nr  158  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 21] size: DWORD <|@ <|@
      nr  160  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 26], y: rax|DWORD) size: WORD <|@ <|@
      nr  162  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 22] size: DWORD <|@ <|@
      nr  164  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 28], y: rax|DWORD) size: WORD <|@ <|@
      nr  166  <|@ instruction rdi|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 23] size: DWORD <|@ <|@
      nr  168  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 30], y: rdi|DWORD) size: WORD <|@ <|@
      nr  170  <|@ instruction rbx|DWORD = LEA [rbx|DWORD + 8] size: DWORD <|@ <|@
      nr  172  <|@ instruction r8|DWORD = LEA [r8|DWORD + 8] size: DWORD <|@ <|@
      nr  174  <|@ instruction r11|DWORD = LEA [r11|DWORD + 8] size: DWORD <|@ <|@
      nr  176  <|@ instruction JUMP ~[] destination: B19 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B19" 
    successors "B19" "B21" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4616595334800895638
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  130  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.7768831908782481 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576818467378667812
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction r10|DWORD = MOVZXB [rsi|QWORD[.] + r11|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  190  <|@ instruction MOV (x: [rcx|QWORD[.] + r8|DWORD * 2 + 16], y: r10|DWORD) size: WORD <|@ <|@
      nr  192  <|@ instruction rbx|DWORD = INC rbx|DWORD size: DWORD <|@ <|@
      nr  194  <|@ instruction r8|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr  196  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  198  <|@ instruction JUMP ~[] destination: B22 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B18" "B22" 
    successors "B22" "B24" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607026540791548872
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 16 numbPhis: 3 label: ? <|@ <|@
      nr  184  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-22811|0xffffffffffffa6e5] // MoveResolver resolve mapping <|@ <|@
      nr  214  <|@ instruction JUMP ~[] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B28" "B26" "B25" "B29" "B27" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  238  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  240  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  242  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] r8|DWORD r9|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-25371|0xffffffffffff9ce5] // MoveResolver resolve mapping <|@ <|@
      nr  226  <|@ instruction JUMP ~[] destination: B27 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-25371|0xffffffffffff9ce5] // MoveResolver resolve mapping <|@ <|@
      nr  230  <|@ instruction JUMP ~[] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-16411|0xffffffffffffbfe5] // MoveResolver resolve mapping <|@ <|@
      nr  218  <|@ instruction JUMP ~[] destination: B26 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-20251|0xffffffffffffb0e5] // MoveResolver resolve mapping <|@ <|@
      nr  222  <|@ instruction JUMP ~[] destination: B25 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-22811|0xffffffffffffa6e5] // MoveResolver resolve mapping <|@ <|@
      nr  234  <|@ instruction JUMP ~[] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore        5
     3: iload         5
     5: iload         4
     7: if_icmpge     33
    10: aload_2       
    11: iload_3       
    12: iinc          
    15: aload_0       
    16: iload_1       
    17: iinc          
    20: baload        
    21: sipush        255
    24: iand          
    25: i2c           
    26: castore       
    27: iinc          
    30: goto          3
    33: return        
   <|@
end_bytecodes
begin_cfg
  name "After StackMoveOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B24" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@20983de9 slotKind: QWORD <|@ <|@
      nr   16  <|@ instruction CMPCONSTBRANCH r9|DWORD trueDestinationProbability: 0.027132876049413834 condition: < trueDestination: B0 -> B24 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" "B4" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   20  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] r8|DWORD r9|DWORD - 
>@ <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   22  <|@ instruction r11|DWORD = INC rdx|DWORD size: DWORD <|@ <|@
      nr   24  <|@ instruction rbx|DWORD = DEC r9|DWORD size: DWORD <|@ <|@
      nr   26  <|@ instruction rbx|QWORD = MOV rbx|DWORD size: DWORD <|@ <|@
      nr   28  <|@ instruction rbx|QWORD = DEC rbx|QWORD size: QWORD <|@ <|@
      nr   30  <|@ instruction CMPCONSTBRANCH r9|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B7 falseDestination: B2 -> B4 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B30" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction rdi|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr   36  <|@ instruction rdi|QWORD = ADD (x: rdi|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr   38  <|@ instruction rax|QWORD = MOV r10|DWORD size: DWORD <|@ <|@
      nr   40  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rdi|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B30 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B29" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B7 falseDestination: B5 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" "B5" 
    successors "B12" "B9" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] r8|DWORD r9|DWORD - 
>@ <|@ instruction rdi|DWORD = MOV [rcx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   58  <|@ instruction rax|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr   60  <|@ instruction CMPCONSTBRANCH r9|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B7 -> B12 falseDestination: B7 -> B9 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B28" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction rbp|QWORD = MOVSXD rax|DWORD size: QWORD <|@ <|@
      nr   66  <|@ instruction rbp|QWORD = ADD (x: rbp|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr   68  <|@ instruction rbx|QWORD = MOV rdi|DWORD size: DWORD <|@ <|@
      nr   70  <|@ instruction CMPBRANCH (x: rbx|QWORD, y: rbp|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B28 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B27" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B10 -> B12 falseDestination: B10 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B7" "B10" 
    successors "B13" "B26" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B25" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction r10|DWORD = MOVZXB [rsi|QWORD[.] + rdx|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   96  <|@ instruction MOV (x: [rcx|QWORD[.] + r8|DWORD * 2 + 16], y: r10|DWORD) size: WORD <|@ <|@
      nr   98  <|@ instruction CMP r9|DWORD y: 3 size: DWORD <|@ <|@
      nr  100  <|@ instruction r10|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r9|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  102  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576818467378667813
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction rbx|DWORD = MOVZXB [rsi|QWORD[.] + r8|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  112  <|@ instruction MOV (x: [rcx|QWORD[.] + rax|DWORD * 2 + 16], y: rbx|DWORD) size: WORD <|@ <|@
      nr  114  <|@ instruction r8|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr  116  <|@ instruction rax|DWORD = INC rax|DWORD size: DWORD <|@ <|@
      nr  118  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  120  <|@ instruction JUMP ~[] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607026540791548873
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  106  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B21" "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction r10|DWORD = LEA [r9|DWORD - 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  126  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4614810349538580443
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  134  <|@ instruction rdi|DWORD = MOVZXB [rsi|QWORD[.] + r11|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  136  <|@ instruction MOV (x: [rcx|QWORD[.] + r8|DWORD * 2 + 16], y: rdi|DWORD) size: WORD <|@ <|@
      nr  138  <|@ instruction rdi|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr  140  <|@ instruction rdx|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr  142  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 17] size: DWORD <|@ <|@
      nr  144  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 18], y: rax|DWORD) size: WORD <|@ <|@
      nr  146  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 18] size: DWORD <|@ <|@
      nr  148  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 20], y: rax|DWORD) size: WORD <|@ <|@
      nr  150  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 19] size: DWORD <|@ <|@
      nr  152  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 22], y: rax|DWORD) size: WORD <|@ <|@
      nr  154  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 20] size: DWORD <|@ <|@
      nr  156  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 24], y: rax|DWORD) size: WORD <|@ <|@
      nr  158  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 21] size: DWORD <|@ <|@
      nr  160  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 26], y: rax|DWORD) size: WORD <|@ <|@
      nr  162  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 22] size: DWORD <|@ <|@
      nr  164  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 28], y: rax|DWORD) size: WORD <|@ <|@
      nr  166  <|@ instruction rdi|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 23] size: DWORD <|@ <|@
      nr  168  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 30], y: rdi|DWORD) size: WORD <|@ <|@
      nr  170  <|@ instruction rbx|DWORD = LEA [rbx|DWORD + 8] size: DWORD <|@ <|@
      nr  172  <|@ instruction r8|DWORD = LEA [r8|DWORD + 8] size: DWORD <|@ <|@
      nr  174  <|@ instruction r11|DWORD = LEA [r11|DWORD + 8] size: DWORD <|@ <|@
      nr  176  <|@ instruction JUMP ~[] destination: B19 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B19" 
    successors "B19" "B21" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4616595334800895638
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  130  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.7768831908782481 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576818467378667812
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction r10|DWORD = MOVZXB [rsi|QWORD[.] + r11|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  190  <|@ instruction MOV (x: [rcx|QWORD[.] + r8|DWORD * 2 + 16], y: r10|DWORD) size: WORD <|@ <|@
      nr  192  <|@ instruction rbx|DWORD = INC rbx|DWORD size: DWORD <|@ <|@
      nr  194  <|@ instruction r8|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr  196  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  198  <|@ instruction JUMP ~[] destination: B22 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B18" "B22" 
    successors "B22" "B24" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607026540791548872
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 16 numbPhis: 3 label: ? <|@ <|@
      nr  184  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-22811|0xffffffffffffa6e5] // MoveResolver resolve mapping <|@ <|@
      nr  214  <|@ instruction JUMP ~[] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B28" "B26" "B25" "B29" "B27" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  238  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  240  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  242  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] r8|DWORD r9|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-25371|0xffffffffffff9ce5] // MoveResolver resolve mapping <|@ <|@
      nr  226  <|@ instruction JUMP ~[] destination: B27 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-25371|0xffffffffffff9ce5] // MoveResolver resolve mapping <|@ <|@
      nr  230  <|@ instruction JUMP ~[] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-16411|0xffffffffffffbfe5] // MoveResolver resolve mapping <|@ <|@
      nr  218  <|@ instruction JUMP ~[] destination: B26 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-20251|0xffffffffffffb0e5] // MoveResolver resolve mapping <|@ <|@
      nr  222  <|@ instruction JUMP ~[] destination: B25 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-22811|0xffffffffffffa6e5] // MoveResolver resolve mapping <|@ <|@
      nr  234  <|@ instruction JUMP ~[] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore        5
     3: iload         5
     5: iload         4
     7: if_icmpge     33
    10: aload_2       
    11: iload_3       
    12: iinc          
    15: aload_0       
    16: iload_1       
    17: iinc          
    20: baload        
    21: sipush        255
    24: iand          
    25: i2c           
    26: castore       
    27: iinc          
    30: goto          3
    33: return        
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B24" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@20983de9 slotKind: QWORD <|@ <|@
      nr   16  <|@ instruction CMPCONSTBRANCH r9|DWORD trueDestinationProbability: 0.027132876049413834 condition: < trueDestination: B0 -> B24 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" "B4" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   20  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] r8|DWORD r9|DWORD - 
>@ <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   22  <|@ instruction r11|DWORD = INC rdx|DWORD size: DWORD <|@ <|@
      nr   24  <|@ instruction rbx|DWORD = DEC r9|DWORD size: DWORD <|@ <|@
      nr   26  <|@ instruction rbx|QWORD = MOV rbx|DWORD size: DWORD <|@ <|@
      nr   28  <|@ instruction rbx|QWORD = DEC rbx|QWORD size: QWORD <|@ <|@
      nr   30  <|@ instruction CMPCONSTBRANCH r9|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B7 falseDestination: B2 -> B4 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B30" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction rdi|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr   36  <|@ instruction rdi|QWORD = ADD (x: rdi|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr   38  <|@ instruction rax|QWORD = MOV r10|DWORD size: DWORD <|@ <|@
      nr   40  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rdi|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B30 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B29" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B7 falseDestination: B5 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" "B5" 
    successors "B12" "B9" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] r8|DWORD r9|DWORD - 
>@ <|@ instruction rdi|DWORD = MOV [rcx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   58  <|@ instruction rax|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr   60  <|@ instruction CMPCONSTBRANCH r9|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B7 -> B12 falseDestination: B7 -> B9 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B28" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction rbp|QWORD = MOVSXD rax|DWORD size: QWORD <|@ <|@
      nr   66  <|@ instruction rbp|QWORD = ADD (x: rbp|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr   68  <|@ instruction rbx|QWORD = MOV rdi|DWORD size: DWORD <|@ <|@
      nr   70  <|@ instruction CMPBRANCH (x: rbx|QWORD, y: rbp|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B28 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B27" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B10 -> B12 falseDestination: B10 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B7" "B10" 
    successors "B13" "B26" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B25" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction r10|DWORD = MOVZXB [rsi|QWORD[.] + rdx|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   96  <|@ instruction MOV (x: [rcx|QWORD[.] + r8|DWORD * 2 + 16], y: r10|DWORD) size: WORD <|@ <|@
      nr   98  <|@ instruction CMP r9|DWORD y: 3 size: DWORD <|@ <|@
      nr  100  <|@ instruction r10|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r9|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  102  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576818467378667813
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction rbx|DWORD = MOVZXB [rsi|QWORD[.] + r8|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  112  <|@ instruction MOV (x: [rcx|QWORD[.] + rax|DWORD * 2 + 16], y: rbx|DWORD) size: WORD <|@ <|@
      nr  114  <|@ instruction r8|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr  116  <|@ instruction rax|DWORD = INC rax|DWORD size: DWORD <|@ <|@
      nr  118  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  120  <|@ instruction JUMP ~[] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607026540791548873
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  106  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B21" "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction r10|DWORD = LEA [r9|DWORD - 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  126  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4614810349538580443
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  134  <|@ instruction rdi|DWORD = MOVZXB [rsi|QWORD[.] + r11|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  136  <|@ instruction MOV (x: [rcx|QWORD[.] + r8|DWORD * 2 + 16], y: rdi|DWORD) size: WORD <|@ <|@
      nr  138  <|@ instruction rdi|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr  140  <|@ instruction rdx|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr  142  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 17] size: DWORD <|@ <|@
      nr  144  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 18], y: rax|DWORD) size: WORD <|@ <|@
      nr  146  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 18] size: DWORD <|@ <|@
      nr  148  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 20], y: rax|DWORD) size: WORD <|@ <|@
      nr  150  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 19] size: DWORD <|@ <|@
      nr  152  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 22], y: rax|DWORD) size: WORD <|@ <|@
      nr  154  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 20] size: DWORD <|@ <|@
      nr  156  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 24], y: rax|DWORD) size: WORD <|@ <|@
      nr  158  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 21] size: DWORD <|@ <|@
      nr  160  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 26], y: rax|DWORD) size: WORD <|@ <|@
      nr  162  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 22] size: DWORD <|@ <|@
      nr  164  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 28], y: rax|DWORD) size: WORD <|@ <|@
      nr  166  <|@ instruction rdi|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 23] size: DWORD <|@ <|@
      nr  168  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 30], y: rdi|DWORD) size: WORD <|@ <|@
      nr  170  <|@ instruction rbx|DWORD = LEA [rbx|DWORD + 8] size: DWORD <|@ <|@
      nr  172  <|@ instruction r8|DWORD = LEA [r8|DWORD + 8] size: DWORD <|@ <|@
      nr  174  <|@ instruction r11|DWORD = LEA [r11|DWORD + 8] size: DWORD <|@ <|@
      nr  176  <|@ instruction JUMP ~[] destination: B19 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B19" 
    successors "B19" "B21" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4616595334800895638
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  130  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.7768831908782481 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576818467378667812
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction r10|DWORD = MOVZXB [rsi|QWORD[.] + r11|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  190  <|@ instruction MOV (x: [rcx|QWORD[.] + r8|DWORD * 2 + 16], y: r10|DWORD) size: WORD <|@ <|@
      nr  192  <|@ instruction rbx|DWORD = INC rbx|DWORD size: DWORD <|@ <|@
      nr  194  <|@ instruction r8|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr  196  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  198  <|@ instruction JUMP ~[] destination: B22 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B18" "B22" 
    successors "B22" "B24" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607026540791548872
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 16 numbPhis: 3 label: ? <|@ <|@
      nr  184  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-22811|0xffffffffffffa6e5] // MoveResolver resolve mapping <|@ <|@
      nr  214  <|@ instruction JUMP ~[] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B28" "B26" "B25" "B29" "B27" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  238  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  240  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  242  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] r8|DWORD r9|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-25371|0xffffffffffff9ce5] // MoveResolver resolve mapping <|@ <|@
      nr  226  <|@ instruction JUMP ~[] destination: B27 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-25371|0xffffffffffff9ce5] // MoveResolver resolve mapping <|@ <|@
      nr  230  <|@ instruction JUMP ~[] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-16411|0xffffffffffffbfe5] // MoveResolver resolve mapping <|@ <|@
      nr  218  <|@ instruction JUMP ~[] destination: B26 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-20251|0xffffffffffffb0e5] // MoveResolver resolve mapping <|@ <|@
      nr  222  <|@ instruction JUMP ~[] destination: B25 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-22811|0xffffffffffffa6e5] // MoveResolver resolve mapping <|@ <|@
      nr  234  <|@ instruction JUMP ~[] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore        5
     3: iload         5
     5: iload         4
     7: if_icmpge     33
    10: aload_2       
    11: iload_3       
    12: iinc          
    15: aload_0       
    16: iload_1       
    17: iinc          
    20: baload        
    21: sipush        255
    24: iand          
    25: i2c           
    26: castore       
    27: iinc          
    30: goto          3
    33: return        
   <|@
end_bytecodes
begin_cfg
  name "After LocationMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B24" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@20983de9 slotKind: QWORD <|@ <|@
      nr   16  <|@ instruction CMPCONSTBRANCH r9|DWORD trueDestinationProbability: 0.027132876049413834 condition: < trueDestination: B0 -> B24 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" "B4" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   20  <|@ st <@st|@reference-map: [rcx:0, rsi:0]
live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] r8|DWORD r9|DWORD - 
>@ <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   22  <|@ instruction r11|DWORD = INC rdx|DWORD size: DWORD <|@ <|@
      nr   24  <|@ instruction rbx|DWORD = DEC r9|DWORD size: DWORD <|@ <|@
      nr   26  <|@ instruction rbx|QWORD = MOV rbx|DWORD size: DWORD <|@ <|@
      nr   28  <|@ instruction rbx|QWORD = DEC rbx|QWORD size: QWORD <|@ <|@
      nr   30  <|@ instruction CMPCONSTBRANCH r9|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B7 falseDestination: B2 -> B4 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B30" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction rdi|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr   36  <|@ instruction rdi|QWORD = ADD (x: rdi|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr   38  <|@ instruction rax|QWORD = MOV r10|DWORD size: DWORD <|@ <|@
      nr   40  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rdi|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B30 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B29" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B7 falseDestination: B5 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" "B5" 
    successors "B12" "B9" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ st <@st|@reference-map: [rcx:0, rsi:0]
live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] r8|DWORD r9|DWORD - 
>@ <|@ instruction rdi|DWORD = MOV [rcx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   58  <|@ instruction rax|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr   60  <|@ instruction CMPCONSTBRANCH r9|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B7 -> B12 falseDestination: B7 -> B9 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B28" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction rbp|QWORD = MOVSXD rax|DWORD size: QWORD <|@ <|@
      nr   66  <|@ instruction rbp|QWORD = ADD (x: rbp|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr   68  <|@ instruction rbx|QWORD = MOV rdi|DWORD size: DWORD <|@ <|@
      nr   70  <|@ instruction CMPBRANCH (x: rbx|QWORD, y: rbp|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B28 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B27" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B10 -> B12 falseDestination: B10 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B7" "B10" 
    successors "B13" "B26" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B25" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction r10|DWORD = MOVZXB [rsi|QWORD[.] + rdx|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   96  <|@ instruction MOV (x: [rcx|QWORD[.] + r8|DWORD * 2 + 16], y: r10|DWORD) size: WORD <|@ <|@
      nr   98  <|@ instruction CMP r9|DWORD y: 3 size: DWORD <|@ <|@
      nr  100  <|@ instruction r10|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r9|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  102  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576818467378667813
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction rbx|DWORD = MOVZXB [rsi|QWORD[.] + r8|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  112  <|@ instruction MOV (x: [rcx|QWORD[.] + rax|DWORD * 2 + 16], y: rbx|DWORD) size: WORD <|@ <|@
      nr  114  <|@ instruction r8|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr  116  <|@ instruction rax|DWORD = INC rax|DWORD size: DWORD <|@ <|@
      nr  118  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  120  <|@ instruction JUMP ~[] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607026540791548873
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  106  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B21" "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction r10|DWORD = LEA [r9|DWORD - 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  126  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4614810349538580443
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  134  <|@ instruction rdi|DWORD = MOVZXB [rsi|QWORD[.] + r11|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  136  <|@ instruction MOV (x: [rcx|QWORD[.] + r8|DWORD * 2 + 16], y: rdi|DWORD) size: WORD <|@ <|@
      nr  138  <|@ instruction rdi|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr  140  <|@ instruction rdx|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr  142  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 17] size: DWORD <|@ <|@
      nr  144  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 18], y: rax|DWORD) size: WORD <|@ <|@
      nr  146  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 18] size: DWORD <|@ <|@
      nr  148  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 20], y: rax|DWORD) size: WORD <|@ <|@
      nr  150  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 19] size: DWORD <|@ <|@
      nr  152  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 22], y: rax|DWORD) size: WORD <|@ <|@
      nr  154  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 20] size: DWORD <|@ <|@
      nr  156  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 24], y: rax|DWORD) size: WORD <|@ <|@
      nr  158  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 21] size: DWORD <|@ <|@
      nr  160  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 26], y: rax|DWORD) size: WORD <|@ <|@
      nr  162  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 22] size: DWORD <|@ <|@
      nr  164  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 28], y: rax|DWORD) size: WORD <|@ <|@
      nr  166  <|@ instruction rdi|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 23] size: DWORD <|@ <|@
      nr  168  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 30], y: rdi|DWORD) size: WORD <|@ <|@
      nr  170  <|@ instruction rbx|DWORD = LEA [rbx|DWORD + 8] size: DWORD <|@ <|@
      nr  172  <|@ instruction r8|DWORD = LEA [r8|DWORD + 8] size: DWORD <|@ <|@
      nr  174  <|@ instruction r11|DWORD = LEA [r11|DWORD + 8] size: DWORD <|@ <|@
      nr  176  <|@ instruction JUMP ~[] destination: B19 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B19" 
    successors "B19" "B21" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4616595334800895638
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  130  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.7768831908782481 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576818467378667812
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction r10|DWORD = MOVZXB [rsi|QWORD[.] + r11|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  190  <|@ instruction MOV (x: [rcx|QWORD[.] + r8|DWORD * 2 + 16], y: r10|DWORD) size: WORD <|@ <|@
      nr  192  <|@ instruction rbx|DWORD = INC rbx|DWORD size: DWORD <|@ <|@
      nr  194  <|@ instruction r8|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr  196  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  198  <|@ instruction JUMP ~[] destination: B22 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B18" "B22" 
    successors "B22" "B24" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607026540791548872
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 16 numbPhis: 3 label: ? <|@ <|@
      nr  184  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-22811|0xffffffffffffa6e5] // MoveResolver resolve mapping <|@ <|@
      nr  214  <|@ instruction JUMP ~[] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B28" "B26" "B25" "B29" "B27" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  238  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  240  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  242  <|@ st <@st|@reference-map: [rcx:0, rsi:0]
live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] r8|DWORD r9|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-25371|0xffffffffffff9ce5] // MoveResolver resolve mapping <|@ <|@
      nr  226  <|@ instruction JUMP ~[] destination: B27 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-25371|0xffffffffffff9ce5] // MoveResolver resolve mapping <|@ <|@
      nr  230  <|@ instruction JUMP ~[] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-16411|0xffffffffffffbfe5] // MoveResolver resolve mapping <|@ <|@
      nr  218  <|@ instruction JUMP ~[] destination: B26 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-20251|0xffffffffffffb0e5] // MoveResolver resolve mapping <|@ <|@
      nr  222  <|@ instruction JUMP ~[] destination: B25 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-22811|0xffffffffffffa6e5] // MoveResolver resolve mapping <|@ <|@
      nr  234  <|@ instruction JUMP ~[] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore        5
     3: iload         5
     5: iload         4
     7: if_icmpge     33
    10: aload_2       
    11: iload_3       
    12: iinc          
    15: aload_0       
    16: iload_1       
    17: iinc          
    20: baload        
    21: sipush        255
    24: iand          
    25: i2c           
    26: castore       
    27: iinc          
    30: goto          3
    33: return        
   <|@
end_bytecodes
begin_cfg
  name "After FinalCodeAnalysisStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B24" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@20983de9 slotKind: QWORD <|@ <|@
      nr   16  <|@ instruction CMPCONSTBRANCH r9|DWORD trueDestinationProbability: 0.027132876049413834 condition: < trueDestination: B0 -> B24 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" "B4" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   20  <|@ st <@st|@reference-map: [rcx:0, rsi:0]
live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] r8|DWORD r9|DWORD - 
>@ <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   22  <|@ instruction r11|DWORD = INC rdx|DWORD size: DWORD <|@ <|@
      nr   24  <|@ instruction rbx|DWORD = DEC r9|DWORD size: DWORD <|@ <|@
      nr   26  <|@ instruction rbx|QWORD = MOV rbx|DWORD size: DWORD <|@ <|@
      nr   28  <|@ instruction rbx|QWORD = DEC rbx|QWORD size: QWORD <|@ <|@
      nr   30  <|@ instruction CMPCONSTBRANCH r9|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B7 falseDestination: B2 -> B4 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B30" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction rdi|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr   36  <|@ instruction rdi|QWORD = ADD (x: rdi|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr   38  <|@ instruction rax|QWORD = MOV r10|DWORD size: DWORD <|@ <|@
      nr   40  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rdi|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B30 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B29" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B7 falseDestination: B5 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" "B5" 
    successors "B12" "B9" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ st <@st|@reference-map: [rcx:0, rsi:0]
live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] r8|DWORD r9|DWORD - 
>@ <|@ instruction rdi|DWORD = MOV [rcx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   58  <|@ instruction rax|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr   60  <|@ instruction CMPCONSTBRANCH r9|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B7 -> B12 falseDestination: B7 -> B9 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B28" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction rbp|QWORD = MOVSXD rax|DWORD size: QWORD <|@ <|@
      nr   66  <|@ instruction rbp|QWORD = ADD (x: rbp|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr   68  <|@ instruction rbx|QWORD = MOV rdi|DWORD size: DWORD <|@ <|@
      nr   70  <|@ instruction CMPBRANCH (x: rbx|QWORD, y: rbp|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B28 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B27" 
    xhandlers
    flags 
    probability 4602434427951715652
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B10 -> B12 falseDestination: B10 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B7" "B10" 
    successors "B13" "B26" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B25" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction r10|DWORD = MOVZXB [rsi|QWORD[.] + rdx|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   96  <|@ instruction MOV (x: [rcx|QWORD[.] + r8|DWORD * 2 + 16], y: r10|DWORD) size: WORD <|@ <|@
      nr   98  <|@ instruction CMP r9|DWORD y: 3 size: DWORD <|@ <|@
      nr  100  <|@ instruction r10|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r9|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  102  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576818467378667813
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction rbx|DWORD = MOVZXB [rsi|QWORD[.] + r8|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  112  <|@ instruction MOV (x: [rcx|QWORD[.] + rax|DWORD * 2 + 16], y: rbx|DWORD) size: WORD <|@ <|@
      nr  114  <|@ instruction r8|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr  116  <|@ instruction rax|DWORD = INC rax|DWORD size: DWORD <|@ <|@
      nr  118  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  120  <|@ instruction JUMP ~[] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607026540791548873
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  106  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B21" "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606938027579086148
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction r10|DWORD = LEA [r9|DWORD - 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  126  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4614810349538580443
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  134  <|@ instruction rdi|DWORD = MOVZXB [rsi|QWORD[.] + r11|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  136  <|@ instruction MOV (x: [rcx|QWORD[.] + r8|DWORD * 2 + 16], y: rdi|DWORD) size: WORD <|@ <|@
      nr  138  <|@ instruction rdi|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr  140  <|@ instruction rdx|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr  142  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 17] size: DWORD <|@ <|@
      nr  144  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 18], y: rax|DWORD) size: WORD <|@ <|@
      nr  146  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 18] size: DWORD <|@ <|@
      nr  148  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 20], y: rax|DWORD) size: WORD <|@ <|@
      nr  150  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 19] size: DWORD <|@ <|@
      nr  152  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 22], y: rax|DWORD) size: WORD <|@ <|@
      nr  154  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 20] size: DWORD <|@ <|@
      nr  156  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 24], y: rax|DWORD) size: WORD <|@ <|@
      nr  158  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 21] size: DWORD <|@ <|@
      nr  160  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 26], y: rax|DWORD) size: WORD <|@ <|@
      nr  162  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 22] size: DWORD <|@ <|@
      nr  164  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 28], y: rax|DWORD) size: WORD <|@ <|@
      nr  166  <|@ instruction rdi|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 23] size: DWORD <|@ <|@
      nr  168  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 30], y: rdi|DWORD) size: WORD <|@ <|@
      nr  170  <|@ instruction rbx|DWORD = LEA [rbx|DWORD + 8] size: DWORD <|@ <|@
      nr  172  <|@ instruction r8|DWORD = LEA [r8|DWORD + 8] size: DWORD <|@ <|@
      nr  174  <|@ instruction r11|DWORD = LEA [r11|DWORD + 8] size: DWORD <|@ <|@
      nr  176  <|@ instruction JUMP ~[] destination: B19 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B19" 
    successors "B19" "B21" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4616595334800895638
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  130  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.7768831908782481 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576818467378667812
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction r10|DWORD = MOVZXB [rsi|QWORD[.] + r11|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  190  <|@ instruction MOV (x: [rcx|QWORD[.] + r8|DWORD * 2 + 16], y: r10|DWORD) size: WORD <|@ <|@
      nr  192  <|@ instruction rbx|DWORD = INC rbx|DWORD size: DWORD <|@ <|@
      nr  194  <|@ instruction r8|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr  196  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  198  <|@ instruction JUMP ~[] destination: B22 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B18" "B22" 
    successors "B22" "B24" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607026540791548872
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 16 numbPhis: 3 label: ? <|@ <|@
      nr  184  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-22811|0xffffffffffffa6e5] // MoveResolver resolve mapping <|@ <|@
      nr  214  <|@ instruction JUMP ~[] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B28" "B26" "B25" "B29" "B27" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  238  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  240  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  242  <|@ st <@st|@reference-map: [rcx:0, rsi:0]
live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] r8|DWORD r9|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-25371|0xffffffffffff9ce5] // MoveResolver resolve mapping <|@ <|@
      nr  226  <|@ instruction JUMP ~[] destination: B27 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-25371|0xffffffffffff9ce5] // MoveResolver resolve mapping <|@ <|@
      nr  230  <|@ instruction JUMP ~[] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-16411|0xffffffffffffbfe5] // MoveResolver resolve mapping <|@ <|@
      nr  218  <|@ instruction JUMP ~[] destination: B26 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-20251|0xffffffffffffb0e5] // MoveResolver resolve mapping <|@ <|@
      nr  222  <|@ instruction JUMP ~[] destination: B25 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-22811|0xffffffffffffa6e5] // MoveResolver resolve mapping <|@ <|@
      nr  234  <|@ instruction JUMP ~[] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore        5
     3: iload         5
     5: iload         4
     7: if_icmpge     33
    10: aload_2       
    11: iload_3       
    12: iinc          
    15: aload_0       
    16: iload_1       
    17: iinc          
    20: baload        
    21: sipush        255
    24: iand          
    25: i2c           
    26: castore       
    27: iinc          
    30: goto          3
    33: return        
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 89842400c0feff4883ec189041817f20000000000f854402000048896c24104183f9010f8cd5000000448b560c448bda41ffc3418bd9ffcb8bdb48ffcb4183f9020f8c1b0000004963fb4803fb418bc2483bc70f8692010000453bd30f86ed0100008b790c418bc0ffc04183f9020f8c190000004863e84803eb8bdf483bdd0f869d0100003bf80f8686010000443bd20f869b010000413bf80f86a1010000440fb65416106646895441104183f90341ba02000000450f4cd1458bc341bb01000000e92c0000006666660f1f8400000000006666669066660f1f840000000000420fb65c061066895c411041ffc0ffc041ffc3453bd30f8e19000000ebe2488b6c24104883c418493ba7500400000f875a010000c3458d51f8418bdb458bd8448bc0e97c0000006666660f1f8400000000006666669066660f1f840000000000420fb67c1e106642897c41104963fb4963d00fb6443e1166894451120fb6443e1266894451140fb6443e1366894451160fb6443e1466894451180fb6443e15668944511a0fb6443e16668944511c0fb67c3e1766897c511e8d5b08458d4008458d5b08443bd37f98e9330000006666660f1f840000000000666666900f1f4000460fb6541e10664689544110ffc341ffc041ffc30f1f84000000000066666690443bcb0f8e15ffffffebd549c7c31800000041bae5a6ffff458997840400004d899f90040000e8000000000f1f84000000000049c7c31800000041bae59cffffebd649c7c31800000041bae59cffffebc749c7c30000000041bae5bfffffebb849c7c30000000041bae5b0ffffeba949c7c31800000041bae5a6ffffeb9a48896c2410e800000000e9adfdfffff4488d0d92feffff49898f68040000e97ffdfffff441c78784040000f5c5ffff49c7879004000000000000e8000000000f1f84000000000041c78784040000f5b5ffff49c7879004000000000000e8000000000f1f840000000000e800000000f4e800000000f4  <||@
  Comment 0 [stack overflow check]  <||@
  Comment 0 VERIFIED_ENTRY  <||@
  Comment 12 FRAME_COMPLETE  <||@
  Comment 12 ENTRY_BARRIER_PATCH  <||@
  Comment 26 block B0 null  <||@
  Comment 26 0 [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 26 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 31 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@20983de9 slotKind: QWORD  <||@
  Comment 31 16 CMPCONSTBRANCH r9|DWORD trueDestinationProbability: 0.027132876049413834 condition: < trueDestination: B0 -> B24 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null  <||@
  Comment 41 block B2 null  <||@
  Comment 41 18 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 41 20 r10|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD state [bci:0]  <||@
  Comment 41 [rcx:0, rsi:0]at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2             |3         |4         |5 
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |rcx|QWORD[.]  |r8|DWORD  |r9|DWORD  |-   <||@
  Comment 41 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 45 22 r11|DWORD = INC rdx|DWORD size: DWORD  <||@
  Comment 51 24 rbx|DWORD = DEC r9|DWORD size: DWORD  <||@
  Comment 56 26 rbx|QWORD = MOV rbx|DWORD size: DWORD  <||@
  Comment 58 28 rbx|QWORD = DEC rbx|QWORD size: QWORD  <||@
  Comment 61 30 CMPCONSTBRANCH r9|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B7 falseDestination: B2 -> B4 y: 2 size: DWORD inlinedY: null  <||@
  Comment 71 block B4 null  <||@
  Comment 71 32 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 71 34 rdi|QWORD = MOVSXD r11|DWORD size: QWORD  <||@
  Comment 74 36 rdi|QWORD = ADD (x: rdi|QWORD, y: rbx|QWORD) size: QWORD  <||@
  Comment 77 38 rax|QWORD = MOV r10|DWORD size: DWORD  <||@
  Comment 80 40 CMPBRANCH (x: rax|QWORD, y: rdi|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B30 size: QWORD  <||@
  Comment 89 block B5 null  <||@
  Comment 89 42 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 89 44 CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B7 falseDestination: B5 -> B29 size: DWORD  <||@
  Comment 98 block B7 null  <||@
  Comment 98 54 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 98 56 rdi|DWORD = MOV [rcx|QWORD[.] + 12] size: DWORD state [bci:0]  <||@
  Comment 98 [rcx:0, rsi:0]at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2             |3         |4         |5 
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |rcx|QWORD[.]  |r8|DWORD  |r9|DWORD  |-   <||@
  Comment 98 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 101 58 rax|DWORD = INC r8|DWORD size: DWORD  <||@
  Comment 106 60 CMPCONSTBRANCH r9|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B7 -> B12 falseDestination: B7 -> B9 y: 2 size: DWORD inlinedY: null  <||@
  Comment 116 block B9 null  <||@
  Comment 116 62 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 116 64 rbp|QWORD = MOVSXD rax|DWORD size: QWORD  <||@
  Comment 119 66 rbp|QWORD = ADD (x: rbp|QWORD, y: rbx|QWORD) size: QWORD  <||@
  Comment 122 68 rbx|QWORD = MOV rdi|DWORD size: DWORD  <||@
  Comment 124 70 CMPBRANCH (x: rbx|QWORD, y: rbp|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B28 size: QWORD  <||@
  Comment 133 block B10 null  <||@
  Comment 133 72 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 133 74 CMPBRANCH (x: rdi|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B10 -> B12 falseDestination: B10 -> B27 size: DWORD  <||@
  Comment 141 block B12 null  <||@
  Comment 141 84 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 141 86 CMPBRANCH (x: r10|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B26 size: DWORD  <||@
  Comment 150 block B13 null  <||@
  Comment 150 88 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 150 90 CMPBRANCH (x: rdi|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B25 size: DWORD  <||@
  Comment 159 block B14 null  <||@
  Comment 159 92 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 159 94 r10|DWORD = MOVZXB [rsi|QWORD[.] + rdx|DWORD * 1 + 16] size: DWORD  <||@
  Comment 165 96 MOV (x: [rcx|QWORD[.] + r8|DWORD * 2 + 16], y: r10|DWORD) size: WORD  <||@
  Comment 171 98 CMP r9|DWORD y: 3 size: DWORD  <||@
  Comment 175 100 r10|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r9|DWORD) condition: <  <||@
  Comment 185 -1 r8|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 188 -1 r11|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 194 102 JUMP ~[] destination: B14 -> B15  <||@
  Comment 199 block B16 loop 0 depth 1 header:10|LoopBegin  <||@
  Comment 199 108 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 224 110 rbx|DWORD = MOVZXB [rsi|QWORD[.] + r8|DWORD * 1 + 16] size: DWORD  <||@
  Comment 230 112 MOV (x: [rcx|QWORD[.] + rax|DWORD * 2 + 16], y: rbx|DWORD) size: WORD  <||@
  Comment 235 114 r8|DWORD = INC r8|DWORD size: DWORD  <||@
  Comment 238 116 rax|DWORD = INC rax|DWORD size: DWORD  <||@
  Comment 240 118 r11|DWORD = INC r11|DWORD size: DWORD  <||@
  Comment 243 120 JUMP ~[] destination: B16 -> B15  <||@
  Comment 243 block B15 loop 0 depth 1 header:10|LoopBegin  <||@
  Comment 243 104 [] = LABEL alignment: 0 numbPhis: 3 label: ?  <||@
  Comment 243 106 CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD  <||@
  Comment 254 block B24 null  <||@
  Comment 254 204 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 254 206 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9  <||@
  Comment 263 POLL_RETURN_FAR  <||@
  Comment 277 block B17 null  <||@
  Comment 277 122 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 277 124 r10|DWORD = LEA [r9|DWORD - 8] size: DWORD  <||@
  Comment 281 -1 rbx|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 284 -1 r11|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 287 -1 r8|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 290 126 JUMP ~[] destination: B17 -> B18  <||@
  Comment 295 block B19 loop 1 depth 1 header:178|LoopBegin  <||@
  Comment 295 132 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 320 134 rdi|DWORD = MOVZXB [rsi|QWORD[.] + r11|DWORD * 1 + 16] size: DWORD  <||@
  Comment 326 136 MOV (x: [rcx|QWORD[.] + r8|DWORD * 2 + 16], y: rdi|DWORD) size: WORD  <||@
  Comment 332 138 rdi|QWORD = MOVSXD r11|DWORD size: QWORD  <||@
  Comment 335 140 rdx|QWORD = MOVSXD r8|DWORD size: QWORD  <||@
  Comment 338 142 rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 17] size: DWORD  <||@
  Comment 343 144 MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 18], y: rax|DWORD) size: WORD  <||@
  Comment 348 146 rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 18] size: DWORD  <||@
  Comment 353 148 MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 20], y: rax|DWORD) size: WORD  <||@
  Comment 358 150 rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 19] size: DWORD  <||@
  Comment 363 152 MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 22], y: rax|DWORD) size: WORD  <||@
  Comment 368 154 rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 20] size: DWORD  <||@
  Comment 373 156 MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 24], y: rax|DWORD) size: WORD  <||@
  Comment 378 158 rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 21] size: DWORD  <||@
  Comment 383 160 MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 26], y: rax|DWORD) size: WORD  <||@
  Comment 388 162 rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 22] size: DWORD  <||@
  Comment 393 164 MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 28], y: rax|DWORD) size: WORD  <||@
  Comment 398 166 rdi|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 23] size: DWORD  <||@
  Comment 403 168 MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 30], y: rdi|DWORD) size: WORD  <||@
  Comment 408 170 rbx|DWORD = LEA [rbx|DWORD + 8] size: DWORD  <||@
  Comment 411 172 r8|DWORD = LEA [r8|DWORD + 8] size: DWORD  <||@
  Comment 415 174 r11|DWORD = LEA [r11|DWORD + 8] size: DWORD  <||@
  Comment 419 176 JUMP ~[] destination: B19 -> B18  <||@
  Comment 419 block B18 loop 1 depth 1 header:178|LoopBegin  <||@
  Comment 419 128 [] = LABEL alignment: 0 numbPhis: 3 label: ?  <||@
  Comment 419 130 CMPBRANCH (x: r10|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.7768831908782481 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B21 size: DWORD  <||@
  Comment 429 block B22 loop 2 depth 1 header:209|LoopBegin  <||@
  Comment 429 186 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 448 188 r10|DWORD = MOVZXB [rsi|QWORD[.] + r11|DWORD * 1 + 16] size: DWORD  <||@
  Comment 454 190 MOV (x: [rcx|QWORD[.] + r8|DWORD * 2 + 16], y: r10|DWORD) size: WORD  <||@
  Comment 460 192 rbx|DWORD = INC rbx|DWORD size: DWORD  <||@
  Comment 462 194 r8|DWORD = INC r8|DWORD size: DWORD  <||@
  Comment 465 196 r11|DWORD = INC r11|DWORD size: DWORD  <||@
  Comment 468 198 JUMP ~[] destination: B22 -> B21  <||@
  Comment 468 block B21 loop 2 depth 1 header:209|LoopBegin  <||@
  Comment 468 182 [] = LABEL alignment: 16 numbPhis: 3 label: ?  <||@
  Comment 480 184 CMPBRANCH (x: r9|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B24 size: DWORD  <||@
  Comment 491 block B30 null  <||@
  Comment 491 212 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 491 -1 r11|QWORD = MOVE input: long[24|0x18]  <||@
  Comment 498 -1 r10|DWORD = MOVE input: int[-22811|0xffffffffffffa6e5]  <||@
  Comment 504 214 JUMP ~[] destination: B30 -> B31  <||@
  Comment 504 block B31 null  <||@
  Comment 504 236 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 504 238 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 511 240 MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD  <||@
  Comment 518 242 DEOPT info [bci:0]  <||@
  Comment 518 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7fba7b6335a8, value=140438496915834]:0x7fba62b8b17a}  <||@
  Comment 523 [rcx:0, rsi:0]at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2             |3         |4         |5 
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |rcx|QWORD[.]  |r8|DWORD  |r9|DWORD  |-   <||@
  Comment 531 block B27 null  <||@
  Comment 531 224 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 531 -1 r11|QWORD = MOVE input: long[24|0x18]  <||@
  Comment 538 -1 r10|DWORD = MOVE input: int[-25371|0xffffffffffff9ce5]  <||@
  Comment 544 226 JUMP ~[] destination: B27 -> B31  <||@
  Comment 546 block B28 null  <||@
  Comment 546 228 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 546 -1 r11|QWORD = MOVE input: long[24|0x18]  <||@
  Comment 553 -1 r10|DWORD = MOVE input: int[-25371|0xffffffffffff9ce5]  <||@
  Comment 559 230 JUMP ~[] destination: B28 -> B31  <||@
  Comment 561 block B26 null  <||@
  Comment 561 216 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 561 -1 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 568 -1 r10|DWORD = MOVE input: int[-16411|0xffffffffffffbfe5]  <||@
  Comment 574 218 JUMP ~[] destination: B26 -> B31  <||@
  Comment 576 block B25 null  <||@
  Comment 576 220 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 576 -1 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 583 -1 r10|DWORD = MOVE input: int[-20251|0xffffffffffffb0e5]  <||@
  Comment 589 222 JUMP ~[] destination: B25 -> B31  <||@
  Comment 591 block B29 null  <||@
  Comment 591 232 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 591 -1 r11|QWORD = MOVE input: long[24|0x18]  <||@
  Comment 598 -1 r10|DWORD = MOVE input: int[-22811|0xffffffffffffa6e5]  <||@
  Comment 604 234 JUMP ~[] destination: B29 -> B31  <||@
  Comment 611 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7fba7b633598, value=140438496784928]:0x7fba62b6b220}  <||@
  Comment 636 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7fba7b6335a0, value=140438496919552]:0x7fba62b8c000}  <||@
  Comment 664 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7fba7b6335a8, value=140438496915834]:0x7fba62b8b17a}  <||@
  Comment 669 [rcx:0, rsi:0]at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2             |3         |4         |5 
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |rcx|QWORD[.]  |r8|DWORD  |r9|DWORD  |-   <||@
  Comment 699 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7fba7b6335a8, value=140438496915834]:0x7fba62b8b17a}  <||@
  Comment 704 [rcx:0, rsi:0]at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2             |3         |4         |5 
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |rcx|QWORD[.]  |r8|DWORD  |r9|DWORD  |-   <||@
  Comment 712 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7fba62cc5f00:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 712 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 718 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7fba7b6335b8, value=140438496915232]:0x7fba62b8af20}  <||@
  Comment 718 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-2908[java.lang.StringLatin1.inflate(byte[], int, char[], int, int)]"
  method "HotSpotCompilation-2908[java.lang.StringLatin1.inflate(byte[], int, char[], int, int)]"
  date 1714038187000
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 7fba6391be00 89842400c0feff4883ec189041817f20030000000f854402000048896c24104183f9010f8cd5000000448b560c448bda41ffc3418bd9ffcb8bdb48ffcb4183f9020f8c1b0000004963fb4803fb418bc2483bc70f8692010000453bd30f86ed0100008b790c418bc0ffc04183f9020f8c190000004863e84803eb8bdf483bdd0f869d0100003bf80f8686010000443bd20f869b010000413bf80f86a1010000440fb65416106646895441104183f90341ba02000000450f4cd1458bc341bb01000000e92c0000006666660f1f8400000000006666669066660f1f840000000000420fb65c061066895c411041ffc0ffc041ffc3453bd30f8e19000000ebe2488b6c24104883c418493ba7500400000f875a010000c3458d51f8418bdb458bd8448bc0e97c0000006666660f1f8400000000006666669066660f1f840000000000420fb67c1e106642897c41104963fb4963d00fb6443e1166894451120fb6443e1266894451140fb6443e1366894451160fb6443e1466894451180fb6443e15668944511a0fb6443e16668944511c0fb67c3e1766897c511e8d5b08458d4008458d5b08443bd37f98e9330000006666660f1f840000000000666666900f1f4000460fb6541e10664689544110ffc341ffc041ffc30f1f84000000000066666690443bcb0f8e15ffffffebd549c7c31800000041bae5a6ffff458997840400004d899f90040000e86ff126ff0f1f84000000000049c7c31800000041bae59cffffebd649c7c31800000041bae59cffffebc749c7c30000000041bae5bfffffebb849c7c30000000041bae5b0ffffeba949c7c31800000041bae5a6ffffeb9a48896c2410e8b8f124ffe9adfdfffff4488d0d92feffff49898f68040000e97fff26fff441c78784040000f5c5ffff49c7879004000000000000e8ddf026ff0f1f84000000000041c78784040000f5b5ffff49c7879004000000000000e8baf026ff0f1f840000000000e8339e3afff4e84dee26fff4f4f4f4f4  <||@
  Comment 0 [stack overflow check]  <||@
  Comment 0 VERIFIED_ENTRY  <||@
  Comment 12 FRAME_COMPLETE  <||@
  Comment 12 ENTRY_BARRIER_PATCH  <||@
  Comment 26 block B0 null  <||@
  Comment 26 0 [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 26 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 31 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@20983de9 slotKind: QWORD  <||@
  Comment 31 16 CMPCONSTBRANCH r9|DWORD trueDestinationProbability: 0.027132876049413834 condition: < trueDestination: B0 -> B24 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null  <||@
  Comment 41 block B2 null  <||@
  Comment 41 18 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 41 20 r10|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD state [bci:0]  <||@
  Comment 41 [rcx:0, rsi:0]at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2             |3         |4         |5 
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |rcx|QWORD[.]  |r8|DWORD  |r9|DWORD  |-   <||@
  Comment 41 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 45 22 r11|DWORD = INC rdx|DWORD size: DWORD  <||@
  Comment 51 24 rbx|DWORD = DEC r9|DWORD size: DWORD  <||@
  Comment 56 26 rbx|QWORD = MOV rbx|DWORD size: DWORD  <||@
  Comment 58 28 rbx|QWORD = DEC rbx|QWORD size: QWORD  <||@
  Comment 61 30 CMPCONSTBRANCH r9|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B7 falseDestination: B2 -> B4 y: 2 size: DWORD inlinedY: null  <||@
  Comment 71 block B4 null  <||@
  Comment 71 32 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 71 34 rdi|QWORD = MOVSXD r11|DWORD size: QWORD  <||@
  Comment 74 36 rdi|QWORD = ADD (x: rdi|QWORD, y: rbx|QWORD) size: QWORD  <||@
  Comment 77 38 rax|QWORD = MOV r10|DWORD size: DWORD  <||@
  Comment 80 40 CMPBRANCH (x: rax|QWORD, y: rdi|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B30 size: QWORD  <||@
  Comment 89 block B5 null  <||@
  Comment 89 42 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 89 44 CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B7 falseDestination: B5 -> B29 size: DWORD  <||@
  Comment 98 block B7 null  <||@
  Comment 98 54 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 98 56 rdi|DWORD = MOV [rcx|QWORD[.] + 12] size: DWORD state [bci:0]  <||@
  Comment 98 [rcx:0, rsi:0]at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2             |3         |4         |5 
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |rcx|QWORD[.]  |r8|DWORD  |r9|DWORD  |-   <||@
  Comment 98 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 101 58 rax|DWORD = INC r8|DWORD size: DWORD  <||@
  Comment 106 60 CMPCONSTBRANCH r9|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B7 -> B12 falseDestination: B7 -> B9 y: 2 size: DWORD inlinedY: null  <||@
  Comment 116 block B9 null  <||@
  Comment 116 62 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 116 64 rbp|QWORD = MOVSXD rax|DWORD size: QWORD  <||@
  Comment 119 66 rbp|QWORD = ADD (x: rbp|QWORD, y: rbx|QWORD) size: QWORD  <||@
  Comment 122 68 rbx|QWORD = MOV rdi|DWORD size: DWORD  <||@
  Comment 124 70 CMPBRANCH (x: rbx|QWORD, y: rbp|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B28 size: QWORD  <||@
  Comment 133 block B10 null  <||@
  Comment 133 72 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 133 74 CMPBRANCH (x: rdi|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B10 -> B12 falseDestination: B10 -> B27 size: DWORD  <||@
  Comment 141 block B12 null  <||@
  Comment 141 84 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 141 86 CMPBRANCH (x: r10|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B26 size: DWORD  <||@
  Comment 150 block B13 null  <||@
  Comment 150 88 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 150 90 CMPBRANCH (x: rdi|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B25 size: DWORD  <||@
  Comment 159 block B14 null  <||@
  Comment 159 92 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 159 94 r10|DWORD = MOVZXB [rsi|QWORD[.] + rdx|DWORD * 1 + 16] size: DWORD  <||@
  Comment 165 96 MOV (x: [rcx|QWORD[.] + r8|DWORD * 2 + 16], y: r10|DWORD) size: WORD  <||@
  Comment 171 98 CMP r9|DWORD y: 3 size: DWORD  <||@
  Comment 175 100 r10|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r9|DWORD) condition: <  <||@
  Comment 185 -1 r8|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 188 -1 r11|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 194 102 JUMP ~[] destination: B14 -> B15  <||@
  Comment 199 block B16 loop 0 depth 1 header:10|LoopBegin  <||@
  Comment 199 108 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 224 110 rbx|DWORD = MOVZXB [rsi|QWORD[.] + r8|DWORD * 1 + 16] size: DWORD  <||@
  Comment 230 112 MOV (x: [rcx|QWORD[.] + rax|DWORD * 2 + 16], y: rbx|DWORD) size: WORD  <||@
  Comment 235 114 r8|DWORD = INC r8|DWORD size: DWORD  <||@
  Comment 238 116 rax|DWORD = INC rax|DWORD size: DWORD  <||@
  Comment 240 118 r11|DWORD = INC r11|DWORD size: DWORD  <||@
  Comment 243 120 JUMP ~[] destination: B16 -> B15  <||@
  Comment 243 block B15 loop 0 depth 1 header:10|LoopBegin  <||@
  Comment 243 104 [] = LABEL alignment: 0 numbPhis: 3 label: ?  <||@
  Comment 243 106 CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD  <||@
  Comment 254 block B24 null  <||@
  Comment 254 204 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 254 206 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9  <||@
  Comment 263 POLL_RETURN_FAR  <||@
  Comment 277 block B17 null  <||@
  Comment 277 122 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 277 124 r10|DWORD = LEA [r9|DWORD - 8] size: DWORD  <||@
  Comment 281 -1 rbx|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 284 -1 r11|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 287 -1 r8|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 290 126 JUMP ~[] destination: B17 -> B18  <||@
  Comment 295 block B19 loop 1 depth 1 header:178|LoopBegin  <||@
  Comment 295 132 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 320 134 rdi|DWORD = MOVZXB [rsi|QWORD[.] + r11|DWORD * 1 + 16] size: DWORD  <||@
  Comment 326 136 MOV (x: [rcx|QWORD[.] + r8|DWORD * 2 + 16], y: rdi|DWORD) size: WORD  <||@
  Comment 332 138 rdi|QWORD = MOVSXD r11|DWORD size: QWORD  <||@
  Comment 335 140 rdx|QWORD = MOVSXD r8|DWORD size: QWORD  <||@
  Comment 338 142 rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 17] size: DWORD  <||@
  Comment 343 144 MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 18], y: rax|DWORD) size: WORD  <||@
  Comment 348 146 rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 18] size: DWORD  <||@
  Comment 353 148 MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 20], y: rax|DWORD) size: WORD  <||@
  Comment 358 150 rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 19] size: DWORD  <||@
  Comment 363 152 MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 22], y: rax|DWORD) size: WORD  <||@
  Comment 368 154 rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 20] size: DWORD  <||@
  Comment 373 156 MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 24], y: rax|DWORD) size: WORD  <||@
  Comment 378 158 rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 21] size: DWORD  <||@
  Comment 383 160 MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 26], y: rax|DWORD) size: WORD  <||@
  Comment 388 162 rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 22] size: DWORD  <||@
  Comment 393 164 MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 28], y: rax|DWORD) size: WORD  <||@
  Comment 398 166 rdi|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 23] size: DWORD  <||@
  Comment 403 168 MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 30], y: rdi|DWORD) size: WORD  <||@
  Comment 408 170 rbx|DWORD = LEA [rbx|DWORD + 8] size: DWORD  <||@
  Comment 411 172 r8|DWORD = LEA [r8|DWORD + 8] size: DWORD  <||@
  Comment 415 174 r11|DWORD = LEA [r11|DWORD + 8] size: DWORD  <||@
  Comment 419 176 JUMP ~[] destination: B19 -> B18  <||@
  Comment 419 block B18 loop 1 depth 1 header:178|LoopBegin  <||@
  Comment 419 128 [] = LABEL alignment: 0 numbPhis: 3 label: ?  <||@
  Comment 419 130 CMPBRANCH (x: r10|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.7768831908782481 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B21 size: DWORD  <||@
  Comment 429 block B22 loop 2 depth 1 header:209|LoopBegin  <||@
  Comment 429 186 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 448 188 r10|DWORD = MOVZXB [rsi|QWORD[.] + r11|DWORD * 1 + 16] size: DWORD  <||@
  Comment 454 190 MOV (x: [rcx|QWORD[.] + r8|DWORD * 2 + 16], y: r10|DWORD) size: WORD  <||@
  Comment 460 192 rbx|DWORD = INC rbx|DWORD size: DWORD  <||@
  Comment 462 194 r8|DWORD = INC r8|DWORD size: DWORD  <||@
  Comment 465 196 r11|DWORD = INC r11|DWORD size: DWORD  <||@
  Comment 468 198 JUMP ~[] destination: B22 -> B21  <||@
  Comment 468 block B21 loop 2 depth 1 header:209|LoopBegin  <||@
  Comment 468 182 [] = LABEL alignment: 16 numbPhis: 3 label: ?  <||@
  Comment 480 184 CMPBRANCH (x: r9|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B24 size: DWORD  <||@
  Comment 491 block B30 null  <||@
  Comment 491 212 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 491 -1 r11|QWORD = MOVE input: long[24|0x18]  <||@
  Comment 498 -1 r10|DWORD = MOVE input: int[-22811|0xffffffffffffa6e5]  <||@
  Comment 504 214 JUMP ~[] destination: B30 -> B31  <||@
  Comment 504 block B31 null  <||@
  Comment 504 236 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 504 238 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 511 240 MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD  <||@
  Comment 518 242 DEOPT info [bci:0]  <||@
  Comment 518 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7fba7b6335a8, value=140438496915834]:0x7fba62b8b17a}  <||@
  Comment 523 [rcx:0, rsi:0]at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2             |3         |4         |5 
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |rcx|QWORD[.]  |r8|DWORD  |r9|DWORD  |-   <||@
  Comment 531 block B27 null  <||@
  Comment 531 224 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 531 -1 r11|QWORD = MOVE input: long[24|0x18]  <||@
  Comment 538 -1 r10|DWORD = MOVE input: int[-25371|0xffffffffffff9ce5]  <||@
  Comment 544 226 JUMP ~[] destination: B27 -> B31  <||@
  Comment 546 block B28 null  <||@
  Comment 546 228 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 546 -1 r11|QWORD = MOVE input: long[24|0x18]  <||@
  Comment 553 -1 r10|DWORD = MOVE input: int[-25371|0xffffffffffff9ce5]  <||@
  Comment 559 230 JUMP ~[] destination: B28 -> B31  <||@
  Comment 561 block B26 null  <||@
  Comment 561 216 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 561 -1 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 568 -1 r10|DWORD = MOVE input: int[-16411|0xffffffffffffbfe5]  <||@
  Comment 574 218 JUMP ~[] destination: B26 -> B31  <||@
  Comment 576 block B25 null  <||@
  Comment 576 220 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 576 -1 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 583 -1 r10|DWORD = MOVE input: int[-20251|0xffffffffffffb0e5]  <||@
  Comment 589 222 JUMP ~[] destination: B25 -> B31  <||@
  Comment 591 block B29 null  <||@
  Comment 591 232 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 591 -1 r11|QWORD = MOVE input: long[24|0x18]  <||@
  Comment 598 -1 r10|DWORD = MOVE input: int[-22811|0xffffffffffffa6e5]  <||@
  Comment 604 234 JUMP ~[] destination: B29 -> B31  <||@
  Comment 611 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7fba7b633598, value=140438496784928]:0x7fba62b6b220}  <||@
  Comment 636 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7fba7b6335a0, value=140438496919552]:0x7fba62b8c000}  <||@
  Comment 664 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7fba7b6335a8, value=140438496915834]:0x7fba62b8b17a}  <||@
  Comment 669 [rcx:0, rsi:0]at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2             |3         |4         |5 
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |rcx|QWORD[.]  |r8|DWORD  |r9|DWORD  |-   <||@
  Comment 699 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7fba7b6335a8, value=140438496915834]:0x7fba62b8b17a}  <||@
  Comment 704 [rcx:0, rsi:0]at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2             |3         |4         |5 
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |rcx|QWORD[.]  |r8|DWORD  |r9|DWORD  |-   <||@
  Comment 712 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7fba62cc5f00:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 712 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 718 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7fba7b6335b8, value=140438496915232]:0x7fba62b8af20}  <||@
  Comment 718 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
